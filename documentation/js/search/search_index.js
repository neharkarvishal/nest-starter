var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/controllers/AppController.html",[0,1.907,1,2.666]],["body/controllers/AppController.html",[0,3.157,1,4.415,2,2.708,3,0.176,4,0.151,5,0.151,6,4.376,7,0.335,8,2.695,9,5.003,10,2.708,11,0.017,12,1.648,13,5.073,14,2.078,15,0.596,16,0.987,17,1.724,18,4.119,19,4.376,20,0.176,21,0.88,22,3.302,23,1.804,24,1.89,25,5.073,26,0.011,27,0.014,28,0.011]],["title/modules/AppModule.html",[29,1.712,30,2.666]],["body/modules/AppModule.html",[1,4.367,2,2.949,3,0.144,4,0.124,5,0.124,11,0.017,16,1.151,17,1.417,18,4.275,19,3.596,20,0.144,21,0.723,26,0.009,27,0.012,28,0.009,29,2.805,30,5.263,31,2.225,32,2.366,33,2.713,34,2.713,35,2.366,36,3.755,37,2.526,38,3.596,39,3.596,40,3.596,41,4.591,42,4.275,43,3.596,44,2.713,45,2.713,46,4.168,47,4.033,48,4.266,49,3.596,50,2.938,51,4.766,52,2.938,53,3.596,54,3.596,55,4.168,56,4.168,57,3.596]],["title/injectables/AppService.html",[18,2.292,58,1.712]],["body/injectables/AppService.html",[3,0.183,4,0.157,5,0.157,7,0.349,8,2.766,9,5.076,11,0.017,12,1.719,14,2.167,15,0.612,16,0.833,17,1.798,18,3.895,20,0.183,21,0.918,24,1.971,26,0.012,27,0.014,28,0.012,58,2.91,59,3.206,60,4.564,61,5.29,62,4.564,63,4.564]],["title/classes/Base.html",[21,0.656,64,2.02]],["body/classes/Base.html",[3,0.116,4,0.1,5,0.1,7,0.221,10,3.213,11,0.017,12,1.956,15,0.646,16,0.871,20,0.165,21,0.826,26,0.007,27,0.01,28,0.007,64,2.541,65,1.69,66,2.59,67,2.398,68,3.139,69,3.354,70,3.139,71,0.677,72,1.262,73,4.271,74,4.271,75,2.953,76,4.271,77,0.577,78,5.645,79,5.53,80,5.099,81,5.696,82,5.696,83,5.696,84,5.696,85,3.354,86,3.354,87,2.701,88,3.354,89,3.354,90,1.354,91,2.893,92,3.354,93,3.354,94,3.354,95,3.354,96,3.675,97,5.193,98,2.032,99,2.893,100,2.893,101,4.105,102,4.105,103,4.105,104,4.105,105,1.903,106,3.097,107,2.893,108,3.675,109,2.893,110,4.771]],["title/classes/Cat.html",[21,0.656,111,2.666]],["body/classes/Cat.html",[3,0.203,4,0.174,5,0.174,11,0.016,20,0.203,21,1.017,26,0.013,27,0.015,28,0.013,65,2.955,111,4.816,112,5.058]],["title/controllers/CatsController.html",[0,1.907,113,2.666]],["body/controllers/CatsController.html",[0,1.724,2,1.827,3,0.119,4,0.102,5,0.102,7,0.226,8,2.077,10,3.419,11,0.017,12,2.081,14,2.623,15,0.675,16,0.956,17,1.163,20,0.119,21,0.594,22,2.227,23,1.217,24,2.385,26,0.007,27,0.01,28,0.007,72,1.105,75,3.548,77,0.505,113,3.401,114,2.952,115,1.942,116,2.952,117,3.141,118,3.953,119,3.401,120,4.164,121,3.141,122,2.952,123,4.027,124,4.824,125,3.421,126,3.061,127,1.515,128,3.421,129,2.411,130,4.164,131,3.421,132,2.952,133,4.164,134,3.421,135,2.227,136,4.539,137,4.164,138,3.421,139,4.164,140,2.952,141,2.642,142,2.411,143,3.388,144,2.952,145,2.227,146,3.727,147,2.411,148,3.421,149,2.952,150,3.421,151,3.421,152,3.421,153,3.421,154,3.421,155,3.421,156,3.421,157,3.421]],["title/modules/CatsModule.html",[29,1.712,41,2.462]],["body/modules/CatsModule.html",[2,3.269,3,0.169,4,0.146,5,0.146,11,0.017,16,1.053,17,1.662,20,0.169,21,0.849,26,0.011,27,0.013,28,0.011,29,3.026,31,2.611,32,2.775,33,3.183,34,3.183,35,2.775,36,4.051,37,2.963,41,4.791,43,3.985,44,3.183,45,3.183,113,4.711,143,4.46,144,4.219,158,4.219,159,4.219,160,4.89,161,4.89]],["title/injectables/CatsService.html",[58,1.712,143,2.292]],["body/injectables/CatsService.html",[3,0.125,4,0.108,5,0.108,7,0.239,8,2.161,11,0.017,12,2.125,14,2.842,15,0.623,16,0.908,17,1.231,20,0.125,21,0.629,24,2.436,26,0.008,27,0.011,28,0.008,58,2.274,59,2.195,72,1.133,75,3.613,77,0.518,90,2.044,111,4.388,116,3.125,117,3.269,118,4.052,119,3.54,120,4.333,121,3.269,122,4.333,123,3.963,126,3.138,127,1.553,129,3.54,132,4.333,135,3.269,136,4.516,143,3.044,145,2.358,146,3.879,147,2.553,162,3.125,163,3.622,164,3.622,165,3.622,166,3.622,167,3.622,168,6.539,169,3.622,170,2.195,171,3.622,172,3.622]],["title/modules/CoreModule.html",[29,1.712,173,2.921]],["body/modules/CoreModule.html",[3,0.174,4,0.149,5,0.149,11,0.017,16,0.98,17,1.705,20,0.174,21,0.871,26,0.011,27,0.014,28,0.011,29,2.816,31,2.678,36,3.04,37,3.04,48,3.874,77,0.417,173,4.805,174,5.016,175,5.016,176,4.328,177,5.016,178,5.016,179,5.016,180,5.016,181,2.847,182,5.016,183,5.016,184,5.016,185,5.367,186,5.016]],["title/classes/CreateCatDto.html",[21,0.656,123,2.292]],["body/classes/CreateCatDto.html",[3,0.202,4,0.174,5,0.174,11,0.016,20,0.202,21,1.013,26,0.013,27,0.015,28,0.013,65,2.942,123,4.13,145,3.799,187,4.508]],["title/modules/CronModule.html",[29,1.712,42,2.292]],["body/modules/CronModule.html",[3,0.159,4,0.137,5,0.137,11,0.017,16,0.927,17,1.561,20,0.159,21,0.797,26,0.01,27,0.013,28,0.01,29,2.939,31,2.452,32,2.606,33,2.989,34,2.989,35,2.606,36,3.935,37,3.935,42,4.462,43,3.83,44,2.989,45,2.989,188,3.961,189,3.961,190,3.961,191,5.003,192,4.592,193,4.592,194,3.83,195,3.83,196,3.83,197,3.83,198,4.544,199,4.544,200,4.544]],["title/injectables/CronService.html",[58,1.712,191,2.462]],["body/injectables/CronService.html",[3,0.14,4,0.12,5,0.12,7,0.267,8,2.33,10,3.258,11,0.017,12,2.118,14,2.5,16,0.853,17,1.374,20,0.14,21,0.702,23,2.171,26,0.009,27,0.012,28,0.009,50,2.85,58,2.451,59,2.451,71,0.771,170,3.281,191,3.524,201,3.489,202,5.265,203,6.518,204,6.518,205,6.518,206,6.518,207,5.414,208,4.044,209,5.265,210,5.414,211,4.044,212,5.414,213,4.044,214,3.123,215,2.85,216,5.414,217,4.044,218,4.044,219,4.044,220,4.044,221,6.103,222,4.044,223,4.044,224,3.489,225,5.414,226,4.044,227,3.489]],["title/classes/CrudController.html",[21,0.656,228,2.921]],["body/classes/CrudController.html",[3,0.068,4,0.058,5,0.058,7,0.129,8,1.362,10,2.674,11,0.017,12,1.74,14,2.051,15,0.576,16,0.923,17,0.667,20,0.068,21,0.34,22,1.277,23,0.698,24,1.865,26,0.004,27,0.007,28,0.004,64,1.047,65,0.989,72,0.974,75,3.007,77,0.503,98,1.188,105,1.113,106,1.277,108,3.525,117,2.971,118,2.06,121,3.26,124,2.73,126,2.699,127,1.336,130,1.692,133,1.692,135,1.277,137,1.692,139,4.619,140,1.692,141,1.515,142,3.53,149,1.692,170,1.918,228,2.444,229,1.692,230,5.219,231,3.164,232,1.277,233,2.73,234,1.961,235,2.971,236,1.961,237,2.23,238,1.515,239,3.525,240,4.675,241,5.008,242,4.565,243,6.215,244,4.061,245,5.277,246,5.354,247,1.961,248,4.565,249,4.565,250,4.565,251,4.565,252,4.565,253,1.961,254,1.961,255,3.245,256,4.045,257,1.692,258,1.961,259,1.961,260,1.961,261,2.444,262,3.217,263,3.938,264,1.961,265,4.86,266,1.961,267,1.961,268,1.515,269,1.188,270,1.961,271,1.961,272,3.164,273,1.961,274,1.961,275,3.525,276,3.164,277,1.961,278,1.961,279,1.961,280,1.961,281,1.961,282,1.961,283,5.354,284,6.581,285,3.164,286,1.515,287,1.515,288,1.692,289,1.692,290,1.51,291,2.23,292,1.692,293,6.475,294,1.961,295,1.961,296,1.961,297,1.961,298,5.008,299,3.164,300,1.961,301,1.961,302,1.69,303,3.978,304,1.961,305,1.961,306,3.164,307,1.961,308,3.164,309,3.164,310,1.961,311,1.961,312,1.961,313,3.164,314,1.961,315,1.961,316,1.961,317,1.961,318,1.961,319,1.961,320,1.961,321,1.961]],["title/classes/CrudService.html",[21,0.656,237,2.666]],["body/classes/CrudService.html",[3,0.056,4,0.048,5,0.048,7,0.106,8,1.159,11,0.017,12,1.941,14,2.308,15,0.613,16,0.941,17,0.548,20,0.056,21,0.28,23,0.573,24,2.321,26,0.004,27,0.006,28,0.004,64,0.86,65,0.812,69,1.898,71,0.383,72,1.025,75,2.602,77,0.483,90,1.804,105,0.915,106,1.049,117,1.753,118,1.753,119,2.445,121,2.258,126,2.839,127,1.405,129,1.136,135,1.049,141,1.245,142,2.445,170,2.732,181,2.766,185,1.39,194,2.258,195,2.258,196,2.258,197,1.753,198,2.08,199,2.08,200,1.245,230,5.405,232,1.049,233,2.323,235,2.258,237,1.898,238,2.08,239,3.13,240,5.099,245,4.188,255,0.977,256,4.246,261,2.08,265,2.993,268,2.08,269,2.456,275,3.13,286,1.245,287,1.245,288,1.39,289,1.39,290,0.769,291,1.136,322,1.39,323,3.469,324,2.323,325,4.873,326,3.469,327,3.469,328,1.39,329,3.764,330,2.693,331,2.323,332,4.462,333,1.611,334,1.611,335,1.611,336,5.376,337,1.611,338,2.693,339,1.611,340,2.693,341,2.693,342,2.693,343,2.693,344,1.611,345,5.376,346,1.611,347,1.611,348,1.611,349,2.693,350,1.611,351,0.86,352,4.053,353,1.611,354,1.611,355,2.693,356,1.611,357,1.39,358,2.693,359,1.39,360,1.611,361,1.611,362,1.39,363,1.39,364,1.136,365,4.873,366,1.611,367,1.611,368,2.693,369,1.611,370,2.693,371,1.753,372,4.678,373,1.632,374,1.611,375,1.611,376,2.323,377,4.053,378,2.323,379,1.611,380,1.611,381,4.053,382,2.693,383,2.693,384,1.39,385,1.611,386,1.611,387,1.611,388,1.611,389,4.053,390,2.693,391,2.693,392,1.611,393,2.693,394,1.611,395,1.611,396,1.611,397,1.611,398,1.39,399,3.469,400,3.469,401,2.693,402,2.693,403,1.611,404,1.611,405,1.611,406,1.611,407,1.611,408,1.611,409,1.39,410,1.611]],["title/injectables/DBHelper.html",[58,1.712,411,2.921]],["body/injectables/DBHelper.html",[3,0.13,4,0.112,5,0.112,7,0.248,8,2.219,11,0.017,12,2.056,14,2.112,15,0.68,16,0.926,17,1.279,20,0.13,21,0.653,22,2.449,24,1.921,26,0.008,27,0.011,28,0.008,58,2.334,59,2.28,71,0.734,72,1.07,77,0.526,105,2.136,126,2.965,127,1.467,181,3.591,230,4.543,232,2.449,263,5.459,302,2.009,328,3.247,329,5.287,372,3.247,411,3.982,412,3.247,413,5.882,414,5.156,415,5.156,416,5.156,417,3.763,418,5.156,419,6.328,420,3.763,421,5.156,422,3.763,423,3.247,424,3.763,425,3.763,426,3.763,427,2.652,428,5.882,429,5.156,430,3.763,431,3.763,432,3.763,433,3.763,434,3.763,435,3.763,436,3.763,437,2.906,438,3.763]],["title/interfaces/FileStorageOption.html",[439,0.053,440,2.292]],["body/interfaces/FileStorageOption.html",[3,0.129,4,0.11,5,0.196,7,0.245,11,0.017,15,0.741,20,0.229,26,0.008,27,0.011,28,0.008,71,0.727,72,1.24,77,0.523,90,1.056,115,3.57,127,0.926,439,0.088,440,3.095,441,0.614,442,2.416,443,2.416,444,4.434,445,4.649,446,4.434,447,4.805,448,4.434,449,1.32,450,3.325,451,3.6,452,2.249,453,2.616,454,2.616,455,2.249,456,2.616,457,2.416,458,4.116,459,2.616,460,2.616,461,2.616,462,2.616,463,2.616,464,2.616,465,2.616,466,2.616,467,3.6,468,2.616,469,2.616,470,2.249,471,2.616,472,2.616,473,2.616,474,2.616]],["title/interfaces/FileSystem.html",[439,0.053,452,2.292]],["body/interfaces/FileSystem.html",[3,0.138,4,0.119,5,0.201,7,0.264,11,0.017,15,0.743,20,0.234,26,0.009,27,0.012,28,0.009,71,0.765,72,0.977,77,0.447,90,1.137,115,2.268,127,0.997,439,0.091,440,2.422,441,0.661,442,2.601,443,2.601,444,2.816,445,3.785,446,2.816,447,3.785,448,3.785,449,1.421,450,3.496,451,3.785,452,3.255,453,4.572,454,4.572,455,2.422,456,2.816,457,2.601,458,4.276,459,2.816,460,2.816,461,2.816,462,2.816,463,2.816,464,2.816,465,2.816,466,2.816,467,3.785,468,2.816,469,2.816,470,2.422,471,2.816,472,2.816,473,2.816,474,2.816]],["title/controllers/HealthController.html",[0,1.907,47,2.462]],["body/controllers/HealthController.html",[0,1.792,2,1.899,3,0.123,4,0.106,5,0.106,7,0.235,8,2.457,10,1.899,11,0.017,12,1.855,14,2.53,15,0.544,16,0.899,17,1.209,20,0.123,21,0.617,24,1.325,26,0.008,27,0.011,28,0.008,47,4.02,52,2.506,69,2.506,72,0.647,77,0.296,98,2.155,115,2.018,126,1.792,127,0.887,194,2.314,195,2.314,196,2.314,202,4.278,209,5.329,232,2.314,256,3.227,269,2.155,398,3.068,409,5.604,475,3.068,476,4.958,477,6.176,478,6.495,479,6.727,480,3.556,481,3.556,482,4.958,483,3.556,484,3.556,485,3.556,486,4.958,487,4.958,488,4.958,489,3.556,490,3.556,491,3.556,492,3.556,493,3.556,494,3.556,495,3.556,496,3.556,497,3.556,498,3.556,499,3.556,500,3.556,501,4.958,502,4.958,503,3.556,504,3.556,505,4.958,506,3.556,507,3.556,508,3.556,509,3.556,510,2.506,511,2.155,512,3.556,513,3.556,514,3.068,515,3.556,516,3.556,517,3.556,518,3.556,519,3.556,520,3.556,521,3.556,522,3.556,523,3.556]],["title/interfaces/IAddress.html",[439,0.053,524,2.147]],["body/interfaces/IAddress.html",[3,0.13,4,0.112,5,0.112,7,0.248,11,0.017,15,0.71,20,0.23,24,1.402,26,0.008,27,0.011,28,0.008,67,2.599,71,0.734,72,0.938,77,0.569,87,4.389,90,1.886,439,0.089,441,0.622,511,2.28,524,3.762,525,2.28,526,2.28,527,4.672,528,4.672,529,4.672,530,4.315,531,4.672,532,3.565,533,2.652,534,2.652,535,2.28,536,2.28,537,3.634,538,2.28]],["title/interfaces/IAuthLoginInput.html",[439,0.053,539,1.907]],["body/interfaces/IAuthLoginInput.html",[3,0.119,4,0.102,5,0.102,7,0.226,11,0.017,15,0.753,16,0.539,20,0.246,26,0.007,27,0.01,28,0.007,71,0.687,77,0.505,127,0.854,351,3.419,439,0.096,441,0.566,449,1.717,539,2.432,540,1.827,541,3.447,542,4.826,543,2.623,544,1.632,545,2.668,546,3.447,547,3.447,548,3.634,549,3.447,550,2.613,551,2.897,552,3.447,553,3.447,554,1.942,555,1.724,556,1.942,557,1.724,558,2.577,559,1.942,560,1.942,561,1.942,562,1.724,563,1.942,564,1.724,565,1.724,566,1.942,567,1.942,568,1.942,569,1.942,570,2.739,571,2.739]],["title/interfaces/IAuthResponse.html",[439,0.053,562,1.907]],["body/interfaces/IAuthResponse.html",[3,0.119,4,0.102,5,0.102,7,0.227,11,0.017,15,0.754,16,0.542,20,0.246,26,0.007,27,0.011,28,0.007,71,0.689,77,0.403,127,0.858,351,2.586,439,0.096,441,0.569,449,1.723,539,1.733,540,1.836,541,1.952,543,2.628,544,1.641,545,3.061,546,3.454,547,3.454,548,3.641,549,3.454,550,2.619,551,2.904,552,3.454,553,3.454,554,1.952,555,1.733,556,1.952,557,1.733,558,3.425,559,1.952,560,1.952,561,1.952,562,2.441,563,3.454,564,1.733,565,1.733,566,1.952,567,1.952,568,1.952,569,1.952,570,2.749,571,2.749]],["title/interfaces/IBaseEntityModel.html",[70,2.147,439,0.053]],["body/interfaces/IBaseEntityModel.html",[3,0.162,4,0.139,5,0.139,7,0.309,11,0.017,20,0.162,23,2.332,26,0.01,27,0.013,28,0.01,70,3.383,71,0.849,72,1.363,73,5.329,74,5.329,75,3.684,76,5.329,77,0.574,78,5.839,87,3.721,90,1.866,439,0.066,441,0.775,572,4.044,573,4.044]],["title/interfaces/ICountry.html",[439,0.053,574,2.921]],["body/interfaces/ICountry.html",[3,0.178,4,0.153,5,0.153,7,0.34,11,0.017,15,0.71,16,0.811,20,0.178,26,0.011,27,0.014,28,0.011,64,2.75,67,3.187,70,3.883,71,0.9,77,0.526,439,0.072,441,0.852,530,4.644,574,4.883,575,4.443,576,6.156,577,4.443]],["title/interfaces/ICrudService.html",[235,2.462,439,0.053]],["body/interfaces/ICrudService.html",[3,0.114,4,0.098,5,0.098,7,0.218,8,2.026,11,0.017,12,2.135,14,2.691,15,0.522,16,0.864,20,0.114,26,0.007,27,0.01,28,0.007,72,1.195,75,3.374,77,0.546,90,1.561,105,1.875,117,3.065,118,3.065,119,3.866,121,3.571,126,3.311,127,1.639,129,2.329,135,2.151,142,3.319,235,3.065,238,3.637,239,4.618,240,5.63,255,3.623,256,4.745,257,4.062,261,3.637,268,3.637,269,3.324,275,4.618,286,2.552,287,2.552,290,1.577,324,4.062,331,4.062,332,5.833,336,5.158,345,5.833,362,2.851,363,2.851,439,0.046,441,0.547,578,2.851,579,3.305,580,3.305,581,3.305,582,3.305,583,3.305,584,3.305,585,3.305]],["title/interfaces/ICurrency.html",[439,0.053,586,2.921]],["body/interfaces/ICurrency.html",[3,0.178,4,0.153,5,0.153,7,0.34,11,0.017,15,0.71,16,0.811,20,0.178,26,0.011,27,0.014,28,0.011,64,2.75,67,3.187,70,3.883,71,0.9,77,0.526,439,0.072,441,0.852,576,6.156,577,4.443,586,4.883,587,4.443,588,7.135]],["title/interfaces/IGeoLocationCreateObject.html",[439,0.053,536,2.292]],["body/interfaces/IGeoLocationCreateObject.html",[3,0.149,4,0.128,5,0.128,7,0.285,11,0.017,15,0.637,20,0.24,24,1.607,26,0.009,27,0.012,28,0.009,67,3.176,71,0.804,72,1.028,77,0.47,87,4.264,90,1.793,439,0.094,441,0.714,511,2.614,524,3.939,525,2.614,526,2.614,527,3.983,528,3.983,529,3.983,530,3.678,531,3.983,532,4.206,533,3.041,534,3.041,535,2.614,536,3.424,537,4.892,538,2.614]],["title/interfaces/IGeolocationUpdateObject.html",[439,0.053,538,2.292]],["body/interfaces/IGeolocationUpdateObject.html",[3,0.149,4,0.128,5,0.128,7,0.285,11,0.017,15,0.637,20,0.24,24,1.607,26,0.009,27,0.012,28,0.009,67,3.176,71,0.804,72,1.028,77,0.47,87,4.264,90,1.793,439,0.094,441,0.714,511,2.614,524,3.939,525,2.614,526,2.614,527,3.983,528,3.983,529,3.983,530,3.678,531,3.983,532,4.206,533,3.041,534,3.041,535,2.614,536,2.614,537,4.892,538,3.424]],["title/interfaces/ILanguage.html",[439,0.053,589,2.462]],["body/interfaces/ILanguage.html",[3,0.145,4,0.125,5,0.125,7,0.277,11,0.017,15,0.738,20,0.215,26,0.009,27,0.012,28,0.009,71,0.79,72,1.38,77,0.587,127,1.763,244,3.903,439,0.087,441,0.694,589,3.61,590,2.956,591,5.312,592,5.312,593,5.312,594,5.108,595,3.848,596,2.73,597,2.73]],["title/interfaces/ILanguageFindInput.html",[439,0.053,597,2.462]],["body/interfaces/ILanguageFindInput.html",[3,0.149,4,0.128,5,0.128,7,0.285,11,0.017,15,0.741,20,0.218,26,0.009,27,0.012,28,0.009,71,0.804,72,1.367,77,0.577,127,1.777,244,3.939,439,0.088,441,0.714,589,2.808,590,3.041,591,5.361,592,5.361,593,5.361,594,3.332,595,3.706,596,2.808,597,3.678]],["title/interfaces/ILanguageName.html",[439,0.053,596,2.462]],["body/interfaces/ILanguageName.html",[3,0.169,4,0.145,5,0.145,7,0.321,11,0.017,15,0.734,20,0.231,26,0.011,27,0.013,28,0.011,71,0.87,72,1.112,77,0.405,127,1.835,244,3.467,439,0.093,441,0.806,589,3.171,590,3.434,591,4.718,592,4.718,593,4.718,594,3.763,595,3.563,596,3.976,597,3.171]],["title/interfaces/IListQueryInput.html",[439,0.053,598,2.462]],["body/interfaces/IListQueryInput.html",[3,0.148,4,0.127,5,0.127,7,0.281,11,0.017,12,1.821,15,0.596,20,0.217,23,2.459,26,0.009,27,0.012,28,0.009,68,3.181,71,0.798,72,1.291,77,0.521,90,1.893,255,3.396,290,2.033,302,3.553,371,3.648,373,3.795,427,5.002,439,0.088,441,0.705,510,3.002,598,3.648,599,3.002,600,5.139,601,2.773,602,2.773,603,3.29,604,3.002,605,3.002,606,3.002,607,2.773,608,3.29,609,3.29]],["title/interfaces/ILocation.html",[439,0.053,532,2.292]],["body/interfaces/ILocation.html",[3,0.149,4,0.128,5,0.128,7,0.284,11,0.017,15,0.636,20,0.24,24,1.602,26,0.009,27,0.012,28,0.009,67,2.842,71,0.803,77,0.577,87,4.262,90,2.064,439,0.093,441,0.711,511,2.606,524,3.79,525,2.606,526,2.606,527,3.974,528,3.974,529,3.974,530,3.67,531,3.974,532,4.047,533,3.031,534,4.707,535,2.606,536,2.606,537,3.974,538,2.606]],["title/interfaces/IPagination.html",[290,1.805,439,0.053]],["body/interfaces/IPagination.html",[3,0.167,4,0.143,5,0.143,7,0.318,11,0.017,20,0.167,23,2.158,26,0.01,27,0.013,28,0.01,71,0.864,77,0.505,90,2.044,244,2.736,290,2.895,291,3.397,302,3.546,371,4.773,373,4.563,439,0.085,441,0.797,604,4.277,605,4.277,606,4.277,607,3.95,610,4.159,611,4.159]],["title/interfaces/IPagination-1.html",[290,1.504,437,2.435,439,0.044]],["body/interfaces/IPagination-1.html",[3,0.15,4,0.129,5,0.129,7,0.286,11,0.017,12,1.411,15,0.413,20,0.219,23,2.474,26,0.009,27,0.012,28,0.009,68,2.464,71,0.808,77,0.472,90,2.068,255,2.631,290,2.707,302,3.579,371,4.644,373,4.467,427,3.999,439,0.088,441,0.718,510,3.06,598,2.826,599,3.06,600,3.353,601,2.826,602,2.826,603,3.353,604,3.999,605,3.999,606,3.999,607,3.693,608,3.353,609,3.353]],["title/interfaces/IPaginationInput.html",[439,0.053,601,2.462]],["body/interfaces/IPaginationInput.html",[3,0.152,4,0.131,5,0.131,7,0.29,11,0.017,12,1.429,15,0.419,20,0.22,23,2.484,26,0.01,27,0.012,28,0.01,68,2.496,71,0.815,72,1.226,77,0.476,90,2.103,255,2.665,290,2.098,302,3.055,371,3.725,373,3.855,427,4.033,439,0.089,441,0.727,510,3.1,598,2.863,599,3.1,600,3.397,601,3.725,602,4.385,603,5.203,604,3.1,605,3.1,606,3.1,607,2.863,608,3.397,609,3.397]],["title/interfaces/IRole.html",[439,0.053,543,1.549]],["body/interfaces/IRole.html",[3,0.165,4,0.141,5,0.141,7,0.314,11,0.017,15,0.628,16,0.749,20,0.208,26,0.01,27,0.013,28,0.01,71,0.856,77,0.5,127,1.73,439,0.066,441,0.786,449,1.69,543,2.464,550,2.045,612,4.1,613,6.935,614,4.202,615,4.753,616,4.753,617,6.014,618,3.915,619,6.014,620,6.014,621,6.014,622,6.014,623,6.014]],["title/interfaces/IRolePermission.html",[439,0.053,614,2.292]],["body/interfaces/IRolePermission.html",[3,0.084,4,0.072,5,0.072,7,0.16,11,0.017,15,0.601,16,0.382,20,0.192,23,0.862,26,0.005,27,0.008,28,0.005,71,0.533,77,0.427,181,1.376,439,0.064,441,0.401,449,0.862,543,2.103,544,1.157,550,2.523,551,2.648,595,2.963,614,2.267,618,1.578,624,1.578,625,1.578,626,4.308,627,4.286,628,1.578,629,1.578,630,1.872,631,2.889,632,2.889,633,2.889,634,2.889,635,2.889,636,2.889,637,2.889,638,2.889,639,2.889,640,2.889,641,2.889,642,2.889,643,2.889,644,2.889,645,2.889,646,2.889,647,2.889,648,2.889,649,2.889,650,2.889,651,2.889,652,2.889,653,2.889,654,2.889,655,2.889,656,2.889,657,2.889,658,2.889,659,2.889,660,2.889,661,2.889,662,1.872,663,1.872,664,1.872,665,1.872,666,2.889,667,2.889,668,2.889,669,2.889,670,2.889,671,2.889,672,2.889,673,2.889,674,2.889,675,2.889,676,2.889,677,2.889,678,2.889,679,2.889,680,2.889,681,2.889,682,2.889,683,2.889,684,2.889,685,2.889,686,2.889,687,2.889,688,2.889,689,2.889,690,2.889,691,1.578,692,2.636,693,1.709,694,1.709,695,1.709,696,1.709,697,1.709,698,1.709,699,1.709,700,1.709,701,1.709,702,1.709,703,1.709,704,1.709,705,1.709,706,1.709,707,1.709,708,1.709,709,2.636,710,2.636,711,2.636,712,2.636,713,2.636,714,1.709,715,1.709,716,1.709,717,1.709,718,1.709,719,1.709,720,1.709,721,1.709,722,1.709,723,2.636,724,1.709,725,1.709,726,1.709,727,1.709,728,1.709,729,1.709,730,1.709,731,1.709,732,1.709,733,1.709,734,1.709,735,1.709,736,1.709,737,1.709,738,1.709,739,1.709,740,1.709,741,1.709,742,1.709,743,1.709,744,1.709,745,1.709,746,1.709,747,1.709,748,1.709,749,1.709,750,1.709,751,1.709,752,1.709]],["title/interfaces/IRolePermissionCreateInput.html",[439,0.053,628,2.462]],["body/interfaces/IRolePermissionCreateInput.html",[3,0.085,4,0.073,5,0.073,7,0.162,11,0.017,15,0.603,16,0.387,20,0.193,23,0.873,26,0.005,27,0.008,28,0.005,71,0.538,77,0.383,181,1.393,439,0.064,441,0.406,449,0.873,543,1.547,544,1.171,550,1.981,551,2.663,595,2.98,614,1.488,618,1.598,624,1.598,625,1.598,626,4.327,627,4.31,628,2.459,629,1.598,630,1.896,631,2.917,632,2.917,633,2.917,634,2.917,635,2.917,636,2.917,637,2.917,638,2.917,639,2.917,640,2.917,641,2.917,642,2.917,643,2.917,644,2.917,645,2.917,646,2.917,647,2.917,648,2.917,649,2.917,650,2.917,651,2.917,652,2.917,653,2.917,654,2.917,655,2.917,656,2.917,657,2.917,658,2.917,659,2.917,660,2.917,661,2.917,662,1.896,663,1.896,664,1.896,665,1.896,666,2.917,667,2.917,668,2.917,669,2.917,670,2.917,671,2.917,672,2.917,673,2.917,674,2.917,675,2.917,676,2.917,677,2.917,678,2.917,679,2.917,680,2.917,681,2.917,682,2.917,683,2.917,684,2.917,685,2.917,686,2.917,687,2.917,688,2.917,689,2.917,690,2.917,691,1.598,692,2.662,693,1.73,694,1.73,695,1.73,696,1.73,697,1.73,698,1.73,699,1.73,700,1.73,701,1.73,702,1.73,703,1.73,704,1.73,705,1.73,706,1.73,707,1.73,708,1.73,709,2.662,710,2.662,711,2.662,712,2.662,713,2.662,714,1.73,715,1.73,716,1.73,717,1.73,718,1.73,719,1.73,720,1.73,721,1.73,722,1.73,723,2.662,724,1.73,725,1.73,726,1.73,727,1.73,728,1.73,729,1.73,730,1.73,731,1.73,732,1.73,733,1.73,734,1.73,735,1.73,736,1.73,737,1.73,738,1.73,739,1.73,740,1.73,741,1.73,742,1.73,743,1.73,744,1.73,745,1.73,746,1.73,747,1.73,748,1.73,749,1.73,750,1.73,751,1.73,752,1.73]],["title/interfaces/IRolePermissionUpdateInput.html",[439,0.053,629,2.462]],["body/interfaces/IRolePermissionUpdateInput.html",[3,0.087,4,0.075,5,0.075,7,0.166,11,0.017,15,0.499,16,0.397,20,0.196,23,0.896,26,0.005,27,0.008,28,0.005,71,0.548,77,0.209,181,1.429,439,0.065,441,0.417,449,0.896,543,1.578,544,1.202,550,2.013,551,1.838,595,3.015,614,1.526,618,1.639,624,1.639,625,1.639,626,4.367,627,2.975,628,1.639,629,2.507,630,1.945,631,2.975,632,2.975,633,2.975,634,2.975,635,2.975,636,2.975,637,2.975,638,2.975,639,2.975,640,2.975,641,2.975,642,2.975,643,2.975,644,2.975,645,2.975,646,2.975,647,2.975,648,2.975,649,2.975,650,2.975,651,2.975,652,2.975,653,2.975,654,2.975,655,2.975,656,2.975,657,2.975,658,2.975,659,2.975,660,2.975,661,2.975,662,1.945,663,1.945,664,1.945,665,1.945,666,2.975,667,2.975,668,2.975,669,2.975,670,2.975,671,2.975,672,2.975,673,2.975,674,2.975,675,2.975,676,2.975,677,2.975,678,2.975,679,2.975,680,2.975,681,2.975,682,2.975,683,2.975,684,2.975,685,2.975,686,2.975,687,2.975,688,2.975,689,2.975,690,2.975,691,1.639,692,2.715,693,1.775,694,1.775,695,1.775,696,1.775,697,1.775,698,1.775,699,1.775,700,1.775,701,1.775,702,1.775,703,1.775,704,1.775,705,1.775,706,1.775,707,1.775,708,1.775,709,2.715,710,2.715,711,2.715,712,2.715,713,2.715,714,1.775,715,1.775,716,1.775,717,1.775,718,1.775,719,1.775,720,1.775,721,1.775,722,1.775,723,2.715,724,1.775,725,1.775,726,1.775,727,1.775,728,1.775,729,1.775,730,1.775,731,1.775,732,1.775,733,1.775,734,1.775,735,1.775,736,1.775,737,1.775,738,1.775,739,1.775,740,1.775,741,1.775,742,1.775,743,1.775,744,1.775,745,1.775,746,1.775,747,1.775,748,1.775,749,1.775,750,1.775,751,1.775,752,1.775]],["title/interfaces/ITreeNode.html",[439,0.053,753,2.921]],["body/interfaces/ITreeNode.html",[3,0.176,4,0.151,5,0.151,7,0.335,11,0.016,20,0.176,26,0.011,27,0.014,28,0.011,71,0.892,72,1.291,77,0.565,302,3.629,439,0.071,441,0.839,595,3.629,753,5.632,754,4.376,755,4.376,756,7.098,757,6.124,758,7.098]],["title/interfaces/ITryRequest.html",[364,2.666,439,0.053]],["body/interfaces/ITryRequest.html",[3,0.18,4,0.154,5,0.154,7,0.342,11,0.016,20,0.18,26,0.011,27,0.014,28,0.011,71,0.904,72,1.302,77,0.571,245,5.525,364,4.477,376,6.172,378,6.172,439,0.073,441,0.858,595,3.666,759,4.477,760,4.477]],["title/interfaces/IUser.html",[439,0.053,545,1.805]],["body/interfaces/IUser.html",[3,0.1,4,0.086,5,0.086,7,0.19,11,0.017,15,0.755,16,0.454,20,0.236,26,0.006,27,0.009,28,0.006,71,0.607,72,1.364,77,0.575,127,1.399,351,2.277,439,0.091,441,0.477,449,1.517,539,1.453,540,1.539,541,1.636,543,2.656,544,1.376,545,2.676,546,3.68,547,3.68,548,3.778,549,3.68,550,2.79,551,3.093,552,3.68,553,3.68,554,3.183,555,1.453,556,1.636,557,1.453,558,2.277,559,1.636,560,1.636,561,1.636,562,1.453,563,1.636,564,1.453,565,1.453,566,1.636,567,1.636,568,1.636,569,1.636,570,2.42,571,2.42]],["title/interfaces/IUserCreateInput.html",[439,0.053,564,1.907]],["body/interfaces/IUserCreateInput.html",[3,0.104,4,0.089,5,0.089,7,0.198,11,0.017,15,0.754,16,0.472,20,0.238,26,0.007,27,0.01,28,0.007,71,0.625,72,1.344,77,0.56,127,0.748,351,2.343,439,0.092,441,0.496,449,1.561,539,1.511,540,1.6,541,1.701,543,2.689,544,1.43,545,2.477,546,3.725,547,3.725,548,3.82,549,3.725,550,2.824,551,3.132,552,3.725,553,3.725,554,1.701,555,1.511,556,1.701,557,1.511,558,2.343,559,1.701,560,1.701,561,1.701,562,1.511,563,1.701,564,2.212,565,1.511,566,1.701,567,1.701,568,1.701,569,1.701,570,2.491,571,2.491]],["title/interfaces/IUserFindInput.html",[439,0.053,555,1.907]],["body/interfaces/IUserFindInput.html",[3,0.102,4,0.087,5,0.087,7,0.194,11,0.017,15,0.755,16,0.463,20,0.237,26,0.006,27,0.009,28,0.006,71,0.616,72,1.355,77,0.568,127,0.733,351,2.309,439,0.091,441,0.486,449,1.539,539,1.481,540,1.569,541,1.668,543,2.672,544,1.402,545,2.449,546,3.702,547,3.702,548,3.799,549,3.702,550,2.807,551,3.113,552,3.702,553,3.702,554,1.668,555,2.18,556,3.213,557,1.481,558,2.309,559,1.668,560,1.668,561,1.668,562,1.481,563,1.668,564,1.481,565,1.481,566,1.668,567,1.668,568,1.668,569,1.668,570,2.455,571,2.455]],["title/interfaces/IUserRegistrationInput.html",[439,0.053,557,1.907]],["body/interfaces/IUserRegistrationInput.html",[3,0.111,4,0.095,5,0.095,7,0.211,11,0.017,15,0.754,16,0.504,20,0.242,26,0.007,27,0.01,28,0.007,71,0.656,72,1.247,77,0.519,127,0.799,351,3.334,439,0.094,441,0.53,449,1.638,539,1.614,540,1.71,541,1.818,543,2.558,544,1.528,545,2.979,546,3.345,547,3.345,548,3.544,549,3.345,550,2.536,551,2.812,552,3.345,553,3.345,554,1.818,555,1.614,556,1.818,557,2.321,558,3.334,559,3.345,560,3.345,561,3.345,562,1.614,563,1.818,564,1.614,565,1.614,566,1.818,567,1.818,568,1.818,569,1.818,570,2.613,571,2.613]],["title/interfaces/IUserUpdateInput.html",[439,0.053,565,1.907]],["body/interfaces/IUserUpdateInput.html",[3,0.104,4,0.089,5,0.089,7,0.198,11,0.017,15,0.754,16,0.472,20,0.238,26,0.007,27,0.01,28,0.007,71,0.625,72,1.344,77,0.56,127,0.748,351,2.343,439,0.092,441,0.496,449,1.561,539,1.511,540,1.6,541,1.701,543,2.689,544,1.43,545,2.477,546,3.725,547,3.725,548,3.82,549,3.725,550,2.824,551,3.132,552,3.725,553,3.725,554,1.701,555,1.511,556,1.701,557,1.511,558,2.343,559,1.701,560,1.701,561,1.701,562,1.511,563,1.701,564,1.511,565,2.212,566,1.701,567,1.701,568,1.701,569,1.701,570,2.491,571,2.491]],["title/classes/Model.html",[21,0.656,68,2.147]],["body/classes/Model.html",[3,0.141,4,0.121,5,0.121,11,0.017,12,1.322,15,0.622,16,0.964,20,0.188,21,0.943,26,0.009,27,0.012,28,0.009,64,2.172,65,2.05,66,3.142,67,2.05,68,3.474,69,2.867,70,3.085,72,0.74,73,3.142,74,3.142,75,2.172,76,3.142,77,0.566,78,5.41,80,4.728,81,5.281,82,5.281,83,5.281,84,5.281,87,2.309,90,1.158,96,4.198,97,5.637,98,2.465,99,3.51,100,3.51,101,4.689,102,4.689,103,4.689,104,4.689,105,2.309,106,3.538,107,4.689,108,4.728,109,3.51,110,5.281,126,2.05,127,1.015,232,2.648,269,2.465,761,4.068]],["title/classes/PaginationParams.html",[21,0.656,262,2.666]],["body/classes/PaginationParams.html",[3,0.117,4,0.1,5,0.1,7,0.222,10,2.961,11,0.017,12,1.802,15,0.455,16,0.873,20,0.165,21,0.962,23,2.513,26,0.007,27,0.01,28,0.007,65,1.699,71,0.68,72,0.869,77,0.502,90,1.882,91,4.12,96,4.659,98,2.042,106,3.926,214,3.688,215,3.365,227,2.908,244,1.913,262,3.365,291,4.66,292,4.12,302,1.799,449,1.199,602,3.108,611,4.12,762,5.204,763,2.908,764,4.775,765,5.545,766,5.545,767,5.545,768,3.37,769,3.37,770,4.775,771,5.493,772,6.032,773,3.37,774,3.37,775,4.775,776,6.032,777,4.12,778,3.37,779,3.37,780,3.37,781,2.908,782,6.032,783,3.37,784,3.37,785,2.908,786,4.775,787,4.775,788,4.775,789,4.775,790,3.37,791,4.775,792,4.775,793,3.37,794,3.37]],["title/controllers/QueueController.html",[0,1.907,795,2.666]],["body/controllers/QueueController.html",[0,3.157,2,2.708,3,0.176,4,0.151,5,0.151,7,0.335,8,2.695,9,5.003,10,2.708,11,0.017,12,1.648,14,2.078,15,0.596,16,0.987,17,1.724,20,0.176,21,0.88,22,3.302,23,1.804,24,1.89,26,0.011,27,0.014,28,0.011,795,4.415,796,4.376,797,5.073,798,4.119,799,4.376,800,5.073]],["title/modules/QueueModule.html",[29,1.712,801,2.666]],["body/modules/QueueModule.html",[2,2.98,3,0.147,4,0.126,5,0.126,11,0.017,16,1.138,17,1.439,20,0.147,21,0.735,26,0.009,27,0.012,28,0.009,29,2.826,31,2.26,32,2.403,33,2.755,34,2.755,35,2.403,36,3.784,37,2.565,42,4.293,43,3.633,44,2.755,45,2.755,47,4.064,48,4.31,49,3.652,50,2.984,51,4.815,52,2.984,53,3.652,54,3.652,57,3.652,194,2.755,195,2.755,196,2.755,197,2.755,198,3.269,199,3.269,200,3.269,795,4.4,798,4.293,799,3.652,801,5.167,802,3.652,803,4.233,804,3.652,805,4.233,806,4.233]],["title/injectables/QueueService.html",[58,1.712,798,2.292]],["body/injectables/QueueService.html",[3,0.183,4,0.157,5,0.157,7,0.349,8,2.766,9,5.076,11,0.017,12,1.719,14,2.167,15,0.612,16,0.833,17,1.798,20,0.183,21,0.918,24,1.971,26,0.012,27,0.014,28,0.012,58,2.91,59,3.206,62,4.564,63,4.564,798,3.895,807,4.564,808,5.29]],["title/interfaces/S3FileStorageProviderConfig.html",[439,0.053,470,2.292]],["body/interfaces/S3FileStorageProviderConfig.html",[3,0.131,4,0.112,5,0.197,7,0.249,11,0.017,15,0.745,20,0.23,26,0.008,27,0.011,28,0.008,71,0.735,72,1.3,77,0.527,90,1.074,115,2.142,127,0.941,439,0.089,440,2.287,441,0.624,442,2.456,443,2.456,444,2.66,445,3.641,446,2.66,447,3.641,448,3.641,449,1.342,450,3.363,451,3.641,452,2.287,453,2.66,454,2.66,455,2.287,456,2.66,457,2.456,458,4.152,459,2.66,460,2.66,461,2.66,462,2.66,463,2.66,464,2.66,465,2.66,466,2.66,467,3.641,468,2.66,469,2.66,470,3.131,471,4.465,472,4.465,473,4.465,474,4.465]],["title/classes/UpdateCatDto.html",[21,0.656,136,2.462]],["body/classes/UpdateCatDto.html",[3,0.191,4,0.164,5,0.164,11,0.017,16,1.037,20,0.191,21,0.955,26,0.012,27,0.014,28,0.012,65,2.775,67,2.775,123,3.336,136,4.285,145,3.583,146,4.252,147,3.88,187,4.252,809,5.505,810,4.75,811,4.75,812,5.505]],["title/interfaces/UploadedFile.html",[439,0.053,455,2.292]],["body/interfaces/UploadedFile.html",[3,0.12,4,0.103,5,0.192,7,0.229,11,0.017,15,0.749,20,0.223,26,0.008,27,0.011,28,0.008,71,0.694,72,1.112,77,0.592,90,1.604,115,1.972,127,0.867,439,0.086,440,2.105,441,0.575,442,2.261,443,2.261,444,2.448,445,4.539,446,2.448,447,3.438,448,3.438,449,1.236,450,3.175,451,3.438,452,2.105,453,2.448,454,2.448,455,2.956,456,4.309,457,3.979,458,4.706,459,2.448,460,4.309,461,2.448,462,4.309,463,2.448,464,2.448,465,4.309,466,4.309,467,4.539,468,2.448,469,2.448,470,2.105,471,2.448,472,2.448,473,2.448,474,2.448]],["title/coverage.html",[813,3.997]],["body/coverage.html",[0,2.25,1,1.33,5,0.056,6,1.628,11,0.017,18,1.144,21,1.003,26,0.004,27,0.007,28,0.004,35,1.741,47,1.229,58,2.223,60,1.628,64,1.008,66,2.369,68,1.071,70,1.071,77,0.157,111,1.33,112,1.628,113,1.33,114,1.628,123,1.144,136,1.229,143,1.144,145,1.229,147,1.33,162,1.628,170,1.144,187,2.369,191,1.229,201,1.628,224,3.851,228,1.458,229,1.628,235,1.229,237,1.33,262,1.33,290,1.464,322,1.628,364,1.33,411,1.458,412,1.628,439,0.104,440,1.144,442,2.905,443,2.905,452,1.144,455,1.144,470,1.144,475,1.628,511,4.377,524,1.071,525,2.975,526,2.975,532,1.144,535,1.144,536,1.144,538,1.144,539,0.951,540,2.96,543,0.773,545,0.901,555,0.951,557,0.951,562,0.951,564,0.951,565,0.951,572,1.628,573,1.628,574,1.458,575,1.628,578,1.628,586,1.458,587,1.628,589,1.229,590,2.732,596,1.229,597,1.229,598,1.229,599,2.732,601,1.229,610,1.628,612,1.628,614,1.144,624,2.905,625,2.905,628,1.229,629,1.229,691,1.229,753,1.458,754,1.628,755,1.628,759,1.628,760,1.628,762,1.628,763,1.628,771,6.747,795,1.33,796,1.628,798,1.144,807,1.628,813,1.458,814,1.887,815,1.887,816,1.887,817,5.973,818,4.91,819,7.368,820,3.344,821,2.647,822,2.647,823,3.344,824,5.544,825,3.876,826,1.628,827,1.887,828,1.887,829,1.887,830,4.463,831,1.628,832,1.628,833,1.628,834,1.628,835,4.463,836,1.458,837,4.613,838,1.628,839,1.628,840,1.628,841,1.628,842,3.068,843,1.458,844,1.628,845,1.628,846,1.628,847,1.628,848,1.887,849,1.887,850,1.887,851,1.887,852,5.777,853,3.068,854,1.887,855,3.068,856,5.296,857,1.628,858,1.628,859,1.628,860,1.628,861,1.628,862,1.628,863,1.628,864,1.628,865,1.628,866,1.628,867,1.887,868,1.887]],["title/dependencies.html",[32,2.584,869,3.153]],["body/dependencies.html",[11,0.017,17,1.399,21,0.951,26,0.009,27,0.012,28,0.009,32,2.337,50,2.902,52,2.902,98,2.495,105,2.337,176,3.552,357,3.552,359,3.552,423,3.552,450,2.68,602,2.68,781,3.552,785,3.552,810,3.552,811,3.552,836,4.756,843,3.18,870,4.117,871,4.117,872,6.158,873,4.117,874,4.117,875,4.117,876,4.117,877,4.117,878,4.117,879,4.117,880,6.158,881,5.479,882,4.117,883,4.117,884,4.117,885,4.117,886,4.117,887,4.117,888,4.117,889,4.117,890,4.117,891,4.117,892,4.117,893,4.117,894,4.117,895,4.117,896,4.117,897,4.117,898,3.552,899,4.117,900,4.117,901,5.479,902,4.117,903,5.479,904,4.117,905,4.117,906,4.117,907,4.117,908,4.117,909,4.117,910,4.117,911,4.117,912,4.117,913,4.117,914,4.117,915,4.117,916,4.117,917,4.117]],["title/miscellaneous/functions.html",[918,2.222,919,3.928]],["body/miscellaneous/functions.html",[7,0.171,11,0.016,14,1.948,15,0.573,26,0.006,27,0.009,28,0.006,35,3.414,72,1.35,77,0.536,80,4.646,90,1.353,115,1.468,126,3.741,127,1.852,170,1.567,215,4.026,256,1.683,269,2.382,373,1.567,384,2.231,437,1.997,457,2.558,524,1.468,525,1.567,526,2.382,535,2.881,757,3.391,777,2.231,820,2.231,821,4.582,822,4.582,823,2.231,831,2.231,832,3.391,837,1.997,838,3.391,839,3.391,840,4.102,841,3.391,843,3.036,844,3.391,845,3.391,856,2.231,857,3.391,858,3.391,859,3.391,860,3.391,861,3.391,862,3.391,863,3.391,864,3.391,865,3.391,866,3.391,898,3.391,918,1.823,919,2.231,920,6.265,921,6.016,922,2.586,923,2.586,924,2.586,925,2.586,926,2.586,927,2.586,928,2.586,929,6.016,930,2.586,931,3.93,932,3.93,933,3.93,934,2.586,935,2.586,936,2.231,937,2.586,938,3.93,939,2.586,940,2.586,941,2.586,942,2.586,943,2.586,944,2.586,945,2.586,946,2.586,947,2.586,948,2.586,949,2.586,950,4.755,951,2.586,952,3.93,953,2.586,954,2.586,955,3.93,956,2.586,957,3.93,958,2.586,959,2.586,960,2.586,961,2.586,962,2.586,963,2.586,964,2.586,965,2.586,966,2.586,967,2.586,968,2.231,969,2.586,970,2.586,971,3.93,972,3.93,973,2.586,974,3.93,975,2.586,976,3.93,977,4.582,978,3.93,979,2.586]],["title/index.html",[7,0.208,980,3.153,981,3.153]],["body/index.html",[4,0.129,11,0.017,26,0.009,27,0.012,28,0.009,197,2.817,244,2.456,329,3.343,514,5.445,813,3.343,977,3.734,982,4.328,983,4.328,984,5.663,985,4.328,986,4.328,987,4.328,988,4.328,989,4.328,990,4.328,991,4.328,992,4.328,993,7.262,994,4.328,995,4.328,996,7.128,997,4.328,998,4.328,999,5.663,1000,4.328,1001,4.328,1002,4.328,1003,4.328,1004,5.663,1005,5.663,1006,4.328,1007,4.328,1008,4.328,1009,5.663,1010,5.663,1011,4.328,1012,4.328,1013,4.328,1014,4.328,1015,4.328,1016,3.734,1017,4.328,1018,4.328,1019,4.328,1020,4.328,1021,4.328,1022,4.328,1023,4.328,1024,4.328,1025,4.328,1026,4.328,1027,4.328,1028,4.328,1029,4.328,1030,4.328,1031,4.328,1032,4.328,1033,4.328,1034,4.328]],["title/modules.html",[31,2.763]],["body/modules.html",[11,0.014,26,0.012,27,0.014,28,0.012,30,3.88,31,2.939,41,3.583,42,3.336,173,4.252,607,3.583,801,3.88,1016,6.297,1035,7.299,1036,7.299,1037,7.461,1038,5.505]],["title/overview.html",[1039,4.464]],["body/overview.html",[2,2.387,11,0.016,18,3.885,26,0.01,27,0.013,28,0.01,29,2.024,30,5.227,31,2.387,32,2.537,33,2.91,34,2.91,35,2.537,36,2.709,37,2.709,38,3.857,39,3.857,40,3.857,41,4.569,42,4.435,43,3.764,44,2.91,45,2.91,59,2.709,65,2.253,143,3.885,158,3.857,159,3.857,188,3.857,189,3.857,190,3.857,191,4.763,441,0.739,798,3.885,801,5.068,802,3.857,804,3.857,826,3.857,1039,3.857,1040,5.783,1041,4.471,1042,4.471]],["title/miscellaneous/variables.html",[918,2.222,1043,3.928]],["body/miscellaneous/variables.html",[7,0.23,11,0.017,15,0.332,23,1.242,24,2.106,26,0.008,27,0.011,28,0.008,77,0.29,90,1.393,181,2.779,194,2.273,195,2.273,196,2.273,197,2.273,214,4.732,215,4.319,545,1.666,550,2.107,558,1.864,618,2.273,624,2.273,625,3.187,626,2.461,691,3.187,692,3.451,693,2.461,694,2.461,695,2.461,696,2.461,697,2.461,698,2.461,699,2.461,700,2.461,701,2.461,702,2.461,703,2.461,704,2.461,705,2.461,706,2.461,707,2.461,708,2.461,709,3.451,710,3.451,711,3.451,712,3.451,713,3.451,714,2.461,715,2.461,716,2.461,717,2.461,718,2.461,719,2.461,720,2.461,721,2.461,722,2.461,723,3.451,724,2.461,725,2.461,726,2.461,727,2.461,728,2.461,729,2.461,730,2.461,731,2.461,732,2.461,733,2.461,734,2.461,735,2.461,736,2.461,737,2.461,738,2.461,739,2.461,740,2.461,741,2.461,742,2.461,743,2.461,744,2.461,745,2.461,746,2.461,747,2.461,748,2.461,749,2.461,750,2.461,751,2.461,752,2.461,833,3.012,834,4.224,836,3.781,837,2.697,846,4.224,847,4.224,918,2.461,920,4.224,936,3.012,968,3.012,1043,3.012,1044,3.492,1045,3.492,1046,3.492,1047,3.492,1048,3.492,1049,3.492,1050,3.492,1051,3.492,1052,3.492,1053,5.653,1054,3.492,1055,3.492,1056,4.896,1057,4.896,1058,4.896,1059,3.492,1060,3.492]]],"invertedIndex":[["",{"_index":11,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Base.html":{},"classes/Cat.html":{},"controllers/CatsController.html":{},"modules/CatsModule.html":{},"injectables/CatsService.html":{},"modules/CoreModule.html":{},"classes/CreateCatDto.html":{},"modules/CronModule.html":{},"injectables/CronService.html":{},"classes/CrudController.html":{},"classes/CrudService.html":{},"injectables/DBHelper.html":{},"interfaces/FileStorageOption.html":{},"interfaces/FileSystem.html":{},"controllers/HealthController.html":{},"interfaces/IAddress.html":{},"interfaces/IAuthLoginInput.html":{},"interfaces/IAuthResponse.html":{},"interfaces/IBaseEntityModel.html":{},"interfaces/ICountry.html":{},"interfaces/ICrudService.html":{},"interfaces/ICurrency.html":{},"interfaces/IGeoLocationCreateObject.html":{},"interfaces/IGeolocationUpdateObject.html":{},"interfaces/ILanguage.html":{},"interfaces/ILanguageFindInput.html":{},"interfaces/ILanguageName.html":{},"interfaces/IListQueryInput.html":{},"interfaces/ILocation.html":{},"interfaces/IPagination.html":{},"interfaces/IPagination-1.html":{},"interfaces/IPaginationInput.html":{},"interfaces/IRole.html":{},"interfaces/IRolePermission.html":{},"interfaces/IRolePermissionCreateInput.html":{},"interfaces/IRolePermissionUpdateInput.html":{},"interfaces/ITreeNode.html":{},"interfaces/ITryRequest.html":{},"interfaces/IUser.html":{},"interfaces/IUserCreateInput.html":{},"interfaces/IUserFindInput.html":{},"interfaces/IUserRegistrationInput.html":{},"interfaces/IUserUpdateInput.html":{},"classes/Model.html":{},"classes/PaginationParams.html":{},"controllers/QueueController.html":{},"modules/QueueModule.html":{},"injectables/QueueService.html":{},"interfaces/S3FileStorageProviderConfig.html":{},"classes/UpdateCatDto.html":{},"interfaces/UploadedFile.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":771,"title":{},"body":{"classes/PaginationParams.html":{},"coverage.html":{}}}],["0).getdate",{"_index":943,"title":{},"body":{"miscellaneous/functions.html":{}}}],["0.1.1",{"_index":876,"title":{},"body":{"dependencies.html":{}}}],["0.1.13",{"_index":908,"title":{},"body":{"dependencies.html":{}}}],["0.12.2",{"_index":887,"title":{},"body":{"dependencies.html":{}}}],["0.2.29",{"_index":917,"title":{},"body":{"dependencies.html":{}}}],["0.3.1",{"_index":886,"title":{},"body":{"dependencies.html":{}}}],["0.4.1",{"_index":881,"title":{},"body":{"dependencies.html":{}}}],["0.5.32",{"_index":899,"title":{},"body":{"dependencies.html":{}}}],["0.6.1",{"_index":874,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":819,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":853,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":854,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":817,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":852,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":830,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":824,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":818,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":825,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":855,"title":{},"body":{"coverage.html":{}}}],["01",{"_index":84,"title":{},"body":{"classes/Base.html":{},"classes/Model.html":{}}}],["01t12:00:00.000z",{"_index":110,"title":{},"body":{"classes/Base.html":{},"classes/Model.html":{}}}],["01t12:00:00.000z'})@createdatecolumn",{"_index":85,"title":{},"body":{"classes/Base.html":{}}}],["01t12:00:00.000z'})@deletedatecolumn",{"_index":88,"title":{},"body":{"classes/Base.html":{}}}],["01t12:00:00.000z'})@updatedatecolumn",{"_index":94,"title":{},"body":{"classes/Base.html":{}}}],["0})@isoptional()@min(0)@transform(undefined",{"_index":773,"title":{},"body":{"classes/PaginationParams.html":{}}}],["1",{"_index":437,"title":{"interfaces/IPagination-1.html":{}},"body":{"injectables/DBHelper.html":{},"miscellaneous/functions.html":{}}}],["1.0.0",{"_index":904,"title":{},"body":{"dependencies.html":{}}}],["1.3.0",{"_index":902,"title":{},"body":{"dependencies.html":{}}}],["1/1",{"_index":842,"title":{},"body":{"coverage.html":{}}}],["1/12",{"_index":827,"title":{},"body":{"coverage.html":{}}}],["1/4",{"_index":849,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":776,"title":{},"body":{"classes/PaginationParams.html":{}}}],["100",{"_index":224,"title":{},"body":{"injectables/CronService.html":{},"coverage.html":{}}}],["12",{"_index":369,"title":{},"body":{"classes/CrudService.html":{}}}],["17.1.1",{"_index":871,"title":{},"body":{"dependencies.html":{}}}],["17.3.0",{"_index":893,"title":{},"body":{"dependencies.html":{}}}],["2",{"_index":942,"title":{},"body":{"miscellaneous/functions.html":{}}}],["2.29.1",{"_index":895,"title":{},"body":{"dependencies.html":{}}}],["2.4.3",{"_index":885,"title":{},"body":{"dependencies.html":{}}}],["2/3",{"_index":851,"title":{},"body":{"coverage.html":{}}}],["2000",{"_index":83,"title":{},"body":{"classes/Base.html":{},"classes/Model.html":{}}}],["25",{"_index":848,"title":{},"body":{"coverage.html":{}}}],["3.0.2",{"_index":910,"title":{},"body":{"dependencies.html":{}}}],["3/3",{"_index":829,"title":{},"body":{"coverage.html":{}}}],["300",{"_index":1057,"title":{},"body":{"miscellaneous/variables.html":{}}}],["32",{"_index":1042,"title":{},"body":{"overview.html":{}}}],["4",{"_index":1041,"title":{},"body":{"overview.html":{}}}],["4.0.2",{"_index":897,"title":{},"body":{"dependencies.html":{}}}],["4.1.5",{"_index":916,"title":{},"body":{"dependencies.html":{}}}],["4.17.20",{"_index":894,"title":{},"body":{"dependencies.html":{}}}],["4.2.0",{"_index":891,"title":{},"body":{"dependencies.html":{}}}],["4.3.0",{"_index":906,"title":{},"body":{"dependencies.html":{}}}],["4.7.5",{"_index":882,"title":{},"body":{"dependencies.html":{}}}],["4/4",{"_index":828,"title":{},"body":{"coverage.html":{}}}],["5",{"_index":1040,"title":{},"body":{"overview.html":{}}}],["5.0.0",{"_index":913,"title":{},"body":{"dependencies.html":{}}}],["5.2.3",{"_index":889,"title":{},"body":{"dependencies.html":{}}}],["50",{"_index":227,"title":{},"body":{"injectables/CronService.html":{},"classes/PaginationParams.html":{}}}],["50})@isoptional()@min(0)@max(50)@transform(undefined",{"_index":778,"title":{},"body":{"classes/PaginationParams.html":{}}}],["6.6.3",{"_index":911,"title":{},"body":{"dependencies.html":{}}}],["60",{"_index":223,"title":{},"body":{"injectables/CronService.html":{}}}],["66",{"_index":850,"title":{},"body":{"coverage.html":{}}}],["7.0.1",{"_index":883,"title":{},"body":{"dependencies.html":{}}}],["7.1.3",{"_index":878,"title":{},"body":{"dependencies.html":{}}}],["7.1.5",{"_index":884,"title":{},"body":{"dependencies.html":{}}}],["7.5.1",{"_index":872,"title":{},"body":{"dependencies.html":{}}}],["8",{"_index":826,"title":{},"body":{"coverage.html":{},"overview.html":{}}}],["_",{"_index":422,"title":{},"body":{"injectables/DBHelper.html":{}}}],["_.difference(new_values",{"_index":433,"title":{},"body":{"injectables/DBHelper.html":{}}}],["_.difference(values",{"_index":431,"title":{},"body":{"injectables/DBHelper.html":{}}}],["__dirname}/../**/*.entity.{ts,js",{"_index":179,"title":{},"body":{"modules/CoreModule.html":{}}}],["above",{"_index":507,"title":{},"body":{"controllers/HealthController.html":{}}}],["abstract",{"_index":106,"title":{},"body":{"classes/Base.html":{},"classes/CrudController.html":{},"classes/CrudService.html":{},"classes/Model.html":{},"classes/PaginationParams.html":{}}}],["access_private_projects",{"_index":670,"title":{},"body":{"interfaces/IRolePermission.html":{},"interfaces/IRolePermissionCreateInput.html":{},"interfaces/IRolePermissionUpdateInput.html":{}}}],["action",{"_index":168,"title":{},"body":{"injectables/CatsService.html":{}}}],["address",{"_index":527,"title":{},"body":{"interfaces/IAddress.html":{},"interfaces/IGeoLocationCreateObject.html":{},"interfaces/IGeolocationUpdateObject.html":{},"interfaces/ILocation.html":{}}}],["address2",{"_index":528,"title":{},"body":{"interfaces/IAddress.html":{},"interfaces/IGeoLocationCreateObject.html":{},"interfaces/IGeolocationUpdateObject.html":{},"interfaces/ILocation.html":{}}}],["adds",{"_index":169,"title":{},"body":{"injectables/CatsService.html":{}}}],["admin",{"_index":618,"title":{},"body":{"interfaces/IRole.html":{},"interfaces/IRolePermission.html":{},"interfaces/IRolePermissionCreateInput.html":{},"interfaces/IRolePermissionUpdateInput.html":{},"miscellaneous/variables.html":{}}}],["admin_dashboard_view",{"_index":631,"title":{},"body":{"interfaces/IRolePermission.html":{},"interfaces/IRolePermissionCreateInput.html":{},"interfaces/IRolePermissionUpdateInput.html":{}}}],["administration",{"_index":737,"title":{},"body":{"interfaces/IRolePermission.html":{},"interfaces/IRolePermissionCreateInput.html":{},"interfaces/IRolePermissionUpdateInput.html":{},"miscellaneous/variables.html":{}}}],["all'})@apiresponse({status",{"_index":264,"title":{},"body":{"classes/CrudController.html":{}}}],["all_org_edit",{"_index":656,"title":{},"body":{"interfaces/IRolePermission.html":{},"interfaces/IRolePermissionCreateInput.html":{},"interfaces/IRolePermissionUpdateInput.html":{}}}],["all_org_view",{"_index":655,"title":{},"body":{"interfaces/IRolePermission.html":{},"interfaces/IRolePermissionCreateInput.html":{},"interfaces/IRolePermissionUpdateInput.html":{}}}],["amazing",{"_index":1017,"title":{},"body":{"index.html":{}}}],["apibearerauth",{"_index":285,"title":{},"body":{"classes/CrudController.html":{}}}],["apioperation",{"_index":283,"title":{},"body":{"classes/CrudController.html":{}}}],["apioperation({summary",{"_index":241,"title":{},"body":{"classes/CrudController.html":{}}}],["apiproperty",{"_index":97,"title":{},"body":{"classes/Base.html":{},"classes/Model.html":{}}}],["apiproperty({type",{"_index":79,"title":{},"body":{"classes/Base.html":{}}}],["apipropertyoptional",{"_index":96,"title":{},"body":{"classes/Base.html":{},"classes/Model.html":{},"classes/PaginationParams.html":{}}}],["apipropertyoptional()@isoptional",{"_index":768,"title":{},"body":{"classes/PaginationParams.html":{}}}],["apipropertyoptional({type",{"_index":91,"title":{},"body":{"classes/Base.html":{},"classes/PaginationParams.html":{}}}],["apiresponse",{"_index":284,"title":{},"body":{"classes/CrudController.html":{}}}],["apitags",{"_index":485,"title":{},"body":{"controllers/HealthController.html":{}}}],["apitags(healthcontroller.name",{"_index":490,"title":{},"body":{"controllers/HealthController.html":{}}}],["app",{"_index":977,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["app/core",{"_index":585,"title":{},"body":{"interfaces/ICrudService.html":{}}}],["app/cron/cron.module",{"_index":53,"title":{},"body":{"modules/AppModule.html":{},"modules/QueueModule.html":{}}}],["app/cron/cron.service",{"_index":193,"title":{},"body":{"modules/CronModule.html":{}}}],["app/health",{"_index":54,"title":{},"body":{"modules/AppModule.html":{},"modules/QueueModule.html":{}}}],["app/interfaces",{"_index":100,"title":{},"body":{"classes/Base.html":{},"classes/Model.html":{}}}],["appcontroller",{"_index":1,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["application",{"_index":498,"title":{},"body":{"controllers/HealthController.html":{}}}],["applications",{"_index":990,"title":{},"body":{"index.html":{}}}],["applicationshutdown",{"_index":522,"title":{},"body":{"controllers/HealthController.html":{}}}],["applies",{"_index":960,"title":{},"body":{"miscellaneous/functions.html":{}}}],["appmodule",{"_index":30,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["approval_policy_edit",{"_index":664,"title":{},"body":{"interfaces/IRolePermission.html":{},"interfaces/IRolePermissionCreateInput.html":{},"interfaces/IRolePermissionUpdateInput.html":{}}}],["approval_policy_view",{"_index":662,"title":{},"body":{"interfaces/IRolePermission.html":{},"interfaces/IRolePermissionCreateInput.html":{},"interfaces/IRolePermissionUpdateInput.html":{}}}],["approvals_policy_edit",{"_index":665,"title":{},"body":{"interfaces/IRolePermission.html":{},"interfaces/IRolePermissionCreateInput.html":{},"interfaces/IRolePermissionUpdateInput.html":{}}}],["approvals_policy_view",{"_index":663,"title":{},"body":{"interfaces/IRolePermission.html":{},"interfaces/IRolePermissionCreateInput.html":{},"interfaces/IRolePermissionUpdateInput.html":{}}}],["apps/.../main.ts",{"_index":921,"title":{},"body":{"miscellaneous/functions.html":{}}}],["apps/backend/src/app.controller",{"_index":55,"title":{},"body":{"modules/AppModule.html":{}}}],["apps/backend/src/app.controller.ts",{"_index":6,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["apps/backend/src/app.controller.ts:10",{"_index":13,"title":{},"body":{"controllers/AppController.html":{}}}],["apps/backend/src/app.module.ts",{"_index":46,"title":{},"body":{"modules/AppModule.html":{}}}],["apps/backend/src/app.service",{"_index":19,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["apps/backend/src/app.service.ts",{"_index":60,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["apps/backend/src/app.service.ts:5",{"_index":61,"title":{},"body":{"injectables/AppService.html":{}}}],["apps/backend/src/cats/cats.controller",{"_index":161,"title":{},"body":{"modules/CatsModule.html":{}}}],["apps/backend/src/cats/cats.controller.ts",{"_index":114,"title":{},"body":{"controllers/CatsController.html":{},"coverage.html":{}}}],["apps/backend/src/cats/cats.controller.ts:12",{"_index":125,"title":{},"body":{"controllers/CatsController.html":{}}}],["apps/backend/src/cats/cats.controller.ts:17",{"_index":128,"title":{},"body":{"controllers/CatsController.html":{}}}],["apps/backend/src/cats/cats.controller.ts:22",{"_index":131,"title":{},"body":{"controllers/CatsController.html":{}}}],["apps/backend/src/cats/cats.controller.ts:27",{"_index":138,"title":{},"body":{"controllers/CatsController.html":{}}}],["apps/backend/src/cats/cats.controller.ts:32",{"_index":134,"title":{},"body":{"controllers/CatsController.html":{}}}],["apps/backend/src/cats/cats.module",{"_index":56,"title":{},"body":{"modules/AppModule.html":{}}}],["apps/backend/src/cats/cats.module.ts",{"_index":160,"title":{},"body":{"modules/CatsModule.html":{}}}],["apps/backend/src/cats/cats.service",{"_index":144,"title":{},"body":{"controllers/CatsController.html":{},"modules/CatsModule.html":{}}}],["apps/backend/src/cats/cats.service.ts",{"_index":162,"title":{},"body":{"injectables/CatsService.html":{},"coverage.html":{}}}],["apps/backend/src/cats/cats.service.ts:12",{"_index":164,"title":{},"body":{"injectables/CatsService.html":{}}}],["apps/backend/src/cats/cats.service.ts:16",{"_index":165,"title":{},"body":{"injectables/CatsService.html":{}}}],["apps/backend/src/cats/cats.service.ts:20",{"_index":167,"title":{},"body":{"injectables/CatsService.html":{}}}],["apps/backend/src/cats/cats.service.ts:24",{"_index":166,"title":{},"body":{"injectables/CatsService.html":{}}}],["apps/backend/src/cats/cats.service.ts:8",{"_index":163,"title":{},"body":{"injectables/CatsService.html":{}}}],["apps/backend/src/cats/dto/create",{"_index":145,"title":{},"body":{"controllers/CatsController.html":{},"injectables/CatsService.html":{},"classes/CreateCatDto.html":{},"classes/UpdateCatDto.html":{},"coverage.html":{}}}],["apps/backend/src/cats/dto/update",{"_index":147,"title":{},"body":{"controllers/CatsController.html":{},"injectables/CatsService.html":{},"classes/UpdateCatDto.html":{},"coverage.html":{}}}],["apps/backend/src/cats/entities/cat.entity.ts",{"_index":112,"title":{},"body":{"classes/Cat.html":{},"coverage.html":{}}}],["apps/backend/src/main.ts",{"_index":820,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["apps/queue/src/main.ts",{"_index":823,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["apps/queue/src/queue.controller",{"_index":806,"title":{},"body":{"modules/QueueModule.html":{}}}],["apps/queue/src/queue.controller.ts",{"_index":796,"title":{},"body":{"controllers/QueueController.html":{},"coverage.html":{}}}],["apps/queue/src/queue.controller.ts:10",{"_index":797,"title":{},"body":{"controllers/QueueController.html":{}}}],["apps/queue/src/queue.module.ts",{"_index":805,"title":{},"body":{"modules/QueueModule.html":{}}}],["apps/queue/src/queue.service",{"_index":799,"title":{},"body":{"controllers/QueueController.html":{},"modules/QueueModule.html":{}}}],["apps/queue/src/queue.service.ts",{"_index":807,"title":{},"body":{"injectables/QueueService.html":{},"coverage.html":{}}}],["apps/queue/src/queue.service.ts:5",{"_index":808,"title":{},"body":{"injectables/QueueService.html":{}}}],["appservice",{"_index":18,"title":{"injectables/AppService.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"coverage.html":{},"overview.html":{}}}],["array",{"_index":925,"title":{},"body":{"miscellaneous/functions.html":{}}}],["arraytoobject",{"_index":838,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["arraytoobject(array",{"_index":924,"title":{},"body":{"miscellaneous/functions.html":{}}}],["asc",{"_index":788,"title":{},"body":{"classes/PaginationParams.html":{}}}],["assignment",{"_index":200,"title":{},"body":{"modules/CronModule.html":{},"classes/CrudService.html":{},"modules/QueueModule.html":{}}}],["async",{"_index":230,"title":{},"body":{"classes/CrudController.html":{},"classes/CrudService.html":{},"injectables/DBHelper.html":{}}}],["asynchronous",{"_index":513,"title":{},"body":{"controllers/HealthController.html":{}}}],["author",{"_index":1027,"title":{},"body":{"index.html":{}}}],["authservice",{"_index":395,"title":{},"body":{"classes/CrudService.html":{}}}],["available",{"_index":607,"title":{},"body":{"interfaces/IListQueryInput.html":{},"interfaces/IPagination.html":{},"interfaces/IPagination-1.html":{},"interfaces/IPaginationInput.html":{},"modules.html":{}}}],["average",{"_index":857,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["average(items",{"_index":949,"title":{},"body":{"miscellaneous/functions.html":{}}}],["await",{"_index":372,"title":{},"body":{"classes/CrudService.html":{},"injectables/DBHelper.html":{}}}],["awaits",{"_index":512,"title":{},"body":{"controllers/HealthController.html":{}}}],["aws_access_key_id",{"_index":471,"title":{},"body":{"interfaces/FileStorageOption.html":{},"interfaces/FileSystem.html":{},"interfaces/S3FileStorageProviderConfig.html":{},"interfaces/UploadedFile.html":{}}}],["aws_bucket",{"_index":474,"title":{},"body":{"interfaces/FileStorageOption.html":{},"interfaces/FileSystem.html":{},"interfaces/S3FileStorageProviderConfig.html":{},"interfaces/UploadedFile.html":{}}}],["aws_default_region",{"_index":473,"title":{},"body":{"interfaces/FileStorageOption.html":{},"interfaces/FileSystem.html":{},"interfaces/S3FileStorageProviderConfig.html":{},"interfaces/UploadedFile.html":{}}}],["aws_secret_access_key",{"_index":472,"title":{},"body":{"interfaces/FileStorageOption.html":{},"interfaces/FileSystem.html":{},"interfaces/S3FileStorageProviderConfig.html":{},"interfaces/UploadedFile.html":{}}}],["backers",{"_index":1018,"title":{},"body":{"index.html":{}}}],["badrequestexception",{"_index":354,"title":{},"body":{"classes/CrudService.html":{}}}],["badrequestexception(err",{"_index":391,"title":{},"body":{"classes/CrudService.html":{}}}],["base",{"_index":64,"title":{"classes/Base.html":{}},"body":{"classes/Base.html":{},"classes/CrudController.html":{},"classes/CrudService.html":{},"interfaces/ICountry.html":{},"interfaces/ICurrency.html":{},"classes/Model.html":{},"coverage.html":{}}}],["baseentitymodel",{"_index":99,"title":{},"body":{"classes/Base.html":{},"classes/Model.html":{}}}],["baseurl",{"_index":454,"title":{},"body":{"interfaces/FileStorageOption.html":{},"interfaces/FileSystem.html":{},"interfaces/S3FileStorageProviderConfig.html":{},"interfaces/UploadedFile.html":{}}}],["bcrypt",{"_index":356,"title":{},"body":{"classes/CrudService.html":{}}}],["bcrypt.hash(password",{"_index":392,"title":{},"body":{"classes/CrudService.html":{}}}],["bcryptjs",{"_index":357,"title":{},"body":{"classes/CrudService.html":{},"dependencies.html":{}}}],["before",{"_index":491,"title":{},"body":{"controllers/HealthController.html":{}}}],["beforeapplicationshutdown",{"_index":504,"title":{},"body":{"controllers/HealthController.html":{}}}],["body",{"_index":139,"title":{},"body":{"controllers/CatsController.html":{},"classes/CrudController.html":{}}}],["boolean",{"_index":595,"title":{},"body":{"interfaces/ILanguage.html":{},"interfaces/ILanguageFindInput.html":{},"interfaces/ILanguageName.html":{},"interfaces/IRolePermission.html":{},"interfaces/IRolePermissionCreateInput.html":{},"interfaces/IRolePermissionUpdateInput.html":{},"interfaces/ITreeNode.html":{},"interfaces/ITryRequest.html":{}}}],["bootstrap",{"_index":35,"title":{},"body":{"modules/AppModule.html":{},"modules/CatsModule.html":{},"modules/CronModule.html":{},"modules/QueueModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["browse",{"_index":1037,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":1035,"title":{},"body":{"modules.html":{}}}],["builder/querypartialentity",{"_index":287,"title":{},"body":{"classes/CrudController.html":{},"classes/CrudService.html":{},"interfaces/ICrudService.html":{}}}],["building",{"_index":985,"title":{},"body":{"index.html":{}}}],["bytes",{"_index":464,"title":{},"body":{"interfaces/FileStorageOption.html":{},"interfaces/FileSystem.html":{},"interfaces/S3FileStorageProviderConfig.html":{},"interfaces/UploadedFile.html":{}}}],["calculate",{"_index":930,"title":{},"body":{"miscellaneous/functions.html":{}}}],["call",{"_index":501,"title":{},"body":{"controllers/HealthController.html":{}}}],["callablefunction",{"_index":447,"title":{},"body":{"interfaces/FileStorageOption.html":{},"interfaces/FileSystem.html":{},"interfaces/S3FileStorageProviderConfig.html":{},"interfaces/UploadedFile.html":{}}}],["can_approve_timesheet",{"_index":681,"title":{},"body":{"interfaces/IRolePermission.html":{},"interfaces/IRolePermissionCreateInput.html":{},"interfaces/IRolePermissionUpdateInput.html":{}}}],["candidate",{"_index":621,"title":{},"body":{"interfaces/IRole.html":{}}}],["cat",{"_index":111,"title":{"classes/Cat.html":{}},"body":{"classes/Cat.html":{},"injectables/CatsService.html":{},"coverage.html":{}}}],["cat.dto",{"_index":146,"title":{},"body":{"controllers/CatsController.html":{},"injectables/CatsService.html":{},"classes/UpdateCatDto.html":{}}}],["cat.dto.ts",{"_index":187,"title":{},"body":{"classes/CreateCatDto.html":{},"classes/UpdateCatDto.html":{},"coverage.html":{}}}],["catch",{"_index":377,"title":{},"body":{"classes/CrudService.html":{}}}],["cats",{"_index":116,"title":{},"body":{"controllers/CatsController.html":{},"injectables/CatsService.html":{}}}],["catscontroller",{"_index":113,"title":{"controllers/CatsController.html":{}},"body":{"controllers/CatsController.html":{},"modules/CatsModule.html":{},"coverage.html":{}}}],["catsmodule",{"_index":41,"title":{"modules/CatsModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CatsModule.html":{},"modules.html":{},"overview.html":{}}}],["catsservice",{"_index":143,"title":{"injectables/CatsService.html":{}},"body":{"controllers/CatsController.html":{},"modules/CatsModule.html":{},"injectables/CatsService.html":{},"coverage.html":{},"overview.html":{}}}],["change_roles_permissions",{"_index":669,"title":{},"body":{"interfaces/IRolePermission.html":{},"interfaces/IRolePermissionCreateInput.html":{},"interfaces/IRolePermissionUpdateInput.html":{}}}],["change_selected_candidate",{"_index":667,"title":{},"body":{"interfaces/IRolePermission.html":{},"interfaces/IRolePermissionCreateInput.html":{},"interfaces/IRolePermissionUpdateInput.html":{}}}],["change_selected_employee",{"_index":666,"title":{},"body":{"interfaces/IRolePermission.html":{},"interfaces/IRolePermissionCreateInput.html":{},"interfaces/IRolePermissionUpdateInput.html":{}}}],["change_selected_organization",{"_index":668,"title":{},"body":{"interfaces/IRolePermission.html":{},"interfaces/IRolePermissionCreateInput.html":{},"interfaces/IRolePermissionUpdateInput.html":{}}}],["check",{"_index":477,"title":{},"body":{"controllers/HealthController.html":{}}}],["children",{"_index":756,"title":{},"body":{"interfaces/ITreeNode.html":{}}}],["city",{"_index":529,"title":{},"body":{"interfaces/IAddress.html":{},"interfaces/IGeoLocationCreateObject.html":{},"interfaces/IGeolocationUpdateObject.html":{},"interfaces/ILocation.html":{}}}],["class",{"_index":21,"title":{"classes/Base.html":{},"classes/Cat.html":{},"classes/CreateCatDto.html":{},"classes/CrudController.html":{},"classes/CrudService.html":{},"classes/Model.html":{},"classes/PaginationParams.html":{},"classes/UpdateCatDto.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Base.html":{},"classes/Cat.html":{},"controllers/CatsController.html":{},"modules/CatsModule.html":{},"injectables/CatsService.html":{},"modules/CoreModule.html":{},"classes/CreateCatDto.html":{},"modules/CronModule.html":{},"injectables/CronService.html":{},"classes/CrudController.html":{},"classes/CrudService.html":{},"injectables/DBHelper.html":{},"controllers/HealthController.html":{},"classes/Model.html":{},"classes/PaginationParams.html":{},"controllers/QueueController.html":{},"modules/QueueModule.html":{},"injectables/QueueService.html":{},"classes/UpdateCatDto.html":{},"coverage.html":{},"dependencies.html":{}}}],["classes",{"_index":65,"title":{},"body":{"classes/Base.html":{},"classes/Cat.html":{},"classes/CreateCatDto.html":{},"classes/CrudController.html":{},"classes/CrudService.html":{},"classes/Model.html":{},"classes/PaginationParams.html":{},"classes/UpdateCatDto.html":{},"overview.html":{}}}],["clues",{"_index":251,"title":{},"body":{"classes/CrudController.html":{}}}],["cluster_appmodule",{"_index":38,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":39,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":40,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_catsmodule",{"_index":158,"title":{},"body":{"modules/CatsModule.html":{},"overview.html":{}}}],["cluster_catsmodule_providers",{"_index":159,"title":{},"body":{"modules/CatsModule.html":{},"overview.html":{}}}],["cluster_cronmodule",{"_index":188,"title":{},"body":{"modules/CronModule.html":{},"overview.html":{}}}],["cluster_cronmodule_exports",{"_index":189,"title":{},"body":{"modules/CronModule.html":{},"overview.html":{}}}],["cluster_cronmodule_providers",{"_index":190,"title":{},"body":{"modules/CronModule.html":{},"overview.html":{}}}],["cluster_queuemodule",{"_index":802,"title":{},"body":{"modules/QueueModule.html":{},"overview.html":{}}}],["cluster_queuemodule_imports",{"_index":803,"title":{},"body":{"modules/QueueModule.html":{}}}],["cluster_queuemodule_providers",{"_index":804,"title":{},"body":{"modules/QueueModule.html":{},"overview.html":{}}}],["code",{"_index":591,"title":{},"body":{"interfaces/ILanguage.html":{},"interfaces/ILanguageFindInput.html":{},"interfaces/ILanguageName.html":{}}}],["color",{"_index":592,"title":{},"body":{"interfaces/ILanguage.html":{},"interfaces/ILanguageFindInput.html":{},"interfaces/ILanguageName.html":{}}}],["column",{"_index":950,"title":{},"body":{"miscellaneous/functions.html":{}}}],["common",{"_index":608,"title":{},"body":{"interfaces/IListQueryInput.html":{},"interfaces/IPagination-1.html":{},"interfaces/IPaginationInput.html":{}}}],["concat(toadd",{"_index":434,"title":{},"body":{"injectables/DBHelper.html":{}}}],["console.log",{"_index":521,"title":{},"body":{"controllers/HealthController.html":{}}}],["console.log(`moduleinit",{"_index":519,"title":{},"body":{"controllers/HealthController.html":{}}}],["const",{"_index":181,"title":{},"body":{"modules/CoreModule.html":{},"classes/CrudService.html":{},"injectables/DBHelper.html":{},"interfaces/IRolePermission.html":{},"interfaces/IRolePermissionCreateInput.html":{},"interfaces/IRolePermissionUpdateInput.html":{},"miscellaneous/variables.html":{}}}],["constructor",{"_index":232,"title":{},"body":{"classes/CrudController.html":{},"classes/CrudService.html":{},"injectables/DBHelper.html":{},"controllers/HealthController.html":{},"classes/Model.html":{}}}],["constructor(crudservice",{"_index":234,"title":{},"body":{"classes/CrudController.html":{}}}],["constructor(input",{"_index":107,"title":{},"body":{"classes/Base.html":{},"classes/Model.html":{}}}],["constructor(private",{"_index":22,"title":{},"body":{"controllers/AppController.html":{},"controllers/CatsController.html":{},"classes/CrudController.html":{},"injectables/DBHelper.html":{},"controllers/QueueController.html":{}}}],["constructor(protected",{"_index":367,"title":{},"body":{"classes/CrudService.html":{}}}],["constructor(repository",{"_index":328,"title":{},"body":{"classes/CrudService.html":{},"injectables/DBHelper.html":{}}}],["contain",{"_index":250,"title":{},"body":{"classes/CrudController.html":{}}}],["continue",{"_index":515,"title":{},"body":{"controllers/HealthController.html":{}}}],["controller",{"_index":0,"title":{"controllers/AppController.html":{},"controllers/CatsController.html":{},"controllers/HealthController.html":{},"controllers/QueueController.html":{}},"body":{"controllers/AppController.html":{},"controllers/CatsController.html":{},"controllers/HealthController.html":{},"controllers/QueueController.html":{},"coverage.html":{}}}],["controller('cats",{"_index":148,"title":{},"body":{"controllers/CatsController.html":{}}}],["controller('health",{"_index":489,"title":{},"body":{"controllers/HealthController.html":{}}}],["controllers",{"_index":2,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/CatsController.html":{},"modules/CatsModule.html":{},"controllers/HealthController.html":{},"controllers/QueueController.html":{},"modules/QueueModule.html":{},"overview.html":{}}}],["convertlocaltotimezone",{"_index":858,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["convertlocaltotimezone(localdt",{"_index":951,"title":{},"body":{"miscellaneous/functions.html":{}}}],["convertprecisionfloatdigit",{"_index":859,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["convertprecisionfloatdigit(val",{"_index":954,"title":{},"body":{"miscellaneous/functions.html":{}}}],["converttodatetime",{"_index":839,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["converttodatetime(datetime",{"_index":926,"title":{},"body":{"miscellaneous/functions.html":{}}}],["coordinates",{"_index":534,"title":{},"body":{"interfaces/IAddress.html":{},"interfaces/IGeoLocationCreateObject.html":{},"interfaces/IGeolocationUpdateObject.html":{},"interfaces/ILocation.html":{}}}],["copied",{"_index":394,"title":{},"body":{"classes/CrudService.html":{}}}],["coremodule",{"_index":173,"title":{"modules/CoreModule.html":{}},"body":{"modules/CoreModule.html":{},"modules.html":{}}}],["corresponding",{"_index":508,"title":{},"body":{"controllers/HealthController.html":{}}}],["count",{"_index":324,"title":{},"body":{"classes/CrudService.html":{},"interfaces/ICrudService.html":{}}}],["count(filter",{"_index":331,"title":{},"body":{"classes/CrudService.html":{},"interfaces/ICrudService.html":{}}}],["country",{"_index":530,"title":{},"body":{"interfaces/IAddress.html":{},"interfaces/ICountry.html":{},"interfaces/IGeoLocationCreateObject.html":{},"interfaces/IGeolocationUpdateObject.html":{},"interfaces/ILocation.html":{}}}],["coverage",{"_index":813,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["create",{"_index":117,"title":{},"body":{"controllers/CatsController.html":{},"injectables/CatsService.html":{},"classes/CrudController.html":{},"classes/CrudService.html":{},"interfaces/ICrudService.html":{}}}],["create(@body",{"_index":149,"title":{},"body":{"controllers/CatsController.html":{},"classes/CrudController.html":{}}}],["create(createcatdto",{"_index":122,"title":{},"body":{"controllers/CatsController.html":{},"injectables/CatsService.html":{}}}],["create(entity",{"_index":238,"title":{},"body":{"classes/CrudController.html":{},"classes/CrudService.html":{},"interfaces/ICrudService.html":{}}}],["createcatdto",{"_index":123,"title":{"classes/CreateCatDto.html":{}},"body":{"controllers/CatsController.html":{},"injectables/CatsService.html":{},"classes/CreateCatDto.html":{},"classes/UpdateCatDto.html":{},"coverage.html":{}}}],["created",{"_index":307,"title":{},"body":{"classes/CrudController.html":{}}}],["created.'})@apiresponse({status",{"_index":247,"title":{},"body":{"classes/CrudController.html":{}}}],["createdat",{"_index":73,"title":{},"body":{"classes/Base.html":{},"interfaces/IBaseEntityModel.html":{},"classes/Model.html":{}}}],["createdatecolumn",{"_index":103,"title":{},"body":{"classes/Base.html":{},"classes/Model.html":{}}}],["createdbyid",{"_index":561,"title":{},"body":{"interfaces/IAuthLoginInput.html":{},"interfaces/IAuthResponse.html":{},"interfaces/IUser.html":{},"interfaces/IUserCreateInput.html":{},"interfaces/IUserFindInput.html":{},"interfaces/IUserRegistrationInput.html":{},"interfaces/IUserUpdateInput.html":{}}}],["createswagger",{"_index":821,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["createswagger(app",{"_index":976,"title":{},"body":{"miscellaneous/functions.html":{}}}],["criteria",{"_index":338,"title":{},"body":{"classes/CrudService.html":{}}}],["cron",{"_index":218,"title":{},"body":{"injectables/CronService.html":{}}}],["cron('60",{"_index":207,"title":{},"body":{"injectables/CronService.html":{}}}],["cronmodule",{"_index":42,"title":{"modules/CronModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CronModule.html":{},"modules/QueueModule.html":{},"modules.html":{},"overview.html":{}}}],["cronservice",{"_index":191,"title":{"injectables/CronService.html":{}},"body":{"modules/CronModule.html":{},"injectables/CronService.html":{},"coverage.html":{},"overview.html":{}}}],["crudcontroller",{"_index":228,"title":{"classes/CrudController.html":{}},"body":{"classes/CrudController.html":{},"coverage.html":{}}}],["crudservice",{"_index":237,"title":{"classes/CrudService.html":{}},"body":{"classes/CrudController.html":{},"classes/CrudService.html":{},"coverage.html":{}}}],["currency",{"_index":588,"title":{},"body":{"interfaces/ICurrency.html":{}}}],["current",{"_index":605,"title":{},"body":{"interfaces/IListQueryInput.html":{},"interfaces/IPagination.html":{},"interfaces/IPagination-1.html":{},"interfaces/IPaginationInput.html":{}}}],["data",{"_index":757,"title":{},"body":{"interfaces/ITreeNode.html":{},"miscellaneous/functions.html":{}}}],["data_entry",{"_index":619,"title":{},"body":{"interfaces/IRole.html":{}}}],["database",{"_index":182,"title":{},"body":{"modules/CoreModule.html":{}}}],["database.sqlite",{"_index":183,"title":{},"body":{"modules/CoreModule.html":{}}}],["date",{"_index":78,"title":{},"body":{"classes/Base.html":{},"interfaces/IBaseEntityModel.html":{},"classes/Model.html":{}}}],["date(year",{"_index":941,"title":{},"body":{"miscellaneous/functions.html":{}}}],["date=0",{"_index":935,"title":{},"body":{"miscellaneous/functions.html":{}}}],["datetime",{"_index":927,"title":{},"body":{"miscellaneous/functions.html":{}}}],["day",{"_index":932,"title":{},"body":{"miscellaneous/functions.html":{}}}],["dbhelper",{"_index":411,"title":{"injectables/DBHelper.html":{}},"body":{"injectables/DBHelper.html":{},"coverage.html":{}}}],["decimal",{"_index":957,"title":{},"body":{"miscellaneous/functions.html":{}}}],["declarations",{"_index":34,"title":{},"body":{"modules/AppModule.html":{},"modules/CatsModule.html":{},"modules/CronModule.html":{},"modules/QueueModule.html":{},"overview.html":{}}}],["decorators",{"_index":10,"title":{},"body":{"controllers/AppController.html":{},"classes/Base.html":{},"controllers/CatsController.html":{},"injectables/CronService.html":{},"classes/CrudController.html":{},"controllers/HealthController.html":{},"classes/PaginationParams.html":{},"controllers/QueueController.html":{}}}],["deeppartial",{"_index":239,"title":{},"body":{"classes/CrudController.html":{},"classes/CrudService.html":{},"interfaces/ICrudService.html":{}}}],["default",{"_index":214,"title":{},"body":{"injectables/CronService.html":{},"classes/PaginationParams.html":{},"miscellaneous/variables.html":{}}}],["define",{"_index":492,"title":{},"body":{"controllers/HealthController.html":{}}}],["defined",{"_index":12,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/Base.html":{},"controllers/CatsController.html":{},"injectables/CatsService.html":{},"injectables/CronService.html":{},"classes/CrudController.html":{},"classes/CrudService.html":{},"injectables/DBHelper.html":{},"controllers/HealthController.html":{},"interfaces/ICrudService.html":{},"interfaces/IListQueryInput.html":{},"interfaces/IPagination-1.html":{},"interfaces/IPaginationInput.html":{},"classes/Model.html":{},"classes/PaginationParams.html":{},"controllers/QueueController.html":{},"injectables/QueueService.html":{}}}],["delete",{"_index":142,"title":{},"body":{"controllers/CatsController.html":{},"classes/CrudController.html":{},"classes/CrudService.html":{},"interfaces/ICrudService.html":{}}}],["delete(':id",{"_index":133,"title":{},"body":{"controllers/CatsController.html":{},"classes/CrudController.html":{}}}],["delete(@param('id",{"_index":320,"title":{},"body":{"classes/CrudController.html":{}}}],["delete(criteria",{"_index":335,"title":{},"body":{"classes/CrudService.html":{}}}],["delete(id",{"_index":257,"title":{},"body":{"classes/CrudController.html":{},"interfaces/ICrudService.html":{}}}],["deleted",{"_index":319,"title":{},"body":{"classes/CrudController.html":{}}}],["deleted'})@apiresponse({status",{"_index":258,"title":{},"body":{"classes/CrudController.html":{}}}],["deletedat",{"_index":74,"title":{},"body":{"classes/Base.html":{},"interfaces/IBaseEntityModel.html":{},"classes/Model.html":{}}}],["deletedatecolumn",{"_index":104,"title":{},"body":{"classes/Base.html":{},"classes/Model.html":{}}}],["deleteresult",{"_index":362,"title":{},"body":{"classes/CrudService.html":{},"interfaces/ICrudService.html":{}}}],["dependencies",{"_index":32,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/CatsModule.html":{},"modules/CronModule.html":{},"modules/QueueModule.html":{},"dependencies.html":{},"overview.html":{}}}],["desc",{"_index":787,"title":{},"body":{"classes/PaginationParams.html":{}}}],["described",{"_index":506,"title":{},"body":{"controllers/HealthController.html":{}}}],["describes",{"_index":764,"title":{},"body":{"classes/PaginationParams.html":{}}}],["description",{"_index":244,"title":{},"body":{"classes/CrudController.html":{},"interfaces/ILanguage.html":{},"interfaces/ILanguageFindInput.html":{},"interfaces/ILanguageName.html":{},"interfaces/IPagination.html":{},"classes/PaginationParams.html":{},"index.html":{}}}],["dest",{"_index":444,"title":{},"body":{"interfaces/FileStorageOption.html":{},"interfaces/FileSystem.html":{},"interfaces/S3FileStorageProviderConfig.html":{},"interfaces/UploadedFile.html":{}}}],["development",{"_index":995,"title":{},"body":{"index.html":{}}}],["digit",{"_index":955,"title":{},"body":{"miscellaneous/functions.html":{}}}],["digits",{"_index":961,"title":{},"body":{"miscellaneous/functions.html":{}}}],["disable",{"_index":195,"title":{},"body":{"modules/CronModule.html":{},"classes/CrudService.html":{},"controllers/HealthController.html":{},"modules/QueueModule.html":{},"miscellaneous/variables.html":{}}}],["dns",{"_index":493,"title":{},"body":{"controllers/HealthController.html":{}}}],["dnshealthindicator",{"_index":486,"title":{},"body":{"controllers/HealthController.html":{}}}],["docs",{"_index":496,"title":{},"body":{"controllers/HealthController.html":{}}}],["documentation",{"_index":814,"title":{},"body":{"coverage.html":{}}}],["e.g",{"_index":340,"title":{},"body":{"classes/CrudService.html":{}}}],["e2e",{"_index":1006,"title":{},"body":{"index.html":{}}}],["edit_sales_pipelines",{"_index":680,"title":{},"body":{"interfaces/IRolePermission.html":{},"interfaces/IRolePermissionCreateInput.html":{},"interfaces/IRolePermissionUpdateInput.html":{}}}],["edited",{"_index":312,"title":{},"body":{"classes/CrudController.html":{}}}],["edited.'})@apiresponse({status",{"_index":277,"title":{},"body":{"classes/CrudController.html":{}}}],["efficient",{"_index":986,"title":{},"body":{"index.html":{}}}],["email",{"_index":548,"title":{},"body":{"interfaces/IAuthLoginInput.html":{},"interfaces/IAuthResponse.html":{},"interfaces/IUser.html":{},"interfaces/IUserCreateInput.html":{},"interfaces/IUserFindInput.html":{},"interfaces/IUserRegistrationInput.html":{},"interfaces/IUserUpdateInput.html":{}}}],["employee",{"_index":620,"title":{},"body":{"interfaces/IRole.html":{}}}],["en",{"_index":568,"title":{},"body":{"interfaces/IAuthLoginInput.html":{},"interfaces/IAuthResponse.html":{},"interfaces/IUser.html":{},"interfaces/IUserCreateInput.html":{},"interfaces/IUserFindInput.html":{},"interfaces/IUserRegistrationInput.html":{},"interfaces/IUserUpdateInput.html":{}}}],["enabled",{"_index":626,"title":{},"body":{"interfaces/IRolePermission.html":{},"interfaces/IRolePermissionCreateInput.html":{},"interfaces/IRolePermissionUpdateInput.html":{},"miscellaneous/variables.html":{}}}],["encoding",{"_index":465,"title":{},"body":{"interfaces/FileStorageOption.html":{},"interfaces/FileSystem.html":{},"interfaces/S3FileStorageProviderConfig.html":{},"interfaces/UploadedFile.html":{}}}],["english",{"_index":567,"title":{},"body":{"interfaces/IAuthLoginInput.html":{},"interfaces/IAuthResponse.html":{},"interfaces/IUser.html":{},"interfaces/IUserCreateInput.html":{},"interfaces/IUserFindInput.html":{},"interfaces/IUserRegistrationInput.html":{},"interfaces/IUserUpdateInput.html":{}}}],["entities",{"_index":178,"title":{},"body":{"modules/CoreModule.html":{}}}],["entities/base",{"_index":288,"title":{},"body":{"classes/CrudController.html":{},"classes/CrudService.html":{}}}],["entity",{"_index":255,"title":{},"body":{"classes/CrudController.html":{},"classes/CrudService.html":{},"interfaces/ICrudService.html":{},"interfaces/IListQueryInput.html":{},"interfaces/IPagination-1.html":{},"interfaces/IPaginationInput.html":{}}}],["entity.id",{"_index":342,"title":{},"body":{"classes/CrudService.html":{}}}],["entity.model",{"_index":577,"title":{},"body":{"interfaces/ICountry.html":{},"interfaces/ICurrency.html":{}}}],["entity.model.ts",{"_index":573,"title":{},"body":{"interfaces/IBaseEntityModel.html":{},"coverage.html":{}}}],["entitynotfound",{"_index":325,"title":{},"body":{"classes/CrudService.html":{}}}],["enum",{"_index":449,"title":{},"body":{"interfaces/FileStorageOption.html":{},"interfaces/FileSystem.html":{},"interfaces/IAuthLoginInput.html":{},"interfaces/IAuthResponse.html":{},"interfaces/IRole.html":{},"interfaces/IRolePermission.html":{},"interfaces/IRolePermissionCreateInput.html":{},"interfaces/IRolePermissionUpdateInput.html":{},"interfaces/IUser.html":{},"interfaces/IUserCreateInput.html":{},"interfaces/IUserFindInput.html":{},"interfaces/IUserRegistrationInput.html":{},"interfaces/IUserUpdateInput.html":{},"classes/PaginationParams.html":{},"interfaces/S3FileStorageProviderConfig.html":{},"interfaces/UploadedFile.html":{}}}],["err",{"_index":389,"title":{},"body":{"classes/CrudService.html":{}}}],["error",{"_index":378,"title":{},"body":{"classes/CrudService.html":{},"interfaces/ITryRequest.html":{}}}],["eslint",{"_index":194,"title":{},"body":{"modules/CronModule.html":{},"classes/CrudService.html":{},"controllers/HealthController.html":{},"modules/QueueModule.html":{},"miscellaneous/variables.html":{}}}],["eslint/no",{"_index":198,"title":{},"body":{"modules/CronModule.html":{},"classes/CrudService.html":{},"modules/QueueModule.html":{}}}],["eslint/restrict",{"_index":1049,"title":{},"body":{"miscellaneous/variables.html":{}}}],["event_types_view",{"_index":688,"title":{},"body":{"interfaces/IRolePermission.html":{},"interfaces/IRolePermissionCreateInput.html":{},"interfaces/IRolePermissionUpdateInput.html":{}}}],["exact",{"_index":958,"title":{},"body":{"miscellaneous/functions.html":{}}}],["example",{"_index":82,"title":{},"body":{"classes/Base.html":{},"classes/Model.html":{}}}],["existing",{"_index":276,"title":{},"body":{"classes/CrudController.html":{}}}],["expanded",{"_index":758,"title":{},"body":{"interfaces/ITreeNode.html":{}}}],["export",{"_index":20,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Base.html":{},"classes/Cat.html":{},"controllers/CatsController.html":{},"modules/CatsModule.html":{},"injectables/CatsService.html":{},"modules/CoreModule.html":{},"classes/CreateCatDto.html":{},"modules/CronModule.html":{},"injectables/CronService.html":{},"classes/CrudController.html":{},"classes/CrudService.html":{},"injectables/DBHelper.html":{},"interfaces/FileStorageOption.html":{},"interfaces/FileSystem.html":{},"controllers/HealthController.html":{},"interfaces/IAddress.html":{},"interfaces/IAuthLoginInput.html":{},"interfaces/IAuthResponse.html":{},"interfaces/IBaseEntityModel.html":{},"interfaces/ICountry.html":{},"interfaces/ICrudService.html":{},"interfaces/ICurrency.html":{},"interfaces/IGeoLocationCreateObject.html":{},"interfaces/IGeolocationUpdateObject.html":{},"interfaces/ILanguage.html":{},"interfaces/ILanguageFindInput.html":{},"interfaces/ILanguageName.html":{},"interfaces/IListQueryInput.html":{},"interfaces/ILocation.html":{},"interfaces/IPagination.html":{},"interfaces/IPagination-1.html":{},"interfaces/IPaginationInput.html":{},"interfaces/IRole.html":{},"interfaces/IRolePermission.html":{},"interfaces/IRolePermissionCreateInput.html":{},"interfaces/IRolePermissionUpdateInput.html":{},"interfaces/ITreeNode.html":{},"interfaces/ITryRequest.html":{},"interfaces/IUser.html":{},"interfaces/IUserCreateInput.html":{},"interfaces/IUserFindInput.html":{},"interfaces/IUserRegistrationInput.html":{},"interfaces/IUserUpdateInput.html":{},"classes/Model.html":{},"classes/PaginationParams.html":{},"controllers/QueueController.html":{},"modules/QueueModule.html":{},"injectables/QueueService.html":{},"interfaces/S3FileStorageProviderConfig.html":{},"classes/UpdateCatDto.html":{},"interfaces/UploadedFile.html":{}}}],["exports",{"_index":37,"title":{},"body":{"modules/AppModule.html":{},"modules/CatsModule.html":{},"modules/CoreModule.html":{},"modules/CronModule.html":{},"modules/QueueModule.html":{},"overview.html":{}}}],["express",{"_index":880,"title":{},"body":{"dependencies.html":{}}}],["expressions",{"_index":1051,"title":{},"body":{"miscellaneous/variables.html":{}}}],["extend.ts",{"_index":834,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["extendmoment(momentdefault",{"_index":1060,"title":{},"body":{"miscellaneous/variables.html":{}}}],["extends",{"_index":67,"title":{},"body":{"classes/Base.html":{},"interfaces/IAddress.html":{},"interfaces/ICountry.html":{},"interfaces/ICurrency.html":{},"interfaces/IGeoLocationCreateObject.html":{},"interfaces/IGeolocationUpdateObject.html":{},"interfaces/ILocation.html":{},"classes/Model.html":{},"classes/UpdateCatDto.html":{}}}],["facebook",{"_index":571,"title":{},"body":{"interfaces/IAuthLoginInput.html":{},"interfaces/IAuthResponse.html":{},"interfaces/IUser.html":{},"interfaces/IUserCreateInput.html":{},"interfaces/IUserFindInput.html":{},"interfaces/IUserRegistrationInput.html":{},"interfaces/IUserUpdateInput.html":{}}}],["false",{"_index":379,"title":{},"body":{"classes/CrudService.html":{}}}],["february",{"_index":938,"title":{},"body":{"miscellaneous/functions.html":{}}}],["fieldname",{"_index":456,"title":{},"body":{"interfaces/FileStorageOption.html":{},"interfaces/FileSystem.html":{},"interfaces/S3FileStorageProviderConfig.html":{},"interfaces/UploadedFile.html":{}}}],["file",{"_index":5,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Base.html":{},"classes/Cat.html":{},"controllers/CatsController.html":{},"modules/CatsModule.html":{},"injectables/CatsService.html":{},"modules/CoreModule.html":{},"classes/CreateCatDto.html":{},"modules/CronModule.html":{},"injectables/CronService.html":{},"classes/CrudController.html":{},"classes/CrudService.html":{},"injectables/DBHelper.html":{},"interfaces/FileStorageOption.html":{},"interfaces/FileSystem.html":{},"controllers/HealthController.html":{},"interfaces/IAddress.html":{},"interfaces/IAuthLoginInput.html":{},"interfaces/IAuthResponse.html":{},"interfaces/IBaseEntityModel.html":{},"interfaces/ICountry.html":{},"interfaces/ICrudService.html":{},"interfaces/ICurrency.html":{},"interfaces/IGeoLocationCreateObject.html":{},"interfaces/IGeolocationUpdateObject.html":{},"interfaces/ILanguage.html":{},"interfaces/ILanguageFindInput.html":{},"interfaces/ILanguageName.html":{},"interfaces/IListQueryInput.html":{},"interfaces/ILocation.html":{},"interfaces/IPagination.html":{},"interfaces/IPagination-1.html":{},"interfaces/IPaginationInput.html":{},"interfaces/IRole.html":{},"interfaces/IRolePermission.html":{},"interfaces/IRolePermissionCreateInput.html":{},"interfaces/IRolePermissionUpdateInput.html":{},"interfaces/ITreeNode.html":{},"interfaces/ITryRequest.html":{},"interfaces/IUser.html":{},"interfaces/IUserCreateInput.html":{},"interfaces/IUserFindInput.html":{},"interfaces/IUserRegistrationInput.html":{},"interfaces/IUserUpdateInput.html":{},"classes/Model.html":{},"classes/PaginationParams.html":{},"controllers/QueueController.html":{},"modules/QueueModule.html":{},"injectables/QueueService.html":{},"interfaces/S3FileStorageProviderConfig.html":{},"classes/UpdateCatDto.html":{},"interfaces/UploadedFile.html":{},"coverage.html":{}}}],["filename",{"_index":445,"title":{},"body":{"interfaces/FileStorageOption.html":{},"interfaces/FileSystem.html":{},"interfaces/S3FileStorageProviderConfig.html":{},"interfaces/UploadedFile.html":{}}}],["files",{"_index":463,"title":{},"body":{"interfaces/FileStorageOption.html":{},"interfaces/FileSystem.html":{},"interfaces/S3FileStorageProviderConfig.html":{},"interfaces/UploadedFile.html":{}}}],["filestorageoption",{"_index":440,"title":{"interfaces/FileStorageOption.html":{}},"body":{"interfaces/FileStorageOption.html":{},"interfaces/FileSystem.html":{},"interfaces/S3FileStorageProviderConfig.html":{},"interfaces/UploadedFile.html":{},"coverage.html":{}}}],["filestorageproviderenum",{"_index":448,"title":{},"body":{"interfaces/FileStorageOption.html":{},"interfaces/FileSystem.html":{},"interfaces/S3FileStorageProviderConfig.html":{},"interfaces/UploadedFile.html":{}}}],["filesystem",{"_index":452,"title":{"interfaces/FileSystem.html":{}},"body":{"interfaces/FileStorageOption.html":{},"interfaces/FileSystem.html":{},"interfaces/S3FileStorageProviderConfig.html":{},"interfaces/UploadedFile.html":{},"coverage.html":{}}}],["filter",{"_index":268,"title":{},"body":{"classes/CrudController.html":{},"classes/CrudService.html":{},"interfaces/ICrudService.html":{}}}],["filter((value",{"_index":435,"title":{},"body":{"injectables/DBHelper.html":{}}}],["find",{"_index":263,"title":{},"body":{"classes/CrudController.html":{},"injectables/DBHelper.html":{}}}],["find(find",{"_index":416,"title":{},"body":{"injectables/DBHelper.html":{}}}],["findall",{"_index":118,"title":{},"body":{"controllers/CatsController.html":{},"injectables/CatsService.html":{},"classes/CrudController.html":{},"classes/CrudService.html":{},"interfaces/ICrudService.html":{}}}],["findall(filter",{"_index":261,"title":{},"body":{"classes/CrudController.html":{},"classes/CrudService.html":{},"interfaces/ICrudService.html":{}}}],["findby",{"_index":413,"title":{},"body":{"injectables/DBHelper.html":{}}}],["findbyid",{"_index":231,"title":{},"body":{"classes/CrudController.html":{}}}],["findbyid(@param('id",{"_index":304,"title":{},"body":{"classes/CrudController.html":{}}}],["findbyid(id",{"_index":270,"title":{},"body":{"classes/CrudController.html":{}}}],["findconditions",{"_index":336,"title":{},"body":{"classes/CrudService.html":{},"interfaces/ICrudService.html":{}}}],["findinput",{"_index":600,"title":{},"body":{"interfaces/IListQueryInput.html":{},"interfaces/IPagination-1.html":{},"interfaces/IPaginationInput.html":{}}}],["findmanyoptions",{"_index":332,"title":{},"body":{"classes/CrudService.html":{},"interfaces/ICrudService.html":{}}}],["findobj",{"_index":541,"title":{},"body":{"interfaces/IAuthLoginInput.html":{},"interfaces/IAuthResponse.html":{},"interfaces/IUser.html":{},"interfaces/IUserCreateInput.html":{},"interfaces/IUserFindInput.html":{},"interfaces/IUserRegistrationInput.html":{},"interfaces/IUserUpdateInput.html":{}}}],["findone",{"_index":119,"title":{},"body":{"controllers/CatsController.html":{},"injectables/CatsService.html":{},"classes/CrudService.html":{},"interfaces/ICrudService.html":{}}}],["findone(@param('id",{"_index":152,"title":{},"body":{"controllers/CatsController.html":{}}}],["findone(id",{"_index":129,"title":{},"body":{"controllers/CatsController.html":{},"injectables/CatsService.html":{},"classes/CrudService.html":{},"interfaces/ICrudService.html":{}}}],["findonebyid(id).pipe(map(entity",{"_index":341,"title":{},"body":{"classes/CrudService.html":{}}}],["findoneoptions",{"_index":345,"title":{},"body":{"classes/CrudService.html":{},"interfaces/ICrudService.html":{}}}],["findoneorfail",{"_index":326,"title":{},"body":{"classes/CrudService.html":{}}}],["findoneorfail(id",{"_index":347,"title":{},"body":{"classes/CrudService.html":{}}}],["first",{"_index":509,"title":{},"body":{"controllers/HealthController.html":{}}}],["firstcityletter",{"_index":1058,"title":{},"body":{"miscellaneous/variables.html":{}}}],["firstname",{"_index":546,"title":{},"body":{"interfaces/IAuthLoginInput.html":{},"interfaces/IAuthResponse.html":{},"interfaces/IUser.html":{},"interfaces/IUserCreateInput.html":{},"interfaces/IUserFindInput.html":{},"interfaces/IUserRegistrationInput.html":{},"interfaces/IUserUpdateInput.html":{}}}],["firstnameletter",{"_index":1053,"title":{},"body":{"miscellaneous/variables.html":{}}}],["fixme",{"_index":316,"title":{},"body":{"classes/CrudController.html":{}}}],["forbidden",{"_index":297,"title":{},"body":{"classes/CrudController.html":{}}}],["form",{"_index":971,"title":{},"body":{"miscellaneous/functions.html":{}}}],["format",{"_index":80,"title":{},"body":{"classes/Base.html":{},"classes/Model.html":{},"miscellaneous/functions.html":{}}}],["found",{"_index":265,"title":{},"body":{"classes/CrudController.html":{},"classes/CrudService.html":{}}}],["found'})@apiresponse({status",{"_index":278,"title":{},"body":{"classes/CrudController.html":{}}}],["found'})@get(':id",{"_index":273,"title":{},"body":{"classes/CrudController.html":{}}}],["found'})@httpcode(httpstatus.accepted)@delete(':id",{"_index":259,"title":{},"body":{"classes/CrudController.html":{}}}],["framework",{"_index":984,"title":{},"body":{"index.html":{}}}],["full",{"_index":469,"title":{},"body":{"interfaces/FileStorageOption.html":{},"interfaces/FileSystem.html":{},"interfaces/S3FileStorageProviderConfig.html":{},"interfaces/UploadedFile.html":{}}}],["fullname",{"_index":554,"title":{},"body":{"interfaces/IAuthLoginInput.html":{},"interfaces/IAuthResponse.html":{},"interfaces/IUser.html":{},"interfaces/IUserCreateInput.html":{},"interfaces/IUserFindInput.html":{},"interfaces/IUserRegistrationInput.html":{},"interfaces/IUserUpdateInput.html":{}}}],["function",{"_index":511,"title":{},"body":{"controllers/HealthController.html":{},"interfaces/IAddress.html":{},"interfaces/IGeoLocationCreateObject.html":{},"interfaces/IGeolocationUpdateObject.html":{},"interfaces/ILocation.html":{},"coverage.html":{}}}],["functions",{"_index":919,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["general",{"_index":694,"title":{},"body":{"interfaces/IRolePermission.html":{},"interfaces/IRolePermissionCreateInput.html":{},"interfaces/IRolePermissionUpdateInput.html":{},"miscellaneous/variables.html":{}}}],["generatedlogocolor",{"_index":840,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["generic",{"_index":611,"title":{},"body":{"interfaces/IPagination.html":{},"classes/PaginationParams.html":{}}}],["get(':id",{"_index":130,"title":{},"body":{"controllers/CatsController.html":{},"classes/CrudController.html":{}}}],["get()@healthcheck",{"_index":480,"title":{},"body":{"controllers/HealthController.html":{}}}],["getcontrastcolor",{"_index":860,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["getcontrastcolor(hex",{"_index":964,"title":{},"body":{"miscellaneous/functions.html":{}}}],["getdummyimage",{"_index":846,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["getdummyimage(330",{"_index":1056,"title":{},"body":{"miscellaneous/variables.html":{}}}],["getemptyaddress",{"_index":535,"title":{},"body":{"interfaces/IAddress.html":{},"interfaces/IGeoLocationCreateObject.html":{},"interfaces/IGeolocationUpdateObject.html":{},"interfaces/ILocation.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["gethello",{"_index":9,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/QueueController.html":{},"injectables/QueueService.html":{}}}],["getlastdayofmonth",{"_index":841,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["getlastdayofmonth(year",{"_index":928,"title":{},"body":{"miscellaneous/functions.html":{}}}],["getpasswordhash",{"_index":327,"title":{},"body":{"classes/CrudService.html":{}}}],["getpasswordhash(password",{"_index":349,"title":{},"body":{"classes/CrudService.html":{}}}],["getting",{"_index":980,"title":{"index.html":{}},"body":{}}],["getuserdummyimage",{"_index":847,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["given",{"_index":693,"title":{},"body":{"interfaces/IRolePermission.html":{},"interfaces/IRolePermissionCreateInput.html":{},"interfaces/IRolePermissionUpdateInput.html":{},"miscellaneous/variables.html":{}}}],["google",{"_index":570,"title":{},"body":{"interfaces/IAuthLoginInput.html":{},"interfaces/IAuthResponse.html":{},"interfaces/IUser.html":{},"interfaces/IUserCreateInput.html":{},"interfaces/IUserFindInput.html":{},"interfaces/IUserRegistrationInput.html":{},"interfaces/IUserUpdateInput.html":{}}}],["graph",{"_index":1038,"title":{},"body":{"modules.html":{}}}],["grow",{"_index":1013,"title":{},"body":{"index.html":{}}}],["handlecron",{"_index":204,"title":{},"body":{"injectables/CronService.html":{}}}],["handleinterval",{"_index":205,"title":{},"body":{"injectables/CronService.html":{}}}],["handletimeout",{"_index":206,"title":{},"body":{"injectables/CronService.html":{}}}],["hapi/joi",{"_index":870,"title":{},"body":{"dependencies.html":{}}}],["hash",{"_index":552,"title":{},"body":{"interfaces/IAuthLoginInput.html":{},"interfaces/IAuthResponse.html":{},"interfaces/IUser.html":{},"interfaces/IUserCreateInput.html":{},"interfaces/IUserFindInput.html":{},"interfaces/IUserRegistrationInput.html":{},"interfaces/IUserUpdateInput.html":{}}}],["hashpassword",{"_index":402,"title":{},"body":{"classes/CrudService.html":{}}}],["health",{"_index":476,"title":{},"body":{"controllers/HealthController.html":{}}}],["healthcheck",{"_index":487,"title":{},"body":{"controllers/HealthController.html":{}}}],["healthcheckservice",{"_index":488,"title":{},"body":{"controllers/HealthController.html":{}}}],["healthcontroller",{"_index":47,"title":{"controllers/HealthController.html":{}},"body":{"modules/AppModule.html":{},"controllers/HealthController.html":{},"modules/QueueModule.html":{},"coverage.html":{}}}],["height",{"_index":1047,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hello",{"_index":62,"title":{},"body":{"injectables/AppService.html":{},"injectables/QueueService.html":{}}}],["helmet",{"_index":890,"title":{},"body":{"dependencies.html":{}}}],["here",{"_index":1024,"title":{},"body":{"index.html":{}}}],["hex",{"_index":965,"title":{},"body":{"miscellaneous/functions.html":{}}}],["httpcode",{"_index":282,"title":{},"body":{"classes/CrudController.html":{}}}],["httpcode(httpstatus.accepted",{"_index":313,"title":{},"body":{"classes/CrudController.html":{}}}],["httpcode(httpstatus.created",{"_index":310,"title":{},"body":{"classes/CrudController.html":{}}}],["https://docs.nestjs.com",{"_index":497,"title":{},"body":{"controllers/HealthController.html":{}}}],["https://dummyimage.com/${width}x${height}/${utils.generatedlogocolor()}/ffffff.jpg&text=${letter",{"_index":1052,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://github.com/microsoft/typescript/issues/21592",{"_index":387,"title":{},"body":{"classes/CrudService.html":{}}}],["https://github.com/typeorm/typeorm/issues/1544",{"_index":317,"title":{},"body":{"classes/CrudController.html":{}}}],["https://nestjs.com",{"_index":1031,"title":{},"body":{"index.html":{}}}],["httpstatus",{"_index":281,"title":{},"body":{"classes/CrudController.html":{}}}],["httpstatus.bad_request",{"_index":308,"title":{},"body":{"classes/CrudController.html":{}}}],["httpstatus.created",{"_index":306,"title":{},"body":{"classes/CrudController.html":{}}}],["httpstatus.forbidden",{"_index":296,"title":{},"body":{"classes/CrudController.html":{}}}],["httpstatus.no_content",{"_index":318,"title":{},"body":{"classes/CrudController.html":{}}}],["httpstatus.not_found",{"_index":303,"title":{},"body":{"classes/CrudController.html":{}}}],["httpstatus.ok",{"_index":299,"title":{},"body":{"classes/CrudController.html":{}}}],["httpstatus.unauthorized",{"_index":294,"title":{},"body":{"classes/CrudController.html":{}}}],["iaddress",{"_index":524,"title":{"interfaces/IAddress.html":{}},"body":{"interfaces/IAddress.html":{},"interfaces/IGeoLocationCreateObject.html":{},"interfaces/IGeolocationUpdateObject.html":{},"interfaces/ILocation.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["iauthlogininput",{"_index":539,"title":{"interfaces/IAuthLoginInput.html":{}},"body":{"interfaces/IAuthLoginInput.html":{},"interfaces/IAuthResponse.html":{},"interfaces/IUser.html":{},"interfaces/IUserCreateInput.html":{},"interfaces/IUserFindInput.html":{},"interfaces/IUserRegistrationInput.html":{},"interfaces/IUserUpdateInput.html":{},"coverage.html":{}}}],["iauthresponse",{"_index":562,"title":{"interfaces/IAuthResponse.html":{}},"body":{"interfaces/IAuthLoginInput.html":{},"interfaces/IAuthResponse.html":{},"interfaces/IUser.html":{},"interfaces/IUserCreateInput.html":{},"interfaces/IUserFindInput.html":{},"interfaces/IUserRegistrationInput.html":{},"interfaces/IUserUpdateInput.html":{},"coverage.html":{}}}],["ibaseentitymodel",{"_index":70,"title":{"interfaces/IBaseEntityModel.html":{}},"body":{"classes/Base.html":{},"interfaces/IBaseEntityModel.html":{},"interfaces/ICountry.html":{},"interfaces/ICurrency.html":{},"classes/Model.html":{},"coverage.html":{}}}],["icountry",{"_index":574,"title":{"interfaces/ICountry.html":{}},"body":{"interfaces/ICountry.html":{},"coverage.html":{}}}],["icrud.service",{"_index":289,"title":{},"body":{"classes/CrudController.html":{},"classes/CrudService.html":{}}}],["icrudservice",{"_index":235,"title":{"interfaces/ICrudService.html":{}},"body":{"classes/CrudController.html":{},"classes/CrudService.html":{},"interfaces/ICrudService.html":{},"coverage.html":{}}}],["icurrency",{"_index":586,"title":{"interfaces/ICurrency.html":{}},"body":{"interfaces/ICurrency.html":{},"coverage.html":{}}}],["id",{"_index":75,"title":{},"body":{"classes/Base.html":{},"controllers/CatsController.html":{},"injectables/CatsService.html":{},"classes/CrudController.html":{},"classes/CrudService.html":{},"interfaces/IBaseEntityModel.html":{},"interfaces/ICrudService.html":{},"classes/Model.html":{}}}],["id'})@apiresponse({status",{"_index":271,"title":{},"body":{"classes/CrudController.html":{}}}],["identifier",{"_index":815,"title":{},"body":{"coverage.html":{}}}],["igeolocationcreateobject",{"_index":536,"title":{"interfaces/IGeoLocationCreateObject.html":{}},"body":{"interfaces/IAddress.html":{},"interfaces/IGeoLocationCreateObject.html":{},"interfaces/IGeolocationUpdateObject.html":{},"interfaces/ILocation.html":{},"coverage.html":{}}}],["igeolocationupdateobject",{"_index":538,"title":{"interfaces/IGeolocationUpdateObject.html":{}},"body":{"interfaces/IAddress.html":{},"interfaces/IGeoLocationCreateObject.html":{},"interfaces/IGeolocationUpdateObject.html":{},"interfaces/ILocation.html":{},"coverage.html":{}}}],["ignore",{"_index":400,"title":{},"body":{"classes/CrudService.html":{}}}],["ilanguage",{"_index":589,"title":{"interfaces/ILanguage.html":{}},"body":{"interfaces/ILanguage.html":{},"interfaces/ILanguageFindInput.html":{},"interfaces/ILanguageName.html":{},"coverage.html":{}}}],["ilanguagefindinput",{"_index":597,"title":{"interfaces/ILanguageFindInput.html":{}},"body":{"interfaces/ILanguage.html":{},"interfaces/ILanguageFindInput.html":{},"interfaces/ILanguageName.html":{},"coverage.html":{}}}],["ilanguagename",{"_index":596,"title":{"interfaces/ILanguageName.html":{}},"body":{"interfaces/ILanguage.html":{},"interfaces/ILanguageFindInput.html":{},"interfaces/ILanguageName.html":{},"coverage.html":{}}}],["ilistqueryinput",{"_index":598,"title":{"interfaces/IListQueryInput.html":{}},"body":{"interfaces/IListQueryInput.html":{},"interfaces/IPagination-1.html":{},"interfaces/IPaginationInput.html":{},"coverage.html":{}}}],["ilocation",{"_index":532,"title":{"interfaces/ILocation.html":{}},"body":{"interfaces/IAddress.html":{},"interfaces/IGeoLocationCreateObject.html":{},"interfaces/IGeolocationUpdateObject.html":{},"interfaces/ILocation.html":{},"coverage.html":{}}}],["imageurl",{"_index":553,"title":{},"body":{"interfaces/IAuthLoginInput.html":{},"interfaces/IAuthResponse.html":{},"interfaces/IUser.html":{},"interfaces/IUserCreateInput.html":{},"interfaces/IUserFindInput.html":{},"interfaces/IUserRegistrationInput.html":{},"interfaces/IUserUpdateInput.html":{}}}],["implements",{"_index":69,"title":{},"body":{"classes/Base.html":{},"classes/CrudService.html":{},"controllers/HealthController.html":{},"classes/Model.html":{}}}],["import",{"_index":16,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Base.html":{},"controllers/CatsController.html":{},"modules/CatsModule.html":{},"injectables/CatsService.html":{},"modules/CoreModule.html":{},"modules/CronModule.html":{},"injectables/CronService.html":{},"classes/CrudController.html":{},"classes/CrudService.html":{},"injectables/DBHelper.html":{},"controllers/HealthController.html":{},"interfaces/IAuthLoginInput.html":{},"interfaces/IAuthResponse.html":{},"interfaces/ICountry.html":{},"interfaces/ICrudService.html":{},"interfaces/ICurrency.html":{},"interfaces/IRole.html":{},"interfaces/IRolePermission.html":{},"interfaces/IRolePermissionCreateInput.html":{},"interfaces/IRolePermissionUpdateInput.html":{},"interfaces/IUser.html":{},"interfaces/IUserCreateInput.html":{},"interfaces/IUserFindInput.html":{},"interfaces/IUserRegistrationInput.html":{},"interfaces/IUserUpdateInput.html":{},"classes/Model.html":{},"classes/PaginationParams.html":{},"controllers/QueueController.html":{},"modules/QueueModule.html":{},"injectables/QueueService.html":{},"classes/UpdateCatDto.html":{}}}],["imports",{"_index":48,"title":{},"body":{"modules/AppModule.html":{},"modules/CoreModule.html":{},"modules/QueueModule.html":{}}}],["included",{"_index":604,"title":{},"body":{"interfaces/IListQueryInput.html":{},"interfaces/IPagination.html":{},"interfaces/IPagination-1.html":{},"interfaces/IPaginationInput.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/Base.html":{},"controllers/CatsController.html":{},"injectables/CatsService.html":{},"injectables/CronService.html":{},"classes/CrudController.html":{},"classes/CrudService.html":{},"injectables/DBHelper.html":{},"interfaces/FileStorageOption.html":{},"interfaces/FileSystem.html":{},"controllers/HealthController.html":{},"interfaces/IAddress.html":{},"interfaces/IAuthLoginInput.html":{},"interfaces/IAuthResponse.html":{},"interfaces/IBaseEntityModel.html":{},"interfaces/ICountry.html":{},"interfaces/ICrudService.html":{},"interfaces/ICurrency.html":{},"interfaces/IGeoLocationCreateObject.html":{},"interfaces/IGeolocationUpdateObject.html":{},"interfaces/ILanguage.html":{},"interfaces/ILanguageFindInput.html":{},"interfaces/ILanguageName.html":{},"interfaces/IListQueryInput.html":{},"interfaces/ILocation.html":{},"interfaces/IPagination.html":{},"interfaces/IPagination-1.html":{},"interfaces/IPaginationInput.html":{},"interfaces/IRole.html":{},"interfaces/IRolePermission.html":{},"interfaces/IRolePermissionCreateInput.html":{},"interfaces/IRolePermissionUpdateInput.html":{},"interfaces/ITreeNode.html":{},"interfaces/ITryRequest.html":{},"interfaces/IUser.html":{},"interfaces/IUserCreateInput.html":{},"interfaces/IUserFindInput.html":{},"interfaces/IUserRegistrationInput.html":{},"interfaces/IUserUpdateInput.html":{},"classes/PaginationParams.html":{},"controllers/QueueController.html":{},"injectables/QueueService.html":{},"interfaces/S3FileStorageProviderConfig.html":{},"interfaces/UploadedFile.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Base.html":{},"classes/Cat.html":{},"controllers/CatsController.html":{},"modules/CatsModule.html":{},"injectables/CatsService.html":{},"modules/CoreModule.html":{},"classes/CreateCatDto.html":{},"modules/CronModule.html":{},"injectables/CronService.html":{},"classes/CrudController.html":{},"classes/CrudService.html":{},"injectables/DBHelper.html":{},"interfaces/FileStorageOption.html":{},"interfaces/FileSystem.html":{},"controllers/HealthController.html":{},"interfaces/IAddress.html":{},"interfaces/IAuthLoginInput.html":{},"interfaces/IAuthResponse.html":{},"interfaces/IBaseEntityModel.html":{},"interfaces/ICountry.html":{},"interfaces/ICrudService.html":{},"interfaces/ICurrency.html":{},"interfaces/IGeoLocationCreateObject.html":{},"interfaces/IGeolocationUpdateObject.html":{},"interfaces/ILanguage.html":{},"interfaces/ILanguageFindInput.html":{},"interfaces/ILanguageName.html":{},"interfaces/IListQueryInput.html":{},"interfaces/ILocation.html":{},"interfaces/IPagination.html":{},"interfaces/IPagination-1.html":{},"interfaces/IPaginationInput.html":{},"interfaces/IRole.html":{},"interfaces/IRolePermission.html":{},"interfaces/IRolePermissionCreateInput.html":{},"interfaces/IRolePermissionUpdateInput.html":{},"interfaces/ITreeNode.html":{},"interfaces/ITryRequest.html":{},"interfaces/IUser.html":{},"interfaces/IUserCreateInput.html":{},"interfaces/IUserFindInput.html":{},"interfaces/IUserRegistrationInput.html":{},"interfaces/IUserUpdateInput.html":{},"classes/Model.html":{},"classes/PaginationParams.html":{},"controllers/QueueController.html":{},"modules/QueueModule.html":{},"injectables/QueueService.html":{},"interfaces/S3FileStorageProviderConfig.html":{},"classes/UpdateCatDto.html":{},"interfaces/UploadedFile.html":{}}}],["initialized",{"_index":520,"title":{},"body":{"controllers/HealthController.html":{}}}],["injectable",{"_index":58,"title":{"injectables/AppService.html":{},"injectables/CatsService.html":{},"injectables/CronService.html":{},"injectables/DBHelper.html":{},"injectables/QueueService.html":{}},"body":{"injectables/AppService.html":{},"injectables/CatsService.html":{},"injectables/CronService.html":{},"injectables/DBHelper.html":{},"injectables/QueueService.html":{},"coverage.html":{}}}],["injectables",{"_index":59,"title":{},"body":{"injectables/AppService.html":{},"injectables/CatsService.html":{},"injectables/CronService.html":{},"injectables/DBHelper.html":{},"injectables/QueueService.html":{},"overview.html":{}}}],["input",{"_index":108,"title":{},"body":{"classes/Base.html":{},"classes/CrudController.html":{},"classes/Model.html":{}}}],["installation",{"_index":992,"title":{},"body":{"index.html":{}}}],["installrunning",{"_index":994,"title":{},"body":{"index.html":{}}}],["interface",{"_index":439,"title":{"interfaces/FileStorageOption.html":{},"interfaces/FileSystem.html":{},"interfaces/IAddress.html":{},"interfaces/IAuthLoginInput.html":{},"interfaces/IAuthResponse.html":{},"interfaces/IBaseEntityModel.html":{},"interfaces/ICountry.html":{},"interfaces/ICrudService.html":{},"interfaces/ICurrency.html":{},"interfaces/IGeoLocationCreateObject.html":{},"interfaces/IGeolocationUpdateObject.html":{},"interfaces/ILanguage.html":{},"interfaces/ILanguageFindInput.html":{},"interfaces/ILanguageName.html":{},"interfaces/IListQueryInput.html":{},"interfaces/ILocation.html":{},"interfaces/IPagination.html":{},"interfaces/IPagination-1.html":{},"interfaces/IPaginationInput.html":{},"interfaces/IRole.html":{},"interfaces/IRolePermission.html":{},"interfaces/IRolePermissionCreateInput.html":{},"interfaces/IRolePermissionUpdateInput.html":{},"interfaces/ITreeNode.html":{},"interfaces/ITryRequest.html":{},"interfaces/IUser.html":{},"interfaces/IUserCreateInput.html":{},"interfaces/IUserFindInput.html":{},"interfaces/IUserRegistrationInput.html":{},"interfaces/IUserUpdateInput.html":{},"interfaces/S3FileStorageProviderConfig.html":{},"interfaces/UploadedFile.html":{}},"body":{"interfaces/FileStorageOption.html":{},"interfaces/FileSystem.html":{},"interfaces/IAddress.html":{},"interfaces/IAuthLoginInput.html":{},"interfaces/IAuthResponse.html":{},"interfaces/IBaseEntityModel.html":{},"interfaces/ICountry.html":{},"interfaces/ICrudService.html":{},"interfaces/ICurrency.html":{},"interfaces/IGeoLocationCreateObject.html":{},"interfaces/IGeolocationUpdateObject.html":{},"interfaces/ILanguage.html":{},"interfaces/ILanguageFindInput.html":{},"interfaces/ILanguageName.html":{},"interfaces/IListQueryInput.html":{},"interfaces/ILocation.html":{},"interfaces/IPagination.html":{},"interfaces/IPagination-1.html":{},"interfaces/IPaginationInput.html":{},"interfaces/IRole.html":{},"interfaces/IRolePermission.html":{},"interfaces/IRolePermissionCreateInput.html":{},"interfaces/IRolePermissionUpdateInput.html":{},"interfaces/ITreeNode.html":{},"interfaces/ITryRequest.html":{},"interfaces/IUser.html":{},"interfaces/IUserCreateInput.html":{},"interfaces/IUserFindInput.html":{},"interfaces/IUserRegistrationInput.html":{},"interfaces/IUserUpdateInput.html":{},"interfaces/S3FileStorageProviderConfig.html":{},"interfaces/UploadedFile.html":{},"coverage.html":{}}}],["interfaces",{"_index":441,"title":{},"body":{"interfaces/FileStorageOption.html":{},"interfaces/FileSystem.html":{},"interfaces/IAddress.html":{},"interfaces/IAuthLoginInput.html":{},"interfaces/IAuthResponse.html":{},"interfaces/IBaseEntityModel.html":{},"interfaces/ICountry.html":{},"interfaces/ICrudService.html":{},"interfaces/ICurrency.html":{},"interfaces/IGeoLocationCreateObject.html":{},"interfaces/IGeolocationUpdateObject.html":{},"interfaces/ILanguage.html":{},"interfaces/ILanguageFindInput.html":{},"interfaces/ILanguageName.html":{},"interfaces/IListQueryInput.html":{},"interfaces/ILocation.html":{},"interfaces/IPagination.html":{},"interfaces/IPagination-1.html":{},"interfaces/IPaginationInput.html":{},"interfaces/IRole.html":{},"interfaces/IRolePermission.html":{},"interfaces/IRolePermissionCreateInput.html":{},"interfaces/IRolePermissionUpdateInput.html":{},"interfaces/ITreeNode.html":{},"interfaces/ITryRequest.html":{},"interfaces/IUser.html":{},"interfaces/IUserCreateInput.html":{},"interfaces/IUserFindInput.html":{},"interfaces/IUserRegistrationInput.html":{},"interfaces/IUserUpdateInput.html":{},"interfaces/S3FileStorageProviderConfig.html":{},"interfaces/UploadedFile.html":{},"overview.html":{}}}],["interval",{"_index":219,"title":{},"body":{"injectables/CronService.html":{}}}],["interval(100000",{"_index":210,"title":{},"body":{"injectables/CronService.html":{}}}],["invalid",{"_index":248,"title":{},"body":{"classes/CrudController.html":{}}}],["invoices_edit",{"_index":675,"title":{},"body":{"interfaces/IRolePermission.html":{},"interfaces/IRolePermissionCreateInput.html":{},"interfaces/IRolePermissionUpdateInput.html":{}}}],["invoices_view",{"_index":674,"title":{},"body":{"interfaces/IRolePermission.html":{},"interfaces/IRolePermissionCreateInput.html":{},"interfaces/IRolePermissionUpdateInput.html":{}}}],["ipagination",{"_index":290,"title":{"interfaces/IPagination.html":{},"interfaces/IPagination-1.html":{}},"body":{"classes/CrudController.html":{},"classes/CrudService.html":{},"interfaces/ICrudService.html":{},"interfaces/IListQueryInput.html":{},"interfaces/IPagination.html":{},"interfaces/IPagination-1.html":{},"interfaces/IPaginationInput.html":{},"coverage.html":{}}}],["ipaginationinput",{"_index":601,"title":{"interfaces/IPaginationInput.html":{}},"body":{"interfaces/IListQueryInput.html":{},"interfaces/IPagination-1.html":{},"interfaces/IPaginationInput.html":{},"coverage.html":{}}}],["irole",{"_index":543,"title":{"interfaces/IRole.html":{}},"body":{"interfaces/IAuthLoginInput.html":{},"interfaces/IAuthResponse.html":{},"interfaces/IRole.html":{},"interfaces/IRolePermission.html":{},"interfaces/IRolePermissionCreateInput.html":{},"interfaces/IRolePermissionUpdateInput.html":{},"interfaces/IUser.html":{},"interfaces/IUserCreateInput.html":{},"interfaces/IUserFindInput.html":{},"interfaces/IUserRegistrationInput.html":{},"interfaces/IUserUpdateInput.html":{},"coverage.html":{}}}],["irolepermission",{"_index":614,"title":{"interfaces/IRolePermission.html":{}},"body":{"interfaces/IRole.html":{},"interfaces/IRolePermission.html":{},"interfaces/IRolePermissionCreateInput.html":{},"interfaces/IRolePermissionUpdateInput.html":{},"coverage.html":{}}}],["irolepermissioncreateinput",{"_index":628,"title":{"interfaces/IRolePermissionCreateInput.html":{}},"body":{"interfaces/IRolePermission.html":{},"interfaces/IRolePermissionCreateInput.html":{},"interfaces/IRolePermissionUpdateInput.html":{},"coverage.html":{}}}],["irolepermissionupdateinput",{"_index":629,"title":{"interfaces/IRolePermissionUpdateInput.html":{}},"body":{"interfaces/IRolePermission.html":{},"interfaces/IRolePermissionCreateInput.html":{},"interfaces/IRolePermissionUpdateInput.html":{},"coverage.html":{}}}],["is_system",{"_index":593,"title":{},"body":{"interfaces/ILanguage.html":{},"interfaces/ILanguageFindInput.html":{},"interfaces/ILanguageName.html":{}}}],["isempty",{"_index":861,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["isempty(value",{"_index":966,"title":{},"body":{"miscellaneous/functions.html":{}}}],["isjsobject",{"_index":862,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["isjsobject(object",{"_index":967,"title":{},"body":{"miscellaneous/functions.html":{}}}],["isocode",{"_index":576,"title":{},"body":{"interfaces/ICountry.html":{},"interfaces/ICurrency.html":{}}}],["isoptional",{"_index":782,"title":{},"body":{"classes/PaginationParams.html":{}}}],["isselected",{"_index":594,"title":{},"body":{"interfaces/ILanguage.html":{},"interfaces/ILanguageFindInput.html":{},"interfaces/ILanguageName.html":{}}}],["items",{"_index":373,"title":{},"body":{"classes/CrudService.html":{},"interfaces/IListQueryInput.html":{},"interfaces/IPagination.html":{},"interfaces/IPagination-1.html":{},"interfaces/IPaginationInput.html":{},"miscellaneous/functions.html":{}}}],["itreenode",{"_index":753,"title":{"interfaces/ITreeNode.html":{}},"body":{"interfaces/ITreeNode.html":{},"coverage.html":{}}}],["itryrequest",{"_index":364,"title":{"interfaces/ITryRequest.html":{}},"body":{"classes/CrudService.html":{},"interfaces/ITryRequest.html":{},"coverage.html":{}}}],["iuser",{"_index":545,"title":{"interfaces/IUser.html":{}},"body":{"interfaces/IAuthLoginInput.html":{},"interfaces/IAuthResponse.html":{},"interfaces/IUser.html":{},"interfaces/IUserCreateInput.html":{},"interfaces/IUserFindInput.html":{},"interfaces/IUserRegistrationInput.html":{},"interfaces/IUserUpdateInput.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["iusercreateinput",{"_index":564,"title":{"interfaces/IUserCreateInput.html":{}},"body":{"interfaces/IAuthLoginInput.html":{},"interfaces/IAuthResponse.html":{},"interfaces/IUser.html":{},"interfaces/IUserCreateInput.html":{},"interfaces/IUserFindInput.html":{},"interfaces/IUserRegistrationInput.html":{},"interfaces/IUserUpdateInput.html":{},"coverage.html":{}}}],["iuserfindinput",{"_index":555,"title":{"interfaces/IUserFindInput.html":{}},"body":{"interfaces/IAuthLoginInput.html":{},"interfaces/IAuthResponse.html":{},"interfaces/IUser.html":{},"interfaces/IUserCreateInput.html":{},"interfaces/IUserFindInput.html":{},"interfaces/IUserRegistrationInput.html":{},"interfaces/IUserUpdateInput.html":{},"coverage.html":{}}}],["iuserregistrationinput",{"_index":557,"title":{"interfaces/IUserRegistrationInput.html":{}},"body":{"interfaces/IAuthLoginInput.html":{},"interfaces/IAuthResponse.html":{},"interfaces/IUser.html":{},"interfaces/IUserCreateInput.html":{},"interfaces/IUserFindInput.html":{},"interfaces/IUserRegistrationInput.html":{},"interfaces/IUserUpdateInput.html":{},"coverage.html":{}}}],["iuserupdateinput",{"_index":565,"title":{"interfaces/IUserUpdateInput.html":{}},"body":{"interfaces/IAuthLoginInput.html":{},"interfaces/IAuthResponse.html":{},"interfaces/IUser.html":{},"interfaces/IUserCreateInput.html":{},"interfaces/IUserFindInput.html":{},"interfaces/IUserRegistrationInput.html":{},"interfaces/IUserUpdateInput.html":{},"coverage.html":{}}}],["joi",{"_index":892,"title":{},"body":{"dependencies.html":{}}}],["join",{"_index":1020,"title":{},"body":{"index.html":{}}}],["kamil",{"_index":1028,"title":{},"body":{"index.html":{}}}],["key",{"_index":457,"title":{},"body":{"interfaces/FileStorageOption.html":{},"interfaces/FileSystem.html":{},"interfaces/S3FileStorageProviderConfig.html":{},"interfaces/UploadedFile.html":{},"miscellaneous/functions.html":{}}}],["keyof",{"_index":794,"title":{},"body":{"classes/PaginationParams.html":{}}}],["languagesenum",{"_index":566,"title":{},"body":{"interfaces/IAuthLoginInput.html":{},"interfaces/IAuthResponse.html":{},"interfaces/IUser.html":{},"interfaces/IUserCreateInput.html":{},"interfaces/IUserFindInput.html":{},"interfaces/IUserRegistrationInput.html":{},"interfaces/IUserUpdateInput.html":{}}}],["last",{"_index":931,"title":{},"body":{"miscellaneous/functions.html":{}}}],["lastname",{"_index":547,"title":{},"body":{"interfaces/IAuthLoginInput.html":{},"interfaces/IAuthResponse.html":{},"interfaces/IUser.html":{},"interfaces/IUserCreateInput.html":{},"interfaces/IUserFindInput.html":{},"interfaces/IUserRegistrationInput.html":{},"interfaces/IUserUpdateInput.html":{}}}],["legend",{"_index":33,"title":{},"body":{"modules/AppModule.html":{},"modules/CatsModule.html":{},"modules/CronModule.html":{},"modules/QueueModule.html":{},"overview.html":{}}}],["letter",{"_index":1048,"title":{},"body":{"miscellaneous/variables.html":{}}}],["libs/.../geo",{"_index":922,"title":{},"body":{"miscellaneous/functions.html":{}}}],["libs/.../moment",{"_index":1044,"title":{},"body":{"miscellaneous/variables.html":{}}}],["libs/.../role",{"_index":1045,"title":{},"body":{"miscellaneous/variables.html":{}}}],["libs/.../tohexstring.ts",{"_index":923,"title":{},"body":{"miscellaneous/functions.html":{}}}],["libs/.../utils.ts",{"_index":920,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["libs/core/src/core.module.ts",{"_index":174,"title":{},"body":{"modules/CoreModule.html":{}}}],["libs/core/src/crud/crud.controller.ts",{"_index":229,"title":{},"body":{"classes/CrudController.html":{},"coverage.html":{}}}],["libs/core/src/crud/crud.controller.ts:102",{"_index":260,"title":{},"body":{"classes/CrudController.html":{}}}],["libs/core/src/crud/crud.controller.ts:24",{"_index":236,"title":{},"body":{"classes/CrudController.html":{}}}],["libs/core/src/crud/crud.controller.ts:33",{"_index":267,"title":{},"body":{"classes/CrudController.html":{}}}],["libs/core/src/crud/crud.controller.ts:47",{"_index":274,"title":{},"body":{"classes/CrudController.html":{}}}],["libs/core/src/crud/crud.controller.ts:63",{"_index":254,"title":{},"body":{"classes/CrudController.html":{}}}],["libs/core/src/crud/crud.controller.ts:83",{"_index":280,"title":{},"body":{"classes/CrudController.html":{}}}],["libs/core/src/crud/crud.service.ts",{"_index":322,"title":{},"body":{"classes/CrudService.html":{},"coverage.html":{}}}],["libs/core/src/crud/crud.service.ts:103",{"_index":337,"title":{},"body":{"classes/CrudService.html":{}}}],["libs/core/src/crud/crud.service.ts:117",{"_index":339,"title":{},"body":{"classes/CrudService.html":{}}}],["libs/core/src/crud/crud.service.ts:24",{"_index":330,"title":{},"body":{"classes/CrudService.html":{}}}],["libs/core/src/crud/crud.service.ts:30",{"_index":333,"title":{},"body":{"classes/CrudService.html":{}}}],["libs/core/src/crud/crud.service.ts:34",{"_index":344,"title":{},"body":{"classes/CrudService.html":{}}}],["libs/core/src/crud/crud.service.ts:41",{"_index":348,"title":{},"body":{"classes/CrudService.html":{}}}],["libs/core/src/crud/crud.service.ts:54",{"_index":346,"title":{},"body":{"classes/CrudService.html":{}}}],["libs/core/src/crud/crud.service.ts:65",{"_index":334,"title":{},"body":{"classes/CrudService.html":{}}}],["libs/core/src/crud/crud.service.ts:76",{"_index":350,"title":{},"body":{"classes/CrudService.html":{}}}],["libs/core/src/crud/crud.service.ts:80",{"_index":353,"title":{},"body":{"classes/CrudService.html":{}}}],["libs/core/src/crud/icrud.service.ts",{"_index":578,"title":{},"body":{"interfaces/ICrudService.html":{},"coverage.html":{}}}],["libs/core/src/crud/icrud.service.ts:14",{"_index":579,"title":{},"body":{"interfaces/ICrudService.html":{}}}],["libs/core/src/crud/icrud.service.ts:16",{"_index":582,"title":{},"body":{"interfaces/ICrudService.html":{}}}],["libs/core/src/crud/icrud.service.ts:18",{"_index":583,"title":{},"body":{"interfaces/ICrudService.html":{}}}],["libs/core/src/crud/icrud.service.ts:23",{"_index":580,"title":{},"body":{"interfaces/ICrudService.html":{}}}],["libs/core/src/crud/icrud.service.ts:25",{"_index":584,"title":{},"body":{"interfaces/ICrudService.html":{}}}],["libs/core/src/crud/icrud.service.ts:31",{"_index":581,"title":{},"body":{"interfaces/ICrudService.html":{}}}],["libs/core/src/crud/pagination",{"_index":762,"title":{},"body":{"classes/PaginationParams.html":{},"coverage.html":{}}}],["libs/core/src/crud/pagination.ts",{"_index":610,"title":{},"body":{"interfaces/IPagination.html":{},"coverage.html":{}}}],["libs/core/src/crud/try",{"_index":759,"title":{},"body":{"interfaces/ITryRequest.html":{},"coverage.html":{}}}],["libs/core/src/dbhelper.ts",{"_index":412,"title":{},"body":{"injectables/DBHelper.html":{},"coverage.html":{}}}],["libs/core/src/dbhelper.ts:13",{"_index":417,"title":{},"body":{"injectables/DBHelper.html":{}}}],["libs/core/src/dbhelper.ts:18",{"_index":420,"title":{},"body":{"injectables/DBHelper.html":{}}}],["libs/core/src/dbhelper.ts:9",{"_index":415,"title":{},"body":{"injectables/DBHelper.html":{}}}],["libs/core/src/entities/base.ts",{"_index":66,"title":{},"body":{"classes/Base.html":{},"classes/Model.html":{},"coverage.html":{}}}],["libs/core/src/entities/base.ts:13",{"_index":761,"title":{},"body":{"classes/Model.html":{}}}],["libs/core/src/entities/base.ts:24",{"_index":93,"title":{},"body":{"classes/Base.html":{}}}],["libs/core/src/entities/base.ts:32",{"_index":86,"title":{},"body":{"classes/Base.html":{}}}],["libs/core/src/entities/base.ts:40",{"_index":95,"title":{},"body":{"classes/Base.html":{}}}],["libs/core/src/entities/base.ts:48",{"_index":89,"title":{},"body":{"classes/Base.html":{}}}],["libs/core/src/entities/tohexstring.ts",{"_index":831,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["libs/core/src/moment",{"_index":833,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["libs/core/src/utils.ts",{"_index":837,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["libs/cron/src/cron.module.ts",{"_index":192,"title":{},"body":{"modules/CronModule.html":{}}}],["libs/cron/src/cron.service.ts",{"_index":201,"title":{},"body":{"injectables/CronService.html":{},"coverage.html":{}}}],["libs/cron/src/cron.service.ts:14",{"_index":211,"title":{},"body":{"injectables/CronService.html":{}}}],["libs/cron/src/cron.service.ts:19",{"_index":213,"title":{},"body":{"injectables/CronService.html":{}}}],["libs/cron/src/cron.service.ts:6",{"_index":217,"title":{},"body":{"injectables/CronService.html":{}}}],["libs/cron/src/cron.service.ts:9",{"_index":208,"title":{},"body":{"injectables/CronService.html":{}}}],["libs/health/src/health.controller.ts",{"_index":475,"title":{},"body":{"controllers/HealthController.html":{},"coverage.html":{}}}],["libs/health/src/health.controller.ts:15",{"_index":481,"title":{},"body":{"controllers/HealthController.html":{}}}],["libs/health/src/health.controller.ts:29",{"_index":484,"title":{},"body":{"controllers/HealthController.html":{}}}],["libs/health/src/health.controller.ts:33",{"_index":483,"title":{},"body":{"controllers/HealthController.html":{}}}],["libs/interfaces/src/models/base",{"_index":572,"title":{},"body":{"interfaces/IBaseEntityModel.html":{},"coverage.html":{}}}],["libs/interfaces/src/models/core.model.ts",{"_index":599,"title":{},"body":{"interfaces/IListQueryInput.html":{},"interfaces/IPagination-1.html":{},"interfaces/IPaginationInput.html":{},"coverage.html":{}}}],["libs/interfaces/src/models/country.model.ts",{"_index":575,"title":{},"body":{"interfaces/ICountry.html":{},"coverage.html":{}}}],["libs/interfaces/src/models/currency.model.ts",{"_index":587,"title":{},"body":{"interfaces/ICurrency.html":{},"coverage.html":{}}}],["libs/interfaces/src/models/file",{"_index":442,"title":{},"body":{"interfaces/FileStorageOption.html":{},"interfaces/FileSystem.html":{},"interfaces/S3FileStorageProviderConfig.html":{},"interfaces/UploadedFile.html":{},"coverage.html":{}}}],["libs/interfaces/src/models/geo",{"_index":525,"title":{},"body":{"interfaces/IAddress.html":{},"interfaces/IGeoLocationCreateObject.html":{},"interfaces/IGeolocationUpdateObject.html":{},"interfaces/ILocation.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["libs/interfaces/src/models/language.model.ts",{"_index":590,"title":{},"body":{"interfaces/ILanguage.html":{},"interfaces/ILanguageFindInput.html":{},"interfaces/ILanguageName.html":{},"coverage.html":{}}}],["libs/interfaces/src/models/role",{"_index":624,"title":{},"body":{"interfaces/IRolePermission.html":{},"interfaces/IRolePermissionCreateInput.html":{},"interfaces/IRolePermissionUpdateInput.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["libs/interfaces/src/models/role.model.ts",{"_index":612,"title":{},"body":{"interfaces/IRole.html":{},"coverage.html":{}}}],["libs/interfaces/src/models/tree",{"_index":754,"title":{},"body":{"interfaces/ITreeNode.html":{},"coverage.html":{}}}],["libs/interfaces/src/models/user.model.ts",{"_index":540,"title":{},"body":{"interfaces/IAuthLoginInput.html":{},"interfaces/IAuthResponse.html":{},"interfaces/IUser.html":{},"interfaces/IUserCreateInput.html":{},"interfaces/IUserFindInput.html":{},"interfaces/IUserRegistrationInput.html":{},"interfaces/IUserUpdateInput.html":{},"coverage.html":{}}}],["libs/utils/src/utils.ts",{"_index":856,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["license",{"_index":1034,"title":{},"body":{"index.html":{}}}],["licensed",{"_index":1010,"title":{},"body":{"index.html":{}}}],["limit",{"_index":602,"title":{},"body":{"interfaces/IListQueryInput.html":{},"interfaces/IPagination-1.html":{},"interfaces/IPaginationInput.html":{},"classes/PaginationParams.html":{},"dependencies.html":{}}}],["line",{"_index":196,"title":{},"body":{"modules/CronModule.html":{},"classes/CrudService.html":{},"controllers/HealthController.html":{},"modules/QueueModule.html":{},"miscellaneous/variables.html":{}}}],["listing",{"_index":606,"title":{},"body":{"interfaces/IListQueryInput.html":{},"interfaces/IPagination.html":{},"interfaces/IPagination-1.html":{},"interfaces/IPaginationInput.html":{}}}],["literal",{"_index":542,"title":{},"body":{"interfaces/IAuthLoginInput.html":{}}}],["loc",{"_index":537,"title":{},"body":{"interfaces/IAddress.html":{},"interfaces/IGeoLocationCreateObject.html":{},"interfaces/IGeolocationUpdateObject.html":{},"interfaces/ILocation.html":{}}}],["local",{"_index":450,"title":{},"body":{"interfaces/FileStorageOption.html":{},"interfaces/FileSystem.html":{},"interfaces/S3FileStorageProviderConfig.html":{},"interfaces/UploadedFile.html":{},"dependencies.html":{}}}],["localdt",{"_index":953,"title":{},"body":{"miscellaneous/functions.html":{}}}],["localdtformat",{"_index":952,"title":{},"body":{"miscellaneous/functions.html":{}}}],["location.model.ts",{"_index":526,"title":{},"body":{"interfaces/IAddress.html":{},"interfaces/IGeoLocationCreateObject.html":{},"interfaces/IGeolocationUpdateObject.html":{},"interfaces/ILocation.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["lodash",{"_index":423,"title":{},"body":{"injectables/DBHelper.html":{},"dependencies.html":{}}}],["logger",{"_index":203,"title":{},"body":{"injectables/CronService.html":{}}}],["logger(cronservice.name",{"_index":216,"title":{},"body":{"injectables/CronService.html":{}}}],["logging",{"_index":186,"title":{},"body":{"modules/CoreModule.html":{}}}],["manager",{"_index":622,"title":{},"body":{"interfaces/IRole.html":{}}}],["matching",{"_index":27,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Base.html":{},"classes/Cat.html":{},"controllers/CatsController.html":{},"modules/CatsModule.html":{},"injectables/CatsService.html":{},"modules/CoreModule.html":{},"classes/CreateCatDto.html":{},"modules/CronModule.html":{},"injectables/CronService.html":{},"classes/CrudController.html":{},"classes/CrudService.html":{},"injectables/DBHelper.html":{},"interfaces/FileStorageOption.html":{},"interfaces/FileSystem.html":{},"controllers/HealthController.html":{},"interfaces/IAddress.html":{},"interfaces/IAuthLoginInput.html":{},"interfaces/IAuthResponse.html":{},"interfaces/IBaseEntityModel.html":{},"interfaces/ICountry.html":{},"interfaces/ICrudService.html":{},"interfaces/ICurrency.html":{},"interfaces/IGeoLocationCreateObject.html":{},"interfaces/IGeolocationUpdateObject.html":{},"interfaces/ILanguage.html":{},"interfaces/ILanguageFindInput.html":{},"interfaces/ILanguageName.html":{},"interfaces/IListQueryInput.html":{},"interfaces/ILocation.html":{},"interfaces/IPagination.html":{},"interfaces/IPagination-1.html":{},"interfaces/IPaginationInput.html":{},"interfaces/IRole.html":{},"interfaces/IRolePermission.html":{},"interfaces/IRolePermissionCreateInput.html":{},"interfaces/IRolePermissionUpdateInput.html":{},"interfaces/ITreeNode.html":{},"interfaces/ITryRequest.html":{},"interfaces/IUser.html":{},"interfaces/IUserCreateInput.html":{},"interfaces/IUserFindInput.html":{},"interfaces/IUserRegistrationInput.html":{},"interfaces/IUserUpdateInput.html":{},"classes/Model.html":{},"classes/PaginationParams.html":{},"controllers/QueueController.html":{},"modules/QueueModule.html":{},"injectables/QueueService.html":{},"interfaces/S3FileStorageProviderConfig.html":{},"classes/UpdateCatDto.html":{},"interfaces/UploadedFile.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["max",{"_index":783,"title":{},"body":{"classes/PaginationParams.html":{}}}],["max(50",{"_index":790,"title":{},"body":{"classes/PaginationParams.html":{}}}],["maximum",{"_index":777,"title":{},"body":{"classes/PaginationParams.html":{},"miscellaneous/functions.html":{}}}],["mergemap",{"_index":360,"title":{},"body":{"classes/CrudService.html":{}}}],["mergemap((signal",{"_index":408,"title":{},"body":{"classes/CrudService.html":{}}}],["metadata",{"_index":907,"title":{},"body":{"dependencies.html":{}}}],["method",{"_index":393,"title":{},"body":{"classes/CrudService.html":{}}}],["methods",{"_index":8,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/CatsController.html":{},"injectables/CatsService.html":{},"injectables/CronService.html":{},"classes/CrudController.html":{},"classes/CrudService.html":{},"injectables/DBHelper.html":{},"controllers/HealthController.html":{},"interfaces/ICrudService.html":{},"controllers/QueueController.html":{},"injectables/QueueService.html":{}}}],["mimetype",{"_index":466,"title":{},"body":{"interfaces/FileStorageOption.html":{},"interfaces/FileSystem.html":{},"interfaces/S3FileStorageProviderConfig.html":{},"interfaces/UploadedFile.html":{}}}],["min",{"_index":784,"title":{},"body":{"classes/PaginationParams.html":{}}}],["min(0",{"_index":789,"title":{},"body":{"classes/PaginationParams.html":{}}}],["minimum",{"_index":772,"title":{},"body":{"classes/PaginationParams.html":{}}}],["miscellaneous",{"_index":918,"title":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":1009,"title":{},"body":{"index.html":{}}}],["mode",{"_index":999,"title":{},"body":{"index.html":{}}}],["model",{"_index":68,"title":{"classes/Model.html":{}},"body":{"classes/Base.html":{},"interfaces/IListQueryInput.html":{},"interfaces/IPagination-1.html":{},"interfaces/IPaginationInput.html":{},"classes/Model.html":{},"coverage.html":{}}}],["module",{"_index":29,"title":{"modules/AppModule.html":{},"modules/CatsModule.html":{},"modules/CoreModule.html":{},"modules/CronModule.html":{},"modules/QueueModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CatsModule.html":{},"modules/CoreModule.html":{},"modules/CronModule.html":{},"modules/QueueModule.html":{},"overview.html":{}}}],["modules",{"_index":31,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/CatsModule.html":{},"modules/CoreModule.html":{},"modules/CronModule.html":{},"modules/QueueModule.html":{},"modules.html":{},"overview.html":{}}}],["moment",{"_index":836,"title":{},"body":{"coverage.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["moment.moment",{"_index":974,"title":{},"body":{"miscellaneous/functions.html":{}}}],["month",{"_index":929,"title":{},"body":{"miscellaneous/functions.html":{}}}],["more",{"_index":1023,"title":{},"body":{"index.html":{}}}],["myśliwiec",{"_index":1029,"title":{},"body":{"index.html":{}}}],["name",{"_index":127,"title":{},"body":{"controllers/CatsController.html":{},"injectables/CatsService.html":{},"classes/CrudController.html":{},"classes/CrudService.html":{},"injectables/DBHelper.html":{},"interfaces/FileStorageOption.html":{},"interfaces/FileSystem.html":{},"controllers/HealthController.html":{},"interfaces/IAuthLoginInput.html":{},"interfaces/IAuthResponse.html":{},"interfaces/ICrudService.html":{},"interfaces/ILanguage.html":{},"interfaces/ILanguageFindInput.html":{},"interfaces/ILanguageName.html":{},"interfaces/IRole.html":{},"interfaces/IUser.html":{},"interfaces/IUserCreateInput.html":{},"interfaces/IUserFindInput.html":{},"interfaces/IUserRegistrationInput.html":{},"interfaces/IUserUpdateInput.html":{},"classes/Model.html":{},"interfaces/S3FileStorageProviderConfig.html":{},"interfaces/UploadedFile.html":{},"miscellaneous/functions.html":{}}}],["namespace",{"_index":972,"title":{},"body":{"miscellaneous/functions.html":{}}}],["need",{"_index":933,"title":{},"body":{"miscellaneous/functions.html":{}}}],["nest",{"_index":514,"title":{},"body":{"controllers/HealthController.html":{},"index.html":{}}}],["nestframework",{"_index":1033,"title":{},"body":{"index.html":{}}}],["nestjs",{"_index":900,"title":{},"body":{"dependencies.html":{}}}],["nestjs/common",{"_index":17,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/CatsController.html":{},"modules/CatsModule.html":{},"injectables/CatsService.html":{},"modules/CoreModule.html":{},"modules/CronModule.html":{},"injectables/CronService.html":{},"classes/CrudController.html":{},"classes/CrudService.html":{},"injectables/DBHelper.html":{},"controllers/HealthController.html":{},"controllers/QueueController.html":{},"modules/QueueModule.html":{},"injectables/QueueService.html":{},"dependencies.html":{}}}],["nestjs/config",{"_index":873,"title":{},"body":{"dependencies.html":{}}}],["nestjs/core",{"_index":875,"title":{},"body":{"dependencies.html":{}}}],["nestjs/mapped",{"_index":810,"title":{},"body":{"classes/UpdateCatDto.html":{},"dependencies.html":{}}}],["nestjs/passport",{"_index":877,"title":{},"body":{"dependencies.html":{}}}],["nestjs/platform",{"_index":879,"title":{},"body":{"dependencies.html":{}}}],["nestjs/schedule",{"_index":50,"title":{},"body":{"modules/AppModule.html":{},"injectables/CronService.html":{},"modules/QueueModule.html":{},"dependencies.html":{}}}],["nestjs/swagger",{"_index":98,"title":{},"body":{"classes/Base.html":{},"classes/CrudController.html":{},"controllers/HealthController.html":{},"classes/Model.html":{},"classes/PaginationParams.html":{},"dependencies.html":{}}}],["nestjs/terminus",{"_index":52,"title":{},"body":{"modules/AppModule.html":{},"controllers/HealthController.html":{},"modules/QueueModule.html":{},"dependencies.html":{}}}],["nestjs/typeorm",{"_index":176,"title":{},"body":{"modules/CoreModule.html":{},"dependencies.html":{}}}],["new",{"_index":170,"title":{},"body":{"injectables/CatsService.html":{},"injectables/CronService.html":{},"classes/CrudController.html":{},"classes/CrudService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["new_values",{"_index":419,"title":{},"body":{"injectables/DBHelper.html":{}}}],["next",{"_index":936,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["node.js",{"_index":983,"title":{},"body":{"index.html":{}}}],["node.model.ts",{"_index":755,"title":{},"body":{"interfaces/ITreeNode.html":{},"coverage.html":{}}}],["notfoundexception",{"_index":355,"title":{},"body":{"classes/CrudService.html":{}}}],["notfoundexception(`the",{"_index":382,"title":{},"body":{"classes/CrudService.html":{}}}],["npm",{"_index":993,"title":{},"body":{"index.html":{}}}],["null",{"_index":87,"title":{},"body":{"classes/Base.html":{},"interfaces/IAddress.html":{},"interfaces/IBaseEntityModel.html":{},"interfaces/IGeoLocationCreateObject.html":{},"interfaces/IGeolocationUpdateObject.html":{},"interfaces/ILocation.html":{},"classes/Model.html":{}}}],["number",{"_index":90,"title":{},"body":{"classes/Base.html":{},"injectables/CatsService.html":{},"classes/CrudService.html":{},"interfaces/FileStorageOption.html":{},"interfaces/FileSystem.html":{},"interfaces/IAddress.html":{},"interfaces/IBaseEntityModel.html":{},"interfaces/ICrudService.html":{},"interfaces/IGeoLocationCreateObject.html":{},"interfaces/IGeolocationUpdateObject.html":{},"interfaces/IListQueryInput.html":{},"interfaces/ILocation.html":{},"interfaces/IPagination.html":{},"interfaces/IPagination-1.html":{},"interfaces/IPaginationInput.html":{},"classes/Model.html":{},"classes/PaginationParams.html":{},"interfaces/S3FileStorageProviderConfig.html":{},"interfaces/UploadedFile.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["numeric",{"_index":959,"title":{},"body":{"miscellaneous/functions.html":{}}}],["obj",{"_index":384,"title":{},"body":{"classes/CrudService.html":{},"miscellaneous/functions.html":{}}}],["object",{"_index":968,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["object.assign(this",{"_index":109,"title":{},"body":{"classes/Base.html":{},"classes/Model.html":{}}}],["of(signal",{"_index":410,"title":{},"body":{"classes/CrudService.html":{}}}],["offset",{"_index":775,"title":{},"body":{"classes/PaginationParams.html":{}}}],["onapplicationshutdown",{"_index":478,"title":{},"body":{"controllers/HealthController.html":{}}}],["onapplicationshutdown(signal",{"_index":482,"title":{},"body":{"controllers/HealthController.html":{}}}],["once",{"_index":226,"title":{},"body":{"injectables/CronService.html":{}}}],["one",{"_index":272,"title":{},"body":{"classes/CrudController.html":{}}}],["onmoduledestroy",{"_index":503,"title":{},"body":{"controllers/HealthController.html":{}}}],["onmoduleinit",{"_index":479,"title":{},"body":{"controllers/HealthController.html":{}}}],["open",{"_index":1011,"title":{},"body":{"index.html":{}}}],["optional",{"_index":72,"title":{},"body":{"classes/Base.html":{},"controllers/CatsController.html":{},"injectables/CatsService.html":{},"classes/CrudController.html":{},"classes/CrudService.html":{},"injectables/DBHelper.html":{},"interfaces/FileStorageOption.html":{},"interfaces/FileSystem.html":{},"controllers/HealthController.html":{},"interfaces/IAddress.html":{},"interfaces/IBaseEntityModel.html":{},"interfaces/ICrudService.html":{},"interfaces/IGeoLocationCreateObject.html":{},"interfaces/IGeolocationUpdateObject.html":{},"interfaces/ILanguage.html":{},"interfaces/ILanguageFindInput.html":{},"interfaces/ILanguageName.html":{},"interfaces/IListQueryInput.html":{},"interfaces/IPaginationInput.html":{},"interfaces/ITreeNode.html":{},"interfaces/ITryRequest.html":{},"interfaces/IUser.html":{},"interfaces/IUserCreateInput.html":{},"interfaces/IUserFindInput.html":{},"interfaces/IUserRegistrationInput.html":{},"interfaces/IUserUpdateInput.html":{},"classes/Model.html":{},"classes/PaginationParams.html":{},"interfaces/S3FileStorageProviderConfig.html":{},"interfaces/UploadedFile.html":{},"miscellaneous/functions.html":{}}}],["options",{"_index":240,"title":{},"body":{"classes/CrudController.html":{},"classes/CrudService.html":{},"interfaces/ICrudService.html":{}}}],["order",{"_index":765,"title":{},"body":{"classes/PaginationParams.html":{}}}],["orderby",{"_index":770,"title":{},"body":{"classes/PaginationParams.html":{}}}],["ordertype",{"_index":786,"title":{},"body":{"classes/PaginationParams.html":{}}}],["org_candidates_documents_view",{"_index":646,"title":{},"body":{"interfaces/IRolePermission.html":{},"interfaces/IRolePermissionCreateInput.html":{},"interfaces/IRolePermissionUpdateInput.html":{}}}],["org_candidates_edit",{"_index":644,"title":{},"body":{"interfaces/IRolePermission.html":{},"interfaces/IRolePermissionCreateInput.html":{},"interfaces/IRolePermissionUpdateInput.html":{}}}],["org_candidates_feedback_edit",{"_index":648,"title":{},"body":{"interfaces/IRolePermission.html":{},"interfaces/IRolePermissionCreateInput.html":{},"interfaces/IRolePermissionUpdateInput.html":{}}}],["org_candidates_interview_edit",{"_index":645,"title":{},"body":{"interfaces/IRolePermission.html":{},"interfaces/IRolePermissionCreateInput.html":{},"interfaces/IRolePermissionUpdateInput.html":{}}}],["org_candidates_interviewers_edit",{"_index":676,"title":{},"body":{"interfaces/IRolePermission.html":{},"interfaces/IRolePermissionCreateInput.html":{},"interfaces/IRolePermissionUpdateInput.html":{}}}],["org_candidates_task_edit",{"_index":647,"title":{},"body":{"interfaces/IRolePermission.html":{},"interfaces/IRolePermissionCreateInput.html":{},"interfaces/IRolePermissionUpdateInput.html":{}}}],["org_candidates_view",{"_index":643,"title":{},"body":{"interfaces/IRolePermission.html":{},"interfaces/IRolePermissionCreateInput.html":{},"interfaces/IRolePermissionUpdateInput.html":{}}}],["org_contact_edit",{"_index":685,"title":{},"body":{"interfaces/IRolePermission.html":{},"interfaces/IRolePermissionCreateInput.html":{},"interfaces/IRolePermissionUpdateInput.html":{}}}],["org_contract_edit",{"_index":687,"title":{},"body":{"interfaces/IRolePermission.html":{},"interfaces/IRolePermissionCreateInput.html":{},"interfaces/IRolePermissionUpdateInput.html":{}}}],["org_employees_edit",{"_index":642,"title":{},"body":{"interfaces/IRolePermission.html":{},"interfaces/IRolePermissionCreateInput.html":{},"interfaces/IRolePermissionUpdateInput.html":{}}}],["org_employees_view",{"_index":641,"title":{},"body":{"interfaces/IRolePermission.html":{},"interfaces/IRolePermissionCreateInput.html":{},"interfaces/IRolePermissionUpdateInput.html":{}}}],["org_expenses_edit",{"_index":637,"title":{},"body":{"interfaces/IRolePermission.html":{},"interfaces/IRolePermissionCreateInput.html":{},"interfaces/IRolePermissionUpdateInput.html":{}}}],["org_expenses_view",{"_index":636,"title":{},"body":{"interfaces/IRolePermission.html":{},"interfaces/IRolePermissionCreateInput.html":{},"interfaces/IRolePermissionUpdateInput.html":{}}}],["org_help_center_edit",{"_index":679,"title":{},"body":{"interfaces/IRolePermission.html":{},"interfaces/IRolePermissionCreateInput.html":{},"interfaces/IRolePermissionUpdateInput.html":{}}}],["org_incomes_edit",{"_index":635,"title":{},"body":{"interfaces/IRolePermission.html":{},"interfaces/IRolePermissionCreateInput.html":{},"interfaces/IRolePermissionUpdateInput.html":{}}}],["org_incomes_view",{"_index":634,"title":{},"body":{"interfaces/IRolePermission.html":{},"interfaces/IRolePermissionCreateInput.html":{},"interfaces/IRolePermissionUpdateInput.html":{}}}],["org_inventory_product_edit",{"_index":649,"title":{},"body":{"interfaces/IRolePermission.html":{},"interfaces/IRolePermissionCreateInput.html":{},"interfaces/IRolePermissionUpdateInput.html":{}}}],["org_invite_edit",{"_index":654,"title":{},"body":{"interfaces/IRolePermission.html":{},"interfaces/IRolePermissionCreateInput.html":{},"interfaces/IRolePermissionUpdateInput.html":{}}}],["org_invite_view",{"_index":653,"title":{},"body":{"interfaces/IRolePermission.html":{},"interfaces/IRolePermissionCreateInput.html":{},"interfaces/IRolePermissionUpdateInput.html":{}}}],["org_payment_add_edit",{"_index":633,"title":{},"body":{"interfaces/IRolePermission.html":{},"interfaces/IRolePermissionCreateInput.html":{},"interfaces/IRolePermissionUpdateInput.html":{}}}],["org_payment_view",{"_index":632,"title":{},"body":{"interfaces/IRolePermission.html":{},"interfaces/IRolePermissionCreateInput.html":{},"interfaces/IRolePermissionUpdateInput.html":{}}}],["org_project_edit",{"_index":684,"title":{},"body":{"interfaces/IRolePermission.html":{},"interfaces/IRolePermissionCreateInput.html":{},"interfaces/IRolePermissionUpdateInput.html":{}}}],["org_proposals_edit",{"_index":639,"title":{},"body":{"interfaces/IRolePermission.html":{},"interfaces/IRolePermissionCreateInput.html":{},"interfaces/IRolePermissionUpdateInput.html":{}}}],["org_proposals_view",{"_index":638,"title":{},"body":{"interfaces/IRolePermission.html":{},"interfaces/IRolePermissionCreateInput.html":{},"interfaces/IRolePermissionUpdateInput.html":{}}}],["org_sprint_edit",{"_index":683,"title":{},"body":{"interfaces/IRolePermission.html":{},"interfaces/IRolePermissionCreateInput.html":{},"interfaces/IRolePermissionUpdateInput.html":{}}}],["org_sprint_view",{"_index":682,"title":{},"body":{"interfaces/IRolePermission.html":{},"interfaces/IRolePermissionCreateInput.html":{},"interfaces/IRolePermissionUpdateInput.html":{}}}],["org_tags_edit",{"_index":650,"title":{},"body":{"interfaces/IRolePermission.html":{},"interfaces/IRolePermissionCreateInput.html":{},"interfaces/IRolePermissionUpdateInput.html":{}}}],["org_team_edit",{"_index":686,"title":{},"body":{"interfaces/IRolePermission.html":{},"interfaces/IRolePermissionCreateInput.html":{},"interfaces/IRolePermissionUpdateInput.html":{}}}],["org_time_off_view",{"_index":640,"title":{},"body":{"interfaces/IRolePermission.html":{},"interfaces/IRolePermissionCreateInput.html":{},"interfaces/IRolePermissionUpdateInput.html":{}}}],["org_users_edit",{"_index":652,"title":{},"body":{"interfaces/IRolePermission.html":{},"interfaces/IRolePermissionCreateInput.html":{},"interfaces/IRolePermissionUpdateInput.html":{}}}],["org_users_view",{"_index":651,"title":{},"body":{"interfaces/IRolePermission.html":{},"interfaces/IRolePermissionCreateInput.html":{},"interfaces/IRolePermissionUpdateInput.html":{}}}],["organizationid",{"_index":560,"title":{},"body":{"interfaces/IAuthLoginInput.html":{},"interfaces/IAuthResponse.html":{},"interfaces/IUser.html":{},"interfaces/IUserCreateInput.html":{},"interfaces/IUserFindInput.html":{},"interfaces/IUserRegistrationInput.html":{},"interfaces/IUserUpdateInput.html":{}}}],["originalname",{"_index":460,"title":{},"body":{"interfaces/FileStorageOption.html":{},"interfaces/FileSystem.html":{},"interfaces/S3FileStorageProviderConfig.html":{},"interfaces/UploadedFile.html":{}}}],["originalurl",{"_index":559,"title":{},"body":{"interfaces/IAuthLoginInput.html":{},"interfaces/IAuthResponse.html":{},"interfaces/IUser.html":{},"interfaces/IUserCreateInput.html":{},"interfaces/IUserFindInput.html":{},"interfaces/IUserRegistrationInput.html":{},"interfaces/IUserUpdateInput.html":{}}}],["orignal",{"_index":461,"title":{},"body":{"interfaces/FileStorageOption.html":{},"interfaces/FileSystem.html":{},"interfaces/S3FileStorageProviderConfig.html":{},"interfaces/UploadedFile.html":{}}}],["out",{"_index":45,"title":{},"body":{"modules/AppModule.html":{},"modules/CatsModule.html":{},"modules/CronModule.html":{},"modules/QueueModule.html":{},"overview.html":{}}}],["overview",{"_index":1039,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["p",{"_index":793,"title":{},"body":{"classes/PaginationParams.html":{}}}],["package",{"_index":869,"title":{"dependencies.html":{}},"body":{}}],["page",{"_index":603,"title":{},"body":{"interfaces/IListQueryInput.html":{},"interfaces/IPagination-1.html":{},"interfaces/IPaginationInput.html":{}}}],["pagination",{"_index":291,"title":{},"body":{"classes/CrudController.html":{},"classes/CrudService.html":{},"interfaces/IPagination.html":{},"classes/PaginationParams.html":{}}}],["paginationparams",{"_index":262,"title":{"classes/PaginationParams.html":{}},"body":{"classes/CrudController.html":{},"classes/PaginationParams.html":{},"coverage.html":{}}}],["param",{"_index":141,"title":{},"body":{"controllers/CatsController.html":{},"classes/CrudController.html":{},"classes/CrudService.html":{}}}],["param('id",{"_index":314,"title":{},"body":{"classes/CrudController.html":{}}}],["parameter",{"_index":510,"title":{},"body":{"controllers/HealthController.html":{},"interfaces/IListQueryInput.html":{},"interfaces/IPagination-1.html":{},"interfaces/IPaginationInput.html":{}}}],["parameters",{"_index":126,"title":{},"body":{"controllers/CatsController.html":{},"injectables/CatsService.html":{},"classes/CrudController.html":{},"classes/CrudService.html":{},"injectables/DBHelper.html":{},"controllers/HealthController.html":{},"interfaces/ICrudService.html":{},"classes/Model.html":{},"miscellaneous/functions.html":{}}}],["params",{"_index":292,"title":{},"body":{"classes/CrudController.html":{},"classes/PaginationParams.html":{}}}],["params.ts",{"_index":763,"title":{},"body":{"classes/PaginationParams.html":{},"coverage.html":{}}}],["params.ts:23",{"_index":779,"title":{},"body":{"classes/PaginationParams.html":{}}}],["params.ts:32",{"_index":774,"title":{},"body":{"classes/PaginationParams.html":{}}}],["params.ts:39",{"_index":769,"title":{},"body":{"classes/PaginationParams.html":{}}}],["parseint(val",{"_index":792,"title":{},"body":{"classes/PaginationParams.html":{}}}],["partialentity",{"_index":352,"title":{},"body":{"classes/CrudService.html":{}}}],["partialentity.hash",{"_index":401,"title":{},"body":{"classes/CrudService.html":{}}}],["partialtype",{"_index":809,"title":{},"body":{"classes/UpdateCatDto.html":{}}}],["partialtype(createcatdto",{"_index":812,"title":{},"body":{"classes/UpdateCatDto.html":{}}}],["passport",{"_index":903,"title":{},"body":{"dependencies.html":{}}}],["password",{"_index":351,"title":{},"body":{"classes/CrudService.html":{},"interfaces/IAuthLoginInput.html":{},"interfaces/IAuthResponse.html":{},"interfaces/IUser.html":{},"interfaces/IUserCreateInput.html":{},"interfaces/IUserFindInput.html":{},"interfaces/IUserRegistrationInput.html":{},"interfaces/IUserUpdateInput.html":{}}}],["path",{"_index":458,"title":{},"body":{"interfaces/FileStorageOption.html":{},"interfaces/FileSystem.html":{},"interfaces/S3FileStorageProviderConfig.html":{},"interfaces/UploadedFile.html":{}}}],["perform",{"_index":940,"title":{},"body":{"miscellaneous/functions.html":{}}}],["permission",{"_index":627,"title":{},"body":{"interfaces/IRolePermission.html":{},"interfaces/IRolePermissionCreateInput.html":{},"interfaces/IRolePermissionUpdateInput.html":{}}}],["permission.model",{"_index":615,"title":{},"body":{"interfaces/IRole.html":{}}}],["permission.model.ts",{"_index":625,"title":{},"body":{"interfaces/IRolePermission.html":{},"interfaces/IRolePermissionCreateInput.html":{},"interfaces/IRolePermissionUpdateInput.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["permissiongroups",{"_index":691,"title":{},"body":{"interfaces/IRolePermission.html":{},"interfaces/IRolePermissionCreateInput.html":{},"interfaces/IRolePermissionUpdateInput.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["permissions",{"_index":692,"title":{},"body":{"interfaces/IRolePermission.html":{},"interfaces/IRolePermissionCreateInput.html":{},"interfaces/IRolePermissionUpdateInput.html":{},"miscellaneous/variables.html":{}}}],["permissionsenum",{"_index":630,"title":{},"body":{"interfaces/IRolePermission.html":{},"interfaces/IRolePermissionCreateInput.html":{},"interfaces/IRolePermissionUpdateInput.html":{}}}],["permissionsenum.access_private_projects",{"_index":714,"title":{},"body":{"interfaces/IRolePermission.html":{},"interfaces/IRolePermissionCreateInput.html":{},"interfaces/IRolePermissionUpdateInput.html":{},"miscellaneous/variables.html":{}}}],["permissionsenum.admin_dashboard_view",{"_index":695,"title":{},"body":{"interfaces/IRolePermission.html":{},"interfaces/IRolePermissionCreateInput.html":{},"interfaces/IRolePermissionUpdateInput.html":{},"miscellaneous/variables.html":{}}}],["permissionsenum.all_org_edit",{"_index":745,"title":{},"body":{"interfaces/IRolePermission.html":{},"interfaces/IRolePermissionCreateInput.html":{},"interfaces/IRolePermissionUpdateInput.html":{},"miscellaneous/variables.html":{}}}],["permissionsenum.all_org_view",{"_index":744,"title":{},"body":{"interfaces/IRolePermission.html":{},"interfaces/IRolePermissionCreateInput.html":{},"interfaces/IRolePermissionUpdateInput.html":{},"miscellaneous/variables.html":{}}}],["permissionsenum.approval_policy_edit",{"_index":710,"title":{},"body":{"interfaces/IRolePermission.html":{},"interfaces/IRolePermissionCreateInput.html":{},"interfaces/IRolePermissionUpdateInput.html":{},"miscellaneous/variables.html":{}}}],["permissionsenum.approval_policy_view",{"_index":711,"title":{},"body":{"interfaces/IRolePermission.html":{},"interfaces/IRolePermissionCreateInput.html":{},"interfaces/IRolePermissionUpdateInput.html":{},"miscellaneous/variables.html":{}}}],["permissionsenum.can_approve_timesheet",{"_index":728,"title":{},"body":{"interfaces/IRolePermission.html":{},"interfaces/IRolePermissionCreateInput.html":{},"interfaces/IRolePermissionUpdateInput.html":{},"miscellaneous/variables.html":{}}}],["permissionsenum.change_roles_permissions",{"_index":749,"title":{},"body":{"interfaces/IRolePermission.html":{},"interfaces/IRolePermissionCreateInput.html":{},"interfaces/IRolePermissionUpdateInput.html":{},"miscellaneous/variables.html":{}}}],["permissionsenum.change_selected_candidate",{"_index":747,"title":{},"body":{"interfaces/IRolePermission.html":{},"interfaces/IRolePermissionCreateInput.html":{},"interfaces/IRolePermissionUpdateInput.html":{},"miscellaneous/variables.html":{}}}],["permissionsenum.change_selected_employee",{"_index":746,"title":{},"body":{"interfaces/IRolePermission.html":{},"interfaces/IRolePermissionCreateInput.html":{},"interfaces/IRolePermissionUpdateInput.html":{},"miscellaneous/variables.html":{}}}],["permissionsenum.change_selected_organization",{"_index":748,"title":{},"body":{"interfaces/IRolePermission.html":{},"interfaces/IRolePermissionCreateInput.html":{},"interfaces/IRolePermissionUpdateInput.html":{},"miscellaneous/variables.html":{}}}],["permissionsenum.edit_sales_pipelines",{"_index":727,"title":{},"body":{"interfaces/IRolePermission.html":{},"interfaces/IRolePermissionCreateInput.html":{},"interfaces/IRolePermissionUpdateInput.html":{},"miscellaneous/variables.html":{}}}],["permissionsenum.event_types_view",{"_index":735,"title":{},"body":{"interfaces/IRolePermission.html":{},"interfaces/IRolePermissionCreateInput.html":{},"interfaces/IRolePermissionUpdateInput.html":{},"miscellaneous/variables.html":{}}}],["permissionsenum.invoices_edit",{"_index":717,"title":{},"body":{"interfaces/IRolePermission.html":{},"interfaces/IRolePermissionCreateInput.html":{},"interfaces/IRolePermissionUpdateInput.html":{},"miscellaneous/variables.html":{}}}],["permissionsenum.invoices_view",{"_index":716,"title":{},"body":{"interfaces/IRolePermission.html":{},"interfaces/IRolePermissionCreateInput.html":{},"interfaces/IRolePermissionUpdateInput.html":{},"miscellaneous/variables.html":{}}}],["permissionsenum.org_candidates_documents_view",{"_index":718,"title":{},"body":{"interfaces/IRolePermission.html":{},"interfaces/IRolePermissionCreateInput.html":{},"interfaces/IRolePermissionUpdateInput.html":{},"miscellaneous/variables.html":{}}}],["permissionsenum.org_candidates_edit",{"_index":741,"title":{},"body":{"interfaces/IRolePermission.html":{},"interfaces/IRolePermissionCreateInput.html":{},"interfaces/IRolePermissionUpdateInput.html":{},"miscellaneous/variables.html":{}}}],["permissionsenum.org_candidates_feedback_edit",{"_index":722,"title":{},"body":{"interfaces/IRolePermission.html":{},"interfaces/IRolePermissionCreateInput.html":{},"interfaces/IRolePermissionUpdateInput.html":{},"miscellaneous/variables.html":{}}}],["permissionsenum.org_candidates_interview_edit",{"_index":720,"title":{},"body":{"interfaces/IRolePermission.html":{},"interfaces/IRolePermissionCreateInput.html":{},"interfaces/IRolePermissionUpdateInput.html":{},"miscellaneous/variables.html":{}}}],["permissionsenum.org_candidates_interviewers_edit",{"_index":721,"title":{},"body":{"interfaces/IRolePermission.html":{},"interfaces/IRolePermissionCreateInput.html":{},"interfaces/IRolePermissionUpdateInput.html":{},"miscellaneous/variables.html":{}}}],["permissionsenum.org_candidates_task_edit",{"_index":719,"title":{},"body":{"interfaces/IRolePermission.html":{},"interfaces/IRolePermissionCreateInput.html":{},"interfaces/IRolePermissionUpdateInput.html":{},"miscellaneous/variables.html":{}}}],["permissionsenum.org_candidates_view",{"_index":740,"title":{},"body":{"interfaces/IRolePermission.html":{},"interfaces/IRolePermissionCreateInput.html":{},"interfaces/IRolePermissionUpdateInput.html":{},"miscellaneous/variables.html":{}}}],["permissionsenum.org_contact_edit",{"_index":732,"title":{},"body":{"interfaces/IRolePermission.html":{},"interfaces/IRolePermissionCreateInput.html":{},"interfaces/IRolePermissionUpdateInput.html":{},"miscellaneous/variables.html":{}}}],["permissionsenum.org_contract_edit",{"_index":734,"title":{},"body":{"interfaces/IRolePermission.html":{},"interfaces/IRolePermissionCreateInput.html":{},"interfaces/IRolePermissionUpdateInput.html":{},"miscellaneous/variables.html":{}}}],["permissionsenum.org_employees_edit",{"_index":739,"title":{},"body":{"interfaces/IRolePermission.html":{},"interfaces/IRolePermissionCreateInput.html":{},"interfaces/IRolePermissionUpdateInput.html":{},"miscellaneous/variables.html":{}}}],["permissionsenum.org_employees_view",{"_index":738,"title":{},"body":{"interfaces/IRolePermission.html":{},"interfaces/IRolePermissionCreateInput.html":{},"interfaces/IRolePermissionUpdateInput.html":{},"miscellaneous/variables.html":{}}}],["permissionsenum.org_expenses_edit",{"_index":699,"title":{},"body":{"interfaces/IRolePermission.html":{},"interfaces/IRolePermissionCreateInput.html":{},"interfaces/IRolePermissionUpdateInput.html":{},"miscellaneous/variables.html":{}}}],["permissionsenum.org_expenses_view",{"_index":698,"title":{},"body":{"interfaces/IRolePermission.html":{},"interfaces/IRolePermissionCreateInput.html":{},"interfaces/IRolePermissionUpdateInput.html":{},"miscellaneous/variables.html":{}}}],["permissionsenum.org_help_center_edit",{"_index":726,"title":{},"body":{"interfaces/IRolePermission.html":{},"interfaces/IRolePermissionCreateInput.html":{},"interfaces/IRolePermissionUpdateInput.html":{},"miscellaneous/variables.html":{}}}],["permissionsenum.org_incomes_edit",{"_index":700,"title":{},"body":{"interfaces/IRolePermission.html":{},"interfaces/IRolePermissionCreateInput.html":{},"interfaces/IRolePermissionUpdateInput.html":{},"miscellaneous/variables.html":{}}}],["permissionsenum.org_incomes_view",{"_index":701,"title":{},"body":{"interfaces/IRolePermission.html":{},"interfaces/IRolePermissionCreateInput.html":{},"interfaces/IRolePermissionUpdateInput.html":{},"miscellaneous/variables.html":{}}}],["permissionsenum.org_inventory_product_edit",{"_index":723,"title":{},"body":{"interfaces/IRolePermission.html":{},"interfaces/IRolePermissionCreateInput.html":{},"interfaces/IRolePermissionUpdateInput.html":{},"miscellaneous/variables.html":{}}}],["permissionsenum.org_invite_edit",{"_index":706,"title":{},"body":{"interfaces/IRolePermission.html":{},"interfaces/IRolePermissionCreateInput.html":{},"interfaces/IRolePermissionUpdateInput.html":{},"miscellaneous/variables.html":{}}}],["permissionsenum.org_invite_view",{"_index":705,"title":{},"body":{"interfaces/IRolePermission.html":{},"interfaces/IRolePermissionCreateInput.html":{},"interfaces/IRolePermissionUpdateInput.html":{},"miscellaneous/variables.html":{}}}],["permissionsenum.org_payment_add_edit",{"_index":697,"title":{},"body":{"interfaces/IRolePermission.html":{},"interfaces/IRolePermissionCreateInput.html":{},"interfaces/IRolePermissionUpdateInput.html":{},"miscellaneous/variables.html":{}}}],["permissionsenum.org_payment_view",{"_index":696,"title":{},"body":{"interfaces/IRolePermission.html":{},"interfaces/IRolePermissionCreateInput.html":{},"interfaces/IRolePermissionUpdateInput.html":{},"miscellaneous/variables.html":{}}}],["permissionsenum.org_project_edit",{"_index":731,"title":{},"body":{"interfaces/IRolePermission.html":{},"interfaces/IRolePermissionCreateInput.html":{},"interfaces/IRolePermissionUpdateInput.html":{},"miscellaneous/variables.html":{}}}],["permissionsenum.org_proposals_edit",{"_index":702,"title":{},"body":{"interfaces/IRolePermission.html":{},"interfaces/IRolePermissionCreateInput.html":{},"interfaces/IRolePermissionUpdateInput.html":{},"miscellaneous/variables.html":{}}}],["permissionsenum.org_proposals_view",{"_index":703,"title":{},"body":{"interfaces/IRolePermission.html":{},"interfaces/IRolePermissionCreateInput.html":{},"interfaces/IRolePermissionUpdateInput.html":{},"miscellaneous/variables.html":{}}}],["permissionsenum.org_sprint_edit",{"_index":729,"title":{},"body":{"interfaces/IRolePermission.html":{},"interfaces/IRolePermissionCreateInput.html":{},"interfaces/IRolePermissionUpdateInput.html":{},"miscellaneous/variables.html":{}}}],["permissionsenum.org_sprint_view",{"_index":730,"title":{},"body":{"interfaces/IRolePermission.html":{},"interfaces/IRolePermissionCreateInput.html":{},"interfaces/IRolePermissionUpdateInput.html":{},"miscellaneous/variables.html":{}}}],["permissionsenum.org_tags_edit",{"_index":724,"title":{},"body":{"interfaces/IRolePermission.html":{},"interfaces/IRolePermissionCreateInput.html":{},"interfaces/IRolePermissionUpdateInput.html":{},"miscellaneous/variables.html":{}}}],["permissionsenum.org_team_edit",{"_index":733,"title":{},"body":{"interfaces/IRolePermission.html":{},"interfaces/IRolePermissionCreateInput.html":{},"interfaces/IRolePermissionUpdateInput.html":{},"miscellaneous/variables.html":{}}}],["permissionsenum.org_time_off_view",{"_index":704,"title":{},"body":{"interfaces/IRolePermission.html":{},"interfaces/IRolePermissionCreateInput.html":{},"interfaces/IRolePermissionUpdateInput.html":{},"miscellaneous/variables.html":{}}}],["permissionsenum.org_users_edit",{"_index":743,"title":{},"body":{"interfaces/IRolePermission.html":{},"interfaces/IRolePermissionCreateInput.html":{},"interfaces/IRolePermissionUpdateInput.html":{},"miscellaneous/variables.html":{}}}],["permissionsenum.org_users_view",{"_index":742,"title":{},"body":{"interfaces/IRolePermission.html":{},"interfaces/IRolePermissionCreateInput.html":{},"interfaces/IRolePermissionUpdateInput.html":{},"miscellaneous/variables.html":{}}}],["permissionsenum.policy_edit",{"_index":708,"title":{},"body":{"interfaces/IRolePermission.html":{},"interfaces/IRolePermissionCreateInput.html":{},"interfaces/IRolePermissionUpdateInput.html":{},"miscellaneous/variables.html":{}}}],["permissionsenum.policy_view",{"_index":707,"title":{},"body":{"interfaces/IRolePermission.html":{},"interfaces/IRolePermissionCreateInput.html":{},"interfaces/IRolePermissionUpdateInput.html":{},"miscellaneous/variables.html":{}}}],["permissionsenum.public_page_edit",{"_index":751,"title":{},"body":{"interfaces/IRolePermission.html":{},"interfaces/IRolePermissionCreateInput.html":{},"interfaces/IRolePermissionUpdateInput.html":{},"miscellaneous/variables.html":{}}}],["permissionsenum.request_approval_edit",{"_index":712,"title":{},"body":{"interfaces/IRolePermission.html":{},"interfaces/IRolePermissionCreateInput.html":{},"interfaces/IRolePermissionUpdateInput.html":{},"miscellaneous/variables.html":{}}}],["permissionsenum.request_approval_view",{"_index":713,"title":{},"body":{"interfaces/IRolePermission.html":{},"interfaces/IRolePermissionCreateInput.html":{},"interfaces/IRolePermissionUpdateInput.html":{},"miscellaneous/variables.html":{}}}],["permissionsenum.super_admin_edit",{"_index":750,"title":{},"body":{"interfaces/IRolePermission.html":{},"interfaces/IRolePermissionCreateInput.html":{},"interfaces/IRolePermissionUpdateInput.html":{},"miscellaneous/variables.html":{}}}],["permissionsenum.tenant_add_existing_user",{"_index":752,"title":{},"body":{"interfaces/IRolePermission.html":{},"interfaces/IRolePermissionCreateInput.html":{},"interfaces/IRolePermissionUpdateInput.html":{},"miscellaneous/variables.html":{}}}],["permissionsenum.time_off_edit",{"_index":709,"title":{},"body":{"interfaces/IRolePermission.html":{},"interfaces/IRolePermissionCreateInput.html":{},"interfaces/IRolePermissionUpdateInput.html":{},"miscellaneous/variables.html":{}}}],["permissionsenum.time_tracker",{"_index":736,"title":{},"body":{"interfaces/IRolePermission.html":{},"interfaces/IRolePermissionCreateInput.html":{},"interfaces/IRolePermissionUpdateInput.html":{},"miscellaneous/variables.html":{}}}],["permissionsenum.timesheet_edit_time",{"_index":715,"title":{},"body":{"interfaces/IRolePermission.html":{},"interfaces/IRolePermissionCreateInput.html":{},"interfaces/IRolePermissionUpdateInput.html":{},"miscellaneous/variables.html":{}}}],["permissionsenum.view_all_emails",{"_index":725,"title":{},"body":{"interfaces/IRolePermission.html":{},"interfaces/IRolePermissionCreateInput.html":{},"interfaces/IRolePermissionUpdateInput.html":{},"miscellaneous/variables.html":{}}}],["pino",{"_index":901,"title":{},"body":{"dependencies.html":{}}}],["please",{"_index":1021,"title":{},"body":{"index.html":{}}}],["point",{"_index":533,"title":{},"body":{"interfaces/IAddress.html":{},"interfaces/IGeoLocationCreateObject.html":{},"interfaces/IGeolocationUpdateObject.html":{},"interfaces/ILocation.html":{}}}],["policy_edit",{"_index":658,"title":{},"body":{"interfaces/IRolePermission.html":{},"interfaces/IRolePermissionCreateInput.html":{},"interfaces/IRolePermissionUpdateInput.html":{}}}],["policy_view",{"_index":657,"title":{},"body":{"interfaces/IRolePermission.html":{},"interfaces/IRolePermissionCreateInput.html":{},"interfaces/IRolePermissionUpdateInput.html":{}}}],["post",{"_index":124,"title":{},"body":{"controllers/CatsController.html":{},"classes/CrudController.html":{}}}],["postcode",{"_index":531,"title":{},"body":{"interfaces/IAddress.html":{},"interfaces/IGeoLocationCreateObject.html":{},"interfaces/IGeolocationUpdateObject.html":{},"interfaces/ILocation.html":{}}}],["precision",{"_index":956,"title":{},"body":{"miscellaneous/functions.html":{}}}],["prefix",{"_index":115,"title":{},"body":{"controllers/CatsController.html":{},"interfaces/FileStorageOption.html":{},"interfaces/FileSystem.html":{},"controllers/HealthController.html":{},"interfaces/S3FileStorageProviderConfig.html":{},"interfaces/UploadedFile.html":{},"miscellaneous/functions.html":{}}}],["pretty",{"_index":905,"title":{},"body":{"dependencies.html":{}}}],["primarygeneratedcolumn",{"_index":101,"title":{},"body":{"classes/Base.html":{},"classes/Model.html":{}}}],["private",{"_index":202,"title":{},"body":{"injectables/CronService.html":{},"controllers/HealthController.html":{}}}],["production",{"_index":1001,"title":{},"body":{"index.html":{}}}],["progressive",{"_index":982,"title":{},"body":{"index.html":{}}}],["progressstatus",{"_index":863,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["progressstatus(value",{"_index":969,"title":{},"body":{"miscellaneous/functions.html":{}}}],["project",{"_index":1012,"title":{},"body":{"index.html":{}}}],["promise",{"_index":256,"title":{},"body":{"classes/CrudController.html":{},"classes/CrudService.html":{},"controllers/HealthController.html":{},"interfaces/ICrudService.html":{},"miscellaneous/functions.html":{}}}],["properties",{"_index":71,"title":{},"body":{"classes/Base.html":{},"injectables/CronService.html":{},"classes/CrudService.html":{},"injectables/DBHelper.html":{},"interfaces/FileStorageOption.html":{},"interfaces/FileSystem.html":{},"interfaces/IAddress.html":{},"interfaces/IAuthLoginInput.html":{},"interfaces/IAuthResponse.html":{},"interfaces/IBaseEntityModel.html":{},"interfaces/ICountry.html":{},"interfaces/ICurrency.html":{},"interfaces/IGeoLocationCreateObject.html":{},"interfaces/IGeolocationUpdateObject.html":{},"interfaces/ILanguage.html":{},"interfaces/ILanguageFindInput.html":{},"interfaces/ILanguageName.html":{},"interfaces/IListQueryInput.html":{},"interfaces/ILocation.html":{},"interfaces/IPagination.html":{},"interfaces/IPagination-1.html":{},"interfaces/IPaginationInput.html":{},"interfaces/IRole.html":{},"interfaces/IRolePermission.html":{},"interfaces/IRolePermissionCreateInput.html":{},"interfaces/IRolePermissionUpdateInput.html":{},"interfaces/ITreeNode.html":{},"interfaces/ITryRequest.html":{},"interfaces/IUser.html":{},"interfaces/IUserCreateInput.html":{},"interfaces/IUserFindInput.html":{},"interfaces/IUserRegistrationInput.html":{},"interfaces/IUserUpdateInput.html":{},"classes/PaginationParams.html":{},"interfaces/S3FileStorageProviderConfig.html":{},"interfaces/UploadedFile.html":{}}}],["proposals_edit",{"_index":677,"title":{},"body":{"interfaces/IRolePermission.html":{},"interfaces/IRolePermissionCreateInput.html":{},"interfaces/IRolePermissionUpdateInput.html":{}}}],["protected",{"_index":233,"title":{},"body":{"classes/CrudController.html":{},"classes/CrudService.html":{}}}],["provider",{"_index":446,"title":{},"body":{"interfaces/FileStorageOption.html":{},"interfaces/FileSystem.html":{},"interfaces/S3FileStorageProviderConfig.html":{},"interfaces/UploadedFile.html":{}}}],["provider.ts",{"_index":443,"title":{},"body":{"interfaces/FileStorageOption.html":{},"interfaces/FileSystem.html":{},"interfaces/S3FileStorageProviderConfig.html":{},"interfaces/UploadedFile.html":{},"coverage.html":{}}}],["providerenum",{"_index":569,"title":{},"body":{"interfaces/IAuthLoginInput.html":{},"interfaces/IAuthResponse.html":{},"interfaces/IUser.html":{},"interfaces/IUserCreateInput.html":{},"interfaces/IUserFindInput.html":{},"interfaces/IUserRegistrationInput.html":{},"interfaces/IUserUpdateInput.html":{}}}],["providers",{"_index":36,"title":{},"body":{"modules/AppModule.html":{},"modules/CatsModule.html":{},"modules/CoreModule.html":{},"modules/CronModule.html":{},"modules/QueueModule.html":{},"overview.html":{}}}],["public",{"_index":468,"title":{},"body":{"interfaces/FileStorageOption.html":{},"interfaces/FileSystem.html":{},"interfaces/S3FileStorageProviderConfig.html":{},"interfaces/UploadedFile.html":{}}}],["public_page_edit",{"_index":673,"title":{},"body":{"interfaces/IRolePermission.html":{},"interfaces/IRolePermissionCreateInput.html":{},"interfaces/IRolePermissionUpdateInput.html":{}}}],["put",{"_index":140,"title":{},"body":{"controllers/CatsController.html":{},"classes/CrudController.html":{}}}],["put(':id",{"_index":137,"title":{},"body":{"controllers/CatsController.html":{},"classes/CrudController.html":{}}}],["query",{"_index":609,"title":{},"body":{"interfaces/IListQueryInput.html":{},"interfaces/IPagination-1.html":{},"interfaces/IPaginationInput.html":{}}}],["querydeeppartialentity",{"_index":275,"title":{},"body":{"classes/CrudController.html":{},"classes/CrudService.html":{},"interfaces/ICrudService.html":{}}}],["queuecontroller",{"_index":795,"title":{"controllers/QueueController.html":{}},"body":{"controllers/QueueController.html":{},"modules/QueueModule.html":{},"coverage.html":{}}}],["queuemodule",{"_index":801,"title":{"modules/QueueModule.html":{}},"body":{"modules/QueueModule.html":{},"modules.html":{},"overview.html":{}}}],["queueservice",{"_index":798,"title":{"injectables/QueueService.html":{}},"body":{"controllers/QueueController.html":{},"modules/QueueModule.html":{},"injectables/QueueService.html":{},"coverage.html":{},"overview.html":{}}}],["range",{"_index":896,"title":{},"body":{"dependencies.html":{}}}],["rate",{"_index":888,"title":{},"body":{"dependencies.html":{}}}],["read",{"_index":1022,"title":{},"body":{"index.html":{}}}],["readmewhy",{"_index":386,"title":{},"body":{"classes/CrudService.html":{}}}],["readonly",{"_index":23,"title":{},"body":{"controllers/AppController.html":{},"controllers/CatsController.html":{},"injectables/CronService.html":{},"classes/CrudController.html":{},"classes/CrudService.html":{},"interfaces/IBaseEntityModel.html":{},"interfaces/IListQueryInput.html":{},"interfaces/IPagination.html":{},"interfaces/IPagination-1.html":{},"interfaces/IPaginationInput.html":{},"interfaces/IRolePermission.html":{},"interfaces/IRolePermissionCreateInput.html":{},"interfaces/IRolePermissionUpdateInput.html":{},"classes/PaginationParams.html":{},"controllers/QueueController.html":{},"miscellaneous/variables.html":{}}}],["reassign",{"_index":404,"title":{},"body":{"classes/CrudService.html":{}}}],["receives",{"_index":499,"title":{},"body":{"controllers/HealthController.html":{}}}],["record",{"_index":245,"title":{},"body":{"classes/CrudController.html":{},"classes/CrudService.html":{},"interfaces/ITryRequest.html":{}}}],["record'})@apiresponse({status",{"_index":242,"title":{},"body":{"classes/CrudController.html":{}}}],["records",{"_index":300,"title":{},"body":{"classes/CrudController.html":{}}}],["records'})@get",{"_index":266,"title":{},"body":{"classes/CrudController.html":{}}}],["reflect",{"_index":843,"title":{},"body":{"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{}}}],["reflect(promise",{"_index":945,"title":{},"body":{"miscellaneous/functions.html":{}}}],["registered",{"_index":502,"title":{},"body":{"controllers/HealthController.html":{}}}],["rejected",{"_index":518,"title":{},"body":{"controllers/HealthController.html":{}}}],["relation",{"_index":421,"title":{},"body":{"injectables/DBHelper.html":{}}}],["relations",{"_index":427,"title":{},"body":{"injectables/DBHelper.html":{},"interfaces/IListQueryInput.html":{},"interfaces/IPagination-1.html":{},"interfaces/IPaginationInput.html":{}}}],["remove",{"_index":120,"title":{},"body":{"controllers/CatsController.html":{},"injectables/CatsService.html":{}}}],["remove(@param('id",{"_index":156,"title":{},"body":{"controllers/CatsController.html":{}}}],["remove(id",{"_index":132,"title":{},"body":{"controllers/CatsController.html":{},"injectables/CatsService.html":{}}}],["removes",{"_index":172,"title":{},"body":{"injectables/CatsService.html":{}}}],["repository",{"_index":329,"title":{},"body":{"classes/CrudService.html":{},"injectables/DBHelper.html":{},"index.html":{}}}],["request",{"_index":366,"title":{},"body":{"classes/CrudService.html":{}}}],["request.ts",{"_index":760,"title":{},"body":{"interfaces/ITryRequest.html":{},"coverage.html":{}}}],["request_approval_edit",{"_index":661,"title":{},"body":{"interfaces/IRolePermission.html":{},"interfaces/IRolePermissionCreateInput.html":{},"interfaces/IRolePermissionUpdateInput.html":{}}}],["request_approval_view",{"_index":660,"title":{},"body":{"interfaces/IRolePermission.html":{},"interfaces/IRolePermissionCreateInput.html":{},"interfaces/IRolePermissionUpdateInput.html":{}}}],["requested",{"_index":383,"title":{},"body":{"classes/CrudService.html":{}}}],["reset",{"_index":44,"title":{},"body":{"modules/AppModule.html":{},"modules/CatsModule.html":{},"modules/CronModule.html":{},"modules/QueueModule.html":{},"overview.html":{}}}],["resolved",{"_index":517,"title":{},"body":{"controllers/HealthController.html":{}}}],["response",{"_index":249,"title":{},"body":{"classes/CrudController.html":{}}}],["result",{"_index":26,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Base.html":{},"classes/Cat.html":{},"controllers/CatsController.html":{},"modules/CatsModule.html":{},"injectables/CatsService.html":{},"modules/CoreModule.html":{},"classes/CreateCatDto.html":{},"modules/CronModule.html":{},"injectables/CronService.html":{},"classes/CrudController.html":{},"classes/CrudService.html":{},"injectables/DBHelper.html":{},"interfaces/FileStorageOption.html":{},"interfaces/FileSystem.html":{},"controllers/HealthController.html":{},"interfaces/IAddress.html":{},"interfaces/IAuthLoginInput.html":{},"interfaces/IAuthResponse.html":{},"interfaces/IBaseEntityModel.html":{},"interfaces/ICountry.html":{},"interfaces/ICrudService.html":{},"interfaces/ICurrency.html":{},"interfaces/IGeoLocationCreateObject.html":{},"interfaces/IGeolocationUpdateObject.html":{},"interfaces/ILanguage.html":{},"interfaces/ILanguageFindInput.html":{},"interfaces/ILanguageName.html":{},"interfaces/IListQueryInput.html":{},"interfaces/ILocation.html":{},"interfaces/IPagination.html":{},"interfaces/IPagination-1.html":{},"interfaces/IPaginationInput.html":{},"interfaces/IRole.html":{},"interfaces/IRolePermission.html":{},"interfaces/IRolePermissionCreateInput.html":{},"interfaces/IRolePermissionUpdateInput.html":{},"interfaces/ITreeNode.html":{},"interfaces/ITryRequest.html":{},"interfaces/IUser.html":{},"interfaces/IUserCreateInput.html":{},"interfaces/IUserFindInput.html":{},"interfaces/IUserRegistrationInput.html":{},"interfaces/IUserUpdateInput.html":{},"classes/Model.html":{},"classes/PaginationParams.html":{},"controllers/QueueController.html":{},"modules/QueueModule.html":{},"injectables/QueueService.html":{},"interfaces/S3FileStorageProviderConfig.html":{},"classes/UpdateCatDto.html":{},"interfaces/UploadedFile.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["results",{"_index":28,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Base.html":{},"classes/Cat.html":{},"controllers/CatsController.html":{},"modules/CatsModule.html":{},"injectables/CatsService.html":{},"modules/CoreModule.html":{},"classes/CreateCatDto.html":{},"modules/CronModule.html":{},"injectables/CronService.html":{},"classes/CrudController.html":{},"classes/CrudService.html":{},"injectables/DBHelper.html":{},"interfaces/FileStorageOption.html":{},"interfaces/FileSystem.html":{},"controllers/HealthController.html":{},"interfaces/IAddress.html":{},"interfaces/IAuthLoginInput.html":{},"interfaces/IAuthResponse.html":{},"interfaces/IBaseEntityModel.html":{},"interfaces/ICountry.html":{},"interfaces/ICrudService.html":{},"interfaces/ICurrency.html":{},"interfaces/IGeoLocationCreateObject.html":{},"interfaces/IGeolocationUpdateObject.html":{},"interfaces/ILanguage.html":{},"interfaces/ILanguageFindInput.html":{},"interfaces/ILanguageName.html":{},"interfaces/IListQueryInput.html":{},"interfaces/ILocation.html":{},"interfaces/IPagination.html":{},"interfaces/IPagination-1.html":{},"interfaces/IPaginationInput.html":{},"interfaces/IRole.html":{},"interfaces/IRolePermission.html":{},"interfaces/IRolePermissionCreateInput.html":{},"interfaces/IRolePermissionUpdateInput.html":{},"interfaces/ITreeNode.html":{},"interfaces/ITryRequest.html":{},"interfaces/IUser.html":{},"interfaces/IUserCreateInput.html":{},"interfaces/IUserFindInput.html":{},"interfaces/IUserRegistrationInput.html":{},"interfaces/IUserUpdateInput.html":{},"classes/Model.html":{},"classes/PaginationParams.html":{},"controllers/QueueController.html":{},"modules/QueueModule.html":{},"injectables/QueueService.html":{},"interfaces/S3FileStorageProviderConfig.html":{},"classes/UpdateCatDto.html":{},"interfaces/UploadedFile.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":24,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/CatsController.html":{},"injectables/CatsService.html":{},"classes/CrudController.html":{},"classes/CrudService.html":{},"injectables/DBHelper.html":{},"controllers/HealthController.html":{},"interfaces/IAddress.html":{},"interfaces/IGeoLocationCreateObject.html":{},"interfaces/IGeolocationUpdateObject.html":{},"interfaces/ILocation.html":{},"controllers/QueueController.html":{},"injectables/QueueService.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":14,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/CatsController.html":{},"injectables/CatsService.html":{},"injectables/CronService.html":{},"classes/CrudController.html":{},"classes/CrudService.html":{},"injectables/DBHelper.html":{},"controllers/HealthController.html":{},"interfaces/ICrudService.html":{},"controllers/QueueController.html":{},"injectables/QueueService.html":{},"miscellaneous/functions.html":{}}}],["rimraf",{"_index":909,"title":{},"body":{"dependencies.html":{}}}],["role",{"_index":550,"title":{},"body":{"interfaces/IAuthLoginInput.html":{},"interfaces/IAuthResponse.html":{},"interfaces/IRole.html":{},"interfaces/IRolePermission.html":{},"interfaces/IRolePermissionCreateInput.html":{},"interfaces/IRolePermissionUpdateInput.html":{},"interfaces/IUser.html":{},"interfaces/IUserCreateInput.html":{},"interfaces/IUserFindInput.html":{},"interfaces/IUserRegistrationInput.html":{},"interfaces/IUserUpdateInput.html":{},"miscellaneous/variables.html":{}}}],["role.model",{"_index":544,"title":{},"body":{"interfaces/IAuthLoginInput.html":{},"interfaces/IAuthResponse.html":{},"interfaces/IRolePermission.html":{},"interfaces/IRolePermissionCreateInput.html":{},"interfaces/IRolePermissionUpdateInput.html":{},"interfaces/IUser.html":{},"interfaces/IUserCreateInput.html":{},"interfaces/IUserFindInput.html":{},"interfaces/IUserRegistrationInput.html":{},"interfaces/IUserUpdateInput.html":{}}}],["roleid",{"_index":551,"title":{},"body":{"interfaces/IAuthLoginInput.html":{},"interfaces/IAuthResponse.html":{},"interfaces/IRolePermission.html":{},"interfaces/IRolePermissionCreateInput.html":{},"interfaces/IRolePermissionUpdateInput.html":{},"interfaces/IUser.html":{},"interfaces/IUserCreateInput.html":{},"interfaces/IUserFindInput.html":{},"interfaces/IUserRegistrationInput.html":{},"interfaces/IUserUpdateInput.html":{}}}],["rolepermissions",{"_index":613,"title":{},"body":{"interfaces/IRole.html":{}}}],["rolesenum",{"_index":616,"title":{},"body":{"interfaces/IRole.html":{}}}],["rootpath",{"_index":453,"title":{},"body":{"interfaces/FileStorageOption.html":{},"interfaces/FileSystem.html":{},"interfaces/S3FileStorageProviderConfig.html":{},"interfaces/UploadedFile.html":{}}}],["row",{"_index":425,"title":{},"body":{"injectables/DBHelper.html":{}}}],["row[relation",{"_index":429,"title":{},"body":{"injectables/DBHelper.html":{}}}],["run",{"_index":996,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":359,"title":{},"body":{"classes/CrudService.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":361,"title":{},"body":{"classes/CrudService.html":{}}}],["s3",{"_index":451,"title":{},"body":{"interfaces/FileStorageOption.html":{},"interfaces/FileSystem.html":{},"interfaces/S3FileStorageProviderConfig.html":{},"interfaces/UploadedFile.html":{}}}],["s3filestorageproviderconfig",{"_index":470,"title":{"interfaces/S3FileStorageProviderConfig.html":{}},"body":{"interfaces/FileStorageOption.html":{},"interfaces/FileSystem.html":{},"interfaces/S3FileStorageProviderConfig.html":{},"interfaces/UploadedFile.html":{},"coverage.html":{}}}],["saltrounds",{"_index":323,"title":{},"body":{"classes/CrudService.html":{}}}],["scalable",{"_index":987,"title":{},"body":{"index.html":{}}}],["schedulemodule",{"_index":49,"title":{},"body":{"modules/AppModule.html":{},"modules/QueueModule.html":{}}}],["schedulemodule.forroot",{"_index":57,"title":{},"body":{"modules/AppModule.html":{},"modules/QueueModule.html":{}}}],["second",{"_index":222,"title":{},"body":{"injectables/CronService.html":{}}}],["seconds",{"_index":225,"title":{},"body":{"injectables/CronService.html":{}}}],["sequence",{"_index":505,"title":{},"body":{"controllers/HealthController.html":{}}}],["server",{"_index":988,"title":{},"body":{"index.html":{}}}],["service",{"_index":397,"title":{},"body":{"classes/CrudService.html":{}}}],["set",{"_index":934,"title":{},"body":{"miscellaneous/functions.html":{}}}],["setupapp",{"_index":822,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["setupapp(app",{"_index":978,"title":{},"body":{"miscellaneous/functions.html":{}}}],["shutdown",{"_index":523,"title":{},"body":{"controllers/HealthController.html":{}}}],["side",{"_index":989,"title":{},"body":{"index.html":{}}}],["signal",{"_index":409,"title":{},"body":{"classes/CrudService.html":{},"controllers/HealthController.html":{}}}],["size",{"_index":462,"title":{},"body":{"interfaces/FileStorageOption.html":{},"interfaces/FileSystem.html":{},"interfaces/S3FileStorageProviderConfig.html":{},"interfaces/UploadedFile.html":{}}}],["skip",{"_index":766,"title":{},"body":{"classes/PaginationParams.html":{}}}],["somehow",{"_index":396,"title":{},"body":{"classes/CrudService.html":{}}}],["source",{"_index":4,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Base.html":{},"classes/Cat.html":{},"controllers/CatsController.html":{},"modules/CatsModule.html":{},"injectables/CatsService.html":{},"modules/CoreModule.html":{},"classes/CreateCatDto.html":{},"modules/CronModule.html":{},"injectables/CronService.html":{},"classes/CrudController.html":{},"classes/CrudService.html":{},"injectables/DBHelper.html":{},"interfaces/FileStorageOption.html":{},"interfaces/FileSystem.html":{},"controllers/HealthController.html":{},"interfaces/IAddress.html":{},"interfaces/IAuthLoginInput.html":{},"interfaces/IAuthResponse.html":{},"interfaces/IBaseEntityModel.html":{},"interfaces/ICountry.html":{},"interfaces/ICrudService.html":{},"interfaces/ICurrency.html":{},"interfaces/IGeoLocationCreateObject.html":{},"interfaces/IGeolocationUpdateObject.html":{},"interfaces/ILanguage.html":{},"interfaces/ILanguageFindInput.html":{},"interfaces/ILanguageName.html":{},"interfaces/IListQueryInput.html":{},"interfaces/ILocation.html":{},"interfaces/IPagination.html":{},"interfaces/IPagination-1.html":{},"interfaces/IPaginationInput.html":{},"interfaces/IRole.html":{},"interfaces/IRolePermission.html":{},"interfaces/IRolePermissionCreateInput.html":{},"interfaces/IRolePermissionUpdateInput.html":{},"interfaces/ITreeNode.html":{},"interfaces/ITryRequest.html":{},"interfaces/IUser.html":{},"interfaces/IUserCreateInput.html":{},"interfaces/IUserFindInput.html":{},"interfaces/IUserRegistrationInput.html":{},"interfaces/IUserUpdateInput.html":{},"classes/Model.html":{},"classes/PaginationParams.html":{},"controllers/QueueController.html":{},"modules/QueueModule.html":{},"injectables/QueueService.html":{},"interfaces/S3FileStorageProviderConfig.html":{},"classes/UpdateCatDto.html":{},"interfaces/UploadedFile.html":{},"index.html":{}}}],["sponsors",{"_index":1015,"title":{},"body":{"index.html":{}}}],["sqlite",{"_index":180,"title":{},"body":{"modules/CoreModule.html":{}}}],["sqlite3",{"_index":912,"title":{},"body":{"dependencies.html":{}}}],["start",{"_index":997,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":1000,"title":{},"body":{"index.html":{}}}],["start:prodtest",{"_index":1002,"title":{},"body":{"index.html":{}}}],["started",{"_index":981,"title":{"index.html":{}},"body":{}}],["starter",{"_index":991,"title":{},"body":{"index.html":{}}}],["statements",{"_index":816,"title":{},"body":{"coverage.html":{}}}],["status",{"_index":293,"title":{},"body":{"classes/CrudController.html":{}}}],["stay",{"_index":1025,"title":{},"body":{"index.html":{}}}],["storage",{"_index":459,"title":{},"body":{"interfaces/FileStorageOption.html":{},"interfaces/FileSystem.html":{},"interfaces/S3FileStorageProviderConfig.html":{},"interfaces/UploadedFile.html":{}}}],["stored",{"_index":962,"title":{},"body":{"miscellaneous/functions.html":{}}}],["stream",{"_index":343,"title":{},"body":{"classes/CrudService.html":{}}}],["stream$.pipe",{"_index":407,"title":{},"body":{"classes/CrudService.html":{}}}],["string",{"_index":15,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/Base.html":{},"controllers/CatsController.html":{},"injectables/CatsService.html":{},"classes/CrudController.html":{},"classes/CrudService.html":{},"injectables/DBHelper.html":{},"interfaces/FileStorageOption.html":{},"interfaces/FileSystem.html":{},"controllers/HealthController.html":{},"interfaces/IAddress.html":{},"interfaces/IAuthLoginInput.html":{},"interfaces/IAuthResponse.html":{},"interfaces/ICountry.html":{},"interfaces/ICrudService.html":{},"interfaces/ICurrency.html":{},"interfaces/IGeoLocationCreateObject.html":{},"interfaces/IGeolocationUpdateObject.html":{},"interfaces/ILanguage.html":{},"interfaces/ILanguageFindInput.html":{},"interfaces/ILanguageName.html":{},"interfaces/IListQueryInput.html":{},"interfaces/ILocation.html":{},"interfaces/IPagination-1.html":{},"interfaces/IPaginationInput.html":{},"interfaces/IRole.html":{},"interfaces/IRolePermission.html":{},"interfaces/IRolePermissionCreateInput.html":{},"interfaces/IRolePermissionUpdateInput.html":{},"interfaces/IUser.html":{},"interfaces/IUserCreateInput.html":{},"interfaces/IUserFindInput.html":{},"interfaces/IUserRegistrationInput.html":{},"interfaces/IUserUpdateInput.html":{},"classes/Model.html":{},"classes/PaginationParams.html":{},"controllers/QueueController.html":{},"injectables/QueueService.html":{},"interfaces/S3FileStorageProviderConfig.html":{},"interfaces/UploadedFile.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["string})@primarygeneratedcolumn",{"_index":92,"title":{},"body":{"classes/Base.html":{}}}],["success",{"_index":376,"title":{},"body":{"classes/CrudService.html":{},"interfaces/ITryRequest.html":{}}}],["successfully",{"_index":246,"title":{},"body":{"classes/CrudController.html":{}}}],["summary",{"_index":298,"title":{},"body":{"classes/CrudController.html":{}}}],["super_admin",{"_index":617,"title":{},"body":{"interfaces/IRole.html":{}}}],["super_admin_edit",{"_index":672,"title":{},"body":{"interfaces/IRolePermission.html":{},"interfaces/IRolePermissionCreateInput.html":{},"interfaces/IRolePermissionUpdateInput.html":{}}}],["support",{"_index":1016,"title":{},"body":{"index.html":{},"modules.html":{}}}],["svg",{"_index":1036,"title":{},"body":{"modules.html":{}}}],["swagger",{"_index":914,"title":{},"body":{"dependencies.html":{}}}],["sync",{"_index":414,"title":{},"body":{"injectables/DBHelper.html":{}}}],["sync(relation",{"_index":418,"title":{},"body":{"injectables/DBHelper.html":{}}}],["synchronize",{"_index":184,"title":{},"body":{"modules/CoreModule.html":{}}}],["t",{"_index":302,"title":{},"body":{"classes/CrudController.html":{},"injectables/DBHelper.html":{},"interfaces/IListQueryInput.html":{},"interfaces/IPagination.html":{},"interfaces/IPagination-1.html":{},"interfaces/IPaginationInput.html":{},"interfaces/ITreeNode.html":{},"classes/PaginationParams.html":{}}}],["table",{"_index":868,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":867,"title":{},"body":{"coverage.html":{}}}],["take",{"_index":767,"title":{},"body":{"classes/PaginationParams.html":{}}}],["tempfile",{"_index":844,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["tempfile(prefix",{"_index":946,"title":{},"body":{"miscellaneous/functions.html":{}}}],["template",{"_index":1050,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tenant_add_existing_user",{"_index":690,"title":{},"body":{"interfaces/IRolePermission.html":{},"interfaces/IRolePermissionCreateInput.html":{},"interfaces/IRolePermissionUpdateInput.html":{}}}],["termination",{"_index":500,"title":{},"body":{"controllers/HealthController.html":{}}}],["terminusmodule",{"_index":51,"title":{},"body":{"modules/AppModule.html":{},"modules/QueueModule.html":{}}}],["test",{"_index":1005,"title":{},"body":{"index.html":{}}}],["test:covsupport",{"_index":1008,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":1007,"title":{},"body":{"index.html":{}}}],["tests",{"_index":1004,"title":{},"body":{"index.html":{}}}],["thanks",{"_index":1014,"title":{},"body":{"index.html":{}}}],["thirdpartyid",{"_index":556,"title":{},"body":{"interfaces/IAuthLoginInput.html":{},"interfaces/IAuthResponse.html":{},"interfaces/IUser.html":{},"interfaces/IUserCreateInput.html":{},"interfaces/IUserFindInput.html":{},"interfaces/IUserRegistrationInput.html":{},"interfaces/IUserUpdateInput.html":{}}}],["this.appservice.gethello",{"_index":25,"title":{},"body":{"controllers/AppController.html":{}}}],["this.catsservice.create(createcatdto",{"_index":150,"title":{},"body":{"controllers/CatsController.html":{}}}],["this.catsservice.findall",{"_index":151,"title":{},"body":{"controllers/CatsController.html":{}}}],["this.catsservice.findone(+id",{"_index":153,"title":{},"body":{"controllers/CatsController.html":{}}}],["this.catsservice.remove(+id",{"_index":157,"title":{},"body":{"controllers/CatsController.html":{}}}],["this.catsservice.update(+id",{"_index":155,"title":{},"body":{"controllers/CatsController.html":{}}}],["this.crudservice.create(entity",{"_index":311,"title":{},"body":{"classes/CrudController.html":{}}}],["this.crudservice.delete(id",{"_index":321,"title":{},"body":{"classes/CrudController.html":{}}}],["this.crudservice.findall(filter",{"_index":301,"title":{},"body":{"classes/CrudController.html":{}}}],["this.crudservice.findone(id",{"_index":305,"title":{},"body":{"classes/CrudController.html":{}}}],["this.crudservice.update(id",{"_index":315,"title":{},"body":{"classes/CrudController.html":{}}}],["this.dns.pingcheck('nestjs",{"_index":495,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.findby",{"_index":424,"title":{},"body":{"injectables/DBHelper.html":{}}}],["this.getpasswordhash(partialentity.hash",{"_index":403,"title":{},"body":{"classes/CrudService.html":{}}}],["this.health.check",{"_index":494,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.logger.debug('called",{"_index":221,"title":{},"body":{"injectables/CronService.html":{}}}],["this.queueservice.gethello",{"_index":800,"title":{},"body":{"controllers/QueueController.html":{}}}],["this.repository.count(filter",{"_index":370,"title":{},"body":{"classes/CrudService.html":{}}}],["this.repository.create(entity",{"_index":385,"title":{},"body":{"classes/CrudService.html":{}}}],["this.repository.delete(criteria",{"_index":406,"title":{},"body":{"classes/CrudService.html":{}}}],["this.repository.find(filter",{"_index":374,"title":{},"body":{"classes/CrudService.html":{}}}],["this.repository.findone(id",{"_index":380,"title":{},"body":{"classes/CrudService.html":{}}}],["this.repository.findone(this.findby",{"_index":426,"title":{},"body":{"injectables/DBHelper.html":{}}}],["this.repository.findoneorfail(id",{"_index":375,"title":{},"body":{"classes/CrudService.html":{}}}],["this.repository.save(obj",{"_index":388,"title":{},"body":{"classes/CrudService.html":{}}}],["this.repository.save(row",{"_index":438,"title":{},"body":{"injectables/DBHelper.html":{}}}],["this.repository.update(id",{"_index":405,"title":{},"body":{"classes/CrudService.html":{}}}],["this.saltrounds",{"_index":368,"title":{},"body":{"classes/CrudService.html":{}}}],["throw",{"_index":381,"title":{},"body":{"classes/CrudService.html":{}}}],["throwerror",{"_index":358,"title":{},"body":{"classes/CrudService.html":{}}}],["time",{"_index":81,"title":{},"body":{"classes/Base.html":{},"classes/Model.html":{}}}],["time_off_edit",{"_index":659,"title":{},"body":{"interfaces/IRolePermission.html":{},"interfaces/IRolePermissionCreateInput.html":{},"interfaces/IRolePermissionUpdateInput.html":{}}}],["time_tracker",{"_index":689,"title":{},"body":{"interfaces/IRolePermission.html":{},"interfaces/IRolePermissionCreateInput.html":{},"interfaces/IRolePermissionUpdateInput.html":{}}}],["timeout",{"_index":220,"title":{},"body":{"injectables/CronService.html":{}}}],["timeout(50000",{"_index":212,"title":{},"body":{"injectables/CronService.html":{}}}],["timesheet_edit_time",{"_index":671,"title":{},"body":{"interfaces/IRolePermission.html":{},"interfaces/IRolePermissionCreateInput.html":{},"interfaces/IRolePermissionUpdateInput.html":{}}}],["timestamps",{"_index":948,"title":{},"body":{"miscellaneous/functions.html":{}}}],["timezone",{"_index":898,"title":{},"body":{"dependencies.html":{},"miscellaneous/functions.html":{}}}],["toadd",{"_index":432,"title":{},"body":{"injectables/DBHelper.html":{}}}],["toformdata",{"_index":864,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["toformdata(obj",{"_index":970,"title":{},"body":{"miscellaneous/functions.html":{}}}],["tohexstring",{"_index":832,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["tohexstring(value",{"_index":979,"title":{},"body":{"miscellaneous/functions.html":{}}}],["token",{"_index":563,"title":{},"body":{"interfaces/IAuthLoginInput.html":{},"interfaces/IAuthResponse.html":{},"interfaces/IUser.html":{},"interfaces/IUserCreateInput.html":{},"interfaces/IUserFindInput.html":{},"interfaces/IUserRegistrationInput.html":{},"interfaces/IUserUpdateInput.html":{}}}],["tolocal",{"_index":865,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["tolocal(data",{"_index":973,"title":{},"body":{"miscellaneous/functions.html":{}}}],["toremove",{"_index":430,"title":{},"body":{"injectables/DBHelper.html":{}}}],["toremove.indexof(value",{"_index":436,"title":{},"body":{"injectables/DBHelper.html":{}}}],["total",{"_index":371,"title":{},"body":{"classes/CrudService.html":{},"interfaces/IListQueryInput.html":{},"interfaces/IPagination.html":{},"interfaces/IPagination-1.html":{},"interfaces/IPaginationInput.html":{}}}],["touch",{"_index":1026,"title":{},"body":{"index.html":{}}}],["toutc",{"_index":866,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["toutc(data",{"_index":975,"title":{},"body":{"miscellaneous/functions.html":{}}}],["transform",{"_index":780,"title":{},"body":{"classes/PaginationParams.html":{}}}],["transform((val",{"_index":791,"title":{},"body":{"classes/PaginationParams.html":{}}}],["transformer",{"_index":781,"title":{},"body":{"classes/PaginationParams.html":{},"dependencies.html":{}}}],["true",{"_index":185,"title":{},"body":{"modules/CoreModule.html":{},"classes/CrudService.html":{}}}],["try",{"_index":365,"title":{},"body":{"classes/CrudService.html":{}}}],["ts",{"_index":399,"title":{},"body":{"classes/CrudService.html":{}}}],["twitter",{"_index":1032,"title":{},"body":{"index.html":{}}}],["type",{"_index":77,"title":{},"body":{"classes/Base.html":{},"controllers/CatsController.html":{},"injectables/CatsService.html":{},"modules/CoreModule.html":{},"classes/CrudController.html":{},"classes/CrudService.html":{},"injectables/DBHelper.html":{},"interfaces/FileStorageOption.html":{},"interfaces/FileSystem.html":{},"controllers/HealthController.html":{},"interfaces/IAddress.html":{},"interfaces/IAuthLoginInput.html":{},"interfaces/IAuthResponse.html":{},"interfaces/IBaseEntityModel.html":{},"interfaces/ICountry.html":{},"interfaces/ICrudService.html":{},"interfaces/ICurrency.html":{},"interfaces/IGeoLocationCreateObject.html":{},"interfaces/IGeolocationUpdateObject.html":{},"interfaces/ILanguage.html":{},"interfaces/ILanguageFindInput.html":{},"interfaces/ILanguageName.html":{},"interfaces/IListQueryInput.html":{},"interfaces/ILocation.html":{},"interfaces/IPagination.html":{},"interfaces/IPagination-1.html":{},"interfaces/IPaginationInput.html":{},"interfaces/IRole.html":{},"interfaces/IRolePermission.html":{},"interfaces/IRolePermissionCreateInput.html":{},"interfaces/IRolePermissionUpdateInput.html":{},"interfaces/ITreeNode.html":{},"interfaces/ITryRequest.html":{},"interfaces/IUser.html":{},"interfaces/IUserCreateInput.html":{},"interfaces/IUserFindInput.html":{},"interfaces/IUserRegistrationInput.html":{},"interfaces/IUserUpdateInput.html":{},"classes/Model.html":{},"classes/PaginationParams.html":{},"interfaces/S3FileStorageProviderConfig.html":{},"interfaces/UploadedFile.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["typeorm",{"_index":105,"title":{},"body":{"classes/Base.html":{},"classes/CrudController.html":{},"classes/CrudService.html":{},"injectables/DBHelper.html":{},"interfaces/ICrudService.html":{},"classes/Model.html":{},"dependencies.html":{}}}],["typeorm/query",{"_index":286,"title":{},"body":{"classes/CrudController.html":{},"classes/CrudService.html":{},"interfaces/ICrudService.html":{}}}],["typeormmodule",{"_index":175,"title":{},"body":{"modules/CoreModule.html":{}}}],["typeormmodule.forroot",{"_index":177,"title":{},"body":{"modules/CoreModule.html":{}}}],["types",{"_index":811,"title":{},"body":{"classes/UpdateCatDto.html":{},"dependencies.html":{}}}],["typescript",{"_index":197,"title":{},"body":{"modules/CronModule.html":{},"classes/CrudService.html":{},"modules/QueueModule.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["ui",{"_index":915,"title":{},"body":{"dependencies.html":{}}}],["unauthorized",{"_index":295,"title":{},"body":{"classes/CrudController.html":{}}}],["undefined",{"_index":243,"title":{},"body":{"classes/CrudController.html":{}}}],["unit",{"_index":1003,"title":{},"body":{"index.html":{}}}],["unixtimestamptodate",{"_index":845,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["unixtimestamptodate(timestamps",{"_index":947,"title":{},"body":{"miscellaneous/functions.html":{}}}],["unsafe",{"_index":199,"title":{},"body":{"modules/CronModule.html":{},"classes/CrudService.html":{},"modules/QueueModule.html":{}}}],["until",{"_index":516,"title":{},"body":{"controllers/HealthController.html":{}}}],["update",{"_index":121,"title":{},"body":{"controllers/CatsController.html":{},"injectables/CatsService.html":{},"classes/CrudController.html":{},"classes/CrudService.html":{},"interfaces/ICrudService.html":{}}}],["update(@param('id",{"_index":154,"title":{},"body":{"controllers/CatsController.html":{}}}],["update(id",{"_index":135,"title":{},"body":{"controllers/CatsController.html":{},"injectables/CatsService.html":{},"classes/CrudController.html":{},"classes/CrudService.html":{},"interfaces/ICrudService.html":{}}}],["updatecatdto",{"_index":136,"title":{"classes/UpdateCatDto.html":{}},"body":{"controllers/CatsController.html":{},"injectables/CatsService.html":{},"classes/UpdateCatDto.html":{},"coverage.html":{}}}],["updatedat",{"_index":76,"title":{},"body":{"classes/Base.html":{},"interfaces/IBaseEntityModel.html":{},"classes/Model.html":{}}}],["updatedatecolumn",{"_index":102,"title":{},"body":{"classes/Base.html":{},"classes/Model.html":{}}}],["updateresult",{"_index":363,"title":{},"body":{"classes/CrudService.html":{},"interfaces/ICrudService.html":{}}}],["updates",{"_index":171,"title":{},"body":{"injectables/CatsService.html":{}}}],["uploadedfile",{"_index":455,"title":{"interfaces/UploadedFile.html":{}},"body":{"interfaces/FileStorageOption.html":{},"interfaces/FileSystem.html":{},"interfaces/S3FileStorageProviderConfig.html":{},"interfaces/UploadedFile.html":{},"coverage.html":{}}}],["url",{"_index":467,"title":{},"body":{"interfaces/FileStorageOption.html":{},"interfaces/FileSystem.html":{},"interfaces/S3FileStorageProviderConfig.html":{},"interfaces/UploadedFile.html":{}}}],["use",{"_index":398,"title":{},"body":{"classes/CrudService.html":{},"controllers/HealthController.html":{}}}],["user",{"_index":558,"title":{},"body":{"interfaces/IAuthLoginInput.html":{},"interfaces/IAuthResponse.html":{},"interfaces/IUser.html":{},"interfaces/IUserCreateInput.html":{},"interfaces/IUserFindInput.html":{},"interfaces/IUserRegistrationInput.html":{},"interfaces/IUserUpdateInput.html":{},"miscellaneous/variables.html":{}}}],["user.email.charat(0).touppercase",{"_index":1059,"title":{},"body":{"miscellaneous/variables.html":{}}}],["user.firstname",{"_index":1054,"title":{},"body":{"miscellaneous/variables.html":{}}}],["user.firstname.charat(0).touppercase",{"_index":1055,"title":{},"body":{"miscellaneous/variables.html":{}}}],["username",{"_index":549,"title":{},"body":{"interfaces/IAuthLoginInput.html":{},"interfaces/IAuthResponse.html":{},"interfaces/IUser.html":{},"interfaces/IUserCreateInput.html":{},"interfaces/IUserFindInput.html":{},"interfaces/IUserRegistrationInput.html":{},"interfaces/IUserUpdateInput.html":{}}}],["val",{"_index":963,"title":{},"body":{"miscellaneous/functions.html":{}}}],["validator",{"_index":785,"title":{},"body":{"classes/PaginationParams.html":{},"dependencies.html":{}}}],["value",{"_index":215,"title":{},"body":{"injectables/CronService.html":{},"classes/PaginationParams.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["values",{"_index":428,"title":{},"body":{"injectables/DBHelper.html":{}}}],["variable",{"_index":835,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":1043,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["view_all_emails",{"_index":678,"title":{},"body":{"interfaces/IRolePermission.html":{},"interfaces/IRolePermissionCreateInput.html":{},"interfaces/IRolePermissionUpdateInput.html":{}}}],["viewer",{"_index":623,"title":{},"body":{"interfaces/IRole.html":{}}}],["void",{"_index":209,"title":{},"body":{"injectables/CronService.html":{},"controllers/HealthController.html":{}}}],["want",{"_index":937,"title":{},"body":{"miscellaneous/functions.html":{}}}],["watch",{"_index":998,"title":{},"body":{"index.html":{}}}],["we'll",{"_index":939,"title":{},"body":{"miscellaneous/functions.html":{}}}],["website",{"_index":1030,"title":{},"body":{"index.html":{}}}],["went",{"_index":252,"title":{},"body":{"classes/CrudController.html":{}}}],["width",{"_index":1046,"title":{},"body":{"miscellaneous/variables.html":{}}}],["world",{"_index":63,"title":{},"body":{"injectables/AppService.html":{},"injectables/QueueService.html":{}}}],["writeerror",{"_index":390,"title":{},"body":{"classes/CrudService.html":{}}}],["wrong",{"_index":309,"title":{},"body":{"classes/CrudController.html":{}}}],["wrong'})@httpcode(httpstatus.accepted)@put(':id",{"_index":279,"title":{},"body":{"classes/CrudController.html":{}}}],["wrong'})@httpcode(httpstatus.created)@post",{"_index":253,"title":{},"body":{"classes/CrudController.html":{}}}],["year",{"_index":944,"title":{},"body":{"miscellaneous/functions.html":{}}}],["yes",{"_index":269,"title":{},"body":{"classes/CrudController.html":{},"classes/CrudService.html":{},"controllers/HealthController.html":{},"interfaces/ICrudService.html":{},"classes/Model.html":{},"miscellaneous/functions.html":{}}}],["you'd",{"_index":1019,"title":{},"body":{"index.html":{}}}],["zoom",{"_index":43,"title":{},"body":{"modules/AppModule.html":{},"modules/CatsModule.html":{},"modules/CronModule.html":{},"modules/QueueModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/backend/src/app.controller.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getHello\n                        \n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in apps/backend/src/app.controller.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common'\n\nimport { AppService } from 'apps/backend/src/app.service'\n\n@Controller()\nexport class AppController {\n    constructor(private readonly appService: AppService) {}\n\n    @Get()\n    getHello(): string {\n        return this.appService.getHello()\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\n\nCatsModule\n\nCatsModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nCatsModule->AppModule\n\n\n\n\n\nCronModule\n\nCronModule\n\nAppModule -->\n\nCronModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/backend/src/app.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                        \n                            HealthController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            CatsModule\n                        \n                        \n                            CronModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common'\nimport { ScheduleModule } from '@nestjs/schedule'\nimport { TerminusModule } from '@nestjs/terminus'\n\nimport { CronModule } from '@app/cron/cron.module'\nimport { HealthController } from '@app/health'\n\nimport { AppController } from 'apps/backend/src/app.controller'\nimport { AppService } from 'apps/backend/src/app.service'\nimport { CatsModule } from 'apps/backend/src/cats/cats.module'\n\n@Module({\n    imports: [TerminusModule, CatsModule, ScheduleModule.forRoot(), CronModule],\n    controllers: [AppController, HealthController],\n    providers: [AppService],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/backend/src/app.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getHello\n                        \n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n            \n                \n                    Defined in apps/backend/src/app.service.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common'\n\n@Injectable()\nexport class AppService {\n    getHello(): string {\n        return 'Hello World!'\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Base.html":{"url":"classes/Base.html","title":"class - Base","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Base\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/core/src/entities/base.ts\n        \n\n\n            \n                Extends\n            \n            \n                        Model\n            \n\n            \n                Implements\n            \n            \n                            IBaseEntityModel\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                createdAt\n                            \n                            \n                                    Optional\n                                deletedAt\n                            \n                            \n                                    Optional\n                                id\n                            \n                            \n                                    Optional\n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({type: 'string', format: 'date-time', example: '2000-01-01T12:00:00.000Z'})@CreateDateColumn()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in libs/core/src/entities/base.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            deletedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Date | null\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({type: 'string', format: 'date-time', example: '2000-01-01T12:00:00.000Z'})@DeleteDateColumn()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in libs/core/src/entities/base.ts:48\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiPropertyOptional({type: String})@PrimaryGeneratedColumn()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in libs/core/src/entities/base.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({type: 'string', format: 'date-time', example: '2000-01-01T12:00:00.000Z'})@UpdateDateColumn()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in libs/core/src/entities/base.ts:40\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiPropertyOptional, ApiProperty } from '@nestjs/swagger'\n\nimport { BaseEntityModel as IBaseEntityModel } from '@app/interfaces'\n\nimport {\n    PrimaryGeneratedColumn,\n    UpdateDateColumn,\n    CreateDateColumn,\n    DeleteDateColumn,\n} from 'typeorm'\n\nexport abstract class Model {\n    constructor(input?: any) {\n        if (input) {\n            Object.assign(this, input)\n        }\n    }\n}\n\nexport abstract class Base extends Model implements IBaseEntityModel {\n    @ApiPropertyOptional({ type: String })\n    @PrimaryGeneratedColumn()\n    id?: number\n\n    @ApiProperty({\n        type: 'string',\n        format: 'date-time',\n        example: '2000-01-01T12:00:00.000Z',\n    })\n    @CreateDateColumn()\n    createdAt?: Date\n\n    @ApiProperty({\n        type: 'string',\n        format: 'date-time',\n        example: '2000-01-01T12:00:00.000Z',\n    })\n    @UpdateDateColumn()\n    updatedAt?: Date\n\n    @ApiProperty({\n        type: 'string',\n        format: 'date-time',\n        example: '2000-01-01T12:00:00.000Z',\n    })\n    @DeleteDateColumn()\n    deletedAt?: Date | null\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Cat.html":{"url":"classes/Cat.html","title":"class - Cat","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Cat\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/backend/src/cats/entities/cat.entity.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Cat {}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/CatsController.html":{"url":"controllers/CatsController.html","title":"controller - CatsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  CatsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/backend/src/cats/cats.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                cats\n            \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                remove\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            create\n                        \n                        \n                    \n                \n            \n            \n                \ncreate(createCatDto: CreateCatDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n            \n                \n                    Defined in apps/backend/src/cats/cats.controller.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createCatDto\n                                    \n                                                CreateCatDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            findAll\n                        \n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in apps/backend/src/cats/cats.controller.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            findOne\n                        \n                        \n                    \n                \n            \n            \n                \nfindOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n            \n                \n                    Defined in apps/backend/src/cats/cats.controller.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            remove\n                        \n                        \n                    \n                \n            \n            \n                \nremove(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n            \n                \n                    Defined in apps/backend/src/cats/cats.controller.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            update\n                        \n                        \n                    \n                \n            \n            \n                \nupdate(id: string, updateCatDto: UpdateCatDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Put(':id')\n                \n            \n\n            \n                \n                    Defined in apps/backend/src/cats/cats.controller.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateCatDto\n                                    \n                                                UpdateCatDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Post, Body, Put, Param, Delete } from '@nestjs/common'\n\nimport { CatsService } from 'apps/backend/src/cats/cats.service'\nimport { CreateCatDto } from 'apps/backend/src/cats/dto/create-cat.dto'\nimport { UpdateCatDto } from 'apps/backend/src/cats/dto/update-cat.dto'\n\n@Controller('cats')\nexport class CatsController {\n    constructor(private readonly catsService: CatsService) {}\n\n    @Post()\n    create(@Body() createCatDto: CreateCatDto) {\n        return this.catsService.create(createCatDto)\n    }\n\n    @Get()\n    findAll() {\n        return this.catsService.findAll()\n    }\n\n    @Get(':id')\n    findOne(@Param('id') id: string) {\n        return this.catsService.findOne(+id)\n    }\n\n    @Put(':id')\n    update(@Param('id') id: string, @Body() updateCatDto: UpdateCatDto) {\n        return this.catsService.update(+id, updateCatDto)\n    }\n\n    @Delete(':id')\n    remove(@Param('id') id: string) {\n        return this.catsService.remove(+id)\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CatsModule.html":{"url":"modules/CatsModule.html","title":"module - CatsModule","body":"\n                   \n\n\n\n\n    Modules\n    CatsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_CatsModule\n\n\n\ncluster_CatsModule_providers\n\n\n\n\nCatsService\n\nCatsService\n\n\n\nCatsModule\n\nCatsModule\n\nCatsModule -->\n\nCatsService->CatsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/backend/src/cats/cats.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            CatsService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            CatsController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common'\n\nimport { CatsController } from 'apps/backend/src/cats/cats.controller'\nimport { CatsService } from 'apps/backend/src/cats/cats.service'\n\n@Module({\n    controllers: [CatsController],\n    providers: [CatsService],\n})\nexport class CatsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CatsService.html":{"url":"injectables/CatsService.html","title":"injectable - CatsService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  CatsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/backend/src/cats/cats.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                remove\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            create\n                        \n                        \n                    \n                \n            \n            \n                \ncreate(createCatDto: CreateCatDto)\n                \n            \n\n\n            \n                \n                    Defined in apps/backend/src/cats/cats.service.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createCatDto\n                                    \n                                                CreateCatDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            findAll\n                        \n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n\n            \n                \n                    Defined in apps/backend/src/cats/cats.service.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            findOne\n                        \n                        \n                    \n                \n            \n            \n                \nfindOne(id: number)\n                \n            \n\n\n            \n                \n                    Defined in apps/backend/src/cats/cats.service.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            remove\n                        \n                        \n                    \n                \n            \n            \n                \nremove(id: number)\n                \n            \n\n\n            \n                \n                    Defined in apps/backend/src/cats/cats.service.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            update\n                        \n                        \n                    \n                \n            \n            \n                \nupdate(id: number, updateCatDto: UpdateCatDto)\n                \n            \n\n\n            \n                \n                    Defined in apps/backend/src/cats/cats.service.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateCatDto\n                                    \n                                                UpdateCatDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common'\n\nimport { CreateCatDto } from 'apps/backend/src/cats/dto/create-cat.dto'\nimport { UpdateCatDto } from 'apps/backend/src/cats/dto/update-cat.dto'\n\n@Injectable()\nexport class CatsService {\n    create(createCatDto: CreateCatDto) {\n        return 'This action adds a new cat'\n    }\n\n    findAll() {\n        return `This action returns all cats`\n    }\n\n    findOne(id: number) {\n        return `This action returns a #${id} cat`\n    }\n\n    update(id: number, updateCatDto: UpdateCatDto) {\n        return `This action updates a #${id} cat`\n    }\n\n    remove(id: number) {\n        return `This action removes a #${id} cat`\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CoreModule.html":{"url":"modules/CoreModule.html","title":"module - CoreModule","body":"\n                   \n\n\n\n\n    Modules\n    CoreModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/core/src/core.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common'\nimport { TypeOrmModule } from '@nestjs/typeorm'\n\n@Module({\n    imports: [\n        // TypeOrmModule.forRoot({\n        //     entities: [`${__dirname}/../**/*.entity.{ts,js}`],\n        //     type: 'sqlite' as const,\n        //     database: 'database.sqlite',\n        //     synchronize: true,\n        //     logging: true,\n        // }),\n    ],\n    providers: [],\n    exports: [],\n})\nexport class CoreModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateCatDto.html":{"url":"classes/CreateCatDto.html","title":"class - CreateCatDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateCatDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/backend/src/cats/dto/create-cat.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class CreateCatDto {}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CronModule.html":{"url":"modules/CronModule.html","title":"module - CronModule","body":"\n                   \n\n\n\n\n    Modules\n    CronModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_CronModule\n\n\n\ncluster_CronModule_exports\n\n\n\ncluster_CronModule_providers\n\n\n\n\nCronService \n\nCronService \n\n\n\nCronModule\n\nCronModule\n\nCronService  -->\n\nCronModule->CronService \n\n\n\n\n\nCronService\n\nCronService\n\nCronModule -->\n\nCronService->CronModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/cron/src/cron.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            CronService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            CronService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common'\n\nimport { CronService } from '@app/cron/cron.service'\n\n@Module({\n    providers: [CronService], // eslint-disable-line @typescript-eslint/no-unsafe-assignment\n    exports: [CronService], // eslint-disable-line @typescript-eslint/no-unsafe-assignment\n})\nexport class CronModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CronService.html":{"url":"injectables/CronService.html","title":"injectable - CronService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  CronService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/cron/src/cron.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                handleCron\n                            \n                            \n                                handleInterval\n                            \n                            \n                                handleTimeout\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            handleCron\n                        \n                        \n                    \n                \n            \n            \n                \nhandleCron()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Cron('60 * * * * *')\n                \n            \n\n            \n                \n                    Defined in libs/cron/src/cron.service.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            handleInterval\n                        \n                        \n                    \n                \n            \n            \n                \nhandleInterval()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Interval(100000)\n                \n            \n\n            \n                \n                    Defined in libs/cron/src/cron.service.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            handleTimeout\n                        \n                        \n                    \n                \n            \n            \n                \nhandleTimeout()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Timeout(50000)\n                \n            \n\n            \n                \n                    Defined in libs/cron/src/cron.service.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            logger\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Logger(CronService.name)\n                        \n                    \n                        \n                            \n                                    Defined in libs/cron/src/cron.service.ts:6\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable, Logger } from '@nestjs/common'\nimport { Cron, Interval, Timeout } from '@nestjs/schedule'\n\n@Injectable()\nexport class CronService {\n    private readonly logger = new Logger(CronService.name)\n\n    @Cron('60 * * * * *')\n    handleCron() {\n        this.logger.debug('Called when the second is 60')\n    }\n\n    @Interval(100000)\n    handleInterval() {\n        this.logger.debug('Called every 100 seconds')\n    }\n\n    @Timeout(50000)\n    handleTimeout() {\n        this.logger.debug('Called once after 50 seconds')\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CrudController.html":{"url":"classes/CrudController.html","title":"class - CrudController","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CrudController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/core/src/crud/crud.controller.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                delete\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findById\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Protected\n                        constructor(crudService: ICrudService)\n                    \n                \n                        \n                            \n                                Defined in libs/core/src/crud/crud.controller.ts:24\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        crudService\n                                                  \n                                                        \n                                                                        ICrudService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            create\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    create(entity: DeepPartial, ...options: any[])\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'Create new record'})@ApiResponse({status: undefined, description: 'The record has been successfully created.'})@ApiResponse({status: undefined, description: 'Invalid input, The response body may contain clues as to what went wrong'})@HttpCode(HttpStatus.CREATED)@Post()\n                \n            \n\n            \n                \n                    Defined in libs/core/src/crud/crud.controller.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entity\n                                    \n                                            DeepPartial\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                            any[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            delete\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(id: string, ...options: any[])\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'Delete record'})@ApiResponse({status: undefined, description: 'The record has been successfully deleted'})@ApiResponse({status: undefined, description: 'Record not found'})@HttpCode(HttpStatus.ACCEPTED)@Delete(':id')\n                \n            \n\n            \n                \n                    Defined in libs/core/src/crud/crud.controller.ts:102\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                            any[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findAll\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll(filter?: PaginationParams)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'find all'})@ApiResponse({status: undefined, description: 'Found records'})@Get()\n                \n            \n\n            \n                \n                    Defined in libs/core/src/crud/crud.controller.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                                PaginationParams\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findById\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findById(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'Find by id'})@ApiResponse({status: undefined, description: 'Found one record'})@ApiResponse({status: undefined, description: 'Record not found'})@Get(':id')\n                \n            \n\n            \n                \n                    Defined in libs/core/src/crud/crud.controller.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            update\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: string, entity: QueryDeepPartialEntity, ...options: any[])\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'Update an existing record'})@ApiResponse({status: undefined, description: 'The record has been successfully edited.'})@ApiResponse({status: undefined, description: 'Record not found'})@ApiResponse({status: undefined, description: 'Invalid input, The response body may contain clues as to what went wrong'})@HttpCode(HttpStatus.ACCEPTED)@Put(':id')\n                \n            \n\n            \n                \n                    Defined in libs/core/src/crud/crud.controller.ts:83\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    entity\n                                    \n                                            QueryDeepPartialEntity\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                            any[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n    Get,\n    Post,\n    Put,\n    Delete,\n    Body,\n    Param,\n    HttpStatus,\n    HttpCode,\n} from '@nestjs/common'\nimport { ApiOperation, ApiResponse, ApiBearerAuth } from '@nestjs/swagger'\n\nimport { DeepPartial } from 'typeorm'\nimport { QueryDeepPartialEntity } from 'typeorm/query-builder/QueryPartialEntity'\n\nimport { Base } from '../entities/base'\nimport { ICrudService } from './icrud.service'\nimport { IPagination } from './pagination'\nimport { PaginationParams } from './pagination-params'\n\n@ApiResponse({ status: HttpStatus.UNAUTHORIZED, description: 'Unauthorized' })\n@ApiResponse({ status: HttpStatus.FORBIDDEN, description: 'Forbidden' })\n@ApiBearerAuth()\nexport abstract class CrudController {\n    protected constructor(private readonly crudService: ICrudService) {}\n\n    @ApiOperation({ summary: 'find all' })\n    @ApiResponse({\n        status: HttpStatus.OK,\n        description: 'Found records' /* type: IPagination */,\n    })\n    @Get()\n    async findAll(filter?: PaginationParams): Promise> {\n        return this.crudService.findAll(filter)\n    }\n\n    @ApiOperation({ summary: 'Find by id' })\n    @ApiResponse({\n        status: HttpStatus.OK,\n        description: 'Found one record' /* , type: T */,\n    })\n    @ApiResponse({\n        status: HttpStatus.NOT_FOUND,\n        description: 'Record not found',\n    })\n    @Get(':id')\n    async findById(@Param('id') id: string): Promise {\n        return this.crudService.findOne(id)\n    }\n\n    @ApiOperation({ summary: 'Create new record' })\n    @ApiResponse({\n        status: HttpStatus.CREATED,\n        description: 'The record has been successfully created.' /* , type: T */,\n    })\n    @ApiResponse({\n        status: HttpStatus.BAD_REQUEST,\n        description:\n            'Invalid input, The response body may contain clues as to what went wrong',\n    })\n    @HttpCode(HttpStatus.CREATED)\n    @Post()\n    async create(@Body() entity: DeepPartial, ...options: any[]): Promise {\n        return this.crudService.create(entity)\n    }\n\n    @ApiOperation({ summary: 'Update an existing record' })\n    @ApiResponse({\n        status: HttpStatus.CREATED,\n        description: 'The record has been successfully edited.',\n    })\n    @ApiResponse({\n        status: HttpStatus.NOT_FOUND,\n        description: 'Record not found',\n    })\n    @ApiResponse({\n        status: HttpStatus.BAD_REQUEST,\n        description:\n            'Invalid input, The response body may contain clues as to what went wrong',\n    })\n    @HttpCode(HttpStatus.ACCEPTED)\n    @Put(':id')\n    async update(\n        @Param('id') id: string,\n        @Body() entity: QueryDeepPartialEntity,\n        ...options: any[]\n    ): Promise {\n        return this.crudService.update(id, entity) // FIXME: https://github.com/typeorm/typeorm/issues/1544\n    }\n\n    @ApiOperation({ summary: 'Delete record' })\n    @ApiResponse({\n        status: HttpStatus.NO_CONTENT,\n        description: 'The record has been successfully deleted',\n    })\n    @ApiResponse({\n        status: HttpStatus.NOT_FOUND,\n        description: 'Record not found',\n    })\n    @HttpCode(HttpStatus.ACCEPTED)\n    @Delete(':id')\n    async delete(@Param('id') id: string, ...options: any[]): Promise {\n        return this.crudService.delete(id)\n    }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CrudService.html":{"url":"classes/CrudService.html","title":"class - CrudService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CrudService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/core/src/crud/crud.service.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            ICrudService\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                saltRounds\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                count\n                            \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                delete\n                            \n                            \n                                entityNotFound\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                findOneOrFail\n                            \n                            \n                                    Async\n                                getPasswordHash\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Protected\n                        constructor(repository: Repository)\n                    \n                \n                        \n                            \n                                Defined in libs/core/src/crud/crud.service.ts:24\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        repository\n                                                  \n                                                        \n                                                                    Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            saltRounds\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in libs/core/src/crud/crud.service.ts:24\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            count\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    count(filter?: FindManyOptions)\n                \n            \n\n\n            \n                \n                    Defined in libs/core/src/crud/crud.service.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                            FindManyOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            create\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    create(entity: DeepPartial, ...options: any[])\n                \n            \n\n\n            \n                \n                    Defined in libs/core/src/crud/crud.service.ts:65\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entity\n                                    \n                                            DeepPartial\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                            any[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            delete\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(criteria: string | number | FindConditions, ...options: any[])\n                \n            \n\n\n            \n                \n                    Defined in libs/core/src/crud/crud.service.ts:103\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    criteria\n                                    \n                                            string | number | FindConditions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                            any[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            entityNotFound\n                        \n                        \n                    \n                \n            \n            \n                \nentityNotFound()\n                \n            \n\n\n            \n                \n                    Defined in libs/core/src/crud/crud.service.ts:117\n                \n            \n\n\n            \n                \n                    e.g., findOneById(id).pipe(map(entity => entity.id), entityNotFound())\n\n\n                    \n                        Returns :     (stream$: any) => any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findAll\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll(filter?: FindManyOptions)\n                \n            \n\n\n            \n                \n                    Defined in libs/core/src/crud/crud.service.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                            FindManyOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findOne\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(id: string | number | FindOneOptions | FindConditions, options?: FindOneOptions)\n                \n            \n\n\n            \n                \n                    Defined in libs/core/src/crud/crud.service.ts:54\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                            string | number | FindOneOptions | FindConditions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                            FindOneOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findOneOrFail\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findOneOrFail(id: string | number | FindOneOptions | FindConditions, options?: FindOneOptions)\n                \n            \n\n\n            \n                \n                    Defined in libs/core/src/crud/crud.service.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                            string | number | FindOneOptions | FindConditions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                            FindOneOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getPasswordHash\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getPasswordHash(password: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/core/src/crud/crud.service.ts:76\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            update\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: string | number | FindConditions, partialEntity: QueryDeepPartialEntity, ...options: any[])\n                \n            \n\n\n            \n                \n                    Defined in libs/core/src/crud/crud.service.ts:80\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                            string | number | FindConditions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    partialEntity\n                                    \n                                            QueryDeepPartialEntity\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                            any[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { BadRequestException, NotFoundException } from '@nestjs/common'\n\nimport * as bcrypt from 'bcryptjs'\nimport { of, throwError } from 'rxjs'\nimport { mergeMap } from 'rxjs/operators'\nimport {\n    DeepPartial,\n    DeleteResult,\n    FindConditions,\n    FindManyOptions,\n    FindOneOptions,\n    Repository,\n    UpdateResult,\n} from 'typeorm'\nimport { QueryDeepPartialEntity } from 'typeorm/query-builder/QueryPartialEntity'\n\nimport { Base } from '../entities/base'\nimport { ICrudService } from './icrud.service'\nimport { IPagination } from './pagination'\nimport { ITryRequest } from './try-request'\n\nexport abstract class CrudService implements ICrudService {\n    saltRounds: number\n\n    protected constructor(protected readonly repository: Repository) {\n        this.saltRounds = 12\n    }\n\n    async count(filter?: FindManyOptions): Promise {\n        return this.repository.count(filter)\n    }\n\n    async findAll(filter?: FindManyOptions): Promise> {\n        const total = await this.repository.count(filter)\n        const items = await this.repository.find(filter)\n\n        return { items, total }\n    }\n\n    async findOneOrFail(\n        id: string | number | FindOneOptions | FindConditions,\n        options?: FindOneOptions,\n    ): Promise {\n        try {\n            const record = await this.repository.findOneOrFail(id as any, options)\n\n            return { success: true, record }\n        } catch (error) {\n            return { success: false, error } // eslint-disable-line @typescript-eslint/no-unsafe-assignment\n        }\n    }\n\n    async findOne(\n        id: string | number | FindOneOptions | FindConditions,\n        options?: FindOneOptions,\n    ): Promise {\n        const record = await this.repository.findOne(id as any, options)\n\n        if (!record) throw new NotFoundException(`The requested record was not found`)\n\n        return record\n    }\n\n    async create(entity: DeepPartial, ...options: any[]): Promise {\n        const obj = this.repository.create(entity)\n\n        // READMEWHY: https://github.com/Microsoft/TypeScript/issues/21592\n        try {\n            return await this.repository.save(obj as any) // eslint-disable-line @typescript-eslint/no-unsafe-return\n        } catch (err /*: WriteError */) {\n            throw new BadRequestException(err)\n        }\n    }\n\n    async getPasswordHash(password: string): Promise {\n        return bcrypt.hash(password, this.saltRounds)\n    }\n\n    async update(\n        id: string | number | FindConditions,\n        partialEntity: QueryDeepPartialEntity,\n        ...options: any[]\n    ): Promise {\n        try {\n            // method getPasswordHash is copied from AuthService\n            // try if can import somehow the service and use its method\n\n            // @ts-ignore\n            if (partialEntity.hash) {\n                // @ts-ignore\n                const hashPassword = await this.getPasswordHash(partialEntity.hash)\n                // @ts-ignore\n                partialEntity.hash = hashPassword // eslint-disable-line no-param-reassign\n            }\n\n            return await this.repository.update(id, partialEntity)\n        } catch (err /*: WriteError */) {\n            throw new BadRequestException(err)\n        }\n    }\n\n    async delete(\n        criteria: string | number | FindConditions,\n        ...options: any[]\n    ): Promise {\n        try {\n            return await this.repository.delete(criteria)\n        } catch (err) {\n            throw new NotFoundException(`The record was not found`, err)\n        }\n    }\n\n    /**\n     * e.g., findOneById(id).pipe(map(entity => entity.id), entityNotFound())\n     */\n    entityNotFound() {\n        return (stream$) =>\n            stream$.pipe(\n                mergeMap((signal) => {\n                    if (!signal) {\n                        return throwError(\n                            new NotFoundException(\n                                `The requested record was not found`,\n                            ),\n                        )\n                    }\n\n                    return of(signal)\n                }),\n            )\n    }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DBHelper.html":{"url":"injectables/DBHelper.html","title":"injectable - DBHelper","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  DBHelper\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/core/src/DBHelper.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                findBy\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                find\n                            \n                            \n                                    Async\n                                sync\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(repository: Repository)\n                    \n                \n                        \n                            \n                                Defined in libs/core/src/DBHelper.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        repository\n                                                  \n                                                        \n                                                                    Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            find\n                        \n                        \n                    \n                \n            \n            \n                \nfind(find: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/core/src/DBHelper.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    find\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     this\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            sync\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    sync(relation: string, new_values: any[])\n                \n            \n\n\n            \n                \n                    Defined in libs/core/src/DBHelper.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    relation\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    new_values\n                                    \n                                            any[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            findBy\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in libs/core/src/DBHelper.ts:9\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common'\n\nimport _ from 'lodash'\nimport { Repository } from 'typeorm'\n\n@Injectable()\nexport class DBHelper {\n    findBy: string\n\n    constructor(private repository: Repository) {}\n\n    find(find: string) {\n        this.findBy = find\n        return this\n    }\n\n    async sync(relation: string, new_values: any[]) {\n        const row: T = await this.repository.findOne(this.findBy, {\n            relations: [relation],\n        })\n        const values: any[] = row[relation]\n\n        const toRemove = _.difference(values, new_values)\n        const toAdd = _.difference(new_values, values)\n\n        row[relation] = values\n            .concat(toAdd)\n            .filter((value) => toRemove.indexOf(value) === -1)\n\n        return this.repository.save(row)\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FileStorageOption.html":{"url":"interfaces/FileStorageOption.html","title":"interface - FileStorageOption","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  FileStorageOption\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/interfaces/src/models/file-provider.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        dest\n                                \n                                \n                                            Optional\n                                        filename\n                                \n                                \n                                            Optional\n                                        prefix\n                                \n                                \n                                            Optional\n                                        provider\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        dest\n                                    \n                                \n                                \n                                    \n                                        dest:     string | CallableFunction\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | CallableFunction\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        filename\n                                    \n                                \n                                \n                                    \n                                        filename:     string | CallableFunction\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | CallableFunction\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        prefix\n                                    \n                                \n                                \n                                    \n                                        prefix:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        provider\n                                    \n                                \n                                \n                                    \n                                        provider:         FileStorageProviderEnum\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         FileStorageProviderEnum\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export enum FileStorageProviderEnum {\n    LOCAL = 'local',\n    S3 = 's3',\n}\nexport interface FileStorageOption {\n    dest: string | CallableFunction\n    provider?: FileStorageProviderEnum\n    prefix?: string\n    filename?: string | CallableFunction\n}\n\nexport interface FileSystem {\n    rootPath: string\n    baseUrl?: string\n}\n\nexport interface UploadedFile {\n    fieldname: string\n    key: string // path of the file in storage\n    originalname: string // orignal file name\n    size: number // files in bytes\n    encoding?: string\n    mimetype?: string\n    filename: string\n    url: string // file public url\n    path: string // Full path of the file\n}\n\nexport interface S3FileStorageProviderConfig {\n    aws_access_key_id?: string\n    aws_secret_access_key?: string\n    aws_default_region?: string\n    aws_bucket?: string\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FileSystem.html":{"url":"interfaces/FileSystem.html","title":"interface - FileSystem","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  FileSystem\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/interfaces/src/models/file-provider.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        baseUrl\n                                \n                                \n                                        rootPath\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        baseUrl\n                                    \n                                \n                                \n                                    \n                                        baseUrl:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        rootPath\n                                    \n                                \n                                \n                                    \n                                        rootPath:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export enum FileStorageProviderEnum {\n    LOCAL = 'local',\n    S3 = 's3',\n}\nexport interface FileStorageOption {\n    dest: string | CallableFunction\n    provider?: FileStorageProviderEnum\n    prefix?: string\n    filename?: string | CallableFunction\n}\n\nexport interface FileSystem {\n    rootPath: string\n    baseUrl?: string\n}\n\nexport interface UploadedFile {\n    fieldname: string\n    key: string // path of the file in storage\n    originalname: string // orignal file name\n    size: number // files in bytes\n    encoding?: string\n    mimetype?: string\n    filename: string\n    url: string // file public url\n    path: string // Full path of the file\n}\n\nexport interface S3FileStorageProviderConfig {\n    aws_access_key_id?: string\n    aws_secret_access_key?: string\n    aws_default_region?: string\n    aws_bucket?: string\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/HealthController.html":{"url":"controllers/HealthController.html","title":"controller - HealthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  HealthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/health/src/health.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                health\n            \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                check\n                            \n                            \n                                onApplicationShutdown\n                            \n                            \n                                onModuleInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            check\n                        \n                        \n                    \n                \n            \n            \n                \ncheck()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@HealthCheck()\n                \n            \n\n            \n                \n                    Defined in libs/health/src/health.controller.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onApplicationShutdown\n                        \n                        \n                    \n                \n            \n            \n                \nonApplicationShutdown(signal?: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/health/src/health.controller.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    signal\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onModuleInit\n                        \n                        \n                    \n                \n            \n            \n                \nonModuleInit()\n                \n            \n\n\n            \n                \n                    Defined in libs/health/src/health.controller.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, OnApplicationShutdown, OnModuleInit } from '@nestjs/common'\nimport { ApiTags } from '@nestjs/swagger'\nimport { DNSHealthIndicator, HealthCheck, HealthCheckService } from '@nestjs/terminus'\n\n@Controller('health')\n@ApiTags(HealthController.name) // eslint-disable-line no-use-before-define\nexport class HealthController implements OnModuleInit, OnApplicationShutdown {\n    constructor(\n        private health: HealthCheckService,\n        private dns: DNSHealthIndicator,\n    ) {}\n\n    @Get()\n    @HealthCheck()\n    check() {\n        return this.health.check([\n            () => this.dns.pingCheck('nestjs-docs', 'https://docs.nestjs.com'),\n        ])\n    }\n\n    /*\n     * When the application receives a termination signal it will call any registered\n     * onModuleDestroy(), beforeApplicationShutdown(), then onApplicationShutdown() methods\n     * (in the sequence described above) with the corresponding signal as the first parameter.\n     * If a registered function awaits an asynchronous call (returns a promise), Nest will not\n     * continue in the sequence until the promise is resolved or rejected.\n     */\n\n    onModuleInit(): void {\n        console.log(`ModuleInit - HealthController has been initialized.`)\n    }\n\n    onApplicationShutdown(signal?: string): void {\n        console.log(\n            `ApplicationShutdown - HealthController has been shutdown with ${signal} signal`,\n        )\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IAddress.html":{"url":"interfaces/IAddress.html","title":"interface - IAddress","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IAddress\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/interfaces/src/models/geo-location.model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        address\n                                \n                                \n                                        address2\n                                \n                                \n                                        city\n                                \n                                \n                                        country\n                                \n                                \n                                            Optional\n                                        postcode\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        address\n                                    \n                                \n                                \n                                    \n                                        address:     string | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        address2\n                                    \n                                \n                                \n                                    \n                                        address2:     string | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        city\n                                    \n                                \n                                \n                                    \n                                        city:     string | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        country\n                                    \n                                \n                                \n                                    \n                                        country:     string | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        postcode\n                                    \n                                \n                                \n                                    \n                                        postcode:     number | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number | null\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface ILocation {\n    type: 'Point'\n    coordinates: [number, number]\n}\n\nexport interface IAddress {\n    country: string | null\n    city: string | null\n    postcode?: number | null\n    address: string | null\n    address2: string | null\n}\n\nexport function getEmptyAddress(): IAddress {\n    return {\n        country: null,\n        city: null,\n        postcode: null,\n        address: null,\n        address2: null,\n    }\n}\n\nexport interface IGeoLocationCreateObject extends IAddress {\n    loc?: ILocation\n}\n\nexport interface IGeolocationUpdateObject extends IAddress {\n    loc?: ILocation\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IAuthLoginInput.html":{"url":"interfaces/IAuthLoginInput.html","title":"interface - IAuthLoginInput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IAuthLoginInput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/interfaces/src/models/user.model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        findObj\n                                \n                                \n                                        password\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        findObj\n                                    \n                                \n                                \n                                    \n                                        findObj:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                    \n                                \n                                \n                                    \n                                        password:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { IRole } from './role.model'\n\nexport interface IUser {\n    name?: string\n    firstName?: string\n    lastName?: string\n    email?: string\n    username?: string\n    role?: IRole\n    roleId?: string\n    hash?: string\n    imageUrl?: string\n    fullName?: string\n}\n\nexport interface IUserFindInput {\n    thirdPartyId?: string\n    firstName?: string\n    lastName?: string\n    email?: string\n    username?: string\n    role?: IRole\n    roleId?: string\n    hash?: string\n    imageUrl?: string\n}\n\nexport interface IUserRegistrationInput {\n    user: IUser\n    password?: string\n    originalUrl?: string\n    organizationId?: string\n    createdById?: string\n}\n\nexport interface IAuthLoginInput {\n    findObj: {\n        email: string\n    }\n    password: string\n}\nexport interface IAuthResponse {\n    user: IUser\n    token: string\n}\nexport interface IUserCreateInput {\n    firstName?: string\n    lastName?: string\n    email?: string\n    username?: string\n    role?: IRole\n    roleId?: string\n    hash?: string\n    imageUrl?: string\n}\n\nexport interface IUserUpdateInput {\n    firstName?: string\n    lastName?: string\n    email?: string\n    username?: string\n    role?: IRole\n    roleId?: string\n    hash?: string\n    imageUrl?: string\n}\n\nexport enum LanguagesEnum {\n    ENGLISH = 'en',\n}\n\nexport enum ProviderEnum {\n    GOOGLE = 'google',\n    FACEBOOK = 'facebook',\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IAuthResponse.html":{"url":"interfaces/IAuthResponse.html","title":"interface - IAuthResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IAuthResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/interfaces/src/models/user.model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        token\n                                \n                                \n                                        user\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        token\n                                    \n                                \n                                \n                                    \n                                        token:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        user\n                                    \n                                \n                                \n                                    \n                                        user:         IUser\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IUser\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { IRole } from './role.model'\n\nexport interface IUser {\n    name?: string\n    firstName?: string\n    lastName?: string\n    email?: string\n    username?: string\n    role?: IRole\n    roleId?: string\n    hash?: string\n    imageUrl?: string\n    fullName?: string\n}\n\nexport interface IUserFindInput {\n    thirdPartyId?: string\n    firstName?: string\n    lastName?: string\n    email?: string\n    username?: string\n    role?: IRole\n    roleId?: string\n    hash?: string\n    imageUrl?: string\n}\n\nexport interface IUserRegistrationInput {\n    user: IUser\n    password?: string\n    originalUrl?: string\n    organizationId?: string\n    createdById?: string\n}\n\nexport interface IAuthLoginInput {\n    findObj: {\n        email: string\n    }\n    password: string\n}\nexport interface IAuthResponse {\n    user: IUser\n    token: string\n}\nexport interface IUserCreateInput {\n    firstName?: string\n    lastName?: string\n    email?: string\n    username?: string\n    role?: IRole\n    roleId?: string\n    hash?: string\n    imageUrl?: string\n}\n\nexport interface IUserUpdateInput {\n    firstName?: string\n    lastName?: string\n    email?: string\n    username?: string\n    role?: IRole\n    roleId?: string\n    hash?: string\n    imageUrl?: string\n}\n\nexport enum LanguagesEnum {\n    ENGLISH = 'en',\n}\n\nexport enum ProviderEnum {\n    GOOGLE = 'google',\n    FACEBOOK = 'facebook',\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IBaseEntityModel.html":{"url":"interfaces/IBaseEntityModel.html","title":"interface - IBaseEntityModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IBaseEntityModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/interfaces/src/models/base-entity.model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        createdAt\n                                \n                                \n                                            Optional\n                                        deletedAt\n                                \n                                \n                                            Optional\n                                        id\n                                \n                                \n                                            Optional\n                                        updatedAt\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        createdAt\n                                    \n                                \n                                \n                                    \n                                        createdAt:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        deletedAt\n                                    \n                                \n                                \n                                    \n                                        deletedAt:     Date | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Date | null\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        updatedAt\n                                    \n                                \n                                \n                                    \n                                        updatedAt:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface IBaseEntityModel {\n    id?: number\n\n    readonly createdAt?: Date\n    readonly updatedAt?: Date\n    readonly deletedAt?: Date | null\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ICountry.html":{"url":"interfaces/ICountry.html","title":"interface - ICountry","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ICountry\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/interfaces/src/models/country.model.ts\n        \n\n\n            \n                Extends\n            \n            \n                        IBaseEntityModel\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        country\n                                \n                                \n                                        isoCode\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        country\n                                    \n                                \n                                \n                                    \n                                        country:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isoCode\n                                    \n                                \n                                \n                                    \n                                        isoCode:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { IBaseEntityModel } from './base-entity.model'\n\nexport interface ICountry extends IBaseEntityModel {\n    isoCode: string\n    country: string\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ICrudService.html":{"url":"interfaces/ICrudService.html","title":"interface - ICrudService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ICrudService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/core/src/crud/icrud.service.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    count\n                                \n                                \n                                    create\n                                \n                                \n                                    delete\n                                \n                                \n                                    findAll\n                                \n                                \n                                    findOne\n                                \n                                \n                                    update\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            count\n                        \n                        \n                    \n                \n            \n            \n                \ncount(filter?: FindManyOptions)\n                \n            \n\n\n            \n                \n                    Defined in libs/core/src/crud/icrud.service.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                            FindManyOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            create\n                        \n                        \n                    \n                \n            \n            \n                \ncreate(entity: DeepPartial, ...options: any[])\n                \n            \n\n\n            \n                \n                    Defined in libs/core/src/crud/icrud.service.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entity\n                                    \n                                            DeepPartial\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                            any[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            delete\n                        \n                        \n                    \n                \n            \n            \n                \ndelete(id: any, ...options: any[])\n                \n            \n\n\n            \n                \n                    Defined in libs/core/src/crud/icrud.service.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                            any[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            findAll\n                        \n                        \n                    \n                \n            \n            \n                \nfindAll(filter?: FindManyOptions)\n                \n            \n\n\n            \n                \n                    Defined in libs/core/src/crud/icrud.service.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                            FindManyOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            findOne\n                        \n                        \n                    \n                \n            \n            \n                \nfindOne(id: string | number | FindOneOptions | FindConditions, options?: FindOneOptions)\n                \n            \n\n\n            \n                \n                    Defined in libs/core/src/crud/icrud.service.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                            string | number | FindOneOptions | FindConditions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                            FindOneOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            update\n                        \n                        \n                    \n                \n            \n            \n                \nupdate(id: any, entity: QueryDeepPartialEntity, ...options: any[])\n                \n            \n\n\n            \n                \n                    Defined in libs/core/src/crud/icrud.service.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    entity\n                                    \n                                            QueryDeepPartialEntity\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                            any[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { IPagination } from '@app/core'\n\nimport {\n    DeepPartial,\n    DeleteResult,\n    FindConditions,\n    FindManyOptions,\n    FindOneOptions,\n    UpdateResult,\n} from 'typeorm'\nimport { QueryDeepPartialEntity } from 'typeorm/query-builder/QueryPartialEntity'\n\nexport interface ICrudService {\n    count(filter?: FindManyOptions): Promise\n\n    findAll(filter?: FindManyOptions): Promise>\n\n    findOne(\n        id: string | number | FindOneOptions | FindConditions,\n        options?: FindOneOptions,\n    ): Promise\n\n    create(entity: DeepPartial, ...options: any[]): Promise\n\n    update(\n        id: any,\n        entity: QueryDeepPartialEntity,\n        ...options: any[]\n    ): Promise\n\n    delete(id: any, ...options: any[]): Promise\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ICurrency.html":{"url":"interfaces/ICurrency.html","title":"interface - ICurrency","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ICurrency\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/interfaces/src/models/currency.model.ts\n        \n\n\n            \n                Extends\n            \n            \n                        IBaseEntityModel\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        currency\n                                \n                                \n                                        isoCode\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        currency\n                                    \n                                \n                                \n                                    \n                                        currency:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isoCode\n                                    \n                                \n                                \n                                    \n                                        isoCode:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { IBaseEntityModel } from './base-entity.model'\n\nexport interface ICurrency extends IBaseEntityModel {\n    isoCode: string\n    currency: string\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IGeoLocationCreateObject.html":{"url":"interfaces/IGeoLocationCreateObject.html","title":"interface - IGeoLocationCreateObject","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IGeoLocationCreateObject\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/interfaces/src/models/geo-location.model.ts\n        \n\n\n            \n                Extends\n            \n            \n                        IAddress\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        loc\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        loc\n                                    \n                                \n                                \n                                    \n                                        loc:         ILocation\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ILocation\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface ILocation {\n    type: 'Point'\n    coordinates: [number, number]\n}\n\nexport interface IAddress {\n    country: string | null\n    city: string | null\n    postcode?: number | null\n    address: string | null\n    address2: string | null\n}\n\nexport function getEmptyAddress(): IAddress {\n    return {\n        country: null,\n        city: null,\n        postcode: null,\n        address: null,\n        address2: null,\n    }\n}\n\nexport interface IGeoLocationCreateObject extends IAddress {\n    loc?: ILocation\n}\n\nexport interface IGeolocationUpdateObject extends IAddress {\n    loc?: ILocation\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IGeolocationUpdateObject.html":{"url":"interfaces/IGeolocationUpdateObject.html","title":"interface - IGeolocationUpdateObject","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IGeolocationUpdateObject\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/interfaces/src/models/geo-location.model.ts\n        \n\n\n            \n                Extends\n            \n            \n                        IAddress\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        loc\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        loc\n                                    \n                                \n                                \n                                    \n                                        loc:         ILocation\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ILocation\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface ILocation {\n    type: 'Point'\n    coordinates: [number, number]\n}\n\nexport interface IAddress {\n    country: string | null\n    city: string | null\n    postcode?: number | null\n    address: string | null\n    address2: string | null\n}\n\nexport function getEmptyAddress(): IAddress {\n    return {\n        country: null,\n        city: null,\n        postcode: null,\n        address: null,\n        address2: null,\n    }\n}\n\nexport interface IGeoLocationCreateObject extends IAddress {\n    loc?: ILocation\n}\n\nexport interface IGeolocationUpdateObject extends IAddress {\n    loc?: ILocation\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ILanguage.html":{"url":"interfaces/ILanguage.html","title":"interface - ILanguage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ILanguage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/interfaces/src/models/language.model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        code\n                                \n                                \n                                            Optional\n                                        color\n                                \n                                \n                                            Optional\n                                        description\n                                \n                                \n                                            Optional\n                                        is_system\n                                \n                                \n                                            Optional\n                                        isSelected\n                                \n                                \n                                            Optional\n                                        name\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        code\n                                    \n                                \n                                \n                                    \n                                        code:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        color\n                                    \n                                \n                                \n                                    \n                                        color:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        is_system\n                                    \n                                \n                                \n                                    \n                                        is_system:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isSelected\n                                    \n                                \n                                \n                                    \n                                        isSelected:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface ILanguage {\n    name?: string\n    code?: string\n    is_system?: boolean\n    description?: string\n    color?: string\n    isSelected?: boolean\n}\n\nexport interface ILanguageName {\n    name?: string\n}\n\nexport interface ILanguageFindInput {\n    name?: string\n    code?: string\n    is_system?: boolean\n    description?: string\n    color?: string\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ILanguageFindInput.html":{"url":"interfaces/ILanguageFindInput.html","title":"interface - ILanguageFindInput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ILanguageFindInput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/interfaces/src/models/language.model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        code\n                                \n                                \n                                            Optional\n                                        color\n                                \n                                \n                                            Optional\n                                        description\n                                \n                                \n                                            Optional\n                                        is_system\n                                \n                                \n                                            Optional\n                                        name\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        code\n                                    \n                                \n                                \n                                    \n                                        code:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        color\n                                    \n                                \n                                \n                                    \n                                        color:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        is_system\n                                    \n                                \n                                \n                                    \n                                        is_system:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface ILanguage {\n    name?: string\n    code?: string\n    is_system?: boolean\n    description?: string\n    color?: string\n    isSelected?: boolean\n}\n\nexport interface ILanguageName {\n    name?: string\n}\n\nexport interface ILanguageFindInput {\n    name?: string\n    code?: string\n    is_system?: boolean\n    description?: string\n    color?: string\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ILanguageName.html":{"url":"interfaces/ILanguageName.html","title":"interface - ILanguageName","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ILanguageName\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/interfaces/src/models/language.model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        name\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface ILanguage {\n    name?: string\n    code?: string\n    is_system?: boolean\n    description?: string\n    color?: string\n    isSelected?: boolean\n}\n\nexport interface ILanguageName {\n    name?: string\n}\n\nexport interface ILanguageFindInput {\n    name?: string\n    code?: string\n    is_system?: boolean\n    description?: string\n    color?: string\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IListQueryInput.html":{"url":"interfaces/IListQueryInput.html","title":"interface - IListQueryInput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IListQueryInput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/interfaces/src/models/core.model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        findInput\n                                \n                                \n                                            Optional\n                                        relations\n                                \n                                \n                                            Optional\n                                        where\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        findInput\n                                    \n                                \n                                \n                                    \n                                        findInput:     T | any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     T | any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        relations\n                                    \n                                \n                                \n                                    \n                                        relations:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Model entity defined relations\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        where\n                                    \n                                \n                                \n                                    \n                                        where:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface IPaginationInput {\n    limit?: number\n    page?: number\n}\n\nexport interface IPagination {\n    /**\n     * Items included in the current listing\n     */\n    readonly items: T[]\n\n    /**\n     * Total number of available items\n     */\n    readonly total: number\n}\n\n/*\n * Common query parameter\n */\nexport interface IListQueryInput {\n    /**\n     * Model entity defined relations\n     */\n    readonly relations?: string[]\n    readonly findInput?: T | any\n    readonly where?: any\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ILocation.html":{"url":"interfaces/ILocation.html","title":"interface - ILocation","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ILocation\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/interfaces/src/models/geo-location.model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        coordinates\n                                \n                                \n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        coordinates\n                                    \n                                \n                                \n                                    \n                                        coordinates:     [number, number]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     [number, number]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface ILocation {\n    type: 'Point'\n    coordinates: [number, number]\n}\n\nexport interface IAddress {\n    country: string | null\n    city: string | null\n    postcode?: number | null\n    address: string | null\n    address2: string | null\n}\n\nexport function getEmptyAddress(): IAddress {\n    return {\n        country: null,\n        city: null,\n        postcode: null,\n        address: null,\n        address2: null,\n    }\n}\n\nexport interface IGeoLocationCreateObject extends IAddress {\n    loc?: ILocation\n}\n\nexport interface IGeolocationUpdateObject extends IAddress {\n    loc?: ILocation\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IPagination.html":{"url":"interfaces/IPagination.html","title":"interface - IPagination","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IPagination\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/core/src/crud/pagination.ts\n        \n\n            \n                Description\n            \n            \n                Generic pagination interface\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        items\n                                \n                                \n                                        total\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        items\n                                    \n                                \n                                \n                                    \n                                        items:     T[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     T[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Items included in the current listing\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        total\n                                    \n                                \n                                \n                                    \n                                        total:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Total number of available items\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface IPagination {\n    /**\n     * Items included in the current listing\n     */\n    readonly items: T[]\n\n    /**\n     * Total number of available items\n     */\n    readonly total: number\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IPagination-1.html":{"url":"interfaces/IPagination-1.html","title":"interface - IPagination-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IPagination\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/interfaces/src/models/core.model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        items\n                                \n                                \n                                        total\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        items\n                                    \n                                \n                                \n                                    \n                                        items:     T[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     T[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Items included in the current listing\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        total\n                                    \n                                \n                                \n                                    \n                                        total:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Total number of available items\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface IPaginationInput {\n    limit?: number\n    page?: number\n}\n\nexport interface IPagination {\n    /**\n     * Items included in the current listing\n     */\n    readonly items: T[]\n\n    /**\n     * Total number of available items\n     */\n    readonly total: number\n}\n\n/*\n * Common query parameter\n */\nexport interface IListQueryInput {\n    /**\n     * Model entity defined relations\n     */\n    readonly relations?: string[]\n    readonly findInput?: T | any\n    readonly where?: any\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IPaginationInput.html":{"url":"interfaces/IPaginationInput.html","title":"interface - IPaginationInput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IPaginationInput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/interfaces/src/models/core.model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        limit\n                                \n                                \n                                            Optional\n                                        page\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        limit\n                                    \n                                \n                                \n                                    \n                                        limit:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        page\n                                    \n                                \n                                \n                                    \n                                        page:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface IPaginationInput {\n    limit?: number\n    page?: number\n}\n\nexport interface IPagination {\n    /**\n     * Items included in the current listing\n     */\n    readonly items: T[]\n\n    /**\n     * Total number of available items\n     */\n    readonly total: number\n}\n\n/*\n * Common query parameter\n */\nexport interface IListQueryInput {\n    /**\n     * Model entity defined relations\n     */\n    readonly relations?: string[]\n    readonly findInput?: T | any\n    readonly where?: any\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IRole.html":{"url":"interfaces/IRole.html","title":"interface - IRole","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IRole\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/interfaces/src/models/role.model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        name\n                                \n                                \n                                        rolePermissions\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        rolePermissions\n                                    \n                                \n                                \n                                    \n                                        rolePermissions:     IRolePermission[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     IRolePermission[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { IRolePermission } from './role-permission.model'\n\nexport interface IRole {\n    name: string\n    rolePermissions: IRolePermission[]\n}\n\nexport enum RolesEnum {\n    SUPER_ADMIN = 'SUPER_ADMIN',\n    ADMIN = 'ADMIN',\n    DATA_ENTRY = 'DATA_ENTRY',\n    EMPLOYEE = 'EMPLOYEE',\n    CANDIDATE = 'CANDIDATE',\n    MANAGER = 'MANAGER',\n    VIEWER = 'VIEWER',\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IRolePermission.html":{"url":"interfaces/IRolePermission.html","title":"interface - IRolePermission","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IRolePermission\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/interfaces/src/models/role-permission.model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        enabled\n                                \n                                \n                                        permission\n                                \n                                \n                                        role\n                                \n                                \n                                        roleId\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        enabled\n                                    \n                                \n                                \n                                    \n                                        enabled:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        permission\n                                    \n                                \n                                \n                                    \n                                        permission:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        role\n                                    \n                                \n                                \n                                    \n                                        role:         IRole\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IRole\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        roleId\n                                    \n                                \n                                \n                                    \n                                        roleId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { IRole } from './role.model'\n\nexport interface IRolePermission {\n    roleId: string\n    permission: string\n    role: IRole\n    enabled: boolean\n}\n\nexport interface IRolePermissionCreateInput {\n    roleId: string\n    permission: string\n    enabled: boolean\n}\n\nexport interface IRolePermissionUpdateInput {\n    enabled: boolean\n}\n\nexport enum PermissionsEnum {\n    ADMIN_DASHBOARD_VIEW = 'ADMIN_DASHBOARD_VIEW',\n    ORG_PAYMENT_VIEW = 'ORG_PAYMENT_VIEW',\n    ORG_PAYMENT_ADD_EDIT = 'ORG_PAYMENT_ADD_EDIT',\n    ORG_INCOMES_VIEW = 'ORG_INCOMES_VIEW',\n    ORG_INCOMES_EDIT = 'ORG_INCOMES_EDIT',\n    ORG_EXPENSES_VIEW = 'ORG_EXPENSES_VIEW',\n    ORG_EXPENSES_EDIT = 'ORG_EXPENSES_EDIT',\n    ORG_PROPOSALS_VIEW = 'ORG_PROPOSALS_VIEW',\n    ORG_PROPOSALS_EDIT = 'ORG_PROPOSALS_EDIT',\n    ORG_TIME_OFF_VIEW = 'ORG_TIME_OFF_VIEW',\n    ORG_EMPLOYEES_VIEW = 'ORG_EMPLOYEES_VIEW',\n    ORG_EMPLOYEES_EDIT = 'ORG_EMPLOYEES_EDIT',\n    ORG_CANDIDATES_VIEW = 'ORG_CANDIDATES_VIEW',\n    ORG_CANDIDATES_EDIT = 'ORG_CANDIDATES_EDIT',\n    ORG_CANDIDATES_INTERVIEW_EDIT = 'ORG_CANDIDATES_INTERVIEW_EDIT',\n    ORG_CANDIDATES_DOCUMENTS_VIEW = 'ORG_CANDIDATES_DOCUMENTS_VIEW',\n    ORG_CANDIDATES_TASK_EDIT = 'ORG_CANDIDATES_TASK_EDIT',\n    ORG_CANDIDATES_FEEDBACK_EDIT = 'ORG_CANDIDATES_FEEDBACK_EDIT',\n    ORG_INVENTORY_PRODUCT_EDIT = 'ORG_INVENTORY_PRODUCT_EDIT',\n    ORG_TAGS_EDIT = 'ORG_TAGS_EDIT',\n    ORG_USERS_VIEW = 'ORG_USERS_VIEW',\n    ORG_USERS_EDIT = 'ORG_USERS_EDIT',\n    ORG_INVITE_VIEW = 'ORG_INVITE_VIEW',\n    ORG_INVITE_EDIT = 'ORG_INVITE_EDIT',\n    ALL_ORG_VIEW = 'ALL_ORG_VIEW',\n    ALL_ORG_EDIT = 'ALL_ORG_EDIT',\n    POLICY_VIEW = 'POLICY_VIEW',\n    POLICY_EDIT = 'POLICY_EDIT',\n    TIME_OFF_EDIT = 'TIME_OFF_EDIT',\n    REQUEST_APPROVAL_VIEW = 'REQUEST_APPROVAL_VIEW',\n    REQUEST_APPROVAL_EDIT = 'REQUEST_APPROVAL_EDIT',\n    APPROVAL_POLICY_VIEW = 'APPROVALS_POLICY_VIEW',\n    APPROVAL_POLICY_EDIT = 'APPROVALS_POLICY_EDIT',\n    CHANGE_SELECTED_EMPLOYEE = 'CHANGE_SELECTED_EMPLOYEE',\n    CHANGE_SELECTED_CANDIDATE = 'CHANGE_SELECTED_CANDIDATE',\n    CHANGE_SELECTED_ORGANIZATION = 'CHANGE_SELECTED_ORGANIZATION',\n    CHANGE_ROLES_PERMISSIONS = 'CHANGE_ROLES_PERMISSIONS',\n    ACCESS_PRIVATE_PROJECTS = 'ACCESS_PRIVATE_PROJECTS',\n    TIMESHEET_EDIT_TIME = 'TIMESHEET_EDIT_TIME',\n    SUPER_ADMIN_EDIT = 'SUPER_ADMIN_EDIT',\n    PUBLIC_PAGE_EDIT = 'PUBLIC_PAGE_EDIT',\n    INVOICES_VIEW = 'INVOICES_VIEW',\n    INVOICES_EDIT = 'INVOICES_EDIT',\n    ORG_CANDIDATES_INTERVIEWERS_EDIT = 'ORG_CANDIDATES_INTERVIEWERS_EDIT',\n    PROPOSALS_EDIT = 'PROPOSALS_EDIT',\n    VIEW_ALL_EMAILS = 'VIEW_ALL_EMAILS',\n    ORG_HELP_CENTER_EDIT = 'ORG_HELP_CENTER_EDIT',\n    EDIT_SALES_PIPELINES = 'EDIT_SALES_PIPELINES',\n    CAN_APPROVE_TIMESHEET = 'CAN_APPROVE_TIMESHEET',\n    ORG_SPRINT_VIEW = 'ORG_SPRINT_VIEW',\n    ORG_SPRINT_EDIT = 'ORG_SPRINT_EDIT',\n    ORG_PROJECT_EDIT = 'ORG_PROJECT_EDIT',\n    ORG_CONTACT_EDIT = 'ORG_CONTACT_EDIT',\n    ORG_TEAM_EDIT = 'ORG_TEAM_EDIT',\n    ORG_CONTRACT_EDIT = 'ORG_CONTRACT_EDIT',\n    EVENT_TYPES_VIEW = 'EVENT_TYPES_VIEW',\n    TIME_TRACKER = 'TIME_TRACKER',\n    TENANT_ADD_EXISTING_USER = 'TENANT_ADD_EXISTING_USER',\n}\n\nexport const PermissionGroups = {\n    // Permissions which can be given to any role\n    GENERAL: [\n        PermissionsEnum.ADMIN_DASHBOARD_VIEW,\n        PermissionsEnum.ORG_PAYMENT_VIEW,\n        PermissionsEnum.ORG_PAYMENT_ADD_EDIT,\n        PermissionsEnum.ORG_EXPENSES_VIEW,\n        PermissionsEnum.ORG_EXPENSES_EDIT,\n        PermissionsEnum.ORG_INCOMES_EDIT,\n        PermissionsEnum.ORG_INCOMES_VIEW,\n        PermissionsEnum.ORG_PROPOSALS_EDIT,\n        PermissionsEnum.ORG_PROPOSALS_VIEW,\n        PermissionsEnum.ORG_TIME_OFF_VIEW,\n        PermissionsEnum.ORG_INVITE_VIEW,\n        PermissionsEnum.ORG_INVITE_EDIT,\n        PermissionsEnum.POLICY_VIEW,\n        PermissionsEnum.POLICY_EDIT,\n        PermissionsEnum.TIME_OFF_EDIT,\n        PermissionsEnum.APPROVAL_POLICY_EDIT,\n        PermissionsEnum.APPROVAL_POLICY_VIEW,\n        PermissionsEnum.REQUEST_APPROVAL_EDIT,\n        PermissionsEnum.REQUEST_APPROVAL_VIEW,\n        PermissionsEnum.ACCESS_PRIVATE_PROJECTS,\n        PermissionsEnum.TIMESHEET_EDIT_TIME,\n        PermissionsEnum.INVOICES_VIEW,\n        PermissionsEnum.INVOICES_EDIT,\n        PermissionsEnum.ORG_CANDIDATES_DOCUMENTS_VIEW,\n        PermissionsEnum.ORG_CANDIDATES_TASK_EDIT,\n        PermissionsEnum.ORG_CANDIDATES_INTERVIEW_EDIT,\n        PermissionsEnum.ORG_CANDIDATES_INTERVIEWERS_EDIT,\n        PermissionsEnum.ORG_CANDIDATES_FEEDBACK_EDIT,\n        PermissionsEnum.ORG_INVENTORY_PRODUCT_EDIT,\n        PermissionsEnum.ORG_TAGS_EDIT,\n        PermissionsEnum.VIEW_ALL_EMAILS,\n        PermissionsEnum.ORG_HELP_CENTER_EDIT,\n        PermissionsEnum.EDIT_SALES_PIPELINES,\n        PermissionsEnum.CAN_APPROVE_TIMESHEET,\n        PermissionsEnum.ORG_SPRINT_EDIT,\n        PermissionsEnum.ORG_SPRINT_VIEW,\n        PermissionsEnum.ORG_PROJECT_EDIT,\n        PermissionsEnum.ORG_CONTACT_EDIT,\n        PermissionsEnum.ORG_TEAM_EDIT,\n        PermissionsEnum.ORG_CONTRACT_EDIT,\n        PermissionsEnum.EVENT_TYPES_VIEW,\n        PermissionsEnum.TIME_TRACKER,\n    ],\n\n    // Readonly permissions, are only enabled for admin role\n    ADMINISTRATION: [\n        PermissionsEnum.ORG_EMPLOYEES_VIEW,\n        PermissionsEnum.ORG_EMPLOYEES_EDIT,\n        PermissionsEnum.ORG_CANDIDATES_VIEW,\n        PermissionsEnum.ORG_CANDIDATES_EDIT,\n        PermissionsEnum.ORG_USERS_VIEW,\n        PermissionsEnum.ORG_USERS_EDIT,\n        PermissionsEnum.ALL_ORG_VIEW,\n        PermissionsEnum.ALL_ORG_EDIT,\n        PermissionsEnum.CHANGE_SELECTED_EMPLOYEE,\n        PermissionsEnum.CHANGE_SELECTED_CANDIDATE,\n        PermissionsEnum.CHANGE_SELECTED_ORGANIZATION,\n        PermissionsEnum.CHANGE_ROLES_PERMISSIONS,\n        PermissionsEnum.SUPER_ADMIN_EDIT,\n        PermissionsEnum.PUBLIC_PAGE_EDIT,\n        PermissionsEnum.ORG_INVENTORY_PRODUCT_EDIT,\n        PermissionsEnum.APPROVAL_POLICY_EDIT,\n        PermissionsEnum.APPROVAL_POLICY_VIEW,\n        PermissionsEnum.TIME_OFF_EDIT,\n        PermissionsEnum.REQUEST_APPROVAL_EDIT,\n        PermissionsEnum.REQUEST_APPROVAL_VIEW,\n        PermissionsEnum.TENANT_ADD_EXISTING_USER,\n    ],\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IRolePermissionCreateInput.html":{"url":"interfaces/IRolePermissionCreateInput.html","title":"interface - IRolePermissionCreateInput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IRolePermissionCreateInput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/interfaces/src/models/role-permission.model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        enabled\n                                \n                                \n                                        permission\n                                \n                                \n                                        roleId\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        enabled\n                                    \n                                \n                                \n                                    \n                                        enabled:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        permission\n                                    \n                                \n                                \n                                    \n                                        permission:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        roleId\n                                    \n                                \n                                \n                                    \n                                        roleId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { IRole } from './role.model'\n\nexport interface IRolePermission {\n    roleId: string\n    permission: string\n    role: IRole\n    enabled: boolean\n}\n\nexport interface IRolePermissionCreateInput {\n    roleId: string\n    permission: string\n    enabled: boolean\n}\n\nexport interface IRolePermissionUpdateInput {\n    enabled: boolean\n}\n\nexport enum PermissionsEnum {\n    ADMIN_DASHBOARD_VIEW = 'ADMIN_DASHBOARD_VIEW',\n    ORG_PAYMENT_VIEW = 'ORG_PAYMENT_VIEW',\n    ORG_PAYMENT_ADD_EDIT = 'ORG_PAYMENT_ADD_EDIT',\n    ORG_INCOMES_VIEW = 'ORG_INCOMES_VIEW',\n    ORG_INCOMES_EDIT = 'ORG_INCOMES_EDIT',\n    ORG_EXPENSES_VIEW = 'ORG_EXPENSES_VIEW',\n    ORG_EXPENSES_EDIT = 'ORG_EXPENSES_EDIT',\n    ORG_PROPOSALS_VIEW = 'ORG_PROPOSALS_VIEW',\n    ORG_PROPOSALS_EDIT = 'ORG_PROPOSALS_EDIT',\n    ORG_TIME_OFF_VIEW = 'ORG_TIME_OFF_VIEW',\n    ORG_EMPLOYEES_VIEW = 'ORG_EMPLOYEES_VIEW',\n    ORG_EMPLOYEES_EDIT = 'ORG_EMPLOYEES_EDIT',\n    ORG_CANDIDATES_VIEW = 'ORG_CANDIDATES_VIEW',\n    ORG_CANDIDATES_EDIT = 'ORG_CANDIDATES_EDIT',\n    ORG_CANDIDATES_INTERVIEW_EDIT = 'ORG_CANDIDATES_INTERVIEW_EDIT',\n    ORG_CANDIDATES_DOCUMENTS_VIEW = 'ORG_CANDIDATES_DOCUMENTS_VIEW',\n    ORG_CANDIDATES_TASK_EDIT = 'ORG_CANDIDATES_TASK_EDIT',\n    ORG_CANDIDATES_FEEDBACK_EDIT = 'ORG_CANDIDATES_FEEDBACK_EDIT',\n    ORG_INVENTORY_PRODUCT_EDIT = 'ORG_INVENTORY_PRODUCT_EDIT',\n    ORG_TAGS_EDIT = 'ORG_TAGS_EDIT',\n    ORG_USERS_VIEW = 'ORG_USERS_VIEW',\n    ORG_USERS_EDIT = 'ORG_USERS_EDIT',\n    ORG_INVITE_VIEW = 'ORG_INVITE_VIEW',\n    ORG_INVITE_EDIT = 'ORG_INVITE_EDIT',\n    ALL_ORG_VIEW = 'ALL_ORG_VIEW',\n    ALL_ORG_EDIT = 'ALL_ORG_EDIT',\n    POLICY_VIEW = 'POLICY_VIEW',\n    POLICY_EDIT = 'POLICY_EDIT',\n    TIME_OFF_EDIT = 'TIME_OFF_EDIT',\n    REQUEST_APPROVAL_VIEW = 'REQUEST_APPROVAL_VIEW',\n    REQUEST_APPROVAL_EDIT = 'REQUEST_APPROVAL_EDIT',\n    APPROVAL_POLICY_VIEW = 'APPROVALS_POLICY_VIEW',\n    APPROVAL_POLICY_EDIT = 'APPROVALS_POLICY_EDIT',\n    CHANGE_SELECTED_EMPLOYEE = 'CHANGE_SELECTED_EMPLOYEE',\n    CHANGE_SELECTED_CANDIDATE = 'CHANGE_SELECTED_CANDIDATE',\n    CHANGE_SELECTED_ORGANIZATION = 'CHANGE_SELECTED_ORGANIZATION',\n    CHANGE_ROLES_PERMISSIONS = 'CHANGE_ROLES_PERMISSIONS',\n    ACCESS_PRIVATE_PROJECTS = 'ACCESS_PRIVATE_PROJECTS',\n    TIMESHEET_EDIT_TIME = 'TIMESHEET_EDIT_TIME',\n    SUPER_ADMIN_EDIT = 'SUPER_ADMIN_EDIT',\n    PUBLIC_PAGE_EDIT = 'PUBLIC_PAGE_EDIT',\n    INVOICES_VIEW = 'INVOICES_VIEW',\n    INVOICES_EDIT = 'INVOICES_EDIT',\n    ORG_CANDIDATES_INTERVIEWERS_EDIT = 'ORG_CANDIDATES_INTERVIEWERS_EDIT',\n    PROPOSALS_EDIT = 'PROPOSALS_EDIT',\n    VIEW_ALL_EMAILS = 'VIEW_ALL_EMAILS',\n    ORG_HELP_CENTER_EDIT = 'ORG_HELP_CENTER_EDIT',\n    EDIT_SALES_PIPELINES = 'EDIT_SALES_PIPELINES',\n    CAN_APPROVE_TIMESHEET = 'CAN_APPROVE_TIMESHEET',\n    ORG_SPRINT_VIEW = 'ORG_SPRINT_VIEW',\n    ORG_SPRINT_EDIT = 'ORG_SPRINT_EDIT',\n    ORG_PROJECT_EDIT = 'ORG_PROJECT_EDIT',\n    ORG_CONTACT_EDIT = 'ORG_CONTACT_EDIT',\n    ORG_TEAM_EDIT = 'ORG_TEAM_EDIT',\n    ORG_CONTRACT_EDIT = 'ORG_CONTRACT_EDIT',\n    EVENT_TYPES_VIEW = 'EVENT_TYPES_VIEW',\n    TIME_TRACKER = 'TIME_TRACKER',\n    TENANT_ADD_EXISTING_USER = 'TENANT_ADD_EXISTING_USER',\n}\n\nexport const PermissionGroups = {\n    // Permissions which can be given to any role\n    GENERAL: [\n        PermissionsEnum.ADMIN_DASHBOARD_VIEW,\n        PermissionsEnum.ORG_PAYMENT_VIEW,\n        PermissionsEnum.ORG_PAYMENT_ADD_EDIT,\n        PermissionsEnum.ORG_EXPENSES_VIEW,\n        PermissionsEnum.ORG_EXPENSES_EDIT,\n        PermissionsEnum.ORG_INCOMES_EDIT,\n        PermissionsEnum.ORG_INCOMES_VIEW,\n        PermissionsEnum.ORG_PROPOSALS_EDIT,\n        PermissionsEnum.ORG_PROPOSALS_VIEW,\n        PermissionsEnum.ORG_TIME_OFF_VIEW,\n        PermissionsEnum.ORG_INVITE_VIEW,\n        PermissionsEnum.ORG_INVITE_EDIT,\n        PermissionsEnum.POLICY_VIEW,\n        PermissionsEnum.POLICY_EDIT,\n        PermissionsEnum.TIME_OFF_EDIT,\n        PermissionsEnum.APPROVAL_POLICY_EDIT,\n        PermissionsEnum.APPROVAL_POLICY_VIEW,\n        PermissionsEnum.REQUEST_APPROVAL_EDIT,\n        PermissionsEnum.REQUEST_APPROVAL_VIEW,\n        PermissionsEnum.ACCESS_PRIVATE_PROJECTS,\n        PermissionsEnum.TIMESHEET_EDIT_TIME,\n        PermissionsEnum.INVOICES_VIEW,\n        PermissionsEnum.INVOICES_EDIT,\n        PermissionsEnum.ORG_CANDIDATES_DOCUMENTS_VIEW,\n        PermissionsEnum.ORG_CANDIDATES_TASK_EDIT,\n        PermissionsEnum.ORG_CANDIDATES_INTERVIEW_EDIT,\n        PermissionsEnum.ORG_CANDIDATES_INTERVIEWERS_EDIT,\n        PermissionsEnum.ORG_CANDIDATES_FEEDBACK_EDIT,\n        PermissionsEnum.ORG_INVENTORY_PRODUCT_EDIT,\n        PermissionsEnum.ORG_TAGS_EDIT,\n        PermissionsEnum.VIEW_ALL_EMAILS,\n        PermissionsEnum.ORG_HELP_CENTER_EDIT,\n        PermissionsEnum.EDIT_SALES_PIPELINES,\n        PermissionsEnum.CAN_APPROVE_TIMESHEET,\n        PermissionsEnum.ORG_SPRINT_EDIT,\n        PermissionsEnum.ORG_SPRINT_VIEW,\n        PermissionsEnum.ORG_PROJECT_EDIT,\n        PermissionsEnum.ORG_CONTACT_EDIT,\n        PermissionsEnum.ORG_TEAM_EDIT,\n        PermissionsEnum.ORG_CONTRACT_EDIT,\n        PermissionsEnum.EVENT_TYPES_VIEW,\n        PermissionsEnum.TIME_TRACKER,\n    ],\n\n    // Readonly permissions, are only enabled for admin role\n    ADMINISTRATION: [\n        PermissionsEnum.ORG_EMPLOYEES_VIEW,\n        PermissionsEnum.ORG_EMPLOYEES_EDIT,\n        PermissionsEnum.ORG_CANDIDATES_VIEW,\n        PermissionsEnum.ORG_CANDIDATES_EDIT,\n        PermissionsEnum.ORG_USERS_VIEW,\n        PermissionsEnum.ORG_USERS_EDIT,\n        PermissionsEnum.ALL_ORG_VIEW,\n        PermissionsEnum.ALL_ORG_EDIT,\n        PermissionsEnum.CHANGE_SELECTED_EMPLOYEE,\n        PermissionsEnum.CHANGE_SELECTED_CANDIDATE,\n        PermissionsEnum.CHANGE_SELECTED_ORGANIZATION,\n        PermissionsEnum.CHANGE_ROLES_PERMISSIONS,\n        PermissionsEnum.SUPER_ADMIN_EDIT,\n        PermissionsEnum.PUBLIC_PAGE_EDIT,\n        PermissionsEnum.ORG_INVENTORY_PRODUCT_EDIT,\n        PermissionsEnum.APPROVAL_POLICY_EDIT,\n        PermissionsEnum.APPROVAL_POLICY_VIEW,\n        PermissionsEnum.TIME_OFF_EDIT,\n        PermissionsEnum.REQUEST_APPROVAL_EDIT,\n        PermissionsEnum.REQUEST_APPROVAL_VIEW,\n        PermissionsEnum.TENANT_ADD_EXISTING_USER,\n    ],\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IRolePermissionUpdateInput.html":{"url":"interfaces/IRolePermissionUpdateInput.html","title":"interface - IRolePermissionUpdateInput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IRolePermissionUpdateInput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/interfaces/src/models/role-permission.model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        enabled\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        enabled\n                                    \n                                \n                                \n                                    \n                                        enabled:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { IRole } from './role.model'\n\nexport interface IRolePermission {\n    roleId: string\n    permission: string\n    role: IRole\n    enabled: boolean\n}\n\nexport interface IRolePermissionCreateInput {\n    roleId: string\n    permission: string\n    enabled: boolean\n}\n\nexport interface IRolePermissionUpdateInput {\n    enabled: boolean\n}\n\nexport enum PermissionsEnum {\n    ADMIN_DASHBOARD_VIEW = 'ADMIN_DASHBOARD_VIEW',\n    ORG_PAYMENT_VIEW = 'ORG_PAYMENT_VIEW',\n    ORG_PAYMENT_ADD_EDIT = 'ORG_PAYMENT_ADD_EDIT',\n    ORG_INCOMES_VIEW = 'ORG_INCOMES_VIEW',\n    ORG_INCOMES_EDIT = 'ORG_INCOMES_EDIT',\n    ORG_EXPENSES_VIEW = 'ORG_EXPENSES_VIEW',\n    ORG_EXPENSES_EDIT = 'ORG_EXPENSES_EDIT',\n    ORG_PROPOSALS_VIEW = 'ORG_PROPOSALS_VIEW',\n    ORG_PROPOSALS_EDIT = 'ORG_PROPOSALS_EDIT',\n    ORG_TIME_OFF_VIEW = 'ORG_TIME_OFF_VIEW',\n    ORG_EMPLOYEES_VIEW = 'ORG_EMPLOYEES_VIEW',\n    ORG_EMPLOYEES_EDIT = 'ORG_EMPLOYEES_EDIT',\n    ORG_CANDIDATES_VIEW = 'ORG_CANDIDATES_VIEW',\n    ORG_CANDIDATES_EDIT = 'ORG_CANDIDATES_EDIT',\n    ORG_CANDIDATES_INTERVIEW_EDIT = 'ORG_CANDIDATES_INTERVIEW_EDIT',\n    ORG_CANDIDATES_DOCUMENTS_VIEW = 'ORG_CANDIDATES_DOCUMENTS_VIEW',\n    ORG_CANDIDATES_TASK_EDIT = 'ORG_CANDIDATES_TASK_EDIT',\n    ORG_CANDIDATES_FEEDBACK_EDIT = 'ORG_CANDIDATES_FEEDBACK_EDIT',\n    ORG_INVENTORY_PRODUCT_EDIT = 'ORG_INVENTORY_PRODUCT_EDIT',\n    ORG_TAGS_EDIT = 'ORG_TAGS_EDIT',\n    ORG_USERS_VIEW = 'ORG_USERS_VIEW',\n    ORG_USERS_EDIT = 'ORG_USERS_EDIT',\n    ORG_INVITE_VIEW = 'ORG_INVITE_VIEW',\n    ORG_INVITE_EDIT = 'ORG_INVITE_EDIT',\n    ALL_ORG_VIEW = 'ALL_ORG_VIEW',\n    ALL_ORG_EDIT = 'ALL_ORG_EDIT',\n    POLICY_VIEW = 'POLICY_VIEW',\n    POLICY_EDIT = 'POLICY_EDIT',\n    TIME_OFF_EDIT = 'TIME_OFF_EDIT',\n    REQUEST_APPROVAL_VIEW = 'REQUEST_APPROVAL_VIEW',\n    REQUEST_APPROVAL_EDIT = 'REQUEST_APPROVAL_EDIT',\n    APPROVAL_POLICY_VIEW = 'APPROVALS_POLICY_VIEW',\n    APPROVAL_POLICY_EDIT = 'APPROVALS_POLICY_EDIT',\n    CHANGE_SELECTED_EMPLOYEE = 'CHANGE_SELECTED_EMPLOYEE',\n    CHANGE_SELECTED_CANDIDATE = 'CHANGE_SELECTED_CANDIDATE',\n    CHANGE_SELECTED_ORGANIZATION = 'CHANGE_SELECTED_ORGANIZATION',\n    CHANGE_ROLES_PERMISSIONS = 'CHANGE_ROLES_PERMISSIONS',\n    ACCESS_PRIVATE_PROJECTS = 'ACCESS_PRIVATE_PROJECTS',\n    TIMESHEET_EDIT_TIME = 'TIMESHEET_EDIT_TIME',\n    SUPER_ADMIN_EDIT = 'SUPER_ADMIN_EDIT',\n    PUBLIC_PAGE_EDIT = 'PUBLIC_PAGE_EDIT',\n    INVOICES_VIEW = 'INVOICES_VIEW',\n    INVOICES_EDIT = 'INVOICES_EDIT',\n    ORG_CANDIDATES_INTERVIEWERS_EDIT = 'ORG_CANDIDATES_INTERVIEWERS_EDIT',\n    PROPOSALS_EDIT = 'PROPOSALS_EDIT',\n    VIEW_ALL_EMAILS = 'VIEW_ALL_EMAILS',\n    ORG_HELP_CENTER_EDIT = 'ORG_HELP_CENTER_EDIT',\n    EDIT_SALES_PIPELINES = 'EDIT_SALES_PIPELINES',\n    CAN_APPROVE_TIMESHEET = 'CAN_APPROVE_TIMESHEET',\n    ORG_SPRINT_VIEW = 'ORG_SPRINT_VIEW',\n    ORG_SPRINT_EDIT = 'ORG_SPRINT_EDIT',\n    ORG_PROJECT_EDIT = 'ORG_PROJECT_EDIT',\n    ORG_CONTACT_EDIT = 'ORG_CONTACT_EDIT',\n    ORG_TEAM_EDIT = 'ORG_TEAM_EDIT',\n    ORG_CONTRACT_EDIT = 'ORG_CONTRACT_EDIT',\n    EVENT_TYPES_VIEW = 'EVENT_TYPES_VIEW',\n    TIME_TRACKER = 'TIME_TRACKER',\n    TENANT_ADD_EXISTING_USER = 'TENANT_ADD_EXISTING_USER',\n}\n\nexport const PermissionGroups = {\n    // Permissions which can be given to any role\n    GENERAL: [\n        PermissionsEnum.ADMIN_DASHBOARD_VIEW,\n        PermissionsEnum.ORG_PAYMENT_VIEW,\n        PermissionsEnum.ORG_PAYMENT_ADD_EDIT,\n        PermissionsEnum.ORG_EXPENSES_VIEW,\n        PermissionsEnum.ORG_EXPENSES_EDIT,\n        PermissionsEnum.ORG_INCOMES_EDIT,\n        PermissionsEnum.ORG_INCOMES_VIEW,\n        PermissionsEnum.ORG_PROPOSALS_EDIT,\n        PermissionsEnum.ORG_PROPOSALS_VIEW,\n        PermissionsEnum.ORG_TIME_OFF_VIEW,\n        PermissionsEnum.ORG_INVITE_VIEW,\n        PermissionsEnum.ORG_INVITE_EDIT,\n        PermissionsEnum.POLICY_VIEW,\n        PermissionsEnum.POLICY_EDIT,\n        PermissionsEnum.TIME_OFF_EDIT,\n        PermissionsEnum.APPROVAL_POLICY_EDIT,\n        PermissionsEnum.APPROVAL_POLICY_VIEW,\n        PermissionsEnum.REQUEST_APPROVAL_EDIT,\n        PermissionsEnum.REQUEST_APPROVAL_VIEW,\n        PermissionsEnum.ACCESS_PRIVATE_PROJECTS,\n        PermissionsEnum.TIMESHEET_EDIT_TIME,\n        PermissionsEnum.INVOICES_VIEW,\n        PermissionsEnum.INVOICES_EDIT,\n        PermissionsEnum.ORG_CANDIDATES_DOCUMENTS_VIEW,\n        PermissionsEnum.ORG_CANDIDATES_TASK_EDIT,\n        PermissionsEnum.ORG_CANDIDATES_INTERVIEW_EDIT,\n        PermissionsEnum.ORG_CANDIDATES_INTERVIEWERS_EDIT,\n        PermissionsEnum.ORG_CANDIDATES_FEEDBACK_EDIT,\n        PermissionsEnum.ORG_INVENTORY_PRODUCT_EDIT,\n        PermissionsEnum.ORG_TAGS_EDIT,\n        PermissionsEnum.VIEW_ALL_EMAILS,\n        PermissionsEnum.ORG_HELP_CENTER_EDIT,\n        PermissionsEnum.EDIT_SALES_PIPELINES,\n        PermissionsEnum.CAN_APPROVE_TIMESHEET,\n        PermissionsEnum.ORG_SPRINT_EDIT,\n        PermissionsEnum.ORG_SPRINT_VIEW,\n        PermissionsEnum.ORG_PROJECT_EDIT,\n        PermissionsEnum.ORG_CONTACT_EDIT,\n        PermissionsEnum.ORG_TEAM_EDIT,\n        PermissionsEnum.ORG_CONTRACT_EDIT,\n        PermissionsEnum.EVENT_TYPES_VIEW,\n        PermissionsEnum.TIME_TRACKER,\n    ],\n\n    // Readonly permissions, are only enabled for admin role\n    ADMINISTRATION: [\n        PermissionsEnum.ORG_EMPLOYEES_VIEW,\n        PermissionsEnum.ORG_EMPLOYEES_EDIT,\n        PermissionsEnum.ORG_CANDIDATES_VIEW,\n        PermissionsEnum.ORG_CANDIDATES_EDIT,\n        PermissionsEnum.ORG_USERS_VIEW,\n        PermissionsEnum.ORG_USERS_EDIT,\n        PermissionsEnum.ALL_ORG_VIEW,\n        PermissionsEnum.ALL_ORG_EDIT,\n        PermissionsEnum.CHANGE_SELECTED_EMPLOYEE,\n        PermissionsEnum.CHANGE_SELECTED_CANDIDATE,\n        PermissionsEnum.CHANGE_SELECTED_ORGANIZATION,\n        PermissionsEnum.CHANGE_ROLES_PERMISSIONS,\n        PermissionsEnum.SUPER_ADMIN_EDIT,\n        PermissionsEnum.PUBLIC_PAGE_EDIT,\n        PermissionsEnum.ORG_INVENTORY_PRODUCT_EDIT,\n        PermissionsEnum.APPROVAL_POLICY_EDIT,\n        PermissionsEnum.APPROVAL_POLICY_VIEW,\n        PermissionsEnum.TIME_OFF_EDIT,\n        PermissionsEnum.REQUEST_APPROVAL_EDIT,\n        PermissionsEnum.REQUEST_APPROVAL_VIEW,\n        PermissionsEnum.TENANT_ADD_EXISTING_USER,\n    ],\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ITreeNode.html":{"url":"interfaces/ITreeNode.html","title":"interface - ITreeNode","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ITreeNode\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/interfaces/src/models/tree-node.model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        children\n                                \n                                \n                                        data\n                                \n                                \n                                            Optional\n                                        expanded\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        children\n                                    \n                                \n                                \n                                    \n                                        children:         ITreeNode[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ITreeNode[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                    \n                                \n                                \n                                    \n                                        data:     T\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     T\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        expanded\n                                    \n                                \n                                \n                                    \n                                        expanded:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface ITreeNode {\n    data: T\n    children?: ITreeNode[]\n    expanded?: boolean\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ITryRequest.html":{"url":"interfaces/ITryRequest.html","title":"interface - ITryRequest","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ITryRequest\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/core/src/crud/try-request.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        error\n                                \n                                \n                                            Optional\n                                        record\n                                \n                                \n                                        success\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        error\n                                    \n                                \n                                \n                                    \n                                        error:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        record\n                                    \n                                \n                                \n                                    \n                                        record:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        success\n                                    \n                                \n                                \n                                    \n                                        success:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface ITryRequest {\n    success: boolean\n    record?: any\n    error?: any\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IUser.html":{"url":"interfaces/IUser.html","title":"interface - IUser","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IUser\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/interfaces/src/models/user.model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        email\n                                \n                                \n                                            Optional\n                                        firstName\n                                \n                                \n                                            Optional\n                                        fullName\n                                \n                                \n                                            Optional\n                                        hash\n                                \n                                \n                                            Optional\n                                        imageUrl\n                                \n                                \n                                            Optional\n                                        lastName\n                                \n                                \n                                            Optional\n                                        name\n                                \n                                \n                                            Optional\n                                        role\n                                \n                                \n                                            Optional\n                                        roleId\n                                \n                                \n                                            Optional\n                                        username\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        firstName\n                                    \n                                \n                                \n                                    \n                                        firstName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        fullName\n                                    \n                                \n                                \n                                    \n                                        fullName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        hash\n                                    \n                                \n                                \n                                    \n                                        hash:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        imageUrl\n                                    \n                                \n                                \n                                    \n                                        imageUrl:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lastName\n                                    \n                                \n                                \n                                    \n                                        lastName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        role\n                                    \n                                \n                                \n                                    \n                                        role:         IRole\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IRole\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        roleId\n                                    \n                                \n                                \n                                    \n                                        roleId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        username\n                                    \n                                \n                                \n                                    \n                                        username:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { IRole } from './role.model'\n\nexport interface IUser {\n    name?: string\n    firstName?: string\n    lastName?: string\n    email?: string\n    username?: string\n    role?: IRole\n    roleId?: string\n    hash?: string\n    imageUrl?: string\n    fullName?: string\n}\n\nexport interface IUserFindInput {\n    thirdPartyId?: string\n    firstName?: string\n    lastName?: string\n    email?: string\n    username?: string\n    role?: IRole\n    roleId?: string\n    hash?: string\n    imageUrl?: string\n}\n\nexport interface IUserRegistrationInput {\n    user: IUser\n    password?: string\n    originalUrl?: string\n    organizationId?: string\n    createdById?: string\n}\n\nexport interface IAuthLoginInput {\n    findObj: {\n        email: string\n    }\n    password: string\n}\nexport interface IAuthResponse {\n    user: IUser\n    token: string\n}\nexport interface IUserCreateInput {\n    firstName?: string\n    lastName?: string\n    email?: string\n    username?: string\n    role?: IRole\n    roleId?: string\n    hash?: string\n    imageUrl?: string\n}\n\nexport interface IUserUpdateInput {\n    firstName?: string\n    lastName?: string\n    email?: string\n    username?: string\n    role?: IRole\n    roleId?: string\n    hash?: string\n    imageUrl?: string\n}\n\nexport enum LanguagesEnum {\n    ENGLISH = 'en',\n}\n\nexport enum ProviderEnum {\n    GOOGLE = 'google',\n    FACEBOOK = 'facebook',\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IUserCreateInput.html":{"url":"interfaces/IUserCreateInput.html","title":"interface - IUserCreateInput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IUserCreateInput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/interfaces/src/models/user.model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        email\n                                \n                                \n                                            Optional\n                                        firstName\n                                \n                                \n                                            Optional\n                                        hash\n                                \n                                \n                                            Optional\n                                        imageUrl\n                                \n                                \n                                            Optional\n                                        lastName\n                                \n                                \n                                            Optional\n                                        role\n                                \n                                \n                                            Optional\n                                        roleId\n                                \n                                \n                                            Optional\n                                        username\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        firstName\n                                    \n                                \n                                \n                                    \n                                        firstName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        hash\n                                    \n                                \n                                \n                                    \n                                        hash:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        imageUrl\n                                    \n                                \n                                \n                                    \n                                        imageUrl:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lastName\n                                    \n                                \n                                \n                                    \n                                        lastName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        role\n                                    \n                                \n                                \n                                    \n                                        role:         IRole\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IRole\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        roleId\n                                    \n                                \n                                \n                                    \n                                        roleId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        username\n                                    \n                                \n                                \n                                    \n                                        username:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { IRole } from './role.model'\n\nexport interface IUser {\n    name?: string\n    firstName?: string\n    lastName?: string\n    email?: string\n    username?: string\n    role?: IRole\n    roleId?: string\n    hash?: string\n    imageUrl?: string\n    fullName?: string\n}\n\nexport interface IUserFindInput {\n    thirdPartyId?: string\n    firstName?: string\n    lastName?: string\n    email?: string\n    username?: string\n    role?: IRole\n    roleId?: string\n    hash?: string\n    imageUrl?: string\n}\n\nexport interface IUserRegistrationInput {\n    user: IUser\n    password?: string\n    originalUrl?: string\n    organizationId?: string\n    createdById?: string\n}\n\nexport interface IAuthLoginInput {\n    findObj: {\n        email: string\n    }\n    password: string\n}\nexport interface IAuthResponse {\n    user: IUser\n    token: string\n}\nexport interface IUserCreateInput {\n    firstName?: string\n    lastName?: string\n    email?: string\n    username?: string\n    role?: IRole\n    roleId?: string\n    hash?: string\n    imageUrl?: string\n}\n\nexport interface IUserUpdateInput {\n    firstName?: string\n    lastName?: string\n    email?: string\n    username?: string\n    role?: IRole\n    roleId?: string\n    hash?: string\n    imageUrl?: string\n}\n\nexport enum LanguagesEnum {\n    ENGLISH = 'en',\n}\n\nexport enum ProviderEnum {\n    GOOGLE = 'google',\n    FACEBOOK = 'facebook',\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IUserFindInput.html":{"url":"interfaces/IUserFindInput.html","title":"interface - IUserFindInput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IUserFindInput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/interfaces/src/models/user.model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        email\n                                \n                                \n                                            Optional\n                                        firstName\n                                \n                                \n                                            Optional\n                                        hash\n                                \n                                \n                                            Optional\n                                        imageUrl\n                                \n                                \n                                            Optional\n                                        lastName\n                                \n                                \n                                            Optional\n                                        role\n                                \n                                \n                                            Optional\n                                        roleId\n                                \n                                \n                                            Optional\n                                        thirdPartyId\n                                \n                                \n                                            Optional\n                                        username\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        firstName\n                                    \n                                \n                                \n                                    \n                                        firstName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        hash\n                                    \n                                \n                                \n                                    \n                                        hash:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        imageUrl\n                                    \n                                \n                                \n                                    \n                                        imageUrl:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lastName\n                                    \n                                \n                                \n                                    \n                                        lastName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        role\n                                    \n                                \n                                \n                                    \n                                        role:         IRole\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IRole\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        roleId\n                                    \n                                \n                                \n                                    \n                                        roleId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        thirdPartyId\n                                    \n                                \n                                \n                                    \n                                        thirdPartyId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        username\n                                    \n                                \n                                \n                                    \n                                        username:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { IRole } from './role.model'\n\nexport interface IUser {\n    name?: string\n    firstName?: string\n    lastName?: string\n    email?: string\n    username?: string\n    role?: IRole\n    roleId?: string\n    hash?: string\n    imageUrl?: string\n    fullName?: string\n}\n\nexport interface IUserFindInput {\n    thirdPartyId?: string\n    firstName?: string\n    lastName?: string\n    email?: string\n    username?: string\n    role?: IRole\n    roleId?: string\n    hash?: string\n    imageUrl?: string\n}\n\nexport interface IUserRegistrationInput {\n    user: IUser\n    password?: string\n    originalUrl?: string\n    organizationId?: string\n    createdById?: string\n}\n\nexport interface IAuthLoginInput {\n    findObj: {\n        email: string\n    }\n    password: string\n}\nexport interface IAuthResponse {\n    user: IUser\n    token: string\n}\nexport interface IUserCreateInput {\n    firstName?: string\n    lastName?: string\n    email?: string\n    username?: string\n    role?: IRole\n    roleId?: string\n    hash?: string\n    imageUrl?: string\n}\n\nexport interface IUserUpdateInput {\n    firstName?: string\n    lastName?: string\n    email?: string\n    username?: string\n    role?: IRole\n    roleId?: string\n    hash?: string\n    imageUrl?: string\n}\n\nexport enum LanguagesEnum {\n    ENGLISH = 'en',\n}\n\nexport enum ProviderEnum {\n    GOOGLE = 'google',\n    FACEBOOK = 'facebook',\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IUserRegistrationInput.html":{"url":"interfaces/IUserRegistrationInput.html","title":"interface - IUserRegistrationInput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IUserRegistrationInput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/interfaces/src/models/user.model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        createdById\n                                \n                                \n                                            Optional\n                                        organizationId\n                                \n                                \n                                            Optional\n                                        originalUrl\n                                \n                                \n                                            Optional\n                                        password\n                                \n                                \n                                        user\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        createdById\n                                    \n                                \n                                \n                                    \n                                        createdById:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        organizationId\n                                    \n                                \n                                \n                                    \n                                        organizationId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        originalUrl\n                                    \n                                \n                                \n                                    \n                                        originalUrl:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                    \n                                \n                                \n                                    \n                                        password:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        user\n                                    \n                                \n                                \n                                    \n                                        user:         IUser\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IUser\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { IRole } from './role.model'\n\nexport interface IUser {\n    name?: string\n    firstName?: string\n    lastName?: string\n    email?: string\n    username?: string\n    role?: IRole\n    roleId?: string\n    hash?: string\n    imageUrl?: string\n    fullName?: string\n}\n\nexport interface IUserFindInput {\n    thirdPartyId?: string\n    firstName?: string\n    lastName?: string\n    email?: string\n    username?: string\n    role?: IRole\n    roleId?: string\n    hash?: string\n    imageUrl?: string\n}\n\nexport interface IUserRegistrationInput {\n    user: IUser\n    password?: string\n    originalUrl?: string\n    organizationId?: string\n    createdById?: string\n}\n\nexport interface IAuthLoginInput {\n    findObj: {\n        email: string\n    }\n    password: string\n}\nexport interface IAuthResponse {\n    user: IUser\n    token: string\n}\nexport interface IUserCreateInput {\n    firstName?: string\n    lastName?: string\n    email?: string\n    username?: string\n    role?: IRole\n    roleId?: string\n    hash?: string\n    imageUrl?: string\n}\n\nexport interface IUserUpdateInput {\n    firstName?: string\n    lastName?: string\n    email?: string\n    username?: string\n    role?: IRole\n    roleId?: string\n    hash?: string\n    imageUrl?: string\n}\n\nexport enum LanguagesEnum {\n    ENGLISH = 'en',\n}\n\nexport enum ProviderEnum {\n    GOOGLE = 'google',\n    FACEBOOK = 'facebook',\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IUserUpdateInput.html":{"url":"interfaces/IUserUpdateInput.html","title":"interface - IUserUpdateInput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IUserUpdateInput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/interfaces/src/models/user.model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        email\n                                \n                                \n                                            Optional\n                                        firstName\n                                \n                                \n                                            Optional\n                                        hash\n                                \n                                \n                                            Optional\n                                        imageUrl\n                                \n                                \n                                            Optional\n                                        lastName\n                                \n                                \n                                            Optional\n                                        role\n                                \n                                \n                                            Optional\n                                        roleId\n                                \n                                \n                                            Optional\n                                        username\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        firstName\n                                    \n                                \n                                \n                                    \n                                        firstName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        hash\n                                    \n                                \n                                \n                                    \n                                        hash:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        imageUrl\n                                    \n                                \n                                \n                                    \n                                        imageUrl:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lastName\n                                    \n                                \n                                \n                                    \n                                        lastName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        role\n                                    \n                                \n                                \n                                    \n                                        role:         IRole\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IRole\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        roleId\n                                    \n                                \n                                \n                                    \n                                        roleId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        username\n                                    \n                                \n                                \n                                    \n                                        username:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { IRole } from './role.model'\n\nexport interface IUser {\n    name?: string\n    firstName?: string\n    lastName?: string\n    email?: string\n    username?: string\n    role?: IRole\n    roleId?: string\n    hash?: string\n    imageUrl?: string\n    fullName?: string\n}\n\nexport interface IUserFindInput {\n    thirdPartyId?: string\n    firstName?: string\n    lastName?: string\n    email?: string\n    username?: string\n    role?: IRole\n    roleId?: string\n    hash?: string\n    imageUrl?: string\n}\n\nexport interface IUserRegistrationInput {\n    user: IUser\n    password?: string\n    originalUrl?: string\n    organizationId?: string\n    createdById?: string\n}\n\nexport interface IAuthLoginInput {\n    findObj: {\n        email: string\n    }\n    password: string\n}\nexport interface IAuthResponse {\n    user: IUser\n    token: string\n}\nexport interface IUserCreateInput {\n    firstName?: string\n    lastName?: string\n    email?: string\n    username?: string\n    role?: IRole\n    roleId?: string\n    hash?: string\n    imageUrl?: string\n}\n\nexport interface IUserUpdateInput {\n    firstName?: string\n    lastName?: string\n    email?: string\n    username?: string\n    role?: IRole\n    roleId?: string\n    hash?: string\n    imageUrl?: string\n}\n\nexport enum LanguagesEnum {\n    ENGLISH = 'en',\n}\n\nexport enum ProviderEnum {\n    GOOGLE = 'google',\n    FACEBOOK = 'facebook',\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Model.html":{"url":"classes/Model.html","title":"class - Model","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Model\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/core/src/entities/base.ts\n        \n\n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(input?: any)\n                    \n                \n                        \n                            \n                                Defined in libs/core/src/entities/base.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        input\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiPropertyOptional, ApiProperty } from '@nestjs/swagger'\n\nimport { BaseEntityModel as IBaseEntityModel } from '@app/interfaces'\n\nimport {\n    PrimaryGeneratedColumn,\n    UpdateDateColumn,\n    CreateDateColumn,\n    DeleteDateColumn,\n} from 'typeorm'\n\nexport abstract class Model {\n    constructor(input?: any) {\n        if (input) {\n            Object.assign(this, input)\n        }\n    }\n}\n\nexport abstract class Base extends Model implements IBaseEntityModel {\n    @ApiPropertyOptional({ type: String })\n    @PrimaryGeneratedColumn()\n    id?: number\n\n    @ApiProperty({\n        type: 'string',\n        format: 'date-time',\n        example: '2000-01-01T12:00:00.000Z',\n    })\n    @CreateDateColumn()\n    createdAt?: Date\n\n    @ApiProperty({\n        type: 'string',\n        format: 'date-time',\n        example: '2000-01-01T12:00:00.000Z',\n    })\n    @UpdateDateColumn()\n    updatedAt?: Date\n\n    @ApiProperty({\n        type: 'string',\n        format: 'date-time',\n        example: '2000-01-01T12:00:00.000Z',\n    })\n    @DeleteDateColumn()\n    deletedAt?: Date | null\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PaginationParams.html":{"url":"classes/PaginationParams.html","title":"class - PaginationParams","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PaginationParams\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/core/src/crud/pagination-params.ts\n        \n\n            \n                Description\n            \n            \n                Describes generic pagination params\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Abstract\n                                    Readonly\n                                    Optional\n                                order\n                            \n                            \n                                    Readonly\n                                skip\n                            \n                            \n                                    Readonly\n                                take\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Abstract\n                                Readonly\n                                Optional\n                            order\n                            \n                        \n                    \n                \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiPropertyOptional()@IsOptional()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in libs/core/src/crud/pagination-params.ts:39\n                            \n                        \n\n                \n                    \n                        OrderBy\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            skip\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiPropertyOptional({type: Number, minimum: 0})@IsOptional()@Min(0)@Transform(undefined)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in libs/core/src/crud/pagination-params.ts:32\n                            \n                        \n\n                \n                    \n                        Pagination offset\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            take\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 10\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiPropertyOptional({type: Number, minimum: 0, maximum: 50})@IsOptional()@Min(0)@Max(50)@Transform(undefined)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in libs/core/src/crud/pagination-params.ts:23\n                            \n                        \n\n                \n                    \n                        Pagination limit\n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiPropertyOptional } from '@nestjs/swagger'\n\nimport { Transform } from 'class-transformer'\nimport { IsOptional, Max, Min } from 'class-validator'\n\nexport enum OrderType {\n    DESC = 'DESC',\n    ASC = 'ASC',\n}\n\n/**\n * Describes generic pagination params\n */\nexport abstract class PaginationParams {\n    /**\n     * Pagination limit\n     */\n    @ApiPropertyOptional({ type: Number, minimum: 0, maximum: 50 })\n    @IsOptional()\n    @Min(0)\n    @Max(50)\n    @Transform((val: string) => parseInt(val, 10))\n    readonly take = 10\n\n    /**\n     * Pagination offset\n     */\n    @ApiPropertyOptional({ type: Number, minimum: 0 })\n    @IsOptional()\n    @Min(0)\n    @Transform((val: string) => parseInt(val, 10))\n    readonly skip = 0\n\n    /**\n     * OrderBy\n     */\n    @ApiPropertyOptional()\n    @IsOptional()\n    abstract readonly order?: { [P in keyof T]?: OrderType }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/QueueController.html":{"url":"controllers/QueueController.html","title":"controller - QueueController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  QueueController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/queue/src/queue.controller.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getHello\n                        \n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in apps/queue/src/queue.controller.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common'\n\nimport { QueueService } from 'apps/queue/src/queue.service'\n\n@Controller()\nexport class QueueController {\n    constructor(private readonly queueService: QueueService) {}\n\n    @Get()\n    getHello(): string {\n        return this.queueService.getHello()\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/QueueModule.html":{"url":"modules/QueueModule.html","title":"module - QueueModule","body":"\n                   \n\n\n\n\n    Modules\n    QueueModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_QueueModule\n\n\n\ncluster_QueueModule_imports\n\n\n\ncluster_QueueModule_providers\n\n\n\n\nCronModule\n\nCronModule\n\n\n\nQueueModule\n\nQueueModule\n\nQueueModule -->\n\nCronModule->QueueModule\n\n\n\n\n\nQueueService\n\nQueueService\n\nQueueModule -->\n\nQueueService->QueueModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/queue/src/queue.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            QueueService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            QueueController\n                        \n                        \n                            HealthController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            CronModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common'\nimport { ScheduleModule } from '@nestjs/schedule'\nimport { TerminusModule } from '@nestjs/terminus'\n\nimport { CronModule } from '@app/cron/cron.module'\nimport { HealthController } from '@app/health'\n\nimport { QueueController } from 'apps/queue/src/queue.controller'\nimport { QueueService } from 'apps/queue/src/queue.service'\n\n@Module({\n    imports: [TerminusModule, ScheduleModule.forRoot(), CronModule], // eslint-disable-line @typescript-eslint/no-unsafe-assignment\n    controllers: [QueueController, HealthController],\n    providers: [QueueService],\n})\nexport class QueueModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/QueueService.html":{"url":"injectables/QueueService.html","title":"injectable - QueueService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  QueueService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/queue/src/queue.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getHello\n                        \n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n            \n                \n                    Defined in apps/queue/src/queue.service.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common'\n\n@Injectable()\nexport class QueueService {\n    getHello(): string {\n        return 'Hello World!'\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/S3FileStorageProviderConfig.html":{"url":"interfaces/S3FileStorageProviderConfig.html","title":"interface - S3FileStorageProviderConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  S3FileStorageProviderConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/interfaces/src/models/file-provider.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        aws_access_key_id\n                                \n                                \n                                            Optional\n                                        aws_bucket\n                                \n                                \n                                            Optional\n                                        aws_default_region\n                                \n                                \n                                            Optional\n                                        aws_secret_access_key\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        aws_access_key_id\n                                    \n                                \n                                \n                                    \n                                        aws_access_key_id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        aws_bucket\n                                    \n                                \n                                \n                                    \n                                        aws_bucket:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        aws_default_region\n                                    \n                                \n                                \n                                    \n                                        aws_default_region:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        aws_secret_access_key\n                                    \n                                \n                                \n                                    \n                                        aws_secret_access_key:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export enum FileStorageProviderEnum {\n    LOCAL = 'local',\n    S3 = 's3',\n}\nexport interface FileStorageOption {\n    dest: string | CallableFunction\n    provider?: FileStorageProviderEnum\n    prefix?: string\n    filename?: string | CallableFunction\n}\n\nexport interface FileSystem {\n    rootPath: string\n    baseUrl?: string\n}\n\nexport interface UploadedFile {\n    fieldname: string\n    key: string // path of the file in storage\n    originalname: string // orignal file name\n    size: number // files in bytes\n    encoding?: string\n    mimetype?: string\n    filename: string\n    url: string // file public url\n    path: string // Full path of the file\n}\n\nexport interface S3FileStorageProviderConfig {\n    aws_access_key_id?: string\n    aws_secret_access_key?: string\n    aws_default_region?: string\n    aws_bucket?: string\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateCatDto.html":{"url":"classes/UpdateCatDto.html","title":"class - UpdateCatDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateCatDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/backend/src/cats/dto/update-cat.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/mapped-types'\n\nimport { CreateCatDto } from 'apps/backend/src/cats/dto/create-cat.dto'\n\nexport class UpdateCatDto extends PartialType(CreateCatDto) {}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UploadedFile.html":{"url":"interfaces/UploadedFile.html","title":"interface - UploadedFile","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  UploadedFile\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/interfaces/src/models/file-provider.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        encoding\n                                \n                                \n                                        fieldname\n                                \n                                \n                                        filename\n                                \n                                \n                                        key\n                                \n                                \n                                            Optional\n                                        mimetype\n                                \n                                \n                                        originalname\n                                \n                                \n                                        path\n                                \n                                \n                                        size\n                                \n                                \n                                        url\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        encoding\n                                    \n                                \n                                \n                                    \n                                        encoding:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        fieldname\n                                    \n                                \n                                \n                                    \n                                        fieldname:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        filename\n                                    \n                                \n                                \n                                    \n                                        filename:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        key\n                                    \n                                \n                                \n                                    \n                                        key:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        mimetype\n                                    \n                                \n                                \n                                    \n                                        mimetype:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        originalname\n                                    \n                                \n                                \n                                    \n                                        originalname:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        path\n                                    \n                                \n                                \n                                    \n                                        path:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        size\n                                    \n                                \n                                \n                                    \n                                        size:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        url\n                                    \n                                \n                                \n                                    \n                                        url:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export enum FileStorageProviderEnum {\n    LOCAL = 'local',\n    S3 = 's3',\n}\nexport interface FileStorageOption {\n    dest: string | CallableFunction\n    provider?: FileStorageProviderEnum\n    prefix?: string\n    filename?: string | CallableFunction\n}\n\nexport interface FileSystem {\n    rootPath: string\n    baseUrl?: string\n}\n\nexport interface UploadedFile {\n    fieldname: string\n    key: string // path of the file in storage\n    originalname: string // orignal file name\n    size: number // files in bytes\n    encoding?: string\n    mimetype?: string\n    filename: string\n    url: string // file public url\n    path: string // Full path of the file\n}\n\nexport interface S3FileStorageProviderConfig {\n    aws_access_key_id?: string\n    aws_secret_access_key?: string\n    aws_default_region?: string\n    aws_bucket?: string\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                apps/backend/src/app.controller.ts\n            \n            controller\n            AppController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/backend/src/app.service.ts\n            \n            injectable\n            AppService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/backend/src/cats/cats.controller.ts\n            \n            controller\n            CatsController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                apps/backend/src/cats/cats.service.ts\n            \n            injectable\n            CatsService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                apps/backend/src/cats/dto/create-cat.dto.ts\n            \n            class\n            CreateCatDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/backend/src/cats/dto/update-cat.dto.ts\n            \n            class\n            UpdateCatDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/backend/src/cats/entities/cat.entity.ts\n            \n            class\n            Cat\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/backend/src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/backend/src/main.ts\n            \n            function\n            createSwagger\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/backend/src/main.ts\n            \n            function\n            setupApp\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/queue/src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/queue/src/main.ts\n            \n            function\n            createSwagger\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/queue/src/main.ts\n            \n            function\n            setupApp\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/queue/src/queue.controller.ts\n            \n            controller\n            QueueController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/queue/src/queue.service.ts\n            \n            injectable\n            QueueService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                libs/core/src/DBHelper.ts\n            \n            injectable\n            DBHelper\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                libs/core/src/crud/crud.controller.ts\n            \n            class\n            CrudController\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                libs/core/src/crud/crud.service.ts\n            \n            class\n            CrudService\n            \n                8 %\n                (1/12)\n            \n        \n        \n            \n                \n                libs/core/src/crud/icrud.service.ts\n            \n            interface\n            ICrudService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                libs/core/src/crud/pagination-params.ts\n            \n            class\n            PaginationParams\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                libs/core/src/crud/pagination.ts\n            \n            interface\n            IPagination\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                libs/core/src/crud/try-request.ts\n            \n            interface\n            ITryRequest\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                libs/core/src/entities/base.ts\n            \n            class\n            Base\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                libs/core/src/entities/base.ts\n            \n            class\n            Model\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                libs/core/src/entities/toHexString.ts\n            \n            function\n            toHexString\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                libs/core/src/moment-extend.ts\n            \n            variable\n            moment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                libs/core/src/utils.ts\n            \n            function\n            arrayToObject\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                libs/core/src/utils.ts\n            \n            function\n            convertToDatetime\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                libs/core/src/utils.ts\n            \n            function\n            generatedLogoColor\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                libs/core/src/utils.ts\n            \n            function\n            getLastDayOfMonth\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                libs/core/src/utils.ts\n            \n            function\n            reflect\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                libs/core/src/utils.ts\n            \n            function\n            tempFile\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                libs/core/src/utils.ts\n            \n            function\n            unixTimestampToDate\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                libs/core/src/utils.ts\n            \n            variable\n            getDummyImage\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                libs/core/src/utils.ts\n            \n            variable\n            getUserDummyImage\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                libs/cron/src/cron.service.ts\n            \n            injectable\n            CronService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                libs/health/src/health.controller.ts\n            \n            controller\n            HealthController\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                libs/interfaces/src/models/base-entity.model.ts\n            \n            interface\n            IBaseEntityModel\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                libs/interfaces/src/models/core.model.ts\n            \n            interface\n            IListQueryInput\n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                libs/interfaces/src/models/core.model.ts\n            \n            interface\n            IPagination\n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                libs/interfaces/src/models/core.model.ts\n            \n            interface\n            IPaginationInput\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                libs/interfaces/src/models/country.model.ts\n            \n            interface\n            ICountry\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                libs/interfaces/src/models/currency.model.ts\n            \n            interface\n            ICurrency\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                libs/interfaces/src/models/file-provider.ts\n            \n            interface\n            FileStorageOption\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                libs/interfaces/src/models/file-provider.ts\n            \n            interface\n            FileSystem\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                libs/interfaces/src/models/file-provider.ts\n            \n            interface\n            S3FileStorageProviderConfig\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                libs/interfaces/src/models/file-provider.ts\n            \n            interface\n            UploadedFile\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                libs/interfaces/src/models/geo-location.model.ts\n            \n            interface\n            IAddress\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                libs/interfaces/src/models/geo-location.model.ts\n            \n            interface\n            IGeoLocationCreateObject\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                libs/interfaces/src/models/geo-location.model.ts\n            \n            interface\n            IGeolocationUpdateObject\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                libs/interfaces/src/models/geo-location.model.ts\n            \n            interface\n            ILocation\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                libs/interfaces/src/models/geo-location.model.ts\n            \n            function\n            getEmptyAddress\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                libs/interfaces/src/models/language.model.ts\n            \n            interface\n            ILanguage\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                libs/interfaces/src/models/language.model.ts\n            \n            interface\n            ILanguageFindInput\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                libs/interfaces/src/models/language.model.ts\n            \n            interface\n            ILanguageName\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                libs/interfaces/src/models/role-permission.model.ts\n            \n            interface\n            IRolePermission\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                libs/interfaces/src/models/role-permission.model.ts\n            \n            interface\n            IRolePermissionCreateInput\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                libs/interfaces/src/models/role-permission.model.ts\n            \n            interface\n            IRolePermissionUpdateInput\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                libs/interfaces/src/models/role-permission.model.ts\n            \n            variable\n            PermissionGroups\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                libs/interfaces/src/models/role.model.ts\n            \n            interface\n            IRole\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                libs/interfaces/src/models/tree-node.model.ts\n            \n            interface\n            ITreeNode\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                libs/interfaces/src/models/user.model.ts\n            \n            interface\n            IAuthLoginInput\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                libs/interfaces/src/models/user.model.ts\n            \n            interface\n            IAuthResponse\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                libs/interfaces/src/models/user.model.ts\n            \n            interface\n            IUser\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                libs/interfaces/src/models/user.model.ts\n            \n            interface\n            IUserCreateInput\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                libs/interfaces/src/models/user.model.ts\n            \n            interface\n            IUserFindInput\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                libs/interfaces/src/models/user.model.ts\n            \n            interface\n            IUserRegistrationInput\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                libs/interfaces/src/models/user.model.ts\n            \n            interface\n            IUserUpdateInput\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                libs/utils/src/utils.ts\n            \n            function\n            average\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                libs/utils/src/utils.ts\n            \n            function\n            convertLocalToTimezone\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                libs/utils/src/utils.ts\n            \n            function\n            convertPrecisionFloatDigit\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                libs/utils/src/utils.ts\n            \n            function\n            getContrastColor\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                libs/utils/src/utils.ts\n            \n            function\n            isEmpty\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                libs/utils/src/utils.ts\n            \n            function\n            isJsObject\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                libs/utils/src/utils.ts\n            \n            function\n            progressStatus\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                libs/utils/src/utils.ts\n            \n            function\n            toFormData\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                libs/utils/src/utils.ts\n            \n            function\n            toLocal\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                libs/utils/src/utils.ts\n            \n            function\n            toUTC\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @hapi/joi : ^17.1.1\n        \n            @nestjs/common : ^7.5.1\n        \n            @nestjs/config : ^0.6.1\n        \n            @nestjs/core : ^7.5.1\n        \n            @nestjs/mapped-types : ^0.1.1\n        \n            @nestjs/passport : ^7.1.3\n        \n            @nestjs/platform-express : ^7.5.1\n        \n            @nestjs/schedule : ^0.4.1\n        \n            @nestjs/swagger : ^4.7.5\n        \n            @nestjs/terminus : ^7.0.1\n        \n            @nestjs/typeorm : ^7.1.5\n        \n            bcryptjs : ^2.4.3\n        \n            class-transformer : ^0.3.1\n        \n            class-validator : ^0.12.2\n        \n            express-rate-limit : ^5.2.3\n        \n            helmet : ^4.2.0\n        \n            joi : ^17.3.0\n        \n            lodash : ^4.17.20\n        \n            moment : ^2.29.1\n        \n            moment-range : ^4.0.2\n        \n            moment-timezone : ^0.5.32\n        \n            nestjs-pino : ^1.3.0\n        \n            passport : ^0.4.1\n        \n            passport-local : ^1.0.0\n        \n            pino-pretty : ^4.3.0\n        \n            reflect-metadata : ^0.1.13\n        \n            rimraf : ^3.0.2\n        \n            rxjs : ^6.6.3\n        \n            sqlite3 : ^5.0.0\n        \n            swagger-ui-express : ^4.1.5\n        \n            typeorm : ^0.2.29\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            arrayToObject   (libs/.../utils.ts)\n                        \n                        \n                            average   (libs/.../utils.ts)\n                        \n                        \n                            bootstrap   (apps/.../main.ts)\n                        \n                        \n                            bootstrap   (apps/.../main.ts)\n                        \n                        \n                            convertLocalToTimezone   (libs/.../utils.ts)\n                        \n                        \n                            convertPrecisionFloatDigit   (libs/.../utils.ts)\n                        \n                        \n                            convertToDatetime   (libs/.../utils.ts)\n                        \n                        \n                            createSwagger   (apps/.../main.ts)\n                        \n                        \n                            createSwagger   (apps/.../main.ts)\n                        \n                        \n                            generatedLogoColor   (libs/.../utils.ts)\n                        \n                        \n                            getContrastColor   (libs/.../utils.ts)\n                        \n                        \n                            getEmptyAddress   (libs/.../geo-location.model.ts)\n                        \n                        \n                            getLastDayOfMonth   (libs/.../utils.ts)\n                        \n                        \n                            isEmpty   (libs/.../utils.ts)\n                        \n                        \n                            isJsObject   (libs/.../utils.ts)\n                        \n                        \n                            progressStatus   (libs/.../utils.ts)\n                        \n                        \n                            reflect   (libs/.../utils.ts)\n                        \n                        \n                            setupApp   (apps/.../main.ts)\n                        \n                        \n                            setupApp   (apps/.../main.ts)\n                        \n                        \n                            tempFile   (libs/.../utils.ts)\n                        \n                        \n                            toFormData   (libs/.../utils.ts)\n                        \n                        \n                            toHexString   (libs/.../toHexString.ts)\n                        \n                        \n                            toLocal   (libs/.../utils.ts)\n                        \n                        \n                            toUTC   (libs/.../utils.ts)\n                        \n                        \n                            unixTimestampToDate   (libs/.../utils.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    libs/core/src/utils.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            arrayToObject\n                        \n                        \n                    \n                \n            \n            \n                \narrayToObject(array, key, value)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    array\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    key\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    value\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            convertToDatetime\n                        \n                        \n                    \n                \n            \n            \n                \nconvertToDatetime(datetime, format: string)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    datetime\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    format\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            generatedLogoColor\n                        \n                        \n                    \n                \n            \n            \n                \ngeneratedLogoColor()\n                \n            \n\n\n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getLastDayOfMonth\n                        \n                        \n                    \n                \n            \n            \n                \ngetLastDayOfMonth(year, month)\n                \n            \n\n\n\n\n            \n                \n                    To calculate the last day of a month, we need to set date=0 and month as the next month.\nSo, if we want the last day of February (February is month = 1) we'll need to perform 'new Date(year, 2, 0).getDate()'\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    year\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    month\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            reflect\n                        \n                        \n                    \n                \n            \n            \n                \nreflect(promise)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    promise\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            tempFile\n                        \n                        \n                    \n                \n            \n            \n                \ntempFile(prefix)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    prefix\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            unixTimestampToDate\n                        \n                        \n                    \n                \n            \n            \n                \nunixTimestampToDate(timestamps, format: string)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    timestamps\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    format\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    libs/utils/src/utils.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            average\n                        \n                        \n                    \n                \n            \n            \n                \naverage(items: any, column)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    items\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    column\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            convertLocalToTimezone\n                        \n                        \n                    \n                \n            \n            \n                \nconvertLocalToTimezone(localDt, localDtFormat, timeZone, format: string)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    localDt\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    localDtFormat\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    timeZone\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    format\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            convertPrecisionFloatDigit\n                        \n                        \n                    \n                \n            \n            \n                \nconvertPrecisionFloatDigit(val, digit: number)\n                \n            \n\n\n\n\n            \n                \n                    The precision for a decimal (exact numeric applies only for decimal column), which is the maximum\nnumber of digits that are stored.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    val\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    digit\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getContrastColor\n                        \n                        \n                    \n                \n            \n            \n                \ngetContrastColor(hex)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    hex\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isEmpty\n                        \n                        \n                    \n                \n            \n            \n                \nisEmpty(value: any)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isJsObject\n                        \n                        \n                    \n                \n            \n            \n                \nisJsObject(object: any)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    object\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            progressStatus\n                        \n                        \n                    \n                \n            \n            \n                \nprogressStatus(value)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            toFormData\n                        \n                        \n                    \n                \n            \n            \n                \ntoFormData(obj: any, form?: any, namespace?: any)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    obj\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    form\n                                    \n                                                any\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                                \n                                    namespace\n                                    \n                                                any\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            toLocal\n                        \n                        \n                    \n                \n            \n            \n                \ntoLocal(data)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         moment.Moment\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            toUTC\n                        \n                        \n                    \n                \n            \n            \n                \ntoUTC(data)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         moment.Moment\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    apps/backend/src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            bootstrap\n                        \n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createSwagger\n                        \n                        \n                    \n                \n            \n            \n                \ncreateSwagger(app)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    app\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setupApp\n                        \n                        \n                    \n                \n            \n            \n                \nsetupApp(app)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    app\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    apps/queue/src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            bootstrap\n                        \n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createSwagger\n                        \n                        \n                    \n                \n            \n            \n                \ncreateSwagger(app)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    app\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setupApp\n                        \n                        \n                    \n                \n            \n            \n                \nsetupApp(app)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    app\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    libs/interfaces/src/models/geo-location.model.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            getEmptyAddress\n                        \n                        \n                    \n                \n            \n            \n                \ngetEmptyAddress()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         IAddress\n\n                    \n                \n            \n        \n    \n    libs/core/src/entities/toHexString.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            toHexString\n                        \n                        \n                    \n                \n            \n            \n                \ntoHexString(value)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n  A progressive Node.js framework for building efficient and scalable server-side applications.\n    \n\n\n\n\n\n\n\n\n  \n    \n  \n\n  \n\nDescription\nNest framework TypeScript starter repository.\nInstallation\n$ npm installRunning the app\n# development\n$ npm run start\n\n# watch mode\n$ npm run start:dev\n\n# production mode\n$ npm run start:prodTest\n# unit tests\n$ npm run test\n\n# e2e tests\n$ npm run test:e2e\n\n# test coverage\n$ npm run test:covSupport\nNest is an MIT-licensed open source project. It can grow thanks to the sponsors and support by the amazing backers. If you'd like to join them, please read more here.\nStay in touch\n\nAuthor - Kamil Myśliwiec\nWebsite - https://nestjs.com\nTwitter - @nestframework\n\nLicense\nNest is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CatsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CoreModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CronModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        QueueModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_CatsModule\n\n\n\ncluster_CatsModule_providers\n\n\n\ncluster_CronModule\n\n\n\ncluster_CronModule_exports\n\n\n\ncluster_CronModule_providers\n\n\n\ncluster_QueueModule\n\n\n\ncluster_QueueModule_providers\n\n\n\n\nCatsModule\n\nCatsModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nCatsModule->AppModule\n\n\n\n\n\nCronModule\n\nCronModule\n\nAppModule -->\n\nCronModule->AppModule\n\n\n\n\n\nCronService \n\nCronService \n\nCronService  -->\n\nCronModule->CronService \n\n\n\n\n\nQueueModule\n\nQueueModule\n\nQueueModule -->\n\nCronModule->QueueModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nCatsService\n\nCatsService\n\nCatsModule -->\n\nCatsService->CatsModule\n\n\n\n\n\nCronService\n\nCronService\n\nCronModule -->\n\nCronService->CronModule\n\n\n\n\n\nQueueService\n\nQueueService\n\nQueueModule -->\n\nQueueService->QueueModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        5 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    4 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    5 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    8 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    32 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            getDummyImage   (libs/.../utils.ts)\n                        \n                        \n                            getUserDummyImage   (libs/.../utils.ts)\n                        \n                        \n                            moment   (libs/.../moment-extend.ts)\n                        \n                        \n                            PermissionGroups   (libs/.../role-permission.model.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    libs/core/src/utils.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            getDummyImage\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (width: number, height: number, letter: string) => {\n    // eslint-disable-next-line @typescript-eslint/restrict-template-expressions\n    return `https://dummyimage.com/${width}x${height}/${Utils.generatedLogoColor()}/ffffff.jpg&text=${letter}`\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getUserDummyImage\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (user: IUser) => {\n    const firstNameLetter = user.firstName\n        ? user.firstName.charAt(0).toUpperCase()\n        : ''\n    if (firstNameLetter) {\n        return getDummyImage(330, 300, firstNameLetter)\n    }\n    const firstCityLetter = user.email.charAt(0).toUpperCase()\n\n    return getDummyImage(330, 300, firstCityLetter)\n}\n                        \n                    \n\n\n            \n        \n\n    libs/core/src/moment-extend.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            moment\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : extendMoment(momentDefault)\n                        \n                    \n\n\n            \n        \n\n    libs/interfaces/src/models/role-permission.model.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            PermissionGroups\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    // Permissions which can be given to any role\n    GENERAL: [\n        PermissionsEnum.ADMIN_DASHBOARD_VIEW,\n        PermissionsEnum.ORG_PAYMENT_VIEW,\n        PermissionsEnum.ORG_PAYMENT_ADD_EDIT,\n        PermissionsEnum.ORG_EXPENSES_VIEW,\n        PermissionsEnum.ORG_EXPENSES_EDIT,\n        PermissionsEnum.ORG_INCOMES_EDIT,\n        PermissionsEnum.ORG_INCOMES_VIEW,\n        PermissionsEnum.ORG_PROPOSALS_EDIT,\n        PermissionsEnum.ORG_PROPOSALS_VIEW,\n        PermissionsEnum.ORG_TIME_OFF_VIEW,\n        PermissionsEnum.ORG_INVITE_VIEW,\n        PermissionsEnum.ORG_INVITE_EDIT,\n        PermissionsEnum.POLICY_VIEW,\n        PermissionsEnum.POLICY_EDIT,\n        PermissionsEnum.TIME_OFF_EDIT,\n        PermissionsEnum.APPROVAL_POLICY_EDIT,\n        PermissionsEnum.APPROVAL_POLICY_VIEW,\n        PermissionsEnum.REQUEST_APPROVAL_EDIT,\n        PermissionsEnum.REQUEST_APPROVAL_VIEW,\n        PermissionsEnum.ACCESS_PRIVATE_PROJECTS,\n        PermissionsEnum.TIMESHEET_EDIT_TIME,\n        PermissionsEnum.INVOICES_VIEW,\n        PermissionsEnum.INVOICES_EDIT,\n        PermissionsEnum.ORG_CANDIDATES_DOCUMENTS_VIEW,\n        PermissionsEnum.ORG_CANDIDATES_TASK_EDIT,\n        PermissionsEnum.ORG_CANDIDATES_INTERVIEW_EDIT,\n        PermissionsEnum.ORG_CANDIDATES_INTERVIEWERS_EDIT,\n        PermissionsEnum.ORG_CANDIDATES_FEEDBACK_EDIT,\n        PermissionsEnum.ORG_INVENTORY_PRODUCT_EDIT,\n        PermissionsEnum.ORG_TAGS_EDIT,\n        PermissionsEnum.VIEW_ALL_EMAILS,\n        PermissionsEnum.ORG_HELP_CENTER_EDIT,\n        PermissionsEnum.EDIT_SALES_PIPELINES,\n        PermissionsEnum.CAN_APPROVE_TIMESHEET,\n        PermissionsEnum.ORG_SPRINT_EDIT,\n        PermissionsEnum.ORG_SPRINT_VIEW,\n        PermissionsEnum.ORG_PROJECT_EDIT,\n        PermissionsEnum.ORG_CONTACT_EDIT,\n        PermissionsEnum.ORG_TEAM_EDIT,\n        PermissionsEnum.ORG_CONTRACT_EDIT,\n        PermissionsEnum.EVENT_TYPES_VIEW,\n        PermissionsEnum.TIME_TRACKER,\n    ],\n\n    // Readonly permissions, are only enabled for admin role\n    ADMINISTRATION: [\n        PermissionsEnum.ORG_EMPLOYEES_VIEW,\n        PermissionsEnum.ORG_EMPLOYEES_EDIT,\n        PermissionsEnum.ORG_CANDIDATES_VIEW,\n        PermissionsEnum.ORG_CANDIDATES_EDIT,\n        PermissionsEnum.ORG_USERS_VIEW,\n        PermissionsEnum.ORG_USERS_EDIT,\n        PermissionsEnum.ALL_ORG_VIEW,\n        PermissionsEnum.ALL_ORG_EDIT,\n        PermissionsEnum.CHANGE_SELECTED_EMPLOYEE,\n        PermissionsEnum.CHANGE_SELECTED_CANDIDATE,\n        PermissionsEnum.CHANGE_SELECTED_ORGANIZATION,\n        PermissionsEnum.CHANGE_ROLES_PERMISSIONS,\n        PermissionsEnum.SUPER_ADMIN_EDIT,\n        PermissionsEnum.PUBLIC_PAGE_EDIT,\n        PermissionsEnum.ORG_INVENTORY_PRODUCT_EDIT,\n        PermissionsEnum.APPROVAL_POLICY_EDIT,\n        PermissionsEnum.APPROVAL_POLICY_VIEW,\n        PermissionsEnum.TIME_OFF_EDIT,\n        PermissionsEnum.REQUEST_APPROVAL_EDIT,\n        PermissionsEnum.REQUEST_APPROVAL_VIEW,\n        PermissionsEnum.TENANT_ADD_EXISTING_USER,\n    ],\n}\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
