var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/interfaces/APIResponse.html",[0,0.241,1,1.143]],["body/interfaces/APIResponse.html",[0,0.471,1,2.009,2,0.691,3,0.107,4,0.095,5,0.095,6,0.842,7,0.119,8,0.634,9,1.744,10,1.631,11,1.631,12,1.682,13,1.697,14,1.839,15,1.839,16,1.767,17,1.568,18,1.329,19,0.398,20,0.016,21,1.203,22,1.767,23,0.922,24,1.697,25,0.132,26,0.35,27,0.298,28,0.008,29,1.219,30,1.219,31,1.219,32,1.219,33,1.219,34,1.219,35,1.219,36,1.449,37,2.151,38,0.913,39,1.629,40,0.913,41,0.913,42,0.913,43,0.913,44,0.913,45,0.913,46,0.842,47,0.913,48,0.913,49,0.913,50,2.169,51,0.913,52,0.522,53,1.374,54,0.913,55,1.525,56,0.913,57,0.913,58,0.913,59,0.913,60,0.913,61,0.913,62,0.913,63,0.913,64,0.913,65,0.913,66,0.913,67,1.653,68,1.374,69,0.913,70,0.913,71,0.913,72,1.653,73,0.913,74,0.913,75,1.374,76,0.913,77,0.913,78,0.913,79,0.913,80,0.913,81,1.697,82,0.913,83,1.268,84,1.268,85,0.913,86,0.913,87,0.913,88,0.913,89,0.913,90,0.913,91,0.913,92,0.913,93,0.913,94,1.374,95,0.913,96,0.913,97,0.913,98,0.842,99,0.913,100,0.913,101,1.697,102,0.913,103,0.913,104,0.913,105,0.913,106,0.913,107,0.913,108,0.913,109,0.913,110,0.809,111,0.913,112,0.913,113,0.913,114,0.913,115,0.317,116,0.913,117,0.913,118,0.913,119,0.913,120,0.913,121,0.842,122,1.525,123,0.913,124,0.913,125,0.913,126,1.268,127,1.268,128,0.778,129,0.913,130,0.913,131,0.691,132,0.008,133,0.005]],["title/controllers/AppController.html",[134,2.023,135,2.786]],["body/controllers/AppController.html",[3,0.207,4,0.184,5,0.184,7,0.231,20,0.016,23,0.751,25,0.337,26,0.679,27,0.207,28,0.01,132,0.012,133,0.01,134,2.777,135,4.673,136,2.933,137,4.647,138,1.996,139,6.388,140,1.844,141,1.054,142,5.362,143,1.633,144,2.092,145,2.092,146,3.309,147,3.543,148,3.543,149,3.824,150,1.844,151,4.366,152,4.647,153,5.362,154,5.362,155,0.33,156,3.108,157,3.543,158,4.176,159,1.77,160,1.844,161,5.362]],["title/interfaces/AppLaunchAction.html",[0,0.241,46,1.19]],["body/interfaces/AppLaunchAction.html",[0,0.474,1,1.993,2,0.727,3,0.112,4,0.1,5,0.1,6,0.886,7,0.125,8,0.659,9,1.124,10,0.851,11,0.851,12,1.216,13,0.886,14,0.96,15,0.96,16,0.922,17,0.818,18,1.323,19,0.364,20,0.016,21,0.699,22,1.37,23,0.925,24,1.317,25,0.138,26,0.368,27,0.3,28,0.008,29,1.265,30,1.265,31,1.265,32,1.265,33,1.265,34,1.265,35,1.265,36,1.485,37,2.187,38,0.96,39,1.656,40,0.96,41,0.96,42,0.96,43,0.96,44,0.96,45,0.96,46,1.317,47,1.886,48,1.886,49,1.886,50,2.218,51,1.886,52,0.549,53,1.427,54,0.96,55,1.572,56,0.96,57,0.96,58,0.96,59,0.96,60,0.96,61,0.96,62,0.96,63,0.96,64,0.96,65,0.96,66,0.96,67,1.703,68,1.427,69,0.96,70,0.96,71,0.96,72,1.703,73,0.96,74,0.96,75,1.427,76,0.96,77,0.96,78,0.96,79,0.96,80,0.96,81,1.74,82,0.96,83,1.317,84,1.317,85,0.96,86,0.96,87,0.96,88,0.96,89,0.96,90,0.96,91,0.96,92,0.96,93,0.96,94,1.427,95,0.96,96,0.96,97,0.96,98,0.886,99,0.96,100,0.96,101,1.74,102,0.96,103,0.96,104,0.96,105,0.96,106,0.96,107,0.96,108,0.96,109,0.96,110,0.851,111,0.96,112,0.96,113,0.96,114,0.96,115,0.333,116,0.96,117,0.96,118,0.96,119,0.96,120,0.96,121,0.886,122,1.572,123,0.96,124,0.96,125,0.96,126,1.317,127,1.317,128,0.818,129,0.96,130,0.96,131,0.727,132,0.008,133,0.006]],["title/modules/AppModule.html",[162,2.023,163,2.786]],["body/modules/AppModule.html",[3,0.136,4,0.121,5,0.121,9,0.915,19,0.282,20,0.016,23,0.659,25,0.365,26,0.445,27,0.192,28,0.007,52,0.937,115,0.403,132,0.009,133,0.007,135,4.1,136,2.714,138,1.071,141,0.976,143,1.511,144,1.372,145,1.372,146,2.17,147,2.324,148,2.324,151,4.217,152,3.048,155,0.217,162,3.234,163,5.462,164,2.039,165,2.039,166,2.324,167,2.324,168,2.039,169,3.799,170,2.324,171,3.048,172,3.048,173,3.048,174,4.515,175,4.515,176,4.515,177,3.278,178,2.324,179,2.324,180,2.739,181,4.1,182,3.864,183,4.983,184,4.3,185,3.517,186,1.26,187,4.477,188,2.17,189,4.453,190,5.707,191,3.517,192,1.822,193,3.145,194,3.333,195,3.517,196,3.517,197,3.517,198,3.517,199,3.517,200,2.739,201,3.517,202,2.739,203,4.962,204,2.739,205,2.739,206,2.17,207,3.517,208,3.048,209,3.517,210,3.517,211,1.935,212,2.508,213,3.517,214,3.517,215,2.508,216,3.517,217,3.333,218,2.739,219,3.048,220,3.539,221,3.048,222,3.048,223,3.048,224,3.048,225,3.048,226,3.048,227,3.048,228,3.048,229,3.048,230,3.048,231,3.048,232,2.739,233,2.739,234,3.048,235,3.048,236,2.739,237,3.048,238,3.048,239,3.048,240,2.17,241,3.048,242,3.048,243,3.048,244,3.048,245,3.048,246,3.048,247,3.048,248,3.048,249,3.517,250,3.517,251,3.048,252,3.517,253,1.372,254,3.517,255,3.048,256,3.517,257,3.048,258,3.048]],["title/injectables/AppService.html",[151,2.411,259,1.238]],["body/injectables/AppService.html",[3,0.223,4,0.198,5,0.198,7,0.249,20,0.015,23,0.784,25,0.275,26,0.73,27,0.223,28,0.011,132,0.013,133,0.011,138,2.085,139,6.545,141,1.134,143,1.756,151,4.224,155,0.355,160,1.982,259,2.17,260,2.986,261,4.996,262,5.766,263,5.766,264,5.766]],["title/classes/Base.html",[155,0.241,265,2.137]],["body/classes/Base.html",[0,0.248,3,0.156,4,0.138,5,0.138,7,0.174,8,0.831,9,1.928,18,1.028,19,0.422,20,0.015,23,0.835,25,0.26,27,0.239,28,0.008,36,1.607,110,2.298,131,1.363,132,0.01,133,0.008,140,2.276,141,1.302,150,1.387,155,0.336,159,2.04,253,2.127,265,2.983,266,1.445,267,2.876,268,3.582,269,4.083,270,3.099,271,3.099,272,2.582,273,3.099,274,4.813,275,5.552,276,5.552,277,3.336,278,5.552,279,5.552,280,4.033,281,4.033,282,4.033,283,4.033,284,3.495,285,4.033,286,4.033,287,4.033,288,4.033,289,3.889,290,3.099,291,3.603,292,3.603,293,3.603,294,3.603,295,1.507,296,3.365,297,3.14,298,3.889,299,3.14,300,4.813]],["title/classes/Cat.html",[155,0.241,211,1.524]],["body/classes/Cat.html",[3,0.125,4,0.111,5,0.111,7,0.237,8,0.713,18,1.14,19,0.423,20,0.016,23,0.689,25,0.287,27,0.125,28,0.006,52,1.325,115,0.819,128,1.546,132,0.009,133,0.006,140,2.459,141,1.446,144,1.264,145,1.264,150,1.114,155,0.288,156,3.855,159,1.814,211,2.832,215,2.311,220,1.679,266,1.161,270,2.987,271,2.987,272,2.674,273,2.987,277,3.399,290,3.113,291,3.093,292,3.63,293,3.63,294,3.63,295,1.211,301,2.809,302,4.551,303,4.551,304,2.702,305,4.762,306,3.491,307,3.241,308,4.681,309,3.241,310,3.338,311,3.241,312,4.681,313,3.241,314,3.241,315,3.241,316,3.093,317,2.702,318,3.241,319,4.057,320,2.809,321,3.241,322,3.241,323,4.681,324,4.057,325,3.093,326,3.241,327,4.057,328,3.241,329,3.241,330,3.241,331,5.215,332,3.63,333,4.762,334,2.809,335,3.241,336,4.279,337,3.338,338,3.241,339,3.241,340,1.594,341,5.764,342,3.39,343,3.241,344,3.241,345,1.594,346,2.809,347,2.809,348,2.141,349,3.093,350,2.6,351,2.809,352,2.713,353,1.879,354,3.241,355,2.311,356,3.241,357,3.241,358,3.241,359,2.809,360,3.645,361,1.679,362,2.809,363,3.093,364,2.809,365,2.809]],["title/classes/CatRepository.html",[155,0.241,366,2.411]],["body/classes/CatRepository.html",[3,0.201,4,0.178,5,0.178,7,0.224,20,0.015,25,0.306,27,0.201,28,0.01,131,1.606,132,0.012,133,0.01,138,1.957,141,1.021,143,1.582,144,2.026,145,2.026,155,0.32,160,1.786,192,2.69,193,2.841,194,3.011,211,2.721,240,3.965,266,1.861,295,1.941,345,2.554,348,3.431,366,3.965,367,4.501,368,4.609,369,3.613,370,6.317,371,5.194,372,4.582,373,4.245,374,4.582,375,4.501,376,4.044,377,5.194,378,5.194,379,6.046,380,3.703,381,4.501,382,3.431]],["title/controllers/CatsController.html",[134,2.023,383,2.786]],["body/controllers/CatsController.html",[3,0.111,4,0.098,5,0.098,7,0.123,9,1.713,19,0.385,20,0.016,25,0.323,26,0.362,27,0.111,28,0.005,52,0.805,115,0.755,132,0.008,133,0.005,134,1.48,136,1.563,138,1.3,140,2.329,141,1.332,143,2.063,144,1.114,145,1.114,146,1.763,147,1.888,148,1.888,149,2.037,150,0.982,155,0.176,156,2.473,157,1.888,160,2.381,186,2.361,211,2.947,215,2.037,220,2.21,253,1.114,265,1.563,268,1.656,304,1.405,348,4.201,363,1.888,369,4.035,383,3.043,384,2.476,385,4.039,386,5.107,387,5.107,388,4.267,389,4.267,390,4.267,391,5.107,392,5.107,393,2.225,394,3.374,395,2.857,396,2.857,397,2.857,398,7.738,399,5.665,400,7.455,401,2.857,402,7.394,403,2.857,404,4.272,405,2.857,406,2.857,407,2.857,408,2.857,409,2.857,410,2.857,411,2.857,412,2.857,413,2.857,414,2.857,415,3.74,416,2.857,417,2.225,418,3.323,419,2.476,420,3.374,421,6.062,422,6.062,423,1.888,424,5.107,425,2.857,426,2.633,427,2.476,428,3.74,429,2.857,430,2.476,431,2.857,432,2.857,433,2.857,434,2.476,435,2.819,436,2.476,437,2.633,438,2.476,439,2.225,440,2.476,441,2.476,442,2.857,443,2.476,444,2.225,445,2.857,446,2.857,447,2.857,448,2.857,449,2.857,450,2.857,451,2.857,452,2.857,453,2.857,454,2.857,455,2.225,456,2.476,457,2.476]],["title/modules/CatsModule.html",[162,2.023,174,2.581]],["body/modules/CatsModule.html",[3,0.195,4,0.173,5,0.173,20,0.015,25,0.366,26,0.637,27,0.195,28,0.01,52,0.95,132,0.012,133,0.01,136,3.447,155,0.31,162,3.563,164,2.919,165,2.919,166,3.327,167,3.327,168,2.919,169,4.545,170,4.545,174,5.077,177,4.164,178,3.327,179,3.327,182,3.921,205,3.921,206,3.107,215,3.591,366,3.107,383,4.906,426,4.921,427,4.364,458,4.364,459,4.364,460,4.364,461,5.035,462,3.107,463,5.035,464,5.035,465,4.364,466,5.035]],["title/injectables/CatsService.html",[259,1.238,426,2.411]],["body/injectables/CatsService.html",[3,0.185,4,0.164,5,0.164,7,0.206,8,0.929,9,1.242,19,0.347,20,0.016,25,0.356,26,0.605,27,0.185,28,0.009,115,0.547,131,1.524,132,0.012,133,0.009,138,1.857,140,1.643,141,1.32,143,1.455,155,0.294,160,1.643,186,1.712,206,2.948,211,2.619,240,3.762,259,1.933,260,2.474,295,2.278,349,4.436,366,4.509,369,3.478,372,4.348,373,4.028,374,4.348,376,3.72,385,5.044,423,3.156,426,3.762,430,4.14,465,4.14,467,4.14,468,5.819,469,6.13,470,2.769,471,4.14,472,4.778,473,4.778,474,4.778,475,4.778,476,4.14,477,4.778,478,4.14,479,4.14]],["title/interfaces/Comment.html",[0,0.241,122,1.19]],["body/interfaces/Comment.html",[0,0.474,1,1.989,2,0.722,3,0.112,4,0.099,5,0.099,6,0.88,7,0.125,8,0.655,10,0.845,11,0.845,12,1.21,13,0.88,14,0.953,15,0.953,16,0.916,17,0.812,18,1.326,19,0.376,20,0.016,21,0.694,22,1.364,23,0.926,24,1.31,25,0.138,26,0.366,27,0.3,28,0.008,29,1.259,30,1.259,31,1.259,32,1.259,33,1.259,34,1.259,35,1.259,36,1.481,37,2.183,38,0.953,39,1.653,40,0.953,41,0.953,42,0.953,43,0.953,44,0.953,45,0.953,46,0.88,47,0.953,48,0.953,49,0.953,50,2.186,51,0.953,52,0.545,53,1.42,54,0.953,55,1.565,56,0.953,57,0.953,58,0.953,59,0.953,60,0.953,61,0.953,62,0.953,63,0.953,64,0.953,65,0.953,66,0.953,67,1.696,68,1.42,69,0.953,70,0.953,71,0.953,72,1.696,73,0.953,74,0.953,75,1.42,76,0.953,77,0.953,78,0.953,79,0.953,80,0.953,81,1.734,82,0.953,83,1.31,84,1.31,85,0.953,86,0.953,87,0.953,88,0.953,89,0.953,90,0.953,91,0.953,92,0.953,93,0.953,94,2.01,95,0.953,96,0.953,97,0.953,98,0.88,99,0.953,100,0.953,101,1.734,102,0.953,103,0.953,104,0.953,105,0.953,106,0.953,107,0.953,108,0.953,109,0.953,110,0.845,111,0.953,112,0.953,113,0.953,114,0.953,115,0.331,116,0.953,117,0.953,118,0.953,119,0.953,120,0.953,121,0.88,122,2.014,123,1.88,124,1.88,125,1.88,126,1.31,127,1.31,128,0.812,129,0.953,130,0.953,131,0.722,132,0.008,133,0.005]],["title/interfaces/Comments.html",[0,0.241,126,1.19]],["body/interfaces/Comments.html",[0,0.476,1,2.011,2,0.75,3,0.116,4,0.103,5,0.103,6,0.914,7,0.129,8,0.674,10,0.878,11,0.878,12,1.245,13,0.914,14,0.991,15,0.991,16,0.951,17,0.844,18,1.321,19,0.299,20,0.016,21,0.721,22,1.403,23,0.923,24,1.348,25,0.143,26,0.38,27,0.301,28,0.008,29,1.295,30,1.295,31,1.295,32,1.295,33,1.295,34,1.295,35,1.295,36,1.509,37,2.21,38,0.991,39,1.673,40,0.991,41,0.991,42,0.991,43,0.991,44,0.991,45,0.991,46,0.914,47,0.991,48,0.991,49,0.991,50,2.2,51,0.991,52,0.566,53,1.461,54,0.991,55,1.601,56,0.991,57,0.991,58,0.991,59,0.991,60,0.991,61,0.991,62,0.991,63,0.991,64,0.991,65,0.991,66,0.991,67,1.735,68,1.461,69,0.991,70,0.991,71,0.991,72,1.735,73,0.991,74,0.991,75,1.461,76,0.991,77,0.991,78,0.991,79,0.991,80,0.991,81,1.767,82,0.991,83,1.348,84,1.348,85,0.991,86,0.991,87,0.991,88,0.991,89,0.991,90,0.991,91,0.991,92,0.991,93,0.991,94,1.461,95,0.991,96,0.991,97,0.991,98,0.914,99,0.991,100,0.991,101,1.767,102,0.991,103,0.991,104,0.991,105,0.991,106,0.991,107,0.991,108,0.991,109,0.991,110,0.878,111,0.991,112,0.991,113,0.991,114,0.991,115,0.344,116,0.991,117,0.991,118,0.991,119,0.991,120,0.991,121,0.914,122,1.884,123,0.991,124,0.991,125,0.991,126,1.972,127,1.348,128,0.844,129,0.991,130,0.991,131,0.75,132,0.008,133,0.006]],["title/classes/CreateCatDto.html",[155,0.241,404,2.411]],["body/classes/CreateCatDto.html",[3,0.138,4,0.123,5,0.123,7,0.154,8,0.764,18,1.197,19,0.377,20,0.015,23,0.838,25,0.276,27,0.224,28,0.007,115,0.838,128,1.769,132,0.01,133,0.007,140,2.161,141,1.236,150,1.227,155,0.408,159,2.549,211,2.951,266,1.279,270,1.671,271,1.671,272,2.452,273,1.671,277,3.614,290,3.569,302,5.218,303,5.218,304,3.091,306,3.438,310,4.483,337,4.133,340,1.756,350,3.054,352,3.839,353,3.36,355,4.133,404,3.094,415,2.203,428,2.203,480,2.546,481,3.57,482,3.57,483,3.57,484,3.57,485,3.57,486,3.57,487,3.57,488,3.57,489,3.879,490,4.895,491,4.086,492,2.203,493,4.442,494,4.514,495,3.644,496,2.203,497,1.953,498,3.879,499,3.879]],["title/classes/CreateUserDto.html",[155,0.241,500,2.411]],["body/classes/CreateUserDto.html",[3,0.184,4,0.163,5,0.163,7,0.205,8,0.925,18,0.789,19,0.345,20,0.015,23,0.835,25,0.319,27,0.259,28,0.009,52,1.332,115,0.901,132,0.012,133,0.009,140,1.632,141,0.933,150,1.632,155,0.449,159,2.329,266,1.701,270,2.221,271,2.221,272,1.851,273,2.221,277,3.302,290,3.413,304,3.47,306,2.596,340,2.334,350,2.728,353,2.751,489,4.354,491,4.13,492,2.928,493,4.13,495,3.519,496,2.928,497,2.596,498,3.746,499,3.746,500,3.746,501,3.384,502,4.746,503,4.746,504,2.928,505,2.928]],["title/modules/CronModule.html",[162,2.023,175,2.581]],["body/modules/CronModule.html",[3,0.216,4,0.192,5,0.192,20,0.015,25,0.32,26,0.707,27,0.216,28,0.011,132,0.013,133,0.011,155,0.344,162,3.731,164,3.238,165,3.238,166,3.69,167,3.69,168,3.238,169,4.759,170,3.69,175,5.13,177,4.438,178,3.69,179,3.69,506,4.84,507,4.84,508,5.13,509,5.586,510,5.586]],["title/injectables/CronService.html",[259,1.238,508,2.581]],["body/injectables/CronService.html",[3,0.174,4,0.154,5,0.154,7,0.194,8,0.894,10,2.024,18,0.748,19,0.256,20,0.016,25,0.279,26,0.569,27,0.174,28,0.009,132,0.011,133,0.009,138,1.786,140,2.243,141,1.41,143,1.987,155,0.277,156,3.782,159,2.154,189,4.652,202,3.502,259,1.859,260,2.329,316,3.874,317,2.884,349,2.971,352,2.607,508,3.874,511,3.897,512,5.654,513,6.914,514,6.914,515,6.914,516,6.914,517,5.864,518,4.497,519,5.864,520,4.497,521,5.864,522,4.497,523,4.566,524,4.497,525,3.874,526,5.864,527,4.497,528,4.497,529,4.497,530,3.897,531,5.864,532,4.497,533,4.497,534,4.497,535,4.497,536,3.207,537,5.864,538,3.897,539,5.864,540,4.497,541,3.502]],["title/classes/CrudController.html",[155,0.241,420,2.581]],["body/classes/CrudController.html",[1,2.113,3,0.103,4,0.091,5,0.091,7,0.115,9,1.609,19,0.386,20,0.016,21,0.971,23,0.778,24,0.81,25,0.316,26,0.337,27,0.103,28,0.005,39,1.365,115,0.709,132,0.008,133,0.005,138,1.231,140,2.02,141,1.217,143,1.79,150,0.914,155,0.164,158,2.071,159,0.878,160,2.02,186,2.217,188,1.641,265,1.454,266,0.953,272,2.508,295,0.994,296,1.641,298,3.895,325,4.573,342,3.818,350,3.124,361,3.585,369,3.811,373,1.757,393,4.575,394,3.882,417,3.148,418,4.818,420,2.67,435,3.609,437,3.625,455,4.575,470,1.541,525,2.67,542,2.304,543,3.148,544,4.042,545,3.503,546,2.659,547,3.371,548,2.659,549,2.882,550,1.896,551,3.895,552,4.84,553,5.463,554,4.901,555,6.188,556,2.659,557,5.463,558,6.188,559,5.463,560,5.463,561,4.734,562,2.659,563,2.659,564,2.071,565,2.659,566,2.659,567,2.659,568,2.882,569,3.895,570,4.734,571,2.659,572,5.573,573,2.659,574,2.659,575,2.071,576,2.659,577,2.659,578,4.042,579,2.659,580,2.659,581,2.071,582,3.895,583,4.042,584,2.659,585,2.659,586,2.659,587,2.659,588,2.659,589,1.896,590,2.659,591,4.042,592,1.896,593,1.896,594,2.304,595,2.304,596,2.211,597,2.882,598,2.304,599,5.555,600,2.659,601,2.659,602,2.659,603,2.659,604,4.042,605,2.659,606,4.89,607,2.659,608,2.659,609,2.659,610,4.042,611,2.659,612,4.042,613,3.503,614,2.659,615,2.659,616,2.659,617,2.659,618,4.042,619,2.659,620,2.659,621,2.659,622,2.659,623,2.659,624,2.659,625,2.659,626,2.659,627,2.659,628,2.659]],["title/classes/CrudService.html",[155,0.241,549,2.786]],["body/classes/CrudService.html",[3,0.087,4,0.077,5,0.077,7,0.097,8,0.54,9,1.677,10,1.037,12,0.996,17,0.996,18,1.171,19,0.375,20,0.016,23,0.815,25,0.321,26,0.284,27,0.087,28,0.004,115,0.739,132,0.007,133,0.004,138,1.079,141,1.324,143,1.964,144,1.712,145,1.712,146,1.384,155,0.138,159,0.74,160,2.389,186,2.311,187,1.746,188,3.077,192,1.834,193,1.937,194,2.053,217,3.345,220,1.161,253,1.381,265,1.226,266,0.804,272,2.251,295,0.838,296,1.384,332,1.481,342,1.384,345,2.159,361,3.721,368,3.813,369,3.913,380,4.467,382,1.481,394,2.9,435,2.34,437,2.709,444,1.746,470,1.3,525,3.587,543,2.758,545,3.069,547,2.709,549,2.526,550,2.526,551,3.556,552,5.168,554,4.139,568,2.526,572,3.804,575,2.758,581,1.746,582,3.556,589,1.599,592,1.599,593,1.599,594,1.943,595,1.943,596,1.226,597,1.599,629,1.943,630,4.39,631,5.772,632,3.418,633,4.39,634,4.39,635,1.943,636,3.542,637,2.758,638,4.706,639,2.242,640,2.242,641,2.242,642,5.412,643,2.242,644,3.542,645,2.242,646,3.542,647,3.542,648,3.542,649,3.542,650,2.242,651,1.943,652,5.412,653,2.242,654,2.242,655,2.242,656,3.542,657,2.242,658,2.242,659,4.987,660,2.242,661,2.242,662,3.542,663,2.242,664,1.943,665,3.069,666,1.226,667,2.242,668,1.481,669,1.746,670,1.746,671,1.599,672,5.772,673,1.481,674,2.242,675,3.542,676,2.242,677,3.542,678,2.526,679,2.242,680,2.242,681,2.758,682,4.322,683,2.242,684,4.987,685,3.542,686,3.542,687,2.242,688,2.242,689,2.242,690,2.242,691,2.242,692,4.987,693,3.542,694,3.542,695,2.242,696,3.542,697,2.242,698,2.242,699,2.242,700,3.804,701,3.804,702,3.542,703,3.542,704,2.242,705,2.242,706,2.242,707,2.242,708,2.242,709,2.242,710,2.242]],["title/injectables/DBHelper.html",[259,1.238,711,3.042]],["body/injectables/DBHelper.html",[3,0.174,4,0.155,5,0.155,7,0.194,8,0.895,9,1.698,19,0.394,20,0.016,21,1.083,23,0.87,25,0.311,26,0.57,27,0.174,28,0.009,115,0.748,132,0.011,133,0.009,138,1.788,141,1.361,143,1.788,155,0.278,158,3.509,160,2.019,186,2.34,217,4.011,259,1.861,260,2.334,295,1.684,336,3.509,352,2.612,360,4.572,368,4.861,369,3.382,380,3.214,470,2.612,570,5.997,635,3.906,711,4.572,712,3.906,713,6.531,714,5.872,715,5.872,716,5.872,717,4.507,718,5.872,719,6.92,720,4.507,721,4.507,722,3.906,723,4.507,724,4.507,725,4.507,726,6.531,727,5.872,728,4.507,729,4.507,730,4.507,731,4.507,732,4.507,733,4.507,734,4.507,735,4.507]],["title/injectables/ExcludeNullUndefinedInterceptor.html",[259,1.238,736,3.042]],["body/injectables/ExcludeNullUndefinedInterceptor.html",[3,0.187,4,0.166,5,0.166,7,0.208,9,1.256,19,0.275,20,0.016,23,0.703,25,0.321,26,0.612,27,0.187,28,0.009,36,1.597,115,0.554,132,0.012,133,0.009,138,1.87,141,0.95,143,1.471,144,1.884,145,1.884,155,0.298,160,2.111,186,1.731,192,2.502,193,2.643,194,2.8,253,1.884,259,1.947,260,2.502,317,3.493,325,4.057,345,2.376,350,1.969,666,2.643,668,3.192,736,4.782,737,5.321,738,4.187,739,6.141,740,5.321,741,6.141,742,6.141,743,6.141,744,4.379,745,4.782,746,4.383,747,4.383,748,5.065,749,4.831,750,2.981,751,4.165,752,4.379,753,4.782,754,4.187]],["title/interfaces/Follower.html",[0,0.241,127,1.19]],["body/interfaces/Follower.html",[0,0.474,1,1.989,2,0.722,3,0.112,4,0.099,5,0.099,6,0.88,7,0.125,8,0.655,10,0.845,11,0.845,12,1.21,13,0.88,14,0.953,15,0.953,16,0.916,17,0.812,18,1.322,19,0.376,20,0.016,21,0.694,22,1.364,23,0.925,24,1.31,25,0.138,26,0.366,27,0.3,28,0.008,29,1.259,30,1.259,31,1.259,32,1.259,33,1.259,34,1.259,35,1.259,36,1.481,37,2.183,38,0.953,39,1.653,40,0.953,41,0.953,42,0.953,43,0.953,44,0.953,45,0.953,46,0.88,47,0.953,48,0.953,49,0.953,50,2.239,51,0.953,52,0.545,53,1.42,54,0.953,55,1.565,56,0.953,57,0.953,58,0.953,59,0.953,60,0.953,61,0.953,62,0.953,63,0.953,64,0.953,65,0.953,66,0.953,67,2.107,68,1.42,69,0.953,70,0.953,71,0.953,72,2.107,73,0.953,74,0.953,75,1.42,76,0.953,77,0.953,78,0.953,79,0.953,80,0.953,81,1.734,82,0.953,83,1.31,84,1.31,85,0.953,86,0.953,87,0.953,88,0.953,89,0.953,90,0.953,91,0.953,92,0.953,93,0.953,94,1.42,95,0.953,96,0.953,97,0.953,98,0.88,99,0.953,100,0.953,101,1.734,102,0.953,103,0.953,104,0.953,105,0.953,106,0.953,107,0.953,108,0.953,109,0.953,110,0.845,111,0.953,112,0.953,113,0.953,114,0.953,115,0.331,116,0.953,117,0.953,118,0.953,119,0.953,120,0.953,121,0.88,122,1.565,123,0.953,124,0.953,125,0.953,126,1.31,127,1.565,128,1.602,129,1.88,130,1.88,131,0.722,132,0.008,133,0.005]],["title/interfaces/Following.html",[0,0.241,55,1.19]],["body/interfaces/Following.html",[0,0.477,1,2.018,2,0.759,3,0.117,4,0.104,5,0.104,6,0.924,10,0.888,11,0.888,12,1.255,13,0.924,14,1.002,15,1.002,16,0.962,17,0.854,18,1.323,19,0.254,20,0.016,21,0.729,22,1.415,23,0.924,24,1.359,25,0.145,26,0.384,27,0.302,28,0.008,29,1.306,30,1.306,31,1.306,32,1.306,33,1.306,34,1.306,35,1.306,36,1.517,37,2.218,38,1.002,39,1.679,40,1.002,41,1.002,42,1.002,43,1.002,44,1.002,45,1.002,46,0.924,47,1.002,48,1.002,49,1.002,50,2.204,51,1.002,52,0.573,53,1.473,54,1.002,55,1.777,56,1.002,57,1.002,58,1.002,59,1.002,60,1.002,61,1.002,62,1.002,63,1.002,64,1.002,65,1.002,66,1.002,67,1.747,68,1.473,69,1.002,70,1.002,71,1.002,72,1.747,73,1.002,74,1.002,75,1.473,76,1.002,77,1.002,78,1.002,79,1.002,80,1.002,81,1.777,82,1.002,83,1.359,84,1.359,85,1.002,86,1.002,87,1.002,88,1.002,89,1.002,90,1.002,91,1.002,92,1.002,93,1.002,94,1.473,95,1.002,96,1.002,97,1.002,98,0.924,99,1.002,100,1.002,101,1.777,102,1.002,103,1.002,104,1.002,105,1.002,106,1.002,107,1.002,108,1.002,109,1.002,110,0.888,111,1.002,112,1.002,113,1.002,114,1.002,115,0.348,116,1.002,117,1.002,118,1.002,119,1.002,120,1.002,121,0.924,122,1.612,123,1.002,124,1.002,125,1.002,126,1.359,127,1.612,128,0.854,129,1.002,130,1.002,131,1.115,132,0.008,133,0.006]],["title/interfaces/GetAppLaunchData.html",[0,0.241,29,1.143]],["body/interfaces/GetAppLaunchData.html",[0,0.476,1,2.086,2,0.747,3,0.116,4,0.103,5,0.103,6,0.91,7,0.129,8,0.672,10,0.875,11,0.875,12,1.241,13,0.91,14,0.986,15,0.986,16,0.947,17,0.841,18,1.321,19,0.298,20,0.016,21,0.718,22,1.399,23,0.923,24,1.344,25,0.142,26,0.378,27,0.301,28,0.008,29,1.535,30,1.291,31,1.291,32,1.291,33,1.291,34,1.291,35,1.291,36,1.506,37,2.352,38,0.986,39,1.781,40,0.986,41,0.986,42,0.986,43,0.986,44,0.986,45,0.986,46,0.91,47,0.986,48,0.986,49,0.986,50,2.199,51,0.986,52,0.564,53,1.456,54,0.986,55,1.597,56,0.986,57,0.986,58,0.986,59,0.986,60,0.986,61,0.986,62,0.986,63,0.986,64,0.986,65,0.986,66,0.986,67,1.731,68,1.456,69,0.986,70,0.986,71,0.986,72,1.731,73,0.986,74,0.986,75,1.456,76,0.986,77,0.986,78,0.986,79,0.986,80,0.986,81,1.764,82,0.986,83,1.344,84,1.344,85,0.986,86,0.986,87,0.986,88,0.986,89,0.986,90,0.986,91,0.986,92,0.986,93,0.986,94,1.456,95,0.986,96,0.986,97,0.986,98,0.91,99,0.986,100,0.986,101,1.764,102,0.986,103,0.986,104,0.986,105,0.986,106,0.986,107,0.986,108,0.986,109,0.986,110,0.875,111,0.986,112,0.986,113,0.986,114,0.986,115,0.342,116,0.986,117,0.986,118,0.986,119,0.986,120,0.986,121,0.91,122,1.597,123,0.986,124,0.986,125,0.986,126,1.344,127,1.344,128,0.841,129,0.986,130,0.986,131,0.747,132,0.008,133,0.006]],["title/classes/GetCatResponseDto.html",[155,0.241,428,2.411]],["body/classes/GetCatResponseDto.html",[3,0.132,4,0.117,5,0.117,7,0.147,8,0.738,18,1.203,19,0.411,20,0.015,23,0.841,25,0.269,27,0.218,28,0.006,115,0.829,128,1.731,132,0.009,133,0.006,140,2.445,141,1.398,150,1.169,155,0.401,159,2.296,211,2.925,266,1.218,270,2.641,271,2.641,272,2.636,273,2.641,274,2.648,277,3.589,290,3.54,302,5.159,303,5.159,304,3.025,306,3.364,310,4.386,337,4.025,340,1.672,350,3.026,352,4.032,353,3.566,355,4.386,404,2.098,415,2.098,428,2.989,480,2.425,489,3.796,490,4.79,491,4.012,492,2.098,493,4.387,494,4.395,495,3.566,496,2.098,497,1.86,498,3.796,499,3.796,755,3.4,756,3.4,757,4.891,758,3.4,759,3.4,760,3.4,761,3.4,762,3.4,763,3.4]],["title/interfaces/GetComments.html",[0,0.241,32,1.143]],["body/interfaces/GetComments.html",[0,0.476,1,2.086,2,0.747,3,0.116,4,0.103,5,0.103,6,0.91,7,0.129,8,0.672,10,0.875,11,0.875,12,1.241,13,0.91,14,0.986,15,0.986,16,0.947,17,0.841,18,1.321,19,0.298,20,0.016,21,0.718,22,1.399,23,0.923,24,1.344,25,0.142,26,0.378,27,0.301,28,0.008,29,1.291,30,1.291,31,1.291,32,1.535,33,1.291,34,1.291,35,1.291,36,1.506,37,2.352,38,0.986,39,1.781,40,0.986,41,0.986,42,0.986,43,0.986,44,0.986,45,0.986,46,0.91,47,0.986,48,0.986,49,0.986,50,2.199,51,0.986,52,0.564,53,1.456,54,0.986,55,1.597,56,0.986,57,0.986,58,0.986,59,0.986,60,0.986,61,0.986,62,0.986,63,0.986,64,0.986,65,0.986,66,0.986,67,1.731,68,1.456,69,0.986,70,0.986,71,0.986,72,1.731,73,0.986,74,0.986,75,1.456,76,0.986,77,0.986,78,0.986,79,0.986,80,0.986,81,1.764,82,0.986,83,1.344,84,1.344,85,0.986,86,0.986,87,0.986,88,0.986,89,0.986,90,0.986,91,0.986,92,0.986,93,0.986,94,1.456,95,0.986,96,0.986,97,0.986,98,0.91,99,0.986,100,0.986,101,1.764,102,0.986,103,0.986,104,0.986,105,0.986,106,0.986,107,0.986,108,0.986,109,0.986,110,0.875,111,0.986,112,0.986,113,0.986,114,0.986,115,0.342,116,0.986,117,0.986,118,0.986,119,0.986,120,0.986,121,0.91,122,1.597,123,0.986,124,0.986,125,0.986,126,1.344,127,1.344,128,0.841,129,0.986,130,0.986,131,0.747,132,0.008,133,0.006]],["title/interfaces/GetFollowers.html",[0,0.241,34,1.143]],["body/interfaces/GetFollowers.html",[0,0.476,1,2.086,2,0.747,3,0.116,4,0.103,5,0.103,6,0.91,7,0.129,8,0.672,10,0.875,11,0.875,12,1.241,13,0.91,14,0.986,15,0.986,16,0.947,17,0.841,18,1.321,19,0.298,20,0.016,21,0.718,22,1.399,23,0.923,24,1.344,25,0.142,26,0.378,27,0.301,28,0.008,29,1.291,30,1.291,31,1.291,32,1.291,33,1.291,34,1.535,35,1.291,36,1.506,37,2.352,38,0.986,39,1.781,40,0.986,41,0.986,42,0.986,43,0.986,44,0.986,45,0.986,46,0.91,47,0.986,48,0.986,49,0.986,50,2.199,51,0.986,52,0.564,53,1.456,54,0.986,55,1.597,56,0.986,57,0.986,58,0.986,59,0.986,60,0.986,61,0.986,62,0.986,63,0.986,64,0.986,65,0.986,66,0.986,67,1.731,68,1.456,69,0.986,70,0.986,71,0.986,72,1.731,73,0.986,74,0.986,75,1.456,76,0.986,77,0.986,78,0.986,79,0.986,80,0.986,81,1.764,82,0.986,83,1.344,84,1.344,85,0.986,86,0.986,87,0.986,88,0.986,89,0.986,90,0.986,91,0.986,92,0.986,93,0.986,94,1.456,95,0.986,96,0.986,97,0.986,98,0.91,99,0.986,100,0.986,101,1.764,102,0.986,103,0.986,104,0.986,105,0.986,106,0.986,107,0.986,108,0.986,109,0.986,110,0.875,111,0.986,112,0.986,113,0.986,114,0.986,115,0.342,116,0.986,117,0.986,118,0.986,119,0.986,120,0.986,121,0.91,122,1.597,123,0.986,124,0.986,125,0.986,126,1.344,127,1.344,128,0.841,129,0.986,130,0.986,131,0.747,132,0.008,133,0.006]],["title/interfaces/GetFollowing.html",[0,0.241,35,1.143]],["body/interfaces/GetFollowing.html",[0,0.476,1,2.086,2,0.747,3,0.116,4,0.103,5,0.103,6,0.91,7,0.129,8,0.672,10,0.875,11,0.875,12,1.241,13,0.91,14,0.986,15,0.986,16,0.947,17,0.841,18,1.321,19,0.298,20,0.016,21,0.718,22,1.399,23,0.923,24,1.344,25,0.142,26,0.378,27,0.301,28,0.008,29,1.291,30,1.291,31,1.291,32,1.291,33,1.291,34,1.291,35,1.535,36,1.506,37,2.352,38,0.986,39,1.781,40,0.986,41,0.986,42,0.986,43,0.986,44,0.986,45,0.986,46,0.91,47,0.986,48,0.986,49,0.986,50,2.199,51,0.986,52,0.564,53,1.456,54,0.986,55,1.597,56,0.986,57,0.986,58,0.986,59,0.986,60,0.986,61,0.986,62,0.986,63,0.986,64,0.986,65,0.986,66,0.986,67,1.731,68,1.456,69,0.986,70,0.986,71,0.986,72,1.731,73,0.986,74,0.986,75,1.456,76,0.986,77,0.986,78,0.986,79,0.986,80,0.986,81,1.764,82,0.986,83,1.344,84,1.344,85,0.986,86,0.986,87,0.986,88,0.986,89,0.986,90,0.986,91,0.986,92,0.986,93,0.986,94,1.456,95,0.986,96,0.986,97,0.986,98,0.91,99,0.986,100,0.986,101,1.764,102,0.986,103,0.986,104,0.986,105,0.986,106,0.986,107,0.986,108,0.986,109,0.986,110,0.875,111,0.986,112,0.986,113,0.986,114,0.986,115,0.342,116,0.986,117,0.986,118,0.986,119,0.986,120,0.986,121,0.91,122,1.597,123,0.986,124,0.986,125,0.986,126,1.344,127,1.344,128,0.841,129,0.986,130,0.986,131,0.747,132,0.008,133,0.006]],["title/interfaces/GetRescueList.html",[0,0.241,33,1.143]],["body/interfaces/GetRescueList.html",[0,0.476,1,2.086,2,0.747,3,0.116,4,0.103,5,0.103,6,0.91,7,0.129,8,0.672,10,0.875,11,0.875,12,1.241,13,0.91,14,0.986,15,0.986,16,0.947,17,0.841,18,1.321,19,0.298,20,0.016,21,0.718,22,1.399,23,0.923,24,1.344,25,0.142,26,0.378,27,0.301,28,0.008,29,1.291,30,1.291,31,1.291,32,1.291,33,1.535,34,1.291,35,1.291,36,1.506,37,2.352,38,0.986,39,1.781,40,0.986,41,0.986,42,0.986,43,0.986,44,0.986,45,0.986,46,0.91,47,0.986,48,0.986,49,0.986,50,2.199,51,0.986,52,0.564,53,1.456,54,0.986,55,1.597,56,0.986,57,0.986,58,0.986,59,0.986,60,0.986,61,0.986,62,0.986,63,0.986,64,0.986,65,0.986,66,0.986,67,1.731,68,1.456,69,0.986,70,0.986,71,0.986,72,1.731,73,0.986,74,0.986,75,1.456,76,0.986,77,0.986,78,0.986,79,0.986,80,0.986,81,1.764,82,0.986,83,1.344,84,1.344,85,0.986,86,0.986,87,0.986,88,0.986,89,0.986,90,0.986,91,0.986,92,0.986,93,0.986,94,1.456,95,0.986,96,0.986,97,0.986,98,0.91,99,0.986,100,0.986,101,1.764,102,0.986,103,0.986,104,0.986,105,0.986,106,0.986,107,0.986,108,0.986,109,0.986,110,0.875,111,0.986,112,0.986,113,0.986,114,0.986,115,0.342,116,0.986,117,0.986,118,0.986,119,0.986,120,0.986,121,0.91,122,1.597,123,0.986,124,0.986,125,0.986,126,1.344,127,1.344,128,0.841,129,0.986,130,0.986,131,0.747,132,0.008,133,0.006]],["title/interfaces/GetUserPosts.html",[0,0.241,31,1.143]],["body/interfaces/GetUserPosts.html",[0,0.476,1,2.086,2,0.747,3,0.116,4,0.103,5,0.103,6,0.91,7,0.129,8,0.672,10,0.875,11,0.875,12,1.241,13,0.91,14,0.986,15,0.986,16,0.947,17,0.841,18,1.321,19,0.298,20,0.016,21,0.718,22,1.399,23,0.923,24,1.344,25,0.142,26,0.378,27,0.301,28,0.008,29,1.291,30,1.291,31,1.535,32,1.291,33,1.291,34,1.291,35,1.291,36,1.506,37,2.352,38,0.986,39,1.781,40,0.986,41,0.986,42,0.986,43,0.986,44,0.986,45,0.986,46,0.91,47,0.986,48,0.986,49,0.986,50,2.199,51,0.986,52,0.564,53,1.456,54,0.986,55,1.597,56,0.986,57,0.986,58,0.986,59,0.986,60,0.986,61,0.986,62,0.986,63,0.986,64,0.986,65,0.986,66,0.986,67,1.731,68,1.456,69,0.986,70,0.986,71,0.986,72,1.731,73,0.986,74,0.986,75,1.456,76,0.986,77,0.986,78,0.986,79,0.986,80,0.986,81,1.764,82,0.986,83,1.344,84,1.344,85,0.986,86,0.986,87,0.986,88,0.986,89,0.986,90,0.986,91,0.986,92,0.986,93,0.986,94,1.456,95,0.986,96,0.986,97,0.986,98,0.91,99,0.986,100,0.986,101,1.764,102,0.986,103,0.986,104,0.986,105,0.986,106,0.986,107,0.986,108,0.986,109,0.986,110,0.875,111,0.986,112,0.986,113,0.986,114,0.986,115,0.342,116,0.986,117,0.986,118,0.986,119,0.986,120,0.986,121,0.91,122,1.597,123,0.986,124,0.986,125,0.986,126,1.344,127,1.344,128,0.841,129,0.986,130,0.986,131,0.747,132,0.008,133,0.006]],["title/interfaces/GetUserProfile.html",[0,0.241,30,1.143]],["body/interfaces/GetUserProfile.html",[0,0.476,1,2.086,2,0.747,3,0.116,4,0.103,5,0.103,6,0.91,7,0.129,8,0.672,10,0.875,11,0.875,12,1.241,13,0.91,14,0.986,15,0.986,16,0.947,17,0.841,18,1.321,19,0.298,20,0.016,21,0.718,22,1.399,23,0.923,24,1.344,25,0.142,26,0.378,27,0.301,28,0.008,29,1.291,30,1.535,31,1.291,32,1.291,33,1.291,34,1.291,35,1.291,36,1.506,37,2.352,38,0.986,39,1.781,40,0.986,41,0.986,42,0.986,43,0.986,44,0.986,45,0.986,46,0.91,47,0.986,48,0.986,49,0.986,50,2.199,51,0.986,52,0.564,53,1.456,54,0.986,55,1.597,56,0.986,57,0.986,58,0.986,59,0.986,60,0.986,61,0.986,62,0.986,63,0.986,64,0.986,65,0.986,66,0.986,67,1.731,68,1.456,69,0.986,70,0.986,71,0.986,72,1.731,73,0.986,74,0.986,75,1.456,76,0.986,77,0.986,78,0.986,79,0.986,80,0.986,81,1.764,82,0.986,83,1.344,84,1.344,85,0.986,86,0.986,87,0.986,88,0.986,89,0.986,90,0.986,91,0.986,92,0.986,93,0.986,94,1.456,95,0.986,96,0.986,97,0.986,98,0.91,99,0.986,100,0.986,101,1.764,102,0.986,103,0.986,104,0.986,105,0.986,106,0.986,107,0.986,108,0.986,109,0.986,110,0.875,111,0.986,112,0.986,113,0.986,114,0.986,115,0.342,116,0.986,117,0.986,118,0.986,119,0.986,120,0.986,121,0.91,122,1.597,123,0.986,124,0.986,125,0.986,126,1.344,127,1.344,128,0.841,129,0.986,130,0.986,131,0.747,132,0.008,133,0.006]],["title/classes/GetUserResponseDto.html",[155,0.241,505,2.411]],["body/classes/GetUserResponseDto.html",[3,0.17,4,0.151,5,0.151,7,0.19,8,0.88,18,0.961,19,0.416,20,0.015,23,0.837,25,0.307,27,0.25,28,0.008,52,1.293,115,0.897,132,0.011,133,0.008,140,2.448,141,1.4,150,1.511,155,0.439,159,1.907,266,1.575,270,3.02,271,3.02,272,2.517,273,3.02,274,3.423,277,3.207,290,3.332,304,3.37,306,2.404,340,2.162,350,2.629,353,2.548,489,4.229,491,3.981,492,2.712,493,3.981,495,3.349,496,2.712,497,2.404,498,3.565,499,3.565,500,2.712,501,3.135,504,2.712,505,3.565,757,5.592,764,4.396,765,4.396,766,4.396,767,4.396,768,4.396]],["title/controllers/HealthController.html",[134,2.023,181,2.786]],["body/controllers/HealthController.html",[3,0.162,4,0.144,5,0.144,7,0.181,9,1.092,19,0.239,20,0.016,23,0.723,25,0.32,26,0.531,27,0.162,28,0.008,115,0.481,132,0.011,133,0.008,134,2.174,136,2.296,138,1.921,140,1.443,141,1.24,143,2.05,144,1.637,145,1.637,146,2.59,147,2.774,148,2.774,149,2.994,150,1.443,155,0.259,156,2.434,157,2.774,160,1.443,181,4.799,183,6.076,184,4.856,186,1.504,187,5.46,188,2.59,189,4.799,190,6.251,200,3.269,204,3.269,251,4.856,253,1.637,255,3.638,257,3.638,258,3.638,361,2.902,470,2.434,512,5.466,769,3.638,770,6.73,771,4.198,772,4.198,773,4.198,774,4.198,775,5.604,776,5.604,777,5.604,778,5.604,779,4.198,780,4.198,781,4.198,782,5.604,783,4.198,784,4.198,785,4.198,786,4.198,787,4.198,788,4.198,789,4.198,790,5.604,791,5.604,792,4.198,793,4.198,794,5.604,795,4.198,796,4.198,797,4.198,798,4.198,799,4.198,800,2.994,801,4.198,802,4.198,803,3.638,804,4.198,805,4.198,806,4.198,807,4.198,808,4.198,809,4.198,810,4.198]],["title/interfaces/IBaseEntityModel.html",[0,0.241,269,2.581]],["body/interfaces/IBaseEntityModel.html",[0,0.268,2,1.088,3,0.168,4,0.149,5,0.149,7,0.188,8,0.874,9,1.961,18,1.135,19,0.429,20,0.015,23,0.782,25,0.273,27,0.248,28,0.008,36,1.775,110,2.321,131,1.088,132,0.011,133,0.008,150,1.496,155,0.354,159,2.119,253,1.697,265,2.38,267,3.103,268,3.326,269,4.242,270,3.321,271,3.321,272,2.767,273,3.321,275,5,276,5,277,3.005,278,5,279,5,289,4.092,290,3.195,291,3.791,292,3.791,293,3.791,294,3.791,295,1.626,296,3.541,297,3.389,298,4.092,299,3.389,300,5]],["title/interfaces/ICrudService.html",[0,0.241,547,2.411]],["body/interfaces/ICrudService.html",[0,0.33,2,0.982,3,0.152,4,0.135,5,0.135,7,0.169,9,1.839,10,1.568,17,1.508,18,1.14,19,0.402,20,0.016,21,0.944,23,0.699,25,0.255,27,0.207,28,0.007,115,0.81,132,0.01,133,0.007,138,1.632,141,1.391,143,2.155,159,1.769,186,2.535,188,3.763,272,2.674,295,1.468,342,4.042,361,3.983,394,3.54,435,3.54,437,3.763,536,2.802,543,4.173,547,3.306,550,3.821,551,4.671,552,5.484,564,4.173,568,3.821,575,4.173,581,3.06,582,4.671,592,2.802,593,2.802,596,2.149,632,4.749,637,4.173,638,5.638,642,5.101,651,3.405,652,5.638,669,3.06,670,3.06,678,4.348,811,3.06,812,3.929,813,3.929,814,3.929,815,3.929,816,3.929,817,3.929,818,3.06,819,3.06,820,3.06]],["title/interfaces/IPagination.html",[0,0.241,596,2.137]],["body/interfaces/IPagination.html",[0,0.377,2,1.2,3,0.186,4,0.165,5,0.165,7,0.207,8,0.932,17,2.105,18,1.244,19,0.348,20,0.015,21,1.617,23,0.55,25,0.291,27,0.237,28,0.009,132,0.012,133,0.009,159,2.018,272,2.385,295,1.793,342,2.961,361,3.875,437,2.961,536,4.36,547,2.961,550,3.422,551,4.36,552,5.052,564,3.737,568,3.422,582,4.36,592,3.422,593,3.422,596,3.344,632,3.737,637,3.737,638,5.24,642,4.761,652,5.24,669,3.737,670,3.737,678,5.488,811,3.737,818,4.761,819,4.761,820,4.761]],["title/interfaces/IPagination-1.html",[0,0.201,352,1.889,596,1.783]],["body/interfaces/IPagination-1.html",[0,0.406,2,1.35,3,0.209,4,0.186,5,0.186,7,0.233,8,1.003,17,2.168,18,1.26,19,0.374,20,0.015,21,1.706,27,0.209,28,0.01,132,0.013,133,0.01,159,2.173,350,2.201,536,4.694,596,3.601,597,3.853,678,5.614,818,5.126,819,5.126,820,5.126,821,4.682,822,4.682]],["title/interfaces/ITryRequest.html",[0,0.241,671,2.786]],["body/interfaces/ITryRequest.html",[0,0.351,2,1.422,3,0.22,4,0.195,5,0.195,7,0.245,8,1.035,9,1.955,12,2.116,19,0.413,20,0.015,27,0.22,28,0.011,50,2.125,132,0.013,133,0.011,554,4.968,671,4.843,681,5.856,823,4.93,824,4.93]],["title/classes/Model.html",[155,0.241,268,2.265]],["body/classes/Model.html",[0,0.287,3,0.18,4,0.16,5,0.16,9,1.21,18,0.997,19,0.412,20,0.015,23,0.802,25,0.285,27,0.257,28,0.009,36,1.559,110,2.262,115,0.533,131,1.163,132,0.011,133,0.009,141,0.915,150,1.6,155,0.369,159,2.189,186,1.667,188,2.871,253,1.815,265,2.545,266,1.667,267,3.318,268,3.844,269,3.96,270,2.806,271,2.806,272,2.338,273,2.806,275,5.164,276,5.164,277,3.104,278,5.164,279,5.164,289,4.275,290,3.278,291,3.96,292,3.96,293,3.96,294,3.96,295,1.739,296,3.699,297,4.668,298,4.729,299,3.624,300,5.164,470,2.697,825,4.653]],["title/classes/PaginationParams.html",[155,0.241,569,2.786]],["body/classes/PaginationParams.html",[3,0.16,4,0.142,5,0.142,7,0.179,8,0.846,9,1.444,18,1.195,19,0.381,20,0.016,21,0.995,23,0.636,25,0.298,27,0.215,28,0.008,132,0.011,133,0.008,140,2.154,141,1.232,150,1.424,155,0.386,159,2.494,266,1.484,284,4.812,289,4.773,296,4.13,316,3.669,317,2.731,340,2.037,350,1.688,495,3.88,497,2.265,523,5.435,541,3.225,569,3.96,597,5.123,598,4.812,740,3.589,822,4.812,826,5.212,827,3.225,828,5.553,829,6.264,830,6.264,831,6.264,832,4.142,833,4.142,834,5.553,835,6.693,836,4.142,837,4.142,838,5.553,839,6.693,840,5.553,841,4.142,842,4.142,843,4.812,844,4.142,845,4.142,846,4.142,847,4.812,848,4.812,849,4.812,850,5.553,851,4.142,852,5.553,853,5.553,854,4.142,855,4.142]],["title/interfaces/PostType.html",[0,0.241,81,1.19]],["body/interfaces/PostType.html",[0,0.475,1,2.006,2,0.743,3,0.115,4,0.102,5,0.102,6,0.905,7,0.128,8,0.67,10,0.87,11,0.87,12,1.236,13,0.905,14,0.981,15,0.981,16,0.942,17,0.836,18,1.325,19,0.328,20,0.016,21,0.714,22,1.393,23,0.925,24,1.338,25,0.142,26,0.376,27,0.301,28,0.008,29,1.286,30,1.286,31,1.286,32,1.286,33,1.286,34,1.286,35,1.286,36,1.501,37,2.203,38,0.981,39,1.668,40,0.981,41,0.981,42,0.981,43,0.981,44,0.981,45,0.981,46,0.905,47,0.981,48,0.981,49,0.981,50,2.197,51,0.981,52,0.561,53,1.45,54,0.981,55,1.592,56,0.981,57,0.981,58,0.981,59,0.981,60,0.981,61,0.981,62,0.981,63,0.981,64,0.981,65,0.981,66,0.981,67,1.725,68,1.45,69,0.981,70,0.981,71,0.981,72,1.725,73,0.981,74,0.981,75,1.45,76,0.981,77,0.981,78,0.981,79,0.981,80,0.981,81,2.087,82,1.906,83,1.338,84,1.338,85,0.981,86,0.981,87,0.981,88,0.981,89,0.981,90,0.981,91,0.981,92,0.981,93,0.981,94,1.45,95,0.981,96,0.981,97,0.981,98,0.905,99,0.981,100,0.981,101,1.759,102,0.981,103,0.981,104,0.981,105,0.981,106,0.981,107,0.981,108,0.981,109,0.981,110,0.87,111,0.981,112,0.981,113,0.981,114,0.981,115,0.34,116,0.981,117,0.981,118,0.981,119,0.981,120,0.981,121,0.905,122,1.592,123,0.981,124,0.981,125,0.981,126,1.338,127,1.338,128,0.836,129,0.981,130,0.981,131,0.743,132,0.008,133,0.006]],["title/interfaces/PostedByUser.html",[0,0.241,83,1.19]],["body/interfaces/PostedByUser.html",[0,0.473,1,1.983,2,0.715,3,0.111,4,0.098,5,0.098,6,0.871,7,0.123,8,0.651,10,0.837,11,0.837,12,1.202,13,0.871,14,0.944,15,0.944,16,0.907,17,0.805,18,1.321,19,0.385,20,0.016,21,0.687,22,1.354,23,0.926,24,1.301,25,0.136,26,0.362,27,0.299,28,0.008,29,1.25,30,1.25,31,1.25,32,1.25,33,1.25,34,1.25,35,1.25,36,1.474,37,2.176,38,0.944,39,1.648,40,0.944,41,0.944,42,0.944,43,0.944,44,0.944,45,0.944,46,0.871,47,0.944,48,0.944,49,0.944,50,2.236,51,0.944,52,0.54,53,2.002,54,0.944,55,1.938,56,0.944,57,0.944,58,0.944,59,0.944,60,0.944,61,0.944,62,0.944,63,0.944,64,0.944,65,0.944,66,0.944,67,2.1,68,2.002,69,0.944,70,0.944,71,0.944,72,2.1,73,0.944,74,0.944,75,2.002,76,0.944,77,0.944,78,0.944,79,0.944,80,0.944,81,1.726,82,0.944,83,1.557,84,1.301,85,0.944,86,0.944,87,0.944,88,0.944,89,0.944,90,0.944,91,0.944,92,0.944,93,0.944,94,1.41,95,0.944,96,0.944,97,0.944,98,0.871,99,0.944,100,0.944,101,1.726,102,0.944,103,0.944,104,0.944,105,0.944,106,0.944,107,0.944,108,0.944,109,0.944,110,0.837,111,0.944,112,0.944,113,0.944,114,0.944,115,0.328,116,0.944,117,0.944,118,0.944,119,0.944,120,0.944,121,0.871,122,1.557,123,0.944,124,0.944,125,0.944,126,1.301,127,1.301,128,0.805,129,0.944,130,0.944,131,0.715,132,0.008,133,0.005]],["title/classes/QueryFailedFilter.html",[155,0.241,856,3.042]],["body/classes/QueryFailedFilter.html",[3,0.187,4,0.166,5,0.166,7,0.208,9,1.256,13,1.87,16,1.532,19,0.275,20,0.015,24,1.471,25,0.292,26,0.612,27,0.187,28,0.009,39,1.208,115,0.703,132,0.012,133,0.009,138,1.87,141,0.95,143,1.471,155,0.298,157,3.192,186,2.2,189,3.445,217,4.25,253,2.395,266,1.731,295,1.805,439,3.762,525,3.192,599,4.782,673,3.192,682,5.85,700,5.321,701,5.321,856,4.782,857,5.321,858,4.187,859,6.75,860,6.141,861,7.103,862,6.75,863,7.103,864,4.831,865,6.141,866,4.831,867,4.831,868,4.831,869,4.831,870,4.831,871,4.831,872,4.831,873,6.141,874,5.321,875,4.187,876,4.831,877,4.831,878,4.831]],["title/guards/RequestGuard.html",[879,2.786,880,3.042]],["body/guards/RequestGuard.html",[3,0.174,4,0.154,5,0.154,7,0.194,9,1.523,19,0.333,20,0.016,23,0.671,25,0.279,26,0.568,27,0.174,28,0.009,50,1.714,115,0.671,132,0.011,133,0.009,138,1.783,141,1.152,143,1.783,144,1.75,145,1.75,155,0.277,160,2.241,186,2.098,217,3.778,220,2.324,253,1.75,259,1.856,317,3.205,345,2.207,361,3.033,554,2.965,589,3.2,666,2.455,673,4.734,746,4.263,747,2.769,750,3.613,751,4.022,800,3.2,879,3.2,880,4.56,881,3.495,882,3.889,883,5.856,884,6.21,885,5.856,886,4.488,887,5.075,888,5.075,889,3.889,890,4.488,891,4.488,892,6.518,893,4.488,894,4.488,895,4.488,896,4.488,897,4.488,898,4.488,899,4.488,900,5.856,901,4.488,902,3.495,903,4.488,904,4.488]],["title/interfaces/RescueLists.html",[0,0.241,121,1.19]],["body/interfaces/RescueLists.html",[0,0.476,1,2.011,2,0.75,3,0.116,4,0.103,5,0.103,6,0.914,7,0.129,8,0.674,10,0.878,11,0.878,12,1.245,13,0.914,14,0.991,15,0.991,16,0.951,17,0.844,18,1.321,19,0.299,20,0.016,21,0.721,22,1.403,23,0.923,24,1.348,25,0.143,26,0.38,27,0.301,28,0.008,29,1.295,30,1.295,31,1.295,32,1.295,33,1.295,34,1.295,35,1.295,36,1.509,37,2.21,38,0.991,39,1.673,40,0.991,41,0.991,42,0.991,43,0.991,44,0.991,45,0.991,46,0.914,47,0.991,48,0.991,49,0.991,50,2.2,51,0.991,52,0.566,53,1.461,54,0.991,55,1.601,56,0.991,57,0.991,58,0.991,59,0.991,60,0.991,61,0.991,62,0.991,63,0.991,64,0.991,65,0.991,66,0.991,67,1.735,68,1.461,69,0.991,70,0.991,71,0.991,72,1.735,73,0.991,74,0.991,75,1.461,76,0.991,77,0.991,78,0.991,79,0.991,80,0.991,81,1.767,82,0.991,83,1.348,84,1.348,85,0.991,86,0.991,87,0.991,88,0.991,89,0.991,90,0.991,91,0.991,92,0.991,93,0.991,94,1.461,95,0.991,96,0.991,97,0.991,98,0.914,99,0.991,100,0.991,101,2.136,102,0.991,103,0.991,104,0.991,105,0.991,106,0.991,107,0.991,108,0.991,109,0.991,110,0.878,111,0.991,112,0.991,113,0.991,114,0.991,115,0.344,116,0.991,117,0.991,118,0.991,119,0.991,120,0.991,121,1.348,122,1.601,123,0.991,124,0.991,125,0.991,126,1.348,127,1.348,128,0.844,129,0.991,130,0.991,131,0.75,132,0.008,133,0.006]],["title/interfaces/Rescues.html",[0,0.241,101,1.19]],["body/interfaces/Rescues.html",[0,0.469,1,1.944,2,0.67,3,0.104,4,0.092,5,0.092,6,0.816,7,0.116,8,0.619,10,0.784,11,0.784,12,1.144,13,0.816,14,0.884,15,0.884,16,0.849,17,0.754,18,1.322,19,0.425,20,0.016,21,0.644,22,1.289,23,0.929,24,1.238,25,0.128,26,0.339,27,0.297,28,0.008,29,1.19,30,1.19,31,1.19,32,1.19,33,1.19,34,1.19,35,1.19,36,1.426,37,2.128,38,0.884,39,1.612,40,0.884,41,0.884,42,0.884,43,0.884,44,0.884,45,0.884,46,0.816,47,0.884,48,0.884,49,0.884,50,2.157,51,0.884,52,0.506,53,1.342,54,0.884,55,1.496,56,0.884,57,0.884,58,0.884,59,0.884,60,0.884,61,0.884,62,0.884,63,0.884,64,0.884,65,0.884,66,0.884,67,1.621,68,1.342,69,0.884,70,0.884,71,0.884,72,1.621,73,0.884,74,0.884,75,1.342,76,0.884,77,0.884,78,0.884,79,0.884,80,0.884,81,1.67,82,0.884,83,1.238,84,1.238,85,0.884,86,0.884,87,0.884,88,0.884,89,0.884,90,0.884,91,0.884,92,0.884,93,0.884,94,1.342,95,0.884,96,0.884,97,0.884,98,0.816,99,0.884,100,0.884,101,1.795,102,1.81,103,1.81,104,1.81,105,1.81,106,1.81,107,1.81,108,1.81,109,1.81,110,1.438,111,1.81,112,1.81,113,1.81,114,0.884,115,0.307,116,0.884,117,0.884,118,0.884,119,1.81,120,1.81,121,0.816,122,1.496,123,0.884,124,0.884,125,0.884,126,1.238,127,1.238,128,0.754,129,0.884,130,0.884,131,0.67,132,0.008,133,0.005,905,4.065]],["title/interfaces/Response.html",[0,0.241,39,0.977]],["body/interfaces/Response.html",[0,0.322,2,1.308,3,0.202,4,0.18,5,0.18,7,0.226,8,0.984,11,2.197,19,0.298,20,0.016,21,1.682,25,0.333,26,0.662,27,0.25,28,0.01,39,1.613,132,0.012,133,0.01,144,2.041,145,2.041,155,0.322,160,1.799,192,2.709,193,2.861,194,3.033,253,2.041,259,2.046,345,2.573,382,3.456,666,2.861,668,3.456,744,3.731,746,3.982,747,3.982,748,4.602,750,3.228,751,3.982,752,4.602,753,4.074,906,4.074,907,3.731,908,4.534]],["title/guards/ResponseGuard.html",[879,2.786,909,3.042]],["body/guards/ResponseGuard.html",[3,0.151,4,0.134,5,0.134,7,0.169,9,1.39,11,2.004,12,1.712,13,1.992,19,0.304,20,0.016,23,0.612,25,0.255,26,0.496,27,0.151,28,0.007,36,1.018,39,1.711,50,1.565,115,0.612,132,0.01,133,0.007,138,1.628,141,1.051,143,1.628,144,1.527,145,1.527,155,0.241,160,2.43,186,1.915,192,2.028,193,2.141,217,2.269,220,3.152,253,1.527,259,1.695,332,2.586,345,1.925,361,2.768,554,4.021,561,3.393,589,2.792,599,5.503,613,3.393,666,2.141,681,5.331,746,4.035,747,2.416,750,3.298,751,3.756,800,4.664,874,5.275,875,5.275,881,3.049,884,5.933,887,4.632,888,4.632,889,3.393,902,3.049,909,4.163,910,3.393,911,5.346,912,5.346,913,3.915,914,3.915,915,3.915,916,3.915,917,5.346,918,3.915,919,3.915,920,3.915,921,3.915,922,6.087,923,3.393,924,3.915,925,3.915,926,5.346,927,3.915,928,3.915,929,5.346,930,5.346,931,3.915,932,3.915,933,3.915,934,3.915,935,3.915]],["title/injectables/TimeoutInterceptor.html",[259,1.238,936,3.042]],["body/injectables/TimeoutInterceptor.html",[3,0.185,4,0.164,5,0.164,7,0.206,9,1.245,19,0.272,20,0.016,25,0.32,26,0.606,27,0.185,28,0.009,115,0.549,132,0.012,133,0.009,138,1.86,141,0.942,143,1.458,155,0.295,160,2.311,186,1.716,253,1.868,259,1.936,260,2.48,317,3.002,350,1.951,530,6.337,665,4.149,666,2.619,668,3.163,673,4.441,744,4.354,745,4.754,746,4.368,747,4.148,748,5.048,750,2.954,751,4.148,752,4.354,754,4.149,902,3.729,936,4.754,937,4.149,938,6.106,939,6.106,940,6.106,941,6.106,942,5.291,943,4.788,944,6.106,945,6.106,946,4.788,947,4.788,948,4.788,949,4.788,950,4.788,951,4.788,952,4.788,953,4.788,954,4.788]],["title/injectables/TransformInterceptor.html",[259,1.238,907,2.786]],["body/injectables/TransformInterceptor.html",[0,0.312,3,0.196,4,0.174,5,0.174,7,0.219,9,1.318,11,1.853,19,0.288,20,0.016,21,1.218,25,0.329,26,0.642,27,0.245,28,0.01,39,1.268,115,0.581,132,0.012,133,0.01,138,1.928,141,0.997,143,1.544,144,1.978,145,1.978,155,0.312,160,1.744,186,1.817,192,2.626,193,2.774,194,2.939,253,1.978,259,2.007,260,2.626,345,2.494,382,3.35,666,2.774,668,3.35,744,4.922,745,3.949,746,4.46,747,4.46,748,5.154,750,3.906,751,4.259,752,4.514,753,3.949,906,3.949,907,4.514,908,4.395,955,5.071]],["title/classes/UpdateCatDto.html",[155,0.241,415,2.411]],["body/classes/UpdateCatDto.html",[3,0.14,4,0.125,5,0.125,7,0.157,8,0.773,9,1.795,18,1.179,19,0.36,20,0.015,23,0.842,25,0.279,27,0.226,28,0.007,115,0.842,128,1.427,132,0.01,133,0.007,140,2.011,141,1.15,150,1.248,155,0.411,159,2.524,211,2.96,266,1.301,270,1.699,271,1.699,272,2.281,273,1.699,277,3.602,290,3.578,302,5.238,303,5.238,304,3.114,306,3.199,310,4.516,337,3.618,340,1.785,350,3.064,352,3.862,353,3.39,355,4.171,404,2.24,415,3.131,428,2.24,480,2.589,489,3.907,490,4.931,491,4.112,492,2.24,493,4.461,494,4.555,495,3.671,496,2.24,497,1.986,498,3.907,499,3.907,956,3.63,957,3.63,958,3.63,959,3.63,960,3.146,961,3.63]],["title/classes/UpdateUserDto.html",[155,0.241,504,2.411]],["body/classes/UpdateUserDto.html",[3,0.183,4,0.162,5,0.162,7,0.204,8,0.923,9,1.574,18,0.786,19,0.344,20,0.015,23,0.834,25,0.318,27,0.258,28,0.009,52,1.33,115,0.901,132,0.012,133,0.009,140,1.625,141,0.929,150,1.625,155,0.449,159,2.325,266,1.693,270,2.211,271,2.211,272,1.843,273,2.211,277,3.297,290,3.408,304,3.464,306,2.584,340,2.324,350,2.722,353,2.739,489,4.347,491,4.122,492,2.915,493,4.122,495,3.509,496,2.915,497,2.584,498,3.735,499,3.735,500,2.915,501,3.369,504,3.735,505,2.915,960,4.095,962,4.725]],["title/classes/User.html",[52,0.737,155,0.241]],["body/classes/User.html",[3,0.144,4,0.128,5,0.128,7,0.16,8,0.786,18,0.985,19,0.42,20,0.016,23,0.591,25,0.305,27,0.144,28,0.007,52,1.313,115,0.833,132,0.01,133,0.007,140,2.392,141,1.43,144,1.45,145,1.45,150,1.278,155,0.318,156,4.032,159,1.955,211,2.622,212,2.651,220,1.926,266,1.332,270,3.146,271,3.146,272,2.622,273,3.146,277,2.995,290,2.773,291,3.408,292,3.914,293,3.914,294,3.914,295,1.39,304,2.913,305,5.134,306,2.822,316,3.408,317,2.913,319,4.471,320,3.222,324,4.471,325,3.408,327,4.471,331,5.545,332,3.914,333,5.134,334,3.222,336,4.613,340,1.829,341,5.134,342,3.655,345,1.829,346,3.222,347,3.222,348,3.914,349,3.408,350,2.102,351,3.222,359,3.222,360,4.017,361,1.926,362,3.222,363,3.408,364,3.222,365,3.222,963,3.222,964,3.718,965,3.718,966,3.718,967,3.718,968,3.718,969,3.718,970,3.718,971,5.159,972,3.718,973,3.718,974,3.718,975,3.718,976,2.896,977,3.718,978,3.718,979,3.718,980,3.718]],["title/interfaces/UserPost.html",[0,0.241,84,1.19]],["body/interfaces/UserPost.html",[0,0.467,1,1.932,2,0.656,3,0.101,4,0.09,5,0.09,6,0.799,7,0.113,8,0.61,10,0.768,11,0.768,12,1.126,13,0.799,14,0.866,15,0.866,16,0.832,17,0.738,18,1.32,19,0.421,20,0.016,21,0.63,22,1.268,23,0.927,24,1.218,25,0.125,26,0.332,27,0.296,28,0.008,29,1.171,30,1.171,31,1.171,32,1.171,33,1.171,34,1.171,35,1.171,36,1.793,37,2.113,38,0.866,39,1.6,40,0.866,41,0.866,42,0.866,43,0.866,44,0.866,45,0.866,46,0.799,47,0.866,48,0.866,49,0.866,50,2.208,51,0.866,52,0.495,53,1.32,54,0.866,55,1.477,56,0.866,57,0.866,58,0.866,59,0.866,60,0.866,61,0.866,62,0.866,63,0.866,64,0.866,65,0.866,66,0.866,67,1.601,68,1.32,69,0.866,70,0.866,71,0.866,72,1.601,73,0.866,74,0.866,75,1.32,76,0.866,77,0.866,78,0.866,79,0.866,80,0.866,81,2.059,82,0.866,83,1.652,84,1.477,85,1.791,86,1.791,87,1.791,88,1.791,89,1.791,90,1.791,91,1.791,92,1.791,93,1.791,94,1.928,95,1.791,96,1.791,97,1.791,98,0.799,99,0.866,100,0.866,101,1.652,102,0.866,103,0.866,104,0.866,105,0.866,106,0.866,107,0.866,108,0.866,109,0.866,110,0.768,111,0.866,112,0.866,113,0.866,114,0.866,115,0.301,116,0.866,117,0.866,118,0.866,119,0.866,120,0.866,121,0.799,122,1.477,123,0.866,124,0.866,125,0.866,126,1.218,127,1.218,128,0.738,129,0.866,130,0.866,131,0.656,132,0.008,133,0.005]],["title/interfaces/UserPosts.html",[0,0.241,98,1.19]],["body/interfaces/UserPosts.html",[0,0.475,1,2.006,2,0.743,3,0.115,4,0.102,5,0.102,6,0.905,7,0.128,8,0.67,10,0.87,11,0.87,12,1.236,13,0.905,14,0.981,15,0.981,16,0.942,17,0.836,18,1.32,19,0.328,20,0.016,21,0.714,22,1.393,23,0.923,24,1.338,25,0.142,26,0.376,27,0.301,28,0.008,29,1.286,30,1.286,31,1.286,32,1.286,33,1.286,34,1.286,35,1.286,36,1.501,37,2.203,38,0.981,39,1.668,40,0.981,41,0.981,42,0.981,43,0.981,44,0.981,45,0.981,46,0.905,47,0.981,48,0.981,49,0.981,50,2.225,51,0.981,52,0.561,53,1.45,54,0.981,55,1.592,56,0.981,57,0.981,58,0.981,59,0.981,60,0.981,61,0.981,62,0.981,63,0.981,64,0.981,65,0.981,66,0.981,67,1.725,68,1.45,69,0.981,70,0.981,71,0.981,72,1.725,73,0.981,74,0.981,75,1.45,76,0.981,77,0.981,78,0.981,79,0.981,80,0.981,81,1.759,82,0.981,83,1.338,84,1.759,85,0.981,86,0.981,87,0.981,88,0.981,89,0.981,90,0.981,91,0.981,92,0.981,93,0.981,94,1.45,95,0.981,96,0.981,97,0.981,98,1.338,99,1.906,100,1.906,101,1.759,102,0.981,103,0.981,104,0.981,105,0.981,106,0.981,107,0.981,108,0.981,109,0.981,110,0.87,111,0.981,112,0.981,113,0.981,114,0.981,115,0.34,116,0.981,117,0.981,118,0.981,119,0.981,120,0.981,121,0.905,122,1.592,123,0.981,124,0.981,125,0.981,126,1.338,127,1.338,128,0.836,129,0.981,130,0.981,131,0.743,132,0.008,133,0.006]],["title/classes/UserRepository.html",[155,0.241,462,2.411]],["body/classes/UserRepository.html",[3,0.201,4,0.178,5,0.178,7,0.224,20,0.015,25,0.306,27,0.201,28,0.01,52,1.317,131,1.606,132,0.012,133,0.01,138,1.957,141,1.021,143,1.582,144,2.026,145,2.026,155,0.32,160,1.786,192,2.69,193,2.841,194,3.011,240,3.965,266,1.861,295,1.941,345,2.554,368,4.609,369,3.613,370,6.317,372,4.582,373,4.245,374,4.582,375,4.501,376,4.044,379,6.046,380,3.703,381,4.501,382,3.431,462,3.965,976,4.044,981,4.501,982,5.194,983,5.194,984,5.194]],["title/controllers/UsersController.html",[134,2.023,985,2.786]],["body/controllers/UsersController.html",[3,0.174,4,0.154,5,0.154,7,0.194,19,0.255,20,0.016,25,0.356,26,0.568,27,0.174,28,0.009,52,1.23,132,0.011,133,0.009,134,2.324,136,2.455,138,1.783,140,1.543,141,0.883,143,1.367,144,1.75,145,1.75,146,2.769,147,2.965,148,2.965,149,3.2,150,1.543,155,0.277,156,2.601,157,2.965,160,1.543,211,1.75,212,3.2,220,2.324,253,1.75,268,2.601,304,2.207,332,2.965,348,2.965,363,2.965,369,3.376,385,4.926,393,3.495,394,4.306,417,3.495,418,4.56,419,5.075,420,3.869,423,2.965,434,3.889,435,3.869,436,3.889,437,3.613,438,3.889,439,3.495,440,3.889,441,3.889,443,3.889,444,3.495,455,3.495,456,3.889,457,3.889,500,4.022,504,3.613,505,4.422,976,3.495,985,4.176,986,3.889,987,4.488,988,4.488,989,4.488,990,3.889,991,3.613,992,3.889,993,4.488,994,4.488,995,4.488]],["title/modules/UsersModule.html",[162,2.023,176,2.581]],["body/modules/UsersModule.html",[3,0.195,4,0.173,5,0.173,20,0.015,25,0.366,26,0.637,27,0.195,28,0.01,132,0.012,133,0.01,136,3.447,155,0.31,162,3.563,164,2.919,165,2.919,166,3.327,167,3.327,168,2.919,169,4.545,170,4.545,176,5.077,177,4.164,178,3.327,179,3.327,182,3.921,205,3.921,206,3.107,211,1.964,212,3.591,366,3.107,462,3.107,985,4.906,991,4.921,992,4.364,996,4.364,997,4.364,998,4.364,999,5.035,1000,5.035,1001,4.364,1002,5.035,1003,5.035]],["title/injectables/UsersService.html",[259,1.238,991,2.411]],["body/injectables/UsersService.html",[3,0.187,4,0.166,5,0.166,7,0.208,8,0.936,9,1.256,19,0.349,20,0.016,25,0.349,26,0.612,27,0.187,28,0.009,52,0.912,115,0.554,131,1.535,132,0.012,133,0.009,138,1.87,140,1.661,141,1.327,143,1.471,155,0.298,160,1.661,186,1.731,206,2.981,211,2.395,240,3.789,259,1.947,260,2.502,295,1.805,349,4.46,369,3.496,372,4.379,373,4.057,374,4.379,385,5.065,423,3.192,462,4.524,468,5.85,469,6.155,470,2.8,471,4.187,476,4.187,478,4.187,479,4.187,990,4.187,991,3.789,1001,4.187,1004,4.187,1005,4.831,1006,4.831,1007,4.831,1008,4.831,1009,4.831]],["title/coverage.html",[1010,4.157]],["body/coverage.html",[0,0.484,1,0.853,5,0.1,6,2.344,19,0.166,20,0.016,28,0.006,29,0.853,30,0.853,31,0.853,32,0.853,33,0.853,34,0.853,35,0.853,39,0.729,46,0.888,52,0.817,55,0.888,81,0.888,83,0.888,84,0.888,98,0.888,101,0.888,121,0.888,122,0.888,126,0.888,127,0.888,132,0.008,133,0.006,134,2.963,135,2.079,137,2.527,151,1.799,155,0.464,168,1.69,180,3.373,181,2.079,211,1.137,218,2.27,236,2.27,259,2.16,261,2.527,265,1.595,267,3.685,268,1.69,269,1.926,301,2.527,325,1.926,366,1.799,367,2.527,383,2.079,384,2.527,404,1.799,415,1.799,420,1.926,426,1.799,428,1.799,462,1.799,467,2.527,480,3.685,500,1.799,501,3.685,504,1.799,505,1.799,508,1.926,511,2.527,523,6.32,525,1.926,538,3.754,541,4.455,542,2.527,547,1.799,549,2.079,569,2.079,596,2.369,629,2.527,671,2.079,711,2.27,712,2.527,736,2.27,737,2.527,738,2.527,769,2.527,800,4.359,811,3.373,821,2.527,823,2.527,824,2.527,826,2.27,827,2.27,856,2.27,857,2.527,858,2.527,879,3.089,880,2.27,882,2.527,906,3.373,907,2.079,909,2.27,910,2.527,936,2.27,937,2.527,963,2.527,981,2.527,985,2.079,986,2.527,991,1.799,1004,2.527,1010,2.27,1011,2.915,1012,2.915,1013,2.915,1014,7.189,1015,5.168,1016,6.962,1017,6.113,1018,5.168,1019,3.754,1020,4.332,1021,2.915,1022,2.915,1023,2.915,1024,2.915,1025,5.168,1026,2.527,1027,2.527,1028,2.527,1029,2.527,1030,2.27,1031,5.168,1032,4.332,1033,4.332,1034,5.721,1035,5.721,1036,6.962,1037,2.915,1038,2.915,1039,2.915,1040,4.332,1041,4.332,1042,4.958,1043,2.527,1044,2.527,1045,2.527,1046,2.915,1047,2.915,1048,2.915,1049,2.915]],["title/dependencies.html",[165,2.725,1050,3.26]],["body/dependencies.html",[20,0.016,26,0.616,28,0.009,132,0.012,133,0.009,150,1.672,155,0.38,165,2.82,200,3.788,202,3.788,204,3.788,206,3.001,208,4.215,295,2.305,340,2.392,423,4.474,497,2.66,664,4.215,666,2.66,673,3.214,722,4.215,843,4.215,1030,4.802,1051,4.864,1052,6.772,1053,4.864,1054,4.864,1055,4.864,1056,4.864,1057,4.864,1058,4.864,1059,4.864,1060,4.864,1061,6.772,1062,6.167,1063,4.864,1064,4.864,1065,4.864,1066,6.772,1067,4.864,1068,4.864,1069,4.864,1070,4.864,1071,4.864,1072,4.864,1073,4.864,1074,4.864,1075,4.864,1076,4.864,1077,4.864,1078,6.167,1079,4.864,1080,4.864,1081,4.864,1082,4.864,1083,4.864,1084,4.864,1085,4.864,1086,4.864,1087,4.864,1088,4.864,1089,4.864,1090,4.864,1091,4.864,1092,4.864]],["title/miscellaneous/enumerations.html",[1093,1.783,1094,4.073]],["body/miscellaneous/enumerations.html",[7,0.261,20,0.015,28,0.012,132,0.013,133,0.012,317,3.466,826,4.718,827,5.488,847,6.107,848,6.107,849,6.107,1093,3.314,1094,5.25,1095,6.059]],["title/miscellaneous/functions.html",[1093,1.783,1096,4.073]],["body/miscellaneous/functions.html",[7,0.242,9,1.947,20,0.015,28,0.011,115,0.858,132,0.013,133,0.011,168,4.185,186,2.683,317,2.761,1026,4.866,1027,5.839,1042,4.866,1043,5.839,1044,5.839,1045,5.839,1093,3.071,1096,4.866,1097,7.487,1098,5.615,1099,5.615,1100,6.256,1101,5.615,1102,5.615,1103,5.615]],["title/index.html",[7,0.141,1104,3.26,1105,3.26]],["body/index.html",[4,0.172,20,0.015,28,0.009,132,0.012,133,0.009,192,2.59,232,3.894,233,4.887,350,2.037,363,3.303,368,3.303,803,5.943,942,4.333,1010,3.894,1100,4.333,1106,5,1107,5,1108,6.275,1109,5,1110,5,1111,5,1112,5,1113,5,1114,5,1115,5,1116,5,1117,7.673,1118,5,1119,5,1120,7.56,1121,5,1122,5,1123,6.275,1124,5,1125,5,1126,5,1127,6.275,1128,5,1129,5,1130,5,1131,6.275,1132,6.275,1133,5,1134,5,1135,5,1136,5,1137,5,1138,4.333,1139,5,1140,5,1141,5,1142,5,1143,5,1144,5,1145,5,1146,5,1147,5,1148,5,1149,5,1150,5,1151,5,1152,5,1153,5,1154,5]],["title/modules.html",[164,3.094]],["body/modules.html",[20,0.013,28,0.011,132,0.013,133,0.011,163,4.272,164,3.473,174,3.958,175,3.958,176,3.958,1138,6.627,1155,7.647,1156,7.647,1157,7.647]],["title/overview.html",[1158,4.626]],["body/overview.html",[2,1.253,20,0.015,28,0.01,132,0.012,133,0.01,136,2.741,151,4.236,162,2.596,163,5.623,164,2.905,165,2.905,166,3.311,167,3.311,168,2.905,169,3.311,170,3.311,171,4.343,172,4.343,173,4.343,174,4.998,175,4.898,176,4.998,177,4.152,178,3.311,179,3.311,260,2.596,266,1.796,426,4.737,458,4.343,459,4.343,460,4.343,506,4.343,507,4.343,508,4.536,881,3.903,991,4.737,996,4.343,997,4.343,998,4.343,1019,4.343,1158,4.343,1159,6.284,1160,5.012,1161,5.012,1162,5.012]],["title/miscellaneous/typealiases.html",[1093,1.783,1163,4.7]],["body/miscellaneous/typealiases.html",[6,1.785,7,0.253,12,1.649,19,0.333,20,0.015,22,2.191,23,0.671,28,0.014,29,1.715,30,1.715,31,1.715,32,1.715,33,1.715,34,1.715,35,1.715,36,1.524,132,0.013,133,0.011,1093,3.205,1164,5.86,1165,6.912]],["title/miscellaneous/variables.html",[1093,1.783,1166,4.073]],["body/miscellaneous/variables.html",[7,0.22,19,0.394,20,0.015,28,0.01,52,0.964,132,0.012,133,0.01,180,3.977,211,1.992,217,2.96,218,4.952,219,4.426,220,3.936,221,4.426,222,4.426,223,4.426,224,4.426,225,4.426,226,4.426,227,4.426,228,4.426,229,4.426,230,4.426,231,4.426,232,3.977,233,3.977,234,4.426,235,4.426,236,4.952,237,4.426,238,4.426,239,4.426,240,3.151,241,4.426,242,4.426,243,4.426,244,4.426,245,4.426,246,4.426,247,4.426,248,4.426,316,4.575,317,3.405,923,5.51,1028,4.426,1029,5.51,1030,4.952,1093,2.793,1166,4.426,1167,6.359,1168,5.107,1169,5.107]]],"invertedIndex":[["",{"_index":20,"title":{},"body":{"interfaces/APIResponse.html":{},"controllers/AppController.html":{},"interfaces/AppLaunchAction.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Base.html":{},"classes/Cat.html":{},"classes/CatRepository.html":{},"controllers/CatsController.html":{},"modules/CatsModule.html":{},"injectables/CatsService.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"classes/CreateCatDto.html":{},"classes/CreateUserDto.html":{},"modules/CronModule.html":{},"injectables/CronService.html":{},"classes/CrudController.html":{},"classes/CrudService.html":{},"injectables/DBHelper.html":{},"injectables/ExcludeNullUndefinedInterceptor.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"classes/GetCatResponseDto.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"classes/GetUserResponseDto.html":{},"controllers/HealthController.html":{},"interfaces/IBaseEntityModel.html":{},"interfaces/ICrudService.html":{},"interfaces/IPagination.html":{},"interfaces/IPagination-1.html":{},"interfaces/ITryRequest.html":{},"classes/Model.html":{},"classes/PaginationParams.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"classes/QueryFailedFilter.html":{},"guards/RequestGuard.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/Response.html":{},"guards/ResponseGuard.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateCatDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{},"classes/UserRepository.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":523,"title":{},"body":{"injectables/CronService.html":{},"classes/PaginationParams.html":{},"coverage.html":{}}}],["0.1.1",{"_index":1057,"title":{},"body":{"dependencies.html":{}}}],["0.1.13",{"_index":1083,"title":{},"body":{"dependencies.html":{}}}],["0.12.2",{"_index":1069,"title":{},"body":{"dependencies.html":{}}}],["0.2.29",{"_index":1092,"title":{},"body":{"dependencies.html":{}}}],["0.3.1",{"_index":1068,"title":{},"body":{"dependencies.html":{}}}],["0.4.1",{"_index":1062,"title":{},"body":{"dependencies.html":{}}}],["0.6.1",{"_index":1053,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":1016,"title":{},"body":{"coverage.html":{}}}],["0/14",{"_index":1037,"title":{},"body":{"coverage.html":{}}}],["0/15",{"_index":1039,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":1014,"title":{},"body":{"coverage.html":{}}}],["0/23",{"_index":1038,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":1036,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":1025,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":1017,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":1035,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":1018,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":1031,"title":{},"body":{"coverage.html":{}}}],["01",{"_index":279,"title":{},"body":{"classes/Base.html":{},"interfaces/IBaseEntityModel.html":{},"classes/Model.html":{}}}],["01t12:00:00.000z",{"_index":300,"title":{},"body":{"classes/Base.html":{},"interfaces/IBaseEntityModel.html":{},"classes/Model.html":{}}}],["01t12:00:00.000z'})@createdatecolumn",{"_index":280,"title":{},"body":{"classes/Base.html":{}}}],["01t12:00:00.000z'})@deletedatecolumn",{"_index":282,"title":{},"body":{"classes/Base.html":{}}}],["01t12:00:00.000z'})@updatedatecolumn",{"_index":287,"title":{},"body":{"classes/Base.html":{}}}],["0})@isoptional()@min(0)@transform(undefined",{"_index":836,"title":{},"body":{"classes/PaginationParams.html":{}}}],["1",{"_index":352,"title":{"interfaces/IPagination-1.html":{}},"body":{"classes/Cat.html":{},"classes/CreateCatDto.html":{},"injectables/CronService.html":{},"injectables/DBHelper.html":{},"classes/GetCatResponseDto.html":{},"classes/UpdateCatDto.html":{}}}],["1.0.0",{"_index":1080,"title":{},"body":{"dependencies.html":{}}}],["1/12",{"_index":1020,"title":{},"body":{"coverage.html":{}}}],["1/2",{"_index":1034,"title":{},"body":{"coverage.html":{}}}],["1/3",{"_index":1041,"title":{},"body":{"coverage.html":{}}}],["1/4",{"_index":1033,"title":{},"body":{"coverage.html":{}}}],["1/9",{"_index":1047,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":839,"title":{},"body":{"classes/PaginationParams.html":{}}}],["100",{"_index":538,"title":{},"body":{"injectables/CronService.html":{},"coverage.html":{}}}],["10_000",{"_index":949,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["11",{"_index":1046,"title":{},"body":{"coverage.html":{}}}],["12",{"_index":676,"title":{},"body":{"classes/CrudService.html":{}}}],["16",{"_index":1160,"title":{},"body":{"overview.html":{}}}],["17.1.1",{"_index":1051,"title":{},"body":{"dependencies.html":{}}}],["1})@column()@index",{"_index":338,"title":{},"body":{"classes/Cat.html":{}}}],["1})@column({name",{"_index":307,"title":{},"body":{"classes/Cat.html":{}}}],["1})@isint()@isnotempty",{"_index":487,"title":{},"body":{"classes/CreateCatDto.html":{}}}],["1})@isint()@ispositive()@isnotempty",{"_index":481,"title":{},"body":{"classes/CreateCatDto.html":{}}}],["1})@isint()@ispositive()@isnotempty()@isoptional",{"_index":956,"title":{},"body":{"classes/UpdateCatDto.html":{}}}],["2",{"_index":1161,"title":{},"body":{"overview.html":{}}}],["2.29.1",{"_index":1075,"title":{},"body":{"dependencies.html":{}}}],["2.4.3",{"_index":1067,"title":{},"body":{"dependencies.html":{}}}],["2/3",{"_index":1022,"title":{},"body":{"coverage.html":{}}}],["200",{"_index":917,"title":{},"body":{"guards/ResponseGuard.html":{}}}],["2000",{"_index":278,"title":{},"body":{"classes/Base.html":{},"interfaces/IBaseEntityModel.html":{},"classes/Model.html":{}}}],["25",{"_index":1032,"title":{},"body":{"coverage.html":{}}}],["26",{"_index":1162,"title":{},"body":{"overview.html":{}}}],["3.0.2",{"_index":1085,"title":{},"body":{"dependencies.html":{}}}],["3/3",{"_index":1024,"title":{},"body":{"coverage.html":{}}}],["33",{"_index":1040,"title":{},"body":{"coverage.html":{}}}],["36",{"_index":327,"title":{},"body":{"classes/Cat.html":{},"classes/User.html":{}}}],["36635263",{"_index":351,"title":{},"body":{"classes/Cat.html":{},"classes/User.html":{}}}],["36635263'})@primarygeneratedcolumn",{"_index":320,"title":{},"body":{"classes/Cat.html":{},"classes/User.html":{}}}],["4",{"_index":1159,"title":{},"body":{"overview.html":{}}}],["4.0.2",{"_index":1077,"title":{},"body":{"dependencies.html":{}}}],["4.1.5",{"_index":1091,"title":{},"body":{"dependencies.html":{}}}],["4.17.20",{"_index":1074,"title":{},"body":{"dependencies.html":{}}}],["4.2.0",{"_index":1073,"title":{},"body":{"dependencies.html":{}}}],["4.6.2",{"_index":1066,"title":{},"body":{"dependencies.html":{}}}],["4.7.5",{"_index":1063,"title":{},"body":{"dependencies.html":{}}}],["4/4",{"_index":1023,"title":{},"body":{"coverage.html":{}}}],["401",{"_index":920,"title":{},"body":{"guards/ResponseGuard.html":{}}}],["5.0.0",{"_index":1088,"title":{},"body":{"dependencies.html":{}}}],["5.2.3",{"_index":1071,"title":{},"body":{"dependencies.html":{}}}],["50",{"_index":541,"title":{},"body":{"injectables/CronService.html":{},"classes/PaginationParams.html":{},"coverage.html":{}}}],["50})@isoptional()@min(0)@max(50)@transform(undefined",{"_index":841,"title":{},"body":{"classes/PaginationParams.html":{}}}],["6.6.3",{"_index":1086,"title":{},"body":{"dependencies.html":{}}}],["60",{"_index":535,"title":{},"body":{"injectables/CronService.html":{}}}],["66",{"_index":1021,"title":{},"body":{"coverage.html":{}}}],["7.0.1",{"_index":1064,"title":{},"body":{"dependencies.html":{}}}],["7.1.3",{"_index":1059,"title":{},"body":{"dependencies.html":{}}}],["7.1.5",{"_index":1065,"title":{},"body":{"dependencies.html":{}}}],["7.5.1",{"_index":1052,"title":{},"body":{"dependencies.html":{}}}],["8",{"_index":1019,"title":{},"body":{"coverage.html":{},"overview.html":{}}}],["_",{"_index":721,"title":{},"body":{"injectables/DBHelper.html":{}}}],["_.difference(new_values",{"_index":731,"title":{},"body":{"injectables/DBHelper.html":{}}}],["_.difference(values",{"_index":729,"title":{},"body":{"injectables/DBHelper.html":{}}}],["__dirname}/**/*.entity.{ts,js",{"_index":238,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["__dirname}/**/migrations/*{.ts,.js",{"_index":245,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["abortearly",{"_index":223,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["above",{"_index":796,"title":{},"body":{"controllers/HealthController.html":{}}}],["abstract",{"_index":296,"title":{},"body":{"classes/Base.html":{},"classes/CrudController.html":{},"classes/CrudService.html":{},"interfaces/IBaseEntityModel.html":{},"classes/Model.html":{},"classes/PaginationParams.html":{}}}],["access,no",{"_index":198,"title":{},"body":{"modules/AppModule.html":{}}}],["action",{"_index":48,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{}}}],["actionid",{"_index":47,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{}}}],["adcorporatelogourl",{"_index":95,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{}}}],["age",{"_index":302,"title":{},"body":{"classes/Cat.html":{},"classes/CreateCatDto.html":{},"classes/GetCatResponseDto.html":{},"classes/UpdateCatDto.html":{}}}],["aliases",{"_index":1164,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["all'})@apiresponse({status",{"_index":571,"title":{},"body":{"classes/CrudController.html":{}}}],["allowunknown",{"_index":222,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["alwayspaginate",{"_index":440,"title":{},"body":{"controllers/CatsController.html":{},"controllers/UsersController.html":{}}}],["amazing",{"_index":1139,"title":{},"body":{"index.html":{}}}],["animalimageurl",{"_index":103,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{}}}],["api",{"_index":38,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{}}}],["api:v1/rescue/getcomments?pageno=0&pagesize=10&postid=1230",{"_index":43,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{}}}],["api:v1/rescue/getrescuelist?pageno=0&pagesize=10&status=pending|inprogress|completed|nearest",{"_index":42,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{}}}],["api:v1/rescue/getuserfollowers?userid=1230",{"_index":44,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{}}}],["api:v1/rescue/getuserfollowing?userid=1230",{"_index":45,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{}}}],["api:v1/user/getuserposts?pageno=0&pagesize=25",{"_index":41,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{}}}],["api:v1/user/getuserprofile?userid=25",{"_index":40,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{}}}],["apibearerauth",{"_index":591,"title":{},"body":{"classes/CrudController.html":{}}}],["apierror",{"_index":22,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{},"miscellaneous/typealiases.html":{}}}],["apihideproperty",{"_index":489,"title":{},"body":{"classes/CreateCatDto.html":{},"classes/CreateUserDto.html":{},"classes/GetCatResponseDto.html":{},"classes/GetUserResponseDto.html":{},"classes/UpdateCatDto.html":{},"classes/UpdateUserDto.html":{}}}],["apihideproperty()@exclude",{"_index":757,"title":{},"body":{"classes/GetCatResponseDto.html":{},"classes/GetUserResponseDto.html":{}}}],["apioperation",{"_index":418,"title":{},"body":{"controllers/CatsController.html":{},"classes/CrudController.html":{},"controllers/UsersController.html":{}}}],["apioperation({summary",{"_index":393,"title":{},"body":{"controllers/CatsController.html":{},"classes/CrudController.html":{},"controllers/UsersController.html":{}}}],["apiproperty",{"_index":290,"title":{},"body":{"classes/Base.html":{},"classes/Cat.html":{},"classes/CreateCatDto.html":{},"classes/CreateUserDto.html":{},"classes/GetCatResponseDto.html":{},"classes/GetUserResponseDto.html":{},"interfaces/IBaseEntityModel.html":{},"classes/Model.html":{},"classes/UpdateCatDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{}}}],["apiproperty({description",{"_index":306,"title":{},"body":{"classes/Cat.html":{},"classes/CreateCatDto.html":{},"classes/CreateUserDto.html":{},"classes/GetCatResponseDto.html":{},"classes/GetUserResponseDto.html":{},"classes/UpdateCatDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{}}}],["apiproperty({type",{"_index":274,"title":{},"body":{"classes/Base.html":{},"classes/GetCatResponseDto.html":{},"classes/GetUserResponseDto.html":{}}}],["apipropertyoptional",{"_index":289,"title":{},"body":{"classes/Base.html":{},"interfaces/IBaseEntityModel.html":{},"classes/Model.html":{},"classes/PaginationParams.html":{}}}],["apipropertyoptional()@isoptional",{"_index":832,"title":{},"body":{"classes/PaginationParams.html":{}}}],["apipropertyoptional({type",{"_index":284,"title":{},"body":{"classes/Base.html":{},"classes/PaginationParams.html":{}}}],["apiresponse",{"_index":1,"title":{"interfaces/APIResponse.html":{}},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"classes/CrudController.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{},"coverage.html":{}}}],["apitags",{"_index":149,"title":{},"body":{"controllers/AppController.html":{},"controllers/CatsController.html":{},"controllers/HealthController.html":{},"controllers/UsersController.html":{}}}],["apitags(appcontroller.name",{"_index":154,"title":{},"body":{"controllers/AppController.html":{}}}],["apitags(catscontroller.name",{"_index":432,"title":{},"body":{"controllers/CatsController.html":{}}}],["apitags(healthcontroller.name",{"_index":779,"title":{},"body":{"controllers/HealthController.html":{}}}],["apitags(userscontroller.name",{"_index":994,"title":{},"body":{"controllers/UsersController.html":{}}}],["app",{"_index":1100,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["app.controller",{"_index":209,"title":{},"body":{"modules/AppModule.html":{}}}],["app.service",{"_index":152,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["appcontroller",{"_index":135,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["applaunchaction",{"_index":46,"title":{"interfaces/AppLaunchAction.html":{}},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{},"coverage.html":{}}}],["application",{"_index":787,"title":{},"body":{"controllers/HealthController.html":{}}}],["applications",{"_index":1114,"title":{},"body":{"index.html":{}}}],["applicationshutdown",{"_index":257,"title":{},"body":{"modules/AppModule.html":{},"controllers/HealthController.html":{}}}],["appmodule",{"_index":163,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appservice",{"_index":151,"title":{"injectables/AppService.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"coverage.html":{},"overview.html":{}}}],["areyoufollowing",{"_index":129,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{}}}],["argumentshost",{"_index":863,"title":{},"body":{"classes/QueryFailedFilter.html":{}}}],["array",{"_index":916,"title":{},"body":{"guards/ResponseGuard.html":{}}}],["asc",{"_index":849,"title":{},"body":{"classes/PaginationParams.html":{},"miscellaneous/enumerations.html":{}}}],["assignment",{"_index":382,"title":{},"body":{"classes/CatRepository.html":{},"classes/CrudService.html":{},"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{},"classes/UserRepository.html":{}}}],["assignment,@typescript",{"_index":195,"title":{},"body":{"modules/AppModule.html":{}}}],["async",{"_index":369,"title":{},"body":{"classes/CatRepository.html":{},"controllers/CatsController.html":{},"injectables/CatsService.html":{},"classes/CrudController.html":{},"classes/CrudService.html":{},"injectables/DBHelper.html":{},"classes/UserRepository.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["asynchronous",{"_index":802,"title":{},"body":{"controllers/HealthController.html":{}}}],["author",{"_index":1147,"title":{},"body":{"index.html":{}}}],["authservice",{"_index":698,"title":{},"body":{"classes/CrudService.html":{}}}],["available",{"_index":820,"title":{},"body":{"interfaces/ICrudService.html":{},"interfaces/IPagination.html":{},"interfaces/IPagination-1.html":{}}}],["await",{"_index":380,"title":{},"body":{"classes/CatRepository.html":{},"classes/CrudService.html":{},"injectables/DBHelper.html":{},"classes/UserRepository.html":{}}}],["awaits",{"_index":801,"title":{},"body":{"controllers/HealthController.html":{}}}],["backers",{"_index":1140,"title":{},"body":{"index.html":{}}}],["badge",{"_index":73,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{}}}],["badgedescription",{"_index":76,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{}}}],["badgeid",{"_index":74,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{}}}],["badgename",{"_index":75,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{}}}],["badrequestexception",{"_index":661,"title":{},"body":{"classes/CrudService.html":{}}}],["badrequestexception(err",{"_index":694,"title":{},"body":{"classes/CrudService.html":{}}}],["base",{"_index":265,"title":{"classes/Base.html":{}},"body":{"classes/Base.html":{},"controllers/CatsController.html":{},"classes/CrudController.html":{},"classes/CrudService.html":{},"interfaces/IBaseEntityModel.html":{},"classes/Model.html":{},"coverage.html":{}}}],["bcrypt",{"_index":663,"title":{},"body":{"classes/CrudService.html":{}}}],["bcrypt.hash(password",{"_index":695,"title":{},"body":{"classes/CrudService.html":{}}}],["bcryptjs",{"_index":664,"title":{},"body":{"classes/CrudService.html":{},"dependencies.html":{}}}],["before",{"_index":147,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/CatsController.html":{},"controllers/HealthController.html":{},"controllers/UsersController.html":{}}}],["beforeapplicationshutdown",{"_index":793,"title":{},"body":{"controllers/HealthController.html":{}}}],["bind",{"_index":887,"title":{},"body":{"guards/RequestGuard.html":{},"guards/ResponseGuard.html":{}}}],["bindrequesthelpers",{"_index":883,"title":{},"body":{"guards/RequestGuard.html":{}}}],["bindrequesthelpers(request",{"_index":885,"title":{},"body":{"guards/RequestGuard.html":{}}}],["bindresponsehelpers",{"_index":911,"title":{},"body":{"guards/ResponseGuard.html":{}}}],["bindresponsehelpers(response",{"_index":912,"title":{},"body":{"guards/ResponseGuard.html":{}}}],["body",{"_index":558,"title":{},"body":{"classes/CrudController.html":{}}}],["boolean",{"_index":50,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/ITryRequest.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"guards/RequestGuard.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"guards/ResponseGuard.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{}}}],["bootstrap",{"_index":168,"title":{},"body":{"modules/AppModule.html":{},"modules/CatsModule.html":{},"modules/CronModule.html":{},"modules/UsersModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["breed",{"_index":303,"title":{},"body":{"classes/Cat.html":{},"classes/CreateCatDto.html":{},"classes/GetCatResponseDto.html":{},"classes/UpdateCatDto.html":{}}}],["browse",{"_index":1157,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":1155,"title":{},"body":{"modules.html":{}}}],["builder/querypartialentity",{"_index":593,"title":{},"body":{"classes/CrudController.html":{},"classes/CrudService.html":{},"interfaces/ICrudService.html":{},"interfaces/IPagination.html":{}}}],["building",{"_index":1109,"title":{},"body":{"index.html":{}}}],["c",{"_index":979,"title":{},"body":{"classes/User.html":{}}}],["c.user",{"_index":980,"title":{},"body":{"classes/User.html":{}}}],["call",{"_index":790,"title":{},"body":{"controllers/HealthController.html":{}}}],["call,@typescript",{"_index":196,"title":{},"body":{"modules/AppModule.html":{}}}],["called",{"_index":533,"title":{},"body":{"injectables/CronService.html":{}}}],["callhandler",{"_index":748,"title":{},"body":{"injectables/ExcludeNullUndefinedInterceptor.html":{},"interfaces/Response.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/TransformInterceptor.html":{}}}],["canactivate",{"_index":884,"title":{},"body":{"guards/RequestGuard.html":{},"guards/ResponseGuard.html":{}}}],["canactivate(context",{"_index":889,"title":{},"body":{"guards/RequestGuard.html":{},"guards/ResponseGuard.html":{}}}],["cat",{"_index":211,"title":{"classes/Cat.html":{}},"body":{"modules/AppModule.html":{},"classes/Cat.html":{},"classes/CatRepository.html":{},"controllers/CatsController.html":{},"injectables/CatsService.html":{},"classes/CreateCatDto.html":{},"classes/GetCatResponseDto.html":{},"classes/UpdateCatDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["cat.entity",{"_index":377,"title":{},"body":{"classes/CatRepository.html":{}}}],["cat.exclude",{"_index":995,"title":{},"body":{"controllers/UsersController.html":{}}}],["cat.name_length",{"_index":354,"title":{},"body":{"classes/Cat.html":{}}}],["cat_age",{"_index":308,"title":{},"body":{"classes/Cat.html":{}}}],["cat_breed",{"_index":312,"title":{},"body":{"classes/Cat.html":{}}}],["cat_name",{"_index":323,"title":{},"body":{"classes/Cat.html":{}}}],["catch",{"_index":682,"title":{},"body":{"classes/CrudService.html":{},"classes/QueryFailedFilter.html":{}}}],["catch(exception",{"_index":860,"title":{},"body":{"classes/QueryFailedFilter.html":{}}}],["catch(queryfailederror",{"_index":867,"title":{},"body":{"classes/QueryFailedFilter.html":{}}}],["catcherror",{"_index":946,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["catcherror((e",{"_index":951,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["catrepository",{"_index":366,"title":{"classes/CatRepository.html":{}},"body":{"classes/CatRepository.html":{},"modules/CatsModule.html":{},"injectables/CatsService.html":{},"modules/UsersModule.html":{},"coverage.html":{}}}],["cats",{"_index":348,"title":{},"body":{"classes/Cat.html":{},"classes/CatRepository.html":{},"controllers/CatsController.html":{},"classes/User.html":{},"controllers/UsersController.html":{}}}],["cats'})@post('/clear",{"_index":395,"title":{},"body":{"controllers/CatsController.html":{}}}],["cats.controller",{"_index":464,"title":{},"body":{"modules/CatsModule.html":{}}}],["cats.service",{"_index":427,"title":{},"body":{"controllers/CatsController.html":{},"modules/CatsModule.html":{}}}],["cats/cats.module",{"_index":210,"title":{},"body":{"modules/AppModule.html":{}}}],["cats/datum/cat.entity",{"_index":212,"title":{},"body":{"modules/AppModule.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{}}}],["cats/datum/cat.repository",{"_index":1000,"title":{},"body":{"modules/UsersModule.html":{}}}],["catscontroller",{"_index":383,"title":{"controllers/CatsController.html":{}},"body":{"controllers/CatsController.html":{},"modules/CatsModule.html":{},"coverage.html":{}}}],["catsmodule",{"_index":174,"title":{"modules/CatsModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CatsModule.html":{},"modules.html":{},"overview.html":{}}}],["catsservice",{"_index":426,"title":{"injectables/CatsService.html":{}},"body":{"controllers/CatsController.html":{},"modules/CatsModule.html":{},"injectables/CatsService.html":{},"coverage.html":{},"overview.html":{}}}],["check",{"_index":770,"title":{},"body":{"controllers/HealthController.html":{}}}],["class",{"_index":155,"title":{"classes/Base.html":{},"classes/Cat.html":{},"classes/CatRepository.html":{},"classes/CreateCatDto.html":{},"classes/CreateUserDto.html":{},"classes/CrudController.html":{},"classes/CrudService.html":{},"classes/GetCatResponseDto.html":{},"classes/GetUserResponseDto.html":{},"classes/Model.html":{},"classes/PaginationParams.html":{},"classes/QueryFailedFilter.html":{},"classes/UpdateCatDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"classes/UserRepository.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Base.html":{},"classes/Cat.html":{},"classes/CatRepository.html":{},"controllers/CatsController.html":{},"modules/CatsModule.html":{},"injectables/CatsService.html":{},"classes/CreateCatDto.html":{},"classes/CreateUserDto.html":{},"modules/CronModule.html":{},"injectables/CronService.html":{},"classes/CrudController.html":{},"classes/CrudService.html":{},"injectables/DBHelper.html":{},"injectables/ExcludeNullUndefinedInterceptor.html":{},"classes/GetCatResponseDto.html":{},"classes/GetUserResponseDto.html":{},"controllers/HealthController.html":{},"interfaces/IBaseEntityModel.html":{},"classes/Model.html":{},"classes/PaginationParams.html":{},"classes/QueryFailedFilter.html":{},"guards/RequestGuard.html":{},"interfaces/Response.html":{},"guards/ResponseGuard.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateCatDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"classes/UserRepository.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{}}}],["classes",{"_index":266,"title":{},"body":{"classes/Base.html":{},"classes/Cat.html":{},"classes/CatRepository.html":{},"classes/CreateCatDto.html":{},"classes/CreateUserDto.html":{},"classes/CrudController.html":{},"classes/CrudService.html":{},"classes/GetCatResponseDto.html":{},"classes/GetUserResponseDto.html":{},"classes/Model.html":{},"classes/PaginationParams.html":{},"classes/QueryFailedFilter.html":{},"classes/UpdateCatDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"classes/UserRepository.html":{},"overview.html":{}}}],["clear",{"_index":385,"title":{},"body":{"controllers/CatsController.html":{},"injectables/CatsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["clearall",{"_index":370,"title":{},"body":{"classes/CatRepository.html":{},"classes/UserRepository.html":{}}}],["cleared",{"_index":379,"title":{},"body":{"classes/CatRepository.html":{},"classes/UserRepository.html":{}}}],["clues",{"_index":560,"title":{},"body":{"classes/CrudController.html":{}}}],["cluster_appmodule",{"_index":171,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":173,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":172,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_catsmodule",{"_index":458,"title":{},"body":{"modules/CatsModule.html":{},"overview.html":{}}}],["cluster_catsmodule_exports",{"_index":459,"title":{},"body":{"modules/CatsModule.html":{},"overview.html":{}}}],["cluster_catsmodule_providers",{"_index":460,"title":{},"body":{"modules/CatsModule.html":{},"overview.html":{}}}],["cluster_cronmodule",{"_index":506,"title":{},"body":{"modules/CronModule.html":{},"overview.html":{}}}],["cluster_cronmodule_providers",{"_index":507,"title":{},"body":{"modules/CronModule.html":{},"overview.html":{}}}],["cluster_usersmodule",{"_index":996,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["cluster_usersmodule_exports",{"_index":997,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["cluster_usersmodule_providers",{"_index":998,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["code",{"_index":874,"title":{},"body":{"classes/QueryFailedFilter.html":{},"guards/ResponseGuard.html":{}}}],["column",{"_index":341,"title":{},"body":{"classes/Cat.html":{},"classes/User.html":{}}}],["comment",{"_index":122,"title":{"interfaces/Comment.html":{}},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{},"coverage.html":{}}}],["commentedusename",{"_index":124,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{}}}],["commenteduserid",{"_index":125,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{}}}],["commentid",{"_index":123,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{}}}],["comments",{"_index":126,"title":{"interfaces/Comments.html":{}},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{},"coverage.html":{}}}],["commentscount",{"_index":86,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{}}}],["concat(toadd",{"_index":732,"title":{},"body":{"injectables/DBHelper.html":{}}}],["config",{"_index":782,"title":{},"body":{"controllers/HealthController.html":{}}}],["configmodule",{"_index":199,"title":{},"body":{"modules/AppModule.html":{}}}],["configmodule.forroot(configmoduleoptions",{"_index":249,"title":{},"body":{"modules/AppModule.html":{}}}],["configmoduleoptions",{"_index":218,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["configservice",{"_index":775,"title":{},"body":{"controllers/HealthController.html":{}}}],["console.error",{"_index":256,"title":{},"body":{"modules/AppModule.html":{}}}],["console.info(`moduleinit",{"_index":254,"title":{},"body":{"modules/AppModule.html":{}}}],["console.log",{"_index":810,"title":{},"body":{"controllers/HealthController.html":{}}}],["console.log(`moduleinit",{"_index":808,"title":{},"body":{"controllers/HealthController.html":{}}}],["const",{"_index":217,"title":{},"body":{"modules/AppModule.html":{},"classes/CrudService.html":{},"injectables/DBHelper.html":{},"classes/QueryFailedFilter.html":{},"guards/RequestGuard.html":{},"guards/ResponseGuard.html":{},"miscellaneous/variables.html":{}}}],["constructor",{"_index":470,"title":{},"body":{"injectables/CatsService.html":{},"classes/CrudController.html":{},"classes/CrudService.html":{},"injectables/DBHelper.html":{},"controllers/HealthController.html":{},"classes/Model.html":{},"injectables/UsersService.html":{}}}],["constructor(@injectrepository(catrepository",{"_index":477,"title":{},"body":{"injectables/CatsService.html":{}}}],["constructor(@injectrepository(userrepository",{"_index":1009,"title":{},"body":{"injectables/UsersService.html":{}}}],["constructor(crudservice",{"_index":546,"title":{},"body":{"classes/CrudController.html":{}}}],["constructor(input",{"_index":297,"title":{},"body":{"classes/Base.html":{},"interfaces/IBaseEntityModel.html":{},"classes/Model.html":{}}}],["constructor(private",{"_index":158,"title":{},"body":{"controllers/AppController.html":{},"classes/CrudController.html":{},"injectables/DBHelper.html":{}}}],["constructor(protected",{"_index":674,"title":{},"body":{"classes/CrudService.html":{}}}],["constructor(public",{"_index":443,"title":{},"body":{"controllers/CatsController.html":{},"controllers/UsersController.html":{}}}],["constructor(repo",{"_index":471,"title":{},"body":{"injectables/CatsService.html":{},"injectables/UsersService.html":{}}}],["constructor(repository",{"_index":635,"title":{},"body":{"classes/CrudService.html":{},"injectables/DBHelper.html":{}}}],["contact",{"_index":114,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{}}}],["contain",{"_index":559,"title":{},"body":{"classes/CrudController.html":{}}}],["context",{"_index":750,"title":{},"body":{"injectables/ExcludeNullUndefinedInterceptor.html":{},"guards/RequestGuard.html":{},"interfaces/Response.html":{},"guards/ResponseGuard.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/TransformInterceptor.html":{}}}],["continue",{"_index":804,"title":{},"body":{"controllers/HealthController.html":{}}}],["controller",{"_index":134,"title":{"controllers/AppController.html":{},"controllers/CatsController.html":{},"controllers/HealthController.html":{},"controllers/UsersController.html":{}},"body":{"controllers/AppController.html":{},"controllers/CatsController.html":{},"controllers/HealthController.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["controller(appcontroller.path",{"_index":153,"title":{},"body":{"controllers/AppController.html":{}}}],["controller(catscontroller.path",{"_index":431,"title":{},"body":{"controllers/CatsController.html":{}}}],["controller(healthcontroller.path",{"_index":780,"title":{},"body":{"controllers/HealthController.html":{}}}],["controller(userscontroller.path",{"_index":993,"title":{},"body":{"controllers/UsersController.html":{}}}],["controllers",{"_index":136,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/CatsController.html":{},"modules/CatsModule.html":{},"controllers/HealthController.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["coon",{"_index":355,"title":{},"body":{"classes/Cat.html":{},"classes/CreateCatDto.html":{},"classes/GetCatResponseDto.html":{},"classes/UpdateCatDto.html":{}}}],["coon'})@column({name",{"_index":311,"title":{},"body":{"classes/Cat.html":{}}}],["coon'})@isstring()@isnotempty()@minlength(2)@maxlength(36",{"_index":483,"title":{},"body":{"classes/CreateCatDto.html":{}}}],["coon'})@isstring()@isnotempty()@minlength(2)@maxlength(36)@isoptional",{"_index":958,"title":{},"body":{"classes/UpdateCatDto.html":{}}}],["copied",{"_index":697,"title":{},"body":{"classes/CrudService.html":{}}}],["corporatedescription",{"_index":96,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{}}}],["corporatename",{"_index":97,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{}}}],["corresponding",{"_index":797,"title":{},"body":{"controllers/HealthController.html":{}}}],["count",{"_index":10,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"injectables/CronService.html":{},"classes/CrudService.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/ICrudService.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{}}}],["count(filter",{"_index":637,"title":{},"body":{"classes/CrudService.html":{},"interfaces/ICrudService.html":{},"interfaces/IPagination.html":{}}}],["coverage",{"_index":1010,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["coverimage",{"_index":54,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{}}}],["create",{"_index":435,"title":{},"body":{"controllers/CatsController.html":{},"classes/CrudController.html":{},"classes/CrudService.html":{},"interfaces/ICrudService.html":{},"controllers/UsersController.html":{}}}],["create(@body",{"_index":615,"title":{},"body":{"classes/CrudController.html":{}}}],["create(entity",{"_index":550,"title":{},"body":{"classes/CrudController.html":{},"classes/CrudService.html":{},"interfaces/ICrudService.html":{},"interfaces/IPagination.html":{}}}],["createcatdto",{"_index":404,"title":{"classes/CreateCatDto.html":{}},"body":{"controllers/CatsController.html":{},"classes/CreateCatDto.html":{},"classes/GetCatResponseDto.html":{},"classes/UpdateCatDto.html":{},"coverage.html":{}}}],["created",{"_index":611,"title":{},"body":{"classes/CrudController.html":{}}}],["created.'})@apiresponse({status",{"_index":556,"title":{},"body":{"classes/CrudController.html":{}}}],["createdat",{"_index":270,"title":{},"body":{"classes/Base.html":{},"classes/Cat.html":{},"classes/CreateCatDto.html":{},"classes/CreateUserDto.html":{},"classes/GetCatResponseDto.html":{},"classes/GetUserResponseDto.html":{},"interfaces/IBaseEntityModel.html":{},"classes/Model.html":{},"classes/UpdateCatDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{}}}],["createdatecolumn",{"_index":293,"title":{},"body":{"classes/Base.html":{},"classes/Cat.html":{},"interfaces/IBaseEntityModel.html":{},"classes/Model.html":{},"classes/User.html":{}}}],["createmany",{"_index":386,"title":{},"body":{"controllers/CatsController.html":{}}}],["createmany(r",{"_index":397,"title":{},"body":{"controllers/CatsController.html":{}}}],["createmanydto",{"_index":399,"title":{},"body":{"controllers/CatsController.html":{}}}],["createone",{"_index":387,"title":{},"body":{"controllers/CatsController.html":{}}}],["createone(r",{"_index":403,"title":{},"body":{"controllers/CatsController.html":{}}}],["createuserdto",{"_index":500,"title":{"classes/CreateUserDto.html":{}},"body":{"classes/CreateUserDto.html":{},"classes/GetUserResponseDto.html":{},"classes/UpdateUserDto.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["criteria",{"_index":644,"title":{},"body":{"classes/CrudService.html":{}}}],["cron",{"_index":528,"title":{},"body":{"injectables/CronService.html":{}}}],["cron('60",{"_index":517,"title":{},"body":{"injectables/CronService.html":{}}}],["cron.service",{"_index":510,"title":{},"body":{"modules/CronModule.html":{}}}],["cron/cron.module",{"_index":213,"title":{},"body":{"modules/AppModule.html":{}}}],["cronmodule",{"_index":175,"title":{"modules/CronModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CronModule.html":{},"modules.html":{},"overview.html":{}}}],["cronservice",{"_index":508,"title":{"injectables/CronService.html":{}},"body":{"modules/CronModule.html":{},"injectables/CronService.html":{},"coverage.html":{},"overview.html":{}}}],["cronservice.count",{"_index":531,"title":{},"body":{"injectables/CronService.html":{}}}],["crud",{"_index":419,"title":{},"body":{"controllers/CatsController.html":{},"controllers/UsersController.html":{}}}],["crud(catscontroller.crudoptions",{"_index":433,"title":{},"body":{"controllers/CatsController.html":{}}}],["crudcontroller",{"_index":420,"title":{"classes/CrudController.html":{}},"body":{"controllers/CatsController.html":{},"classes/CrudController.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["crudoptions",{"_index":424,"title":{},"body":{"controllers/CatsController.html":{}}}],["crudrequest",{"_index":398,"title":{},"body":{"controllers/CatsController.html":{}}}],["crudservice",{"_index":549,"title":{"classes/CrudService.html":{}},"body":{"classes/CrudController.html":{},"classes/CrudService.html":{},"coverage.html":{}}}],["ctx",{"_index":868,"title":{},"body":{"classes/QueryFailedFilter.html":{}}}],["ctx.getrequest",{"_index":871,"title":{},"body":{"classes/QueryFailedFilter.html":{}}}],["ctx.getresponse",{"_index":870,"title":{},"body":{"classes/QueryFailedFilter.html":{}}}],["current",{"_index":536,"title":{},"body":{"injectables/CronService.html":{},"interfaces/ICrudService.html":{},"interfaces/IPagination.html":{},"interfaces/IPagination-1.html":{}}}],["cycle",{"_index":347,"title":{},"body":{"classes/Cat.html":{},"classes/User.html":{}}}],["data",{"_index":11,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/Response.html":{},"guards/ResponseGuard.html":{},"injectables/TransformInterceptor.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{}}}],["database",{"_index":240,"title":{},"body":{"modules/AppModule.html":{},"classes/CatRepository.html":{},"injectables/CatsService.html":{},"classes/UserRepository.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["database.sqlite",{"_index":241,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["dataobj",{"_index":929,"title":{},"body":{"guards/ResponseGuard.html":{}}}],["date",{"_index":110,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"classes/Base.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/IBaseEntityModel.html":{},"classes/Model.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{}}}],["date().toisostring",{"_index":878,"title":{},"body":{"classes/QueryFailedFilter.html":{}}}],["datum/cat.dto",{"_index":429,"title":{},"body":{"controllers/CatsController.html":{}}}],["datum/cat.entity",{"_index":430,"title":{},"body":{"controllers/CatsController.html":{},"injectables/CatsService.html":{}}}],["datum/cat.repository",{"_index":465,"title":{},"body":{"modules/CatsModule.html":{},"injectables/CatsService.html":{}}}],["datum/user.dto",{"_index":989,"title":{},"body":{"controllers/UsersController.html":{}}}],["datum/user.entity",{"_index":990,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["datum/user.repository",{"_index":1001,"title":{},"body":{"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["dbhelper",{"_index":711,"title":{"injectables/DBHelper.html":{}},"body":{"injectables/DBHelper.html":{},"coverage.html":{}}}],["declarations",{"_index":167,"title":{},"body":{"modules/AppModule.html":{},"modules/CatsModule.html":{},"modules/CronModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["decorators",{"_index":140,"title":{},"body":{"controllers/AppController.html":{},"classes/Base.html":{},"classes/Cat.html":{},"controllers/CatsController.html":{},"injectables/CatsService.html":{},"classes/CreateCatDto.html":{},"classes/CreateUserDto.html":{},"injectables/CronService.html":{},"classes/CrudController.html":{},"classes/GetCatResponseDto.html":{},"classes/GetUserResponseDto.html":{},"controllers/HealthController.html":{},"classes/PaginationParams.html":{},"classes/UpdateCatDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["deeppartial",{"_index":551,"title":{},"body":{"classes/CrudController.html":{},"classes/CrudService.html":{},"interfaces/ICrudService.html":{},"interfaces/IPagination.html":{}}}],["default",{"_index":316,"title":{},"body":{"classes/Cat.html":{},"injectables/CronService.html":{},"classes/PaginationParams.html":{},"classes/User.html":{},"miscellaneous/variables.html":{}}}],["default('development",{"_index":235,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["define",{"_index":148,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/CatsController.html":{},"controllers/HealthController.html":{},"controllers/UsersController.html":{}}}],["defined",{"_index":141,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Base.html":{},"classes/Cat.html":{},"classes/CatRepository.html":{},"controllers/CatsController.html":{},"injectables/CatsService.html":{},"classes/CreateCatDto.html":{},"classes/CreateUserDto.html":{},"injectables/CronService.html":{},"classes/CrudController.html":{},"classes/CrudService.html":{},"injectables/DBHelper.html":{},"injectables/ExcludeNullUndefinedInterceptor.html":{},"classes/GetCatResponseDto.html":{},"classes/GetUserResponseDto.html":{},"controllers/HealthController.html":{},"interfaces/ICrudService.html":{},"classes/Model.html":{},"classes/PaginationParams.html":{},"classes/QueryFailedFilter.html":{},"guards/RequestGuard.html":{},"guards/ResponseGuard.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateCatDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"classes/UserRepository.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["delete",{"_index":394,"title":{},"body":{"controllers/CatsController.html":{},"classes/CrudController.html":{},"classes/CrudService.html":{},"interfaces/ICrudService.html":{},"controllers/UsersController.html":{}}}],["delete(':id",{"_index":626,"title":{},"body":{"classes/CrudController.html":{}}}],["delete(@param('id",{"_index":627,"title":{},"body":{"classes/CrudController.html":{}}}],["delete(criteria",{"_index":641,"title":{},"body":{"classes/CrudService.html":{}}}],["delete(id",{"_index":564,"title":{},"body":{"classes/CrudController.html":{},"interfaces/ICrudService.html":{},"interfaces/IPagination.html":{}}}],["deleted",{"_index":625,"title":{},"body":{"classes/CrudController.html":{}}}],["deleted'})@apiresponse({status",{"_index":565,"title":{},"body":{"classes/CrudController.html":{}}}],["deletedat",{"_index":271,"title":{},"body":{"classes/Base.html":{},"classes/Cat.html":{},"classes/CreateCatDto.html":{},"classes/CreateUserDto.html":{},"classes/GetCatResponseDto.html":{},"classes/GetUserResponseDto.html":{},"interfaces/IBaseEntityModel.html":{},"classes/Model.html":{},"classes/UpdateCatDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{}}}],["deletedatecolumn",{"_index":294,"title":{},"body":{"classes/Base.html":{},"classes/Cat.html":{},"interfaces/IBaseEntityModel.html":{},"classes/Model.html":{},"classes/User.html":{}}}],["deleteone",{"_index":388,"title":{},"body":{"controllers/CatsController.html":{}}}],["deleteone(@parsedrequest",{"_index":453,"title":{},"body":{"controllers/CatsController.html":{}}}],["deleteone(r",{"_index":406,"title":{},"body":{"controllers/CatsController.html":{}}}],["deleteresult",{"_index":669,"title":{},"body":{"classes/CrudService.html":{},"interfaces/ICrudService.html":{},"interfaces/IPagination.html":{}}}],["deletes",{"_index":372,"title":{},"body":{"classes/CatRepository.html":{},"injectables/CatsService.html":{},"classes/UserRepository.html":{},"injectables/UsersService.html":{}}}],["dependencies",{"_index":165,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/CatsModule.html":{},"modules/CronModule.html":{},"modules/UsersModule.html":{},"dependencies.html":{},"overview.html":{}}}],["desc",{"_index":848,"title":{},"body":{"classes/PaginationParams.html":{},"miscellaneous/enumerations.html":{}}}],["described",{"_index":795,"title":{},"body":{"controllers/HealthController.html":{}}}],["describes",{"_index":828,"title":{},"body":{"classes/PaginationParams.html":{}}}],["description",{"_index":350,"title":{},"body":{"classes/Cat.html":{},"classes/CreateCatDto.html":{},"classes/CreateUserDto.html":{},"classes/CrudController.html":{},"injectables/ExcludeNullUndefinedInterceptor.html":{},"classes/GetCatResponseDto.html":{},"classes/GetUserResponseDto.html":{},"interfaces/IPagination-1.html":{},"classes/PaginationParams.html":{},"injectables/TimeoutInterceptor.html":{},"classes/UpdateCatDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"index.html":{}}}],["development",{"_index":1119,"title":{},"body":{"index.html":{}}}],["disable",{"_index":145,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"classes/Cat.html":{},"classes/CatRepository.html":{},"controllers/CatsController.html":{},"classes/CrudService.html":{},"injectables/ExcludeNullUndefinedInterceptor.html":{},"controllers/HealthController.html":{},"guards/RequestGuard.html":{},"interfaces/Response.html":{},"guards/ResponseGuard.html":{},"injectables/TransformInterceptor.html":{},"classes/User.html":{},"classes/UserRepository.html":{},"controllers/UsersController.html":{}}}],["distance",{"_index":104,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{}}}],["distanceaway",{"_index":105,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{}}}],["dns",{"_index":781,"title":{},"body":{"controllers/HealthController.html":{}}}],["dnshealthindicator",{"_index":776,"title":{},"body":{"controllers/HealthController.html":{}}}],["docs",{"_index":785,"title":{},"body":{"controllers/HealthController.html":{}}}],["documentation",{"_index":1011,"title":{},"body":{"coverage.html":{}}}],["dto",{"_index":434,"title":{},"body":{"controllers/CatsController.html":{},"controllers/UsersController.html":{}}}],["e",{"_index":952,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["e.g",{"_index":646,"title":{},"body":{"classes/CrudService.html":{}}}],["e2e",{"_index":1128,"title":{},"body":{"index.html":{}}}],["each",{"_index":741,"title":{},"body":{"injectables/ExcludeNullUndefinedInterceptor.html":{}}}],["eager",{"_index":441,"title":{},"body":{"controllers/CatsController.html":{},"controllers/UsersController.html":{}}}],["edited",{"_index":617,"title":{},"body":{"classes/CrudController.html":{}}}],["edited.'})@apiresponse({status",{"_index":584,"title":{},"body":{"classes/CrudController.html":{}}}],["efficient",{"_index":1110,"title":{},"body":{"index.html":{}}}],["emergencytype",{"_index":106,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{}}}],["empty",{"_index":743,"title":{},"body":{"injectables/ExcludeNullUndefinedInterceptor.html":{}}}],["end",{"_index":948,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["entities",{"_index":237,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["entities/base",{"_index":594,"title":{},"body":{"classes/CrudController.html":{},"classes/CrudService.html":{}}}],["entity",{"_index":342,"title":{},"body":{"classes/Cat.html":{},"classes/CrudController.html":{},"classes/CrudService.html":{},"interfaces/ICrudService.html":{},"interfaces/IPagination.html":{},"classes/User.html":{}}}],["entity.id",{"_index":648,"title":{},"body":{"classes/CrudService.html":{}}}],["entitynotfound",{"_index":631,"title":{},"body":{"classes/CrudService.html":{}}}],["entityrepository",{"_index":375,"title":{},"body":{"classes/CatRepository.html":{},"classes/UserRepository.html":{}}}],["entityrepository(cat",{"_index":378,"title":{},"body":{"classes/CatRepository.html":{}}}],["entityrepository(user",{"_index":984,"title":{},"body":{"classes/UserRepository.html":{}}}],["enum",{"_index":846,"title":{},"body":{"classes/PaginationParams.html":{}}}],["enumerations",{"_index":1094,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["err",{"_index":692,"title":{},"body":{"classes/CrudService.html":{}}}],["errno",{"_index":873,"title":{},"body":{"classes/QueryFailedFilter.html":{}}}],["error",{"_index":12,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"classes/CrudService.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/ITryRequest.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"guards/ResponseGuard.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{},"miscellaneous/typealiases.html":{}}}],["error(error",{"_index":919,"title":{},"body":{"guards/ResponseGuard.html":{}}}],["error.errors",{"_index":925,"title":{},"body":{"guards/ResponseGuard.html":{}}}],["error.message",{"_index":924,"title":{},"body":{"guards/ResponseGuard.html":{}}}],["errors",{"_index":922,"title":{},"body":{"guards/ResponseGuard.html":{}}}],["eslint",{"_index":144,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"classes/Cat.html":{},"classes/CatRepository.html":{},"controllers/CatsController.html":{},"classes/CrudService.html":{},"injectables/ExcludeNullUndefinedInterceptor.html":{},"controllers/HealthController.html":{},"guards/RequestGuard.html":{},"interfaces/Response.html":{},"guards/ResponseGuard.html":{},"injectables/TransformInterceptor.html":{},"classes/User.html":{},"classes/UserRepository.html":{},"controllers/UsersController.html":{}}}],["eslint/no",{"_index":193,"title":{},"body":{"modules/AppModule.html":{},"classes/CatRepository.html":{},"classes/CrudService.html":{},"injectables/ExcludeNullUndefinedInterceptor.html":{},"interfaces/Response.html":{},"guards/ResponseGuard.html":{},"injectables/TransformInterceptor.html":{},"classes/UserRepository.html":{}}}],["example",{"_index":277,"title":{},"body":{"classes/Base.html":{},"classes/Cat.html":{},"classes/CreateCatDto.html":{},"classes/CreateUserDto.html":{},"classes/GetCatResponseDto.html":{},"classes/GetUserResponseDto.html":{},"interfaces/IBaseEntityModel.html":{},"classes/Model.html":{},"classes/UpdateCatDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{}}}],["exception",{"_index":865,"title":{},"body":{"classes/QueryFailedFilter.html":{}}}],["exceptionfilter",{"_index":859,"title":{},"body":{"classes/QueryFailedFilter.html":{}}}],["exclude",{"_index":304,"title":{},"body":{"classes/Cat.html":{},"controllers/CatsController.html":{},"classes/CreateCatDto.html":{},"classes/CreateUserDto.html":{},"classes/GetCatResponseDto.html":{},"classes/GetUserResponseDto.html":{},"classes/UpdateCatDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{}}}],["excludenullundefinedinterceptor",{"_index":736,"title":{"injectables/ExcludeNullUndefinedInterceptor.html":{}},"body":{"injectables/ExcludeNullUndefinedInterceptor.html":{},"coverage.html":{}}}],["executioncontext",{"_index":746,"title":{},"body":{"injectables/ExcludeNullUndefinedInterceptor.html":{},"guards/RequestGuard.html":{},"interfaces/Response.html":{},"guards/ResponseGuard.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/TransformInterceptor.html":{}}}],["existing",{"_index":583,"title":{},"body":{"classes/CrudController.html":{}}}],["export",{"_index":27,"title":{},"body":{"interfaces/APIResponse.html":{},"controllers/AppController.html":{},"interfaces/AppLaunchAction.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Base.html":{},"classes/Cat.html":{},"classes/CatRepository.html":{},"controllers/CatsController.html":{},"modules/CatsModule.html":{},"injectables/CatsService.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"classes/CreateCatDto.html":{},"classes/CreateUserDto.html":{},"modules/CronModule.html":{},"injectables/CronService.html":{},"classes/CrudController.html":{},"classes/CrudService.html":{},"injectables/DBHelper.html":{},"injectables/ExcludeNullUndefinedInterceptor.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"classes/GetCatResponseDto.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"classes/GetUserResponseDto.html":{},"controllers/HealthController.html":{},"interfaces/IBaseEntityModel.html":{},"interfaces/ICrudService.html":{},"interfaces/IPagination.html":{},"interfaces/IPagination-1.html":{},"interfaces/ITryRequest.html":{},"classes/Model.html":{},"classes/PaginationParams.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"classes/QueryFailedFilter.html":{},"guards/RequestGuard.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/Response.html":{},"guards/ResponseGuard.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateCatDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{},"classes/UserRepository.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["exports",{"_index":170,"title":{},"body":{"modules/AppModule.html":{},"modules/CatsModule.html":{},"modules/CronModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["express",{"_index":1061,"title":{},"body":{"dependencies.html":{}}}],["extend.ts",{"_index":1029,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["extendmoment(momentdefault",{"_index":1169,"title":{},"body":{"miscellaneous/variables.html":{}}}],["extends",{"_index":131,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"classes/Base.html":{},"classes/CatRepository.html":{},"injectables/CatsService.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/IBaseEntityModel.html":{},"classes/Model.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{},"classes/UserRepository.html":{},"injectables/UsersService.html":{}}}],["failed.filter.ts",{"_index":858,"title":{},"body":{"classes/QueryFailedFilter.html":{},"coverage.html":{}}}],["failed.filter.ts:14",{"_index":864,"title":{},"body":{"classes/QueryFailedFilter.html":{}}}],["false",{"_index":332,"title":{},"body":{"classes/Cat.html":{},"classes/CrudService.html":{},"guards/ResponseGuard.html":{},"classes/User.html":{},"controllers/UsersController.html":{}}}],["false})@type(undefined",{"_index":334,"title":{},"body":{"classes/Cat.html":{},"classes/User.html":{}}}],["feed",{"_index":100,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{}}}],["file",{"_index":5,"title":{},"body":{"interfaces/APIResponse.html":{},"controllers/AppController.html":{},"interfaces/AppLaunchAction.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Base.html":{},"classes/Cat.html":{},"classes/CatRepository.html":{},"controllers/CatsController.html":{},"modules/CatsModule.html":{},"injectables/CatsService.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"classes/CreateCatDto.html":{},"classes/CreateUserDto.html":{},"modules/CronModule.html":{},"injectables/CronService.html":{},"classes/CrudController.html":{},"classes/CrudService.html":{},"injectables/DBHelper.html":{},"injectables/ExcludeNullUndefinedInterceptor.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"classes/GetCatResponseDto.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"classes/GetUserResponseDto.html":{},"controllers/HealthController.html":{},"interfaces/IBaseEntityModel.html":{},"interfaces/ICrudService.html":{},"interfaces/IPagination.html":{},"interfaces/IPagination-1.html":{},"interfaces/ITryRequest.html":{},"classes/Model.html":{},"classes/PaginationParams.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"classes/QueryFailedFilter.html":{},"guards/RequestGuard.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/Response.html":{},"guards/ResponseGuard.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateCatDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{},"classes/UserRepository.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["filter",{"_index":575,"title":{},"body":{"classes/CrudController.html":{},"classes/CrudService.html":{},"interfaces/ICrudService.html":{}}}],["filter((value",{"_index":733,"title":{},"body":{"injectables/DBHelper.html":{}}}],["find",{"_index":570,"title":{},"body":{"classes/CrudController.html":{},"injectables/DBHelper.html":{}}}],["find(find",{"_index":716,"title":{},"body":{"injectables/DBHelper.html":{}}}],["findall",{"_index":543,"title":{},"body":{"classes/CrudController.html":{},"classes/CrudService.html":{},"interfaces/ICrudService.html":{}}}],["findall(filter",{"_index":568,"title":{},"body":{"classes/CrudController.html":{},"classes/CrudService.html":{},"interfaces/ICrudService.html":{},"interfaces/IPagination.html":{}}}],["findby",{"_index":713,"title":{},"body":{"injectables/DBHelper.html":{}}}],["findbyid",{"_index":544,"title":{},"body":{"classes/CrudController.html":{}}}],["findbyid(@param('id",{"_index":608,"title":{},"body":{"classes/CrudController.html":{}}}],["findbyid(id",{"_index":576,"title":{},"body":{"classes/CrudController.html":{}}}],["findconditions",{"_index":642,"title":{},"body":{"classes/CrudService.html":{},"interfaces/ICrudService.html":{},"interfaces/IPagination.html":{}}}],["findmanyoptions",{"_index":638,"title":{},"body":{"classes/CrudService.html":{},"interfaces/ICrudService.html":{},"interfaces/IPagination.html":{}}}],["findone",{"_index":632,"title":{},"body":{"classes/CrudService.html":{},"interfaces/ICrudService.html":{},"interfaces/IPagination.html":{}}}],["findone(id",{"_index":651,"title":{},"body":{"classes/CrudService.html":{},"interfaces/ICrudService.html":{}}}],["findonebyid(id).pipe(map(entity",{"_index":647,"title":{},"body":{"classes/CrudService.html":{}}}],["findoneoptions",{"_index":652,"title":{},"body":{"classes/CrudService.html":{},"interfaces/ICrudService.html":{},"interfaces/IPagination.html":{}}}],["findoneorfail",{"_index":633,"title":{},"body":{"classes/CrudService.html":{}}}],["findoneorfail(id",{"_index":654,"title":{},"body":{"classes/CrudService.html":{}}}],["first",{"_index":798,"title":{},"body":{"controllers/HealthController.html":{}}}],["fixme",{"_index":622,"title":{},"body":{"classes/CrudController.html":{}}}],["follower",{"_index":127,"title":{"interfaces/Follower.html":{}},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{},"coverage.html":{}}}],["following",{"_index":55,"title":{"interfaces/Following.html":{}},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{},"coverage.html":{}}}],["forbidden",{"_index":603,"title":{},"body":{"classes/CrudController.html":{}}}],["form",{"_index":374,"title":{},"body":{"classes/CatRepository.html":{},"injectables/CatsService.html":{},"classes/UserRepository.html":{},"injectables/UsersService.html":{}}}],["format",{"_index":275,"title":{},"body":{"classes/Base.html":{},"interfaces/IBaseEntityModel.html":{},"classes/Model.html":{}}}],["found",{"_index":572,"title":{},"body":{"classes/CrudController.html":{},"classes/CrudService.html":{}}}],["found'})@apiresponse({status",{"_index":585,"title":{},"body":{"classes/CrudController.html":{}}}],["found'})@get(':id",{"_index":579,"title":{},"body":{"classes/CrudController.html":{}}}],["found'})@httpcode(httpstatus.accepted)@delete(':id",{"_index":566,"title":{},"body":{"classes/CrudController.html":{}}}],["framework",{"_index":1108,"title":{},"body":{"index.html":{}}}],["function",{"_index":800,"title":{},"body":{"controllers/HealthController.html":{},"guards/RequestGuard.html":{},"guards/ResponseGuard.html":{},"coverage.html":{}}}],["functions",{"_index":1096,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["gender",{"_index":56,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{}}}],["generic",{"_index":822,"title":{},"body":{"interfaces/IPagination-1.html":{},"classes/PaginationParams.html":{}}}],["get(':id",{"_index":607,"title":{},"body":{"classes/CrudController.html":{}}}],["get()@healthcheck",{"_index":771,"title":{},"body":{"controllers/HealthController.html":{}}}],["getapplaunchdata",{"_index":29,"title":{"interfaces/GetAppLaunchData.html":{}},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["getcatresponsedto",{"_index":428,"title":{"classes/GetCatResponseDto.html":{}},"body":{"controllers/CatsController.html":{},"classes/CreateCatDto.html":{},"classes/GetCatResponseDto.html":{},"classes/UpdateCatDto.html":{},"coverage.html":{}}}],["getcomments",{"_index":32,"title":{"interfaces/GetComments.html":{}},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["getfollowers",{"_index":34,"title":{"interfaces/GetFollowers.html":{}},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["getfollowing",{"_index":35,"title":{"interfaces/GetFollowing.html":{}},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["gethello",{"_index":139,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["getmanager",{"_index":376,"title":{},"body":{"classes/CatRepository.html":{},"injectables/CatsService.html":{},"classes/UserRepository.html":{}}}],["getmanager().query('delete",{"_index":381,"title":{},"body":{"classes/CatRepository.html":{},"classes/UserRepository.html":{}}}],["getmany",{"_index":389,"title":{},"body":{"controllers/CatsController.html":{}}}],["getmany(@parsedrequest",{"_index":447,"title":{},"body":{"controllers/CatsController.html":{}}}],["getmany(r",{"_index":408,"title":{},"body":{"controllers/CatsController.html":{}}}],["getnotifications",{"_index":80,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{}}}],["getone",{"_index":390,"title":{},"body":{"controllers/CatsController.html":{}}}],["getone(@parsedrequest",{"_index":445,"title":{},"body":{"controllers/CatsController.html":{}}}],["getone(r",{"_index":410,"title":{},"body":{"controllers/CatsController.html":{}}}],["getpasswordhash",{"_index":634,"title":{},"body":{"classes/CrudService.html":{}}}],["getpasswordhash(password",{"_index":656,"title":{},"body":{"classes/CrudService.html":{}}}],["getrescuelist",{"_index":33,"title":{"interfaces/GetRescueList.html":{}},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["getting",{"_index":1104,"title":{"index.html":{}},"body":{}}],["getuserposts",{"_index":31,"title":{"interfaces/GetUserPosts.html":{}},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["getuserprofile",{"_index":30,"title":{"interfaces/GetUserProfile.html":{}},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["getuserresponsedto",{"_index":505,"title":{"classes/GetUserResponseDto.html":{}},"body":{"classes/CreateUserDto.html":{},"classes/GetUserResponseDto.html":{},"classes/UpdateUserDto.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["grow",{"_index":1135,"title":{},"body":{"index.html":{}}}],["guard",{"_index":879,"title":{"guards/RequestGuard.html":{},"guards/ResponseGuard.html":{}},"body":{"guards/RequestGuard.html":{},"coverage.html":{}}}],["guards",{"_index":881,"title":{},"body":{"guards/RequestGuard.html":{},"guards/ResponseGuard.html":{},"overview.html":{}}}],["handlecron",{"_index":514,"title":{},"body":{"injectables/CronService.html":{}}}],["handleinterval",{"_index":515,"title":{},"body":{"injectables/CronService.html":{}}}],["handletimeout",{"_index":516,"title":{},"body":{"injectables/CronService.html":{}}}],["hapi/joi",{"_index":208,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["hashpassword",{"_index":703,"title":{},"body":{"classes/CrudService.html":{}}}],["health",{"_index":251,"title":{},"body":{"modules/AppModule.html":{},"controllers/HealthController.html":{}}}],["health/health.controller",{"_index":214,"title":{},"body":{"modules/AppModule.html":{}}}],["healthcheck",{"_index":777,"title":{},"body":{"controllers/HealthController.html":{}}}],["healthcheckservice",{"_index":778,"title":{},"body":{"controllers/HealthController.html":{}}}],["healthcontroller",{"_index":181,"title":{"controllers/HealthController.html":{}},"body":{"modules/AppModule.html":{},"controllers/HealthController.html":{},"coverage.html":{}}}],["hello",{"_index":263,"title":{},"body":{"injectables/AppService.html":{}}}],["helmet",{"_index":1072,"title":{},"body":{"dependencies.html":{}}}],["helpers",{"_index":888,"title":{},"body":{"guards/RequestGuard.html":{},"guards/ResponseGuard.html":{}}}],["here",{"_index":1144,"title":{},"body":{"index.html":{}}}],["host",{"_index":862,"title":{},"body":{"classes/QueryFailedFilter.html":{}}}],["host.switchtohttp",{"_index":869,"title":{},"body":{"classes/QueryFailedFilter.html":{}}}],["httpcode",{"_index":590,"title":{},"body":{"classes/CrudController.html":{}}}],["httpcode(httpstatus.accepted",{"_index":618,"title":{},"body":{"classes/CrudController.html":{}}}],["httpcode(httpstatus.created",{"_index":614,"title":{},"body":{"classes/CrudController.html":{}}}],["httpexception",{"_index":866,"title":{},"body":{"classes/QueryFailedFilter.html":{}}}],["https://docs.nestjs.com",{"_index":786,"title":{},"body":{"controllers/HealthController.html":{}}}],["https://github.com/microsoft/typescript/issues/21592",{"_index":690,"title":{},"body":{"classes/CrudService.html":{}}}],["https://github.com/typeorm/typeorm/issues/1544",{"_index":623,"title":{},"body":{"classes/CrudController.html":{}}}],["https://nestjs.com",{"_index":1151,"title":{},"body":{"index.html":{}}}],["httpstatus",{"_index":24,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"classes/CrudController.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"classes/QueryFailedFilter.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{}}}],["httpstatus.bad_request",{"_index":612,"title":{},"body":{"classes/CrudController.html":{}}}],["httpstatus.created",{"_index":610,"title":{},"body":{"classes/CrudController.html":{}}}],["httpstatus.forbidden",{"_index":602,"title":{},"body":{"classes/CrudController.html":{}}}],["httpstatus.no_content",{"_index":624,"title":{},"body":{"classes/CrudController.html":{}}}],["httpstatus.not_found",{"_index":606,"title":{},"body":{"classes/CrudController.html":{}}}],["httpstatus.ok",{"_index":604,"title":{},"body":{"classes/CrudController.html":{}}}],["httpstatus.precondition_failed",{"_index":872,"title":{},"body":{"classes/QueryFailedFilter.html":{}}}],["httpstatus.unauthorized",{"_index":600,"title":{},"body":{"classes/CrudController.html":{}}}],["ibaseentitymodel",{"_index":269,"title":{"interfaces/IBaseEntityModel.html":{}},"body":{"classes/Base.html":{},"interfaces/IBaseEntityModel.html":{},"classes/Model.html":{},"coverage.html":{}}}],["icrud.service",{"_index":595,"title":{},"body":{"classes/CrudController.html":{},"classes/CrudService.html":{}}}],["icrudservice",{"_index":547,"title":{"interfaces/ICrudService.html":{}},"body":{"classes/CrudController.html":{},"classes/CrudService.html":{},"interfaces/ICrudService.html":{},"interfaces/IPagination.html":{},"coverage.html":{}}}],["id",{"_index":272,"title":{},"body":{"classes/Base.html":{},"classes/Cat.html":{},"classes/CreateCatDto.html":{},"classes/CreateUserDto.html":{},"classes/CrudController.html":{},"classes/CrudService.html":{},"classes/GetCatResponseDto.html":{},"classes/GetUserResponseDto.html":{},"interfaces/IBaseEntityModel.html":{},"interfaces/ICrudService.html":{},"interfaces/IPagination.html":{},"classes/Model.html":{},"classes/UpdateCatDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{}}}],["id'})@apiresponse({status",{"_index":577,"title":{},"body":{"classes/CrudController.html":{}}}],["identifier",{"_index":1012,"title":{},"body":{"coverage.html":{}}}],["ignore",{"_index":701,"title":{},"body":{"classes/CrudService.html":{},"classes/QueryFailedFilter.html":{}}}],["implements",{"_index":253,"title":{},"body":{"modules/AppModule.html":{},"classes/Base.html":{},"controllers/CatsController.html":{},"classes/CrudService.html":{},"injectables/ExcludeNullUndefinedInterceptor.html":{},"controllers/HealthController.html":{},"interfaces/IBaseEntityModel.html":{},"classes/Model.html":{},"classes/QueryFailedFilter.html":{},"guards/RequestGuard.html":{},"interfaces/Response.html":{},"guards/ResponseGuard.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/TransformInterceptor.html":{},"controllers/UsersController.html":{}}}],["import",{"_index":25,"title":{},"body":{"interfaces/APIResponse.html":{},"controllers/AppController.html":{},"interfaces/AppLaunchAction.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Base.html":{},"classes/Cat.html":{},"classes/CatRepository.html":{},"controllers/CatsController.html":{},"modules/CatsModule.html":{},"injectables/CatsService.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"classes/CreateCatDto.html":{},"classes/CreateUserDto.html":{},"modules/CronModule.html":{},"injectables/CronService.html":{},"classes/CrudController.html":{},"classes/CrudService.html":{},"injectables/DBHelper.html":{},"injectables/ExcludeNullUndefinedInterceptor.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"classes/GetCatResponseDto.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"classes/GetUserResponseDto.html":{},"controllers/HealthController.html":{},"interfaces/IBaseEntityModel.html":{},"interfaces/ICrudService.html":{},"interfaces/IPagination.html":{},"classes/Model.html":{},"classes/PaginationParams.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"classes/QueryFailedFilter.html":{},"guards/RequestGuard.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/Response.html":{},"guards/ResponseGuard.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateCatDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{},"classes/UserRepository.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["import/no",{"_index":346,"title":{},"body":{"classes/Cat.html":{},"classes/User.html":{}}}],["imports",{"_index":182,"title":{},"body":{"modules/AppModule.html":{},"modules/CatsModule.html":{},"modules/UsersModule.html":{}}}],["in,no",{"_index":896,"title":{},"body":{"guards/RequestGuard.html":{}}}],["included",{"_index":818,"title":{},"body":{"interfaces/ICrudService.html":{},"interfaces/IPagination.html":{},"interfaces/IPagination-1.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"interfaces/APIResponse.html":{},"controllers/AppController.html":{},"interfaces/AppLaunchAction.html":{},"injectables/AppService.html":{},"classes/Base.html":{},"classes/Cat.html":{},"classes/CatRepository.html":{},"controllers/CatsController.html":{},"injectables/CatsService.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"classes/CreateCatDto.html":{},"classes/CreateUserDto.html":{},"injectables/CronService.html":{},"classes/CrudController.html":{},"classes/CrudService.html":{},"injectables/DBHelper.html":{},"injectables/ExcludeNullUndefinedInterceptor.html":{},"interfaces/Follower.html":{},"interfaces/GetAppLaunchData.html":{},"classes/GetCatResponseDto.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"classes/GetUserResponseDto.html":{},"controllers/HealthController.html":{},"interfaces/IBaseEntityModel.html":{},"interfaces/ICrudService.html":{},"interfaces/IPagination.html":{},"interfaces/IPagination-1.html":{},"interfaces/ITryRequest.html":{},"classes/PaginationParams.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"classes/QueryFailedFilter.html":{},"guards/RequestGuard.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/Response.html":{},"guards/ResponseGuard.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateCatDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{},"classes/UserRepository.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"interfaces/APIResponse.html":{},"controllers/AppController.html":{},"interfaces/AppLaunchAction.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Base.html":{},"classes/Cat.html":{},"classes/CatRepository.html":{},"controllers/CatsController.html":{},"modules/CatsModule.html":{},"injectables/CatsService.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"classes/CreateCatDto.html":{},"classes/CreateUserDto.html":{},"modules/CronModule.html":{},"injectables/CronService.html":{},"classes/CrudController.html":{},"classes/CrudService.html":{},"injectables/DBHelper.html":{},"injectables/ExcludeNullUndefinedInterceptor.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"classes/GetCatResponseDto.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"classes/GetUserResponseDto.html":{},"controllers/HealthController.html":{},"interfaces/IBaseEntityModel.html":{},"interfaces/ICrudService.html":{},"interfaces/IPagination.html":{},"interfaces/IPagination-1.html":{},"interfaces/ITryRequest.html":{},"classes/Model.html":{},"classes/PaginationParams.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"classes/QueryFailedFilter.html":{},"guards/RequestGuard.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/Response.html":{},"guards/ResponseGuard.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateCatDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{},"classes/UserRepository.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["initialized",{"_index":255,"title":{},"body":{"modules/AppModule.html":{},"controllers/HealthController.html":{}}}],["injectable",{"_index":259,"title":{"injectables/AppService.html":{},"injectables/CatsService.html":{},"injectables/CronService.html":{},"injectables/DBHelper.html":{},"injectables/ExcludeNullUndefinedInterceptor.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/TransformInterceptor.html":{},"injectables/UsersService.html":{}},"body":{"injectables/AppService.html":{},"injectables/CatsService.html":{},"injectables/CronService.html":{},"injectables/DBHelper.html":{},"injectables/ExcludeNullUndefinedInterceptor.html":{},"guards/RequestGuard.html":{},"interfaces/Response.html":{},"guards/ResponseGuard.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/TransformInterceptor.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["injectables",{"_index":260,"title":{},"body":{"injectables/AppService.html":{},"injectables/CatsService.html":{},"injectables/CronService.html":{},"injectables/DBHelper.html":{},"injectables/ExcludeNullUndefinedInterceptor.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/TransformInterceptor.html":{},"injectables/UsersService.html":{},"overview.html":{}}}],["injectrepository",{"_index":476,"title":{},"body":{"injectables/CatsService.html":{},"injectables/UsersService.html":{}}}],["injectrepository(catrepository",{"_index":474,"title":{},"body":{"injectables/CatsService.html":{}}}],["injectrepository(userrepository",{"_index":1007,"title":{},"body":{"injectables/UsersService.html":{}}}],["inner",{"_index":364,"title":{},"body":{"classes/Cat.html":{},"classes/User.html":{}}}],["input",{"_index":298,"title":{},"body":{"classes/Base.html":{},"classes/CrudController.html":{},"interfaces/IBaseEntityModel.html":{},"classes/Model.html":{}}}],["inputs",{"_index":892,"title":{},"body":{"guards/RequestGuard.html":{}}}],["inputs[key",{"_index":900,"title":{},"body":{"guards/RequestGuard.html":{}}}],["installation",{"_index":1116,"title":{},"body":{"index.html":{}}}],["installrunning",{"_index":1118,"title":{},"body":{"index.html":{}}}],["instanceof",{"_index":902,"title":{},"body":{"guards/RequestGuard.html":{},"guards/ResponseGuard.html":{},"injectables/TimeoutInterceptor.html":{}}}],["intercept",{"_index":744,"title":{},"body":{"injectables/ExcludeNullUndefinedInterceptor.html":{},"interfaces/Response.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/TransformInterceptor.html":{}}}],["intercept(context",{"_index":745,"title":{},"body":{"injectables/ExcludeNullUndefinedInterceptor.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/TransformInterceptor.html":{}}}],["interceptor",{"_index":938,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["interceptors",{"_index":739,"title":{},"body":{"injectables/ExcludeNullUndefinedInterceptor.html":{}}}],["interface",{"_index":0,"title":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/IBaseEntityModel.html":{},"interfaces/ICrudService.html":{},"interfaces/IPagination.html":{},"interfaces/IPagination-1.html":{},"interfaces/ITryRequest.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/Response.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{}},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"classes/Base.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/IBaseEntityModel.html":{},"interfaces/ICrudService.html":{},"interfaces/IPagination.html":{},"interfaces/IPagination-1.html":{},"interfaces/ITryRequest.html":{},"classes/Model.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{},"coverage.html":{}}}],["interfaces",{"_index":2,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/IBaseEntityModel.html":{},"interfaces/ICrudService.html":{},"interfaces/IPagination.html":{},"interfaces/IPagination-1.html":{},"interfaces/ITryRequest.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/Response.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{},"overview.html":{}}}],["interval",{"_index":529,"title":{},"body":{"injectables/CronService.html":{}}}],["interval(100000",{"_index":519,"title":{},"body":{"injectables/CronService.html":{}}}],["invalid",{"_index":557,"title":{},"body":{"classes/CrudController.html":{}}}],["ipagination",{"_index":596,"title":{"interfaces/IPagination.html":{},"interfaces/IPagination-1.html":{}},"body":{"classes/CrudController.html":{},"classes/CrudService.html":{},"interfaces/ICrudService.html":{},"interfaces/IPagination.html":{},"interfaces/IPagination-1.html":{},"coverage.html":{}}}],["isactive",{"_index":49,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{}}}],["isglobal",{"_index":219,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["isint",{"_index":490,"title":{},"body":{"classes/CreateCatDto.html":{},"classes/GetCatResponseDto.html":{},"classes/UpdateCatDto.html":{}}}],["isnotempty",{"_index":493,"title":{},"body":{"classes/CreateCatDto.html":{},"classes/CreateUserDto.html":{},"classes/GetCatResponseDto.html":{},"classes/GetUserResponseDto.html":{},"classes/UpdateCatDto.html":{},"classes/UpdateUserDto.html":{}}}],["isoptional",{"_index":495,"title":{},"body":{"classes/CreateCatDto.html":{},"classes/CreateUserDto.html":{},"classes/GetCatResponseDto.html":{},"classes/GetUserResponseDto.html":{},"classes/PaginationParams.html":{},"classes/UpdateCatDto.html":{},"classes/UpdateUserDto.html":{}}}],["isownprofile",{"_index":57,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{}}}],["ispositive",{"_index":494,"title":{},"body":{"classes/CreateCatDto.html":{},"classes/GetCatResponseDto.html":{},"classes/UpdateCatDto.html":{}}}],["isrecent",{"_index":99,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{}}}],["isrescuer",{"_index":58,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{}}}],["isstring",{"_index":491,"title":{},"body":{"classes/CreateCatDto.html":{},"classes/CreateUserDto.html":{},"classes/GetCatResponseDto.html":{},"classes/GetUserResponseDto.html":{},"classes/UpdateCatDto.html":{},"classes/UpdateUserDto.html":{}}}],["isuserreactedtopost",{"_index":87,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{}}}],["items",{"_index":678,"title":{},"body":{"classes/CrudService.html":{},"interfaces/ICrudService.html":{},"interfaces/IPagination.html":{},"interfaces/IPagination-1.html":{}}}],["itryrequest",{"_index":671,"title":{"interfaces/ITryRequest.html":{}},"body":{"classes/CrudService.html":{},"interfaces/ITryRequest.html":{},"coverage.html":{}}}],["joi",{"_index":207,"title":{},"body":{"modules/AppModule.html":{}}}],["joi.number().default(3000",{"_index":227,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["joi.object",{"_index":225,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["joi.string",{"_index":229,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["join",{"_index":363,"title":{},"body":{"classes/Cat.html":{},"controllers/CatsController.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"index.html":{}}}],["kamil",{"_index":1148,"title":{},"body":{"index.html":{}}}],["key",{"_index":899,"title":{},"body":{"guards/RequestGuard.html":{}}}],["keyof",{"_index":855,"title":{},"body":{"classes/PaginationParams.html":{}}}],["kitty",{"_index":353,"title":{},"body":{"classes/Cat.html":{},"classes/CreateCatDto.html":{},"classes/CreateUserDto.html":{},"classes/GetCatResponseDto.html":{},"classes/GetUserResponseDto.html":{},"classes/UpdateCatDto.html":{},"classes/UpdateUserDto.html":{}}}],["kitty'})@column({name",{"_index":322,"title":{},"body":{"classes/Cat.html":{}}}],["kitty'})@isstring()@isnotempty()@minlength(2)@maxlength(36",{"_index":485,"title":{},"body":{"classes/CreateCatDto.html":{}}}],["kitty'})@isstring()@isnotempty()@minlength(2)@maxlength(36)@isoptional",{"_index":960,"title":{},"body":{"classes/UpdateCatDto.html":{},"classes/UpdateUserDto.html":{}}}],["latitude",{"_index":59,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{}}}],["lazy",{"_index":331,"title":{},"body":{"classes/Cat.html":{},"classes/User.html":{}}}],["left",{"_index":362,"title":{},"body":{"classes/Cat.html":{},"classes/User.html":{}}}],["legend",{"_index":166,"title":{},"body":{"modules/AppModule.html":{},"modules/CatsModule.html":{},"modules/CronModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["length",{"_index":324,"title":{},"body":{"classes/Cat.html":{},"classes/User.html":{}}}],["license",{"_index":1154,"title":{},"body":{"index.html":{}}}],["licensed",{"_index":1132,"title":{},"body":{"index.html":{}}}],["limit",{"_index":843,"title":{},"body":{"classes/PaginationParams.html":{},"dependencies.html":{}}}],["line",{"_index":345,"title":{},"body":{"classes/Cat.html":{},"classes/CatRepository.html":{},"classes/CrudService.html":{},"injectables/ExcludeNullUndefinedInterceptor.html":{},"guards/RequestGuard.html":{},"interfaces/Response.html":{},"guards/ResponseGuard.html":{},"injectables/TransformInterceptor.html":{},"classes/User.html":{},"classes/UserRepository.html":{}}}],["link",{"_index":37,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{}}}],["listing",{"_index":819,"title":{},"body":{"interfaces/ICrudService.html":{},"interfaces/IPagination.html":{},"interfaces/IPagination-1.html":{}}}],["literal",{"_index":905,"title":{},"body":{"interfaces/Rescues.html":{}}}],["local",{"_index":1079,"title":{},"body":{"dependencies.html":{}}}],["lodash",{"_index":722,"title":{},"body":{"injectables/DBHelper.html":{},"dependencies.html":{}}}],["logger",{"_index":513,"title":{},"body":{"injectables/CronService.html":{}}}],["logger(cronservice.name",{"_index":526,"title":{},"body":{"injectables/CronService.html":{}}}],["logging",{"_index":243,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["longitude",{"_index":60,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{}}}],["maine",{"_index":310,"title":{},"body":{"classes/Cat.html":{},"classes/CreateCatDto.html":{},"classes/GetCatResponseDto.html":{},"classes/UpdateCatDto.html":{}}}],["manytoone",{"_index":343,"title":{},"body":{"classes/Cat.html":{}}}],["manytoone((type",{"_index":356,"title":{},"body":{"classes/Cat.html":{}}}],["manytoone(undefined",{"_index":330,"title":{},"body":{"classes/Cat.html":{}}}],["map",{"_index":753,"title":{},"body":{"injectables/ExcludeNullUndefinedInterceptor.html":{},"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["matching",{"_index":132,"title":{},"body":{"interfaces/APIResponse.html":{},"controllers/AppController.html":{},"interfaces/AppLaunchAction.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Base.html":{},"classes/Cat.html":{},"classes/CatRepository.html":{},"controllers/CatsController.html":{},"modules/CatsModule.html":{},"injectables/CatsService.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"classes/CreateCatDto.html":{},"classes/CreateUserDto.html":{},"modules/CronModule.html":{},"injectables/CronService.html":{},"classes/CrudController.html":{},"classes/CrudService.html":{},"injectables/DBHelper.html":{},"injectables/ExcludeNullUndefinedInterceptor.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"classes/GetCatResponseDto.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"classes/GetUserResponseDto.html":{},"controllers/HealthController.html":{},"interfaces/IBaseEntityModel.html":{},"interfaces/ICrudService.html":{},"interfaces/IPagination.html":{},"interfaces/IPagination-1.html":{},"interfaces/ITryRequest.html":{},"classes/Model.html":{},"classes/PaginationParams.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"classes/QueryFailedFilter.html":{},"guards/RequestGuard.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/Response.html":{},"guards/ResponseGuard.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateCatDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{},"classes/UserRepository.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["max",{"_index":844,"title":{},"body":{"classes/PaginationParams.html":{}}}],["max(50",{"_index":851,"title":{},"body":{"classes/PaginationParams.html":{}}}],["maximum",{"_index":840,"title":{},"body":{"classes/PaginationParams.html":{}}}],["maxlength",{"_index":496,"title":{},"body":{"classes/CreateCatDto.html":{},"classes/CreateUserDto.html":{},"classes/GetCatResponseDto.html":{},"classes/GetUserResponseDto.html":{},"classes/UpdateCatDto.html":{},"classes/UpdateUserDto.html":{}}}],["maxlength(36",{"_index":499,"title":{},"body":{"classes/CreateCatDto.html":{},"classes/CreateUserDto.html":{},"classes/GetCatResponseDto.html":{},"classes/GetUserResponseDto.html":{},"classes/UpdateCatDto.html":{},"classes/UpdateUserDto.html":{}}}],["member",{"_index":197,"title":{},"body":{"modules/AppModule.html":{}}}],["mergemap",{"_index":667,"title":{},"body":{"classes/CrudService.html":{}}}],["mergemap((signal",{"_index":709,"title":{},"body":{"classes/CrudService.html":{}}}],["message",{"_index":13,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"classes/QueryFailedFilter.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"guards/ResponseGuard.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{}}}],["meta",{"_index":930,"title":{},"body":{"guards/ResponseGuard.html":{}}}],["metadata",{"_index":1082,"title":{},"body":{"dependencies.html":{}}}],["method",{"_index":696,"title":{},"body":{"classes/CrudService.html":{}}}],["methods",{"_index":138,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/CatRepository.html":{},"controllers/CatsController.html":{},"injectables/CatsService.html":{},"injectables/CronService.html":{},"classes/CrudController.html":{},"classes/CrudService.html":{},"injectables/DBHelper.html":{},"injectables/ExcludeNullUndefinedInterceptor.html":{},"controllers/HealthController.html":{},"interfaces/ICrudService.html":{},"classes/QueryFailedFilter.html":{},"guards/RequestGuard.html":{},"guards/ResponseGuard.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/TransformInterceptor.html":{},"classes/UserRepository.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["migrations",{"_index":244,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["migrations_typeorm",{"_index":247,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["migrationsrun",{"_index":248,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["migrationstablename",{"_index":246,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["milliseconds",{"_index":950,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["min",{"_index":845,"title":{},"body":{"classes/PaginationParams.html":{}}}],["min(0",{"_index":850,"title":{},"body":{"classes/PaginationParams.html":{}}}],["minimum",{"_index":835,"title":{},"body":{"classes/PaginationParams.html":{}}}],["minlength",{"_index":492,"title":{},"body":{"classes/CreateCatDto.html":{},"classes/CreateUserDto.html":{},"classes/GetCatResponseDto.html":{},"classes/GetUserResponseDto.html":{},"classes/UpdateCatDto.html":{},"classes/UpdateUserDto.html":{}}}],["minlength(2",{"_index":498,"title":{},"body":{"classes/CreateCatDto.html":{},"classes/CreateUserDto.html":{},"classes/GetCatResponseDto.html":{},"classes/GetUserResponseDto.html":{},"classes/UpdateCatDto.html":{},"classes/UpdateUserDto.html":{}}}],["miscellaneous",{"_index":1093,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":1131,"title":{},"body":{"index.html":{}}}],["mode",{"_index":1123,"title":{},"body":{"index.html":{}}}],["model",{"_index":268,"title":{"classes/Model.html":{}},"body":{"classes/Base.html":{},"controllers/CatsController.html":{},"interfaces/IBaseEntityModel.html":{},"classes/Model.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["module",{"_index":162,"title":{"modules/AppModule.html":{},"modules/CatsModule.html":{},"modules/CronModule.html":{},"modules/UsersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CatsModule.html":{},"modules/CronModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["modules",{"_index":164,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/CatsModule.html":{},"modules/CronModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["moment",{"_index":1030,"title":{},"body":{"coverage.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["more",{"_index":942,"title":{},"body":{"injectables/TimeoutInterceptor.html":{},"index.html":{}}}],["myśliwiec",{"_index":1149,"title":{},"body":{"index.html":{}}}],["name",{"_index":115,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"modules/AppModule.html":{},"classes/Cat.html":{},"controllers/CatsController.html":{},"injectables/CatsService.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"classes/CreateCatDto.html":{},"classes/CreateUserDto.html":{},"classes/CrudController.html":{},"classes/CrudService.html":{},"injectables/DBHelper.html":{},"injectables/ExcludeNullUndefinedInterceptor.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"classes/GetCatResponseDto.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"classes/GetUserResponseDto.html":{},"controllers/HealthController.html":{},"interfaces/ICrudService.html":{},"classes/Model.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"classes/QueryFailedFilter.html":{},"guards/RequestGuard.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"guards/ResponseGuard.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateCatDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{},"injectables/UsersService.html":{},"miscellaneous/functions.html":{}}}],["name'})@column({name",{"_index":970,"title":{},"body":{"classes/User.html":{}}}],["name'})@isstring()@isnotempty()@minlength(2)@maxlength(36",{"_index":502,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["name_length",{"_index":305,"title":{},"body":{"classes/Cat.html":{},"classes/User.html":{}}}],["nest",{"_index":803,"title":{},"body":{"controllers/HealthController.html":{},"index.html":{}}}],["nestframework",{"_index":1153,"title":{},"body":{"index.html":{}}}],["nestinterceptor",{"_index":752,"title":{},"body":{"injectables/ExcludeNullUndefinedInterceptor.html":{},"interfaces/Response.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/TransformInterceptor.html":{}}}],["nestjs/common",{"_index":26,"title":{},"body":{"interfaces/APIResponse.html":{},"controllers/AppController.html":{},"interfaces/AppLaunchAction.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/CatsController.html":{},"modules/CatsModule.html":{},"injectables/CatsService.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"modules/CronModule.html":{},"injectables/CronService.html":{},"classes/CrudController.html":{},"classes/CrudService.html":{},"injectables/DBHelper.html":{},"injectables/ExcludeNullUndefinedInterceptor.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"controllers/HealthController.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"classes/QueryFailedFilter.html":{},"guards/RequestGuard.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/Response.html":{},"guards/ResponseGuard.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/TransformInterceptor.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["nestjs/config",{"_index":200,"title":{},"body":{"modules/AppModule.html":{},"controllers/HealthController.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":1054,"title":{},"body":{"dependencies.html":{}}}],["nestjs/mapped",{"_index":1055,"title":{},"body":{"dependencies.html":{}}}],["nestjs/passport",{"_index":1058,"title":{},"body":{"dependencies.html":{}}}],["nestjs/platform",{"_index":1060,"title":{},"body":{"dependencies.html":{}}}],["nestjs/schedule",{"_index":202,"title":{},"body":{"modules/AppModule.html":{},"injectables/CronService.html":{},"dependencies.html":{}}}],["nestjs/swagger",{"_index":150,"title":{},"body":{"controllers/AppController.html":{},"classes/Base.html":{},"classes/Cat.html":{},"controllers/CatsController.html":{},"classes/CreateCatDto.html":{},"classes/CreateUserDto.html":{},"classes/CrudController.html":{},"classes/GetCatResponseDto.html":{},"classes/GetUserResponseDto.html":{},"controllers/HealthController.html":{},"interfaces/IBaseEntityModel.html":{},"classes/Model.html":{},"classes/PaginationParams.html":{},"classes/UpdateCatDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"dependencies.html":{}}}],["nestjs/terminus",{"_index":204,"title":{},"body":{"modules/AppModule.html":{},"controllers/HealthController.html":{},"dependencies.html":{}}}],["nestjs/typeorm",{"_index":206,"title":{},"body":{"modules/AppModule.html":{},"modules/CatsModule.html":{},"injectables/CatsService.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["nestjsx/crud",{"_index":423,"title":{},"body":{"controllers/CatsController.html":{},"injectables/CatsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["nestjsx/crud/lib/interfaces",{"_index":425,"title":{},"body":{"controllers/CatsController.html":{}}}],["new",{"_index":525,"title":{},"body":{"injectables/CronService.html":{},"classes/CrudController.html":{},"classes/CrudService.html":{},"classes/QueryFailedFilter.html":{},"coverage.html":{}}}],["new_values",{"_index":719,"title":{},"body":{"injectables/DBHelper.html":{}}}],["next",{"_index":747,"title":{},"body":{"injectables/ExcludeNullUndefinedInterceptor.html":{},"guards/RequestGuard.html":{},"interfaces/Response.html":{},"guards/ResponseGuard.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/TransformInterceptor.html":{}}}],["next.handle().pipe",{"_index":754,"title":{},"body":{"injectables/ExcludeNullUndefinedInterceptor.html":{},"injectables/TimeoutInterceptor.html":{}}}],["next.handle().pipe(map((data",{"_index":908,"title":{},"body":{"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["nocontent",{"_index":926,"title":{},"body":{"guards/ResponseGuard.html":{}}}],["node.js",{"_index":1107,"title":{},"body":{"index.html":{}}}],["node_env",{"_index":228,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["notfoundexception",{"_index":662,"title":{},"body":{"classes/CrudService.html":{}}}],["notfoundexception(`the",{"_index":685,"title":{},"body":{"classes/CrudService.html":{}}}],["npm",{"_index":1117,"title":{},"body":{"index.html":{}}}],["null",{"_index":36,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"classes/Base.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"injectables/ExcludeNullUndefinedInterceptor.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/IBaseEntityModel.html":{},"classes/Model.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"guards/ResponseGuard.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{},"miscellaneous/typealiases.html":{}}}],["nullable",{"_index":333,"title":{},"body":{"classes/Cat.html":{},"classes/User.html":{}}}],["number",{"_index":18,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"classes/Base.html":{},"classes/Cat.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"classes/CreateCatDto.html":{},"classes/CreateUserDto.html":{},"injectables/CronService.html":{},"classes/CrudService.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"classes/GetCatResponseDto.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"classes/GetUserResponseDto.html":{},"interfaces/IBaseEntityModel.html":{},"interfaces/ICrudService.html":{},"interfaces/IPagination.html":{},"interfaces/IPagination-1.html":{},"classes/Model.html":{},"classes/PaginationParams.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"classes/UpdateCatDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{}}}],["numberoffollowers",{"_index":61,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{}}}],["numberoffollowing",{"_index":62,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{}}}],["numberofposts",{"_index":63,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{}}}],["numberofrescuescompleted",{"_index":64,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{}}}],["numberofrescuescreated",{"_index":65,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{}}}],["numberofrescuesinprogress",{"_index":66,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{}}}],["obj",{"_index":687,"title":{},"body":{"classes/CrudService.html":{}}}],["object",{"_index":923,"title":{},"body":{"guards/ResponseGuard.html":{},"miscellaneous/variables.html":{}}}],["object.assign(this",{"_index":299,"title":{},"body":{"classes/Base.html":{},"interfaces/IBaseEntityModel.html":{},"classes/Model.html":{}}}],["observable",{"_index":751,"title":{},"body":{"injectables/ExcludeNullUndefinedInterceptor.html":{},"guards/RequestGuard.html":{},"interfaces/Response.html":{},"guards/ResponseGuard.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/TransformInterceptor.html":{}}}],["observer",{"_index":939,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["occurrence",{"_index":742,"title":{},"body":{"injectables/ExcludeNullUndefinedInterceptor.html":{}}}],["of(signal",{"_index":710,"title":{},"body":{"classes/CrudService.html":{}}}],["offset",{"_index":838,"title":{},"body":{"classes/PaginationParams.html":{}}}],["onapplicationshutdown",{"_index":183,"title":{},"body":{"modules/AppModule.html":{},"controllers/HealthController.html":{}}}],["onapplicationshutdown(signal",{"_index":184,"title":{},"body":{"modules/AppModule.html":{},"controllers/HealthController.html":{}}}],["once",{"_index":540,"title":{},"body":{"injectables/CronService.html":{}}}],["one",{"_index":578,"title":{},"body":{"classes/CrudController.html":{}}}],["onetomany",{"_index":975,"title":{},"body":{"classes/User.html":{}}}],["onetomany((type",{"_index":978,"title":{},"body":{"classes/User.html":{}}}],["onetomany(undefined",{"_index":964,"title":{},"body":{"classes/User.html":{}}}],["onmoduledestroy",{"_index":792,"title":{},"body":{"controllers/HealthController.html":{}}}],["onmoduleinit",{"_index":190,"title":{},"body":{"modules/AppModule.html":{},"controllers/HealthController.html":{}}}],["open",{"_index":1133,"title":{},"body":{"index.html":{}}}],["optional",{"_index":9,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"modules/AppModule.html":{},"classes/Base.html":{},"controllers/CatsController.html":{},"injectables/CatsService.html":{},"classes/CrudController.html":{},"classes/CrudService.html":{},"injectables/DBHelper.html":{},"injectables/ExcludeNullUndefinedInterceptor.html":{},"controllers/HealthController.html":{},"interfaces/IBaseEntityModel.html":{},"interfaces/ICrudService.html":{},"interfaces/ITryRequest.html":{},"classes/Model.html":{},"classes/PaginationParams.html":{},"classes/QueryFailedFilter.html":{},"guards/RequestGuard.html":{},"guards/ResponseGuard.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateCatDto.html":{},"classes/UpdateUserDto.html":{},"injectables/UsersService.html":{},"miscellaneous/functions.html":{}}}],["options",{"_index":552,"title":{},"body":{"classes/CrudController.html":{},"classes/CrudService.html":{},"interfaces/ICrudService.html":{},"interfaces/IPagination.html":{}}}],["order",{"_index":829,"title":{},"body":{"classes/PaginationParams.html":{}}}],["orderby",{"_index":834,"title":{},"body":{"classes/PaginationParams.html":{}}}],["ordertype",{"_index":847,"title":{},"body":{"classes/PaginationParams.html":{},"miscellaneous/enumerations.html":{}}}],["out",{"_index":179,"title":{},"body":{"modules/AppModule.html":{},"modules/CatsModule.html":{},"modules/CronModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["override",{"_index":400,"title":{},"body":{"controllers/CatsController.html":{}}}],["override.ts",{"_index":738,"title":{},"body":{"injectables/ExcludeNullUndefinedInterceptor.html":{},"coverage.html":{}}}],["override.ts:15",{"_index":749,"title":{},"body":{"injectables/ExcludeNullUndefinedInterceptor.html":{}}}],["overview",{"_index":1158,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["owner",{"_index":337,"title":{},"body":{"classes/Cat.html":{},"classes/CreateCatDto.html":{},"classes/GetCatResponseDto.html":{},"classes/UpdateCatDto.html":{}}}],["ownpage",{"_index":88,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{}}}],["p",{"_index":854,"title":{},"body":{"classes/PaginationParams.html":{}}}],["package",{"_index":1050,"title":{"dependencies.html":{}},"body":{}}],["page",{"_index":14,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{}}}],["pagecount",{"_index":15,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{}}}],["pagination",{"_index":597,"title":{},"body":{"classes/CrudController.html":{},"classes/CrudService.html":{},"interfaces/IPagination-1.html":{},"classes/PaginationParams.html":{}}}],["paginationparams",{"_index":569,"title":{"classes/PaginationParams.html":{}},"body":{"classes/CrudController.html":{},"classes/PaginationParams.html":{},"coverage.html":{}}}],["param",{"_index":589,"title":{},"body":{"classes/CrudController.html":{},"classes/CrudService.html":{},"guards/RequestGuard.html":{},"guards/ResponseGuard.html":{}}}],["param('id",{"_index":620,"title":{},"body":{"classes/CrudController.html":{}}}],["parameter",{"_index":799,"title":{},"body":{"controllers/HealthController.html":{}}}],["parameters",{"_index":186,"title":{},"body":{"modules/AppModule.html":{},"controllers/CatsController.html":{},"injectables/CatsService.html":{},"classes/CrudController.html":{},"classes/CrudService.html":{},"injectables/DBHelper.html":{},"injectables/ExcludeNullUndefinedInterceptor.html":{},"controllers/HealthController.html":{},"interfaces/ICrudService.html":{},"classes/Model.html":{},"classes/QueryFailedFilter.html":{},"guards/RequestGuard.html":{},"guards/ResponseGuard.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/TransformInterceptor.html":{},"injectables/UsersService.html":{},"miscellaneous/functions.html":{}}}],["params",{"_index":598,"title":{},"body":{"classes/CrudController.html":{},"classes/PaginationParams.html":{}}}],["params.ts",{"_index":827,"title":{},"body":{"classes/PaginationParams.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["params.ts:23",{"_index":842,"title":{},"body":{"classes/PaginationParams.html":{}}}],["params.ts:32",{"_index":837,"title":{},"body":{"classes/PaginationParams.html":{}}}],["params.ts:39",{"_index":833,"title":{},"body":{"classes/PaginationParams.html":{}}}],["parsedbody",{"_index":421,"title":{},"body":{"controllers/CatsController.html":{}}}],["parsedrequest",{"_index":422,"title":{},"body":{"controllers/CatsController.html":{}}}],["parseint(val",{"_index":853,"title":{},"body":{"classes/PaginationParams.html":{}}}],["partialentity",{"_index":659,"title":{},"body":{"classes/CrudService.html":{}}}],["partialentity.hash",{"_index":702,"title":{},"body":{"classes/CrudService.html":{}}}],["passport",{"_index":1078,"title":{},"body":{"dependencies.html":{}}}],["password",{"_index":658,"title":{},"body":{"classes/CrudService.html":{}}}],["path",{"_index":157,"title":{},"body":{"controllers/AppController.html":{},"controllers/CatsController.html":{},"controllers/HealthController.html":{},"classes/QueryFailedFilter.html":{},"controllers/UsersController.html":{}}}],["please",{"_index":1142,"title":{},"body":{"index.html":{}}}],["port",{"_index":226,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["post",{"_index":417,"title":{},"body":{"controllers/CatsController.html":{},"classes/CrudController.html":{},"controllers/UsersController.html":{}}}],["post('/clear",{"_index":456,"title":{},"body":{"controllers/CatsController.html":{},"controllers/UsersController.html":{}}}],["postby",{"_index":89,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{}}}],["postedby",{"_index":107,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{}}}],["postedbyuser",{"_index":83,"title":{"interfaces/PostedByUser.html":{}},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{},"coverage.html":{}}}],["postedminago",{"_index":108,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{}}}],["postid",{"_index":85,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{}}}],["postimage",{"_index":90,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{}}}],["posttime",{"_index":91,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{}}}],["posttype",{"_index":81,"title":{"interfaces/PostType.html":{}},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{},"coverage.html":{}}}],["posttypeid",{"_index":82,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{}}}],["postvideo",{"_index":92,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{}}}],["primarycolumn",{"_index":344,"title":{},"body":{"classes/Cat.html":{}}}],["primarygeneratedcolumn",{"_index":291,"title":{},"body":{"classes/Base.html":{},"classes/Cat.html":{},"interfaces/IBaseEntityModel.html":{},"classes/Model.html":{},"classes/User.html":{}}}],["private",{"_index":512,"title":{},"body":{"injectables/CronService.html":{},"controllers/HealthController.html":{}}}],["production",{"_index":232,"title":{},"body":{"modules/AppModule.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["profileid",{"_index":116,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{}}}],["profileimage",{"_index":67,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{}}}],["profileimageurl",{"_index":117,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{}}}],["progressive",{"_index":1106,"title":{},"body":{"index.html":{}}}],["project",{"_index":1134,"title":{},"body":{"index.html":{}}}],["promise",{"_index":361,"title":{},"body":{"classes/Cat.html":{},"classes/CrudController.html":{},"classes/CrudService.html":{},"controllers/HealthController.html":{},"interfaces/ICrudService.html":{},"interfaces/IPagination.html":{},"guards/RequestGuard.html":{},"guards/ResponseGuard.html":{},"classes/User.html":{}}}],["properties",{"_index":8,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"classes/Base.html":{},"classes/Cat.html":{},"injectables/CatsService.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"classes/CreateCatDto.html":{},"classes/CreateUserDto.html":{},"injectables/CronService.html":{},"classes/CrudService.html":{},"injectables/DBHelper.html":{},"interfaces/Follower.html":{},"interfaces/GetAppLaunchData.html":{},"classes/GetCatResponseDto.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"classes/GetUserResponseDto.html":{},"interfaces/IBaseEntityModel.html":{},"interfaces/IPagination.html":{},"interfaces/IPagination-1.html":{},"interfaces/ITryRequest.html":{},"classes/PaginationParams.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/Response.html":{},"classes/UpdateCatDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{},"injectables/UsersService.html":{}}}],["protected",{"_index":545,"title":{},"body":{"classes/CrudController.html":{},"classes/CrudService.html":{}}}],["providers",{"_index":169,"title":{},"body":{"modules/AppModule.html":{},"modules/CatsModule.html":{},"modules/CronModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["provision",{"_index":234,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["public",{"_index":349,"title":{},"body":{"classes/Cat.html":{},"injectables/CatsService.html":{},"injectables/CronService.html":{},"classes/User.html":{},"injectables/UsersService.html":{}}}],["put",{"_index":588,"title":{},"body":{"classes/CrudController.html":{}}}],["put(':id",{"_index":619,"title":{},"body":{"classes/CrudController.html":{}}}],["query",{"_index":439,"title":{},"body":{"controllers/CatsController.html":{},"classes/QueryFailedFilter.html":{},"controllers/UsersController.html":{}}}],["querydeeppartialentity",{"_index":582,"title":{},"body":{"classes/CrudController.html":{},"classes/CrudService.html":{},"interfaces/ICrudService.html":{},"interfaces/IPagination.html":{}}}],["queryfailederror",{"_index":861,"title":{},"body":{"classes/QueryFailedFilter.html":{}}}],["queryfailedfilter",{"_index":856,"title":{"classes/QueryFailedFilter.html":{}},"body":{"classes/QueryFailedFilter.html":{},"coverage.html":{}}}],["r",{"_index":402,"title":{},"body":{"controllers/CatsController.html":{}}}],["range",{"_index":1076,"title":{},"body":{"dependencies.html":{}}}],["rate",{"_index":1070,"title":{},"body":{"dependencies.html":{}}}],["reactionscount",{"_index":93,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{}}}],["read",{"_index":1143,"title":{},"body":{"index.html":{}}}],["readmewhy",{"_index":689,"title":{},"body":{"classes/CrudService.html":{}}}],["readonly",{"_index":159,"title":{},"body":{"controllers/AppController.html":{},"classes/Base.html":{},"classes/Cat.html":{},"classes/CreateCatDto.html":{},"classes/CreateUserDto.html":{},"injectables/CronService.html":{},"classes/CrudController.html":{},"classes/CrudService.html":{},"classes/GetCatResponseDto.html":{},"classes/GetUserResponseDto.html":{},"interfaces/IBaseEntityModel.html":{},"interfaces/ICrudService.html":{},"interfaces/IPagination.html":{},"interfaces/IPagination-1.html":{},"classes/Model.html":{},"classes/PaginationParams.html":{},"classes/UpdateCatDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{}}}],["reassign",{"_index":705,"title":{},"body":{"classes/CrudService.html":{}}}],["receives",{"_index":788,"title":{},"body":{"controllers/HealthController.html":{}}}],["record",{"_index":554,"title":{},"body":{"classes/CrudController.html":{},"classes/CrudService.html":{},"interfaces/ITryRequest.html":{},"guards/RequestGuard.html":{},"guards/ResponseGuard.html":{}}}],["record'})@apiresponse({status",{"_index":553,"title":{},"body":{"classes/CrudController.html":{}}}],["records",{"_index":373,"title":{},"body":{"classes/CatRepository.html":{},"injectables/CatsService.html":{},"classes/CrudController.html":{},"classes/UserRepository.html":{},"injectables/UsersService.html":{}}}],["records'})@get",{"_index":573,"title":{},"body":{"classes/CrudController.html":{}}}],["recuescompletionneeded",{"_index":77,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{}}}],["reflect",{"_index":1081,"title":{},"body":{"dependencies.html":{}}}],["registered",{"_index":791,"title":{},"body":{"controllers/HealthController.html":{}}}],["rejected",{"_index":807,"title":{},"body":{"controllers/HealthController.html":{}}}],["relation",{"_index":360,"title":{},"body":{"classes/Cat.html":{},"injectables/DBHelper.html":{},"classes/User.html":{}}}],["relations",{"_index":336,"title":{},"body":{"classes/Cat.html":{},"injectables/DBHelper.html":{},"classes/User.html":{}}}],["replace",{"_index":436,"title":{},"body":{"controllers/CatsController.html":{},"controllers/UsersController.html":{}}}],["replaceone",{"_index":391,"title":{},"body":{"controllers/CatsController.html":{}}}],["replaceone(r",{"_index":412,"title":{},"body":{"controllers/CatsController.html":{}}}],["repo",{"_index":469,"title":{},"body":{"injectables/CatsService.html":{},"injectables/UsersService.html":{}}}],["repository",{"_index":368,"title":{},"body":{"classes/CatRepository.html":{},"classes/CrudService.html":{},"injectables/DBHelper.html":{},"classes/UserRepository.html":{},"index.html":{}}}],["request",{"_index":673,"title":{},"body":{"classes/CrudService.html":{},"classes/QueryFailedFilter.html":{},"guards/RequestGuard.html":{},"injectables/TimeoutInterceptor.html":{},"dependencies.html":{}}}],["request.all",{"_index":904,"title":{},"body":{"guards/RequestGuard.html":{}}}],["request.body",{"_index":894,"title":{},"body":{"guards/RequestGuard.html":{}}}],["request.params",{"_index":895,"title":{},"body":{"guards/RequestGuard.html":{}}}],["request.query",{"_index":893,"title":{},"body":{"guards/RequestGuard.html":{}}}],["request.ts",{"_index":824,"title":{},"body":{"interfaces/ITryRequest.html":{},"coverage.html":{}}}],["request.url",{"_index":876,"title":{},"body":{"classes/QueryFailedFilter.html":{}}}],["requested",{"_index":686,"title":{},"body":{"classes/CrudService.html":{}}}],["requestguard",{"_index":880,"title":{"guards/RequestGuard.html":{}},"body":{"guards/RequestGuard.html":{},"coverage.html":{}}}],["requesttimeoutexception",{"_index":944,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["required",{"_index":230,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["rescuedate",{"_index":109,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{}}}],["rescuedpetname",{"_index":111,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{}}}],["rescueid",{"_index":102,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{}}}],["rescuelists",{"_index":121,"title":{"interfaces/RescueLists.html":{}},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{},"coverage.html":{}}}],["rescuelocality",{"_index":112,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{}}}],["rescuer",{"_index":68,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{}}}],["rescuers",{"_index":113,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{}}}],["rescues",{"_index":101,"title":{"interfaces/Rescues.html":{}},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{},"coverage.html":{}}}],["rescuestatus",{"_index":119,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{}}}],["reset",{"_index":178,"title":{},"body":{"modules/AppModule.html":{},"modules/CatsModule.html":{},"modules/CronModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["resolved",{"_index":806,"title":{},"body":{"controllers/HealthController.html":{}}}],["response",{"_index":39,"title":{"interfaces/Response.html":{}},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"classes/CrudController.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"classes/QueryFailedFilter.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/Response.html":{},"guards/ResponseGuard.html":{},"injectables/TransformInterceptor.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{},"coverage.html":{}}}],["response.error",{"_index":932,"title":{},"body":{"guards/ResponseGuard.html":{}}}],["response.nocontent",{"_index":933,"title":{},"body":{"guards/ResponseGuard.html":{}}}],["response.status(204).end",{"_index":927,"title":{},"body":{"guards/ResponseGuard.html":{}}}],["response.status(status).json",{"_index":875,"title":{},"body":{"classes/QueryFailedFilter.html":{},"guards/ResponseGuard.html":{}}}],["response.success",{"_index":931,"title":{},"body":{"guards/ResponseGuard.html":{}}}],["response.withmeta",{"_index":934,"title":{},"body":{"guards/ResponseGuard.html":{}}}],["responseguard",{"_index":909,"title":{"guards/ResponseGuard.html":{}},"body":{"guards/ResponseGuard.html":{},"coverage.html":{}}}],["restricted",{"_index":897,"title":{},"body":{"guards/RequestGuard.html":{}}}],["result",{"_index":28,"title":{},"body":{"interfaces/APIResponse.html":{},"controllers/AppController.html":{},"interfaces/AppLaunchAction.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Base.html":{},"classes/Cat.html":{},"classes/CatRepository.html":{},"controllers/CatsController.html":{},"modules/CatsModule.html":{},"injectables/CatsService.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"classes/CreateCatDto.html":{},"classes/CreateUserDto.html":{},"modules/CronModule.html":{},"injectables/CronService.html":{},"classes/CrudController.html":{},"classes/CrudService.html":{},"injectables/DBHelper.html":{},"injectables/ExcludeNullUndefinedInterceptor.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"classes/GetCatResponseDto.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"classes/GetUserResponseDto.html":{},"controllers/HealthController.html":{},"interfaces/IBaseEntityModel.html":{},"interfaces/ICrudService.html":{},"interfaces/IPagination.html":{},"interfaces/IPagination-1.html":{},"interfaces/ITryRequest.html":{},"classes/Model.html":{},"classes/PaginationParams.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"classes/QueryFailedFilter.html":{},"guards/RequestGuard.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/Response.html":{},"guards/ResponseGuard.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateCatDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{},"classes/UserRepository.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["results",{"_index":133,"title":{},"body":{"interfaces/APIResponse.html":{},"controllers/AppController.html":{},"interfaces/AppLaunchAction.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Base.html":{},"classes/Cat.html":{},"classes/CatRepository.html":{},"controllers/CatsController.html":{},"modules/CatsModule.html":{},"injectables/CatsService.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"classes/CreateCatDto.html":{},"classes/CreateUserDto.html":{},"modules/CronModule.html":{},"injectables/CronService.html":{},"classes/CrudController.html":{},"classes/CrudService.html":{},"injectables/DBHelper.html":{},"injectables/ExcludeNullUndefinedInterceptor.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"classes/GetCatResponseDto.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"classes/GetUserResponseDto.html":{},"controllers/HealthController.html":{},"interfaces/IBaseEntityModel.html":{},"interfaces/ICrudService.html":{},"interfaces/IPagination.html":{},"interfaces/IPagination-1.html":{},"interfaces/ITryRequest.html":{},"classes/Model.html":{},"classes/PaginationParams.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"classes/QueryFailedFilter.html":{},"guards/RequestGuard.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/Response.html":{},"guards/ResponseGuard.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateCatDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{},"classes/UserRepository.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":160,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/CatRepository.html":{},"controllers/CatsController.html":{},"injectables/CatsService.html":{},"classes/CrudController.html":{},"classes/CrudService.html":{},"injectables/DBHelper.html":{},"injectables/ExcludeNullUndefinedInterceptor.html":{},"controllers/HealthController.html":{},"guards/RequestGuard.html":{},"interfaces/Response.html":{},"guards/ResponseGuard.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/TransformInterceptor.html":{},"classes/UserRepository.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["returns",{"_index":143,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/CatRepository.html":{},"controllers/CatsController.html":{},"injectables/CatsService.html":{},"injectables/CronService.html":{},"classes/CrudController.html":{},"classes/CrudService.html":{},"injectables/DBHelper.html":{},"injectables/ExcludeNullUndefinedInterceptor.html":{},"controllers/HealthController.html":{},"interfaces/ICrudService.html":{},"classes/QueryFailedFilter.html":{},"guards/RequestGuard.html":{},"guards/ResponseGuard.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/TransformInterceptor.html":{},"classes/UserRepository.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["rimraf",{"_index":1084,"title":{},"body":{"dependencies.html":{}}}],["row",{"_index":724,"title":{},"body":{"injectables/DBHelper.html":{}}}],["row[relation",{"_index":727,"title":{},"body":{"injectables/DBHelper.html":{}}}],["run",{"_index":1120,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":666,"title":{},"body":{"classes/CrudService.html":{},"injectables/ExcludeNullUndefinedInterceptor.html":{},"guards/RequestGuard.html":{},"interfaces/Response.html":{},"guards/ResponseGuard.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/TransformInterceptor.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":668,"title":{},"body":{"classes/CrudService.html":{},"injectables/ExcludeNullUndefinedInterceptor.html":{},"interfaces/Response.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/TransformInterceptor.html":{}}}],["saltrounds",{"_index":630,"title":{},"body":{"classes/CrudService.html":{}}}],["scalable",{"_index":1111,"title":{},"body":{"index.html":{}}}],["schedulemodule",{"_index":201,"title":{},"body":{"modules/AppModule.html":{}}}],["schedulemodule.forroot",{"_index":250,"title":{},"body":{"modules/AppModule.html":{}}}],["second",{"_index":534,"title":{},"body":{"injectables/CronService.html":{}}}],["seconds",{"_index":539,"title":{},"body":{"injectables/CronService.html":{}}}],["sequence",{"_index":794,"title":{},"body":{"controllers/HealthController.html":{}}}],["serialize",{"_index":438,"title":{},"body":{"controllers/CatsController.html":{},"controllers/UsersController.html":{}}}],["server",{"_index":1112,"title":{},"body":{"index.html":{}}}],["service",{"_index":444,"title":{},"body":{"controllers/CatsController.html":{},"classes/CrudService.html":{},"controllers/UsersController.html":{}}}],["sets",{"_index":359,"title":{},"body":{"classes/Cat.html":{},"classes/User.html":{}}}],["setting",{"_index":78,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{}}}],["setupinfra",{"_index":1043,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["setupinfra(app",{"_index":1099,"title":{},"body":{"miscellaneous/functions.html":{}}}],["setupmiddlewares",{"_index":1044,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["setupmiddlewares(app",{"_index":1101,"title":{},"body":{"miscellaneous/functions.html":{}}}],["setupswaggerdocs",{"_index":1045,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["setupswaggerdocs(app",{"_index":1102,"title":{},"body":{"miscellaneous/functions.html":{}}}],["shadow",{"_index":918,"title":{},"body":{"guards/ResponseGuard.html":{}}}],["showmycontacts",{"_index":79,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{}}}],["showmynumber",{"_index":118,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{}}}],["showremoveoption",{"_index":130,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{}}}],["shutdown",{"_index":258,"title":{},"body":{"modules/AppModule.html":{},"controllers/HealthController.html":{}}}],["side",{"_index":1113,"title":{},"body":{"index.html":{}}}],["signal",{"_index":187,"title":{},"body":{"modules/AppModule.html":{},"classes/CrudService.html":{},"controllers/HealthController.html":{}}}],["skip",{"_index":830,"title":{},"body":{"classes/PaginationParams.html":{}}}],["somehow",{"_index":699,"title":{},"body":{"classes/CrudService.html":{}}}],["something",{"_index":921,"title":{},"body":{"guards/ResponseGuard.html":{}}}],["source",{"_index":4,"title":{},"body":{"interfaces/APIResponse.html":{},"controllers/AppController.html":{},"interfaces/AppLaunchAction.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Base.html":{},"classes/Cat.html":{},"classes/CatRepository.html":{},"controllers/CatsController.html":{},"modules/CatsModule.html":{},"injectables/CatsService.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"classes/CreateCatDto.html":{},"classes/CreateUserDto.html":{},"modules/CronModule.html":{},"injectables/CronService.html":{},"classes/CrudController.html":{},"classes/CrudService.html":{},"injectables/DBHelper.html":{},"injectables/ExcludeNullUndefinedInterceptor.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"classes/GetCatResponseDto.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"classes/GetUserResponseDto.html":{},"controllers/HealthController.html":{},"interfaces/IBaseEntityModel.html":{},"interfaces/ICrudService.html":{},"interfaces/IPagination.html":{},"interfaces/IPagination-1.html":{},"interfaces/ITryRequest.html":{},"classes/Model.html":{},"classes/PaginationParams.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"classes/QueryFailedFilter.html":{},"guards/RequestGuard.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/Response.html":{},"guards/ResponseGuard.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateCatDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{},"classes/UserRepository.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"index.html":{}}}],["sponsors",{"_index":1137,"title":{},"body":{"index.html":{}}}],["sqlite",{"_index":239,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["sqlite3",{"_index":1087,"title":{},"body":{"dependencies.html":{}}}],["src/.../app.module.ts",{"_index":1167,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../domain.ts",{"_index":1165,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../main.ts",{"_index":1097,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../moment",{"_index":1168,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../pagination",{"_index":1095,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../tohexstring.ts",{"_index":1098,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/app.controller.ts",{"_index":137,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app.controller.ts:15",{"_index":142,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.module.ts",{"_index":180,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app.module.ts:63",{"_index":191,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.module.ts:67",{"_index":185,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.service.ts",{"_index":261,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["src/app.service.ts:5",{"_index":262,"title":{},"body":{"injectables/AppService.html":{}}}],["src/base/crud/crud.controller.ts",{"_index":542,"title":{},"body":{"classes/CrudController.html":{},"coverage.html":{}}}],["src/base/crud/crud.controller.ts:102",{"_index":567,"title":{},"body":{"classes/CrudController.html":{}}}],["src/base/crud/crud.controller.ts:24",{"_index":548,"title":{},"body":{"classes/CrudController.html":{}}}],["src/base/crud/crud.controller.ts:33",{"_index":574,"title":{},"body":{"classes/CrudController.html":{}}}],["src/base/crud/crud.controller.ts:47",{"_index":580,"title":{},"body":{"classes/CrudController.html":{}}}],["src/base/crud/crud.controller.ts:63",{"_index":563,"title":{},"body":{"classes/CrudController.html":{}}}],["src/base/crud/crud.controller.ts:83",{"_index":587,"title":{},"body":{"classes/CrudController.html":{}}}],["src/base/crud/crud.service.ts",{"_index":629,"title":{},"body":{"classes/CrudService.html":{},"coverage.html":{}}}],["src/base/crud/crud.service.ts:104",{"_index":643,"title":{},"body":{"classes/CrudService.html":{}}}],["src/base/crud/crud.service.ts:118",{"_index":645,"title":{},"body":{"classes/CrudService.html":{}}}],["src/base/crud/crud.service.ts:24",{"_index":636,"title":{},"body":{"classes/CrudService.html":{}}}],["src/base/crud/crud.service.ts:30",{"_index":639,"title":{},"body":{"classes/CrudService.html":{}}}],["src/base/crud/crud.service.ts:34",{"_index":650,"title":{},"body":{"classes/CrudService.html":{}}}],["src/base/crud/crud.service.ts:41",{"_index":655,"title":{},"body":{"classes/CrudService.html":{}}}],["src/base/crud/crud.service.ts:54",{"_index":653,"title":{},"body":{"classes/CrudService.html":{}}}],["src/base/crud/crud.service.ts:66",{"_index":640,"title":{},"body":{"classes/CrudService.html":{}}}],["src/base/crud/crud.service.ts:77",{"_index":657,"title":{},"body":{"classes/CrudService.html":{}}}],["src/base/crud/crud.service.ts:81",{"_index":660,"title":{},"body":{"classes/CrudService.html":{}}}],["src/base/crud/icrud.service.ts",{"_index":811,"title":{},"body":{"interfaces/ICrudService.html":{},"interfaces/IPagination.html":{},"coverage.html":{}}}],["src/base/crud/icrud.service.ts:24",{"_index":812,"title":{},"body":{"interfaces/ICrudService.html":{}}}],["src/base/crud/icrud.service.ts:26",{"_index":815,"title":{},"body":{"interfaces/ICrudService.html":{}}}],["src/base/crud/icrud.service.ts:28",{"_index":816,"title":{},"body":{"interfaces/ICrudService.html":{}}}],["src/base/crud/icrud.service.ts:33",{"_index":813,"title":{},"body":{"interfaces/ICrudService.html":{}}}],["src/base/crud/icrud.service.ts:35",{"_index":817,"title":{},"body":{"interfaces/ICrudService.html":{}}}],["src/base/crud/icrud.service.ts:41",{"_index":814,"title":{},"body":{"interfaces/ICrudService.html":{}}}],["src/base/crud/pagination",{"_index":826,"title":{},"body":{"classes/PaginationParams.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["src/base/crud/pagination.ts",{"_index":821,"title":{},"body":{"interfaces/IPagination-1.html":{},"coverage.html":{}}}],["src/base/crud/try",{"_index":823,"title":{},"body":{"interfaces/ITryRequest.html":{},"coverage.html":{}}}],["src/base/dbhelper.ts",{"_index":712,"title":{},"body":{"injectables/DBHelper.html":{},"coverage.html":{}}}],["src/base/dbhelper.ts:13",{"_index":717,"title":{},"body":{"injectables/DBHelper.html":{}}}],["src/base/dbhelper.ts:18",{"_index":720,"title":{},"body":{"injectables/DBHelper.html":{}}}],["src/base/dbhelper.ts:9",{"_index":715,"title":{},"body":{"injectables/DBHelper.html":{}}}],["src/base/entities/base.ts",{"_index":267,"title":{},"body":{"classes/Base.html":{},"interfaces/IBaseEntityModel.html":{},"classes/Model.html":{},"coverage.html":{}}}],["src/base/entities/base.ts:19",{"_index":825,"title":{},"body":{"classes/Model.html":{}}}],["src/base/entities/base.ts:30",{"_index":286,"title":{},"body":{"classes/Base.html":{}}}],["src/base/entities/base.ts:38",{"_index":281,"title":{},"body":{"classes/Base.html":{}}}],["src/base/entities/base.ts:46",{"_index":288,"title":{},"body":{"classes/Base.html":{}}}],["src/base/entities/base.ts:54",{"_index":283,"title":{},"body":{"classes/Base.html":{}}}],["src/base/entities/tohexstring.ts",{"_index":1026,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/base/moment",{"_index":1028,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/cats/cats.controller.ts",{"_index":384,"title":{},"body":{"controllers/CatsController.html":{},"coverage.html":{}}}],["src/cats/cats.controller.ts:101",{"_index":407,"title":{},"body":{"controllers/CatsController.html":{}}}],["src/cats/cats.controller.ts:107",{"_index":396,"title":{},"body":{"controllers/CatsController.html":{}}}],["src/cats/cats.controller.ts:59",{"_index":411,"title":{},"body":{"controllers/CatsController.html":{}}}],["src/cats/cats.controller.ts:64",{"_index":409,"title":{},"body":{"controllers/CatsController.html":{}}}],["src/cats/cats.controller.ts:69",{"_index":405,"title":{},"body":{"controllers/CatsController.html":{}}}],["src/cats/cats.controller.ts:77",{"_index":401,"title":{},"body":{"controllers/CatsController.html":{}}}],["src/cats/cats.controller.ts:85",{"_index":416,"title":{},"body":{"controllers/CatsController.html":{}}}],["src/cats/cats.controller.ts:93",{"_index":413,"title":{},"body":{"controllers/CatsController.html":{}}}],["src/cats/cats.module.ts",{"_index":461,"title":{},"body":{"modules/CatsModule.html":{}}}],["src/cats/cats.service.ts",{"_index":467,"title":{},"body":{"injectables/CatsService.html":{},"coverage.html":{}}}],["src/cats/cats.service.ts:11",{"_index":472,"title":{},"body":{"injectables/CatsService.html":{}}}],["src/cats/cats.service.ts:12",{"_index":475,"title":{},"body":{"injectables/CatsService.html":{}}}],["src/cats/cats.service.ts:19",{"_index":473,"title":{},"body":{"injectables/CatsService.html":{}}}],["src/cats/datum/cat.dto.ts",{"_index":480,"title":{},"body":{"classes/CreateCatDto.html":{},"classes/GetCatResponseDto.html":{},"classes/UpdateCatDto.html":{},"coverage.html":{}}}],["src/cats/datum/cat.dto.ts:21",{"_index":486,"title":{},"body":{"classes/CreateCatDto.html":{}}}],["src/cats/datum/cat.dto.ts:26",{"_index":488,"title":{},"body":{"classes/CreateCatDto.html":{}}}],["src/cats/datum/cat.dto.ts:32",{"_index":482,"title":{},"body":{"classes/CreateCatDto.html":{}}}],["src/cats/datum/cat.dto.ts:39",{"_index":484,"title":{},"body":{"classes/CreateCatDto.html":{}}}],["src/cats/datum/cat.dto.ts:49",{"_index":961,"title":{},"body":{"classes/UpdateCatDto.html":{}}}],["src/cats/datum/cat.dto.ts:56",{"_index":957,"title":{},"body":{"classes/UpdateCatDto.html":{}}}],["src/cats/datum/cat.dto.ts:64",{"_index":959,"title":{},"body":{"classes/UpdateCatDto.html":{}}}],["src/cats/datum/cat.dto.ts:69",{"_index":760,"title":{},"body":{"classes/GetCatResponseDto.html":{}}}],["src/cats/datum/cat.dto.ts:72",{"_index":763,"title":{},"body":{"classes/GetCatResponseDto.html":{}}}],["src/cats/datum/cat.dto.ts:75",{"_index":761,"title":{},"body":{"classes/GetCatResponseDto.html":{}}}],["src/cats/datum/cat.dto.ts:78",{"_index":755,"title":{},"body":{"classes/GetCatResponseDto.html":{}}}],["src/cats/datum/cat.dto.ts:81",{"_index":756,"title":{},"body":{"classes/GetCatResponseDto.html":{}}}],["src/cats/datum/cat.dto.ts:85",{"_index":758,"title":{},"body":{"classes/GetCatResponseDto.html":{}}}],["src/cats/datum/cat.dto.ts:89",{"_index":762,"title":{},"body":{"classes/GetCatResponseDto.html":{}}}],["src/cats/datum/cat.dto.ts:93",{"_index":759,"title":{},"body":{"classes/GetCatResponseDto.html":{}}}],["src/cats/datum/cat.entity.ts",{"_index":301,"title":{},"body":{"classes/Cat.html":{},"coverage.html":{}}}],["src/cats/datum/cat.entity.ts:20",{"_index":328,"title":{},"body":{"classes/Cat.html":{}}}],["src/cats/datum/cat.entity.ts:22",{"_index":318,"title":{},"body":{"classes/Cat.html":{}}}],["src/cats/datum/cat.entity.ts:26",{"_index":321,"title":{},"body":{"classes/Cat.html":{}}}],["src/cats/datum/cat.entity.ts:31",{"_index":339,"title":{},"body":{"classes/Cat.html":{}}}],["src/cats/datum/cat.entity.ts:35",{"_index":326,"title":{},"body":{"classes/Cat.html":{}}}],["src/cats/datum/cat.entity.ts:39",{"_index":309,"title":{},"body":{"classes/Cat.html":{}}}],["src/cats/datum/cat.entity.ts:43",{"_index":313,"title":{},"body":{"classes/Cat.html":{}}}],["src/cats/datum/cat.entity.ts:46",{"_index":314,"title":{},"body":{"classes/Cat.html":{}}}],["src/cats/datum/cat.entity.ts:49",{"_index":329,"title":{},"body":{"classes/Cat.html":{}}}],["src/cats/datum/cat.entity.ts:52",{"_index":315,"title":{},"body":{"classes/Cat.html":{}}}],["src/cats/datum/cat.entity.ts:63",{"_index":335,"title":{},"body":{"classes/Cat.html":{}}}],["src/cats/datum/cat.repository.ts",{"_index":367,"title":{},"body":{"classes/CatRepository.html":{},"coverage.html":{}}}],["src/cats/datum/cat.repository.ts:10",{"_index":371,"title":{},"body":{"classes/CatRepository.html":{}}}],["src/cron/cron.module.ts",{"_index":509,"title":{},"body":{"modules/CronModule.html":{}}}],["src/cron/cron.service.ts",{"_index":511,"title":{},"body":{"injectables/CronService.html":{},"coverage.html":{}}}],["src/cron/cron.service.ts:11",{"_index":518,"title":{},"body":{"injectables/CronService.html":{}}}],["src/cron/cron.service.ts:19",{"_index":520,"title":{},"body":{"injectables/CronService.html":{}}}],["src/cron/cron.service.ts:24",{"_index":522,"title":{},"body":{"injectables/CronService.html":{}}}],["src/cron/cron.service.ts:6",{"_index":524,"title":{},"body":{"injectables/CronService.html":{}}}],["src/cron/cron.service.ts:8",{"_index":527,"title":{},"body":{"injectables/CronService.html":{}}}],["src/domain.ts",{"_index":6,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/health/health.controller.ts",{"_index":769,"title":{},"body":{"controllers/HealthController.html":{},"coverage.html":{}}}],["src/health/health.controller.ts:29",{"_index":772,"title":{},"body":{"controllers/HealthController.html":{}}}],["src/health/health.controller.ts:43",{"_index":774,"title":{},"body":{"controllers/HealthController.html":{}}}],["src/health/health.controller.ts:49",{"_index":773,"title":{},"body":{"controllers/HealthController.html":{}}}],["src/infra/filters/query",{"_index":857,"title":{},"body":{"classes/QueryFailedFilter.html":{},"coverage.html":{}}}],["src/infra/guards/req.ts",{"_index":882,"title":{},"body":{"guards/RequestGuard.html":{},"coverage.html":{}}}],["src/infra/guards/req.ts:21",{"_index":886,"title":{},"body":{"guards/RequestGuard.html":{}}}],["src/infra/guards/req.ts:8",{"_index":890,"title":{},"body":{"guards/RequestGuard.html":{}}}],["src/infra/guards/res.ts",{"_index":910,"title":{},"body":{"guards/ResponseGuard.html":{},"coverage.html":{}}}],["src/infra/guards/res.ts:21",{"_index":913,"title":{},"body":{"guards/ResponseGuard.html":{}}}],["src/infra/guards/res.ts:8",{"_index":914,"title":{},"body":{"guards/ResponseGuard.html":{}}}],["src/infra/interceptors/null",{"_index":737,"title":{},"body":{"injectables/ExcludeNullUndefinedInterceptor.html":{},"coverage.html":{}}}],["src/infra/interceptors/timeout.ts",{"_index":937,"title":{},"body":{"injectables/TimeoutInterceptor.html":{},"coverage.html":{}}}],["src/infra/interceptors/timeout.ts:17",{"_index":943,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["src/infra/interceptors/transform.ts",{"_index":906,"title":{},"body":{"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{},"coverage.html":{}}}],["src/infra/interceptors/transform.ts:17",{"_index":955,"title":{},"body":{"injectables/TransformInterceptor.html":{}}}],["src/main.ts",{"_index":1042,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/users/datum/user.dto.ts",{"_index":501,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/GetUserResponseDto.html":{},"classes/UpdateUserDto.html":{},"coverage.html":{}}}],["src/users/datum/user.dto.ts:19",{"_index":503,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["src/users/datum/user.dto.ts:29",{"_index":962,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["src/users/datum/user.dto.ts:34",{"_index":766,"title":{},"body":{"classes/GetUserResponseDto.html":{}}}],["src/users/datum/user.dto.ts:37",{"_index":767,"title":{},"body":{"classes/GetUserResponseDto.html":{}}}],["src/users/datum/user.dto.ts:41",{"_index":764,"title":{},"body":{"classes/GetUserResponseDto.html":{}}}],["src/users/datum/user.dto.ts:45",{"_index":768,"title":{},"body":{"classes/GetUserResponseDto.html":{}}}],["src/users/datum/user.dto.ts:49",{"_index":765,"title":{},"body":{"classes/GetUserResponseDto.html":{}}}],["src/users/datum/user.entity.ts",{"_index":963,"title":{},"body":{"classes/User.html":{},"coverage.html":{}}}],["src/users/datum/user.entity.ts:18",{"_index":973,"title":{},"body":{"classes/User.html":{}}}],["src/users/datum/user.entity.ts:20",{"_index":968,"title":{},"body":{"classes/User.html":{}}}],["src/users/datum/user.entity.ts:24",{"_index":969,"title":{},"body":{"classes/User.html":{}}}],["src/users/datum/user.entity.ts:28",{"_index":972,"title":{},"body":{"classes/User.html":{}}}],["src/users/datum/user.entity.ts:31",{"_index":966,"title":{},"body":{"classes/User.html":{}}}],["src/users/datum/user.entity.ts:34",{"_index":974,"title":{},"body":{"classes/User.html":{}}}],["src/users/datum/user.entity.ts:37",{"_index":967,"title":{},"body":{"classes/User.html":{}}}],["src/users/datum/user.entity.ts:48",{"_index":965,"title":{},"body":{"classes/User.html":{}}}],["src/users/datum/user.repository.ts",{"_index":981,"title":{},"body":{"classes/UserRepository.html":{},"coverage.html":{}}}],["src/users/datum/user.repository.ts:10",{"_index":982,"title":{},"body":{"classes/UserRepository.html":{}}}],["src/users/users.controller.ts",{"_index":986,"title":{},"body":{"controllers/UsersController.html":{},"coverage.html":{}}}],["src/users/users.controller.ts:45",{"_index":988,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.module.ts",{"_index":999,"title":{},"body":{"modules/UsersModule.html":{}}}],["src/users/users.service.ts",{"_index":1004,"title":{},"body":{"injectables/UsersService.html":{},"coverage.html":{}}}],["src/users/users.service.ts:10",{"_index":1008,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:17",{"_index":1006,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:9",{"_index":1005,"title":{},"body":{"injectables/UsersService.html":{}}}],["start",{"_index":1121,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":1124,"title":{},"body":{"index.html":{}}}],["start:prodtest",{"_index":1125,"title":{},"body":{"index.html":{}}}],["started",{"_index":1105,"title":{"index.html":{}},"body":{}}],["starter",{"_index":1115,"title":{},"body":{"index.html":{}}}],["statements",{"_index":1013,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":156,"title":{},"body":{"controllers/AppController.html":{},"classes/Cat.html":{},"controllers/CatsController.html":{},"injectables/CronService.html":{},"controllers/HealthController.html":{},"classes/User.html":{},"controllers/UsersController.html":{}}}],["status",{"_index":599,"title":{},"body":{"classes/CrudController.html":{},"classes/QueryFailedFilter.html":{},"guards/ResponseGuard.html":{}}}],["statuscode",{"_index":16,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"classes/QueryFailedFilter.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{}}}],["stay",{"_index":1145,"title":{},"body":{"index.html":{}}}],["stream",{"_index":649,"title":{},"body":{"classes/CrudService.html":{}}}],["stream$.pipe",{"_index":708,"title":{},"body":{"classes/CrudService.html":{}}}],["string",{"_index":23,"title":{},"body":{"interfaces/APIResponse.html":{},"controllers/AppController.html":{},"interfaces/AppLaunchAction.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Base.html":{},"classes/Cat.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"classes/CreateCatDto.html":{},"classes/CreateUserDto.html":{},"classes/CrudController.html":{},"classes/CrudService.html":{},"injectables/DBHelper.html":{},"injectables/ExcludeNullUndefinedInterceptor.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"classes/GetCatResponseDto.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"classes/GetUserResponseDto.html":{},"controllers/HealthController.html":{},"interfaces/IBaseEntityModel.html":{},"interfaces/ICrudService.html":{},"interfaces/IPagination.html":{},"classes/Model.html":{},"classes/PaginationParams.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"guards/RequestGuard.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"guards/ResponseGuard.html":{},"classes/UpdateCatDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{},"miscellaneous/typealiases.html":{}}}],["string})@primarygeneratedcolumn",{"_index":285,"title":{},"body":{"classes/Base.html":{}}}],["subject",{"_index":51,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{}}}],["success",{"_index":681,"title":{},"body":{"classes/CrudService.html":{},"interfaces/ITryRequest.html":{},"guards/ResponseGuard.html":{}}}],["successfully",{"_index":555,"title":{},"body":{"classes/CrudController.html":{}}}],["summary",{"_index":455,"title":{},"body":{"controllers/CatsController.html":{},"classes/CrudController.html":{},"controllers/UsersController.html":{}}}],["super(repo",{"_index":478,"title":{},"body":{"injectables/CatsService.html":{},"injectables/UsersService.html":{}}}],["support",{"_index":1138,"title":{},"body":{"index.html":{},"modules.html":{}}}],["svg",{"_index":1156,"title":{},"body":{"modules.html":{}}}],["swagger",{"_index":1089,"title":{},"body":{"dependencies.html":{}}}],["sync",{"_index":714,"title":{},"body":{"injectables/DBHelper.html":{}}}],["sync(relation",{"_index":718,"title":{},"body":{"injectables/DBHelper.html":{}}}],["synchronize",{"_index":242,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["syntax",{"_index":898,"title":{},"body":{"guards/RequestGuard.html":{}}}],["t",{"_index":21,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"classes/CrudController.html":{},"injectables/DBHelper.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/ICrudService.html":{},"interfaces/IPagination.html":{},"interfaces/IPagination-1.html":{},"classes/PaginationParams.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{}}}],["table",{"_index":1049,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1048,"title":{},"body":{"coverage.html":{}}}],["take",{"_index":831,"title":{},"body":{"classes/PaginationParams.html":{}}}],["takes",{"_index":941,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["terminate",{"_index":940,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["termination",{"_index":789,"title":{},"body":{"controllers/HealthController.html":{}}}],["terminusmodule",{"_index":203,"title":{},"body":{"modules/AppModule.html":{}}}],["test",{"_index":233,"title":{},"body":{"modules/AppModule.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["test:covsupport",{"_index":1130,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":1129,"title":{},"body":{"index.html":{}}}],["tests",{"_index":1127,"title":{},"body":{"index.html":{}}}],["thanks",{"_index":1136,"title":{},"body":{"index.html":{}}}],["this.appservice.gethello",{"_index":161,"title":{},"body":{"controllers/AppController.html":{}}}],["this.base.createmanybase(r",{"_index":450,"title":{},"body":{"controllers/CatsController.html":{}}}],["this.base.createonebase(r",{"_index":449,"title":{},"body":{"controllers/CatsController.html":{}}}],["this.base.deleteonebase(r",{"_index":454,"title":{},"body":{"controllers/CatsController.html":{}}}],["this.base.getmanybase(r",{"_index":448,"title":{},"body":{"controllers/CatsController.html":{}}}],["this.base.getonebase(r",{"_index":446,"title":{},"body":{"controllers/CatsController.html":{}}}],["this.base.replaceonebase(r",{"_index":452,"title":{},"body":{"controllers/CatsController.html":{}}}],["this.base.updateonebase(r",{"_index":451,"title":{},"body":{"controllers/CatsController.html":{}}}],["this.bindrequesthelpers(context.switchtohttp().getrequest",{"_index":891,"title":{},"body":{"guards/RequestGuard.html":{}}}],["this.bindresponsehelpers(context.switchtohttp().getresponse",{"_index":915,"title":{},"body":{"guards/ResponseGuard.html":{}}}],["this.config.get('node_env",{"_index":809,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.crudservice.create(entity",{"_index":616,"title":{},"body":{"classes/CrudController.html":{}}}],["this.crudservice.delete(id",{"_index":628,"title":{},"body":{"classes/CrudController.html":{}}}],["this.crudservice.findall(filter",{"_index":605,"title":{},"body":{"classes/CrudController.html":{}}}],["this.crudservice.findone(id",{"_index":609,"title":{},"body":{"classes/CrudController.html":{}}}],["this.crudservice.update(id",{"_index":621,"title":{},"body":{"classes/CrudController.html":{}}}],["this.dns.pingcheck('nestjs",{"_index":784,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.findby",{"_index":723,"title":{},"body":{"injectables/DBHelper.html":{}}}],["this.getpasswordhash(partialentity.hash",{"_index":704,"title":{},"body":{"classes/CrudService.html":{}}}],["this.health.check",{"_index":783,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.logger.debug",{"_index":532,"title":{},"body":{"injectables/CronService.html":{}}}],["this.logger.debug('called",{"_index":537,"title":{},"body":{"injectables/CronService.html":{}}}],["this.repo.clearall",{"_index":479,"title":{},"body":{"injectables/CatsService.html":{},"injectables/UsersService.html":{}}}],["this.repository.count(filter",{"_index":677,"title":{},"body":{"classes/CrudService.html":{}}}],["this.repository.create(entity",{"_index":688,"title":{},"body":{"classes/CrudService.html":{}}}],["this.repository.delete(criteria",{"_index":707,"title":{},"body":{"classes/CrudService.html":{}}}],["this.repository.find(filter",{"_index":679,"title":{},"body":{"classes/CrudService.html":{}}}],["this.repository.findone(id",{"_index":683,"title":{},"body":{"classes/CrudService.html":{}}}],["this.repository.findone(this.findby",{"_index":725,"title":{},"body":{"injectables/DBHelper.html":{}}}],["this.repository.findoneorfail(id",{"_index":680,"title":{},"body":{"classes/CrudService.html":{}}}],["this.repository.save(obj",{"_index":691,"title":{},"body":{"classes/CrudService.html":{}}}],["this.repository.save(row",{"_index":735,"title":{},"body":{"injectables/DBHelper.html":{}}}],["this.repository.update(id",{"_index":706,"title":{},"body":{"classes/CrudService.html":{}}}],["this.saltrounds",{"_index":675,"title":{},"body":{"classes/CrudService.html":{}}}],["this.service.clear",{"_index":457,"title":{},"body":{"controllers/CatsController.html":{},"controllers/UsersController.html":{}}}],["throw",{"_index":684,"title":{},"body":{"classes/CrudService.html":{}}}],["throwerror",{"_index":665,"title":{},"body":{"classes/CrudService.html":{},"injectables/TimeoutInterceptor.html":{}}}],["throwerror(e",{"_index":954,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["throwerror(new",{"_index":953,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["time",{"_index":276,"title":{},"body":{"classes/Base.html":{},"interfaces/IBaseEntityModel.html":{},"classes/Model.html":{}}}],["timeago",{"_index":94,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{}}}],["timeout",{"_index":530,"title":{},"body":{"injectables/CronService.html":{},"injectables/TimeoutInterceptor.html":{}}}],["timeout(10000",{"_index":947,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["timeout(50000",{"_index":521,"title":{},"body":{"injectables/CronService.html":{}}}],["timeouterror",{"_index":945,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["timeoutinterceptor",{"_index":936,"title":{"injectables/TimeoutInterceptor.html":{}},"body":{"injectables/TimeoutInterceptor.html":{},"coverage.html":{}}}],["timestamp",{"_index":877,"title":{},"body":{"classes/QueryFailedFilter.html":{}}}],["toadd",{"_index":730,"title":{},"body":{"injectables/DBHelper.html":{}}}],["tohexstring",{"_index":1027,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["tohexstring(value",{"_index":1103,"title":{},"body":{"miscellaneous/functions.html":{}}}],["toremove",{"_index":728,"title":{},"body":{"injectables/DBHelper.html":{}}}],["toremove.indexof(value",{"_index":734,"title":{},"body":{"injectables/DBHelper.html":{}}}],["total",{"_index":17,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"classes/CrudService.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/ICrudService.html":{},"interfaces/IPagination.html":{},"interfaces/IPagination-1.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{}}}],["touch",{"_index":1146,"title":{},"body":{"index.html":{}}}],["transform",{"_index":740,"title":{},"body":{"injectables/ExcludeNullUndefinedInterceptor.html":{},"classes/PaginationParams.html":{}}}],["transform((val",{"_index":852,"title":{},"body":{"classes/PaginationParams.html":{}}}],["transformer",{"_index":340,"title":{},"body":{"classes/Cat.html":{},"classes/CreateCatDto.html":{},"classes/CreateUserDto.html":{},"classes/GetCatResponseDto.html":{},"classes/GetUserResponseDto.html":{},"classes/PaginationParams.html":{},"classes/UpdateCatDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"dependencies.html":{}}}],["transforminterceptor",{"_index":907,"title":{"injectables/TransformInterceptor.html":{}},"body":{"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{},"coverage.html":{}}}],["true",{"_index":220,"title":{},"body":{"modules/AppModule.html":{},"classes/Cat.html":{},"controllers/CatsController.html":{},"classes/CrudService.html":{},"guards/RequestGuard.html":{},"guards/ResponseGuard.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"miscellaneous/variables.html":{}}}],["try",{"_index":672,"title":{},"body":{"classes/CrudService.html":{}}}],["ts",{"_index":700,"title":{},"body":{"classes/CrudService.html":{},"classes/QueryFailedFilter.html":{}}}],["twitter",{"_index":1152,"title":{},"body":{"index.html":{}}}],["type",{"_index":19,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"modules/AppModule.html":{},"classes/Base.html":{},"classes/Cat.html":{},"controllers/CatsController.html":{},"injectables/CatsService.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"classes/CreateCatDto.html":{},"classes/CreateUserDto.html":{},"injectables/CronService.html":{},"classes/CrudController.html":{},"classes/CrudService.html":{},"injectables/DBHelper.html":{},"injectables/ExcludeNullUndefinedInterceptor.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"classes/GetCatResponseDto.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"classes/GetUserResponseDto.html":{},"controllers/HealthController.html":{},"interfaces/IBaseEntityModel.html":{},"interfaces/ICrudService.html":{},"interfaces/IPagination.html":{},"interfaces/IPagination-1.html":{},"interfaces/ITryRequest.html":{},"classes/Model.html":{},"classes/PaginationParams.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"classes/QueryFailedFilter.html":{},"guards/RequestGuard.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/Response.html":{},"guards/ResponseGuard.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateCatDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["type((t",{"_index":365,"title":{},"body":{"classes/Cat.html":{},"classes/User.html":{}}}],["typealiases",{"_index":1163,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typeof",{"_index":901,"title":{},"body":{"guards/RequestGuard.html":{}}}],["typeorm",{"_index":295,"title":{},"body":{"classes/Base.html":{},"classes/Cat.html":{},"classes/CatRepository.html":{},"injectables/CatsService.html":{},"classes/CrudController.html":{},"classes/CrudService.html":{},"injectables/DBHelper.html":{},"interfaces/IBaseEntityModel.html":{},"interfaces/ICrudService.html":{},"interfaces/IPagination.html":{},"classes/Model.html":{},"classes/QueryFailedFilter.html":{},"classes/User.html":{},"classes/UserRepository.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["typeorm/query",{"_index":592,"title":{},"body":{"classes/CrudController.html":{},"classes/CrudService.html":{},"interfaces/ICrudService.html":{},"interfaces/IPagination.html":{}}}],["typeormcrudservice",{"_index":468,"title":{},"body":{"injectables/CatsService.html":{},"injectables/UsersService.html":{}}}],["typeormmodule",{"_index":205,"title":{},"body":{"modules/AppModule.html":{},"modules/CatsModule.html":{},"modules/UsersModule.html":{}}}],["typeormmodule.forfeature([catrepository",{"_index":466,"title":{},"body":{"modules/CatsModule.html":{}}}],["typeormmodule.forfeature([userrepository",{"_index":1003,"title":{},"body":{"modules/UsersModule.html":{}}}],["typeormmodule.forroot(typeormmoduleoptions",{"_index":252,"title":{},"body":{"modules/AppModule.html":{}}}],["typeormmoduleoptions",{"_index":236,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["types",{"_index":1056,"title":{},"body":{"dependencies.html":{}}}],["typescript",{"_index":192,"title":{},"body":{"modules/AppModule.html":{},"classes/CatRepository.html":{},"classes/CrudService.html":{},"injectables/ExcludeNullUndefinedInterceptor.html":{},"interfaces/Response.html":{},"guards/ResponseGuard.html":{},"injectables/TransformInterceptor.html":{},"classes/UserRepository.html":{},"index.html":{}}}],["u",{"_index":357,"title":{},"body":{"classes/Cat.html":{}}}],["u.cats",{"_index":358,"title":{},"body":{"classes/Cat.html":{}}}],["ui",{"_index":1090,"title":{},"body":{"dependencies.html":{}}}],["unauthorized",{"_index":601,"title":{},"body":{"classes/CrudController.html":{}}}],["undefined",{"_index":325,"title":{},"body":{"classes/Cat.html":{},"classes/CrudController.html":{},"injectables/ExcludeNullUndefinedInterceptor.html":{},"classes/User.html":{},"coverage.html":{}}}],["unique",{"_index":319,"title":{},"body":{"classes/Cat.html":{},"classes/User.html":{}}}],["unit",{"_index":1126,"title":{},"body":{"index.html":{}}}],["unsafe",{"_index":194,"title":{},"body":{"modules/AppModule.html":{},"classes/CatRepository.html":{},"classes/CrudService.html":{},"injectables/ExcludeNullUndefinedInterceptor.html":{},"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{},"classes/UserRepository.html":{}}}],["until",{"_index":805,"title":{},"body":{"controllers/HealthController.html":{}}}],["update",{"_index":437,"title":{},"body":{"controllers/CatsController.html":{},"classes/CrudController.html":{},"classes/CrudService.html":{},"interfaces/ICrudService.html":{},"interfaces/IPagination.html":{},"controllers/UsersController.html":{}}}],["update(id",{"_index":581,"title":{},"body":{"classes/CrudController.html":{},"classes/CrudService.html":{},"interfaces/ICrudService.html":{}}}],["updatecatdto",{"_index":415,"title":{"classes/UpdateCatDto.html":{}},"body":{"controllers/CatsController.html":{},"classes/CreateCatDto.html":{},"classes/GetCatResponseDto.html":{},"classes/UpdateCatDto.html":{},"coverage.html":{}}}],["updatedat",{"_index":273,"title":{},"body":{"classes/Base.html":{},"classes/Cat.html":{},"classes/CreateCatDto.html":{},"classes/CreateUserDto.html":{},"classes/GetCatResponseDto.html":{},"classes/GetUserResponseDto.html":{},"interfaces/IBaseEntityModel.html":{},"classes/Model.html":{},"classes/UpdateCatDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{}}}],["updatedatecolumn",{"_index":292,"title":{},"body":{"classes/Base.html":{},"classes/Cat.html":{},"interfaces/IBaseEntityModel.html":{},"classes/Model.html":{},"classes/User.html":{}}}],["updateone",{"_index":392,"title":{},"body":{"controllers/CatsController.html":{}}}],["updateone(r",{"_index":414,"title":{},"body":{"controllers/CatsController.html":{}}}],["updateresult",{"_index":670,"title":{},"body":{"classes/CrudService.html":{},"interfaces/ICrudService.html":{},"interfaces/IPagination.html":{}}}],["updateuserdto",{"_index":504,"title":{"classes/UpdateUserDto.html":{}},"body":{"classes/CreateUserDto.html":{},"classes/GetUserResponseDto.html":{},"classes/UpdateUserDto.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["use",{"_index":146,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/CatsController.html":{},"classes/CrudService.html":{},"controllers/HealthController.html":{},"controllers/UsersController.html":{}}}],["user",{"_index":52,"title":{"classes/User.html":{}},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"modules/AppModule.html":{},"classes/Cat.html":{},"controllers/CatsController.html":{},"modules/CatsModule.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"classes/CreateUserDto.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"classes/GetUserResponseDto.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{},"classes/UserRepository.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["user'})@post('/clear",{"_index":987,"title":{},"body":{"controllers/UsersController.html":{}}}],["user.entity",{"_index":983,"title":{},"body":{"classes/UserRepository.html":{}}}],["user.exclude",{"_index":442,"title":{},"body":{"controllers/CatsController.html":{}}}],["user.name_length",{"_index":977,"title":{},"body":{"classes/User.html":{}}}],["user_name",{"_index":971,"title":{},"body":{"classes/User.html":{}}}],["useraddress",{"_index":69,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{}}}],["usercontacts",{"_index":70,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{}}}],["useremail",{"_index":71,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{}}}],["userid",{"_index":128,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"classes/Cat.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"classes/CreateCatDto.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"classes/GetCatResponseDto.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"classes/UpdateCatDto.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{}}}],["username",{"_index":72,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{}}}],["userpost",{"_index":84,"title":{"interfaces/UserPost.html":{}},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{},"coverage.html":{}}}],["userposts",{"_index":98,"title":{"interfaces/UserPosts.html":{}},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{},"coverage.html":{}}}],["userrepository",{"_index":462,"title":{"classes/UserRepository.html":{}},"body":{"modules/CatsModule.html":{},"classes/UserRepository.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["users",{"_index":976,"title":{},"body":{"classes/User.html":{},"classes/UserRepository.html":{},"controllers/UsersController.html":{}}}],["users.controller",{"_index":1002,"title":{},"body":{"modules/UsersModule.html":{}}}],["users.service",{"_index":992,"title":{},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{}}}],["users/datum/user.entity",{"_index":215,"title":{},"body":{"modules/AppModule.html":{},"classes/Cat.html":{},"controllers/CatsController.html":{},"modules/CatsModule.html":{}}}],["users/datum/user.repository",{"_index":463,"title":{},"body":{"modules/CatsModule.html":{}}}],["users/users.module",{"_index":216,"title":{},"body":{"modules/AppModule.html":{}}}],["userscontroller",{"_index":985,"title":{"controllers/UsersController.html":{}},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{},"coverage.html":{}}}],["usersmodule",{"_index":176,"title":{"modules/UsersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["usersservice",{"_index":991,"title":{"injectables/UsersService.html":{}},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"overview.html":{}}}],["usesid",{"_index":53,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{}}}],["valid('development",{"_index":231,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["validationoptions",{"_index":221,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["validationschema",{"_index":224,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["validator",{"_index":497,"title":{},"body":{"classes/CreateCatDto.html":{},"classes/CreateUserDto.html":{},"classes/GetCatResponseDto.html":{},"classes/GetUserResponseDto.html":{},"classes/PaginationParams.html":{},"classes/UpdateCatDto.html":{},"classes/UpdateUserDto.html":{},"dependencies.html":{}}}],["value",{"_index":317,"title":{},"body":{"classes/Cat.html":{},"injectables/CronService.html":{},"injectables/ExcludeNullUndefinedInterceptor.html":{},"classes/PaginationParams.html":{},"guards/RequestGuard.html":{},"injectables/TimeoutInterceptor.html":{},"classes/User.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["value.trim",{"_index":903,"title":{},"body":{"guards/RequestGuard.html":{}}}],["values",{"_index":726,"title":{},"body":{"injectables/DBHelper.html":{}}}],["variable",{"_index":1015,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":1166,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["viewscont",{"_index":120,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{}}}],["void",{"_index":189,"title":{},"body":{"modules/AppModule.html":{},"injectables/CronService.html":{},"controllers/HealthController.html":{},"classes/QueryFailedFilter.html":{}}}],["watch",{"_index":1122,"title":{},"body":{"index.html":{}}}],["website",{"_index":1150,"title":{},"body":{"index.html":{}}}],["went",{"_index":561,"title":{},"body":{"classes/CrudController.html":{},"guards/ResponseGuard.html":{}}}],["withmeta",{"_index":935,"title":{},"body":{"guards/ResponseGuard.html":{}}}],["withmeta(data",{"_index":928,"title":{},"body":{"guards/ResponseGuard.html":{}}}],["world",{"_index":264,"title":{},"body":{"injectables/AppService.html":{}}}],["writeerror",{"_index":693,"title":{},"body":{"classes/CrudService.html":{}}}],["wrong",{"_index":613,"title":{},"body":{"classes/CrudController.html":{},"guards/ResponseGuard.html":{}}}],["wrong'})@httpcode(httpstatus.accepted)@put(':id",{"_index":586,"title":{},"body":{"classes/CrudController.html":{}}}],["wrong'})@httpcode(httpstatus.created)@post",{"_index":562,"title":{},"body":{"classes/CrudController.html":{}}}],["yes",{"_index":188,"title":{},"body":{"modules/AppModule.html":{},"classes/CrudController.html":{},"classes/CrudService.html":{},"controllers/HealthController.html":{},"interfaces/ICrudService.html":{},"classes/Model.html":{}}}],["you'd",{"_index":1141,"title":{},"body":{"index.html":{}}}],["zoom",{"_index":177,"title":{},"body":{"modules/AppModule.html":{},"modules/CatsModule.html":{},"modules/CronModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"interfaces/APIResponse.html":{"url":"interfaces/APIResponse.html","title":"interface - APIResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  APIResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/domain.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        count\n                                \n                                \n                                        data\n                                \n                                \n                                        error\n                                \n                                \n                                        message\n                                \n                                \n                                            Optional\n                                        page\n                                \n                                \n                                            Optional\n                                        pageCount\n                                \n                                \n                                        statusCode\n                                \n                                \n                                            Optional\n                                        total\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        count\n                                    \n                                \n                                \n                                    \n                                        count:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                    \n                                \n                                \n                                    \n                                        data:     T\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     T\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        error\n                                    \n                                \n                                \n                                    \n                                        error:         APIError\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         APIError\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        message\n                                    \n                                \n                                \n                                    \n                                        message:     string | string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        page\n                                    \n                                \n                                \n                                    \n                                        page:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pageCount\n                                    \n                                \n                                \n                                    \n                                        pageCount:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        statusCode\n                                    \n                                \n                                \n                                    \n                                        statusCode:     HttpStatus\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     HttpStatus\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        total\n                                    \n                                \n                                \n                                    \n                                        total:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { HttpStatus } from '@nestjs/common'\n\nexport type Result =\n    | GetAppLaunchData\n    | GetUserProfile\n    | GetUserPosts\n    | GetComments\n    | GetRescueList\n    | GetFollowers\n    | GetFollowing\n\nexport type APIError = Error | string | null\n\nexport interface APIResponse {\n    data: T\n    error: APIError\n    message: string | string[]\n    statusCode: HttpStatus\n\n    count?: number\n    page?: number\n    pageCount?: number\n    total?: number\n}\n\nexport interface GetAppLaunchData {\n    link: 'api:/'\n    response: APIResponse\n}\n\nexport interface GetUserProfile {\n    link: 'api:v1/user/getUserProfile?userId=25'\n    response: APIResponse\n}\n\nexport interface GetUserPosts {\n    link: 'api:v1/user/getUserPosts?pageNo=0&pageSize=25'\n    response: APIResponse\n}\n\nexport interface GetRescueList {\n    link: 'api:v1/rescue/getRescueList?pageNo=0&pageSize=10&status=pending|inProgress|completed|nearest'\n    response: APIResponse\n}\n\nexport interface GetComments {\n    link: 'api:v1/rescue/getComments?pageNo=0&pageSize=10&postId=1230'\n    response: APIResponse\n}\n\nexport interface GetFollowers {\n    link: 'api:v1/rescue/getUserFollowers?userId=1230'\n    response: APIResponse\n}\n\nexport interface GetFollowing {\n    link: 'api:v1/rescue/getUserFollowing?userId=1230'\n    response: APIResponse\n}\n\nexport interface AppLaunchAction {\n    actionId: number\n    action: string\n    isActive: boolean\n    subject?: string\n}\n\nexport interface User {\n    usesId: number\n\n    coverImage: string\n    following: boolean\n    gender: string\n    isOwnProfile: number\n    isRescuer: boolean\n    latitude: number\n    longitude: number\n    numberOfFollowers: number\n    numberOfFollowing: number\n    numberOfPosts: number\n    numberOfRescuesCompleted: number\n    numberOfRescuesCreated: number\n    numberOfRescuesInProgress: number\n    profileImage: string\n    rescuer: boolean\n    userAddress: string\n    userContacts: string\n    userEmail: string\n    userName: string\n    badge: {\n        badgeId: number\n        badgeName: string\n        badgeDescription: string\n        recuesCompletionNeeded: number\n    }\n    setting: {\n        showMyContacts: boolean\n        getNotifications: boolean\n    }\n}\n\nexport interface PostType {\n    postTypeId: number\n    postType: string\n}\n\nexport interface PostedByUser {\n    usesId: number\n    badgeName: string\n    following: boolean\n    profileImage: string\n    rescuer: boolean\n    userName: string\n}\n\nexport interface UserPost {\n    postId: number\n    commentsCount: number\n    isUserReactedToPost: boolean\n    ownPage: boolean\n    postBy: PostedByUser\n    postImage: string\n    postTime: string\n    postType: PostType\n    postVideo: string\n    reactionsCount: number\n    timeAgo: string\n\n    adCorporateLogoUrl: string | null\n    corporateDescription: string | null\n    corporateName: string | null\n}\n\nexport interface UserPosts {\n    isRecent: boolean\n    feed: UserPost[]\n}\n\nexport interface Rescues {\n    rescueId: number\n    animalImageUrl: string\n    distance: number\n    distanceAway: string\n    emergencyType: string\n    postedBy: string\n    postedMinAgo: string\n    rescueDate: Date\n    rescuedPetName: string\n    rescueLocality: string\n    rescuers: {\n        contact: number\n        name: string\n        profileId: number\n        profileImageUrl: string\n        rescues: boolean\n        showMyNumber: boolean\n    }\n    rescueStatus: string\n    viewsCont: number\n}\n\nexport interface RescueLists {\n    rescues: Rescues[]\n}\n\nexport interface Comment {\n    commentId: number\n    comment: string\n    commentedUseName: string\n    commentedUserId: number\n    timeAgo: string\n}\n\nexport interface Comments {\n    comments: Comment[]\n}\n\nexport interface Follower {\n    userId: number\n    userName: string\n    profileImage: string\n    areYouFollowing: boolean\n    showRemoveOption: boolean\n}\n\nexport interface Following extends Follower {}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getHello\n                        \n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/app.controller.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        /* eslint-disable no-use-before-define */\nimport { Controller, Get } from '@nestjs/common'\nimport { ApiTags } from '@nestjs/swagger'\n\nimport { AppService } from './app.service'\n\n@Controller(AppController.path)\n@ApiTags(AppController.name)\nexport class AppController {\n    static path = '/'\n\n    constructor(private readonly appService: AppService) {}\n\n    @Get()\n    getHello(): string {\n        return this.appService.getHello()\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AppLaunchAction.html":{"url":"interfaces/AppLaunchAction.html","title":"interface - AppLaunchAction","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  AppLaunchAction\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/domain.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        action\n                                \n                                \n                                        actionId\n                                \n                                \n                                        isActive\n                                \n                                \n                                            Optional\n                                        subject\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        action\n                                    \n                                \n                                \n                                    \n                                        action:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        actionId\n                                    \n                                \n                                \n                                    \n                                        actionId:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isActive\n                                    \n                                \n                                \n                                    \n                                        isActive:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        subject\n                                    \n                                \n                                \n                                    \n                                        subject:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { HttpStatus } from '@nestjs/common'\n\nexport type Result =\n    | GetAppLaunchData\n    | GetUserProfile\n    | GetUserPosts\n    | GetComments\n    | GetRescueList\n    | GetFollowers\n    | GetFollowing\n\nexport type APIError = Error | string | null\n\nexport interface APIResponse {\n    data: T\n    error: APIError\n    message: string | string[]\n    statusCode: HttpStatus\n\n    count?: number\n    page?: number\n    pageCount?: number\n    total?: number\n}\n\nexport interface GetAppLaunchData {\n    link: 'api:/'\n    response: APIResponse\n}\n\nexport interface GetUserProfile {\n    link: 'api:v1/user/getUserProfile?userId=25'\n    response: APIResponse\n}\n\nexport interface GetUserPosts {\n    link: 'api:v1/user/getUserPosts?pageNo=0&pageSize=25'\n    response: APIResponse\n}\n\nexport interface GetRescueList {\n    link: 'api:v1/rescue/getRescueList?pageNo=0&pageSize=10&status=pending|inProgress|completed|nearest'\n    response: APIResponse\n}\n\nexport interface GetComments {\n    link: 'api:v1/rescue/getComments?pageNo=0&pageSize=10&postId=1230'\n    response: APIResponse\n}\n\nexport interface GetFollowers {\n    link: 'api:v1/rescue/getUserFollowers?userId=1230'\n    response: APIResponse\n}\n\nexport interface GetFollowing {\n    link: 'api:v1/rescue/getUserFollowing?userId=1230'\n    response: APIResponse\n}\n\nexport interface AppLaunchAction {\n    actionId: number\n    action: string\n    isActive: boolean\n    subject?: string\n}\n\nexport interface User {\n    usesId: number\n\n    coverImage: string\n    following: boolean\n    gender: string\n    isOwnProfile: number\n    isRescuer: boolean\n    latitude: number\n    longitude: number\n    numberOfFollowers: number\n    numberOfFollowing: number\n    numberOfPosts: number\n    numberOfRescuesCompleted: number\n    numberOfRescuesCreated: number\n    numberOfRescuesInProgress: number\n    profileImage: string\n    rescuer: boolean\n    userAddress: string\n    userContacts: string\n    userEmail: string\n    userName: string\n    badge: {\n        badgeId: number\n        badgeName: string\n        badgeDescription: string\n        recuesCompletionNeeded: number\n    }\n    setting: {\n        showMyContacts: boolean\n        getNotifications: boolean\n    }\n}\n\nexport interface PostType {\n    postTypeId: number\n    postType: string\n}\n\nexport interface PostedByUser {\n    usesId: number\n    badgeName: string\n    following: boolean\n    profileImage: string\n    rescuer: boolean\n    userName: string\n}\n\nexport interface UserPost {\n    postId: number\n    commentsCount: number\n    isUserReactedToPost: boolean\n    ownPage: boolean\n    postBy: PostedByUser\n    postImage: string\n    postTime: string\n    postType: PostType\n    postVideo: string\n    reactionsCount: number\n    timeAgo: string\n\n    adCorporateLogoUrl: string | null\n    corporateDescription: string | null\n    corporateName: string | null\n}\n\nexport interface UserPosts {\n    isRecent: boolean\n    feed: UserPost[]\n}\n\nexport interface Rescues {\n    rescueId: number\n    animalImageUrl: string\n    distance: number\n    distanceAway: string\n    emergencyType: string\n    postedBy: string\n    postedMinAgo: string\n    rescueDate: Date\n    rescuedPetName: string\n    rescueLocality: string\n    rescuers: {\n        contact: number\n        name: string\n        profileId: number\n        profileImageUrl: string\n        rescues: boolean\n        showMyNumber: boolean\n    }\n    rescueStatus: string\n    viewsCont: number\n}\n\nexport interface RescueLists {\n    rescues: Rescues[]\n}\n\nexport interface Comment {\n    commentId: number\n    comment: string\n    commentedUseName: string\n    commentedUserId: number\n    timeAgo: string\n}\n\nexport interface Comments {\n    comments: Comment[]\n}\n\nexport interface Follower {\n    userId: number\n    userName: string\n    profileImage: string\n    areYouFollowing: boolean\n    showRemoveOption: boolean\n}\n\nexport interface Following extends Follower {}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AppModule_imports\n\n\n\n\nCatsModule\n\nCatsModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nCatsModule->AppModule\n\n\n\n\n\nCronModule\n\nCronModule\n\nAppModule -->\n\nCronModule->AppModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                        \n                            HealthController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            CatsModule\n                        \n                        \n                            CronModule\n                        \n                        \n                            UsersModule\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onApplicationShutdown\n                        \n                        \n                    \n                \n            \n            \n                \nonApplicationShutdown(signal?: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app.module.ts:67\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    signal\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onModuleInit\n                        \n                        \n                    \n                \n            \n            \n                \nonModuleInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app.module.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        /* eslint-disable @typescript-eslint/no-unsafe-assignment,@typescript-eslint/no-unsafe-call,@typescript-eslint/no-unsafe-member-access,no-use-before-define */\nimport { Module, OnApplicationShutdown, OnModuleInit } from '@nestjs/common'\nimport { ConfigModule } from '@nestjs/config'\nimport { ScheduleModule } from '@nestjs/schedule'\nimport { TerminusModule } from '@nestjs/terminus'\nimport { TypeOrmModule } from '@nestjs/typeorm'\n\nimport * as Joi from '@hapi/joi'\n\nimport { AppController } from './app.controller'\nimport { AppService } from './app.service'\nimport { CatsModule } from './cats/cats.module'\nimport { Cat } from './cats/datum/cat.entity'\nimport { CronModule } from './cron/cron.module'\nimport { HealthController } from './health/health.controller'\nimport { User } from './users/datum/user.entity'\nimport { UsersModule } from './users/users.module'\n\nconst ConfigModuleOptions = {\n    isGlobal: true,\n    validationOptions: {\n        allowUnknown: true,\n        abortEarly: true,\n    },\n    validationSchema: Joi.object({\n        PORT: Joi.number().default(3000),\n        NODE_ENV: Joi.string()\n            .required()\n            .valid('development', 'production', 'test', 'provision')\n            .default('development'),\n    }),\n}\n\nexport const TypeOrmModuleOptions = {\n    entities: [\n        Cat,\n        User,\n        // `${__dirname}/**/*.entity.{ts,js}`,\n    ],\n    type: 'sqlite' as const,\n    database: 'database.sqlite',\n    synchronize: true,\n    logging: true,\n    // migrations: [`${__dirname}/**/migrations/*{.ts,.js}`],\n    // migrationsTableName: 'migrations_typeorm',\n    // migrationsRun: true,\n}\n\n@Module({\n    controllers: [AppController, HealthController],\n    imports: [\n        ConfigModule.forRoot(ConfigModuleOptions),\n        ScheduleModule.forRoot(),\n        CronModule,\n        TerminusModule, // Health module\n        TypeOrmModule.forRoot(TypeOrmModuleOptions),\n        CatsModule,\n        UsersModule,\n    ],\n    providers: [AppService],\n})\nexport class AppModule implements OnModuleInit, OnApplicationShutdown {\n    onModuleInit(): void {\n        console.info(`ModuleInit - AppModule has been initialized.`)\n    }\n\n    onApplicationShutdown(signal?: string): void {\n        console.error(\n            `ApplicationShutdown - AppModule has been shutdown with ${signal} signal`,\n        )\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getHello\n                        \n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n            \n                \n                    Defined in src/app.service.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common'\n\n@Injectable()\nexport class AppService {\n    getHello(): string {\n        return 'Hello World!'\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Base.html":{"url":"classes/Base.html","title":"class - Base","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Base\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/base/entities/base.ts\n        \n\n\n            \n                Extends\n            \n            \n                        Model\n            \n\n            \n                Implements\n            \n            \n                            IBaseEntityModel\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                createdAt\n                            \n                            \n                                    Optional\n                                deletedAt\n                            \n                            \n                                    Optional\n                                id\n                            \n                            \n                                    Optional\n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({type: 'string', format: 'date-time', example: '2000-01-01T12:00:00.000Z'})@CreateDateColumn()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/base/entities/base.ts:38\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            deletedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Date | null\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({type: 'string', format: 'date-time', example: '2000-01-01T12:00:00.000Z'})@DeleteDateColumn()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/base/entities/base.ts:54\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiPropertyOptional({type: String})@PrimaryGeneratedColumn()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/base/entities/base.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({type: 'string', format: 'date-time', example: '2000-01-01T12:00:00.000Z'})@UpdateDateColumn()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/base/entities/base.ts:46\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiPropertyOptional, ApiProperty } from '@nestjs/swagger'\n\nimport {\n    PrimaryGeneratedColumn,\n    UpdateDateColumn,\n    CreateDateColumn,\n    DeleteDateColumn,\n} from 'typeorm'\n\nexport interface IBaseEntityModel {\n    id?: number\n\n    readonly createdAt?: Date\n    readonly updatedAt?: Date\n    readonly deletedAt?: Date | null\n}\n\nexport abstract class Model {\n    constructor(input?: any) {\n        if (input) {\n            Object.assign(this, input)\n        }\n    }\n}\n\nexport abstract class Base extends Model implements IBaseEntityModel {\n    @ApiPropertyOptional({ type: String })\n    @PrimaryGeneratedColumn()\n    id?: number\n\n    @ApiProperty({\n        type: 'string',\n        format: 'date-time',\n        example: '2000-01-01T12:00:00.000Z',\n    })\n    @CreateDateColumn()\n    createdAt?: Date\n\n    @ApiProperty({\n        type: 'string',\n        format: 'date-time',\n        example: '2000-01-01T12:00:00.000Z',\n    })\n    @UpdateDateColumn()\n    updatedAt?: Date\n\n    @ApiProperty({\n        type: 'string',\n        format: 'date-time',\n        example: '2000-01-01T12:00:00.000Z',\n    })\n    @DeleteDateColumn()\n    deletedAt?: Date | null\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Cat.html":{"url":"classes/Cat.html","title":"class - Cat","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Cat\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/cats/datum/cat.entity.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                age\n                            \n                            \n                                breed\n                            \n                            \n                                createdAt\n                            \n                            \n                                deletedAt\n                            \n                            \n                                    Static\n                                exclude\n                            \n                            \n                                id\n                            \n                            \n                                name\n                            \n                            \n                                    Static\n                                    Readonly\n                                NAME_LENGTH\n                            \n                            \n                                updatedAt\n                            \n                            \n                                user\n                            \n                            \n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            age\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'The age of the Cat', example: 1})@Column({name: 'cat_age'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/cats/datum/cat.entity.ts:39\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            breed\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'The breed of the Cat', example: 'Maine Coon'})@Column({name: 'cat_breed'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/cats/datum/cat.entity.ts:43\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @CreateDateColumn()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/cats/datum/cat.entity.ts:46\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            deletedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @DeleteDateColumn()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/cats/datum/cat.entity.ts:52\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            exclude\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : ['createdAt', 'updatedAt', 'deletedAt']\n                        \n                    \n                        \n                            \n                                    Defined in src/cats/datum/cat.entity.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'Cat unique ID', example: '36635263'})@PrimaryGeneratedColumn()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/cats/datum/cat.entity.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'The name of the Cat', example: 'Kitty'})@Column({name: 'cat_name', length: undefined})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/cats/datum/cat.entity.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                                Readonly\n                            NAME_LENGTH\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 36\n                        \n                    \n                        \n                            \n                                    Defined in src/cats/datum/cat.entity.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @UpdateDateColumn()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/cats/datum/cat.entity.ts:49\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            user\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         User\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ManyToOne(undefined, undefined, {lazy: false, nullable: false})@Type(undefined)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/cats/datum/cat.entity.ts:63\n                            \n                        \n\n                \n                    \n                        Relations\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            userId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'ID of the Owner', example: 1})@Column()@Index()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/cats/datum/cat.entity.ts:31\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger'\n\nimport { Type } from 'class-transformer'\nimport {\n    Column,\n    CreateDateColumn,\n    Entity,\n    PrimaryGeneratedColumn,\n    UpdateDateColumn,\n    DeleteDateColumn,\n    ManyToOne,\n    PrimaryColumn,\n    Index,\n} from 'typeorm'\n\nimport { User } from '../../users/datum/user.entity' // eslint-disable-line import/no-cycle\n\n@Entity({ name: 'cats' })\nexport class Cat {\n    public static readonly NAME_LENGTH = 36\n\n    public static exclude = ['createdAt', 'updatedAt', 'deletedAt']\n\n    @ApiProperty({ description: 'Cat unique ID', example: '36635263' })\n    @PrimaryGeneratedColumn()\n    id: number\n\n    @ApiProperty({ description: 'ID of the Owner', example: 1 })\n    @Column()\n    @Index()\n    userId: number\n\n    @ApiProperty({ description: 'The name of the Cat', example: 'Kitty' })\n    @Column({ name: 'cat_name', length: Cat.NAME_LENGTH })\n    name: string\n\n    @ApiProperty({ description: 'The age of the Cat', example: 1 })\n    @Column({ name: 'cat_age' })\n    age: number\n\n    @ApiProperty({ description: 'The breed of the Cat', example: 'Maine Coon' })\n    @Column({ name: 'cat_breed' })\n    breed: string\n\n    @CreateDateColumn()\n    createdAt: any\n\n    @UpdateDateColumn()\n    updatedAt: any\n\n    @DeleteDateColumn()\n    deletedAt: any\n\n    /**\n     * Relations\n     */\n\n    @ManyToOne((type) => User, (u) => u.cats, {\n        lazy: false, // true sets relation to be lazy, lazy relations are promise of that entity\n        nullable: false, // if relation column value can be nullable or not, {LEFT JOIN  INNER JOIN}?\n    })\n    @Type((t) => User)\n    user: User\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CatRepository.html":{"url":"classes/CatRepository.html","title":"class - CatRepository","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CatRepository\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/cats/datum/cat.repository.ts\n        \n\n\n            \n                Extends\n            \n            \n                    Repository\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                clearAll\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            clearAll\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    clearAll()\n                \n            \n\n\n            \n                \n                    Defined in src/cats/datum/cat.repository.ts:10\n                \n            \n\n\n            \n                \n                    Deletes all of the Cat records form database\n\n\n                    \n                        Returns :     {}\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { EntityRepository, getManager, Repository } from 'typeorm'\n\nimport { Cat } from './cat.entity'\n\n@EntityRepository(Cat)\nexport class CatRepository extends Repository {\n    /**\n     * Deletes all of the Cat records form database\n     */\n    async clearAll() {\n        let cleared = {}\n        cleared = await getManager().query('DELETE FROM cats') // eslint-disable-line @typescript-eslint/no-unsafe-assignment\n        return cleared\n    }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/CatsController.html":{"url":"controllers/CatsController.html","title":"controller - CatsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  CatsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/cats/cats.controller.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                clear\n                            \n                            \n                                    Async\n                                createMany\n                            \n                            \n                                    Async\n                                createOne\n                            \n                            \n                                    Async\n                                deleteOne\n                            \n                            \n                                    Async\n                                getMany\n                            \n                            \n                                    Async\n                                getOne\n                            \n                            \n                                    Async\n                                replaceOne\n                            \n                            \n                                    Async\n                                updateOne\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            clear\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    clear()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'Delete all Cats'})@Post('/clear')\n                \n            \n\n            \n                \n                    Defined in src/cats/cats.controller.ts:107\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     {}\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            createMany\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createMany(r: CrudRequest, cats: CreateManyDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Override()\n                \n            \n\n            \n                \n                    Defined in src/cats/cats.controller.ts:77\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    r\n                                    \n                                            CrudRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    cats\n                                    \n                                                CreateManyDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            createOne\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createOne(r: CrudRequest, cat: CreateCatDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Override()\n                \n            \n\n            \n                \n                    Defined in src/cats/cats.controller.ts:69\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    r\n                                    \n                                            CrudRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    cat\n                                    \n                                                CreateCatDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            deleteOne\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteOne(r: CrudRequest)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Override()\n                \n            \n\n            \n                \n                    Defined in src/cats/cats.controller.ts:101\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    r\n                                    \n                                            CrudRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getMany\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getMany(r: CrudRequest)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Override()\n                \n            \n\n            \n                \n                    Defined in src/cats/cats.controller.ts:64\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    r\n                                    \n                                            CrudRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getOne\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getOne(r: CrudRequest)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Override()\n                \n            \n\n            \n                \n                    Defined in src/cats/cats.controller.ts:59\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    r\n                                    \n                                            CrudRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            replaceOne\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    replaceOne(r: CrudRequest, cat: CreateCatDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Override()\n                \n            \n\n            \n                \n                    Defined in src/cats/cats.controller.ts:93\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    r\n                                    \n                                            CrudRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    cat\n                                    \n                                                CreateCatDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            updateOne\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateOne(r: CrudRequest, cat: UpdateCatDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Override()\n                \n            \n\n            \n                \n                    Defined in src/cats/cats.controller.ts:85\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    r\n                                    \n                                            CrudRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    cat\n                                    \n                                                UpdateCatDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        /* eslint-disable no-use-before-define */\nimport { Controller, Post } from '@nestjs/common'\nimport { ApiOperation, ApiTags } from '@nestjs/swagger'\nimport {\n    CreateManyDto,\n    Crud,\n    CrudController,\n    CrudRequest,\n    Override,\n    ParsedBody,\n    ParsedRequest,\n} from '@nestjsx/crud'\nimport { CrudOptions } from '@nestjsx/crud/lib/interfaces'\n\nimport { User } from '../users/datum/user.entity'\nimport { CatsService } from './cats.service'\nimport { CreateCatDto, GetCatResponseDto, UpdateCatDto } from './datum/cat.dto'\nimport { Cat } from './datum/cat.entity'\n\n@Controller(CatsController.path)\n@ApiTags(CatsController.name)\n@Crud(CatsController.crudOptions)\nexport class CatsController implements CrudController {\n    static path = 'cats'\n\n    static crudOptions: CrudOptions = {\n        model: {\n            type: Cat,\n        },\n        dto: {\n            create: CreateCatDto,\n            replace: CreateCatDto,\n            update: UpdateCatDto,\n        },\n        serialize: {\n            create: GetCatResponseDto,\n            delete: GetCatResponseDto,\n            get: GetCatResponseDto,\n            update: GetCatResponseDto,\n        },\n        query: {\n            alwaysPaginate: true,\n            join: {\n                user: {\n                    eager: true,\n                    exclude: User.exclude,\n                },\n            },\n        },\n    }\n\n    constructor(public service: CatsService) {}\n\n    get base(): CrudController {\n        return this\n    }\n\n    @Override()\n    async getOne(@ParsedRequest() r: CrudRequest) {\n        return this.base.getOneBase(r)\n    }\n\n    @Override()\n    async getMany(@ParsedRequest() r: CrudRequest) {\n        return this.base.getManyBase(r)\n    }\n\n    @Override()\n    async createOne(\n        @ParsedRequest() r: CrudRequest,\n        @ParsedBody() cat: CreateCatDto,\n    ) {\n        return this.base.createOneBase(r, cat as Cat)\n    }\n\n    @Override()\n    async createMany(\n        @ParsedRequest() r: CrudRequest,\n        @ParsedBody() cats: CreateManyDto,\n    ) {\n        return this.base.createManyBase(r, cats)\n    }\n\n    @Override()\n    async updateOne(\n        @ParsedRequest() r: CrudRequest,\n        @ParsedBody() cat: UpdateCatDto,\n    ) {\n        return this.base.updateOneBase(r, cat as Cat)\n    }\n\n    @Override()\n    async replaceOne(\n        @ParsedRequest() r: CrudRequest,\n        @ParsedBody() cat: CreateCatDto,\n    ) {\n        return this.base.replaceOneBase(r, cat as Cat)\n    }\n\n    @Override()\n    async deleteOne(@ParsedRequest() r: CrudRequest) {\n        return this.base.deleteOneBase(r)\n    }\n\n    @ApiOperation({ summary: 'Delete all Cats' })\n    @Post('/clear')\n    async clear() {\n        return this.service.clear()\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CatsModule.html":{"url":"modules/CatsModule.html","title":"module - CatsModule","body":"\n                   \n\n\n\n\n    Modules\n    CatsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_CatsModule\n\n\n\ncluster_CatsModule_exports\n\n\n\ncluster_CatsModule_providers\n\n\n\n\nCatsService \n\nCatsService \n\n\n\nCatsModule\n\nCatsModule\n\nCatsService  -->\n\nCatsModule->CatsService \n\n\n\n\n\nCatsService\n\nCatsService\n\nCatsModule -->\n\nCatsService->CatsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/cats/cats.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            CatsService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            CatsController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            CatsService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common'\nimport { TypeOrmModule } from '@nestjs/typeorm'\n\nimport { User } from '../users/datum/user.entity'\nimport { UserRepository } from '../users/datum/user.repository'\nimport { CatsController } from './cats.controller'\nimport { CatsService } from './cats.service'\nimport { CatRepository } from './datum/cat.repository'\n\n@Module({\n    controllers: [CatsController],\n    exports: [CatsService],\n    imports: [TypeOrmModule.forFeature([CatRepository])],\n    providers: [CatsService],\n})\nexport class CatsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CatsService.html":{"url":"injectables/CatsService.html","title":"injectable - CatsService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  CatsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/cats/cats.service.ts\n        \n\n\n            \n                Extends\n            \n            \n                        TypeOrmCrudService\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                repo\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                clear\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(repo: CatRepository)\n                    \n                \n                        \n                            \n                                Defined in src/cats/cats.service.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        repo\n                                                  \n                                                        \n                                                                        CatRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            clear\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    clear()\n                \n            \n\n\n            \n                \n                    Defined in src/cats/cats.service.ts:19\n                \n            \n\n\n            \n                \n                    Deletes all of the Cat records form database\n\n\n                    \n                        Returns :     {}\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            repo\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         CatRepository\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @InjectRepository(CatRepository)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/cats/cats.service.ts:12\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common'\nimport { InjectRepository } from '@nestjs/typeorm'\nimport { TypeOrmCrudService } from '@nestjsx/crud-typeorm'\n\nimport { getManager } from 'typeorm'\n\nimport { Cat } from './datum/cat.entity'\nimport { CatRepository } from './datum/cat.repository'\n\n@Injectable()\nexport class CatsService extends TypeOrmCrudService {\n    constructor(@InjectRepository(CatRepository) public repo: CatRepository) {\n        super(repo)\n    }\n\n    /**\n     * Deletes all of the Cat records form database\n     */\n    async clear() {\n        return this.repo.clearAll()\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Comment.html":{"url":"interfaces/Comment.html","title":"interface - Comment","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Comment\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/domain.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        comment\n                                \n                                \n                                        commentedUseName\n                                \n                                \n                                        commentedUserId\n                                \n                                \n                                        commentId\n                                \n                                \n                                        timeAgo\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        comment\n                                    \n                                \n                                \n                                    \n                                        comment:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        commentedUseName\n                                    \n                                \n                                \n                                    \n                                        commentedUseName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        commentedUserId\n                                    \n                                \n                                \n                                    \n                                        commentedUserId:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        commentId\n                                    \n                                \n                                \n                                    \n                                        commentId:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        timeAgo\n                                    \n                                \n                                \n                                    \n                                        timeAgo:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { HttpStatus } from '@nestjs/common'\n\nexport type Result =\n    | GetAppLaunchData\n    | GetUserProfile\n    | GetUserPosts\n    | GetComments\n    | GetRescueList\n    | GetFollowers\n    | GetFollowing\n\nexport type APIError = Error | string | null\n\nexport interface APIResponse {\n    data: T\n    error: APIError\n    message: string | string[]\n    statusCode: HttpStatus\n\n    count?: number\n    page?: number\n    pageCount?: number\n    total?: number\n}\n\nexport interface GetAppLaunchData {\n    link: 'api:/'\n    response: APIResponse\n}\n\nexport interface GetUserProfile {\n    link: 'api:v1/user/getUserProfile?userId=25'\n    response: APIResponse\n}\n\nexport interface GetUserPosts {\n    link: 'api:v1/user/getUserPosts?pageNo=0&pageSize=25'\n    response: APIResponse\n}\n\nexport interface GetRescueList {\n    link: 'api:v1/rescue/getRescueList?pageNo=0&pageSize=10&status=pending|inProgress|completed|nearest'\n    response: APIResponse\n}\n\nexport interface GetComments {\n    link: 'api:v1/rescue/getComments?pageNo=0&pageSize=10&postId=1230'\n    response: APIResponse\n}\n\nexport interface GetFollowers {\n    link: 'api:v1/rescue/getUserFollowers?userId=1230'\n    response: APIResponse\n}\n\nexport interface GetFollowing {\n    link: 'api:v1/rescue/getUserFollowing?userId=1230'\n    response: APIResponse\n}\n\nexport interface AppLaunchAction {\n    actionId: number\n    action: string\n    isActive: boolean\n    subject?: string\n}\n\nexport interface User {\n    usesId: number\n\n    coverImage: string\n    following: boolean\n    gender: string\n    isOwnProfile: number\n    isRescuer: boolean\n    latitude: number\n    longitude: number\n    numberOfFollowers: number\n    numberOfFollowing: number\n    numberOfPosts: number\n    numberOfRescuesCompleted: number\n    numberOfRescuesCreated: number\n    numberOfRescuesInProgress: number\n    profileImage: string\n    rescuer: boolean\n    userAddress: string\n    userContacts: string\n    userEmail: string\n    userName: string\n    badge: {\n        badgeId: number\n        badgeName: string\n        badgeDescription: string\n        recuesCompletionNeeded: number\n    }\n    setting: {\n        showMyContacts: boolean\n        getNotifications: boolean\n    }\n}\n\nexport interface PostType {\n    postTypeId: number\n    postType: string\n}\n\nexport interface PostedByUser {\n    usesId: number\n    badgeName: string\n    following: boolean\n    profileImage: string\n    rescuer: boolean\n    userName: string\n}\n\nexport interface UserPost {\n    postId: number\n    commentsCount: number\n    isUserReactedToPost: boolean\n    ownPage: boolean\n    postBy: PostedByUser\n    postImage: string\n    postTime: string\n    postType: PostType\n    postVideo: string\n    reactionsCount: number\n    timeAgo: string\n\n    adCorporateLogoUrl: string | null\n    corporateDescription: string | null\n    corporateName: string | null\n}\n\nexport interface UserPosts {\n    isRecent: boolean\n    feed: UserPost[]\n}\n\nexport interface Rescues {\n    rescueId: number\n    animalImageUrl: string\n    distance: number\n    distanceAway: string\n    emergencyType: string\n    postedBy: string\n    postedMinAgo: string\n    rescueDate: Date\n    rescuedPetName: string\n    rescueLocality: string\n    rescuers: {\n        contact: number\n        name: string\n        profileId: number\n        profileImageUrl: string\n        rescues: boolean\n        showMyNumber: boolean\n    }\n    rescueStatus: string\n    viewsCont: number\n}\n\nexport interface RescueLists {\n    rescues: Rescues[]\n}\n\nexport interface Comment {\n    commentId: number\n    comment: string\n    commentedUseName: string\n    commentedUserId: number\n    timeAgo: string\n}\n\nexport interface Comments {\n    comments: Comment[]\n}\n\nexport interface Follower {\n    userId: number\n    userName: string\n    profileImage: string\n    areYouFollowing: boolean\n    showRemoveOption: boolean\n}\n\nexport interface Following extends Follower {}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Comments.html":{"url":"interfaces/Comments.html","title":"interface - Comments","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Comments\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/domain.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        comments\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        comments\n                                    \n                                \n                                \n                                    \n                                        comments:         Comment[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Comment[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { HttpStatus } from '@nestjs/common'\n\nexport type Result =\n    | GetAppLaunchData\n    | GetUserProfile\n    | GetUserPosts\n    | GetComments\n    | GetRescueList\n    | GetFollowers\n    | GetFollowing\n\nexport type APIError = Error | string | null\n\nexport interface APIResponse {\n    data: T\n    error: APIError\n    message: string | string[]\n    statusCode: HttpStatus\n\n    count?: number\n    page?: number\n    pageCount?: number\n    total?: number\n}\n\nexport interface GetAppLaunchData {\n    link: 'api:/'\n    response: APIResponse\n}\n\nexport interface GetUserProfile {\n    link: 'api:v1/user/getUserProfile?userId=25'\n    response: APIResponse\n}\n\nexport interface GetUserPosts {\n    link: 'api:v1/user/getUserPosts?pageNo=0&pageSize=25'\n    response: APIResponse\n}\n\nexport interface GetRescueList {\n    link: 'api:v1/rescue/getRescueList?pageNo=0&pageSize=10&status=pending|inProgress|completed|nearest'\n    response: APIResponse\n}\n\nexport interface GetComments {\n    link: 'api:v1/rescue/getComments?pageNo=0&pageSize=10&postId=1230'\n    response: APIResponse\n}\n\nexport interface GetFollowers {\n    link: 'api:v1/rescue/getUserFollowers?userId=1230'\n    response: APIResponse\n}\n\nexport interface GetFollowing {\n    link: 'api:v1/rescue/getUserFollowing?userId=1230'\n    response: APIResponse\n}\n\nexport interface AppLaunchAction {\n    actionId: number\n    action: string\n    isActive: boolean\n    subject?: string\n}\n\nexport interface User {\n    usesId: number\n\n    coverImage: string\n    following: boolean\n    gender: string\n    isOwnProfile: number\n    isRescuer: boolean\n    latitude: number\n    longitude: number\n    numberOfFollowers: number\n    numberOfFollowing: number\n    numberOfPosts: number\n    numberOfRescuesCompleted: number\n    numberOfRescuesCreated: number\n    numberOfRescuesInProgress: number\n    profileImage: string\n    rescuer: boolean\n    userAddress: string\n    userContacts: string\n    userEmail: string\n    userName: string\n    badge: {\n        badgeId: number\n        badgeName: string\n        badgeDescription: string\n        recuesCompletionNeeded: number\n    }\n    setting: {\n        showMyContacts: boolean\n        getNotifications: boolean\n    }\n}\n\nexport interface PostType {\n    postTypeId: number\n    postType: string\n}\n\nexport interface PostedByUser {\n    usesId: number\n    badgeName: string\n    following: boolean\n    profileImage: string\n    rescuer: boolean\n    userName: string\n}\n\nexport interface UserPost {\n    postId: number\n    commentsCount: number\n    isUserReactedToPost: boolean\n    ownPage: boolean\n    postBy: PostedByUser\n    postImage: string\n    postTime: string\n    postType: PostType\n    postVideo: string\n    reactionsCount: number\n    timeAgo: string\n\n    adCorporateLogoUrl: string | null\n    corporateDescription: string | null\n    corporateName: string | null\n}\n\nexport interface UserPosts {\n    isRecent: boolean\n    feed: UserPost[]\n}\n\nexport interface Rescues {\n    rescueId: number\n    animalImageUrl: string\n    distance: number\n    distanceAway: string\n    emergencyType: string\n    postedBy: string\n    postedMinAgo: string\n    rescueDate: Date\n    rescuedPetName: string\n    rescueLocality: string\n    rescuers: {\n        contact: number\n        name: string\n        profileId: number\n        profileImageUrl: string\n        rescues: boolean\n        showMyNumber: boolean\n    }\n    rescueStatus: string\n    viewsCont: number\n}\n\nexport interface RescueLists {\n    rescues: Rescues[]\n}\n\nexport interface Comment {\n    commentId: number\n    comment: string\n    commentedUseName: string\n    commentedUserId: number\n    timeAgo: string\n}\n\nexport interface Comments {\n    comments: Comment[]\n}\n\nexport interface Follower {\n    userId: number\n    userName: string\n    profileImage: string\n    areYouFollowing: boolean\n    showRemoveOption: boolean\n}\n\nexport interface Following extends Follower {}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateCatDto.html":{"url":"classes/CreateCatDto.html","title":"class - CreateCatDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateCatDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/cats/datum/cat.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                age\n                            \n                            \n                                    Readonly\n                                breed\n                            \n                            \n                                    Readonly\n                                name\n                            \n                            \n                                    Readonly\n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            age\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'The age of the Cat', example: 1})@IsInt()@IsPositive()@IsNotEmpty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/cats/datum/cat.dto.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            breed\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'The breed of the Cat', example: 'Maine Coon'})@IsString()@IsNotEmpty()@MinLength(2)@MaxLength(36)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/cats/datum/cat.dto.ts:39\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'The name of the Cat', example: 'Kitty'})@IsString()@IsNotEmpty()@MinLength(2)@MaxLength(36)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/cats/datum/cat.dto.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            userId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'ID of the Owner', example: 1})@IsInt()@IsNotEmpty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/cats/datum/cat.dto.ts:26\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiHideProperty, ApiProperty } from '@nestjs/swagger'\n\nimport { Exclude } from 'class-transformer'\nimport {\n    IsInt,\n    IsString,\n    MinLength,\n    IsNotEmpty,\n    IsPositive,\n    IsOptional,\n    MaxLength,\n} from 'class-validator'\n\nexport class CreateCatDto {\n    @ApiProperty({ description: 'The name of the Cat', example: 'Kitty' })\n    @IsString()\n    @IsNotEmpty()\n    @MinLength(2)\n    @MaxLength(36)\n    readonly name: string\n\n    @ApiProperty({ description: 'ID of the Owner', example: 1 })\n    @IsInt()\n    @IsNotEmpty()\n    readonly userId: number\n\n    @ApiProperty({ description: 'The age of the Cat', example: 1 })\n    @IsInt()\n    @IsPositive()\n    @IsNotEmpty()\n    readonly age: number\n\n    @ApiProperty({ description: 'The breed of the Cat', example: 'Maine Coon' })\n    @IsString()\n    @IsNotEmpty()\n    @MinLength(2)\n    @MaxLength(36)\n    readonly breed: string\n}\n\nexport class UpdateCatDto {\n    @ApiProperty({ description: 'The name of the Cat', example: 'Kitty' })\n    @IsString()\n    @IsNotEmpty()\n    @MinLength(2)\n    @MaxLength(36)\n    @IsOptional()\n    readonly name?: string\n\n    @ApiProperty({ description: 'The age of the Cat', example: 1 })\n    @IsInt()\n    @IsPositive()\n    @IsNotEmpty()\n    @IsOptional()\n    readonly age?: number\n\n    @ApiProperty({ description: 'The breed of the Cat', example: 'Maine Coon' })\n    @IsString()\n    @IsNotEmpty()\n    @MinLength(2)\n    @MaxLength(36)\n    @IsOptional()\n    readonly breed?: string\n}\n\nexport class GetCatResponseDto {\n    @ApiProperty({ type: 'number' })\n    id: string\n\n    @ApiProperty({ description: 'ID of the Owner', example: 1 })\n    userId: number\n\n    @ApiProperty({ description: 'The name of the Cat', example: 'Kitty' })\n    name: string\n\n    @ApiProperty({ description: 'The age of the Cat', example: 1 })\n    age: number\n\n    @ApiProperty({ description: 'The breed of the Cat', example: 'Maine Coon' })\n    breed: string\n\n    @ApiHideProperty()\n    @Exclude()\n    createdAt: any\n\n    @ApiHideProperty()\n    @Exclude()\n    updatedAt: any\n\n    @ApiHideProperty()\n    @Exclude()\n    deletedAt: any\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUserDto.html":{"url":"classes/CreateUserDto.html","title":"class - CreateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/datum/user.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'The name of the User', example: 'Name'})@IsString()@IsNotEmpty()@MinLength(2)@MaxLength(36)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/datum/user.dto.ts:19\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiHideProperty, ApiProperty } from '@nestjs/swagger'\n\nimport { Exclude } from 'class-transformer'\nimport {\n    IsString,\n    MinLength,\n    IsNotEmpty,\n    IsOptional,\n    MaxLength,\n} from 'class-validator'\n\nexport class CreateUserDto {\n    @ApiProperty({ description: 'The name of the User', example: 'Name' })\n    @IsString()\n    @IsNotEmpty()\n    @MinLength(2)\n    @MaxLength(36)\n    readonly name: string\n}\n\nexport class UpdateUserDto {\n    @ApiProperty({ description: 'The name of the User', example: 'Kitty' })\n    @IsString()\n    @IsNotEmpty()\n    @MinLength(2)\n    @MaxLength(36)\n    @IsOptional()\n    readonly name?: string\n}\n\nexport class GetUserResponseDto {\n    @ApiProperty({ type: 'number' })\n    id: string\n\n    @ApiProperty({ description: 'The name of the User', example: 'Name' })\n    name: string\n\n    @ApiHideProperty()\n    @Exclude()\n    createdAt: any\n\n    @ApiHideProperty()\n    @Exclude()\n    updatedAt: any\n\n    @ApiHideProperty()\n    @Exclude()\n    deletedAt: any\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CronModule.html":{"url":"modules/CronModule.html","title":"module - CronModule","body":"\n                   \n\n\n\n\n    Modules\n    CronModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_CronModule\n\n\n\ncluster_CronModule_providers\n\n\n\n\nCronService\n\nCronService\n\n\n\nCronModule\n\nCronModule\n\nCronModule -->\n\nCronService->CronModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/cron/cron.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            CronService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common'\n\nimport { CronService } from './cron.service'\n\n@Module({\n    providers: [CronService],\n})\nexport class CronModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CronService.html":{"url":"injectables/CronService.html","title":"injectable - CronService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  CronService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/cron/cron.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                count\n                            \n                            \n                                    Private\n                                    Readonly\n                                logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                handleCron\n                            \n                            \n                                handleInterval\n                            \n                            \n                                handleTimeout\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            handleCron\n                        \n                        \n                    \n                \n            \n            \n                \nhandleCron()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Cron('60 * * * * *')\n                \n            \n\n            \n                \n                    Defined in src/cron/cron.service.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            handleInterval\n                        \n                        \n                    \n                \n            \n            \n                \nhandleInterval()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Interval(100000)\n                \n            \n\n            \n                \n                    Defined in src/cron/cron.service.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            handleTimeout\n                        \n                        \n                    \n                \n            \n            \n                \nhandleTimeout()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Timeout(50000)\n                \n            \n\n            \n                \n                    Defined in src/cron/cron.service.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            count\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in src/cron/cron.service.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            logger\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Logger(CronService.name)\n                        \n                    \n                        \n                            \n                                    Defined in src/cron/cron.service.ts:8\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable, Logger } from '@nestjs/common'\nimport { Cron, Interval, Timeout } from '@nestjs/schedule'\n\n@Injectable()\nexport class CronService {\n    public static count = 0\n\n    private readonly logger = new Logger(CronService.name)\n\n    @Cron('60 * * * * *')\n    handleCron() {\n        CronService.count += 1\n        this.logger.debug(\n            `Called when the second is 60, current count is ${CronService.count}`,\n        )\n    }\n\n    @Interval(100000)\n    handleInterval() {\n        this.logger.debug('Called every 100 seconds')\n    }\n\n    @Timeout(50000)\n    handleTimeout() {\n        this.logger.debug('Called once after 50 seconds')\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CrudController.html":{"url":"classes/CrudController.html","title":"class - CrudController","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CrudController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/base/crud/crud.controller.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                delete\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findById\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Protected\n                        constructor(crudService: ICrudService)\n                    \n                \n                        \n                            \n                                Defined in src/base/crud/crud.controller.ts:24\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        crudService\n                                                  \n                                                        \n                                                                        ICrudService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            create\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    create(entity: DeepPartial, ...options: any[])\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'Create new record'})@ApiResponse({status: undefined, description: 'The record has been successfully created.'})@ApiResponse({status: undefined, description: 'Invalid input, The response body may contain clues as to what went wrong'})@HttpCode(HttpStatus.CREATED)@Post()\n                \n            \n\n            \n                \n                    Defined in src/base/crud/crud.controller.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entity\n                                    \n                                            DeepPartial\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                            any[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            delete\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(id: string, ...options: any[])\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'Delete record'})@ApiResponse({status: undefined, description: 'The record has been successfully deleted'})@ApiResponse({status: undefined, description: 'Record not found'})@HttpCode(HttpStatus.ACCEPTED)@Delete(':id')\n                \n            \n\n            \n                \n                    Defined in src/base/crud/crud.controller.ts:102\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                            any[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findAll\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll(filter?: PaginationParams)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'find all'})@ApiResponse({status: undefined, description: 'Found records'})@Get()\n                \n            \n\n            \n                \n                    Defined in src/base/crud/crud.controller.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                                PaginationParams\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findById\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findById(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'Find by id'})@ApiResponse({status: undefined, description: 'Found one record'})@ApiResponse({status: undefined, description: 'Record not found'})@Get(':id')\n                \n            \n\n            \n                \n                    Defined in src/base/crud/crud.controller.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            update\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: string, entity: QueryDeepPartialEntity, ...options: any[])\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'Update an existing record'})@ApiResponse({status: undefined, description: 'The record has been successfully edited.'})@ApiResponse({status: undefined, description: 'Record not found'})@ApiResponse({status: undefined, description: 'Invalid input, The response body may contain clues as to what went wrong'})@HttpCode(HttpStatus.ACCEPTED)@Put(':id')\n                \n            \n\n            \n                \n                    Defined in src/base/crud/crud.controller.ts:83\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    entity\n                                    \n                                            QueryDeepPartialEntity\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                            any[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n    Get,\n    Post,\n    Put,\n    Delete,\n    Body,\n    Param,\n    HttpStatus,\n    HttpCode,\n} from '@nestjs/common'\nimport { ApiOperation, ApiResponse, ApiBearerAuth } from '@nestjs/swagger'\n\nimport { DeepPartial } from 'typeorm'\nimport { QueryDeepPartialEntity } from 'typeorm/query-builder/QueryPartialEntity'\n\nimport { Base } from '../entities/base'\nimport { ICrudService } from './icrud.service'\nimport { IPagination } from './pagination'\nimport { PaginationParams } from './pagination-params'\n\n@ApiResponse({ status: HttpStatus.UNAUTHORIZED, description: 'Unauthorized' })\n@ApiResponse({ status: HttpStatus.FORBIDDEN, description: 'Forbidden' })\n@ApiBearerAuth()\nexport abstract class CrudController {\n    protected constructor(private readonly crudService: ICrudService) {}\n\n    @ApiOperation({ summary: 'find all' })\n    @ApiResponse({\n        status: HttpStatus.OK,\n        description: 'Found records' /* type: IPagination */,\n    })\n    @Get()\n    async findAll(filter?: PaginationParams): Promise> {\n        return this.crudService.findAll(filter)\n    }\n\n    @ApiOperation({ summary: 'Find by id' })\n    @ApiResponse({\n        status: HttpStatus.OK,\n        description: 'Found one record' /* , type: T */,\n    })\n    @ApiResponse({\n        status: HttpStatus.NOT_FOUND,\n        description: 'Record not found',\n    })\n    @Get(':id')\n    async findById(@Param('id') id: string): Promise {\n        return this.crudService.findOne(id)\n    }\n\n    @ApiOperation({ summary: 'Create new record' })\n    @ApiResponse({\n        status: HttpStatus.CREATED,\n        description: 'The record has been successfully created.' /* , type: T */,\n    })\n    @ApiResponse({\n        status: HttpStatus.BAD_REQUEST,\n        description:\n            'Invalid input, The response body may contain clues as to what went wrong',\n    })\n    @HttpCode(HttpStatus.CREATED)\n    @Post()\n    async create(@Body() entity: DeepPartial, ...options: any[]): Promise {\n        return this.crudService.create(entity)\n    }\n\n    @ApiOperation({ summary: 'Update an existing record' })\n    @ApiResponse({\n        status: HttpStatus.CREATED,\n        description: 'The record has been successfully edited.',\n    })\n    @ApiResponse({\n        status: HttpStatus.NOT_FOUND,\n        description: 'Record not found',\n    })\n    @ApiResponse({\n        status: HttpStatus.BAD_REQUEST,\n        description:\n            'Invalid input, The response body may contain clues as to what went wrong',\n    })\n    @HttpCode(HttpStatus.ACCEPTED)\n    @Put(':id')\n    async update(\n        @Param('id') id: string,\n        @Body() entity: QueryDeepPartialEntity,\n        ...options: any[]\n    ): Promise {\n        return this.crudService.update(id, entity) // FIXME: https://github.com/typeorm/typeorm/issues/1544\n    }\n\n    @ApiOperation({ summary: 'Delete record' })\n    @ApiResponse({\n        status: HttpStatus.NO_CONTENT,\n        description: 'The record has been successfully deleted',\n    })\n    @ApiResponse({\n        status: HttpStatus.NOT_FOUND,\n        description: 'Record not found',\n    })\n    @HttpCode(HttpStatus.ACCEPTED)\n    @Delete(':id')\n    async delete(@Param('id') id: string, ...options: any[]): Promise {\n        return this.crudService.delete(id)\n    }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CrudService.html":{"url":"classes/CrudService.html","title":"class - CrudService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CrudService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/base/crud/crud.service.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            ICrudService\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                saltRounds\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                count\n                            \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                delete\n                            \n                            \n                                entityNotFound\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                findOneOrFail\n                            \n                            \n                                    Async\n                                getPasswordHash\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Protected\n                        constructor(repository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/base/crud/crud.service.ts:24\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        repository\n                                                  \n                                                        \n                                                                    Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            saltRounds\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/base/crud/crud.service.ts:24\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            count\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    count(filter?: FindManyOptions)\n                \n            \n\n\n            \n                \n                    Defined in src/base/crud/crud.service.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                            FindManyOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            create\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    create(entity: DeepPartial, ...options: any[])\n                \n            \n\n\n            \n                \n                    Defined in src/base/crud/crud.service.ts:66\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entity\n                                    \n                                            DeepPartial\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                            any[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            delete\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(criteria: string | number | FindConditions, ...options: any[])\n                \n            \n\n\n            \n                \n                    Defined in src/base/crud/crud.service.ts:104\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    criteria\n                                    \n                                            string | number | FindConditions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                            any[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            entityNotFound\n                        \n                        \n                    \n                \n            \n            \n                \nentityNotFound()\n                \n            \n\n\n            \n                \n                    Defined in src/base/crud/crud.service.ts:118\n                \n            \n\n\n            \n                \n                    e.g., findOneById(id).pipe(map(entity => entity.id), entityNotFound())\n\n\n                    \n                        Returns :     (stream$: any) => any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findAll\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll(filter?: FindManyOptions)\n                \n            \n\n\n            \n                \n                    Defined in src/base/crud/crud.service.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                            FindManyOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findOne\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(id: string | number | FindOneOptions | FindConditions, options?: FindOneOptions)\n                \n            \n\n\n            \n                \n                    Defined in src/base/crud/crud.service.ts:54\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                            string | number | FindOneOptions | FindConditions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                            FindOneOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findOneOrFail\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findOneOrFail(id: string | number | FindOneOptions | FindConditions, options?: FindOneOptions)\n                \n            \n\n\n            \n                \n                    Defined in src/base/crud/crud.service.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                            string | number | FindOneOptions | FindConditions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                            FindOneOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getPasswordHash\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getPasswordHash(password: string)\n                \n            \n\n\n            \n                \n                    Defined in src/base/crud/crud.service.ts:77\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            update\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: string | number | FindConditions, partialEntity: QueryDeepPartialEntity, ...options: any[])\n                \n            \n\n\n            \n                \n                    Defined in src/base/crud/crud.service.ts:81\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                            string | number | FindConditions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    partialEntity\n                                    \n                                            QueryDeepPartialEntity\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                            any[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { BadRequestException, NotFoundException } from '@nestjs/common'\n\nimport * as bcrypt from 'bcryptjs'\nimport { of, throwError } from 'rxjs'\nimport { mergeMap } from 'rxjs/operators'\nimport {\n    DeepPartial,\n    DeleteResult,\n    FindConditions,\n    FindManyOptions,\n    FindOneOptions,\n    Repository,\n    UpdateResult,\n} from 'typeorm'\nimport { QueryDeepPartialEntity } from 'typeorm/query-builder/QueryPartialEntity'\n\nimport { Base } from '../entities/base'\nimport { ICrudService } from './icrud.service'\nimport { IPagination } from './pagination'\nimport { ITryRequest } from './try-request'\n\nexport abstract class CrudService implements ICrudService {\n    saltRounds: number\n\n    protected constructor(protected readonly repository: Repository) {\n        this.saltRounds = 12\n    }\n\n    async count(filter?: FindManyOptions): Promise {\n        return this.repository.count(filter)\n    }\n\n    async findAll(filter?: FindManyOptions): Promise> {\n        const total = await this.repository.count(filter)\n        const items = await this.repository.find(filter)\n\n        return { items, total }\n    }\n\n    async findOneOrFail(\n        id: string | number | FindOneOptions | FindConditions,\n        options?: FindOneOptions,\n    ): Promise {\n        try {\n            const record = await this.repository.findOneOrFail(id as any, options)\n\n            return { success: true, record }\n        } catch (error) {\n            return { success: false, error } // eslint-disable-line @typescript-eslint/no-unsafe-assignment\n        }\n    }\n\n    async findOne(\n        id: string | number | FindOneOptions | FindConditions,\n        options?: FindOneOptions,\n    ): Promise {\n        const record = await this.repository.findOne(id as any, options)\n\n        if (!record)\n            throw new NotFoundException(`The requested record was not found`)\n\n        return record\n    }\n\n    async create(entity: DeepPartial, ...options: any[]): Promise {\n        const obj = this.repository.create(entity)\n\n        // READMEWHY: https://github.com/Microsoft/TypeScript/issues/21592\n        try {\n            return await this.repository.save(obj as any) // eslint-disable-line @typescript-eslint/no-unsafe-return\n        } catch (err /*: WriteError */) {\n            throw new BadRequestException(err)\n        }\n    }\n\n    async getPasswordHash(password: string): Promise {\n        return bcrypt.hash(password, this.saltRounds)\n    }\n\n    async update(\n        id: string | number | FindConditions,\n        partialEntity: QueryDeepPartialEntity,\n        ...options: any[]\n    ): Promise {\n        try {\n            // method getPasswordHash is copied from AuthService\n            // try if can import somehow the service and use its method\n\n            // @ts-ignore\n            if (partialEntity.hash) {\n                // @ts-ignore\n                const hashPassword = await this.getPasswordHash(partialEntity.hash)\n                // @ts-ignore\n                partialEntity.hash = hashPassword // eslint-disable-line no-param-reassign\n            }\n\n            return await this.repository.update(id, partialEntity)\n        } catch (err /*: WriteError */) {\n            throw new BadRequestException(err)\n        }\n    }\n\n    async delete(\n        criteria: string | number | FindConditions,\n        ...options: any[]\n    ): Promise {\n        try {\n            return await this.repository.delete(criteria)\n        } catch (err) {\n            throw new NotFoundException(`The record was not found`, err)\n        }\n    }\n\n    /**\n     * e.g., findOneById(id).pipe(map(entity => entity.id), entityNotFound())\n     */\n    entityNotFound() {\n        return (stream$) =>\n            stream$.pipe(\n                mergeMap((signal) => {\n                    if (!signal) {\n                        return throwError(\n                            new NotFoundException(\n                                `The requested record was not found`,\n                            ),\n                        )\n                    }\n\n                    return of(signal)\n                }),\n            )\n    }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DBHelper.html":{"url":"injectables/DBHelper.html","title":"injectable - DBHelper","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  DBHelper\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/base/DBHelper.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                findBy\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                find\n                            \n                            \n                                    Async\n                                sync\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(repository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/base/DBHelper.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        repository\n                                                  \n                                                        \n                                                                    Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            find\n                        \n                        \n                    \n                \n            \n            \n                \nfind(find: string)\n                \n            \n\n\n            \n                \n                    Defined in src/base/DBHelper.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    find\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     this\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            sync\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    sync(relation: string, new_values: any[])\n                \n            \n\n\n            \n                \n                    Defined in src/base/DBHelper.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    relation\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    new_values\n                                    \n                                            any[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            findBy\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/base/DBHelper.ts:9\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common'\n\nimport _ from 'lodash'\nimport { Repository } from 'typeorm'\n\n@Injectable()\nexport class DBHelper {\n    findBy: string\n\n    constructor(private repository: Repository) {}\n\n    find(find: string) {\n        this.findBy = find\n        return this\n    }\n\n    async sync(relation: string, new_values: any[]) {\n        const row: T = await this.repository.findOne(this.findBy, {\n            relations: [relation],\n        })\n        const values: any[] = row[relation]\n\n        const toRemove = _.difference(values, new_values)\n        const toAdd = _.difference(new_values, values)\n\n        row[relation] = values\n            .concat(toAdd)\n            .filter((value) => toRemove.indexOf(value) === -1)\n\n        return this.repository.save(row)\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ExcludeNullUndefinedInterceptor.html":{"url":"injectables/ExcludeNullUndefinedInterceptor.html","title":"injectable - ExcludeNullUndefinedInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ExcludeNullUndefinedInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/infra/interceptors/null-undefined-override.ts\n        \n\n            \n                Description\n            \n            \n                Interceptors to transform each occurrence of a null value to an empty string ''\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            intercept\n                        \n                        \n                    \n                \n            \n            \n                \nintercept(context: ExecutionContext, next: CallHandler)\n                \n            \n\n\n            \n                \n                    Defined in src/infra/interceptors/null-undefined-override.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                            CallHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n    Injectable,\n    NestInterceptor,\n    ExecutionContext,\n    CallHandler,\n} from '@nestjs/common'\nimport { Observable } from 'rxjs'\nimport { map } from 'rxjs/operators'\n\n/**\n * Interceptors to transform each occurrence of a null value to an empty string ''\n */\n@Injectable()\nexport class ExcludeNullUndefinedInterceptor implements NestInterceptor {\n    intercept(context: ExecutionContext, next: CallHandler): Observable {\n        return next.handle().pipe(\n            map(\n                // eslint-disable-next-line @typescript-eslint/no-unsafe-return\n                (value) => value ?? '',\n            ),\n        )\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Follower.html":{"url":"interfaces/Follower.html","title":"interface - Follower","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Follower\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/domain.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        areYouFollowing\n                                \n                                \n                                        profileImage\n                                \n                                \n                                        showRemoveOption\n                                \n                                \n                                        userId\n                                \n                                \n                                        userName\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        areYouFollowing\n                                    \n                                \n                                \n                                    \n                                        areYouFollowing:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        profileImage\n                                    \n                                \n                                \n                                    \n                                        profileImage:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        showRemoveOption\n                                    \n                                \n                                \n                                    \n                                        showRemoveOption:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        userId\n                                    \n                                \n                                \n                                    \n                                        userId:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        userName\n                                    \n                                \n                                \n                                    \n                                        userName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { HttpStatus } from '@nestjs/common'\n\nexport type Result =\n    | GetAppLaunchData\n    | GetUserProfile\n    | GetUserPosts\n    | GetComments\n    | GetRescueList\n    | GetFollowers\n    | GetFollowing\n\nexport type APIError = Error | string | null\n\nexport interface APIResponse {\n    data: T\n    error: APIError\n    message: string | string[]\n    statusCode: HttpStatus\n\n    count?: number\n    page?: number\n    pageCount?: number\n    total?: number\n}\n\nexport interface GetAppLaunchData {\n    link: 'api:/'\n    response: APIResponse\n}\n\nexport interface GetUserProfile {\n    link: 'api:v1/user/getUserProfile?userId=25'\n    response: APIResponse\n}\n\nexport interface GetUserPosts {\n    link: 'api:v1/user/getUserPosts?pageNo=0&pageSize=25'\n    response: APIResponse\n}\n\nexport interface GetRescueList {\n    link: 'api:v1/rescue/getRescueList?pageNo=0&pageSize=10&status=pending|inProgress|completed|nearest'\n    response: APIResponse\n}\n\nexport interface GetComments {\n    link: 'api:v1/rescue/getComments?pageNo=0&pageSize=10&postId=1230'\n    response: APIResponse\n}\n\nexport interface GetFollowers {\n    link: 'api:v1/rescue/getUserFollowers?userId=1230'\n    response: APIResponse\n}\n\nexport interface GetFollowing {\n    link: 'api:v1/rescue/getUserFollowing?userId=1230'\n    response: APIResponse\n}\n\nexport interface AppLaunchAction {\n    actionId: number\n    action: string\n    isActive: boolean\n    subject?: string\n}\n\nexport interface User {\n    usesId: number\n\n    coverImage: string\n    following: boolean\n    gender: string\n    isOwnProfile: number\n    isRescuer: boolean\n    latitude: number\n    longitude: number\n    numberOfFollowers: number\n    numberOfFollowing: number\n    numberOfPosts: number\n    numberOfRescuesCompleted: number\n    numberOfRescuesCreated: number\n    numberOfRescuesInProgress: number\n    profileImage: string\n    rescuer: boolean\n    userAddress: string\n    userContacts: string\n    userEmail: string\n    userName: string\n    badge: {\n        badgeId: number\n        badgeName: string\n        badgeDescription: string\n        recuesCompletionNeeded: number\n    }\n    setting: {\n        showMyContacts: boolean\n        getNotifications: boolean\n    }\n}\n\nexport interface PostType {\n    postTypeId: number\n    postType: string\n}\n\nexport interface PostedByUser {\n    usesId: number\n    badgeName: string\n    following: boolean\n    profileImage: string\n    rescuer: boolean\n    userName: string\n}\n\nexport interface UserPost {\n    postId: number\n    commentsCount: number\n    isUserReactedToPost: boolean\n    ownPage: boolean\n    postBy: PostedByUser\n    postImage: string\n    postTime: string\n    postType: PostType\n    postVideo: string\n    reactionsCount: number\n    timeAgo: string\n\n    adCorporateLogoUrl: string | null\n    corporateDescription: string | null\n    corporateName: string | null\n}\n\nexport interface UserPosts {\n    isRecent: boolean\n    feed: UserPost[]\n}\n\nexport interface Rescues {\n    rescueId: number\n    animalImageUrl: string\n    distance: number\n    distanceAway: string\n    emergencyType: string\n    postedBy: string\n    postedMinAgo: string\n    rescueDate: Date\n    rescuedPetName: string\n    rescueLocality: string\n    rescuers: {\n        contact: number\n        name: string\n        profileId: number\n        profileImageUrl: string\n        rescues: boolean\n        showMyNumber: boolean\n    }\n    rescueStatus: string\n    viewsCont: number\n}\n\nexport interface RescueLists {\n    rescues: Rescues[]\n}\n\nexport interface Comment {\n    commentId: number\n    comment: string\n    commentedUseName: string\n    commentedUserId: number\n    timeAgo: string\n}\n\nexport interface Comments {\n    comments: Comment[]\n}\n\nexport interface Follower {\n    userId: number\n    userName: string\n    profileImage: string\n    areYouFollowing: boolean\n    showRemoveOption: boolean\n}\n\nexport interface Following extends Follower {}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Following.html":{"url":"interfaces/Following.html","title":"interface - Following","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Following\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/domain.ts\n        \n\n\n            \n                Extends\n            \n            \n                        Follower\n            \n\n\n\n\n    \n\n\n    \n        import { HttpStatus } from '@nestjs/common'\n\nexport type Result =\n    | GetAppLaunchData\n    | GetUserProfile\n    | GetUserPosts\n    | GetComments\n    | GetRescueList\n    | GetFollowers\n    | GetFollowing\n\nexport type APIError = Error | string | null\n\nexport interface APIResponse {\n    data: T\n    error: APIError\n    message: string | string[]\n    statusCode: HttpStatus\n\n    count?: number\n    page?: number\n    pageCount?: number\n    total?: number\n}\n\nexport interface GetAppLaunchData {\n    link: 'api:/'\n    response: APIResponse\n}\n\nexport interface GetUserProfile {\n    link: 'api:v1/user/getUserProfile?userId=25'\n    response: APIResponse\n}\n\nexport interface GetUserPosts {\n    link: 'api:v1/user/getUserPosts?pageNo=0&pageSize=25'\n    response: APIResponse\n}\n\nexport interface GetRescueList {\n    link: 'api:v1/rescue/getRescueList?pageNo=0&pageSize=10&status=pending|inProgress|completed|nearest'\n    response: APIResponse\n}\n\nexport interface GetComments {\n    link: 'api:v1/rescue/getComments?pageNo=0&pageSize=10&postId=1230'\n    response: APIResponse\n}\n\nexport interface GetFollowers {\n    link: 'api:v1/rescue/getUserFollowers?userId=1230'\n    response: APIResponse\n}\n\nexport interface GetFollowing {\n    link: 'api:v1/rescue/getUserFollowing?userId=1230'\n    response: APIResponse\n}\n\nexport interface AppLaunchAction {\n    actionId: number\n    action: string\n    isActive: boolean\n    subject?: string\n}\n\nexport interface User {\n    usesId: number\n\n    coverImage: string\n    following: boolean\n    gender: string\n    isOwnProfile: number\n    isRescuer: boolean\n    latitude: number\n    longitude: number\n    numberOfFollowers: number\n    numberOfFollowing: number\n    numberOfPosts: number\n    numberOfRescuesCompleted: number\n    numberOfRescuesCreated: number\n    numberOfRescuesInProgress: number\n    profileImage: string\n    rescuer: boolean\n    userAddress: string\n    userContacts: string\n    userEmail: string\n    userName: string\n    badge: {\n        badgeId: number\n        badgeName: string\n        badgeDescription: string\n        recuesCompletionNeeded: number\n    }\n    setting: {\n        showMyContacts: boolean\n        getNotifications: boolean\n    }\n}\n\nexport interface PostType {\n    postTypeId: number\n    postType: string\n}\n\nexport interface PostedByUser {\n    usesId: number\n    badgeName: string\n    following: boolean\n    profileImage: string\n    rescuer: boolean\n    userName: string\n}\n\nexport interface UserPost {\n    postId: number\n    commentsCount: number\n    isUserReactedToPost: boolean\n    ownPage: boolean\n    postBy: PostedByUser\n    postImage: string\n    postTime: string\n    postType: PostType\n    postVideo: string\n    reactionsCount: number\n    timeAgo: string\n\n    adCorporateLogoUrl: string | null\n    corporateDescription: string | null\n    corporateName: string | null\n}\n\nexport interface UserPosts {\n    isRecent: boolean\n    feed: UserPost[]\n}\n\nexport interface Rescues {\n    rescueId: number\n    animalImageUrl: string\n    distance: number\n    distanceAway: string\n    emergencyType: string\n    postedBy: string\n    postedMinAgo: string\n    rescueDate: Date\n    rescuedPetName: string\n    rescueLocality: string\n    rescuers: {\n        contact: number\n        name: string\n        profileId: number\n        profileImageUrl: string\n        rescues: boolean\n        showMyNumber: boolean\n    }\n    rescueStatus: string\n    viewsCont: number\n}\n\nexport interface RescueLists {\n    rescues: Rescues[]\n}\n\nexport interface Comment {\n    commentId: number\n    comment: string\n    commentedUseName: string\n    commentedUserId: number\n    timeAgo: string\n}\n\nexport interface Comments {\n    comments: Comment[]\n}\n\nexport interface Follower {\n    userId: number\n    userName: string\n    profileImage: string\n    areYouFollowing: boolean\n    showRemoveOption: boolean\n}\n\nexport interface Following extends Follower {}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/GetAppLaunchData.html":{"url":"interfaces/GetAppLaunchData.html","title":"interface - GetAppLaunchData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  GetAppLaunchData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/domain.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        link\n                                \n                                \n                                        response\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        link\n                                    \n                                \n                                \n                                    \n                                        link:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        response\n                                    \n                                \n                                \n                                    \n                                        response:     APIResponse\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     APIResponse\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { HttpStatus } from '@nestjs/common'\n\nexport type Result =\n    | GetAppLaunchData\n    | GetUserProfile\n    | GetUserPosts\n    | GetComments\n    | GetRescueList\n    | GetFollowers\n    | GetFollowing\n\nexport type APIError = Error | string | null\n\nexport interface APIResponse {\n    data: T\n    error: APIError\n    message: string | string[]\n    statusCode: HttpStatus\n\n    count?: number\n    page?: number\n    pageCount?: number\n    total?: number\n}\n\nexport interface GetAppLaunchData {\n    link: 'api:/'\n    response: APIResponse\n}\n\nexport interface GetUserProfile {\n    link: 'api:v1/user/getUserProfile?userId=25'\n    response: APIResponse\n}\n\nexport interface GetUserPosts {\n    link: 'api:v1/user/getUserPosts?pageNo=0&pageSize=25'\n    response: APIResponse\n}\n\nexport interface GetRescueList {\n    link: 'api:v1/rescue/getRescueList?pageNo=0&pageSize=10&status=pending|inProgress|completed|nearest'\n    response: APIResponse\n}\n\nexport interface GetComments {\n    link: 'api:v1/rescue/getComments?pageNo=0&pageSize=10&postId=1230'\n    response: APIResponse\n}\n\nexport interface GetFollowers {\n    link: 'api:v1/rescue/getUserFollowers?userId=1230'\n    response: APIResponse\n}\n\nexport interface GetFollowing {\n    link: 'api:v1/rescue/getUserFollowing?userId=1230'\n    response: APIResponse\n}\n\nexport interface AppLaunchAction {\n    actionId: number\n    action: string\n    isActive: boolean\n    subject?: string\n}\n\nexport interface User {\n    usesId: number\n\n    coverImage: string\n    following: boolean\n    gender: string\n    isOwnProfile: number\n    isRescuer: boolean\n    latitude: number\n    longitude: number\n    numberOfFollowers: number\n    numberOfFollowing: number\n    numberOfPosts: number\n    numberOfRescuesCompleted: number\n    numberOfRescuesCreated: number\n    numberOfRescuesInProgress: number\n    profileImage: string\n    rescuer: boolean\n    userAddress: string\n    userContacts: string\n    userEmail: string\n    userName: string\n    badge: {\n        badgeId: number\n        badgeName: string\n        badgeDescription: string\n        recuesCompletionNeeded: number\n    }\n    setting: {\n        showMyContacts: boolean\n        getNotifications: boolean\n    }\n}\n\nexport interface PostType {\n    postTypeId: number\n    postType: string\n}\n\nexport interface PostedByUser {\n    usesId: number\n    badgeName: string\n    following: boolean\n    profileImage: string\n    rescuer: boolean\n    userName: string\n}\n\nexport interface UserPost {\n    postId: number\n    commentsCount: number\n    isUserReactedToPost: boolean\n    ownPage: boolean\n    postBy: PostedByUser\n    postImage: string\n    postTime: string\n    postType: PostType\n    postVideo: string\n    reactionsCount: number\n    timeAgo: string\n\n    adCorporateLogoUrl: string | null\n    corporateDescription: string | null\n    corporateName: string | null\n}\n\nexport interface UserPosts {\n    isRecent: boolean\n    feed: UserPost[]\n}\n\nexport interface Rescues {\n    rescueId: number\n    animalImageUrl: string\n    distance: number\n    distanceAway: string\n    emergencyType: string\n    postedBy: string\n    postedMinAgo: string\n    rescueDate: Date\n    rescuedPetName: string\n    rescueLocality: string\n    rescuers: {\n        contact: number\n        name: string\n        profileId: number\n        profileImageUrl: string\n        rescues: boolean\n        showMyNumber: boolean\n    }\n    rescueStatus: string\n    viewsCont: number\n}\n\nexport interface RescueLists {\n    rescues: Rescues[]\n}\n\nexport interface Comment {\n    commentId: number\n    comment: string\n    commentedUseName: string\n    commentedUserId: number\n    timeAgo: string\n}\n\nexport interface Comments {\n    comments: Comment[]\n}\n\nexport interface Follower {\n    userId: number\n    userName: string\n    profileImage: string\n    areYouFollowing: boolean\n    showRemoveOption: boolean\n}\n\nexport interface Following extends Follower {}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetCatResponseDto.html":{"url":"classes/GetCatResponseDto.html","title":"class - GetCatResponseDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetCatResponseDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/cats/datum/cat.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                age\n                            \n                            \n                                breed\n                            \n                            \n                                createdAt\n                            \n                            \n                                deletedAt\n                            \n                            \n                                id\n                            \n                            \n                                name\n                            \n                            \n                                updatedAt\n                            \n                            \n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            age\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'The age of the Cat', example: 1})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/cats/datum/cat.dto.ts:78\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            breed\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'The breed of the Cat', example: 'Maine Coon'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/cats/datum/cat.dto.ts:81\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiHideProperty()@Exclude()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/cats/datum/cat.dto.ts:85\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            deletedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiHideProperty()@Exclude()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/cats/datum/cat.dto.ts:93\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({type: 'number'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/cats/datum/cat.dto.ts:69\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'The name of the Cat', example: 'Kitty'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/cats/datum/cat.dto.ts:75\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiHideProperty()@Exclude()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/cats/datum/cat.dto.ts:89\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            userId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'ID of the Owner', example: 1})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/cats/datum/cat.dto.ts:72\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiHideProperty, ApiProperty } from '@nestjs/swagger'\n\nimport { Exclude } from 'class-transformer'\nimport {\n    IsInt,\n    IsString,\n    MinLength,\n    IsNotEmpty,\n    IsPositive,\n    IsOptional,\n    MaxLength,\n} from 'class-validator'\n\nexport class CreateCatDto {\n    @ApiProperty({ description: 'The name of the Cat', example: 'Kitty' })\n    @IsString()\n    @IsNotEmpty()\n    @MinLength(2)\n    @MaxLength(36)\n    readonly name: string\n\n    @ApiProperty({ description: 'ID of the Owner', example: 1 })\n    @IsInt()\n    @IsNotEmpty()\n    readonly userId: number\n\n    @ApiProperty({ description: 'The age of the Cat', example: 1 })\n    @IsInt()\n    @IsPositive()\n    @IsNotEmpty()\n    readonly age: number\n\n    @ApiProperty({ description: 'The breed of the Cat', example: 'Maine Coon' })\n    @IsString()\n    @IsNotEmpty()\n    @MinLength(2)\n    @MaxLength(36)\n    readonly breed: string\n}\n\nexport class UpdateCatDto {\n    @ApiProperty({ description: 'The name of the Cat', example: 'Kitty' })\n    @IsString()\n    @IsNotEmpty()\n    @MinLength(2)\n    @MaxLength(36)\n    @IsOptional()\n    readonly name?: string\n\n    @ApiProperty({ description: 'The age of the Cat', example: 1 })\n    @IsInt()\n    @IsPositive()\n    @IsNotEmpty()\n    @IsOptional()\n    readonly age?: number\n\n    @ApiProperty({ description: 'The breed of the Cat', example: 'Maine Coon' })\n    @IsString()\n    @IsNotEmpty()\n    @MinLength(2)\n    @MaxLength(36)\n    @IsOptional()\n    readonly breed?: string\n}\n\nexport class GetCatResponseDto {\n    @ApiProperty({ type: 'number' })\n    id: string\n\n    @ApiProperty({ description: 'ID of the Owner', example: 1 })\n    userId: number\n\n    @ApiProperty({ description: 'The name of the Cat', example: 'Kitty' })\n    name: string\n\n    @ApiProperty({ description: 'The age of the Cat', example: 1 })\n    age: number\n\n    @ApiProperty({ description: 'The breed of the Cat', example: 'Maine Coon' })\n    breed: string\n\n    @ApiHideProperty()\n    @Exclude()\n    createdAt: any\n\n    @ApiHideProperty()\n    @Exclude()\n    updatedAt: any\n\n    @ApiHideProperty()\n    @Exclude()\n    deletedAt: any\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/GetComments.html":{"url":"interfaces/GetComments.html","title":"interface - GetComments","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  GetComments\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/domain.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        link\n                                \n                                \n                                        response\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        link\n                                    \n                                \n                                \n                                    \n                                        link:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        response\n                                    \n                                \n                                \n                                    \n                                        response:     APIResponse\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     APIResponse\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { HttpStatus } from '@nestjs/common'\n\nexport type Result =\n    | GetAppLaunchData\n    | GetUserProfile\n    | GetUserPosts\n    | GetComments\n    | GetRescueList\n    | GetFollowers\n    | GetFollowing\n\nexport type APIError = Error | string | null\n\nexport interface APIResponse {\n    data: T\n    error: APIError\n    message: string | string[]\n    statusCode: HttpStatus\n\n    count?: number\n    page?: number\n    pageCount?: number\n    total?: number\n}\n\nexport interface GetAppLaunchData {\n    link: 'api:/'\n    response: APIResponse\n}\n\nexport interface GetUserProfile {\n    link: 'api:v1/user/getUserProfile?userId=25'\n    response: APIResponse\n}\n\nexport interface GetUserPosts {\n    link: 'api:v1/user/getUserPosts?pageNo=0&pageSize=25'\n    response: APIResponse\n}\n\nexport interface GetRescueList {\n    link: 'api:v1/rescue/getRescueList?pageNo=0&pageSize=10&status=pending|inProgress|completed|nearest'\n    response: APIResponse\n}\n\nexport interface GetComments {\n    link: 'api:v1/rescue/getComments?pageNo=0&pageSize=10&postId=1230'\n    response: APIResponse\n}\n\nexport interface GetFollowers {\n    link: 'api:v1/rescue/getUserFollowers?userId=1230'\n    response: APIResponse\n}\n\nexport interface GetFollowing {\n    link: 'api:v1/rescue/getUserFollowing?userId=1230'\n    response: APIResponse\n}\n\nexport interface AppLaunchAction {\n    actionId: number\n    action: string\n    isActive: boolean\n    subject?: string\n}\n\nexport interface User {\n    usesId: number\n\n    coverImage: string\n    following: boolean\n    gender: string\n    isOwnProfile: number\n    isRescuer: boolean\n    latitude: number\n    longitude: number\n    numberOfFollowers: number\n    numberOfFollowing: number\n    numberOfPosts: number\n    numberOfRescuesCompleted: number\n    numberOfRescuesCreated: number\n    numberOfRescuesInProgress: number\n    profileImage: string\n    rescuer: boolean\n    userAddress: string\n    userContacts: string\n    userEmail: string\n    userName: string\n    badge: {\n        badgeId: number\n        badgeName: string\n        badgeDescription: string\n        recuesCompletionNeeded: number\n    }\n    setting: {\n        showMyContacts: boolean\n        getNotifications: boolean\n    }\n}\n\nexport interface PostType {\n    postTypeId: number\n    postType: string\n}\n\nexport interface PostedByUser {\n    usesId: number\n    badgeName: string\n    following: boolean\n    profileImage: string\n    rescuer: boolean\n    userName: string\n}\n\nexport interface UserPost {\n    postId: number\n    commentsCount: number\n    isUserReactedToPost: boolean\n    ownPage: boolean\n    postBy: PostedByUser\n    postImage: string\n    postTime: string\n    postType: PostType\n    postVideo: string\n    reactionsCount: number\n    timeAgo: string\n\n    adCorporateLogoUrl: string | null\n    corporateDescription: string | null\n    corporateName: string | null\n}\n\nexport interface UserPosts {\n    isRecent: boolean\n    feed: UserPost[]\n}\n\nexport interface Rescues {\n    rescueId: number\n    animalImageUrl: string\n    distance: number\n    distanceAway: string\n    emergencyType: string\n    postedBy: string\n    postedMinAgo: string\n    rescueDate: Date\n    rescuedPetName: string\n    rescueLocality: string\n    rescuers: {\n        contact: number\n        name: string\n        profileId: number\n        profileImageUrl: string\n        rescues: boolean\n        showMyNumber: boolean\n    }\n    rescueStatus: string\n    viewsCont: number\n}\n\nexport interface RescueLists {\n    rescues: Rescues[]\n}\n\nexport interface Comment {\n    commentId: number\n    comment: string\n    commentedUseName: string\n    commentedUserId: number\n    timeAgo: string\n}\n\nexport interface Comments {\n    comments: Comment[]\n}\n\nexport interface Follower {\n    userId: number\n    userName: string\n    profileImage: string\n    areYouFollowing: boolean\n    showRemoveOption: boolean\n}\n\nexport interface Following extends Follower {}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/GetFollowers.html":{"url":"interfaces/GetFollowers.html","title":"interface - GetFollowers","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  GetFollowers\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/domain.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        link\n                                \n                                \n                                        response\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        link\n                                    \n                                \n                                \n                                    \n                                        link:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        response\n                                    \n                                \n                                \n                                    \n                                        response:     APIResponse\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     APIResponse\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { HttpStatus } from '@nestjs/common'\n\nexport type Result =\n    | GetAppLaunchData\n    | GetUserProfile\n    | GetUserPosts\n    | GetComments\n    | GetRescueList\n    | GetFollowers\n    | GetFollowing\n\nexport type APIError = Error | string | null\n\nexport interface APIResponse {\n    data: T\n    error: APIError\n    message: string | string[]\n    statusCode: HttpStatus\n\n    count?: number\n    page?: number\n    pageCount?: number\n    total?: number\n}\n\nexport interface GetAppLaunchData {\n    link: 'api:/'\n    response: APIResponse\n}\n\nexport interface GetUserProfile {\n    link: 'api:v1/user/getUserProfile?userId=25'\n    response: APIResponse\n}\n\nexport interface GetUserPosts {\n    link: 'api:v1/user/getUserPosts?pageNo=0&pageSize=25'\n    response: APIResponse\n}\n\nexport interface GetRescueList {\n    link: 'api:v1/rescue/getRescueList?pageNo=0&pageSize=10&status=pending|inProgress|completed|nearest'\n    response: APIResponse\n}\n\nexport interface GetComments {\n    link: 'api:v1/rescue/getComments?pageNo=0&pageSize=10&postId=1230'\n    response: APIResponse\n}\n\nexport interface GetFollowers {\n    link: 'api:v1/rescue/getUserFollowers?userId=1230'\n    response: APIResponse\n}\n\nexport interface GetFollowing {\n    link: 'api:v1/rescue/getUserFollowing?userId=1230'\n    response: APIResponse\n}\n\nexport interface AppLaunchAction {\n    actionId: number\n    action: string\n    isActive: boolean\n    subject?: string\n}\n\nexport interface User {\n    usesId: number\n\n    coverImage: string\n    following: boolean\n    gender: string\n    isOwnProfile: number\n    isRescuer: boolean\n    latitude: number\n    longitude: number\n    numberOfFollowers: number\n    numberOfFollowing: number\n    numberOfPosts: number\n    numberOfRescuesCompleted: number\n    numberOfRescuesCreated: number\n    numberOfRescuesInProgress: number\n    profileImage: string\n    rescuer: boolean\n    userAddress: string\n    userContacts: string\n    userEmail: string\n    userName: string\n    badge: {\n        badgeId: number\n        badgeName: string\n        badgeDescription: string\n        recuesCompletionNeeded: number\n    }\n    setting: {\n        showMyContacts: boolean\n        getNotifications: boolean\n    }\n}\n\nexport interface PostType {\n    postTypeId: number\n    postType: string\n}\n\nexport interface PostedByUser {\n    usesId: number\n    badgeName: string\n    following: boolean\n    profileImage: string\n    rescuer: boolean\n    userName: string\n}\n\nexport interface UserPost {\n    postId: number\n    commentsCount: number\n    isUserReactedToPost: boolean\n    ownPage: boolean\n    postBy: PostedByUser\n    postImage: string\n    postTime: string\n    postType: PostType\n    postVideo: string\n    reactionsCount: number\n    timeAgo: string\n\n    adCorporateLogoUrl: string | null\n    corporateDescription: string | null\n    corporateName: string | null\n}\n\nexport interface UserPosts {\n    isRecent: boolean\n    feed: UserPost[]\n}\n\nexport interface Rescues {\n    rescueId: number\n    animalImageUrl: string\n    distance: number\n    distanceAway: string\n    emergencyType: string\n    postedBy: string\n    postedMinAgo: string\n    rescueDate: Date\n    rescuedPetName: string\n    rescueLocality: string\n    rescuers: {\n        contact: number\n        name: string\n        profileId: number\n        profileImageUrl: string\n        rescues: boolean\n        showMyNumber: boolean\n    }\n    rescueStatus: string\n    viewsCont: number\n}\n\nexport interface RescueLists {\n    rescues: Rescues[]\n}\n\nexport interface Comment {\n    commentId: number\n    comment: string\n    commentedUseName: string\n    commentedUserId: number\n    timeAgo: string\n}\n\nexport interface Comments {\n    comments: Comment[]\n}\n\nexport interface Follower {\n    userId: number\n    userName: string\n    profileImage: string\n    areYouFollowing: boolean\n    showRemoveOption: boolean\n}\n\nexport interface Following extends Follower {}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/GetFollowing.html":{"url":"interfaces/GetFollowing.html","title":"interface - GetFollowing","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  GetFollowing\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/domain.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        link\n                                \n                                \n                                        response\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        link\n                                    \n                                \n                                \n                                    \n                                        link:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        response\n                                    \n                                \n                                \n                                    \n                                        response:     APIResponse\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     APIResponse\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { HttpStatus } from '@nestjs/common'\n\nexport type Result =\n    | GetAppLaunchData\n    | GetUserProfile\n    | GetUserPosts\n    | GetComments\n    | GetRescueList\n    | GetFollowers\n    | GetFollowing\n\nexport type APIError = Error | string | null\n\nexport interface APIResponse {\n    data: T\n    error: APIError\n    message: string | string[]\n    statusCode: HttpStatus\n\n    count?: number\n    page?: number\n    pageCount?: number\n    total?: number\n}\n\nexport interface GetAppLaunchData {\n    link: 'api:/'\n    response: APIResponse\n}\n\nexport interface GetUserProfile {\n    link: 'api:v1/user/getUserProfile?userId=25'\n    response: APIResponse\n}\n\nexport interface GetUserPosts {\n    link: 'api:v1/user/getUserPosts?pageNo=0&pageSize=25'\n    response: APIResponse\n}\n\nexport interface GetRescueList {\n    link: 'api:v1/rescue/getRescueList?pageNo=0&pageSize=10&status=pending|inProgress|completed|nearest'\n    response: APIResponse\n}\n\nexport interface GetComments {\n    link: 'api:v1/rescue/getComments?pageNo=0&pageSize=10&postId=1230'\n    response: APIResponse\n}\n\nexport interface GetFollowers {\n    link: 'api:v1/rescue/getUserFollowers?userId=1230'\n    response: APIResponse\n}\n\nexport interface GetFollowing {\n    link: 'api:v1/rescue/getUserFollowing?userId=1230'\n    response: APIResponse\n}\n\nexport interface AppLaunchAction {\n    actionId: number\n    action: string\n    isActive: boolean\n    subject?: string\n}\n\nexport interface User {\n    usesId: number\n\n    coverImage: string\n    following: boolean\n    gender: string\n    isOwnProfile: number\n    isRescuer: boolean\n    latitude: number\n    longitude: number\n    numberOfFollowers: number\n    numberOfFollowing: number\n    numberOfPosts: number\n    numberOfRescuesCompleted: number\n    numberOfRescuesCreated: number\n    numberOfRescuesInProgress: number\n    profileImage: string\n    rescuer: boolean\n    userAddress: string\n    userContacts: string\n    userEmail: string\n    userName: string\n    badge: {\n        badgeId: number\n        badgeName: string\n        badgeDescription: string\n        recuesCompletionNeeded: number\n    }\n    setting: {\n        showMyContacts: boolean\n        getNotifications: boolean\n    }\n}\n\nexport interface PostType {\n    postTypeId: number\n    postType: string\n}\n\nexport interface PostedByUser {\n    usesId: number\n    badgeName: string\n    following: boolean\n    profileImage: string\n    rescuer: boolean\n    userName: string\n}\n\nexport interface UserPost {\n    postId: number\n    commentsCount: number\n    isUserReactedToPost: boolean\n    ownPage: boolean\n    postBy: PostedByUser\n    postImage: string\n    postTime: string\n    postType: PostType\n    postVideo: string\n    reactionsCount: number\n    timeAgo: string\n\n    adCorporateLogoUrl: string | null\n    corporateDescription: string | null\n    corporateName: string | null\n}\n\nexport interface UserPosts {\n    isRecent: boolean\n    feed: UserPost[]\n}\n\nexport interface Rescues {\n    rescueId: number\n    animalImageUrl: string\n    distance: number\n    distanceAway: string\n    emergencyType: string\n    postedBy: string\n    postedMinAgo: string\n    rescueDate: Date\n    rescuedPetName: string\n    rescueLocality: string\n    rescuers: {\n        contact: number\n        name: string\n        profileId: number\n        profileImageUrl: string\n        rescues: boolean\n        showMyNumber: boolean\n    }\n    rescueStatus: string\n    viewsCont: number\n}\n\nexport interface RescueLists {\n    rescues: Rescues[]\n}\n\nexport interface Comment {\n    commentId: number\n    comment: string\n    commentedUseName: string\n    commentedUserId: number\n    timeAgo: string\n}\n\nexport interface Comments {\n    comments: Comment[]\n}\n\nexport interface Follower {\n    userId: number\n    userName: string\n    profileImage: string\n    areYouFollowing: boolean\n    showRemoveOption: boolean\n}\n\nexport interface Following extends Follower {}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/GetRescueList.html":{"url":"interfaces/GetRescueList.html","title":"interface - GetRescueList","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  GetRescueList\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/domain.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        link\n                                \n                                \n                                        response\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        link\n                                    \n                                \n                                \n                                    \n                                        link:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        response\n                                    \n                                \n                                \n                                    \n                                        response:     APIResponse\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     APIResponse\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { HttpStatus } from '@nestjs/common'\n\nexport type Result =\n    | GetAppLaunchData\n    | GetUserProfile\n    | GetUserPosts\n    | GetComments\n    | GetRescueList\n    | GetFollowers\n    | GetFollowing\n\nexport type APIError = Error | string | null\n\nexport interface APIResponse {\n    data: T\n    error: APIError\n    message: string | string[]\n    statusCode: HttpStatus\n\n    count?: number\n    page?: number\n    pageCount?: number\n    total?: number\n}\n\nexport interface GetAppLaunchData {\n    link: 'api:/'\n    response: APIResponse\n}\n\nexport interface GetUserProfile {\n    link: 'api:v1/user/getUserProfile?userId=25'\n    response: APIResponse\n}\n\nexport interface GetUserPosts {\n    link: 'api:v1/user/getUserPosts?pageNo=0&pageSize=25'\n    response: APIResponse\n}\n\nexport interface GetRescueList {\n    link: 'api:v1/rescue/getRescueList?pageNo=0&pageSize=10&status=pending|inProgress|completed|nearest'\n    response: APIResponse\n}\n\nexport interface GetComments {\n    link: 'api:v1/rescue/getComments?pageNo=0&pageSize=10&postId=1230'\n    response: APIResponse\n}\n\nexport interface GetFollowers {\n    link: 'api:v1/rescue/getUserFollowers?userId=1230'\n    response: APIResponse\n}\n\nexport interface GetFollowing {\n    link: 'api:v1/rescue/getUserFollowing?userId=1230'\n    response: APIResponse\n}\n\nexport interface AppLaunchAction {\n    actionId: number\n    action: string\n    isActive: boolean\n    subject?: string\n}\n\nexport interface User {\n    usesId: number\n\n    coverImage: string\n    following: boolean\n    gender: string\n    isOwnProfile: number\n    isRescuer: boolean\n    latitude: number\n    longitude: number\n    numberOfFollowers: number\n    numberOfFollowing: number\n    numberOfPosts: number\n    numberOfRescuesCompleted: number\n    numberOfRescuesCreated: number\n    numberOfRescuesInProgress: number\n    profileImage: string\n    rescuer: boolean\n    userAddress: string\n    userContacts: string\n    userEmail: string\n    userName: string\n    badge: {\n        badgeId: number\n        badgeName: string\n        badgeDescription: string\n        recuesCompletionNeeded: number\n    }\n    setting: {\n        showMyContacts: boolean\n        getNotifications: boolean\n    }\n}\n\nexport interface PostType {\n    postTypeId: number\n    postType: string\n}\n\nexport interface PostedByUser {\n    usesId: number\n    badgeName: string\n    following: boolean\n    profileImage: string\n    rescuer: boolean\n    userName: string\n}\n\nexport interface UserPost {\n    postId: number\n    commentsCount: number\n    isUserReactedToPost: boolean\n    ownPage: boolean\n    postBy: PostedByUser\n    postImage: string\n    postTime: string\n    postType: PostType\n    postVideo: string\n    reactionsCount: number\n    timeAgo: string\n\n    adCorporateLogoUrl: string | null\n    corporateDescription: string | null\n    corporateName: string | null\n}\n\nexport interface UserPosts {\n    isRecent: boolean\n    feed: UserPost[]\n}\n\nexport interface Rescues {\n    rescueId: number\n    animalImageUrl: string\n    distance: number\n    distanceAway: string\n    emergencyType: string\n    postedBy: string\n    postedMinAgo: string\n    rescueDate: Date\n    rescuedPetName: string\n    rescueLocality: string\n    rescuers: {\n        contact: number\n        name: string\n        profileId: number\n        profileImageUrl: string\n        rescues: boolean\n        showMyNumber: boolean\n    }\n    rescueStatus: string\n    viewsCont: number\n}\n\nexport interface RescueLists {\n    rescues: Rescues[]\n}\n\nexport interface Comment {\n    commentId: number\n    comment: string\n    commentedUseName: string\n    commentedUserId: number\n    timeAgo: string\n}\n\nexport interface Comments {\n    comments: Comment[]\n}\n\nexport interface Follower {\n    userId: number\n    userName: string\n    profileImage: string\n    areYouFollowing: boolean\n    showRemoveOption: boolean\n}\n\nexport interface Following extends Follower {}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/GetUserPosts.html":{"url":"interfaces/GetUserPosts.html","title":"interface - GetUserPosts","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  GetUserPosts\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/domain.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        link\n                                \n                                \n                                        response\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        link\n                                    \n                                \n                                \n                                    \n                                        link:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        response\n                                    \n                                \n                                \n                                    \n                                        response:         APIResponse\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         APIResponse\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { HttpStatus } from '@nestjs/common'\n\nexport type Result =\n    | GetAppLaunchData\n    | GetUserProfile\n    | GetUserPosts\n    | GetComments\n    | GetRescueList\n    | GetFollowers\n    | GetFollowing\n\nexport type APIError = Error | string | null\n\nexport interface APIResponse {\n    data: T\n    error: APIError\n    message: string | string[]\n    statusCode: HttpStatus\n\n    count?: number\n    page?: number\n    pageCount?: number\n    total?: number\n}\n\nexport interface GetAppLaunchData {\n    link: 'api:/'\n    response: APIResponse\n}\n\nexport interface GetUserProfile {\n    link: 'api:v1/user/getUserProfile?userId=25'\n    response: APIResponse\n}\n\nexport interface GetUserPosts {\n    link: 'api:v1/user/getUserPosts?pageNo=0&pageSize=25'\n    response: APIResponse\n}\n\nexport interface GetRescueList {\n    link: 'api:v1/rescue/getRescueList?pageNo=0&pageSize=10&status=pending|inProgress|completed|nearest'\n    response: APIResponse\n}\n\nexport interface GetComments {\n    link: 'api:v1/rescue/getComments?pageNo=0&pageSize=10&postId=1230'\n    response: APIResponse\n}\n\nexport interface GetFollowers {\n    link: 'api:v1/rescue/getUserFollowers?userId=1230'\n    response: APIResponse\n}\n\nexport interface GetFollowing {\n    link: 'api:v1/rescue/getUserFollowing?userId=1230'\n    response: APIResponse\n}\n\nexport interface AppLaunchAction {\n    actionId: number\n    action: string\n    isActive: boolean\n    subject?: string\n}\n\nexport interface User {\n    usesId: number\n\n    coverImage: string\n    following: boolean\n    gender: string\n    isOwnProfile: number\n    isRescuer: boolean\n    latitude: number\n    longitude: number\n    numberOfFollowers: number\n    numberOfFollowing: number\n    numberOfPosts: number\n    numberOfRescuesCompleted: number\n    numberOfRescuesCreated: number\n    numberOfRescuesInProgress: number\n    profileImage: string\n    rescuer: boolean\n    userAddress: string\n    userContacts: string\n    userEmail: string\n    userName: string\n    badge: {\n        badgeId: number\n        badgeName: string\n        badgeDescription: string\n        recuesCompletionNeeded: number\n    }\n    setting: {\n        showMyContacts: boolean\n        getNotifications: boolean\n    }\n}\n\nexport interface PostType {\n    postTypeId: number\n    postType: string\n}\n\nexport interface PostedByUser {\n    usesId: number\n    badgeName: string\n    following: boolean\n    profileImage: string\n    rescuer: boolean\n    userName: string\n}\n\nexport interface UserPost {\n    postId: number\n    commentsCount: number\n    isUserReactedToPost: boolean\n    ownPage: boolean\n    postBy: PostedByUser\n    postImage: string\n    postTime: string\n    postType: PostType\n    postVideo: string\n    reactionsCount: number\n    timeAgo: string\n\n    adCorporateLogoUrl: string | null\n    corporateDescription: string | null\n    corporateName: string | null\n}\n\nexport interface UserPosts {\n    isRecent: boolean\n    feed: UserPost[]\n}\n\nexport interface Rescues {\n    rescueId: number\n    animalImageUrl: string\n    distance: number\n    distanceAway: string\n    emergencyType: string\n    postedBy: string\n    postedMinAgo: string\n    rescueDate: Date\n    rescuedPetName: string\n    rescueLocality: string\n    rescuers: {\n        contact: number\n        name: string\n        profileId: number\n        profileImageUrl: string\n        rescues: boolean\n        showMyNumber: boolean\n    }\n    rescueStatus: string\n    viewsCont: number\n}\n\nexport interface RescueLists {\n    rescues: Rescues[]\n}\n\nexport interface Comment {\n    commentId: number\n    comment: string\n    commentedUseName: string\n    commentedUserId: number\n    timeAgo: string\n}\n\nexport interface Comments {\n    comments: Comment[]\n}\n\nexport interface Follower {\n    userId: number\n    userName: string\n    profileImage: string\n    areYouFollowing: boolean\n    showRemoveOption: boolean\n}\n\nexport interface Following extends Follower {}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/GetUserProfile.html":{"url":"interfaces/GetUserProfile.html","title":"interface - GetUserProfile","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  GetUserProfile\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/domain.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        link\n                                \n                                \n                                        response\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        link\n                                    \n                                \n                                \n                                    \n                                        link:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        response\n                                    \n                                \n                                \n                                    \n                                        response:         APIResponse\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         APIResponse\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { HttpStatus } from '@nestjs/common'\n\nexport type Result =\n    | GetAppLaunchData\n    | GetUserProfile\n    | GetUserPosts\n    | GetComments\n    | GetRescueList\n    | GetFollowers\n    | GetFollowing\n\nexport type APIError = Error | string | null\n\nexport interface APIResponse {\n    data: T\n    error: APIError\n    message: string | string[]\n    statusCode: HttpStatus\n\n    count?: number\n    page?: number\n    pageCount?: number\n    total?: number\n}\n\nexport interface GetAppLaunchData {\n    link: 'api:/'\n    response: APIResponse\n}\n\nexport interface GetUserProfile {\n    link: 'api:v1/user/getUserProfile?userId=25'\n    response: APIResponse\n}\n\nexport interface GetUserPosts {\n    link: 'api:v1/user/getUserPosts?pageNo=0&pageSize=25'\n    response: APIResponse\n}\n\nexport interface GetRescueList {\n    link: 'api:v1/rescue/getRescueList?pageNo=0&pageSize=10&status=pending|inProgress|completed|nearest'\n    response: APIResponse\n}\n\nexport interface GetComments {\n    link: 'api:v1/rescue/getComments?pageNo=0&pageSize=10&postId=1230'\n    response: APIResponse\n}\n\nexport interface GetFollowers {\n    link: 'api:v1/rescue/getUserFollowers?userId=1230'\n    response: APIResponse\n}\n\nexport interface GetFollowing {\n    link: 'api:v1/rescue/getUserFollowing?userId=1230'\n    response: APIResponse\n}\n\nexport interface AppLaunchAction {\n    actionId: number\n    action: string\n    isActive: boolean\n    subject?: string\n}\n\nexport interface User {\n    usesId: number\n\n    coverImage: string\n    following: boolean\n    gender: string\n    isOwnProfile: number\n    isRescuer: boolean\n    latitude: number\n    longitude: number\n    numberOfFollowers: number\n    numberOfFollowing: number\n    numberOfPosts: number\n    numberOfRescuesCompleted: number\n    numberOfRescuesCreated: number\n    numberOfRescuesInProgress: number\n    profileImage: string\n    rescuer: boolean\n    userAddress: string\n    userContacts: string\n    userEmail: string\n    userName: string\n    badge: {\n        badgeId: number\n        badgeName: string\n        badgeDescription: string\n        recuesCompletionNeeded: number\n    }\n    setting: {\n        showMyContacts: boolean\n        getNotifications: boolean\n    }\n}\n\nexport interface PostType {\n    postTypeId: number\n    postType: string\n}\n\nexport interface PostedByUser {\n    usesId: number\n    badgeName: string\n    following: boolean\n    profileImage: string\n    rescuer: boolean\n    userName: string\n}\n\nexport interface UserPost {\n    postId: number\n    commentsCount: number\n    isUserReactedToPost: boolean\n    ownPage: boolean\n    postBy: PostedByUser\n    postImage: string\n    postTime: string\n    postType: PostType\n    postVideo: string\n    reactionsCount: number\n    timeAgo: string\n\n    adCorporateLogoUrl: string | null\n    corporateDescription: string | null\n    corporateName: string | null\n}\n\nexport interface UserPosts {\n    isRecent: boolean\n    feed: UserPost[]\n}\n\nexport interface Rescues {\n    rescueId: number\n    animalImageUrl: string\n    distance: number\n    distanceAway: string\n    emergencyType: string\n    postedBy: string\n    postedMinAgo: string\n    rescueDate: Date\n    rescuedPetName: string\n    rescueLocality: string\n    rescuers: {\n        contact: number\n        name: string\n        profileId: number\n        profileImageUrl: string\n        rescues: boolean\n        showMyNumber: boolean\n    }\n    rescueStatus: string\n    viewsCont: number\n}\n\nexport interface RescueLists {\n    rescues: Rescues[]\n}\n\nexport interface Comment {\n    commentId: number\n    comment: string\n    commentedUseName: string\n    commentedUserId: number\n    timeAgo: string\n}\n\nexport interface Comments {\n    comments: Comment[]\n}\n\nexport interface Follower {\n    userId: number\n    userName: string\n    profileImage: string\n    areYouFollowing: boolean\n    showRemoveOption: boolean\n}\n\nexport interface Following extends Follower {}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetUserResponseDto.html":{"url":"classes/GetUserResponseDto.html","title":"class - GetUserResponseDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetUserResponseDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/datum/user.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                createdAt\n                            \n                            \n                                deletedAt\n                            \n                            \n                                id\n                            \n                            \n                                name\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiHideProperty()@Exclude()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/datum/user.dto.ts:41\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            deletedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiHideProperty()@Exclude()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/datum/user.dto.ts:49\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({type: 'number'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/datum/user.dto.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'The name of the User', example: 'Name'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/datum/user.dto.ts:37\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiHideProperty()@Exclude()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/datum/user.dto.ts:45\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiHideProperty, ApiProperty } from '@nestjs/swagger'\n\nimport { Exclude } from 'class-transformer'\nimport {\n    IsString,\n    MinLength,\n    IsNotEmpty,\n    IsOptional,\n    MaxLength,\n} from 'class-validator'\n\nexport class CreateUserDto {\n    @ApiProperty({ description: 'The name of the User', example: 'Name' })\n    @IsString()\n    @IsNotEmpty()\n    @MinLength(2)\n    @MaxLength(36)\n    readonly name: string\n}\n\nexport class UpdateUserDto {\n    @ApiProperty({ description: 'The name of the User', example: 'Kitty' })\n    @IsString()\n    @IsNotEmpty()\n    @MinLength(2)\n    @MaxLength(36)\n    @IsOptional()\n    readonly name?: string\n}\n\nexport class GetUserResponseDto {\n    @ApiProperty({ type: 'number' })\n    id: string\n\n    @ApiProperty({ description: 'The name of the User', example: 'Name' })\n    name: string\n\n    @ApiHideProperty()\n    @Exclude()\n    createdAt: any\n\n    @ApiHideProperty()\n    @Exclude()\n    updatedAt: any\n\n    @ApiHideProperty()\n    @Exclude()\n    deletedAt: any\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/HealthController.html":{"url":"controllers/HealthController.html","title":"controller - HealthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  HealthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/health/health.controller.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                check\n                            \n                            \n                                onApplicationShutdown\n                            \n                            \n                                onModuleInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            check\n                        \n                        \n                    \n                \n            \n            \n                \ncheck()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@HealthCheck()\n                \n            \n\n            \n                \n                    Defined in src/health/health.controller.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onApplicationShutdown\n                        \n                        \n                    \n                \n            \n            \n                \nonApplicationShutdown(signal?: string)\n                \n            \n\n\n            \n                \n                    Defined in src/health/health.controller.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    signal\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onModuleInit\n                        \n                        \n                    \n                \n            \n            \n                \nonModuleInit()\n                \n            \n\n\n            \n                \n                    Defined in src/health/health.controller.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        /* eslint-disable no-use-before-define */\nimport {\n    Controller,\n    Get,\n    OnApplicationShutdown,\n    OnModuleInit,\n} from '@nestjs/common'\nimport { ConfigService } from '@nestjs/config'\nimport { ApiTags } from '@nestjs/swagger'\nimport {\n    DNSHealthIndicator,\n    HealthCheck,\n    HealthCheckService,\n} from '@nestjs/terminus'\n\n@ApiTags(HealthController.name)\n@Controller(HealthController.path)\nexport class HealthController implements OnModuleInit, OnApplicationShutdown {\n    static path = 'health'\n\n    constructor(\n        private health: HealthCheckService,\n        private dns: DNSHealthIndicator,\n        private config: ConfigService,\n    ) {}\n\n    @Get()\n    @HealthCheck()\n    check() {\n        return this.health.check([\n            () => this.dns.pingCheck('nestjs-docs', 'https://docs.nestjs.com'),\n        ])\n    }\n\n    /*\n     * When the application receives a termination signal it will call any registered\n     * onModuleDestroy(), beforeApplicationShutdown(), then onApplicationShutdown() methods\n     * (in the sequence described above) with the corresponding signal as the first parameter.\n     * If a registered function awaits an asynchronous call (returns a promise), Nest will not\n     * continue in the sequence until the promise is resolved or rejected.\n     */\n\n    onModuleInit(): void {\n        console.log(`ModuleInit - HealthController has been initialized.`, {\n            config: this.config.get('NODE_ENV'),\n        })\n    }\n\n    onApplicationShutdown(signal?: string): void {\n        console.log(\n            `ApplicationShutdown - HealthController has been shutdown with ${signal} signal`,\n        )\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IBaseEntityModel.html":{"url":"interfaces/IBaseEntityModel.html","title":"interface - IBaseEntityModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IBaseEntityModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/base/entities/base.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        createdAt\n                                \n                                \n                                            Optional\n                                        deletedAt\n                                \n                                \n                                            Optional\n                                        id\n                                \n                                \n                                            Optional\n                                        updatedAt\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        createdAt\n                                    \n                                \n                                \n                                    \n                                        createdAt:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        deletedAt\n                                    \n                                \n                                \n                                    \n                                        deletedAt:     Date | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Date | null\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        updatedAt\n                                    \n                                \n                                \n                                    \n                                        updatedAt:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ApiPropertyOptional, ApiProperty } from '@nestjs/swagger'\n\nimport {\n    PrimaryGeneratedColumn,\n    UpdateDateColumn,\n    CreateDateColumn,\n    DeleteDateColumn,\n} from 'typeorm'\n\nexport interface IBaseEntityModel {\n    id?: number\n\n    readonly createdAt?: Date\n    readonly updatedAt?: Date\n    readonly deletedAt?: Date | null\n}\n\nexport abstract class Model {\n    constructor(input?: any) {\n        if (input) {\n            Object.assign(this, input)\n        }\n    }\n}\n\nexport abstract class Base extends Model implements IBaseEntityModel {\n    @ApiPropertyOptional({ type: String })\n    @PrimaryGeneratedColumn()\n    id?: number\n\n    @ApiProperty({\n        type: 'string',\n        format: 'date-time',\n        example: '2000-01-01T12:00:00.000Z',\n    })\n    @CreateDateColumn()\n    createdAt?: Date\n\n    @ApiProperty({\n        type: 'string',\n        format: 'date-time',\n        example: '2000-01-01T12:00:00.000Z',\n    })\n    @UpdateDateColumn()\n    updatedAt?: Date\n\n    @ApiProperty({\n        type: 'string',\n        format: 'date-time',\n        example: '2000-01-01T12:00:00.000Z',\n    })\n    @DeleteDateColumn()\n    deletedAt?: Date | null\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ICrudService.html":{"url":"interfaces/ICrudService.html","title":"interface - ICrudService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ICrudService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/base/crud/icrud.service.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    count\n                                \n                                \n                                    create\n                                \n                                \n                                    delete\n                                \n                                \n                                    findAll\n                                \n                                \n                                    findOne\n                                \n                                \n                                    update\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            count\n                        \n                        \n                    \n                \n            \n            \n                \ncount(filter?: FindManyOptions)\n                \n            \n\n\n            \n                \n                    Defined in src/base/crud/icrud.service.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                            FindManyOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            create\n                        \n                        \n                    \n                \n            \n            \n                \ncreate(entity: DeepPartial, ...options: any[])\n                \n            \n\n\n            \n                \n                    Defined in src/base/crud/icrud.service.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entity\n                                    \n                                            DeepPartial\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                            any[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            delete\n                        \n                        \n                    \n                \n            \n            \n                \ndelete(id: any, ...options: any[])\n                \n            \n\n\n            \n                \n                    Defined in src/base/crud/icrud.service.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                            any[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            findAll\n                        \n                        \n                    \n                \n            \n            \n                \nfindAll(filter?: FindManyOptions)\n                \n            \n\n\n            \n                \n                    Defined in src/base/crud/icrud.service.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                            FindManyOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            findOne\n                        \n                        \n                    \n                \n            \n            \n                \nfindOne(id: string | number | FindOneOptions | FindConditions, options?: FindOneOptions)\n                \n            \n\n\n            \n                \n                    Defined in src/base/crud/icrud.service.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                            string | number | FindOneOptions | FindConditions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                            FindOneOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            update\n                        \n                        \n                    \n                \n            \n            \n                \nupdate(id: any, entity: QueryDeepPartialEntity, ...options: any[])\n                \n            \n\n\n            \n                \n                    Defined in src/base/crud/icrud.service.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    entity\n                                    \n                                            QueryDeepPartialEntity\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                            any[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n    DeepPartial,\n    DeleteResult,\n    FindConditions,\n    FindManyOptions,\n    FindOneOptions,\n    UpdateResult,\n} from 'typeorm'\nimport { QueryDeepPartialEntity } from 'typeorm/query-builder/QueryPartialEntity'\n\nexport interface IPagination {\n    /**\n     * Items included in the current listing\n     */\n    readonly items: T[]\n\n    /**\n     * Total number of available items\n     */\n    readonly total: number\n}\n\nexport interface ICrudService {\n    count(filter?: FindManyOptions): Promise\n\n    findAll(filter?: FindManyOptions): Promise>\n\n    findOne(\n        id: string | number | FindOneOptions | FindConditions,\n        options?: FindOneOptions,\n    ): Promise\n\n    create(entity: DeepPartial, ...options: any[]): Promise\n\n    update(\n        id: any,\n        entity: QueryDeepPartialEntity,\n        ...options: any[]\n    ): Promise\n\n    delete(id: any, ...options: any[]): Promise\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IPagination.html":{"url":"interfaces/IPagination.html","title":"interface - IPagination","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IPagination\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/base/crud/icrud.service.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        items\n                                \n                                \n                                        total\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        items\n                                    \n                                \n                                \n                                    \n                                        items:     T[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     T[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Items included in the current listing\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        total\n                                    \n                                \n                                \n                                    \n                                        total:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Total number of available items\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import {\n    DeepPartial,\n    DeleteResult,\n    FindConditions,\n    FindManyOptions,\n    FindOneOptions,\n    UpdateResult,\n} from 'typeorm'\nimport { QueryDeepPartialEntity } from 'typeorm/query-builder/QueryPartialEntity'\n\nexport interface IPagination {\n    /**\n     * Items included in the current listing\n     */\n    readonly items: T[]\n\n    /**\n     * Total number of available items\n     */\n    readonly total: number\n}\n\nexport interface ICrudService {\n    count(filter?: FindManyOptions): Promise\n\n    findAll(filter?: FindManyOptions): Promise>\n\n    findOne(\n        id: string | number | FindOneOptions | FindConditions,\n        options?: FindOneOptions,\n    ): Promise\n\n    create(entity: DeepPartial, ...options: any[]): Promise\n\n    update(\n        id: any,\n        entity: QueryDeepPartialEntity,\n        ...options: any[]\n    ): Promise\n\n    delete(id: any, ...options: any[]): Promise\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IPagination-1.html":{"url":"interfaces/IPagination-1.html","title":"interface - IPagination-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IPagination\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/base/crud/pagination.ts\n        \n\n            \n                Description\n            \n            \n                Generic pagination interface\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        items\n                                \n                                \n                                        total\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        items\n                                    \n                                \n                                \n                                    \n                                        items:     T[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     T[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Items included in the current listing\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        total\n                                    \n                                \n                                \n                                    \n                                        total:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Total number of available items\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface IPagination {\n    /**\n     * Items included in the current listing\n     */\n    readonly items: T[]\n\n    /**\n     * Total number of available items\n     */\n    readonly total: number\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ITryRequest.html":{"url":"interfaces/ITryRequest.html","title":"interface - ITryRequest","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ITryRequest\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/base/crud/try-request.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        error\n                                \n                                \n                                            Optional\n                                        record\n                                \n                                \n                                        success\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        error\n                                    \n                                \n                                \n                                    \n                                        error:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        record\n                                    \n                                \n                                \n                                    \n                                        record:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        success\n                                    \n                                \n                                \n                                    \n                                        success:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface ITryRequest {\n    success: boolean\n    record?: any\n    error?: any\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Model.html":{"url":"classes/Model.html","title":"class - Model","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Model\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/base/entities/base.ts\n        \n\n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(input?: any)\n                    \n                \n                        \n                            \n                                Defined in src/base/entities/base.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        input\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiPropertyOptional, ApiProperty } from '@nestjs/swagger'\n\nimport {\n    PrimaryGeneratedColumn,\n    UpdateDateColumn,\n    CreateDateColumn,\n    DeleteDateColumn,\n} from 'typeorm'\n\nexport interface IBaseEntityModel {\n    id?: number\n\n    readonly createdAt?: Date\n    readonly updatedAt?: Date\n    readonly deletedAt?: Date | null\n}\n\nexport abstract class Model {\n    constructor(input?: any) {\n        if (input) {\n            Object.assign(this, input)\n        }\n    }\n}\n\nexport abstract class Base extends Model implements IBaseEntityModel {\n    @ApiPropertyOptional({ type: String })\n    @PrimaryGeneratedColumn()\n    id?: number\n\n    @ApiProperty({\n        type: 'string',\n        format: 'date-time',\n        example: '2000-01-01T12:00:00.000Z',\n    })\n    @CreateDateColumn()\n    createdAt?: Date\n\n    @ApiProperty({\n        type: 'string',\n        format: 'date-time',\n        example: '2000-01-01T12:00:00.000Z',\n    })\n    @UpdateDateColumn()\n    updatedAt?: Date\n\n    @ApiProperty({\n        type: 'string',\n        format: 'date-time',\n        example: '2000-01-01T12:00:00.000Z',\n    })\n    @DeleteDateColumn()\n    deletedAt?: Date | null\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PaginationParams.html":{"url":"classes/PaginationParams.html","title":"class - PaginationParams","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PaginationParams\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/base/crud/pagination-params.ts\n        \n\n            \n                Description\n            \n            \n                Describes generic pagination params\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Abstract\n                                    Readonly\n                                    Optional\n                                order\n                            \n                            \n                                    Readonly\n                                skip\n                            \n                            \n                                    Readonly\n                                take\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Abstract\n                                Readonly\n                                Optional\n                            order\n                            \n                        \n                    \n                \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiPropertyOptional()@IsOptional()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/base/crud/pagination-params.ts:39\n                            \n                        \n\n                \n                    \n                        OrderBy\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            skip\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiPropertyOptional({type: Number, minimum: 0})@IsOptional()@Min(0)@Transform(undefined)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/base/crud/pagination-params.ts:32\n                            \n                        \n\n                \n                    \n                        Pagination offset\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            take\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 10\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiPropertyOptional({type: Number, minimum: 0, maximum: 50})@IsOptional()@Min(0)@Max(50)@Transform(undefined)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/base/crud/pagination-params.ts:23\n                            \n                        \n\n                \n                    \n                        Pagination limit\n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiPropertyOptional } from '@nestjs/swagger'\n\nimport { Transform } from 'class-transformer'\nimport { IsOptional, Max, Min } from 'class-validator'\n\nexport enum OrderType {\n    DESC = 'DESC',\n    ASC = 'ASC',\n}\n\n/**\n * Describes generic pagination params\n */\nexport abstract class PaginationParams {\n    /**\n     * Pagination limit\n     */\n    @ApiPropertyOptional({ type: Number, minimum: 0, maximum: 50 })\n    @IsOptional()\n    @Min(0)\n    @Max(50)\n    @Transform((val: string) => parseInt(val, 10))\n    readonly take = 10\n\n    /**\n     * Pagination offset\n     */\n    @ApiPropertyOptional({ type: Number, minimum: 0 })\n    @IsOptional()\n    @Min(0)\n    @Transform((val: string) => parseInt(val, 10))\n    readonly skip = 0\n\n    /**\n     * OrderBy\n     */\n    @ApiPropertyOptional()\n    @IsOptional()\n    abstract readonly order?: { [P in keyof T]?: OrderType }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PostType.html":{"url":"interfaces/PostType.html","title":"interface - PostType","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  PostType\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/domain.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        postType\n                                \n                                \n                                        postTypeId\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        postType\n                                    \n                                \n                                \n                                    \n                                        postType:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        postTypeId\n                                    \n                                \n                                \n                                    \n                                        postTypeId:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { HttpStatus } from '@nestjs/common'\n\nexport type Result =\n    | GetAppLaunchData\n    | GetUserProfile\n    | GetUserPosts\n    | GetComments\n    | GetRescueList\n    | GetFollowers\n    | GetFollowing\n\nexport type APIError = Error | string | null\n\nexport interface APIResponse {\n    data: T\n    error: APIError\n    message: string | string[]\n    statusCode: HttpStatus\n\n    count?: number\n    page?: number\n    pageCount?: number\n    total?: number\n}\n\nexport interface GetAppLaunchData {\n    link: 'api:/'\n    response: APIResponse\n}\n\nexport interface GetUserProfile {\n    link: 'api:v1/user/getUserProfile?userId=25'\n    response: APIResponse\n}\n\nexport interface GetUserPosts {\n    link: 'api:v1/user/getUserPosts?pageNo=0&pageSize=25'\n    response: APIResponse\n}\n\nexport interface GetRescueList {\n    link: 'api:v1/rescue/getRescueList?pageNo=0&pageSize=10&status=pending|inProgress|completed|nearest'\n    response: APIResponse\n}\n\nexport interface GetComments {\n    link: 'api:v1/rescue/getComments?pageNo=0&pageSize=10&postId=1230'\n    response: APIResponse\n}\n\nexport interface GetFollowers {\n    link: 'api:v1/rescue/getUserFollowers?userId=1230'\n    response: APIResponse\n}\n\nexport interface GetFollowing {\n    link: 'api:v1/rescue/getUserFollowing?userId=1230'\n    response: APIResponse\n}\n\nexport interface AppLaunchAction {\n    actionId: number\n    action: string\n    isActive: boolean\n    subject?: string\n}\n\nexport interface User {\n    usesId: number\n\n    coverImage: string\n    following: boolean\n    gender: string\n    isOwnProfile: number\n    isRescuer: boolean\n    latitude: number\n    longitude: number\n    numberOfFollowers: number\n    numberOfFollowing: number\n    numberOfPosts: number\n    numberOfRescuesCompleted: number\n    numberOfRescuesCreated: number\n    numberOfRescuesInProgress: number\n    profileImage: string\n    rescuer: boolean\n    userAddress: string\n    userContacts: string\n    userEmail: string\n    userName: string\n    badge: {\n        badgeId: number\n        badgeName: string\n        badgeDescription: string\n        recuesCompletionNeeded: number\n    }\n    setting: {\n        showMyContacts: boolean\n        getNotifications: boolean\n    }\n}\n\nexport interface PostType {\n    postTypeId: number\n    postType: string\n}\n\nexport interface PostedByUser {\n    usesId: number\n    badgeName: string\n    following: boolean\n    profileImage: string\n    rescuer: boolean\n    userName: string\n}\n\nexport interface UserPost {\n    postId: number\n    commentsCount: number\n    isUserReactedToPost: boolean\n    ownPage: boolean\n    postBy: PostedByUser\n    postImage: string\n    postTime: string\n    postType: PostType\n    postVideo: string\n    reactionsCount: number\n    timeAgo: string\n\n    adCorporateLogoUrl: string | null\n    corporateDescription: string | null\n    corporateName: string | null\n}\n\nexport interface UserPosts {\n    isRecent: boolean\n    feed: UserPost[]\n}\n\nexport interface Rescues {\n    rescueId: number\n    animalImageUrl: string\n    distance: number\n    distanceAway: string\n    emergencyType: string\n    postedBy: string\n    postedMinAgo: string\n    rescueDate: Date\n    rescuedPetName: string\n    rescueLocality: string\n    rescuers: {\n        contact: number\n        name: string\n        profileId: number\n        profileImageUrl: string\n        rescues: boolean\n        showMyNumber: boolean\n    }\n    rescueStatus: string\n    viewsCont: number\n}\n\nexport interface RescueLists {\n    rescues: Rescues[]\n}\n\nexport interface Comment {\n    commentId: number\n    comment: string\n    commentedUseName: string\n    commentedUserId: number\n    timeAgo: string\n}\n\nexport interface Comments {\n    comments: Comment[]\n}\n\nexport interface Follower {\n    userId: number\n    userName: string\n    profileImage: string\n    areYouFollowing: boolean\n    showRemoveOption: boolean\n}\n\nexport interface Following extends Follower {}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PostedByUser.html":{"url":"interfaces/PostedByUser.html","title":"interface - PostedByUser","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  PostedByUser\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/domain.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        badgeName\n                                \n                                \n                                        following\n                                \n                                \n                                        profileImage\n                                \n                                \n                                        rescuer\n                                \n                                \n                                        userName\n                                \n                                \n                                        usesId\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        badgeName\n                                    \n                                \n                                \n                                    \n                                        badgeName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        following\n                                    \n                                \n                                \n                                    \n                                        following:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        profileImage\n                                    \n                                \n                                \n                                    \n                                        profileImage:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        rescuer\n                                    \n                                \n                                \n                                    \n                                        rescuer:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        userName\n                                    \n                                \n                                \n                                    \n                                        userName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        usesId\n                                    \n                                \n                                \n                                    \n                                        usesId:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { HttpStatus } from '@nestjs/common'\n\nexport type Result =\n    | GetAppLaunchData\n    | GetUserProfile\n    | GetUserPosts\n    | GetComments\n    | GetRescueList\n    | GetFollowers\n    | GetFollowing\n\nexport type APIError = Error | string | null\n\nexport interface APIResponse {\n    data: T\n    error: APIError\n    message: string | string[]\n    statusCode: HttpStatus\n\n    count?: number\n    page?: number\n    pageCount?: number\n    total?: number\n}\n\nexport interface GetAppLaunchData {\n    link: 'api:/'\n    response: APIResponse\n}\n\nexport interface GetUserProfile {\n    link: 'api:v1/user/getUserProfile?userId=25'\n    response: APIResponse\n}\n\nexport interface GetUserPosts {\n    link: 'api:v1/user/getUserPosts?pageNo=0&pageSize=25'\n    response: APIResponse\n}\n\nexport interface GetRescueList {\n    link: 'api:v1/rescue/getRescueList?pageNo=0&pageSize=10&status=pending|inProgress|completed|nearest'\n    response: APIResponse\n}\n\nexport interface GetComments {\n    link: 'api:v1/rescue/getComments?pageNo=0&pageSize=10&postId=1230'\n    response: APIResponse\n}\n\nexport interface GetFollowers {\n    link: 'api:v1/rescue/getUserFollowers?userId=1230'\n    response: APIResponse\n}\n\nexport interface GetFollowing {\n    link: 'api:v1/rescue/getUserFollowing?userId=1230'\n    response: APIResponse\n}\n\nexport interface AppLaunchAction {\n    actionId: number\n    action: string\n    isActive: boolean\n    subject?: string\n}\n\nexport interface User {\n    usesId: number\n\n    coverImage: string\n    following: boolean\n    gender: string\n    isOwnProfile: number\n    isRescuer: boolean\n    latitude: number\n    longitude: number\n    numberOfFollowers: number\n    numberOfFollowing: number\n    numberOfPosts: number\n    numberOfRescuesCompleted: number\n    numberOfRescuesCreated: number\n    numberOfRescuesInProgress: number\n    profileImage: string\n    rescuer: boolean\n    userAddress: string\n    userContacts: string\n    userEmail: string\n    userName: string\n    badge: {\n        badgeId: number\n        badgeName: string\n        badgeDescription: string\n        recuesCompletionNeeded: number\n    }\n    setting: {\n        showMyContacts: boolean\n        getNotifications: boolean\n    }\n}\n\nexport interface PostType {\n    postTypeId: number\n    postType: string\n}\n\nexport interface PostedByUser {\n    usesId: number\n    badgeName: string\n    following: boolean\n    profileImage: string\n    rescuer: boolean\n    userName: string\n}\n\nexport interface UserPost {\n    postId: number\n    commentsCount: number\n    isUserReactedToPost: boolean\n    ownPage: boolean\n    postBy: PostedByUser\n    postImage: string\n    postTime: string\n    postType: PostType\n    postVideo: string\n    reactionsCount: number\n    timeAgo: string\n\n    adCorporateLogoUrl: string | null\n    corporateDescription: string | null\n    corporateName: string | null\n}\n\nexport interface UserPosts {\n    isRecent: boolean\n    feed: UserPost[]\n}\n\nexport interface Rescues {\n    rescueId: number\n    animalImageUrl: string\n    distance: number\n    distanceAway: string\n    emergencyType: string\n    postedBy: string\n    postedMinAgo: string\n    rescueDate: Date\n    rescuedPetName: string\n    rescueLocality: string\n    rescuers: {\n        contact: number\n        name: string\n        profileId: number\n        profileImageUrl: string\n        rescues: boolean\n        showMyNumber: boolean\n    }\n    rescueStatus: string\n    viewsCont: number\n}\n\nexport interface RescueLists {\n    rescues: Rescues[]\n}\n\nexport interface Comment {\n    commentId: number\n    comment: string\n    commentedUseName: string\n    commentedUserId: number\n    timeAgo: string\n}\n\nexport interface Comments {\n    comments: Comment[]\n}\n\nexport interface Follower {\n    userId: number\n    userName: string\n    profileImage: string\n    areYouFollowing: boolean\n    showRemoveOption: boolean\n}\n\nexport interface Following extends Follower {}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/QueryFailedFilter.html":{"url":"classes/QueryFailedFilter.html","title":"class - QueryFailedFilter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  QueryFailedFilter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/infra/filters/query-failed.filter.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        ExceptionFilter\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                catch\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            catch\n                        \n                        \n                    \n                \n            \n            \n                \ncatch(exception: QueryFailedError, host: ArgumentsHost)\n                \n            \n\n\n            \n                \n                    Defined in src/infra/filters/query-failed.filter.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    exception\n                                    \n                                            QueryFailedError\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    host\n                                    \n                                            ArgumentsHost\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n    ArgumentsHost,\n    Catch,\n    ExceptionFilter,\n    HttpException,\n    HttpStatus,\n} from '@nestjs/common'\n\nimport { QueryFailedError } from 'typeorm'\n\n@Catch(QueryFailedError)\nexport class QueryFailedFilter implements ExceptionFilter {\n    catch(exception: QueryFailedError, host: ArgumentsHost) {\n        const ctx = host.switchToHttp()\n        const response = ctx.getResponse()\n        const request = ctx.getRequest()\n        const status = HttpStatus.PRECONDITION_FAILED\n\n        // @ts-ignore\n        const { message, errno, code, name, query, parameters } = exception\n\n        // @ts-ignore\n        response.status(status).json({\n            code,\n            errno,\n            message,\n            statusCode: status,\n\n            path: request.url,\n            // timestamp: new Date().toISOString(),\n        })\n    }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/RequestGuard.html":{"url":"guards/RequestGuard.html","title":"guard - RequestGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    RequestGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/infra/guards/req.ts\n            \n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                bindRequestHelpers\n                            \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            bindRequestHelpers\n                        \n                        \n                    \n                \n            \n            \n                \nbindRequestHelpers(request: any)\n                \n            \n\n\n            \n                \n                    Defined in src/infra/guards/req.ts:21\n                \n            \n\n\n            \n                \n                    Bind Request Helpers\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            canActivate\n                        \n                        \n                    \n                \n            \n            \n                \ncanActivate(context: ExecutionContext)\n                \n            \n\n\n            \n                \n                    Defined in src/infra/guards/req.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     boolean | Promise | Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable, CanActivate, ExecutionContext } from '@nestjs/common'\n\nimport { Observable } from 'rxjs'\n\n@Injectable()\nexport class RequestGuard implements CanActivate {\n    canActivate(\n        context: ExecutionContext,\n    ): boolean | Promise | Observable {\n        this.bindRequestHelpers(context.switchToHttp().getRequest())\n\n        return true\n    }\n\n    /**\n     * Bind Request Helpers\n     *\n     * @param request\n     */\n    bindRequestHelpers(request: any): any {\n        function all(): Record {\n            const inputs = { ...request.query, ...request.body, ...request.params }\n\n            // eslint-disable-next-line guard-for-in,no-restricted-syntax\n            for (const key in inputs) {\n                const value = inputs[key]\n                if (typeof value === 'string' || value instanceof String) {\n                    inputs[key] = value.trim()\n                }\n            }\n\n            return inputs\n        }\n\n        request.all = all\n        return request\n    }\n}\n\n        \n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/RescueLists.html":{"url":"interfaces/RescueLists.html","title":"interface - RescueLists","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  RescueLists\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/domain.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        rescues\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        rescues\n                                    \n                                \n                                \n                                    \n                                        rescues:         Rescues[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Rescues[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { HttpStatus } from '@nestjs/common'\n\nexport type Result =\n    | GetAppLaunchData\n    | GetUserProfile\n    | GetUserPosts\n    | GetComments\n    | GetRescueList\n    | GetFollowers\n    | GetFollowing\n\nexport type APIError = Error | string | null\n\nexport interface APIResponse {\n    data: T\n    error: APIError\n    message: string | string[]\n    statusCode: HttpStatus\n\n    count?: number\n    page?: number\n    pageCount?: number\n    total?: number\n}\n\nexport interface GetAppLaunchData {\n    link: 'api:/'\n    response: APIResponse\n}\n\nexport interface GetUserProfile {\n    link: 'api:v1/user/getUserProfile?userId=25'\n    response: APIResponse\n}\n\nexport interface GetUserPosts {\n    link: 'api:v1/user/getUserPosts?pageNo=0&pageSize=25'\n    response: APIResponse\n}\n\nexport interface GetRescueList {\n    link: 'api:v1/rescue/getRescueList?pageNo=0&pageSize=10&status=pending|inProgress|completed|nearest'\n    response: APIResponse\n}\n\nexport interface GetComments {\n    link: 'api:v1/rescue/getComments?pageNo=0&pageSize=10&postId=1230'\n    response: APIResponse\n}\n\nexport interface GetFollowers {\n    link: 'api:v1/rescue/getUserFollowers?userId=1230'\n    response: APIResponse\n}\n\nexport interface GetFollowing {\n    link: 'api:v1/rescue/getUserFollowing?userId=1230'\n    response: APIResponse\n}\n\nexport interface AppLaunchAction {\n    actionId: number\n    action: string\n    isActive: boolean\n    subject?: string\n}\n\nexport interface User {\n    usesId: number\n\n    coverImage: string\n    following: boolean\n    gender: string\n    isOwnProfile: number\n    isRescuer: boolean\n    latitude: number\n    longitude: number\n    numberOfFollowers: number\n    numberOfFollowing: number\n    numberOfPosts: number\n    numberOfRescuesCompleted: number\n    numberOfRescuesCreated: number\n    numberOfRescuesInProgress: number\n    profileImage: string\n    rescuer: boolean\n    userAddress: string\n    userContacts: string\n    userEmail: string\n    userName: string\n    badge: {\n        badgeId: number\n        badgeName: string\n        badgeDescription: string\n        recuesCompletionNeeded: number\n    }\n    setting: {\n        showMyContacts: boolean\n        getNotifications: boolean\n    }\n}\n\nexport interface PostType {\n    postTypeId: number\n    postType: string\n}\n\nexport interface PostedByUser {\n    usesId: number\n    badgeName: string\n    following: boolean\n    profileImage: string\n    rescuer: boolean\n    userName: string\n}\n\nexport interface UserPost {\n    postId: number\n    commentsCount: number\n    isUserReactedToPost: boolean\n    ownPage: boolean\n    postBy: PostedByUser\n    postImage: string\n    postTime: string\n    postType: PostType\n    postVideo: string\n    reactionsCount: number\n    timeAgo: string\n\n    adCorporateLogoUrl: string | null\n    corporateDescription: string | null\n    corporateName: string | null\n}\n\nexport interface UserPosts {\n    isRecent: boolean\n    feed: UserPost[]\n}\n\nexport interface Rescues {\n    rescueId: number\n    animalImageUrl: string\n    distance: number\n    distanceAway: string\n    emergencyType: string\n    postedBy: string\n    postedMinAgo: string\n    rescueDate: Date\n    rescuedPetName: string\n    rescueLocality: string\n    rescuers: {\n        contact: number\n        name: string\n        profileId: number\n        profileImageUrl: string\n        rescues: boolean\n        showMyNumber: boolean\n    }\n    rescueStatus: string\n    viewsCont: number\n}\n\nexport interface RescueLists {\n    rescues: Rescues[]\n}\n\nexport interface Comment {\n    commentId: number\n    comment: string\n    commentedUseName: string\n    commentedUserId: number\n    timeAgo: string\n}\n\nexport interface Comments {\n    comments: Comment[]\n}\n\nexport interface Follower {\n    userId: number\n    userName: string\n    profileImage: string\n    areYouFollowing: boolean\n    showRemoveOption: boolean\n}\n\nexport interface Following extends Follower {}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Rescues.html":{"url":"interfaces/Rescues.html","title":"interface - Rescues","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Rescues\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/domain.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        animalImageUrl\n                                \n                                \n                                        distance\n                                \n                                \n                                        distanceAway\n                                \n                                \n                                        emergencyType\n                                \n                                \n                                        postedBy\n                                \n                                \n                                        postedMinAgo\n                                \n                                \n                                        rescueDate\n                                \n                                \n                                        rescuedPetName\n                                \n                                \n                                        rescueId\n                                \n                                \n                                        rescueLocality\n                                \n                                \n                                        rescuers\n                                \n                                \n                                        rescueStatus\n                                \n                                \n                                        viewsCont\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        animalImageUrl\n                                    \n                                \n                                \n                                    \n                                        animalImageUrl:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        distance\n                                    \n                                \n                                \n                                    \n                                        distance:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        distanceAway\n                                    \n                                \n                                \n                                    \n                                        distanceAway:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        emergencyType\n                                    \n                                \n                                \n                                    \n                                        emergencyType:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        postedBy\n                                    \n                                \n                                \n                                    \n                                        postedBy:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        postedMinAgo\n                                    \n                                \n                                \n                                    \n                                        postedMinAgo:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        rescueDate\n                                    \n                                \n                                \n                                    \n                                        rescueDate:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        rescuedPetName\n                                    \n                                \n                                \n                                    \n                                        rescuedPetName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        rescueId\n                                    \n                                \n                                \n                                    \n                                        rescueId:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        rescueLocality\n                                    \n                                \n                                \n                                    \n                                        rescueLocality:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        rescuers\n                                    \n                                \n                                \n                                    \n                                        rescuers:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        rescueStatus\n                                    \n                                \n                                \n                                    \n                                        rescueStatus:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        viewsCont\n                                    \n                                \n                                \n                                    \n                                        viewsCont:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { HttpStatus } from '@nestjs/common'\n\nexport type Result =\n    | GetAppLaunchData\n    | GetUserProfile\n    | GetUserPosts\n    | GetComments\n    | GetRescueList\n    | GetFollowers\n    | GetFollowing\n\nexport type APIError = Error | string | null\n\nexport interface APIResponse {\n    data: T\n    error: APIError\n    message: string | string[]\n    statusCode: HttpStatus\n\n    count?: number\n    page?: number\n    pageCount?: number\n    total?: number\n}\n\nexport interface GetAppLaunchData {\n    link: 'api:/'\n    response: APIResponse\n}\n\nexport interface GetUserProfile {\n    link: 'api:v1/user/getUserProfile?userId=25'\n    response: APIResponse\n}\n\nexport interface GetUserPosts {\n    link: 'api:v1/user/getUserPosts?pageNo=0&pageSize=25'\n    response: APIResponse\n}\n\nexport interface GetRescueList {\n    link: 'api:v1/rescue/getRescueList?pageNo=0&pageSize=10&status=pending|inProgress|completed|nearest'\n    response: APIResponse\n}\n\nexport interface GetComments {\n    link: 'api:v1/rescue/getComments?pageNo=0&pageSize=10&postId=1230'\n    response: APIResponse\n}\n\nexport interface GetFollowers {\n    link: 'api:v1/rescue/getUserFollowers?userId=1230'\n    response: APIResponse\n}\n\nexport interface GetFollowing {\n    link: 'api:v1/rescue/getUserFollowing?userId=1230'\n    response: APIResponse\n}\n\nexport interface AppLaunchAction {\n    actionId: number\n    action: string\n    isActive: boolean\n    subject?: string\n}\n\nexport interface User {\n    usesId: number\n\n    coverImage: string\n    following: boolean\n    gender: string\n    isOwnProfile: number\n    isRescuer: boolean\n    latitude: number\n    longitude: number\n    numberOfFollowers: number\n    numberOfFollowing: number\n    numberOfPosts: number\n    numberOfRescuesCompleted: number\n    numberOfRescuesCreated: number\n    numberOfRescuesInProgress: number\n    profileImage: string\n    rescuer: boolean\n    userAddress: string\n    userContacts: string\n    userEmail: string\n    userName: string\n    badge: {\n        badgeId: number\n        badgeName: string\n        badgeDescription: string\n        recuesCompletionNeeded: number\n    }\n    setting: {\n        showMyContacts: boolean\n        getNotifications: boolean\n    }\n}\n\nexport interface PostType {\n    postTypeId: number\n    postType: string\n}\n\nexport interface PostedByUser {\n    usesId: number\n    badgeName: string\n    following: boolean\n    profileImage: string\n    rescuer: boolean\n    userName: string\n}\n\nexport interface UserPost {\n    postId: number\n    commentsCount: number\n    isUserReactedToPost: boolean\n    ownPage: boolean\n    postBy: PostedByUser\n    postImage: string\n    postTime: string\n    postType: PostType\n    postVideo: string\n    reactionsCount: number\n    timeAgo: string\n\n    adCorporateLogoUrl: string | null\n    corporateDescription: string | null\n    corporateName: string | null\n}\n\nexport interface UserPosts {\n    isRecent: boolean\n    feed: UserPost[]\n}\n\nexport interface Rescues {\n    rescueId: number\n    animalImageUrl: string\n    distance: number\n    distanceAway: string\n    emergencyType: string\n    postedBy: string\n    postedMinAgo: string\n    rescueDate: Date\n    rescuedPetName: string\n    rescueLocality: string\n    rescuers: {\n        contact: number\n        name: string\n        profileId: number\n        profileImageUrl: string\n        rescues: boolean\n        showMyNumber: boolean\n    }\n    rescueStatus: string\n    viewsCont: number\n}\n\nexport interface RescueLists {\n    rescues: Rescues[]\n}\n\nexport interface Comment {\n    commentId: number\n    comment: string\n    commentedUseName: string\n    commentedUserId: number\n    timeAgo: string\n}\n\nexport interface Comments {\n    comments: Comment[]\n}\n\nexport interface Follower {\n    userId: number\n    userName: string\n    profileImage: string\n    areYouFollowing: boolean\n    showRemoveOption: boolean\n}\n\nexport interface Following extends Follower {}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Response.html":{"url":"interfaces/Response.html","title":"interface - Response","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Response\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/infra/interceptors/transform.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        data\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                    \n                                \n                                \n                                    \n                                        data:     T\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     T\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {\n    Injectable,\n    NestInterceptor,\n    ExecutionContext,\n    CallHandler,\n} from '@nestjs/common'\n\nimport { Observable } from 'rxjs'\nimport { map } from 'rxjs/operators'\n\nexport interface Response {\n    data: T\n}\n\n@Injectable()\nexport class TransformInterceptor implements NestInterceptor> {\n    intercept(\n        context: ExecutionContext,\n        next: CallHandler,\n    ): Observable> {\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n        return next.handle().pipe(map((data) => ({ data })))\n    }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/ResponseGuard.html":{"url":"guards/ResponseGuard.html","title":"guard - ResponseGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    ResponseGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/infra/guards/res.ts\n            \n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                bindResponseHelpers\n                            \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            bindResponseHelpers\n                        \n                        \n                    \n                \n            \n            \n                \nbindResponseHelpers(response: any)\n                \n            \n\n\n            \n                \n                    Defined in src/infra/guards/res.ts:21\n                \n            \n\n\n            \n                \n                    Bind Response Helpers\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    response\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            canActivate\n                        \n                        \n                    \n                \n            \n            \n                \ncanActivate(context: ExecutionContext)\n                \n            \n\n\n            \n                \n                    Defined in src/infra/guards/res.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     boolean | Promise | Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable, CanActivate, ExecutionContext } from '@nestjs/common'\n\nimport { Observable } from 'rxjs'\n\n@Injectable()\nexport class ResponseGuard implements CanActivate {\n    canActivate(\n        context: ExecutionContext,\n    ): boolean | Promise | Observable {\n        this.bindResponseHelpers(context.switchToHttp().getResponse())\n\n        return true\n    }\n\n    /**\n     * Bind Response Helpers\n     *\n     * @param response\n     */\n    bindResponseHelpers(response: any): any {\n        function success(\n            data: Record | Array | string,\n            status = 200,\n        ) {\n            return response.status(status).json({\n                success: true,\n                code: status,\n                data,\n            })\n        }\n\n        // eslint-disable-next-line @typescript-eslint/no-shadow\n        function error(error: Record | string, status = 401) {\n            let message = 'Something went wrong!'\n            let errors = null\n            if (error instanceof Object) {\n                message = error.message\n                errors = error.errors\n            } else {\n                message = error\n            }\n\n            return response.status(status).json({\n                success: false,\n                code: status,\n                message,\n                errors,\n            })\n        }\n\n        function noContent() {\n            return response.status(204).end()\n        }\n\n        function withMeta(data: Record, status = 200) {\n            const { data: dataObj, ...meta } = data\n\n            return response.status(status).json({\n                success: true,\n                code: status,\n                data: dataObj,\n                meta,\n            })\n        }\n\n        response.success = success\n        response.error = error\n        response.noContent = noContent\n        response.withMeta = withMeta\n\n        return response\n    }\n}\n\n        \n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TimeoutInterceptor.html":{"url":"injectables/TimeoutInterceptor.html","title":"injectable - TimeoutInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  TimeoutInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/infra/interceptors/timeout.ts\n        \n\n            \n                Description\n            \n            \n                Timeout interceptor is Observer which terminate request if it takes more than timeout value\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            intercept\n                        \n                        \n                    \n                \n            \n            \n                \nintercept(context: ExecutionContext, next: CallHandler)\n                \n            \n\n\n            \n                \n                    Defined in src/infra/interceptors/timeout.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                            CallHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n    Injectable,\n    NestInterceptor,\n    ExecutionContext,\n    CallHandler,\n    RequestTimeoutException,\n} from '@nestjs/common'\n\nimport { Observable, throwError, TimeoutError } from 'rxjs'\nimport { catchError, timeout } from 'rxjs/operators'\n\n/**\n * Timeout interceptor is Observer which terminate request if it takes more than timeout value\n */\n@Injectable()\nexport class TimeoutInterceptor implements NestInterceptor {\n    intercept(context: ExecutionContext, next: CallHandler): Observable {\n        return next.handle().pipe(\n            timeout(10000), // end request after 10_000 milliseconds\n\n            catchError((e) => {\n                if (e instanceof TimeoutError) {\n                    return throwError(new RequestTimeoutException())\n                }\n\n                return throwError(e)\n            }),\n        )\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TransformInterceptor.html":{"url":"injectables/TransformInterceptor.html","title":"injectable - TransformInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  TransformInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/infra/interceptors/transform.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            intercept\n                        \n                        \n                    \n                \n            \n            \n                \nintercept(context: ExecutionContext, next: CallHandler)\n                \n            \n\n\n            \n                \n                    Defined in src/infra/interceptors/transform.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                            CallHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n    Injectable,\n    NestInterceptor,\n    ExecutionContext,\n    CallHandler,\n} from '@nestjs/common'\n\nimport { Observable } from 'rxjs'\nimport { map } from 'rxjs/operators'\n\nexport interface Response {\n    data: T\n}\n\n@Injectable()\nexport class TransformInterceptor implements NestInterceptor> {\n    intercept(\n        context: ExecutionContext,\n        next: CallHandler,\n    ): Observable> {\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n        return next.handle().pipe(map((data) => ({ data })))\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateCatDto.html":{"url":"classes/UpdateCatDto.html","title":"class - UpdateCatDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateCatDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/cats/datum/cat.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                    Optional\n                                age\n                            \n                            \n                                    Readonly\n                                    Optional\n                                breed\n                            \n                            \n                                    Readonly\n                                    Optional\n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                                Optional\n                            age\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'The age of the Cat', example: 1})@IsInt()@IsPositive()@IsNotEmpty()@IsOptional()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/cats/datum/cat.dto.ts:56\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                                Optional\n                            breed\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'The breed of the Cat', example: 'Maine Coon'})@IsString()@IsNotEmpty()@MinLength(2)@MaxLength(36)@IsOptional()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/cats/datum/cat.dto.ts:64\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                                Optional\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'The name of the Cat', example: 'Kitty'})@IsString()@IsNotEmpty()@MinLength(2)@MaxLength(36)@IsOptional()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/cats/datum/cat.dto.ts:49\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiHideProperty, ApiProperty } from '@nestjs/swagger'\n\nimport { Exclude } from 'class-transformer'\nimport {\n    IsInt,\n    IsString,\n    MinLength,\n    IsNotEmpty,\n    IsPositive,\n    IsOptional,\n    MaxLength,\n} from 'class-validator'\n\nexport class CreateCatDto {\n    @ApiProperty({ description: 'The name of the Cat', example: 'Kitty' })\n    @IsString()\n    @IsNotEmpty()\n    @MinLength(2)\n    @MaxLength(36)\n    readonly name: string\n\n    @ApiProperty({ description: 'ID of the Owner', example: 1 })\n    @IsInt()\n    @IsNotEmpty()\n    readonly userId: number\n\n    @ApiProperty({ description: 'The age of the Cat', example: 1 })\n    @IsInt()\n    @IsPositive()\n    @IsNotEmpty()\n    readonly age: number\n\n    @ApiProperty({ description: 'The breed of the Cat', example: 'Maine Coon' })\n    @IsString()\n    @IsNotEmpty()\n    @MinLength(2)\n    @MaxLength(36)\n    readonly breed: string\n}\n\nexport class UpdateCatDto {\n    @ApiProperty({ description: 'The name of the Cat', example: 'Kitty' })\n    @IsString()\n    @IsNotEmpty()\n    @MinLength(2)\n    @MaxLength(36)\n    @IsOptional()\n    readonly name?: string\n\n    @ApiProperty({ description: 'The age of the Cat', example: 1 })\n    @IsInt()\n    @IsPositive()\n    @IsNotEmpty()\n    @IsOptional()\n    readonly age?: number\n\n    @ApiProperty({ description: 'The breed of the Cat', example: 'Maine Coon' })\n    @IsString()\n    @IsNotEmpty()\n    @MinLength(2)\n    @MaxLength(36)\n    @IsOptional()\n    readonly breed?: string\n}\n\nexport class GetCatResponseDto {\n    @ApiProperty({ type: 'number' })\n    id: string\n\n    @ApiProperty({ description: 'ID of the Owner', example: 1 })\n    userId: number\n\n    @ApiProperty({ description: 'The name of the Cat', example: 'Kitty' })\n    name: string\n\n    @ApiProperty({ description: 'The age of the Cat', example: 1 })\n    age: number\n\n    @ApiProperty({ description: 'The breed of the Cat', example: 'Maine Coon' })\n    breed: string\n\n    @ApiHideProperty()\n    @Exclude()\n    createdAt: any\n\n    @ApiHideProperty()\n    @Exclude()\n    updatedAt: any\n\n    @ApiHideProperty()\n    @Exclude()\n    deletedAt: any\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateUserDto.html":{"url":"classes/UpdateUserDto.html","title":"class - UpdateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/datum/user.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                    Optional\n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                                Optional\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'The name of the User', example: 'Kitty'})@IsString()@IsNotEmpty()@MinLength(2)@MaxLength(36)@IsOptional()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/datum/user.dto.ts:29\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiHideProperty, ApiProperty } from '@nestjs/swagger'\n\nimport { Exclude } from 'class-transformer'\nimport {\n    IsString,\n    MinLength,\n    IsNotEmpty,\n    IsOptional,\n    MaxLength,\n} from 'class-validator'\n\nexport class CreateUserDto {\n    @ApiProperty({ description: 'The name of the User', example: 'Name' })\n    @IsString()\n    @IsNotEmpty()\n    @MinLength(2)\n    @MaxLength(36)\n    readonly name: string\n}\n\nexport class UpdateUserDto {\n    @ApiProperty({ description: 'The name of the User', example: 'Kitty' })\n    @IsString()\n    @IsNotEmpty()\n    @MinLength(2)\n    @MaxLength(36)\n    @IsOptional()\n    readonly name?: string\n}\n\nexport class GetUserResponseDto {\n    @ApiProperty({ type: 'number' })\n    id: string\n\n    @ApiProperty({ description: 'The name of the User', example: 'Name' })\n    name: string\n\n    @ApiHideProperty()\n    @Exclude()\n    createdAt: any\n\n    @ApiHideProperty()\n    @Exclude()\n    updatedAt: any\n\n    @ApiHideProperty()\n    @Exclude()\n    deletedAt: any\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/User.html":{"url":"classes/User.html","title":"class - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/datum/user.entity.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                cats\n                            \n                            \n                                createdAt\n                            \n                            \n                                deletedAt\n                            \n                            \n                                    Static\n                                exclude\n                            \n                            \n                                id\n                            \n                            \n                                name\n                            \n                            \n                                    Static\n                                    Readonly\n                                NAME_LENGTH\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            cats\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Cat[]\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @OneToMany(undefined, undefined, {lazy: false, nullable: false})@Type(undefined)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/datum/user.entity.ts:48\n                            \n                        \n\n                \n                    \n                        Relations\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @CreateDateColumn()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/datum/user.entity.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            deletedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @DeleteDateColumn()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/datum/user.entity.ts:37\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            exclude\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : ['createdAt', 'updatedAt', 'deletedAt']\n                        \n                    \n                        \n                            \n                                    Defined in src/users/datum/user.entity.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'User unique ID', example: '36635263'})@PrimaryGeneratedColumn()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/datum/user.entity.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'The name of the User', example: 'Name'})@Column({name: 'user_name', length: undefined})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/datum/user.entity.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                                Readonly\n                            NAME_LENGTH\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 36\n                        \n                    \n                        \n                            \n                                    Defined in src/users/datum/user.entity.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @UpdateDateColumn()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/datum/user.entity.ts:34\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger'\n\nimport { Type } from 'class-transformer'\nimport {\n    Column,\n    CreateDateColumn,\n    Entity,\n    PrimaryGeneratedColumn,\n    UpdateDateColumn,\n    DeleteDateColumn,\n    OneToMany,\n} from 'typeorm'\n\nimport { Cat } from '../../cats/datum/cat.entity' // eslint-disable-line import/no-cycle\n\n@Entity({ name: 'users' })\nexport class User {\n    public static readonly NAME_LENGTH = 36\n\n    public static exclude = ['createdAt', 'updatedAt', 'deletedAt']\n\n    @ApiProperty({ description: 'User unique ID', example: '36635263' })\n    @PrimaryGeneratedColumn()\n    id: number\n\n    @ApiProperty({ description: 'The name of the User', example: 'Name' })\n    @Column({ name: 'user_name', length: User.NAME_LENGTH })\n    name: string\n\n    @CreateDateColumn()\n    createdAt: any\n\n    @UpdateDateColumn()\n    updatedAt: any\n\n    @DeleteDateColumn()\n    deletedAt: any\n\n    /**\n     * Relations\n     */\n\n    @OneToMany((type) => Cat, (c) => c.user, {\n        lazy: false, // true sets relation to be lazy, lazy relations are promise of that entity\n        nullable: false, // if relation column value can be nullable or not, {LEFT JOIN  INNER JOIN}?}\n    })\n    @Type((t) => Cat)\n    cats: Cat[]\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UserPost.html":{"url":"interfaces/UserPost.html","title":"interface - UserPost","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  UserPost\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/domain.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        adCorporateLogoUrl\n                                \n                                \n                                        commentsCount\n                                \n                                \n                                        corporateDescription\n                                \n                                \n                                        corporateName\n                                \n                                \n                                        isUserReactedToPost\n                                \n                                \n                                        ownPage\n                                \n                                \n                                        postBy\n                                \n                                \n                                        postId\n                                \n                                \n                                        postImage\n                                \n                                \n                                        postTime\n                                \n                                \n                                        postType\n                                \n                                \n                                        postVideo\n                                \n                                \n                                        reactionsCount\n                                \n                                \n                                        timeAgo\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        adCorporateLogoUrl\n                                    \n                                \n                                \n                                    \n                                        adCorporateLogoUrl:     string | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        commentsCount\n                                    \n                                \n                                \n                                    \n                                        commentsCount:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        corporateDescription\n                                    \n                                \n                                \n                                    \n                                        corporateDescription:     string | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        corporateName\n                                    \n                                \n                                \n                                    \n                                        corporateName:     string | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isUserReactedToPost\n                                    \n                                \n                                \n                                    \n                                        isUserReactedToPost:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ownPage\n                                    \n                                \n                                \n                                    \n                                        ownPage:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        postBy\n                                    \n                                \n                                \n                                    \n                                        postBy:         PostedByUser\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         PostedByUser\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        postId\n                                    \n                                \n                                \n                                    \n                                        postId:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        postImage\n                                    \n                                \n                                \n                                    \n                                        postImage:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        postTime\n                                    \n                                \n                                \n                                    \n                                        postTime:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        postType\n                                    \n                                \n                                \n                                    \n                                        postType:         PostType\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         PostType\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        postVideo\n                                    \n                                \n                                \n                                    \n                                        postVideo:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        reactionsCount\n                                    \n                                \n                                \n                                    \n                                        reactionsCount:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        timeAgo\n                                    \n                                \n                                \n                                    \n                                        timeAgo:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { HttpStatus } from '@nestjs/common'\n\nexport type Result =\n    | GetAppLaunchData\n    | GetUserProfile\n    | GetUserPosts\n    | GetComments\n    | GetRescueList\n    | GetFollowers\n    | GetFollowing\n\nexport type APIError = Error | string | null\n\nexport interface APIResponse {\n    data: T\n    error: APIError\n    message: string | string[]\n    statusCode: HttpStatus\n\n    count?: number\n    page?: number\n    pageCount?: number\n    total?: number\n}\n\nexport interface GetAppLaunchData {\n    link: 'api:/'\n    response: APIResponse\n}\n\nexport interface GetUserProfile {\n    link: 'api:v1/user/getUserProfile?userId=25'\n    response: APIResponse\n}\n\nexport interface GetUserPosts {\n    link: 'api:v1/user/getUserPosts?pageNo=0&pageSize=25'\n    response: APIResponse\n}\n\nexport interface GetRescueList {\n    link: 'api:v1/rescue/getRescueList?pageNo=0&pageSize=10&status=pending|inProgress|completed|nearest'\n    response: APIResponse\n}\n\nexport interface GetComments {\n    link: 'api:v1/rescue/getComments?pageNo=0&pageSize=10&postId=1230'\n    response: APIResponse\n}\n\nexport interface GetFollowers {\n    link: 'api:v1/rescue/getUserFollowers?userId=1230'\n    response: APIResponse\n}\n\nexport interface GetFollowing {\n    link: 'api:v1/rescue/getUserFollowing?userId=1230'\n    response: APIResponse\n}\n\nexport interface AppLaunchAction {\n    actionId: number\n    action: string\n    isActive: boolean\n    subject?: string\n}\n\nexport interface User {\n    usesId: number\n\n    coverImage: string\n    following: boolean\n    gender: string\n    isOwnProfile: number\n    isRescuer: boolean\n    latitude: number\n    longitude: number\n    numberOfFollowers: number\n    numberOfFollowing: number\n    numberOfPosts: number\n    numberOfRescuesCompleted: number\n    numberOfRescuesCreated: number\n    numberOfRescuesInProgress: number\n    profileImage: string\n    rescuer: boolean\n    userAddress: string\n    userContacts: string\n    userEmail: string\n    userName: string\n    badge: {\n        badgeId: number\n        badgeName: string\n        badgeDescription: string\n        recuesCompletionNeeded: number\n    }\n    setting: {\n        showMyContacts: boolean\n        getNotifications: boolean\n    }\n}\n\nexport interface PostType {\n    postTypeId: number\n    postType: string\n}\n\nexport interface PostedByUser {\n    usesId: number\n    badgeName: string\n    following: boolean\n    profileImage: string\n    rescuer: boolean\n    userName: string\n}\n\nexport interface UserPost {\n    postId: number\n    commentsCount: number\n    isUserReactedToPost: boolean\n    ownPage: boolean\n    postBy: PostedByUser\n    postImage: string\n    postTime: string\n    postType: PostType\n    postVideo: string\n    reactionsCount: number\n    timeAgo: string\n\n    adCorporateLogoUrl: string | null\n    corporateDescription: string | null\n    corporateName: string | null\n}\n\nexport interface UserPosts {\n    isRecent: boolean\n    feed: UserPost[]\n}\n\nexport interface Rescues {\n    rescueId: number\n    animalImageUrl: string\n    distance: number\n    distanceAway: string\n    emergencyType: string\n    postedBy: string\n    postedMinAgo: string\n    rescueDate: Date\n    rescuedPetName: string\n    rescueLocality: string\n    rescuers: {\n        contact: number\n        name: string\n        profileId: number\n        profileImageUrl: string\n        rescues: boolean\n        showMyNumber: boolean\n    }\n    rescueStatus: string\n    viewsCont: number\n}\n\nexport interface RescueLists {\n    rescues: Rescues[]\n}\n\nexport interface Comment {\n    commentId: number\n    comment: string\n    commentedUseName: string\n    commentedUserId: number\n    timeAgo: string\n}\n\nexport interface Comments {\n    comments: Comment[]\n}\n\nexport interface Follower {\n    userId: number\n    userName: string\n    profileImage: string\n    areYouFollowing: boolean\n    showRemoveOption: boolean\n}\n\nexport interface Following extends Follower {}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UserPosts.html":{"url":"interfaces/UserPosts.html","title":"interface - UserPosts","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  UserPosts\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/domain.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        feed\n                                \n                                \n                                        isRecent\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        feed\n                                    \n                                \n                                \n                                    \n                                        feed:         UserPost[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         UserPost[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isRecent\n                                    \n                                \n                                \n                                    \n                                        isRecent:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { HttpStatus } from '@nestjs/common'\n\nexport type Result =\n    | GetAppLaunchData\n    | GetUserProfile\n    | GetUserPosts\n    | GetComments\n    | GetRescueList\n    | GetFollowers\n    | GetFollowing\n\nexport type APIError = Error | string | null\n\nexport interface APIResponse {\n    data: T\n    error: APIError\n    message: string | string[]\n    statusCode: HttpStatus\n\n    count?: number\n    page?: number\n    pageCount?: number\n    total?: number\n}\n\nexport interface GetAppLaunchData {\n    link: 'api:/'\n    response: APIResponse\n}\n\nexport interface GetUserProfile {\n    link: 'api:v1/user/getUserProfile?userId=25'\n    response: APIResponse\n}\n\nexport interface GetUserPosts {\n    link: 'api:v1/user/getUserPosts?pageNo=0&pageSize=25'\n    response: APIResponse\n}\n\nexport interface GetRescueList {\n    link: 'api:v1/rescue/getRescueList?pageNo=0&pageSize=10&status=pending|inProgress|completed|nearest'\n    response: APIResponse\n}\n\nexport interface GetComments {\n    link: 'api:v1/rescue/getComments?pageNo=0&pageSize=10&postId=1230'\n    response: APIResponse\n}\n\nexport interface GetFollowers {\n    link: 'api:v1/rescue/getUserFollowers?userId=1230'\n    response: APIResponse\n}\n\nexport interface GetFollowing {\n    link: 'api:v1/rescue/getUserFollowing?userId=1230'\n    response: APIResponse\n}\n\nexport interface AppLaunchAction {\n    actionId: number\n    action: string\n    isActive: boolean\n    subject?: string\n}\n\nexport interface User {\n    usesId: number\n\n    coverImage: string\n    following: boolean\n    gender: string\n    isOwnProfile: number\n    isRescuer: boolean\n    latitude: number\n    longitude: number\n    numberOfFollowers: number\n    numberOfFollowing: number\n    numberOfPosts: number\n    numberOfRescuesCompleted: number\n    numberOfRescuesCreated: number\n    numberOfRescuesInProgress: number\n    profileImage: string\n    rescuer: boolean\n    userAddress: string\n    userContacts: string\n    userEmail: string\n    userName: string\n    badge: {\n        badgeId: number\n        badgeName: string\n        badgeDescription: string\n        recuesCompletionNeeded: number\n    }\n    setting: {\n        showMyContacts: boolean\n        getNotifications: boolean\n    }\n}\n\nexport interface PostType {\n    postTypeId: number\n    postType: string\n}\n\nexport interface PostedByUser {\n    usesId: number\n    badgeName: string\n    following: boolean\n    profileImage: string\n    rescuer: boolean\n    userName: string\n}\n\nexport interface UserPost {\n    postId: number\n    commentsCount: number\n    isUserReactedToPost: boolean\n    ownPage: boolean\n    postBy: PostedByUser\n    postImage: string\n    postTime: string\n    postType: PostType\n    postVideo: string\n    reactionsCount: number\n    timeAgo: string\n\n    adCorporateLogoUrl: string | null\n    corporateDescription: string | null\n    corporateName: string | null\n}\n\nexport interface UserPosts {\n    isRecent: boolean\n    feed: UserPost[]\n}\n\nexport interface Rescues {\n    rescueId: number\n    animalImageUrl: string\n    distance: number\n    distanceAway: string\n    emergencyType: string\n    postedBy: string\n    postedMinAgo: string\n    rescueDate: Date\n    rescuedPetName: string\n    rescueLocality: string\n    rescuers: {\n        contact: number\n        name: string\n        profileId: number\n        profileImageUrl: string\n        rescues: boolean\n        showMyNumber: boolean\n    }\n    rescueStatus: string\n    viewsCont: number\n}\n\nexport interface RescueLists {\n    rescues: Rescues[]\n}\n\nexport interface Comment {\n    commentId: number\n    comment: string\n    commentedUseName: string\n    commentedUserId: number\n    timeAgo: string\n}\n\nexport interface Comments {\n    comments: Comment[]\n}\n\nexport interface Follower {\n    userId: number\n    userName: string\n    profileImage: string\n    areYouFollowing: boolean\n    showRemoveOption: boolean\n}\n\nexport interface Following extends Follower {}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserRepository.html":{"url":"classes/UserRepository.html","title":"class - UserRepository","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserRepository\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/datum/user.repository.ts\n        \n\n\n            \n                Extends\n            \n            \n                    Repository\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                clearAll\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            clearAll\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    clearAll()\n                \n            \n\n\n            \n                \n                    Defined in src/users/datum/user.repository.ts:10\n                \n            \n\n\n            \n                \n                    Deletes all of the User records form database\n\n\n                    \n                        Returns :     {}\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { EntityRepository, getManager, Repository } from 'typeorm'\n\nimport { User } from './user.entity'\n\n@EntityRepository(User)\nexport class UserRepository extends Repository {\n    /**\n     * Deletes all of the User records form database\n     */\n    async clearAll() {\n        let cleared = {}\n        cleared = await getManager().query('DELETE FROM users') // eslint-disable-line @typescript-eslint/no-unsafe-assignment\n        return cleared\n    }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UsersController.html":{"url":"controllers/UsersController.html","title":"controller - UsersController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UsersController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/users.controller.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                clear\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            clear\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    clear()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'Delete all User'})@Post('/clear')\n                \n            \n\n            \n                \n                    Defined in src/users/users.controller.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     {}\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        /* eslint-disable no-use-before-define */\nimport { Controller, Post } from \"@nestjs/common\";\nimport { ApiOperation, ApiTags } from \"@nestjs/swagger\";\nimport { Crud, CrudController } from '@nestjsx/crud'\n\nimport { Cat } from '../cats/datum/cat.entity'\nimport { CreateUserDto, GetUserResponseDto, UpdateUserDto } from './datum/user.dto'\nimport { User } from './datum/user.entity'\nimport { UsersService } from './users.service'\n\n@Controller(UsersController.path)\n@ApiTags(UsersController.name)\n@Crud({\n    model: {\n        type: User,\n    },\n    dto: {\n        create: CreateUserDto,\n        replace: CreateUserDto,\n        update: UpdateUserDto,\n    },\n    serialize: {\n        create: GetUserResponseDto,\n        delete: GetUserResponseDto,\n        get: GetUserResponseDto,\n        update: GetUserResponseDto,\n    },\n    query: {\n        alwaysPaginate: true,\n        join: {\n            cats: {\n                eager: false,\n                exclude: Cat.exclude,\n            },\n        },\n    },\n})\nexport class UsersController implements CrudController {\n    static path = 'users'\n\n    constructor(public service: UsersService) {}\n\n    @ApiOperation({ summary: 'Delete all User' })\n    @Post('/clear')\n    async clear() {\n        return this.service.clear()\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UsersModule.html":{"url":"modules/UsersModule.html","title":"module - UsersModule","body":"\n                   \n\n\n\n\n    Modules\n    UsersModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_exports\n\n\n\ncluster_UsersModule_providers\n\n\n\n\nUsersService \n\nUsersService \n\n\n\nUsersModule\n\nUsersModule\n\nUsersService  -->\n\nUsersModule->UsersService \n\n\n\n\n\nUsersService\n\nUsersService\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/users/users.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            UsersService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            UsersController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            UsersService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common'\nimport { TypeOrmModule } from '@nestjs/typeorm'\n\nimport { Cat } from '../cats/datum/cat.entity'\nimport { CatRepository } from '../cats/datum/cat.repository'\nimport { UserRepository } from './datum/user.repository'\nimport { UsersController } from './users.controller'\nimport { UsersService } from './users.service'\n\n@Module({\n    controllers: [UsersController],\n    exports: [UsersService],\n    imports: [TypeOrmModule.forFeature([UserRepository])],\n    providers: [UsersService],\n})\nexport class UsersModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UsersService.html":{"url":"injectables/UsersService.html","title":"injectable - UsersService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  UsersService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/users.service.ts\n        \n\n\n            \n                Extends\n            \n            \n                        TypeOrmCrudService\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                repo\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                clear\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(repo: UserRepository)\n                    \n                \n                        \n                            \n                                Defined in src/users/users.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        repo\n                                                  \n                                                        \n                                                                        UserRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            clear\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    clear()\n                \n            \n\n\n            \n                \n                    Defined in src/users/users.service.ts:17\n                \n            \n\n\n            \n                \n                    Deletes all of the Cat records form database\n\n\n                    \n                        Returns :     {}\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            repo\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         UserRepository\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @InjectRepository(UserRepository)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/users.service.ts:10\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common'\nimport { InjectRepository } from '@nestjs/typeorm'\nimport { TypeOrmCrudService } from '@nestjsx/crud-typeorm'\n\nimport { User } from './datum/user.entity'\nimport { UserRepository } from './datum/user.repository'\n\n@Injectable()\nexport class UsersService extends TypeOrmCrudService {\n    constructor(@InjectRepository(UserRepository) public repo: UserRepository) {\n        super(repo)\n    }\n\n    /**\n     * Deletes all of the Cat records form database\n     */\n    async clear() {\n        return this.repo.clearAll()\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app.controller.ts\n            \n            controller\n            AppController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app.module.ts\n            \n            variable\n            ConfigModuleOptions\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app.module.ts\n            \n            variable\n            TypeOrmModuleOptions\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app.service.ts\n            \n            injectable\n            AppService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/base/DBHelper.ts\n            \n            injectable\n            DBHelper\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/base/crud/crud.controller.ts\n            \n            class\n            CrudController\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/base/crud/crud.service.ts\n            \n            class\n            CrudService\n            \n                8 %\n                (1/12)\n            \n        \n        \n            \n                \n                src/base/crud/icrud.service.ts\n            \n            interface\n            ICrudService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/base/crud/icrud.service.ts\n            \n            interface\n            IPagination\n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                src/base/crud/pagination-params.ts\n            \n            class\n            PaginationParams\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/base/crud/pagination.ts\n            \n            interface\n            IPagination\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/base/crud/try-request.ts\n            \n            interface\n            ITryRequest\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/base/entities/base.ts\n            \n            class\n            Base\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/base/entities/base.ts\n            \n            class\n            Model\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/base/entities/base.ts\n            \n            interface\n            IBaseEntityModel\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/base/entities/toHexString.ts\n            \n            function\n            toHexString\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/base/moment-extend.ts\n            \n            variable\n            moment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/cats/cats.controller.ts\n            \n            controller\n            CatsController\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/cats/cats.service.ts\n            \n            injectable\n            CatsService\n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                src/cats/datum/cat.dto.ts\n            \n            class\n            CreateCatDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/cats/datum/cat.dto.ts\n            \n            class\n            GetCatResponseDto\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/cats/datum/cat.dto.ts\n            \n            class\n            UpdateCatDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/cats/datum/cat.entity.ts\n            \n            class\n            Cat\n            \n                8 %\n                (1/12)\n            \n        \n        \n            \n                \n                src/cats/datum/cat.repository.ts\n            \n            class\n            CatRepository\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                src/cron/cron.service.ts\n            \n            injectable\n            CronService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/domain.ts\n            \n            interface\n            APIResponse\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/domain.ts\n            \n            interface\n            AppLaunchAction\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/domain.ts\n            \n            interface\n            Comment\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/domain.ts\n            \n            interface\n            Comments\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/domain.ts\n            \n            interface\n            Follower\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/domain.ts\n            \n            interface\n            Following\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/domain.ts\n            \n            interface\n            GetAppLaunchData\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/domain.ts\n            \n            interface\n            GetComments\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/domain.ts\n            \n            interface\n            GetFollowers\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/domain.ts\n            \n            interface\n            GetFollowing\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/domain.ts\n            \n            interface\n            GetRescueList\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/domain.ts\n            \n            interface\n            GetUserPosts\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/domain.ts\n            \n            interface\n            GetUserProfile\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/domain.ts\n            \n            interface\n            PostedByUser\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/domain.ts\n            \n            interface\n            PostType\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/domain.ts\n            \n            interface\n            RescueLists\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/domain.ts\n            \n            interface\n            Rescues\n            \n                0 %\n                (0/14)\n            \n        \n        \n            \n                \n                src/domain.ts\n            \n            interface\n            User\n            \n                0 %\n                (0/23)\n            \n        \n        \n            \n                \n                src/domain.ts\n            \n            interface\n            UserPost\n            \n                0 %\n                (0/15)\n            \n        \n        \n            \n                \n                src/domain.ts\n            \n            interface\n            UserPosts\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/health/health.controller.ts\n            \n            controller\n            HealthController\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/infra/filters/query-failed.filter.ts\n            \n            class\n            QueryFailedFilter\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/infra/guards/req.ts\n            \n            guard\n            RequestGuard\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/infra/guards/res.ts\n            \n            guard\n            ResponseGuard\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/infra/interceptors/null-undefined-override.ts\n            \n            injectable\n            ExcludeNullUndefinedInterceptor\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                src/infra/interceptors/timeout.ts\n            \n            injectable\n            TimeoutInterceptor\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                src/infra/interceptors/transform.ts\n            \n            injectable\n            TransformInterceptor\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/infra/interceptors/transform.ts\n            \n            interface\n            Response\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            setupInfra\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            setupMiddlewares\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            setupSwaggerDocs\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/users/datum/user.dto.ts\n            \n            class\n            CreateUserDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/users/datum/user.dto.ts\n            \n            class\n            GetUserResponseDto\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/users/datum/user.dto.ts\n            \n            class\n            UpdateUserDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/users/datum/user.entity.ts\n            \n            class\n            User\n            \n                11 %\n                (1/9)\n            \n        \n        \n            \n                \n                src/users/datum/user.repository.ts\n            \n            class\n            UserRepository\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                src/users/users.controller.ts\n            \n            controller\n            UsersController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/users/users.service.ts\n            \n            injectable\n            UsersService\n            \n                25 %\n                (1/4)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @hapi/joi : ^17.1.1\n        \n            @nestjs/common : ^7.5.1\n        \n            @nestjs/config : ^0.6.1\n        \n            @nestjs/core : ^7.5.1\n        \n            @nestjs/mapped-types : ^0.1.1\n        \n            @nestjs/passport : ^7.1.3\n        \n            @nestjs/platform-express : ^7.5.1\n        \n            @nestjs/schedule : ^0.4.1\n        \n            @nestjs/swagger : ^4.7.5\n        \n            @nestjs/terminus : ^7.0.1\n        \n            @nestjs/typeorm : ^7.1.5\n        \n            @nestjsx/crud : ^4.6.2\n        \n            @nestjsx/crud-request : ^4.6.2\n        \n            @nestjsx/crud-typeorm : ^4.6.2\n        \n            bcryptjs : ^2.4.3\n        \n            class-transformer : ^0.3.1\n        \n            class-validator : ^0.12.2\n        \n            express-rate-limit : ^5.2.3\n        \n            helmet : ^4.2.0\n        \n            lodash : ^4.17.20\n        \n            moment : ^2.29.1\n        \n            moment-range : ^4.0.2\n        \n            passport : ^0.4.1\n        \n            passport-local : ^1.0.0\n        \n            reflect-metadata : ^0.1.13\n        \n            rimraf : ^3.0.2\n        \n            rxjs : ^6.6.3\n        \n            sqlite3 : ^5.0.0\n        \n            swagger-ui-express : ^4.1.5\n        \n            typeorm : ^0.2.29\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            OrderType   (src/.../pagination-params.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/base/crud/pagination-params.ts\n    \n        \n            \n                \n                    \n                        \n                        OrderType\n                    \n                \n                        \n                            \n                                 DESC\n                            \n                        \n                        \n                            \n                                Value : DESC\n                            \n                        \n                        \n                            \n                                 ASC\n                            \n                        \n                        \n                            \n                                Value : ASC\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                        \n                            setupInfra   (src/.../main.ts)\n                        \n                        \n                            setupMiddlewares   (src/.../main.ts)\n                        \n                        \n                            setupSwaggerDocs   (src/.../main.ts)\n                        \n                        \n                            toHexString   (src/.../toHexString.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            bootstrap\n                        \n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setupInfra\n                        \n                        \n                    \n                \n            \n            \n                \nsetupInfra(app)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    app\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setupMiddlewares\n                        \n                        \n                    \n                \n            \n            \n                \nsetupMiddlewares(app)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    app\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setupSwaggerDocs\n                        \n                        \n                    \n                \n            \n            \n                \nsetupSwaggerDocs(app)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    app\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    src/base/entities/toHexString.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            toHexString\n                        \n                        \n                    \n                \n            \n            \n                \ntoHexString(value)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n  A progressive Node.js framework for building efficient and scalable server-side applications.\n    \n\n\n\n\n\n\n\n\n  \n    \n  \n\n  \n\nDescription\nNest framework TypeScript starter repository.\nInstallation\n$ npm installRunning the app\n# development\n$ npm run start\n\n# watch mode\n$ npm run start:dev\n\n# production mode\n$ npm run start:prodTest\n# unit tests\n$ npm run test\n\n# e2e tests\n$ npm run test:e2e\n\n# test coverage\n$ npm run test:covSupport\nNest is an MIT-licensed open source project. It can grow thanks to the sponsors and support by the amazing backers. If you'd like to join them, please read more here.\nStay in touch\n\nAuthor - Kamil Myśliwiec\nWebsite - https://nestjs.com\nTwitter - @nestframework\n\nLicense\nNest is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CatsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CronModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UsersModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_CatsModule\n\n\n\ncluster_CatsModule_exports\n\n\n\ncluster_CatsModule_providers\n\n\n\ncluster_CronModule\n\n\n\ncluster_CronModule_providers\n\n\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_exports\n\n\n\ncluster_UsersModule_providers\n\n\n\n\nCatsModule\n\nCatsModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nCatsModule->AppModule\n\n\n\n\n\nCatsService \n\nCatsService \n\nCatsService  -->\n\nCatsModule->CatsService \n\n\n\n\n\nCronModule\n\nCronModule\n\nAppModule -->\n\nCronModule->AppModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\nUsersService \n\nUsersService \n\nUsersService  -->\n\nUsersModule->UsersService \n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nCatsService\n\nCatsService\n\nCatsModule -->\n\nCatsService->CatsModule\n\n\n\n\n\nCronService\n\nCronService\n\nCronModule -->\n\nCronService->CronModule\n\n\n\n\n\nUsersService\n\nUsersService\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        4 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    4 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    8 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    16 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    2 Guards\n                \n            \n        \n        \n            \n                \n                    \n                    26 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            APIError   (src/.../domain.ts)\n                        \n                        \n                            Result   (src/.../domain.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/domain.ts\n    \n    \n        \n            \n                \n                    \n                    APIError\n                \n            \n            \n                \n                        Error | string | null\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Result\n                \n            \n            \n                \n                            GetAppLaunchData | GetUserProfile | GetUserPosts | GetComments | GetRescueList | GetFollowers | GetFollowing\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ConfigModuleOptions   (src/.../app.module.ts)\n                        \n                        \n                            moment   (src/.../moment-extend.ts)\n                        \n                        \n                            TypeOrmModuleOptions   (src/.../app.module.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app.module.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            ConfigModuleOptions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    isGlobal: true,\n    validationOptions: {\n        allowUnknown: true,\n        abortEarly: true,\n    },\n    validationSchema: Joi.object({\n        PORT: Joi.number().default(3000),\n        NODE_ENV: Joi.string()\n            .required()\n            .valid('development', 'production', 'test', 'provision')\n            .default('development'),\n    }),\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            TypeOrmModuleOptions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    entities: [\n        Cat,\n        User,\n        // `${__dirname}/**/*.entity.{ts,js}`,\n    ],\n    type: 'sqlite' as const,\n    database: 'database.sqlite',\n    synchronize: true,\n    logging: true,\n    // migrations: [`${__dirname}/**/migrations/*{.ts,.js}`],\n    // migrationsTableName: 'migrations_typeorm',\n    // migrationsRun: true,\n}\n                        \n                    \n\n\n            \n        \n\n    src/base/moment-extend.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            moment\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : extendMoment(momentDefault)\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
