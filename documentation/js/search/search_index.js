var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/controllers/AppController.html",[0,1.076,1,1.846]],["body/controllers/AppController.html",[0,1.552,1,2.663,2,1.297,3,0.365,4,0.309,5,0.309,6,2.67,7,0.698,8,1.552,9,4.221,10,1.437,11,0.039,12,3.243,13,2.292,14,0.958,15,3.243,16,1.172,17,1.404,18,2.01,19,2.01,20,2.292,21,2.663,22,2.67,23,3.243,24,3.036,25,2.365,26,2.292,27,2.292,28,0.723,29,2.67,30,2.01,31,0.778,32,3.536,33,2.292,34,1.437,35,2.373,36,2.67,37,3.243,38,0.365,39,0.021,40,2.01,41,1.06,42,2.67,43,2.67,44,1.437,45,3.243,46,0.021,47,0.028,48,0.021]],["title/modules/AppModule.html",[49,1.076,50,1.846]],["body/modules/AppModule.html",[1,2.077,2,1.084,3,0.194,4,0.164,5,0.164,8,0.622,11,0.04,14,0.8,16,0.979,17,1.095,18,1.067,19,1.067,20,1.217,21,2.077,22,2.759,25,0.948,28,0.79,30,2.562,31,0.413,35,2.162,36,1.417,38,0.194,39,0.011,40,1.067,41,0.563,46,0.011,47,0.018,48,0.011,49,1.373,50,3.219,51,0.763,52,0.763,53,0.948,54,0.948,55,0.763,56,1.845,57,0.948,58,1.417,59,1.417,60,1.417,61,2.416,62,2.416,63,1.492,64,0.948,65,0.948,66,1.217,67,2.077,68,2.231,69,2.759,70,2.231,71,1.722,72,0.763,73,0.722,74,0.8,75,0.763,76,2.759,77,1.417,78,2.686,79,1.722,80,1.722,81,1.722,82,1.722,83,1.722,84,1.722,85,1.217,86,1.722,87,1.217,88,2.71,89,1.217,90,1.417,91,1.067,92,2.71,93,1.722,94,1.417,95,1.417,96,1.722,97,1.492,98,1.722,99,1.722,100,1.722,101,1.722,102,1.417,103,1.417,104,2.686,105,1.217,106,1.417,107,3.246,108,1.417,109,1.417,110,1.417,111,1.417,112,1.417,113,1.417,114,1.417,115,1.417,116,1.417,117,1.417,118,1.217,119,1.217,120,1.417,121,1.417,122,1.217,123,1.417,124,1.417,125,1.417,126,1.417,127,1.217,128,1.417,129,1.417,130,2.231,131,1.417,132,1.417,133,1.417,134,1.417,135,1.417,136,2.231,137,1.417,138,1.417,139,1.417,140,1.417,141,1.417,142,1.417,143,1.417,144,1.217,145,1.217,146,1.417,147,1.417,148,1.417,149,1.417,150,1.417,151,1.417,152,1.722,153,1.722,154,1.722,155,1.417,156,1.722,157,1.067,158,1.417,159,1.722,160,1.722,161,1.417,162,1.722,163,1.417,164,1.417]],["title/injectables/AppService.html",[35,1.467,165,1.076]],["body/injectables/AppService.html",[3,0.437,4,0.37,5,0.37,7,0.835,8,1.742,9,4.514,11,0.038,14,1.146,16,1.403,17,1.575,28,0.582,30,2.406,31,0.931,35,2.375,38,0.437,39,0.025,44,1.72,46,0.025,47,0.031,48,0.025,165,1.742,166,2.136,167,3.195,168,3.881,169,3.881,170,3.881]],["title/classes/Cat.html",[39,0.019,171,1.191]],["body/classes/Cat.html",[3,0.266,4,0.225,5,0.225,7,0.508,10,1.98,11,0.039,13,1.668,14,1.403,17,1.46,28,0.517,34,1.046,38,0.266,39,0.015,41,1.328,46,0.015,47,0.022,48,0.015,73,1.426,74,1.403,171,2.174,172,1.046,173,1.943,174,2.134,175,2.944,176,2.944,177,2.615,178,4.064,179,4.064,180,2.105,181,3.678,182,3.709,183,2.36,184,3.443,185,2.36,186,2.434,187,2.36,188,3.443,189,2.36,190,3.443,191,2.36,192,2.36,193,2.36,194,3.443,195,3.443,196,2.36,197,1.668,198,1.668,199,3.443,200,2.36,201,3.357,202,4.467,203,2.834,204,3.443,205,1.668,206,1.943,207,2.36,208,2.459,209,2.36,210,1.668,211,2.36,212,1.463,213,1.668]],["title/controllers/CatsController.html",[0,1.076,214,1.846]],["body/controllers/CatsController.html",[0,0.549,2,0.608,3,0.171,4,0.145,5,0.145,7,0.327,8,0.886,10,1.722,11,0.039,13,2.936,14,1.147,16,1.404,18,0.942,19,0.942,21,0.942,24,1.734,25,1.35,26,1.074,27,1.074,28,0.583,29,1.251,31,0.364,32,3.598,33,1.074,34,0.673,38,0.171,39,0.01,40,0.942,41,0.497,42,4.06,43,2.915,44,1.722,46,0.01,47,0.016,48,0.01,72,1.569,73,0.943,74,1.53,75,1.569,107,1.734,127,2.936,145,1.734,171,1.416,177,2.585,180,2.082,203,2.019,206,4.366,208,2.406,214,1.521,215,1.251,216,1.074,217,3.867,218,2.195,219,2.195,220,1.521,221,1.521,222,2.195,223,1.52,224,2.047,225,1.52,226,1.52,227,2.453,228,2.453,229,1.52,230,2.453,231,1.52,232,2.936,233,1.52,234,1.52,235,2.453,236,4.548,237,4.823,238,1.52,239,0.942,240,1.52,241,3.084,242,1.52,243,0.942,244,1.52,245,3.198,246,1.52,247,0.942,248,2.241,249,1.52,250,2.453,251,1.52,252,2.019,253,1.251,254,2.019,255,1.251,256,4.154,257,1.52,258,1.251,259,1.251,260,1.074,261,1.52,262,1.52,263,3.885,264,1.52,265,1.52,266,1.251,267,1.52,268,1.52,269,1.251,270,1.251,271,1.52,272,1.251,273,1.251,274,1.52,275,1.251,276,1.251,277,1.52]],["title/modules/CatsModule.html",[49,1.076,61,1.639]],["body/modules/CatsModule.html",[2,1.756,3,0.378,4,0.32,5,0.32,11,0.039,28,0.809,31,0.804,38,0.378,39,0.022,46,0.022,47,0.028,48,0.022,49,1.769,51,1.486,52,1.486,53,1.846,54,1.846,55,1.486,56,2.695,57,1.846,61,3.045,63,2.417,64,1.846,65,1.846,68,2.761,90,2.761,91,2.079,171,1.341,214,3.035,257,2.726,258,2.761,260,2.37,278,2.761,279,2.761,280,3.353,281,3.353,282,3.353]],["title/injectables/CatsService.html",[165,1.076,257,1.467]],["body/injectables/CatsService.html",[3,0.24,4,0.203,5,0.203,7,0.458,8,1.154,11,0.039,14,1.411,16,1.645,28,0.683,31,0.511,38,0.24,39,0.014,41,0.696,44,2.017,46,0.014,47,0.021,48,0.014,72,2.017,73,1.213,74,1.344,75,2.017,91,1.321,104,1.506,165,1.154,166,1.173,171,1.82,177,2.506,180,2.309,205,1.506,217,4.623,218,1.979,219,2.635,220,1.979,221,1.979,222,1.979,224,2.094,232,3.004,239,1.979,243,1.979,247,1.979,248,2.441,257,1.573,259,1.754,260,1.506,283,1.754,284,1.754,285,2.131,286,3.499,287,2.131,288,3.192,289,3.192,290,2.131,291,2.131,292,2.131,293,2.131,294,2.131,295,2.131,296,2.131,297,1.506,298,2.131,299,1.321,300,2.131,301,2.131,302,2.131,303,2.131,304,2.131,305,2.131,306,2.131,307,2.131,308,2.131,309,2.628,310,1.754,311,1.754]],["title/classes/CreateCatDto.html",[39,0.019,224,1.467]],["body/classes/CreateCatDto.html",[3,0.293,4,0.248,5,0.248,7,0.56,10,1.902,11,0.039,14,1.267,17,1.527,28,0.701,34,1.153,38,0.416,39,0.028,41,1.79,46,0.017,47,0.024,48,0.017,73,1.315,74,1.267,157,2.289,171,2.049,172,1.153,174,2.289,175,3.058,176,3.058,180,1.636,181,3.534,182,3.623,186,2.61,201,3.302,208,2.363,210,1.839,212,1.613,213,1.839,224,1.819,248,1.282,312,1.839,313,2.363,314,2.602,315,2.602,316,2.602,317,2.602,318,2.602,319,2.602,320,1.613,321,1.432,322,1.432,323,2.142,324,3.04,325,3.534,326,2.142,327,3.846,328,1.839,329,2.142,330,1.613,331,2.142]],["title/classes/CreateUserDto.html",[39,0.019,332,1.467]],["body/classes/CreateUserDto.html",[3,0.469,4,0.397,5,0.397,11,0.038,28,0.625,38,0.567,39,0.033,46,0.027,47,0.033,48,0.027,172,1.847,320,2.584,321,2.294,322,2.294,330,2.584,332,2.481,333,2.946,334,2.054,335,3.431]],["title/modules/CronModule.html",[49,1.076,97,1.639]],["body/modules/CronModule.html",[3,0.415,4,0.351,5,0.351,11,0.038,28,0.7,31,0.883,38,0.415,39,0.024,46,0.024,47,0.03,48,0.024,49,1.85,51,1.632,52,1.632,53,2.027,54,2.027,55,1.632,56,2.818,57,2.027,63,2.567,64,2.027,65,2.027,97,3.122,336,3.031,337,3.031,338,3.122,339,3.682,340,3.682]],["title/injectables/CronService.html",[165,1.076,338,1.639]],["body/injectables/CronService.html",[3,0.316,4,0.267,5,0.267,7,0.603,8,1.407,10,1.981,11,0.04,14,1.426,16,1.616,28,0.584,31,0.673,38,0.316,39,0.018,41,1.461,46,0.018,47,0.025,48,0.018,78,3.16,87,1.983,158,3.976,165,1.407,166,1.544,174,2.413,197,1.983,198,1.983,297,3.16,299,2.413,338,2.143,341,2.309,342,4.829,343,4.829,344,4.829,345,3.893,346,2.805,347,3.893,348,2.805,349,3.893,350,2.805,351,3.893,352,2.805,353,2.805,354,2.805,355,2.805,356,4.471,357,2.805,358,2.805,359,2.805,360,3.893,361,2.805,362,2.805]],["title/controllers/HealthController.html",[0,1.076,67,1.846]],["body/controllers/HealthController.html",[0,0.831,2,0.919,3,0.259,4,0.219,5,0.219,7,0.494,8,1.446,10,1.019,11,0.039,14,1.182,16,1.594,17,1.308,18,1.425,19,1.425,21,1.425,24,2.387,25,1.859,26,1.625,27,1.625,28,0.662,30,3.045,31,0.551,33,1.625,34,1.019,38,0.259,39,0.015,44,1.019,46,0.015,47,0.022,48,0.015,67,2.734,69,3.868,70,2.78,72,1.019,73,0.612,74,0.679,75,1.019,76,3.868,77,1.892,78,3.118,85,1.625,89,1.625,155,2.78,157,1.425,161,1.892,163,1.892,164,1.892,216,1.625,232,2.387,284,1.892,297,2.829,363,1.892,364,4.411,365,2.298,366,2.298,367,2.298,368,2.298,369,3.376,370,3.376,371,3.376,372,3.376,373,2.298,374,2.298,375,2.298,376,3.376,377,2.298,378,2.298,379,2.298,380,2.298,381,2.298,382,2.298,383,2.298,384,3.376,385,3.376,386,2.298,387,2.298,388,3.376,389,2.298,390,2.298,391,2.298,392,2.298,393,2.298,394,1.892,395,2.298,396,2.298,397,1.892,398,2.298,399,2.298,400,2.298,401,2.298,402,2.298,403,2.298,404,2.298]],["title/interfaces/ICat.html",[313,1.639,405,1.846]],["body/interfaces/ICat.html",[3,0.42,4,0.356,5,0.356,7,0.803,11,0.037,17,1.86,38,0.42,41,1.683,46,0.024,47,0.03,48,0.024,73,1.441,74,1.521,174,2.917,175,3.353,176,3.353,180,2.283,313,2.59,405,2.315,406,3.734,407,3.074]],["title/classes/UpdateCatDto.html",[39,0.019,248,1.467]],["body/classes/UpdateCatDto.html",[3,0.356,4,0.302,5,0.302,11,0.039,17,1.381,28,0.762,34,1.403,38,0.476,39,0.031,41,1.555,46,0.02,47,0.027,48,0.02,73,1.126,157,1.962,171,1.903,172,1.403,175,2.62,176,2.62,180,1.403,182,3.363,186,2.237,201,3.589,208,2.619,210,2.237,212,1.962,213,2.237,224,1.559,248,2.082,312,2.237,313,2.327,320,1.962,321,1.742,322,1.742,323,2.606,324,3.479,325,3.917,326,2.606,327,4.18,328,2.237,329,2.606,330,1.962,331,2.606]],["title/classes/UpdateUserDto.html",[39,0.019,334,1.467]],["body/classes/UpdateUserDto.html",[3,0.469,4,0.397,5,0.397,11,0.038,28,0.625,38,0.567,39,0.033,46,0.027,47,0.033,48,0.027,172,1.847,320,2.584,321,2.294,322,2.294,330,2.584,332,2.054,333,2.946,334,2.481,335,3.431]],["title/classes/User.html",[39,0.019,408,1.846]],["body/classes/User.html",[3,0.501,4,0.424,5,0.424,11,0.036,38,0.501,39,0.029,46,0.029,47,0.034,48,0.029,172,1.972,408,3.246,409,3.664]],["title/controllers/UsersController.html",[0,1.076,410,1.846]],["body/controllers/UsersController.html",[0,0.848,2,0.938,3,0.264,4,0.224,5,0.224,7,0.505,8,1.239,10,2.1,11,0.039,14,1.399,16,1.712,17,1.746,28,0.608,31,0.563,38,0.264,39,0.015,40,1.454,41,0.767,44,2.1,46,0.015,47,0.022,48,0.015,72,1.974,73,1.187,74,1.315,75,1.974,177,2.724,216,1.659,218,2.125,219,2.761,220,2.125,221,2.125,222,2.125,239,1.454,243,1.454,245,1.932,247,1.454,252,2.822,253,1.932,254,3.334,255,1.932,266,1.932,269,2.822,270,1.932,272,2.822,273,1.932,275,2.822,276,1.932,332,2.438,334,2.581,410,2.125,411,1.932,412,1.932,413,1.932,414,2.346,415,2.346,416,2.346,417,2.346,418,2.346,419,2.346,420,1.995,421,1.932,422,2.346,423,2.346,424,2.346,425,2.346,426,2.346,427,2.346]],["title/modules/UsersModule.html",[49,1.076,62,1.639]],["body/modules/UsersModule.html",[2,1.816,3,0.398,4,0.337,5,0.337,11,0.038,28,0.753,31,0.847,38,0.398,39,0.023,46,0.023,47,0.029,48,0.023,49,1.814,51,1.566,52,1.566,53,1.945,54,1.945,55,1.566,56,2.764,57,1.945,62,3.089,63,2.501,64,1.945,65,1.945,410,3.112,420,2.764,421,2.909,428,2.909,429,2.909,430,3.533,431,3.533]],["title/injectables/UsersService.html",[165,1.076,420,1.467]],["body/injectables/UsersService.html",[3,0.283,4,0.239,5,0.239,7,0.54,8,1.301,11,0.039,14,1.437,16,1.885,17,1.59,28,0.54,31,0.602,38,0.283,39,0.016,44,2.157,46,0.016,47,0.023,48,0.016,72,2.037,73,1.225,74,1.357,75,2.037,165,1.301,166,1.382,177,2.788,180,2.408,218,2.232,219,2.85,220,2.232,221,2.232,222,2.232,239,2.232,243,2.232,247,2.232,299,1.556,309,4.007,310,2.067,311,2.067,332,2.398,334,2.57,408,2.85,412,2.067,413,2.964,420,1.774,432,2.067,433,2.511,434,2.511,435,2.511,436,2.511,437,2.511,438,2.511,439,2.511]],["title/coverage.html",[440,2.867]],["body/coverage.html",[0,1.706,1,1.651,5,0.254,6,2.192,11,0.039,35,1.312,39,0.033,46,0.017,47,0.024,48,0.017,55,1.18,66,3.073,67,1.651,74,0.786,105,1.882,122,1.882,144,1.882,165,1.706,167,2.192,171,1.065,173,2.192,214,1.651,215,2.192,224,1.312,248,1.312,257,1.312,283,2.192,299,1.651,312,2.653,313,1.466,332,1.312,333,2.653,334,1.312,338,1.466,341,2.192,363,2.192,394,3.09,405,1.651,407,2.192,408,1.651,409,2.192,410,1.651,411,2.192,420,1.312,432,2.192,440,1.882,441,2.663,442,2.663,443,2.663,444,5.946,445,3.754,446,4.348,447,5.509,448,2.663,449,4.348,450,3.09,451,2.192,452,4.721,453,2.663,454,2.663,455,2.663]],["title/dependencies.html",[52,1.586,456,2.49]],["body/dependencies.html",[11,0.04,31,0.713,34,1.318,39,0.026,46,0.019,47,0.026,48,0.019,52,1.318,85,2.102,87,2.102,89,2.102,91,1.844,94,2.449,95,3.337,102,2.449,103,2.449,205,2.102,321,1.637,322,1.637,328,2.102,457,2.974,458,4.61,459,2.974,460,2.974,461,2.974,462,2.974,463,2.974,464,2.974,465,4.61,466,4.053,467,2.974,468,2.974,469,2.974,470,2.974,471,2.974,472,2.974,473,4.053,474,2.974,475,2.974,476,2.974,477,2.974,478,2.974,479,2.974,480,2.974,481,2.974,482,2.974,483,2.974,484,4.053,485,2.974,486,2.974,487,2.974,488,2.974,489,2.974,490,2.974,491,2.974,492,2.974,493,2.974,494,2.974,495,2.974,496,2.974,497,2.974,498,2.974,499,2.974,500,2.974,501,2.974]],["title/miscellaneous/functions.html",[502,1.544,503,2.946]],["body/miscellaneous/functions.html",[7,0.921,11,0.035,46,0.028,47,0.033,48,0.028,55,2.426,72,1.897,73,1.141,75,1.897,450,3.524,451,4.213,502,2.654,503,3.524,504,5.117,505,4.281,506,3.524]],["title/index.html",[7,0.536,507,2.49,508,2.49]],["body/index.html",[4,0.29,11,0.038,20,2.151,46,0.02,47,0.027,48,0.02,118,2.151,119,2.91,208,1.675,286,2.505,397,3.84,440,2.151,506,2.505,509,3.043,510,3.043,511,4.116,512,3.043,513,3.043,514,3.043,515,3.043,516,3.043,517,3.043,518,3.043,519,3.043,520,5.502,521,3.043,522,3.043,523,5.381,524,3.043,525,3.043,526,4.116,527,3.043,528,3.043,529,3.043,530,4.116,531,3.043,532,3.043,533,3.043,534,4.116,535,4.116,536,3.043,537,3.043,538,3.043,539,3.043,540,3.043,541,2.505,542,3.043,543,3.043,544,3.043,545,3.043,546,3.043,547,3.043,548,3.043,549,3.043,550,3.043,551,3.043,552,3.043,553,3.043,554,3.043,555,3.043,556,3.043,557,3.043,558,3.043,559,3.043]],["title/modules.html",[51,1.797]],["body/modules.html",[11,0.033,46,0.027,47,0.033,48,0.027,50,2.598,51,1.857,61,2.307,62,2.307,97,2.307,541,4.635,560,5.63,561,5.63,562,5.63]],["title/overview.html",[563,3.339]],["body/overview.html",[2,1.324,11,0.037,35,2.397,46,0.021,47,0.028,48,0.021,49,1.197,50,3.535,51,1.467,52,1.467,53,1.823,54,1.823,55,1.467,56,1.823,57,1.823,58,2.726,59,2.726,60,2.726,61,2.956,62,2.956,63,2.397,64,1.823,65,1.823,97,2.846,166,1.823,172,1.467,212,2.053,257,2.397,278,2.726,279,2.726,336,2.726,337,2.726,338,2.679,405,2.053,420,2.397,428,2.726,429,2.726,563,2.726,564,4.866,565,3.311]],["title/miscellaneous/variables.html",[502,1.544,566,2.946]],["body/miscellaneous/variables.html",[7,0.63,11,0.039,25,1.613,46,0.019,47,0.026,48,0.019,66,2.071,73,0.781,74,1.453,104,2.071,105,2.836,106,2.412,107,3.851,108,2.412,109,2.412,110,2.412,111,2.412,112,2.412,113,2.412,114,2.412,115,2.412,116,2.412,117,2.412,118,2.071,119,2.071,120,2.412,121,2.412,122,2.836,123,2.412,124,2.412,125,2.412,126,2.412,127,2.071,128,2.412,129,2.412,130,3.303,131,2.412,132,2.412,133,2.412,134,2.412,135,2.412,136,3.303,137,2.412,138,2.412,139,2.412,140,2.412,141,2.412,142,2.412,143,2.412,144,2.836,145,2.071,146,2.412,147,2.412,148,2.412,149,2.412,150,2.412,151,2.412,197,3.233,198,3.233,502,1.816,566,2.412,567,4.574,568,4.574]]],"invertedIndex":[["",{"_index":11,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Cat.html":{},"controllers/CatsController.html":{},"modules/CatsModule.html":{},"injectables/CatsService.html":{},"classes/CreateCatDto.html":{},"classes/CreateUserDto.html":{},"modules/CronModule.html":{},"injectables/CronService.html":{},"controllers/HealthController.html":{},"interfaces/ICat.html":{},"classes/UpdateCatDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":444,"title":{},"body":{"coverage.html":{}}}],["0.1.1",{"_index":461,"title":{},"body":{"dependencies.html":{}}}],["0.1.13",{"_index":491,"title":{},"body":{"dependencies.html":{}}}],["0.12.2",{"_index":472,"title":{},"body":{"dependencies.html":{}}}],["0.2.29",{"_index":501,"title":{},"body":{"dependencies.html":{}}}],["0.3.1",{"_index":471,"title":{},"body":{"dependencies.html":{}}}],["0.4.1",{"_index":466,"title":{},"body":{"dependencies.html":{}}}],["0.6.1",{"_index":459,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":447,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":445,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":449,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":448,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":452,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":453,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":212,"title":{},"body":{"classes/Cat.html":{},"classes/CreateCatDto.html":{},"classes/UpdateCatDto.html":{},"overview.html":{}}}],["1.0.0",{"_index":486,"title":{},"body":{"dependencies.html":{}}}],["1.3.0",{"_index":483,"title":{},"body":{"dependencies.html":{}}}],["100",{"_index":359,"title":{},"body":{"injectables/CronService.html":{}}}],["17.1.1",{"_index":457,"title":{},"body":{"dependencies.html":{}}}],["17.3.0",{"_index":482,"title":{},"body":{"dependencies.html":{}}}],["1})@column({name",{"_index":183,"title":{},"body":{"classes/Cat.html":{}}}],["1})@isint()@isnotempty",{"_index":314,"title":{},"body":{"classes/CreateCatDto.html":{}}}],["3.0.2",{"_index":493,"title":{},"body":{"dependencies.html":{}}}],["36",{"_index":199,"title":{},"body":{"classes/Cat.html":{}}}],["36635263",{"_index":209,"title":{},"body":{"classes/Cat.html":{}}}],["36635263'})@primarygeneratedcolumn",{"_index":191,"title":{},"body":{"classes/Cat.html":{}}}],["4",{"_index":564,"title":{},"body":{"overview.html":{}}}],["4.1.5",{"_index":500,"title":{},"body":{"dependencies.html":{}}}],["4.2.0",{"_index":481,"title":{},"body":{"dependencies.html":{}}}],["4.3.0",{"_index":488,"title":{},"body":{"dependencies.html":{}}}],["4.7.5",{"_index":467,"title":{},"body":{"dependencies.html":{}}}],["5.0.0",{"_index":497,"title":{},"body":{"dependencies.html":{}}}],["5.1.0",{"_index":476,"title":{},"body":{"dependencies.html":{}}}],["5.2.3",{"_index":479,"title":{},"body":{"dependencies.html":{}}}],["50",{"_index":362,"title":{},"body":{"injectables/CronService.html":{}}}],["6",{"_index":565,"title":{},"body":{"overview.html":{}}}],["6.6.3",{"_index":495,"title":{},"body":{"dependencies.html":{}}}],["60",{"_index":358,"title":{},"body":{"injectables/CronService.html":{}}}],["7.0.1",{"_index":468,"title":{},"body":{"dependencies.html":{}}}],["7.1.3",{"_index":463,"title":{},"body":{"dependencies.html":{}}}],["7.1.5",{"_index":469,"title":{},"body":{"dependencies.html":{}}}],["7.5.1",{"_index":458,"title":{},"body":{"dependencies.html":{}}}],["8.2.0",{"_index":474,"title":{},"body":{"dependencies.html":{}}}],["__dirname}/../**/*.entity.{ts,js",{"_index":146,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["abortearly",{"_index":110,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["above",{"_index":390,"title":{},"body":{"controllers/HealthController.html":{}}}],["access",{"_index":83,"title":{},"body":{"modules/AppModule.html":{}}}],["action",{"_index":309,"title":{},"body":{"injectables/CatsService.html":{},"injectables/UsersService.html":{}}}],["adds",{"_index":439,"title":{},"body":{"injectables/UsersService.html":{}}}],["age",{"_index":175,"title":{},"body":{"classes/Cat.html":{},"classes/CreateCatDto.html":{},"interfaces/ICat.html":{},"classes/UpdateCatDto.html":{}}}],["allowunknown",{"_index":109,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["amazing",{"_index":542,"title":{},"body":{"index.html":{}}}],["apioperation",{"_index":256,"title":{},"body":{"controllers/CatsController.html":{}}}],["apiproperty",{"_index":201,"title":{},"body":{"classes/Cat.html":{},"classes/CreateCatDto.html":{},"classes/UpdateCatDto.html":{}}}],["apiproperty({description",{"_index":181,"title":{},"body":{"classes/Cat.html":{},"classes/CreateCatDto.html":{}}}],["apiresponse",{"_index":32,"title":{},"body":{"controllers/AppController.html":{},"controllers/CatsController.html":{}}}],["apitags",{"_index":33,"title":{},"body":{"controllers/AppController.html":{},"controllers/CatsController.html":{},"controllers/HealthController.html":{}}}],["apitags(appcontroller.name",{"_index":37,"title":{},"body":{"controllers/AppController.html":{}}}],["apitags(catscontroller.name",{"_index":261,"title":{},"body":{"controllers/CatsController.html":{}}}],["apitags(healthcontroller.name",{"_index":373,"title":{},"body":{"controllers/HealthController.html":{}}}],["app",{"_index":506,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["appcontroller",{"_index":1,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["application",{"_index":381,"title":{},"body":{"controllers/HealthController.html":{}}}],["applications",{"_index":517,"title":{},"body":{"index.html":{}}}],["applicationshutdown",{"_index":163,"title":{},"body":{"modules/AppModule.html":{},"controllers/HealthController.html":{}}}],["appmodule",{"_index":50,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appservice",{"_index":35,"title":{"injectables/AppService.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"coverage.html":{},"overview.html":{}}}],["array",{"_index":235,"title":{},"body":{"controllers/CatsController.html":{}}}],["assignment,@typescript",{"_index":80,"title":{},"body":{"modules/AppModule.html":{}}}],["assignment,no",{"_index":23,"title":{},"body":{"controllers/AppController.html":{}}}],["async",{"_index":217,"title":{},"body":{"controllers/CatsController.html":{},"injectables/CatsService.html":{}}}],["asynchronous",{"_index":396,"title":{},"body":{"controllers/HealthController.html":{}}}],["author",{"_index":552,"title":{},"body":{"index.html":{}}}],["awaits",{"_index":395,"title":{},"body":{"controllers/HealthController.html":{}}}],["backers",{"_index":543,"title":{},"body":{"index.html":{}}}],["before",{"_index":25,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/CatsController.html":{},"controllers/HealthController.html":{},"miscellaneous/variables.html":{}}}],["beforeapplicationshutdown",{"_index":387,"title":{},"body":{"controllers/HealthController.html":{}}}],["body",{"_index":252,"title":{},"body":{"controllers/CatsController.html":{},"controllers/UsersController.html":{}}}],["bootstrap",{"_index":55,"title":{},"body":{"modules/AppModule.html":{},"modules/CatsModule.html":{},"modules/CronModule.html":{},"modules/UsersModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["breed",{"_index":176,"title":{},"body":{"classes/Cat.html":{},"classes/CreateCatDto.html":{},"interfaces/ICat.html":{},"classes/UpdateCatDto.html":{}}}],["browse",{"_index":562,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":560,"title":{},"body":{"modules.html":{}}}],["building",{"_index":512,"title":{},"body":{"index.html":{}}}],["call",{"_index":384,"title":{},"body":{"controllers/HealthController.html":{}}}],["call,@typescript",{"_index":81,"title":{},"body":{"modules/AppModule.html":{}}}],["cat",{"_index":171,"title":{"classes/Cat.html":{}},"body":{"classes/Cat.html":{},"controllers/CatsController.html":{},"modules/CatsModule.html":{},"injectables/CatsService.html":{},"classes/CreateCatDto.html":{},"classes/UpdateCatDto.html":{},"coverage.html":{}}}],["cat'})@apiresponse({status",{"_index":226,"title":{},"body":{"controllers/CatsController.html":{}}}],["cat.age",{"_index":303,"title":{},"body":{"injectables/CatsService.html":{}}}],["cat.breed",{"_index":305,"title":{},"body":{"injectables/CatsService.html":{}}}],["cat.name",{"_index":301,"title":{},"body":{"injectables/CatsService.html":{}}}],["cat.name_length",{"_index":211,"title":{},"body":{"classes/Cat.html":{}}}],["cat_age",{"_index":184,"title":{},"body":{"classes/Cat.html":{}}}],["cat_breed",{"_index":188,"title":{},"body":{"classes/Cat.html":{}}}],["cat_name",{"_index":194,"title":{},"body":{"classes/Cat.html":{}}}],["catentity",{"_index":237,"title":{},"body":{"controllers/CatsController.html":{}}}],["catentity})@apiresponse({description",{"_index":229,"title":{},"body":{"controllers/CatsController.html":{}}}],["catrepo",{"_index":288,"title":{},"body":{"injectables/CatsService.html":{}}}],["cats",{"_index":206,"title":{},"body":{"classes/Cat.html":{},"controllers/CatsController.html":{}}}],["cats'})@apiresponse({description",{"_index":234,"title":{},"body":{"controllers/CatsController.html":{}}}],["catscontroller",{"_index":214,"title":{"controllers/CatsController.html":{}},"body":{"controllers/CatsController.html":{},"modules/CatsModule.html":{},"coverage.html":{}}}],["catsmodule",{"_index":61,"title":{"modules/CatsModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CatsModule.html":{},"modules.html":{},"overview.html":{}}}],["catsservice",{"_index":257,"title":{"injectables/CatsService.html":{}},"body":{"controllers/CatsController.html":{},"modules/CatsModule.html":{},"injectables/CatsService.html":{},"coverage.html":{},"overview.html":{}}}],["check",{"_index":364,"title":{},"body":{"controllers/HealthController.html":{}}}],["class",{"_index":39,"title":{"classes/Cat.html":{},"classes/CreateCatDto.html":{},"classes/CreateUserDto.html":{},"classes/UpdateCatDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Cat.html":{},"controllers/CatsController.html":{},"modules/CatsModule.html":{},"injectables/CatsService.html":{},"classes/CreateCatDto.html":{},"classes/CreateUserDto.html":{},"modules/CronModule.html":{},"injectables/CronService.html":{},"controllers/HealthController.html":{},"classes/UpdateCatDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{}}}],["classes",{"_index":172,"title":{},"body":{"classes/Cat.html":{},"classes/CreateCatDto.html":{},"classes/CreateUserDto.html":{},"classes/UpdateCatDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"overview.html":{}}}],["cluster_appmodule",{"_index":58,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":60,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":59,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_catsmodule",{"_index":278,"title":{},"body":{"modules/CatsModule.html":{},"overview.html":{}}}],["cluster_catsmodule_providers",{"_index":279,"title":{},"body":{"modules/CatsModule.html":{},"overview.html":{}}}],["cluster_cronmodule",{"_index":336,"title":{},"body":{"modules/CronModule.html":{},"overview.html":{}}}],["cluster_cronmodule_providers",{"_index":337,"title":{},"body":{"modules/CronModule.html":{},"overview.html":{}}}],["cluster_usersmodule",{"_index":428,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["cluster_usersmodule_providers",{"_index":429,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["colorize",{"_index":125,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["column",{"_index":202,"title":{},"body":{"classes/Cat.html":{}}}],["config",{"_index":376,"title":{},"body":{"controllers/HealthController.html":{}}}],["configmodule",{"_index":84,"title":{},"body":{"modules/AppModule.html":{}}}],["configmodule.forroot(configmoduleoptions",{"_index":152,"title":{},"body":{"modules/AppModule.html":{}}}],["configmoduleoptions",{"_index":105,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["configservice",{"_index":369,"title":{},"body":{"controllers/HealthController.html":{}}}],["console.log",{"_index":404,"title":{},"body":{"controllers/HealthController.html":{}}}],["console.log(`moduleinit",{"_index":402,"title":{},"body":{"controllers/HealthController.html":{}}}],["const",{"_index":104,"title":{},"body":{"modules/AppModule.html":{},"injectables/CatsService.html":{},"miscellaneous/variables.html":{}}}],["constructor",{"_index":284,"title":{},"body":{"injectables/CatsService.html":{},"controllers/HealthController.html":{}}}],["constructor(@injectrepository(cat",{"_index":296,"title":{},"body":{"injectables/CatsService.html":{}}}],["constructor(catrepo",{"_index":285,"title":{},"body":{"injectables/CatsService.html":{}}}],["constructor(private",{"_index":40,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/CatsController.html":{},"controllers/UsersController.html":{}}}],["continue",{"_index":398,"title":{},"body":{"controllers/HealthController.html":{}}}],["controller",{"_index":0,"title":{"controllers/AppController.html":{},"controllers/CatsController.html":{},"controllers/HealthController.html":{},"controllers/UsersController.html":{}},"body":{"controllers/AppController.html":{},"controllers/CatsController.html":{},"controllers/HealthController.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["controller('cats",{"_index":262,"title":{},"body":{"controllers/CatsController.html":{}}}],["controller('health",{"_index":374,"title":{},"body":{"controllers/HealthController.html":{}}}],["controller('users",{"_index":422,"title":{},"body":{"controllers/UsersController.html":{}}}],["controllers",{"_index":2,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/CatsController.html":{},"modules/CatsModule.html":{},"controllers/HealthController.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["coon",{"_index":213,"title":{},"body":{"classes/Cat.html":{},"classes/CreateCatDto.html":{},"classes/UpdateCatDto.html":{}}}],["coon'})@column({name",{"_index":187,"title":{},"body":{"classes/Cat.html":{}}}],["coon'})@isstring()@isnotempty",{"_index":316,"title":{},"body":{"classes/CreateCatDto.html":{}}}],["corresponding",{"_index":391,"title":{},"body":{"controllers/HealthController.html":{}}}],["coverage",{"_index":440,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["create",{"_index":218,"title":{},"body":{"controllers/CatsController.html":{},"injectables/CatsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["create(@body",{"_index":266,"title":{},"body":{"controllers/CatsController.html":{},"controllers/UsersController.html":{}}}],["create(cat",{"_index":289,"title":{},"body":{"injectables/CatsService.html":{}}}],["create(createcatdto",{"_index":223,"title":{},"body":{"controllers/CatsController.html":{}}}],["create(createuserdto",{"_index":413,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["createcatdto",{"_index":224,"title":{"classes/CreateCatDto.html":{}},"body":{"controllers/CatsController.html":{},"injectables/CatsService.html":{},"classes/CreateCatDto.html":{},"classes/UpdateCatDto.html":{},"coverage.html":{}}}],["created",{"_index":227,"title":{},"body":{"controllers/CatsController.html":{}}}],["createswagger",{"_index":451,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["createswagger(app",{"_index":505,"title":{},"body":{"miscellaneous/functions.html":{}}}],["createuserdto",{"_index":332,"title":{"classes/CreateUserDto.html":{}},"body":{"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["cron",{"_index":353,"title":{},"body":{"injectables/CronService.html":{}}}],["cron('60",{"_index":345,"title":{},"body":{"injectables/CronService.html":{}}}],["cronmodule",{"_index":97,"title":{"modules/CronModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CronModule.html":{},"modules.html":{},"overview.html":{}}}],["cronservice",{"_index":338,"title":{"injectables/CronService.html":{}},"body":{"modules/CronModule.html":{},"injectables/CronService.html":{},"coverage.html":{},"overview.html":{}}}],["database",{"_index":148,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["database.sqlite",{"_index":149,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["date",{"_index":132,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["declarations",{"_index":54,"title":{},"body":{"modules/AppModule.html":{},"modules/CatsModule.html":{},"modules/CronModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["decorators",{"_index":10,"title":{},"body":{"controllers/AppController.html":{},"classes/Cat.html":{},"controllers/CatsController.html":{},"classes/CreateCatDto.html":{},"injectables/CronService.html":{},"controllers/HealthController.html":{},"controllers/UsersController.html":{}}}],["default",{"_index":197,"title":{},"body":{"classes/Cat.html":{},"injectables/CronService.html":{},"miscellaneous/variables.html":{}}}],["default('development",{"_index":121,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["define",{"_index":27,"title":{},"body":{"controllers/AppController.html":{},"controllers/CatsController.html":{},"controllers/HealthController.html":{}}}],["define,@typescript",{"_index":26,"title":{},"body":{"controllers/AppController.html":{},"controllers/CatsController.html":{},"controllers/HealthController.html":{}}}],["defined",{"_index":14,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Cat.html":{},"controllers/CatsController.html":{},"injectables/CatsService.html":{},"classes/CreateCatDto.html":{},"injectables/CronService.html":{},"controllers/HealthController.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["delete",{"_index":245,"title":{},"body":{"controllers/CatsController.html":{},"controllers/UsersController.html":{}}}],["delete(':id",{"_index":275,"title":{},"body":{"controllers/CatsController.html":{},"controllers/UsersController.html":{}}}],["delete(':id')@apioperation({summary",{"_index":244,"title":{},"body":{"controllers/CatsController.html":{}}}],["dependencies",{"_index":52,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/CatsModule.html":{},"modules/CronModule.html":{},"modules/UsersModule.html":{},"dependencies.html":{},"overview.html":{}}}],["described",{"_index":389,"title":{},"body":{"controllers/HealthController.html":{}}}],["description",{"_index":208,"title":{},"body":{"classes/Cat.html":{},"controllers/CatsController.html":{},"classes/CreateCatDto.html":{},"classes/UpdateCatDto.html":{},"index.html":{}}}],["development",{"_index":522,"title":{},"body":{"index.html":{}}}],["disable",{"_index":19,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/CatsController.html":{},"controllers/HealthController.html":{}}}],["display",{"_index":128,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["dns",{"_index":375,"title":{},"body":{"controllers/HealthController.html":{}}}],["dnshealthindicator",{"_index":370,"title":{},"body":{"controllers/HealthController.html":{}}}],["docs",{"_index":379,"title":{},"body":{"controllers/HealthController.html":{}}}],["documentation",{"_index":441,"title":{},"body":{"coverage.html":{}}}],["dotenv",{"_index":473,"title":{},"body":{"dependencies.html":{}}}],["dto/user.dto",{"_index":419,"title":{},"body":{"controllers/UsersController.html":{}}}],["e2e",{"_index":531,"title":{},"body":{"index.html":{}}}],["efficient",{"_index":513,"title":{},"body":{"index.html":{}}}],["entities",{"_index":145,"title":{},"body":{"modules/AppModule.html":{},"controllers/CatsController.html":{},"miscellaneous/variables.html":{}}}],["entity",{"_index":203,"title":{},"body":{"classes/Cat.html":{},"controllers/CatsController.html":{}}}],["err",{"_index":141,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["error",{"_index":142,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["errorlikeobjectkeys",{"_index":140,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["errors",{"_index":143,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["eslint",{"_index":18,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/CatsController.html":{},"controllers/HealthController.html":{}}}],["eslint/no",{"_index":21,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/CatsController.html":{},"controllers/HealthController.html":{}}}],["example",{"_index":182,"title":{},"body":{"classes/Cat.html":{},"classes/CreateCatDto.html":{},"classes/UpdateCatDto.html":{}}}],["expand",{"_index":475,"title":{},"body":{"dependencies.html":{}}}],["export",{"_index":38,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Cat.html":{},"controllers/CatsController.html":{},"modules/CatsModule.html":{},"injectables/CatsService.html":{},"classes/CreateCatDto.html":{},"classes/CreateUserDto.html":{},"modules/CronModule.html":{},"injectables/CronService.html":{},"controllers/HealthController.html":{},"interfaces/ICat.html":{},"classes/UpdateCatDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["exports",{"_index":57,"title":{},"body":{"modules/AppModule.html":{},"modules/CatsModule.html":{},"modules/CronModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["express",{"_index":465,"title":{},"body":{"dependencies.html":{}}}],["extends",{"_index":330,"title":{},"body":{"classes/CreateCatDto.html":{},"classes/CreateUserDto.html":{},"classes/UpdateCatDto.html":{},"classes/UpdateUserDto.html":{}}}],["false",{"_index":127,"title":{},"body":{"modules/AppModule.html":{},"controllers/CatsController.html":{},"miscellaneous/variables.html":{}}}],["file",{"_index":5,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Cat.html":{},"controllers/CatsController.html":{},"modules/CatsModule.html":{},"injectables/CatsService.html":{},"classes/CreateCatDto.html":{},"classes/CreateUserDto.html":{},"modules/CronModule.html":{},"injectables/CronService.html":{},"controllers/HealthController.html":{},"interfaces/ICat.html":{},"classes/UpdateCatDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["findall",{"_index":219,"title":{},"body":{"controllers/CatsController.html":{},"injectables/CatsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["findone",{"_index":220,"title":{},"body":{"controllers/CatsController.html":{},"injectables/CatsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["findone(@param('id",{"_index":270,"title":{},"body":{"controllers/CatsController.html":{},"controllers/UsersController.html":{}}}],["findone(id",{"_index":239,"title":{},"body":{"controllers/CatsController.html":{},"injectables/CatsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["first",{"_index":392,"title":{},"body":{"controllers/HealthController.html":{}}}],["forbidden",{"_index":230,"title":{},"body":{"controllers/CatsController.html":{}}}],["framework",{"_index":511,"title":{},"body":{"index.html":{}}}],["function",{"_index":394,"title":{},"body":{"controllers/HealthController.html":{},"coverage.html":{}}}],["functions",{"_index":503,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["get(':id",{"_index":269,"title":{},"body":{"controllers/CatsController.html":{},"controllers/UsersController.html":{}}}],["get(':id')@apioperation({summary",{"_index":240,"title":{},"body":{"controllers/CatsController.html":{}}}],["get()@apioperation({summary",{"_index":233,"title":{},"body":{"controllers/CatsController.html":{}}}],["get()@apiresponse({status",{"_index":12,"title":{},"body":{"controllers/AppController.html":{}}}],["get()@healthcheck",{"_index":365,"title":{},"body":{"controllers/HealthController.html":{}}}],["gethello",{"_index":9,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["getting",{"_index":507,"title":{"index.html":{}},"body":{}}],["grow",{"_index":538,"title":{},"body":{"index.html":{}}}],["handlecron",{"_index":342,"title":{},"body":{"injectables/CronService.html":{}}}],["handleinterval",{"_index":343,"title":{},"body":{"injectables/CronService.html":{}}}],["handletimeout",{"_index":344,"title":{},"body":{"injectables/CronService.html":{}}}],["hapi/joi",{"_index":103,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["health",{"_index":155,"title":{},"body":{"modules/AppModule.html":{},"controllers/HealthController.html":{}}}],["healthcheck",{"_index":371,"title":{},"body":{"controllers/HealthController.html":{}}}],["healthcheckservice",{"_index":372,"title":{},"body":{"controllers/HealthController.html":{}}}],["healthcontroller",{"_index":67,"title":{"controllers/HealthController.html":{}},"body":{"modules/AppModule.html":{},"controllers/HealthController.html":{},"coverage.html":{}}}],["hello",{"_index":169,"title":{},"body":{"injectables/AppService.html":{}}}],["helmet",{"_index":480,"title":{},"body":{"dependencies.html":{}}}],["here",{"_index":549,"title":{},"body":{"index.html":{}}}],["https://docs.nestjs.com",{"_index":380,"title":{},"body":{"controllers/HealthController.html":{}}}],["https://nestjs.com",{"_index":556,"title":{},"body":{"index.html":{}}}],["httpstatus",{"_index":29,"title":{},"body":{"controllers/AppController.html":{},"controllers/CatsController.html":{}}}],["httpstatus.created",{"_index":264,"title":{},"body":{"controllers/CatsController.html":{}}}],["httpstatus.forbidden",{"_index":265,"title":{},"body":{"controllers/CatsController.html":{}}}],["httpstatus.ok",{"_index":43,"title":{},"body":{"controllers/AppController.html":{},"controllers/CatsController.html":{}}}],["icat",{"_index":313,"title":{"interfaces/ICat.html":{}},"body":{"classes/CreateCatDto.html":{},"interfaces/ICat.html":{},"classes/UpdateCatDto.html":{},"coverage.html":{}}}],["id",{"_index":177,"title":{},"body":{"classes/Cat.html":{},"controllers/CatsController.html":{},"injectables/CatsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["id'})@apiresponse({description",{"_index":241,"title":{},"body":{"controllers/CatsController.html":{}}}],["identifier",{"_index":442,"title":{},"body":{"coverage.html":{}}}],["ignore",{"_index":138,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["implements",{"_index":157,"title":{},"body":{"modules/AppModule.html":{},"classes/CreateCatDto.html":{},"controllers/HealthController.html":{},"classes/UpdateCatDto.html":{}}}],["import",{"_index":28,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Cat.html":{},"controllers/CatsController.html":{},"modules/CatsModule.html":{},"injectables/CatsService.html":{},"classes/CreateCatDto.html":{},"classes/CreateUserDto.html":{},"modules/CronModule.html":{},"injectables/CronService.html":{},"controllers/HealthController.html":{},"classes/UpdateCatDto.html":{},"classes/UpdateUserDto.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["imports",{"_index":68,"title":{},"body":{"modules/AppModule.html":{},"modules/CatsModule.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/Cat.html":{},"controllers/CatsController.html":{},"injectables/CatsService.html":{},"classes/CreateCatDto.html":{},"injectables/CronService.html":{},"controllers/HealthController.html":{},"interfaces/ICat.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Cat.html":{},"controllers/CatsController.html":{},"modules/CatsModule.html":{},"injectables/CatsService.html":{},"classes/CreateCatDto.html":{},"classes/CreateUserDto.html":{},"modules/CronModule.html":{},"injectables/CronService.html":{},"controllers/HealthController.html":{},"interfaces/ICat.html":{},"classes/UpdateCatDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["initialized",{"_index":161,"title":{},"body":{"modules/AppModule.html":{},"controllers/HealthController.html":{}}}],["injectable",{"_index":165,"title":{"injectables/AppService.html":{},"injectables/CatsService.html":{},"injectables/CronService.html":{},"injectables/UsersService.html":{}},"body":{"injectables/AppService.html":{},"injectables/CatsService.html":{},"injectables/CronService.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["injectables",{"_index":166,"title":{},"body":{"injectables/AppService.html":{},"injectables/CatsService.html":{},"injectables/CronService.html":{},"injectables/UsersService.html":{},"overview.html":{}}}],["injectrepository",{"_index":295,"title":{},"body":{"injectables/CatsService.html":{}}}],["installation",{"_index":519,"title":{},"body":{"index.html":{}}}],["installrunning",{"_index":521,"title":{},"body":{"index.html":{}}}],["interface",{"_index":405,"title":{"interfaces/ICat.html":{}},"body":{"interfaces/ICat.html":{},"coverage.html":{},"overview.html":{}}}],["interfaces",{"_index":406,"title":{},"body":{"interfaces/ICat.html":{}}}],["interval",{"_index":354,"title":{},"body":{"injectables/CronService.html":{}}}],["interval(100000",{"_index":347,"title":{},"body":{"injectables/CronService.html":{}}}],["isarray",{"_index":236,"title":{},"body":{"controllers/CatsController.html":{}}}],["isglobal",{"_index":106,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["isint",{"_index":324,"title":{},"body":{"classes/CreateCatDto.html":{},"classes/UpdateCatDto.html":{}}}],["isnotempty",{"_index":327,"title":{},"body":{"classes/CreateCatDto.html":{},"classes/UpdateCatDto.html":{}}}],["isstring",{"_index":325,"title":{},"body":{"classes/CreateCatDto.html":{},"classes/UpdateCatDto.html":{}}}],["joi",{"_index":102,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["joi.number().default(3000",{"_index":114,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["joi.object",{"_index":112,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["joi.string",{"_index":116,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["join",{"_index":545,"title":{},"body":{"index.html":{}}}],["kamil",{"_index":553,"title":{},"body":{"index.html":{}}}],["kitty",{"_index":210,"title":{},"body":{"classes/Cat.html":{},"classes/CreateCatDto.html":{},"classes/UpdateCatDto.html":{}}}],["kitty'})@column({name",{"_index":193,"title":{},"body":{"classes/Cat.html":{}}}],["kitty'})@isstring()@isnotempty()@minlength(2",{"_index":318,"title":{},"body":{"classes/CreateCatDto.html":{}}}],["legend",{"_index":53,"title":{},"body":{"modules/AppModule.html":{},"modules/CatsModule.html":{},"modules/CronModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["length",{"_index":195,"title":{},"body":{"classes/Cat.html":{}}}],["level",{"_index":130,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["levelfirst",{"_index":126,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["license",{"_index":559,"title":{},"body":{"index.html":{}}}],["licensed",{"_index":535,"title":{},"body":{"index.html":{}}}],["limit",{"_index":478,"title":{},"body":{"dependencies.html":{}}}],["local",{"_index":485,"title":{},"body":{"dependencies.html":{}}}],["log",{"_index":129,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["logged",{"_index":131,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["logger",{"_index":158,"title":{},"body":{"modules/AppModule.html":{},"injectables/CronService.html":{}}}],["logger(cronservice.name",{"_index":351,"title":{},"body":{"injectables/CronService.html":{}}}],["logger.setcontext(appmodule.name",{"_index":159,"title":{},"body":{"modules/AppModule.html":{}}}],["loggermodule",{"_index":93,"title":{},"body":{"modules/AppModule.html":{}}}],["loggermodule.forroot(loggermoduleoptions",{"_index":153,"title":{},"body":{"modules/AppModule.html":{}}}],["loggermoduleoptions",{"_index":122,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["logging",{"_index":151,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["maine",{"_index":186,"title":{},"body":{"classes/Cat.html":{},"classes/CreateCatDto.html":{},"classes/UpdateCatDto.html":{}}}],["matching",{"_index":47,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Cat.html":{},"controllers/CatsController.html":{},"modules/CatsModule.html":{},"injectables/CatsService.html":{},"classes/CreateCatDto.html":{},"classes/CreateUserDto.html":{},"modules/CronModule.html":{},"injectables/CronService.html":{},"controllers/HealthController.html":{},"interfaces/ICat.html":{},"classes/UpdateCatDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["member",{"_index":82,"title":{},"body":{"modules/AppModule.html":{}}}],["messageformat",{"_index":135,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["metadata",{"_index":490,"title":{},"body":{"dependencies.html":{}}}],["methods",{"_index":8,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/CatsController.html":{},"injectables/CatsService.html":{},"injectables/CronService.html":{},"controllers/HealthController.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["minlength",{"_index":326,"title":{},"body":{"classes/CreateCatDto.html":{},"classes/UpdateCatDto.html":{}}}],["minlength(2",{"_index":329,"title":{},"body":{"classes/CreateCatDto.html":{},"classes/UpdateCatDto.html":{}}}],["miscellaneous",{"_index":502,"title":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":534,"title":{},"body":{"index.html":{}}}],["mode",{"_index":526,"title":{},"body":{"index.html":{}}}],["module",{"_index":49,"title":{"modules/AppModule.html":{},"modules/CatsModule.html":{},"modules/CronModule.html":{},"modules/UsersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CatsModule.html":{},"modules/CronModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["modules",{"_index":51,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/CatsModule.html":{},"modules/CronModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["more",{"_index":548,"title":{},"body":{"index.html":{}}}],["msg",{"_index":136,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["myśliwiec",{"_index":554,"title":{},"body":{"index.html":{}}}],["name",{"_index":73,"title":{},"body":{"modules/AppModule.html":{},"classes/Cat.html":{},"controllers/CatsController.html":{},"injectables/CatsService.html":{},"classes/CreateCatDto.html":{},"controllers/HealthController.html":{},"interfaces/ICat.html":{},"classes/UpdateCatDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["name_length",{"_index":179,"title":{},"body":{"classes/Cat.html":{}}}],["nest",{"_index":397,"title":{},"body":{"controllers/HealthController.html":{},"index.html":{}}}],["nestframework",{"_index":558,"title":{},"body":{"index.html":{}}}],["nestjs",{"_index":94,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["nestjs/common",{"_index":31,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/CatsController.html":{},"modules/CatsModule.html":{},"injectables/CatsService.html":{},"modules/CronModule.html":{},"injectables/CronService.html":{},"controllers/HealthController.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["nestjs/config",{"_index":85,"title":{},"body":{"modules/AppModule.html":{},"controllers/HealthController.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":460,"title":{},"body":{"dependencies.html":{}}}],["nestjs/mapped",{"_index":321,"title":{},"body":{"classes/CreateCatDto.html":{},"classes/CreateUserDto.html":{},"classes/UpdateCatDto.html":{},"classes/UpdateUserDto.html":{},"dependencies.html":{}}}],["nestjs/passport",{"_index":462,"title":{},"body":{"dependencies.html":{}}}],["nestjs/platform",{"_index":464,"title":{},"body":{"dependencies.html":{}}}],["nestjs/schedule",{"_index":87,"title":{},"body":{"modules/AppModule.html":{},"injectables/CronService.html":{},"dependencies.html":{}}}],["nestjs/swagger",{"_index":34,"title":{},"body":{"controllers/AppController.html":{},"classes/Cat.html":{},"controllers/CatsController.html":{},"classes/CreateCatDto.html":{},"controllers/HealthController.html":{},"classes/UpdateCatDto.html":{},"dependencies.html":{}}}],["nestjs/terminus",{"_index":89,"title":{},"body":{"modules/AppModule.html":{},"controllers/HealthController.html":{},"dependencies.html":{}}}],["nestjs/typeorm",{"_index":91,"title":{},"body":{"modules/AppModule.html":{},"modules/CatsModule.html":{},"injectables/CatsService.html":{},"dependencies.html":{}}}],["new",{"_index":299,"title":{},"body":{"injectables/CatsService.html":{},"injectables/CronService.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["newcat",{"_index":298,"title":{},"body":{"injectables/CatsService.html":{}}}],["newcat.age",{"_index":302,"title":{},"body":{"injectables/CatsService.html":{}}}],["newcat.breed",{"_index":304,"title":{},"body":{"injectables/CatsService.html":{}}}],["newcat.name",{"_index":300,"title":{},"body":{"injectables/CatsService.html":{}}}],["node.js",{"_index":510,"title":{},"body":{"index.html":{}}}],["node_env",{"_index":115,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["npm",{"_index":520,"title":{},"body":{"index.html":{}}}],["number",{"_index":180,"title":{},"body":{"classes/Cat.html":{},"controllers/CatsController.html":{},"injectables/CatsService.html":{},"classes/CreateCatDto.html":{},"interfaces/ICat.html":{},"classes/UpdateCatDto.html":{},"injectables/UsersService.html":{}}}],["object",{"_index":568,"title":{},"body":{"miscellaneous/variables.html":{}}}],["onapplicationshutdown",{"_index":69,"title":{},"body":{"modules/AppModule.html":{},"controllers/HealthController.html":{}}}],["onapplicationshutdown(signal",{"_index":70,"title":{},"body":{"modules/AppModule.html":{},"controllers/HealthController.html":{}}}],["once",{"_index":361,"title":{},"body":{"injectables/CronService.html":{}}}],["onmoduledestroy",{"_index":386,"title":{},"body":{"controllers/HealthController.html":{}}}],["onmoduleinit",{"_index":30,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/HealthController.html":{}}}],["open",{"_index":536,"title":{},"body":{"index.html":{}}}],["optional",{"_index":75,"title":{},"body":{"modules/AppModule.html":{},"controllers/CatsController.html":{},"injectables/CatsService.html":{},"controllers/HealthController.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/functions.html":{}}}],["out",{"_index":65,"title":{},"body":{"modules/AppModule.html":{},"modules/CatsModule.html":{},"modules/CronModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["overview",{"_index":563,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":456,"title":{"dependencies.html":{}},"body":{}}],["param",{"_index":253,"title":{},"body":{"controllers/CatsController.html":{},"controllers/UsersController.html":{}}}],["parameter",{"_index":393,"title":{},"body":{"controllers/HealthController.html":{}}}],["parameters",{"_index":72,"title":{},"body":{"modules/AppModule.html":{},"controllers/CatsController.html":{},"injectables/CatsService.html":{},"controllers/HealthController.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/functions.html":{}}}],["partialtype",{"_index":320,"title":{},"body":{"classes/CreateCatDto.html":{},"classes/CreateUserDto.html":{},"classes/UpdateCatDto.html":{},"classes/UpdateUserDto.html":{}}}],["partialtype(createcatdto",{"_index":331,"title":{},"body":{"classes/CreateCatDto.html":{},"classes/UpdateCatDto.html":{}}}],["partialtype(createuserdto",{"_index":335,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{}}}],["passport",{"_index":484,"title":{},"body":{"dependencies.html":{}}}],["pid",{"_index":137,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["pid,hostname",{"_index":139,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["pino",{"_index":95,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["pinohttp",{"_index":123,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["pinologger",{"_index":92,"title":{},"body":{"modules/AppModule.html":{}}}],["please",{"_index":546,"title":{},"body":{"index.html":{}}}],["port",{"_index":113,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["post",{"_index":254,"title":{},"body":{"controllers/CatsController.html":{},"controllers/UsersController.html":{}}}],["post()@apioperation({summary",{"_index":225,"title":{},"body":{"controllers/CatsController.html":{}}}],["prefix",{"_index":216,"title":{},"body":{"controllers/CatsController.html":{},"controllers/HealthController.html":{},"controllers/UsersController.html":{}}}],["pretty",{"_index":487,"title":{},"body":{"dependencies.html":{}}}],["prettyprint",{"_index":124,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["primarygeneratedcolumn",{"_index":204,"title":{},"body":{"classes/Cat.html":{}}}],["private",{"_index":297,"title":{},"body":{"injectables/CatsService.html":{},"injectables/CronService.html":{},"controllers/HealthController.html":{}}}],["production",{"_index":118,"title":{},"body":{"modules/AppModule.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["progressive",{"_index":509,"title":{},"body":{"index.html":{}}}],["project",{"_index":537,"title":{},"body":{"index.html":{}}}],["promise",{"_index":232,"title":{},"body":{"controllers/CatsController.html":{},"injectables/CatsService.html":{},"controllers/HealthController.html":{}}}],["properties",{"_index":174,"title":{},"body":{"classes/Cat.html":{},"classes/CreateCatDto.html":{},"injectables/CronService.html":{},"interfaces/ICat.html":{}}}],["providers",{"_index":56,"title":{},"body":{"modules/AppModule.html":{},"modules/CatsModule.html":{},"modules/CronModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["provision",{"_index":120,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["public",{"_index":207,"title":{},"body":{"classes/Cat.html":{}}}],["put",{"_index":255,"title":{},"body":{"controllers/CatsController.html":{},"controllers/UsersController.html":{}}}],["put(':id",{"_index":272,"title":{},"body":{"controllers/CatsController.html":{},"controllers/UsersController.html":{}}}],["put(':id')@apioperation({summary",{"_index":249,"title":{},"body":{"controllers/CatsController.html":{}}}],["rate",{"_index":477,"title":{},"body":{"dependencies.html":{}}}],["read",{"_index":547,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":41,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"classes/Cat.html":{},"controllers/CatsController.html":{},"injectables/CatsService.html":{},"classes/CreateCatDto.html":{},"injectables/CronService.html":{},"interfaces/ICat.html":{},"classes/UpdateCatDto.html":{},"controllers/UsersController.html":{}}}],["receives",{"_index":382,"title":{},"body":{"controllers/HealthController.html":{}}}],["reflect",{"_index":489,"title":{},"body":{"dependencies.html":{}}}],["registered",{"_index":385,"title":{},"body":{"controllers/HealthController.html":{}}}],["rejected",{"_index":401,"title":{},"body":{"controllers/HealthController.html":{}}}],["remove",{"_index":221,"title":{},"body":{"controllers/CatsController.html":{},"injectables/CatsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["remove(@param('id",{"_index":276,"title":{},"body":{"controllers/CatsController.html":{},"controllers/UsersController.html":{}}}],["remove(id",{"_index":243,"title":{},"body":{"controllers/CatsController.html":{},"injectables/CatsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["removes",{"_index":311,"title":{},"body":{"injectables/CatsService.html":{},"injectables/UsersService.html":{}}}],["repository",{"_index":286,"title":{},"body":{"injectables/CatsService.html":{},"index.html":{}}}],["reset",{"_index":64,"title":{},"body":{"modules/AppModule.html":{},"modules/CatsModule.html":{},"modules/CronModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["resolved",{"_index":400,"title":{},"body":{"controllers/HealthController.html":{}}}],["result",{"_index":46,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Cat.html":{},"controllers/CatsController.html":{},"modules/CatsModule.html":{},"injectables/CatsService.html":{},"classes/CreateCatDto.html":{},"classes/CreateUserDto.html":{},"modules/CronModule.html":{},"injectables/CronService.html":{},"controllers/HealthController.html":{},"interfaces/ICat.html":{},"classes/UpdateCatDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["results",{"_index":48,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Cat.html":{},"controllers/CatsController.html":{},"modules/CatsModule.html":{},"injectables/CatsService.html":{},"classes/CreateCatDto.html":{},"classes/CreateUserDto.html":{},"modules/CronModule.html":{},"injectables/CronService.html":{},"controllers/HealthController.html":{},"interfaces/ICat.html":{},"classes/UpdateCatDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":44,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/CatsController.html":{},"injectables/CatsService.html":{},"controllers/HealthController.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["returns",{"_index":16,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/CatsController.html":{},"injectables/CatsService.html":{},"injectables/CronService.html":{},"controllers/HealthController.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["rimraf",{"_index":492,"title":{},"body":{"dependencies.html":{}}}],["run",{"_index":523,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":494,"title":{},"body":{"dependencies.html":{}}}],["scalable",{"_index":514,"title":{},"body":{"index.html":{}}}],["schedulemodule",{"_index":86,"title":{},"body":{"modules/AppModule.html":{}}}],["schedulemodule.forroot",{"_index":154,"title":{},"body":{"modules/AppModule.html":{}}}],["second",{"_index":357,"title":{},"body":{"injectables/CronService.html":{}}}],["seconds",{"_index":360,"title":{},"body":{"injectables/CronService.html":{}}}],["sequence",{"_index":388,"title":{},"body":{"controllers/HealthController.html":{}}}],["server",{"_index":515,"title":{},"body":{"index.html":{}}}],["shutdown",{"_index":164,"title":{},"body":{"modules/AppModule.html":{},"controllers/HealthController.html":{}}}],["side",{"_index":516,"title":{},"body":{"index.html":{}}}],["signal",{"_index":76,"title":{},"body":{"modules/AppModule.html":{},"controllers/HealthController.html":{}}}],["source",{"_index":4,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Cat.html":{},"controllers/CatsController.html":{},"modules/CatsModule.html":{},"injectables/CatsService.html":{},"classes/CreateCatDto.html":{},"classes/CreateUserDto.html":{},"modules/CronModule.html":{},"injectables/CronService.html":{},"controllers/HealthController.html":{},"interfaces/ICat.html":{},"classes/UpdateCatDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"index.html":{}}}],["sponsors",{"_index":540,"title":{},"body":{"index.html":{}}}],["sqlite",{"_index":147,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["sqlite3",{"_index":496,"title":{},"body":{"dependencies.html":{}}}],["src/.../app.module.ts",{"_index":567,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../main.ts",{"_index":504,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/app/app.controller",{"_index":96,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/app.controller.ts",{"_index":6,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app/app.controller.ts:14",{"_index":15,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app/app.module.ts",{"_index":66,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/app.module.ts:73",{"_index":79,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/app.module.ts:77",{"_index":71,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/app.service",{"_index":36,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["src/app/app.service.ts",{"_index":167,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["src/app/app.service.ts:5",{"_index":168,"title":{},"body":{"injectables/AppService.html":{}}}],["src/cron/cron.module",{"_index":98,"title":{},"body":{"modules/AppModule.html":{}}}],["src/cron/cron.module.ts",{"_index":339,"title":{},"body":{"modules/CronModule.html":{}}}],["src/cron/cron.service",{"_index":340,"title":{},"body":{"modules/CronModule.html":{}}}],["src/cron/cron.service.ts",{"_index":341,"title":{},"body":{"injectables/CronService.html":{},"coverage.html":{}}}],["src/cron/cron.service.ts:14",{"_index":348,"title":{},"body":{"injectables/CronService.html":{}}}],["src/cron/cron.service.ts:19",{"_index":350,"title":{},"body":{"injectables/CronService.html":{}}}],["src/cron/cron.service.ts:6",{"_index":352,"title":{},"body":{"injectables/CronService.html":{}}}],["src/cron/cron.service.ts:9",{"_index":346,"title":{},"body":{"injectables/CronService.html":{}}}],["src/health/health.controller",{"_index":99,"title":{},"body":{"modules/AppModule.html":{}}}],["src/health/health.controller.ts",{"_index":363,"title":{},"body":{"controllers/HealthController.html":{},"coverage.html":{}}}],["src/health/health.controller.ts:18",{"_index":366,"title":{},"body":{"controllers/HealthController.html":{}}}],["src/health/health.controller.ts:32",{"_index":368,"title":{},"body":{"controllers/HealthController.html":{}}}],["src/health/health.controller.ts:38",{"_index":367,"title":{},"body":{"controllers/HealthController.html":{}}}],["src/main.ts",{"_index":450,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/modules/cats/cats.controller",{"_index":281,"title":{},"body":{"modules/CatsModule.html":{}}}],["src/modules/cats/cats.controller.ts",{"_index":215,"title":{},"body":{"controllers/CatsController.html":{},"coverage.html":{}}}],["src/modules/cats/cats.controller.ts:34",{"_index":231,"title":{},"body":{"controllers/CatsController.html":{}}}],["src/modules/cats/cats.controller.ts:46",{"_index":238,"title":{},"body":{"controllers/CatsController.html":{}}}],["src/modules/cats/cats.controller.ts:58",{"_index":242,"title":{},"body":{"controllers/CatsController.html":{}}}],["src/modules/cats/cats.controller.ts:70",{"_index":251,"title":{},"body":{"controllers/CatsController.html":{}}}],["src/modules/cats/cats.controller.ts:82",{"_index":246,"title":{},"body":{"controllers/CatsController.html":{}}}],["src/modules/cats/cats.module",{"_index":100,"title":{},"body":{"modules/AppModule.html":{}}}],["src/modules/cats/cats.module.ts",{"_index":280,"title":{},"body":{"modules/CatsModule.html":{}}}],["src/modules/cats/cats.service",{"_index":258,"title":{},"body":{"controllers/CatsController.html":{},"modules/CatsModule.html":{}}}],["src/modules/cats/cats.service.ts",{"_index":283,"title":{},"body":{"injectables/CatsService.html":{},"coverage.html":{}}}],["src/modules/cats/cats.service.ts:10",{"_index":287,"title":{},"body":{"injectables/CatsService.html":{}}}],["src/modules/cats/cats.service.ts:13",{"_index":290,"title":{},"body":{"injectables/CatsService.html":{}}}],["src/modules/cats/cats.service.ts:23",{"_index":291,"title":{},"body":{"injectables/CatsService.html":{}}}],["src/modules/cats/cats.service.ts:27",{"_index":292,"title":{},"body":{"injectables/CatsService.html":{}}}],["src/modules/cats/cats.service.ts:31",{"_index":294,"title":{},"body":{"injectables/CatsService.html":{}}}],["src/modules/cats/cats.service.ts:35",{"_index":293,"title":{},"body":{"injectables/CatsService.html":{}}}],["src/modules/cats/dto/cat.dto",{"_index":259,"title":{},"body":{"controllers/CatsController.html":{},"injectables/CatsService.html":{}}}],["src/modules/cats/dto/cat.dto.ts",{"_index":312,"title":{},"body":{"classes/CreateCatDto.html":{},"classes/UpdateCatDto.html":{},"coverage.html":{}}}],["src/modules/cats/dto/cat.dto.ts:14",{"_index":319,"title":{},"body":{"classes/CreateCatDto.html":{}}}],["src/modules/cats/dto/cat.dto.ts:19",{"_index":315,"title":{},"body":{"classes/CreateCatDto.html":{}}}],["src/modules/cats/dto/cat.dto.ts:24",{"_index":317,"title":{},"body":{"classes/CreateCatDto.html":{}}}],["src/modules/cats/entities/cat.entity",{"_index":260,"title":{},"body":{"controllers/CatsController.html":{},"modules/CatsModule.html":{},"injectables/CatsService.html":{}}}],["src/modules/cats/entities/cat.entity.ts",{"_index":173,"title":{},"body":{"classes/Cat.html":{},"coverage.html":{}}}],["src/modules/cats/entities/cat.entity.ts:11",{"_index":192,"title":{},"body":{"classes/Cat.html":{}}}],["src/modules/cats/entities/cat.entity.ts:15",{"_index":196,"title":{},"body":{"classes/Cat.html":{}}}],["src/modules/cats/entities/cat.entity.ts:19",{"_index":185,"title":{},"body":{"classes/Cat.html":{}}}],["src/modules/cats/entities/cat.entity.ts:23",{"_index":189,"title":{},"body":{"classes/Cat.html":{}}}],["src/modules/cats/entities/cat.entity.ts:7",{"_index":200,"title":{},"body":{"classes/Cat.html":{}}}],["src/modules/cats/interfaces/cat.interface",{"_index":323,"title":{},"body":{"classes/CreateCatDto.html":{},"classes/UpdateCatDto.html":{}}}],["src/modules/cats/interfaces/cat.interface.ts",{"_index":407,"title":{},"body":{"interfaces/ICat.html":{},"coverage.html":{}}}],["src/modules/users/dto/user.dto",{"_index":438,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/modules/users/dto/user.dto.ts",{"_index":333,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{},"coverage.html":{}}}],["src/modules/users/entities/user.entity.ts",{"_index":409,"title":{},"body":{"classes/User.html":{},"coverage.html":{}}}],["src/modules/users/users.controller.ts",{"_index":411,"title":{},"body":{"controllers/UsersController.html":{},"coverage.html":{}}}],["src/modules/users/users.controller.ts:11",{"_index":414,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/modules/users/users.controller.ts:16",{"_index":415,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/modules/users/users.controller.ts:21",{"_index":416,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/modules/users/users.controller.ts:26",{"_index":418,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/modules/users/users.controller.ts:31",{"_index":417,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/modules/users/users.module",{"_index":101,"title":{},"body":{"modules/AppModule.html":{}}}],["src/modules/users/users.module.ts",{"_index":430,"title":{},"body":{"modules/UsersModule.html":{}}}],["src/modules/users/users.service.ts",{"_index":432,"title":{},"body":{"injectables/UsersService.html":{},"coverage.html":{}}}],["src/modules/users/users.service.ts:11",{"_index":434,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/modules/users/users.service.ts:15",{"_index":435,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/modules/users/users.service.ts:19",{"_index":437,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/modules/users/users.service.ts:23",{"_index":436,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/modules/users/users.service.ts:7",{"_index":433,"title":{},"body":{"injectables/UsersService.html":{}}}],["start",{"_index":524,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":527,"title":{},"body":{"index.html":{}}}],["start:prodtest",{"_index":528,"title":{},"body":{"index.html":{}}}],["started",{"_index":508,"title":{"index.html":{}},"body":{}}],["starter",{"_index":518,"title":{},"body":{"index.html":{}}}],["statements",{"_index":443,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":178,"title":{},"body":{"classes/Cat.html":{}}}],["status",{"_index":42,"title":{},"body":{"controllers/AppController.html":{},"controllers/CatsController.html":{}}}],["stay",{"_index":550,"title":{},"body":{"index.html":{}}}],["string",{"_index":17,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Cat.html":{},"classes/CreateCatDto.html":{},"controllers/HealthController.html":{},"interfaces/ICat.html":{},"classes/UpdateCatDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["successfully",{"_index":228,"title":{},"body":{"controllers/CatsController.html":{}}}],["summary",{"_index":263,"title":{},"body":{"controllers/CatsController.html":{}}}],["support",{"_index":541,"title":{},"body":{"index.html":{},"modules.html":{}}}],["svg",{"_index":561,"title":{},"body":{"modules.html":{}}}],["swagger",{"_index":498,"title":{},"body":{"dependencies.html":{}}}],["synchronize",{"_index":150,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["table",{"_index":455,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":454,"title":{},"body":{"coverage.html":{}}}],["termination",{"_index":383,"title":{},"body":{"controllers/HealthController.html":{}}}],["terminusmodule",{"_index":88,"title":{},"body":{"modules/AppModule.html":{}}}],["test",{"_index":119,"title":{},"body":{"modules/AppModule.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["test:covsupport",{"_index":533,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":532,"title":{},"body":{"index.html":{}}}],["tests",{"_index":530,"title":{},"body":{"index.html":{}}}],["thanks",{"_index":539,"title":{},"body":{"index.html":{}}}],["this.appservice.gethello",{"_index":45,"title":{},"body":{"controllers/AppController.html":{}}}],["this.catrepo.find",{"_index":307,"title":{},"body":{"injectables/CatsService.html":{}}}],["this.catrepo.findone(id",{"_index":308,"title":{},"body":{"injectables/CatsService.html":{}}}],["this.catrepo.save(newcat",{"_index":306,"title":{},"body":{"injectables/CatsService.html":{}}}],["this.catsservice.create(createcatdto",{"_index":267,"title":{},"body":{"controllers/CatsController.html":{}}}],["this.catsservice.findall",{"_index":268,"title":{},"body":{"controllers/CatsController.html":{}}}],["this.catsservice.findone(id",{"_index":271,"title":{},"body":{"controllers/CatsController.html":{}}}],["this.catsservice.remove(id",{"_index":277,"title":{},"body":{"controllers/CatsController.html":{}}}],["this.catsservice.update(id",{"_index":274,"title":{},"body":{"controllers/CatsController.html":{}}}],["this.config.get('node_env",{"_index":403,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.dns.pingcheck('nestjs",{"_index":378,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.health.check",{"_index":377,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.logger.debug('called",{"_index":356,"title":{},"body":{"injectables/CronService.html":{}}}],["this.logger.fatal",{"_index":162,"title":{},"body":{"modules/AppModule.html":{}}}],["this.logger.info(`moduleinit",{"_index":160,"title":{},"body":{"modules/AppModule.html":{}}}],["this.usersservice.create(createuserdto",{"_index":423,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.findall",{"_index":424,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.findone(+id",{"_index":425,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.remove(+id",{"_index":427,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.update(+id",{"_index":426,"title":{},"body":{"controllers/UsersController.html":{}}}],["time",{"_index":133,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["timeout",{"_index":355,"title":{},"body":{"injectables/CronService.html":{}}}],["timeout(50000",{"_index":349,"title":{},"body":{"injectables/CronService.html":{}}}],["touch",{"_index":551,"title":{},"body":{"index.html":{}}}],["transformer",{"_index":470,"title":{},"body":{"dependencies.html":{}}}],["translatetime",{"_index":134,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["true",{"_index":107,"title":{},"body":{"modules/AppModule.html":{},"controllers/CatsController.html":{},"miscellaneous/variables.html":{}}}],["twitter",{"_index":557,"title":{},"body":{"index.html":{}}}],["type",{"_index":74,"title":{},"body":{"modules/AppModule.html":{},"classes/Cat.html":{},"controllers/CatsController.html":{},"injectables/CatsService.html":{},"classes/CreateCatDto.html":{},"controllers/HealthController.html":{},"interfaces/ICat.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["typeorm",{"_index":205,"title":{},"body":{"classes/Cat.html":{},"injectables/CatsService.html":{},"dependencies.html":{}}}],["typeormmodule",{"_index":90,"title":{},"body":{"modules/AppModule.html":{},"modules/CatsModule.html":{}}}],["typeormmodule.forfeature([cat",{"_index":282,"title":{},"body":{"modules/CatsModule.html":{}}}],["typeormmodule.forroot(typeormmoduleoptions",{"_index":156,"title":{},"body":{"modules/AppModule.html":{}}}],["typeormmoduleoptions",{"_index":144,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["types",{"_index":322,"title":{},"body":{"classes/CreateCatDto.html":{},"classes/CreateUserDto.html":{},"classes/UpdateCatDto.html":{},"classes/UpdateUserDto.html":{},"dependencies.html":{}}}],["typescript",{"_index":20,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"index.html":{}}}],["ui",{"_index":499,"title":{},"body":{"dependencies.html":{}}}],["undefined",{"_index":13,"title":{},"body":{"controllers/AppController.html":{},"classes/Cat.html":{},"controllers/CatsController.html":{}}}],["unique",{"_index":190,"title":{},"body":{"classes/Cat.html":{}}}],["unit",{"_index":529,"title":{},"body":{"index.html":{}}}],["unsafe",{"_index":22,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["until",{"_index":399,"title":{},"body":{"controllers/HealthController.html":{}}}],["update",{"_index":222,"title":{},"body":{"controllers/CatsController.html":{},"injectables/CatsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["update(@param('id",{"_index":273,"title":{},"body":{"controllers/CatsController.html":{},"controllers/UsersController.html":{}}}],["update(id",{"_index":247,"title":{},"body":{"controllers/CatsController.html":{},"injectables/CatsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["updatecatdto",{"_index":248,"title":{"classes/UpdateCatDto.html":{}},"body":{"controllers/CatsController.html":{},"injectables/CatsService.html":{},"classes/CreateCatDto.html":{},"classes/UpdateCatDto.html":{},"coverage.html":{}}}],["updates",{"_index":310,"title":{},"body":{"injectables/CatsService.html":{},"injectables/UsersService.html":{}}}],["updateuserdto",{"_index":334,"title":{"classes/UpdateUserDto.html":{}},"body":{"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["updating",{"_index":250,"title":{},"body":{"controllers/CatsController.html":{}}}],["use",{"_index":24,"title":{},"body":{"controllers/AppController.html":{},"controllers/CatsController.html":{},"controllers/HealthController.html":{}}}],["user",{"_index":408,"title":{"classes/User.html":{}},"body":{"classes/User.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["users",{"_index":412,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["users.controller",{"_index":431,"title":{},"body":{"modules/UsersModule.html":{}}}],["users.service",{"_index":421,"title":{},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{}}}],["userscontroller",{"_index":410,"title":{"controllers/UsersController.html":{}},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{},"coverage.html":{}}}],["usersmodule",{"_index":62,"title":{"modules/UsersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["usersservice",{"_index":420,"title":{"injectables/UsersService.html":{}},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"overview.html":{}}}],["valid('development",{"_index":117,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["validationoptions",{"_index":108,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["validationschema",{"_index":111,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["validator",{"_index":328,"title":{},"body":{"classes/CreateCatDto.html":{},"classes/UpdateCatDto.html":{},"dependencies.html":{}}}],["value",{"_index":198,"title":{},"body":{"classes/Cat.html":{},"injectables/CronService.html":{},"miscellaneous/variables.html":{}}}],["variable",{"_index":446,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":566,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["void",{"_index":78,"title":{},"body":{"modules/AppModule.html":{},"injectables/CronService.html":{},"controllers/HealthController.html":{}}}],["watch",{"_index":525,"title":{},"body":{"index.html":{}}}],["website",{"_index":555,"title":{},"body":{"index.html":{}}}],["world",{"_index":170,"title":{},"body":{"injectables/AppService.html":{}}}],["yes",{"_index":77,"title":{},"body":{"modules/AppModule.html":{},"controllers/HealthController.html":{}}}],["you'd",{"_index":544,"title":{},"body":{"index.html":{}}}],["zoom",{"_index":63,"title":{},"body":{"modules/AppModule.html":{},"modules/CatsModule.html":{},"modules/CronModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/app.controller.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getHello\n                        \n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@ApiResponse({status: undefined})\n                \n            \n\n            \n                \n                    Defined in src/app/app.controller.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        /* eslint-disable @typescript-eslint/no-unsafe-assignment,no-use-before-define,@typescript-eslint/no-use-before-define */\nimport { Controller, Get, HttpStatus, OnModuleInit } from '@nestjs/common'\nimport { ApiResponse, ApiTags } from '@nestjs/swagger'\n\nimport { AppService } from 'src/app/app.service'\n\n@ApiTags(AppController.name)\n@Controller()\nexport class AppController {\n    constructor(private readonly appService: AppService) {}\n\n    @Get()\n    @ApiResponse({ status: HttpStatus.OK })\n    getHello(): string {\n        return this.appService.getHello()\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AppModule_imports\n\n\n\n\nCatsModule\n\nCatsModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nCatsModule->AppModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                        \n                            HealthController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            CatsModule\n                        \n                        \n                            UsersModule\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onApplicationShutdown\n                        \n                        \n                    \n                \n            \n            \n                \nonApplicationShutdown(signal?: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.module.ts:77\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    signal\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onModuleInit\n                        \n                        \n                    \n                \n            \n            \n                \nonModuleInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.module.ts:73\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        /* eslint-disable @typescript-eslint/no-unsafe-assignment,@typescript-eslint/no-unsafe-call,@typescript-eslint/no-unsafe-member-access */\nimport { Module, OnModuleInit, OnApplicationShutdown } from '@nestjs/common'\nimport { ConfigModule } from '@nestjs/config'\nimport { ScheduleModule } from '@nestjs/schedule'\nimport { TerminusModule } from '@nestjs/terminus'\nimport { TypeOrmModule } from '@nestjs/typeorm'\n\nimport { PinoLogger, LoggerModule } from 'nestjs-pino'\n\nimport { AppController } from 'src/app/app.controller'\nimport { AppService } from 'src/app/app.service'\nimport { CronModule } from 'src/cron/cron.module'\nimport { HealthController } from 'src/health/health.controller'\nimport { CatsModule } from 'src/modules/cats/cats.module'\nimport { UsersModule } from 'src/modules/users/users.module'\n\nimport * as Joi from '@hapi/joi'\n\nconst ConfigModuleOptions = {\n    isGlobal: true,\n    validationOptions: {\n        allowUnknown: true,\n        abortEarly: true,\n    },\n    validationSchema: Joi.object({\n        PORT: Joi.number().default(3000),\n        NODE_ENV: Joi.string()\n            .valid('development', 'production', 'test', 'provision')\n            .default('development'),\n    }),\n}\n\nconst LoggerModuleOptions = {\n    pinoHttp: {\n        prettyPrint: {\n            colorize: true,\n            levelFirst: false, // Display the log level name before the logged date and time\n            translateTime: true,\n            messageFormat: '{msg}', // 'pid', 'msg', 'level'\n            ignore: 'pid,hostname',\n            errorLikeObjectKeys: ['err', 'error', 'errors'],\n        },\n    },\n}\n\nconst TypeOrmModuleOptions = {\n    entities: [`${__dirname}/../**/*.entity.{ts,js}`],\n    type: 'sqlite' as const,\n    database: 'database.sqlite',\n    synchronize: true,\n    logging: true,\n}\n\n@Module({\n    controllers: [AppController, HealthController],\n    imports: [\n        ConfigModule.forRoot(ConfigModuleOptions),\n        LoggerModule.forRoot(LoggerModuleOptions),\n        ScheduleModule.forRoot(),\n        // CronModule,\n        TerminusModule, // Health module\n        TypeOrmModule.forRoot(TypeOrmModuleOptions),\n        CatsModule,\n        UsersModule,\n    ],\n    providers: [AppService],\n})\nexport class AppModule implements OnModuleInit, OnApplicationShutdown {\n    constructor(private readonly logger: PinoLogger) {\n        logger.setContext(AppModule.name)\n    }\n\n    onModuleInit(): void {\n        this.logger.info(`ModuleInit - AppModule has been initialized.`)\n    }\n\n    onApplicationShutdown(signal?: string): void {\n        this.logger.fatal(\n            `ApplicationShutdown - AppModule has been shutdown with ${signal} signal`,\n        )\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/app.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getHello\n                        \n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.service.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, OnModuleInit } from '@nestjs/common'\n\n@Injectable()\nexport class AppService {\n    getHello(): string {\n        return 'Hello World!'\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Cat.html":{"url":"classes/Cat.html","title":"class - Cat","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Cat\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/cats/entities/cat.entity.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                age\n                            \n                            \n                                breed\n                            \n                            \n                                id\n                            \n                            \n                                name\n                            \n                            \n                                    Static\n                                    Readonly\n                                NAME_LENGTH\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            age\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'The age of the Cat', example: 1})@Column({name: 'cat_age'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/cats/entities/cat.entity.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            breed\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'The breed of the Cat', example: 'Maine Coon'})@Column({name: 'cat_breed'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/cats/entities/cat.entity.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'Cat unique ID', example: '36635263'})@PrimaryGeneratedColumn()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/cats/entities/cat.entity.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'The name of the Cat', example: 'Kitty'})@Column({name: 'cat_name', length: undefined})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/cats/entities/cat.entity.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                                Readonly\n                            NAME_LENGTH\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 36\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/cats/entities/cat.entity.ts:7\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger'\n\nimport { Column, Entity, PrimaryGeneratedColumn } from 'typeorm'\n\n@Entity({ name: 'cats' })\nexport class Cat {\n    public static readonly NAME_LENGTH = 36\n\n    @ApiProperty({ description: 'Cat unique ID', example: '36635263' })\n    @PrimaryGeneratedColumn()\n    id: number\n\n    @ApiProperty({ description: 'The name of the Cat', example: 'Kitty' })\n    @Column({ name: 'cat_name', length: Cat.NAME_LENGTH })\n    name: string\n\n    @ApiProperty({ description: 'The age of the Cat', example: 1 })\n    @Column({ name: 'cat_age' })\n    age: number\n\n    @ApiProperty({ description: 'The breed of the Cat', example: 'Maine Coon' })\n    @Column({ name: 'cat_breed' })\n    breed: string\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/CatsController.html":{"url":"controllers/CatsController.html","title":"controller - CatsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  CatsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/cats/cats.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                cats\n            \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                remove\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            create\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    create(createCatDto: CreateCatDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@ApiOperation({summary: 'Create cat'})@ApiResponse({status: undefined, description: 'Created Cat Successfully', type: CatEntity})@ApiResponse({description: 'Forbidden', status: undefined})\n                \n            \n\n            \n                \n                    Defined in src/modules/cats/cats.controller.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createCatDto\n                                    \n                                                CreateCatDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findAll\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@ApiOperation({summary: 'Get all Cats'})@ApiResponse({description: 'Array of all Cats Entities', isArray: true, status: undefined, type: CatEntity})\n                \n            \n\n            \n                \n                    Defined in src/modules/cats/cats.controller.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findOne\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')@ApiOperation({summary: 'Get a Cats by id'})@ApiResponse({description: 'Entity of a Cats', isArray: false, status: undefined, type: CatEntity})\n                \n            \n\n            \n                \n                    Defined in src/modules/cats/cats.controller.ts:58\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            remove\n                        \n                        \n                    \n                \n            \n            \n                \nremove(id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')@ApiOperation({summary: 'Delete a Cats by id'})@ApiResponse({description: 'Delete a Cats', isArray: false, status: undefined, type: CatEntity})\n                \n            \n\n            \n                \n                    Defined in src/modules/cats/cats.controller.ts:82\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            update\n                        \n                        \n                    \n                \n            \n            \n                \nupdate(id: number, updateCatDto: UpdateCatDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Put(':id')@ApiOperation({summary: 'Update a Cats by id'})@ApiResponse({description: 'Updating a Cats', isArray: false, status: undefined, type: CatEntity})\n                \n            \n\n            \n                \n                    Defined in src/modules/cats/cats.controller.ts:70\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateCatDto\n                                    \n                                                UpdateCatDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        /* eslint-disable no-use-before-define,@typescript-eslint/no-use-before-define */\nimport {\n    Body,\n    Controller,\n    Get,\n    Param,\n    Post,\n    HttpStatus,\n    Delete,\n    Put,\n} from '@nestjs/common'\nimport { ApiOperation, ApiResponse, ApiTags } from '@nestjs/swagger'\n\nimport { CatsService } from 'src/modules/cats/cats.service'\nimport { CreateCatDto, UpdateCatDto } from 'src/modules/cats/dto/cat.dto'\nimport { Cat as CatEntity } from 'src/modules/cats/entities/cat.entity'\n\n@ApiTags(CatsController.name)\n@Controller('cats')\nexport class CatsController {\n    constructor(private readonly catsService: CatsService) {}\n\n    @Post()\n    @ApiOperation({ summary: 'Create cat' })\n    @ApiResponse({\n        status: HttpStatus.CREATED,\n        description: 'Created Cat Successfully',\n        type: CatEntity,\n    })\n    @ApiResponse({\n        description: 'Forbidden',\n        status: HttpStatus.FORBIDDEN,\n    })\n    async create(@Body() createCatDto: CreateCatDto): Promise {\n        return this.catsService.create(createCatDto)\n    }\n\n    @Get()\n    @ApiOperation({ summary: 'Get all Cats' })\n    @ApiResponse({\n        description: 'Array of all Cats Entities',\n        isArray: true,\n        status: HttpStatus.OK,\n        type: CatEntity,\n    })\n    async findAll(): Promise {\n        return this.catsService.findAll()\n    }\n\n    @Get(':id')\n    @ApiOperation({ summary: 'Get a Cats by id' })\n    @ApiResponse({\n        description: 'Entity of a Cats',\n        isArray: false,\n        status: HttpStatus.OK,\n        type: CatEntity,\n    })\n    async findOne(@Param('id') id: number): Promise {\n        return this.catsService.findOne(id)\n    }\n\n    @Put(':id')\n    @ApiOperation({ summary: 'Update a Cats by id' })\n    @ApiResponse({\n        description: 'Updating a Cats',\n        isArray: false,\n        status: HttpStatus.OK,\n        type: CatEntity,\n    })\n    update(@Param('id') id: number, @Body() updateCatDto: UpdateCatDto) {\n        return this.catsService.update(id, updateCatDto)\n    }\n\n    @Delete(':id')\n    @ApiOperation({ summary: 'Delete a Cats by id' })\n    @ApiResponse({\n        description: 'Delete a Cats',\n        isArray: false,\n        status: HttpStatus.OK,\n        type: CatEntity,\n    })\n    remove(@Param('id') id: number) {\n        return this.catsService.remove(id)\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CatsModule.html":{"url":"modules/CatsModule.html","title":"module - CatsModule","body":"\n                   \n\n\n\n\n    Modules\n    CatsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_CatsModule\n\n\n\ncluster_CatsModule_providers\n\n\n\n\nCatsService\n\nCatsService\n\n\n\nCatsModule\n\nCatsModule\n\nCatsModule -->\n\nCatsService->CatsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/cats/cats.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            CatsService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            CatsController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common'\nimport { TypeOrmModule } from '@nestjs/typeorm'\n\nimport { CatsController } from 'src/modules/cats/cats.controller'\nimport { CatsService } from 'src/modules/cats/cats.service'\nimport { Cat } from 'src/modules/cats/entities/cat.entity'\n\n@Module({\n    controllers: [CatsController],\n    imports: [TypeOrmModule.forFeature([Cat])],\n    providers: [CatsService],\n})\nexport class CatsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CatsService.html":{"url":"injectables/CatsService.html","title":"injectable - CatsService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  CatsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/cats/cats.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(catRepo: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/modules/cats/cats.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        catRepo\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            create\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    create(cat: CreateCatDto)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/cats/cats.service.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    cat\n                                    \n                                                CreateCatDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findAll\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll()\n                \n            \n\n\n            \n                \n                    Defined in src/modules/cats/cats.service.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findOne\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/cats/cats.service.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            remove\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    remove(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/cats/cats.service.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            update\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: number, updateCatDto: UpdateCatDto)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/cats/cats.service.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateCatDto\n                                    \n                                                UpdateCatDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common'\nimport { InjectRepository } from '@nestjs/typeorm'\n\nimport { CreateCatDto, UpdateCatDto } from 'src/modules/cats/dto/cat.dto'\nimport { Cat } from 'src/modules/cats/entities/cat.entity'\n\nimport { Repository } from 'typeorm'\n\n@Injectable()\nexport class CatsService {\n    constructor(@InjectRepository(Cat) private readonly catRepo: Repository) {}\n\n    async create(cat: CreateCatDto) {\n        const newCat = new Cat()\n\n        newCat.name = cat.name\n        newCat.age = cat.age\n        newCat.breed = cat.breed\n\n        return this.catRepo.save(newCat)\n    }\n\n    async findAll(): Promise {\n        return this.catRepo.find()\n    }\n\n    async findOne(id: number): Promise {\n        return this.catRepo.findOne(id)\n    }\n\n    async update(id: number, updateCatDto: UpdateCatDto) {\n        return `This action updates a #${id} cat`\n    }\n\n    async remove(id: number) {\n        return `This action removes a #${id} cat`\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateCatDto.html":{"url":"classes/CreateCatDto.html","title":"class - CreateCatDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateCatDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/cats/dto/cat.dto.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            ICat\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                age\n                            \n                            \n                                    Readonly\n                                breed\n                            \n                            \n                                    Readonly\n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            age\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'The age of the Cat', example: 1})@IsInt()@IsNotEmpty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/cats/dto/cat.dto.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            breed\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'The breed of the Cat', example: 'Maine Coon'})@IsString()@IsNotEmpty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/cats/dto/cat.dto.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'The name of the Cat', example: 'Kitty'})@IsString()@IsNotEmpty()@MinLength(2)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/cats/dto/cat.dto.ts:14\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/mapped-types'\nimport { ApiProperty } from '@nestjs/swagger'\n\nimport { ICat } from 'src/modules/cats/interfaces/cat.interface'\n\nimport { IsInt, IsString, MinLength, IsNotEmpty } from 'class-validator'\n\nexport class CreateCatDto implements ICat {\n    @ApiProperty({ description: 'The name of the Cat', example: 'Kitty' })\n    @IsString()\n    @IsNotEmpty()\n    @MinLength(2)\n    readonly name: string\n\n    @ApiProperty({ description: 'The age of the Cat', example: 1 })\n    @IsInt()\n    @IsNotEmpty()\n    readonly age: number\n\n    @ApiProperty({ description: 'The breed of the Cat', example: 'Maine Coon' })\n    @IsString()\n    @IsNotEmpty()\n    readonly breed: string\n}\n\nexport class UpdateCatDto extends PartialType(CreateCatDto) {}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUserDto.html":{"url":"classes/CreateUserDto.html","title":"class - CreateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/users/dto/user.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/mapped-types'\n\nexport class CreateUserDto {}\n\nexport class UpdateUserDto extends PartialType(CreateUserDto) {}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CronModule.html":{"url":"modules/CronModule.html","title":"module - CronModule","body":"\n                   \n\n\n\n\n    Modules\n    CronModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_CronModule\n\n\n\ncluster_CronModule_providers\n\n\n\n\nCronService\n\nCronService\n\n\n\nCronModule\n\nCronModule\n\nCronModule -->\n\nCronService->CronModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/cron/cron.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            CronService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common'\n\nimport { CronService } from 'src/cron/cron.service'\n\n@Module({\n    providers: [CronService],\n})\nexport class CronModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CronService.html":{"url":"injectables/CronService.html","title":"injectable - CronService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  CronService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/cron/cron.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                handleCron\n                            \n                            \n                                handleInterval\n                            \n                            \n                                handleTimeout\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            handleCron\n                        \n                        \n                    \n                \n            \n            \n                \nhandleCron()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Cron('60 * * * * *')\n                \n            \n\n            \n                \n                    Defined in src/cron/cron.service.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            handleInterval\n                        \n                        \n                    \n                \n            \n            \n                \nhandleInterval()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Interval(100000)\n                \n            \n\n            \n                \n                    Defined in src/cron/cron.service.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            handleTimeout\n                        \n                        \n                    \n                \n            \n            \n                \nhandleTimeout()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Timeout(50000)\n                \n            \n\n            \n                \n                    Defined in src/cron/cron.service.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            logger\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Logger(CronService.name)\n                        \n                    \n                        \n                            \n                                    Defined in src/cron/cron.service.ts:6\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable, Logger } from '@nestjs/common'\nimport { Cron, Interval, Timeout } from '@nestjs/schedule'\n\n@Injectable()\nexport class CronService {\n    private readonly logger = new Logger(CronService.name)\n\n    @Cron('60 * * * * *')\n    handleCron() {\n        this.logger.debug('Called when the second is 60')\n    }\n\n    @Interval(100000)\n    handleInterval() {\n        this.logger.debug('Called every 100 seconds')\n    }\n\n    @Timeout(50000)\n    handleTimeout() {\n        this.logger.debug('Called once after 50 seconds')\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/HealthController.html":{"url":"controllers/HealthController.html","title":"controller - HealthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  HealthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/health/health.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                health\n            \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                check\n                            \n                            \n                                onApplicationShutdown\n                            \n                            \n                                onModuleInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            check\n                        \n                        \n                    \n                \n            \n            \n                \ncheck()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@HealthCheck()\n                \n            \n\n            \n                \n                    Defined in src/health/health.controller.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onApplicationShutdown\n                        \n                        \n                    \n                \n            \n            \n                \nonApplicationShutdown(signal?: string)\n                \n            \n\n\n            \n                \n                    Defined in src/health/health.controller.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    signal\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onModuleInit\n                        \n                        \n                    \n                \n            \n            \n                \nonModuleInit()\n                \n            \n\n\n            \n                \n                    Defined in src/health/health.controller.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        /* eslint-disable no-use-before-define,@typescript-eslint/no-use-before-define */\nimport { Controller, Get, OnApplicationShutdown, OnModuleInit } from '@nestjs/common'\nimport { ConfigService } from '@nestjs/config'\nimport { ApiTags } from '@nestjs/swagger'\nimport { DNSHealthIndicator, HealthCheck, HealthCheckService } from '@nestjs/terminus'\n\n@ApiTags(HealthController.name)\n@Controller('health')\nexport class HealthController implements OnModuleInit, OnApplicationShutdown {\n    constructor(\n        private health: HealthCheckService,\n        private dns: DNSHealthIndicator,\n        private config: ConfigService,\n    ) {}\n\n    @Get()\n    @HealthCheck()\n    check() {\n        return this.health.check([\n            () => this.dns.pingCheck('nestjs-docs', 'https://docs.nestjs.com'),\n        ])\n    }\n\n    /*\n     * When the application receives a termination signal it will call any registered\n     * onModuleDestroy(), beforeApplicationShutdown(), then onApplicationShutdown() methods\n     * (in the sequence described above) with the corresponding signal as the first parameter.\n     * If a registered function awaits an asynchronous call (returns a promise), Nest will not\n     * continue in the sequence until the promise is resolved or rejected.\n     */\n\n    onModuleInit(): void {\n        console.log(`ModuleInit - HealthController has been initialized.`, {\n            config: this.config.get('NODE_ENV'),\n        })\n    }\n\n    onApplicationShutdown(signal?: string): void {\n        console.log(\n            `ApplicationShutdown - HealthController has been shutdown with ${signal} signal`,\n        )\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ICat.html":{"url":"interfaces/ICat.html","title":"interface - ICat","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ICat\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/cats/interfaces/cat.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        age\n                                \n                                \n                                        breed\n                                \n                                \n                                        name\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        age\n                                    \n                                \n                                \n                                    \n                                        age:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        breed\n                                    \n                                \n                                \n                                    \n                                        breed:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface ICat {\n    readonly name: string\n    readonly age: number\n    readonly breed: string\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateCatDto.html":{"url":"classes/UpdateCatDto.html","title":"class - UpdateCatDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateCatDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/cats/dto/cat.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/mapped-types'\nimport { ApiProperty } from '@nestjs/swagger'\n\nimport { ICat } from 'src/modules/cats/interfaces/cat.interface'\n\nimport { IsInt, IsString, MinLength, IsNotEmpty } from 'class-validator'\n\nexport class CreateCatDto implements ICat {\n    @ApiProperty({ description: 'The name of the Cat', example: 'Kitty' })\n    @IsString()\n    @IsNotEmpty()\n    @MinLength(2)\n    readonly name: string\n\n    @ApiProperty({ description: 'The age of the Cat', example: 1 })\n    @IsInt()\n    @IsNotEmpty()\n    readonly age: number\n\n    @ApiProperty({ description: 'The breed of the Cat', example: 'Maine Coon' })\n    @IsString()\n    @IsNotEmpty()\n    readonly breed: string\n}\n\nexport class UpdateCatDto extends PartialType(CreateCatDto) {}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateUserDto.html":{"url":"classes/UpdateUserDto.html","title":"class - UpdateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/users/dto/user.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/mapped-types'\n\nexport class CreateUserDto {}\n\nexport class UpdateUserDto extends PartialType(CreateUserDto) {}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/User.html":{"url":"classes/User.html","title":"class - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/users/entities/user.entity.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class User {}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UsersController.html":{"url":"controllers/UsersController.html","title":"controller - UsersController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UsersController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/users/users.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                users\n            \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                remove\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            create\n                        \n                        \n                    \n                \n            \n            \n                \ncreate(createUserDto: CreateUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n            \n                \n                    Defined in src/modules/users/users.controller.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createUserDto\n                                    \n                                                CreateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            findAll\n                        \n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/modules/users/users.controller.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            findOne\n                        \n                        \n                    \n                \n            \n            \n                \nfindOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n            \n                \n                    Defined in src/modules/users/users.controller.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            remove\n                        \n                        \n                    \n                \n            \n            \n                \nremove(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n            \n                \n                    Defined in src/modules/users/users.controller.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            update\n                        \n                        \n                    \n                \n            \n            \n                \nupdate(id: string, updateUserDto: UpdateUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Put(':id')\n                \n            \n\n            \n                \n                    Defined in src/modules/users/users.controller.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateUserDto\n                                    \n                                                UpdateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Post, Body, Put, Param, Delete } from '@nestjs/common'\n\nimport { CreateUserDto, UpdateUserDto } from './dto/user.dto'\nimport { UsersService } from './users.service'\n\n@Controller('users')\nexport class UsersController {\n    constructor(private readonly usersService: UsersService) {}\n\n    @Post()\n    create(@Body() createUserDto: CreateUserDto) {\n        return this.usersService.create(createUserDto)\n    }\n\n    @Get()\n    findAll() {\n        return this.usersService.findAll()\n    }\n\n    @Get(':id')\n    findOne(@Param('id') id: string) {\n        return this.usersService.findOne(+id)\n    }\n\n    @Put(':id')\n    update(@Param('id') id: string, @Body() updateUserDto: UpdateUserDto) {\n        return this.usersService.update(+id, updateUserDto)\n    }\n\n    @Delete(':id')\n    remove(@Param('id') id: string) {\n        return this.usersService.remove(+id)\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UsersModule.html":{"url":"modules/UsersModule.html","title":"module - UsersModule","body":"\n                   \n\n\n\n\n    Modules\n    UsersModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_providers\n\n\n\n\nUsersService\n\nUsersService\n\n\n\nUsersModule\n\nUsersModule\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/users/users.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            UsersService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            UsersController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common'\n\nimport { UsersController } from './users.controller'\nimport { UsersService } from './users.service'\n\n@Module({\n    controllers: [UsersController],\n    providers: [UsersService],\n})\nexport class UsersModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UsersService.html":{"url":"injectables/UsersService.html","title":"injectable - UsersService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  UsersService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/users/users.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                remove\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            create\n                        \n                        \n                    \n                \n            \n            \n                \ncreate(createUserDto: CreateUserDto)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/users/users.service.ts:7\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createUserDto\n                                    \n                                                CreateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            findAll\n                        \n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n\n            \n                \n                    Defined in src/modules/users/users.service.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            findOne\n                        \n                        \n                    \n                \n            \n            \n                \nfindOne(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/users/users.service.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            remove\n                        \n                        \n                    \n                \n            \n            \n                \nremove(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/users/users.service.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            update\n                        \n                        \n                    \n                \n            \n            \n                \nupdate(id: number, updateUserDto: UpdateUserDto)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/users/users.service.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateUserDto\n                                    \n                                                UpdateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common'\n\nimport { CreateUserDto, UpdateUserDto } from 'src/modules/users/dto/user.dto'\n\n@Injectable()\nexport class UsersService {\n    create(createUserDto: CreateUserDto) {\n        return 'This action adds a new user'\n    }\n\n    findAll() {\n        return `This action returns all users`\n    }\n\n    findOne(id: number) {\n        return `This action returns a #${id} user`\n    }\n\n    update(id: number, updateUserDto: UpdateUserDto) {\n        return `This action updates a #${id} user`\n    }\n\n    remove(id: number) {\n        return `This action removes a #${id} user`\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/app.controller.ts\n            \n            controller\n            AppController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/app.module.ts\n            \n            variable\n            ConfigModuleOptions\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/app.module.ts\n            \n            variable\n            LoggerModuleOptions\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/app.module.ts\n            \n            variable\n            TypeOrmModuleOptions\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/app.service.ts\n            \n            injectable\n            AppService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/cron/cron.service.ts\n            \n            injectable\n            CronService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/health/health.controller.ts\n            \n            controller\n            HealthController\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            createSwagger\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/cats/cats.controller.ts\n            \n            controller\n            CatsController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/modules/cats/cats.service.ts\n            \n            injectable\n            CatsService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/modules/cats/dto/cat.dto.ts\n            \n            class\n            CreateCatDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/modules/cats/dto/cat.dto.ts\n            \n            class\n            UpdateCatDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/cats/entities/cat.entity.ts\n            \n            class\n            Cat\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/modules/cats/interfaces/cat.interface.ts\n            \n            interface\n            ICat\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/modules/users/dto/user.dto.ts\n            \n            class\n            CreateUserDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/users/dto/user.dto.ts\n            \n            class\n            UpdateUserDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/users/entities/user.entity.ts\n            \n            class\n            User\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/users/users.controller.ts\n            \n            controller\n            UsersController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/modules/users/users.service.ts\n            \n            injectable\n            UsersService\n            \n                0 %\n                (0/6)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @hapi/joi : ^17.1.1\n        \n            @nestjs/common : ^7.5.1\n        \n            @nestjs/config : ^0.6.1\n        \n            @nestjs/core : ^7.5.1\n        \n            @nestjs/mapped-types : ^0.1.1\n        \n            @nestjs/passport : ^7.1.3\n        \n            @nestjs/platform-express : ^7.5.1\n        \n            @nestjs/schedule : ^0.4.1\n        \n            @nestjs/swagger : ^4.7.5\n        \n            @nestjs/terminus : ^7.0.1\n        \n            @nestjs/typeorm : ^7.1.5\n        \n            class-transformer : ^0.3.1\n        \n            class-validator : ^0.12.2\n        \n            dotenv : ^8.2.0\n        \n            dotenv-expand : ^5.1.0\n        \n            express-rate-limit : ^5.2.3\n        \n            helmet : ^4.2.0\n        \n            joi : ^17.3.0\n        \n            nestjs-pino : ^1.3.0\n        \n            passport : ^0.4.1\n        \n            passport-local : ^1.0.0\n        \n            pino-pretty : ^4.3.0\n        \n            reflect-metadata : ^0.1.13\n        \n            rimraf : ^3.0.2\n        \n            rxjs : ^6.6.3\n        \n            sqlite3 : ^5.0.0\n        \n            swagger-ui-express : ^4.1.5\n        \n            typeorm : ^0.2.29\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                        \n                            createSwagger   (src/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            bootstrap\n                        \n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createSwagger\n                        \n                        \n                    \n                \n            \n            \n                \ncreateSwagger(app)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    app\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n  A progressive Node.js framework for building efficient and scalable server-side applications.\n    \n\n\n\n\n\n\n\n\n  \n    \n  \n\n  \n\nDescription\nNest framework TypeScript starter repository.\nInstallation\n$ npm installRunning the app\n# development\n$ npm run start\n\n# watch mode\n$ npm run start:dev\n\n# production mode\n$ npm run start:prodTest\n# unit tests\n$ npm run test\n\n# e2e tests\n$ npm run test:e2e\n\n# test coverage\n$ npm run test:covSupport\nNest is an MIT-licensed open source project. It can grow thanks to the sponsors and support by the amazing backers. If you'd like to join them, please read more here.\nStay in touch\n\nAuthor - Kamil Myśliwiec\nWebsite - https://nestjs.com\nTwitter - @nestframework\n\nLicense\nNest is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CatsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CronModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UsersModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_CatsModule\n\n\n\ncluster_CatsModule_providers\n\n\n\ncluster_CronModule\n\n\n\ncluster_CronModule_providers\n\n\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_providers\n\n\n\n\nCatsModule\n\nCatsModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nCatsModule->AppModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nCatsService\n\nCatsService\n\nCatsModule -->\n\nCatsService->CatsModule\n\n\n\n\n\nCronService\n\nCronService\n\n\n\nCronModule\n\nCronModule\n\nCronModule -->\n\nCronService->CronModule\n\n\n\n\n\nUsersService\n\nUsersService\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        4 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    4 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    4 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    6 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    1 Interface\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ConfigModuleOptions   (src/.../app.module.ts)\n                        \n                        \n                            LoggerModuleOptions   (src/.../app.module.ts)\n                        \n                        \n                            TypeOrmModuleOptions   (src/.../app.module.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/app.module.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            ConfigModuleOptions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    isGlobal: true,\n    validationOptions: {\n        allowUnknown: true,\n        abortEarly: true,\n    },\n    validationSchema: Joi.object({\n        PORT: Joi.number().default(3000),\n        NODE_ENV: Joi.string()\n            .valid('development', 'production', 'test', 'provision')\n            .default('development'),\n    }),\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            LoggerModuleOptions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    pinoHttp: {\n        prettyPrint: {\n            colorize: true,\n            levelFirst: false, // Display the log level name before the logged date and time\n            translateTime: true,\n            messageFormat: '{msg}', // 'pid', 'msg', 'level'\n            ignore: 'pid,hostname',\n            errorLikeObjectKeys: ['err', 'error', 'errors'],\n        },\n    },\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            TypeOrmModuleOptions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    entities: [`${__dirname}/../**/*.entity.{ts,js}`],\n    type: 'sqlite' as const,\n    database: 'database.sqlite',\n    synchronize: true,\n    logging: true,\n}\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
