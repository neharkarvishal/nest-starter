var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/controllers/AppController.html",[0,1.181,1,1.949]],["body/controllers/AppController.html",[0,1.416,1,2.996,2,1.553,3,0.354,4,0.301,5,0.301,6,3.06,7,0.469,8,1.816,9,4.568,10,0.895,11,0.036,12,0.595,13,3.689,14,1.416,15,1.382,16,1.707,17,1.707,18,2.089,19,2.089,20,2.089,21,0.501,22,0.983,23,2.336,24,0.983,25,2.666,26,3.06,27,3.689,28,3.689,29,0.354,30,0.151,31,1.883,32,2.646,33,3.689,34,1.293,35,1.707,36,3.689,37,0.021,38,0.027,39,0.021]],["title/modules/AppModule.html",[40,1.181,41,1.949]],["body/modules/AppModule.html",[1,2.409,2,1.322,3,0.198,4,0.168,5,0.168,8,0.791,11,0.036,12,0.507,14,1.206,15,1.112,16,0.954,17,0.954,18,1.167,19,1.167,20,1.167,21,0.547,22,0.549,25,2.463,26,1.71,29,0.198,30,0.084,37,0.012,38,0.018,39,0.012,40,1.633,41,3.608,42,0.954,43,0.954,44,1.167,45,1.167,46,0.954,47,2.154,48,1.167,49,1.71,50,1.71,51,1.71,52,2.732,53,2.732,54,2.732,55,1.778,56,1.167,57,1.167,58,1.478,59,2.409,60,2.252,61,3.156,62,2.605,63,2.061,64,1.167,65,0.549,66,0.565,67,0.954,68,3.156,69,1.71,70,3.051,71,3.798,72,2.061,73,1.305,74,2.728,75,2.728,76,2.061,77,2.061,78,2.061,79,2.061,80,2.061,81,1.478,82,2.061,83,1.478,84,3.141,85,1.478,86,1.478,87,1.052,88,2.061,89,2.061,90,2.061,91,1.71,92,2.061,93,2.061,94,0.762,95,1.478,96,2.061,97,0.837,98,1.478,99,3.156,100,1.478,101,1.71,102,2.9,103,1.71,104,1.71,105,1.71,106,1.71,107,1.71,108,1.71,109,1.71,110,1.71,111,1.71,112,1.71,113,1.71,114,1.478,115,1.478,116,1.71,117,1.71,118,1.478,119,1.71,120,1.71,121,1.71,122,1.167,123,1.71,124,1.71,125,1.71,126,2.061,127,2.061,128,1.71,129,2.061,130,1.305,131,2.061,132,1.71,133,2.061,134,1.71,135,1.71]],["title/injectables/AppService.html",[25,1.571,136,1.181]],["body/injectables/AppService.html",[3,0.398,4,0.338,5,0.338,7,0.527,8,1.954,9,4.765,11,0.035,12,0.669,14,1.592,15,1.488,21,0.398,22,1.105,25,2.599,29,0.398,30,0.17,35,1.919,37,0.023,38,0.029,39,0.023,136,1.954,137,2.349,138,3.44,139,4.147,140,4.147,141,4.147]],["title/classes/Cat.html",[30,0.126,94,0.747]],["body/classes/Cat.html",[3,0.208,4,0.176,5,0.176,7,0.275,10,1.273,11,0.035,12,0.866,15,1.274,21,0.419,24,0.576,29,0.208,30,0.133,31,1.999,34,1.372,37,0.012,38,0.018,39,0.012,65,1.431,66,0.984,94,1.328,97,1.399,98,1.55,142,0.692,143,1.793,144,1.042,145,2.96,146,2.96,147,1.649,148,1.649,149,1.968,150,3.248,151,1.649,152,1.794,153,1.835,154,2.209,155,2.162,156,3.255,157,2.162,158,2.062,159,2.162,160,3.255,161,2.162,162,3.248,163,2.162,164,3.248,165,2.162,166,2.7,167,1.793,168,2.162,169,2.162,170,3.255,171,2.7,172,1.793,173,2.162,174,1.369,175,1.369,176,2.7,177,2.162,178,3.248,179,2.162,180,2.162,181,2.162,182,2.162,183,2.7,184,1.968,185,0.83,186,3.615,187,2.7,188,2.7,189,2.162,190,1,191,1.224,192,1.224,193,1.673,194,1.793,195,1,196,2.162,197,1.224,198,1.369,199,2.162,200,2.162,201,2.162,202,1.793]],["title/classes/CatRepository.html",[30,0.126,203,1.571]],["body/classes/CatRepository.html",[3,0.337,4,0.286,5,0.286,7,0.446,8,1.758,11,0.035,12,0.566,14,1.347,16,1.624,17,1.624,21,0.44,29,0.337,30,0.144,35,1.624,37,0.02,38,0.026,39,0.02,73,2.222,74,2.516,75,2.516,94,1.237,122,2.593,142,1.123,190,1.624,191,1.987,203,2.338,204,2.911,205,2.9,206,3.656,207,3.228,208,4.483,209,3.509,210,3.284,211,3.284,212,3.284,213,2.911,214,2.516,215,3.509,216,3.509,217,4.229,218,2.911,219,2.911,220,2.516,221,2.911]],["title/controllers/CatsController.html",[0,1.181,222,1.949]],["body/controllers/CatsController.html",[0,1.12,2,1.228,3,0.28,4,0.238,5,0.238,7,0.371,8,1.552,10,0.708,11,0.036,12,0.471,14,1.12,16,1.35,17,1.35,18,1.652,19,1.652,20,1.652,21,0.523,22,0.778,23,1.847,24,0.778,29,0.28,30,0.119,31,1.489,32,2.092,35,1.35,37,0.016,38,0.023,39,0.016,66,0.525,94,0.982,102,1.847,130,1.847,191,2.29,207,2.94,222,2.561,223,2.42,224,4.158,225,2.917,226,4.158,227,2.917,228,2.917,229,2.42,230,2.42,231,2.42,232,2.42,233,3.355,234,3.355,235,3.355,236,1.652,237,2.065,238,2.42,239,2.37,240,2.065,241,2.688,242,2.917,243,2.092,244,2.917,245,2.917,246,2.42,247,2.42,248,3.355,249,2.42,250,3.355,251,2.42,252,2.42,253,2.42,254,2.42,255,2.42,256,2.917,257,2.917,258,2.917]],["title/modules/CatsModule.html",[40,1.181,52,1.742]],["body/modules/CatsModule.html",[2,1.838,3,0.313,4,0.266,5,0.266,11,0.035,21,0.561,22,0.87,29,0.313,30,0.134,37,0.018,38,0.024,39,0.018,40,1.888,42,1.51,43,1.51,44,1.848,45,1.848,46,1.51,47,2.786,48,2.786,52,3.258,55,2.472,56,1.848,57,1.848,60,2.341,86,2.341,87,1.666,94,0.792,97,1.164,98,2.341,203,1.666,222,3.115,237,3.101,238,2.707,243,2.341,259,2.707,260,2.707,261,2.707,262,3.264,263,2.229,264,3.264,265,3.264,266,2.707,267,3.264]],["title/injectables/CatsService.html",[136,1.181,237,1.571]],["body/injectables/CatsService.html",[3,0.297,4,0.252,5,0.252,7,0.393,8,1.615,10,0.75,11,0.036,12,0.772,14,1.186,21,0.532,22,0.824,29,0.297,30,0.127,35,1.43,37,0.017,38,0.024,39,0.017,64,1.75,65,0.824,66,0.757,67,1.43,87,1.578,94,1.161,122,2.383,136,1.615,137,1.75,144,1.347,190,1.947,192,2.71,203,2.743,205,2.665,207,3.03,210,3.018,211,3.018,212,3.018,214,2.217,224,4.261,236,1.75,237,2.148,243,2.217,266,2.564,268,2.564,269,3.969,270,4.261,271,2.217,272,2.564,273,3.091,274,3.091,275,3.091,276,3.091,277,2.564,278,3.091,279,2.564,280,3.091]],["title/classes/CreateCatDto.html",[30,0.126,239,1.571]],["body/classes/CreateCatDto.html",[3,0.219,4,0.186,5,0.186,7,0.289,10,0.981,11,0.035,12,0.652,15,1.591,21,0.388,24,0.607,29,0.388,30,0.196,34,1.995,37,0.013,38,0.019,39,0.013,65,1.451,66,0.805,94,1.381,142,0.729,144,1.084,145,3.448,146,3.448,147,0.959,148,0.959,149,0.959,151,0.959,152,1.835,153,1.701,154,2.396,158,2.833,184,2.367,185,0.874,193,2.09,195,1.87,197,2.288,198,2.559,239,1.728,240,1.163,241,1.163,281,1.442,282,2.278,283,2.278,284,2.278,285,2.278,286,2.278,287,2.278,288,2.284,289,2.284,290,2.063,291,2.44,292,1.163,293,2.648,294,2.063,295,2.284,296,1.054,297,1.728]],["title/classes/CreateUserDto.html",[30,0.126,298,1.424]],["body/classes/CreateUserDto.html",[3,0.295,4,0.25,5,0.25,7,0.39,10,0.745,11,0.035,12,0.496,15,1.567,21,0.458,24,0.819,29,0.458,30,0.219,34,1.795,37,0.017,38,0.024,39,0.017,65,1.591,66,0.754,97,1.365,142,0.983,144,1.341,147,1.293,148,1.293,149,1.293,151,1.293,152,1.179,153,1.293,154,2.157,184,2.257,185,1.179,193,1.83,195,1.421,288,2.615,289,2.615,290,1.568,291,2.434,292,1.568,293,2.434,294,1.568,295,2.139,296,1.421,297,2.139,298,1.939,299,1.945,300,3.071,301,3.071,302,1.421,303,1.568]],["title/modules/CronModule.html",[40,1.181,53,1.742]],["body/modules/CronModule.html",[3,0.378,4,0.321,5,0.321,11,0.034,21,0.473,22,1.05,29,0.378,30,0.161,37,0.022,38,0.028,39,0.022,40,2.066,42,1.822,43,1.822,44,2.23,45,2.23,46,1.822,47,3.048,48,2.23,53,3.355,55,2.792,56,2.23,57,2.23,304,3.266,305,3.266,306,3.355,307,3.938,308,3.938]],["title/injectables/CronService.html",[136,1.181,306,1.742]],["body/injectables/CronService.html",[3,0.272,4,0.231,5,0.231,7,0.36,8,1.52,10,1.108,11,0.036,12,0.84,14,1.753,21,0.38,22,0.754,29,0.272,30,0.116,31,2.331,34,1.6,37,0.016,38,0.022,39,0.016,66,0.509,70,3.275,83,2.029,136,1.52,137,1.602,144,1.267,152,1.086,174,2.507,175,2.507,192,1.602,197,1.602,306,2.242,309,2.347,310,4.946,311,3.788,312,4.946,313,4.946,314,4.946,315,4.946,316,3.959,317,2.829,318,3.959,319,2.829,320,3.959,321,2.829,322,3.284,323,2.829,324,3.284,325,3.959,326,2.829,327,2.829,328,2.829,329,2.829,330,3.959,331,2.829,332,2.829,333,2.829,334,2.829,335,2.829,336,3.959,337,2.829,338,3.959,339,2.829,340,2.347]],["title/classes/GetCatResponseDto.html",[30,0.126,241,1.571]],["body/classes/GetCatResponseDto.html",[3,0.203,4,0.172,5,0.172,7,0.269,10,1.228,11,0.035,12,0.816,15,1.589,21,0.371,24,0.563,29,0.371,30,0.189,34,1.707,37,0.012,38,0.018,39,0.012,65,1.422,66,0.937,94,1.359,142,0.676,144,1.024,145,3.378,146,3.378,147,1.626,148,1.626,149,1.626,151,1.626,152,1.869,153,1.626,154,2.358,158,2.728,184,2.326,185,0.811,193,2.048,195,1.994,197,2.44,198,2.728,239,1.079,240,1.079,241,1.634,281,1.338,288,2.199,289,2.199,290,1.972,291,2.363,292,1.079,293,2.583,294,1.972,295,2.199,296,0.978,297,1.634,341,2.113,342,2.113,343,3.204,344,2.113,345,2.113,346,1.752,347,2.113,348,2.113,349,2.113]],["title/classes/GetUserResponseDto.html",[30,0.126,303,1.571]],["body/classes/GetUserResponseDto.html",[3,0.264,4,0.224,5,0.224,7,0.349,10,1.25,11,0.035,12,0.831,15,1.562,21,0.432,24,0.732,29,0.432,30,0.211,34,1.359,37,0.015,38,0.022,39,0.015,65,1.573,66,0.961,97,1.301,142,0.879,144,1.241,147,1.892,148,1.892,149,1.892,151,1.892,152,1.488,153,1.156,154,2.055,184,2.168,185,1.054,193,1.725,195,1.271,288,2.492,289,2.492,290,1.402,291,2.294,292,1.402,293,2.294,294,1.402,295,1.979,296,1.271,297,1.979,298,1.271,299,1.739,302,1.271,303,1.979,343,3.727,346,2.278,350,2.746,351,2.746,352,2.746,353,2.746,354,2.746]],["title/controllers/HealthController.html",[0,1.181,59,1.949]],["body/controllers/HealthController.html",[0,0.987,2,1.083,3,0.247,4,0.21,5,0.21,7,0.327,8,1.663,10,0.624,11,0.036,12,0.699,14,1.819,15,1.266,16,1.19,17,1.19,18,1.457,19,1.457,20,1.457,21,0.455,22,0.686,23,1.629,24,0.686,29,0.247,30,0.105,35,1.19,37,0.014,38,0.021,39,0.014,59,3.001,61,4.165,62,3.069,64,1.457,65,0.686,66,0.463,67,1.19,68,4.165,69,2.134,70,3.399,71,4.337,81,1.845,85,1.845,128,3.069,130,1.629,132,2.134,134,2.134,135,2.134,220,1.845,271,1.845,311,3.595,355,2.134,356,2.572,357,4.739,358,2.572,359,2.572,360,2.572,361,2.572,362,3.7,363,3.7,364,3.7,365,3.7,366,2.572,367,2.572,368,2.572,369,2.572,370,3.7,371,2.572,372,2.572,373,2.572,374,2.572,375,2.572,376,2.572,377,2.572,378,3.7,379,3.7,380,2.572,381,2.572,382,3.7,383,2.572,384,2.572,385,2.572,386,2.572,387,2.572,388,2.134,389,2.572,390,2.572,391,3.7,392,2.134,393,2.572,394,2.572,395,2.572,396,2.572,397,2.572,398,2.572,399,2.572]],["title/classes/UpdateCatDto.html",[30,0.126,240,1.571]],["body/classes/UpdateCatDto.html",[3,0.216,4,0.183,5,0.183,7,0.285,10,0.972,11,0.035,12,0.646,15,1.585,21,0.385,24,0.598,29,0.385,30,0.194,34,1.989,37,0.013,38,0.019,39,0.013,65,1.446,66,0.799,67,2.306,94,1.377,142,0.718,144,1.072,145,3.435,146,3.435,147,0.945,148,0.945,149,0.945,151,0.945,152,1.824,153,1.686,154,2.389,158,2.812,184,2.359,185,0.862,193,2.082,195,1.854,197,2.268,198,2.537,239,1.146,240,1.71,241,1.146,281,1.422,288,2.267,289,2.267,290,2.045,291,2.425,292,1.146,293,2.636,294,2.045,295,2.267,296,1.039,297,1.71,400,2.245,401,2.245,402,2.245,403,2.245,404,1.862,405,2.245]],["title/classes/UpdateUserDto.html",[30,0.126,302,1.424]],["body/classes/UpdateUserDto.html",[3,0.293,4,0.249,5,0.249,7,0.388,10,0.74,11,0.035,12,0.492,15,1.563,21,0.456,24,0.813,29,0.456,30,0.219,34,1.79,37,0.017,38,0.023,39,0.017,65,1.589,66,0.75,67,1.93,97,1.362,142,0.976,144,1.335,147,1.284,148,1.284,149,1.284,151,1.284,152,1.171,153,1.284,154,2.151,184,2.252,185,1.171,193,1.824,195,1.412,288,2.608,289,2.608,290,1.557,291,2.426,292,1.557,293,2.426,294,1.557,295,2.129,296,1.412,297,2.129,298,1.412,299,1.932,302,1.93,303,1.557,404,2.53,406,3.051]],["title/classes/User.html",[30,0.126,97,0.82]],["body/classes/User.html",[3,0.239,4,0.203,5,0.203,7,0.316,10,1.255,11,0.035,12,0.861,15,1.056,21,0.448,24,0.664,29,0.239,30,0.148,31,2.172,34,1.491,37,0.014,38,0.02,39,0.014,65,1.457,66,0.983,94,1.203,95,1.786,97,1.378,142,0.797,144,1.157,147,1.791,148,1.791,149,2.087,150,3.529,151,1.791,152,1.633,153,1.522,154,1.965,162,3.529,164,3.529,166,2.998,167,2.065,171,2.998,172,2.998,174,1.577,175,1.577,176,2.998,178,3.529,183,2.998,184,1.791,185,0.956,186,2.998,187,2.998,188,2.998,190,1.152,191,2.409,192,1.41,193,1.387,194,2.065,202,2.065,407,2.065,408,2.49,409,2.49,410,2.49,411,2.49,412,2.49,413,2.49,414,3.614,415,2.49,416,2.49,417,2.49,418,2.49,419,1.786,420,2.49,421,2.49,422,2.49,423,2.49]],["title/classes/UserRepository.html",[30,0.126,263,1.571]],["body/classes/UserRepository.html",[3,0.337,4,0.286,5,0.286,7,0.446,8,1.758,11,0.035,12,0.566,14,1.347,16,1.624,17,1.624,21,0.44,29,0.337,30,0.144,35,1.624,37,0.02,38,0.026,39,0.02,73,2.222,74,2.516,75,2.516,97,1.359,122,2.593,142,1.123,190,1.624,205,2.9,206,3.656,207,3.228,208,4.483,210,3.284,211,3.284,212,3.284,213,2.911,214,2.516,217,4.229,218,2.911,219,2.911,220,2.516,221,2.911,263,2.338,419,2.516,424,2.911,425,3.509,426,3.509,427,3.509]],["title/controllers/UsersController.html",[0,1.181,428,1.949]],["body/controllers/UsersController.html",[0,1.202,2,1.319,3,0.301,4,0.255,5,0.255,11,0.036,16,1.45,17,1.45,18,1.774,19,1.774,20,1.774,21,0.535,22,0.835,23,1.984,24,0.835,29,0.301,30,0.128,31,1.599,32,2.247,37,0.018,38,0.024,39,0.018,66,0.564,97,1.132,102,2.689,130,1.984,191,1.774,226,3.522,229,2.598,230,2.598,231,2.598,232,2.598,233,2.598,234,3.522,235,3.522,236,1.774,246,2.598,247,2.598,248,3.522,249,2.598,250,3.522,251,2.598,252,2.598,253,2.598,254,2.598,255,2.598,298,2.229,302,1.965,303,2.756,419,2.247,428,2.689,429,2.598,430,2.598,431,2.598,432,2.168,433,2.598,434,3.133,435,3.133,436,2.598,437,3.133]],["title/modules/UsersModule.html",[40,1.181,54,1.742]],["body/modules/UsersModule.html",[2,1.86,3,0.319,4,0.271,5,0.271,11,0.035,21,0.555,22,0.885,29,0.319,30,0.136,37,0.019,38,0.025,39,0.019,40,1.905,42,1.537,43,1.537,44,1.881,45,1.881,46,1.537,47,2.81,48,2.81,54,3.272,55,2.501,56,1.881,57,1.881,60,2.382,86,2.382,87,1.696,94,1.072,95,2.382,203,2.255,263,1.696,428,3.143,432,3.11,433,2.755,438,2.755,439,2.755,440,2.755,441,3.322,442,3.322,443,2.755,444,3.322,445,3.322]],["title/injectables/UsersService.html",[136,1.181,432,1.571]],["body/injectables/UsersService.html",[3,0.33,4,0.28,5,0.28,7,0.436,10,0.833,11,0.035,12,0.728,21,0.549,22,0.915,29,0.33,30,0.14,37,0.019,38,0.025,39,0.019,64,1.943,65,0.915,66,0.812,67,1.588,87,1.752,97,0.915,136,1.732,137,1.943,144,1.445,190,1.588,192,2.856,205,2.858,236,1.943,263,2.841,269,4.183,270,4.444,271,2.461,272,2.846,277,2.846,279,2.846,298,1.588,302,1.588,430,2.846,431,2.846,432,2.304,443,2.846,446,2.846,447,3.432,448,3.432,449,3.432,450,3.432]],["title/coverage.html",[451,3.009]],["body/coverage.html",[0,1.881,1,1.754,5,0.226,6,2.298,11,0.035,25,1.414,30,0.237,37,0.016,38,0.022,39,0.016,46,1.282,58,2.798,59,1.754,66,0.498,94,0.672,97,0.738,100,1.987,118,1.987,136,1.881,138,2.298,143,2.298,203,1.414,204,2.298,222,1.754,223,2.298,237,1.414,239,1.414,240,1.414,241,1.414,263,1.414,268,2.298,281,2.859,298,1.282,299,2.859,302,1.282,303,1.414,306,1.569,309,2.298,322,5.078,324,2.298,340,3.236,355,2.298,388,3.745,407,2.298,424,2.298,428,1.754,429,2.298,432,1.414,446,2.298,451,1.987,452,2.77,453,2.77,454,2.77,455,5.166,456,3.901,457,5.359,458,2.77,459,2.77,460,4.515,461,2.77,462,2.298,463,2.77,464,3.901,465,3.901,466,3.745,467,2.298,468,2.298,469,2.77,470,2.77,471,2.77,472,2.77,473,2.77]],["title/dependencies.html",[43,1.712,474,2.572]],["body/dependencies.html",[11,0.036,22,0.885,24,0.885,30,0.181,37,0.019,38,0.025,39,0.019,43,1.537,81,2.382,83,2.382,85,2.382,87,1.696,91,2.755,185,1.275,190,2.044,236,2.81,296,1.537,475,3.322,476,4.963,477,3.322,478,3.322,479,3.322,480,3.322,481,3.322,482,3.322,483,3.322,484,3.322,485,4.963,486,4.417,487,3.322,488,3.322,489,3.322,490,4.963,491,3.322,492,3.322,493,3.322,494,3.322,495,3.322,496,3.322,497,3.322,498,3.322,499,4.417,500,3.322,501,3.322,502,3.322,503,3.322,504,3.322,505,3.322,506,3.322,507,3.322,508,3.322,509,3.322,510,3.322,511,3.322,512,3.322,513,3.322,514,3.322]],["title/miscellaneous/functions.html",[515,1.628,516,3.069]],["body/miscellaneous/functions.html",[7,0.544,11,0.033,37,0.024,38,0.029,39,0.024,46,2.585,64,2.939,65,1.383,67,2.402,466,3.55,467,4.305,468,4.305,515,2.711,516,3.55,517,5.586,518,4.28,519,4.305,520,4.28,521,5.19]],["title/index.html",[7,0.327,522,2.572,523,2.572]],["body/index.html",[4,0.27,11,0.035,37,0.019,38,0.025,39,0.019,73,2.096,114,2.374,115,3.16,193,1.271,206,2.374,392,4.109,436,2.746,451,2.374,519,2.746,524,3.31,525,3.31,526,4.407,527,3.31,528,3.31,529,3.31,530,3.31,531,3.31,532,3.31,533,3.31,534,3.31,535,5.773,536,3.31,537,3.31,538,5.656,539,3.31,540,3.31,541,4.407,542,3.31,543,3.31,544,3.31,545,4.407,546,3.31,547,3.31,548,3.31,549,4.407,550,4.407,551,3.31,552,3.31,553,3.31,554,3.31,555,3.31,556,2.746,557,3.31,558,3.31,559,3.31,560,3.31,561,3.31,562,3.31,563,3.31,564,3.31,565,3.31,566,3.31,567,3.31,568,3.31,569,3.31,570,3.31,571,3.31,572,3.31,573,3.31]],["title/modules.html",[42,1.941]],["body/modules.html",[11,0.03,37,0.025,38,0.03,39,0.025,41,2.8,42,2.046,52,2.504,53,2.504,54,2.504,556,4.87,574,5.871,575,5.871,576,5.871]],["title/overview.html",[577,3.48]],["body/overview.html",[2,1.419,11,0.034,25,2.552,37,0.019,38,0.025,39,0.019,40,1.293,41,3.81,42,1.559,43,1.559,44,1.908,45,1.908,46,1.559,47,1.908,48,1.908,49,2.795,50,2.795,51,2.795,52,3.219,53,3.133,54,3.219,55,2.525,56,1.908,57,1.908,137,1.908,142,1.079,237,2.96,259,2.795,260,2.795,261,2.795,304,2.795,305,2.795,306,2.83,432,2.96,438,2.795,439,2.795,440,2.795,462,2.795,577,2.795,578,4.998]],["title/miscellaneous/variables.html",[515,1.628,579,3.069]],["body/miscellaneous/variables.html",[7,0.467,11,0.035,37,0.021,38,0.026,39,0.021,58,2.635,66,0.938,94,0.892,97,0.979,99,3.048,100,3.384,101,3.048,102,3.602,103,3.048,104,3.048,105,3.048,106,3.048,107,3.048,108,3.048,109,3.048,110,3.048,111,3.048,112,3.048,113,3.048,114,2.635,115,2.635,116,3.048,117,3.048,118,3.384,119,3.048,120,3.048,121,3.048,122,2.081,123,3.048,124,3.048,125,3.048,174,2.988,175,2.988,515,2.327,579,3.048,580,4.718,581,4.718]]],"invertedIndex":[["",{"_index":11,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Cat.html":{},"classes/CatRepository.html":{},"controllers/CatsController.html":{},"modules/CatsModule.html":{},"injectables/CatsService.html":{},"classes/CreateCatDto.html":{},"classes/CreateUserDto.html":{},"modules/CronModule.html":{},"injectables/CronService.html":{},"classes/GetCatResponseDto.html":{},"classes/GetUserResponseDto.html":{},"controllers/HealthController.html":{},"classes/UpdateCatDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"classes/UserRepository.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":322,"title":{},"body":{"injectables/CronService.html":{},"coverage.html":{}}}],["0.1.1",{"_index":481,"title":{},"body":{"dependencies.html":{}}}],["0.1.13",{"_index":504,"title":{},"body":{"dependencies.html":{}}}],["0.12.2",{"_index":493,"title":{},"body":{"dependencies.html":{}}}],["0.2.29",{"_index":514,"title":{},"body":{"dependencies.html":{}}}],["0.3.1",{"_index":492,"title":{},"body":{"dependencies.html":{}}}],["0.4.1",{"_index":486,"title":{},"body":{"dependencies.html":{}}}],["0.6.1",{"_index":477,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":457,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":455,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":471,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":460,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":465,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":461,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":197,"title":{},"body":{"classes/Cat.html":{},"classes/CreateCatDto.html":{},"injectables/CronService.html":{},"classes/GetCatResponseDto.html":{},"classes/UpdateCatDto.html":{}}}],["1.0.0",{"_index":501,"title":{},"body":{"dependencies.html":{}}}],["1/10",{"_index":463,"title":{},"body":{"coverage.html":{}}}],["1/2",{"_index":464,"title":{},"body":{"coverage.html":{}}}],["1/4",{"_index":459,"title":{},"body":{"coverage.html":{}}}],["1/8",{"_index":470,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":462,"title":{},"body":{"coverage.html":{},"overview.html":{}}}],["100",{"_index":337,"title":{},"body":{"injectables/CronService.html":{}}}],["12",{"_index":469,"title":{},"body":{"coverage.html":{}}}],["17.1.1",{"_index":475,"title":{},"body":{"dependencies.html":{}}}],["1})@column({name",{"_index":155,"title":{},"body":{"classes/Cat.html":{}}}],["1})@isint()@ispositive()@isnotempty",{"_index":282,"title":{},"body":{"classes/CreateCatDto.html":{}}}],["1})@isint()@ispositive()@isnotempty()@isoptional",{"_index":400,"title":{},"body":{"classes/UpdateCatDto.html":{}}}],["25",{"_index":458,"title":{},"body":{"coverage.html":{}}}],["3.0.2",{"_index":506,"title":{},"body":{"dependencies.html":{}}}],["36",{"_index":176,"title":{},"body":{"classes/Cat.html":{},"classes/User.html":{}}}],["36635263",{"_index":194,"title":{},"body":{"classes/Cat.html":{},"classes/User.html":{}}}],["36635263'})@primarygeneratedcolumn",{"_index":167,"title":{},"body":{"classes/Cat.html":{},"classes/User.html":{}}}],["4",{"_index":578,"title":{},"body":{"overview.html":{}}}],["4.1.5",{"_index":513,"title":{},"body":{"dependencies.html":{}}}],["4.2.0",{"_index":498,"title":{},"body":{"dependencies.html":{}}}],["4.6.2",{"_index":490,"title":{},"body":{"dependencies.html":{}}}],["4.7.5",{"_index":487,"title":{},"body":{"dependencies.html":{}}}],["5.0.0",{"_index":510,"title":{},"body":{"dependencies.html":{}}}],["5.2.3",{"_index":496,"title":{},"body":{"dependencies.html":{}}}],["50",{"_index":340,"title":{},"body":{"injectables/CronService.html":{},"coverage.html":{}}}],["6.6.3",{"_index":508,"title":{},"body":{"dependencies.html":{}}}],["60",{"_index":334,"title":{},"body":{"injectables/CronService.html":{}}}],["7.0.1",{"_index":488,"title":{},"body":{"dependencies.html":{}}}],["7.1.3",{"_index":483,"title":{},"body":{"dependencies.html":{}}}],["7.1.5",{"_index":489,"title":{},"body":{"dependencies.html":{}}}],["7.5.1",{"_index":476,"title":{},"body":{"dependencies.html":{}}}],["__dirname}/**/*.entity.{ts,js",{"_index":120,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["abortearly",{"_index":105,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["above",{"_index":384,"title":{},"body":{"controllers/HealthController.html":{}}}],["access,no",{"_index":79,"title":{},"body":{"modules/AppModule.html":{}}}],["age",{"_index":145,"title":{},"body":{"classes/Cat.html":{},"classes/CreateCatDto.html":{},"classes/GetCatResponseDto.html":{},"classes/UpdateCatDto.html":{}}}],["allowunknown",{"_index":104,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["alwayspaginate",{"_index":253,"title":{},"body":{"controllers/CatsController.html":{},"controllers/UsersController.html":{}}}],["amazing",{"_index":557,"title":{},"body":{"index.html":{}}}],["api_default_port",{"_index":521,"title":{},"body":{"miscellaneous/functions.html":{}}}],["apihideproperty",{"_index":288,"title":{},"body":{"classes/CreateCatDto.html":{},"classes/CreateUserDto.html":{},"classes/GetCatResponseDto.html":{},"classes/GetUserResponseDto.html":{},"classes/UpdateCatDto.html":{},"classes/UpdateUserDto.html":{}}}],["apihideproperty()@exclude",{"_index":343,"title":{},"body":{"classes/GetCatResponseDto.html":{},"classes/GetUserResponseDto.html":{}}}],["apioperation",{"_index":233,"title":{},"body":{"controllers/CatsController.html":{},"controllers/UsersController.html":{}}}],["apioperation({summary",{"_index":225,"title":{},"body":{"controllers/CatsController.html":{}}}],["apiproperty",{"_index":184,"title":{},"body":{"classes/Cat.html":{},"classes/CreateCatDto.html":{},"classes/CreateUserDto.html":{},"classes/GetCatResponseDto.html":{},"classes/GetUserResponseDto.html":{},"classes/UpdateCatDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{}}}],["apiproperty({description",{"_index":153,"title":{},"body":{"classes/Cat.html":{},"classes/CreateCatDto.html":{},"classes/CreateUserDto.html":{},"classes/GetCatResponseDto.html":{},"classes/GetUserResponseDto.html":{},"classes/UpdateCatDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{}}}],["apiproperty({type",{"_index":346,"title":{},"body":{"classes/GetCatResponseDto.html":{},"classes/GetUserResponseDto.html":{}}}],["apitags",{"_index":23,"title":{},"body":{"controllers/AppController.html":{},"controllers/CatsController.html":{},"controllers/HealthController.html":{},"controllers/UsersController.html":{}}}],["apitags(appcontroller.name",{"_index":28,"title":{},"body":{"controllers/AppController.html":{}}}],["apitags(catscontroller.name",{"_index":245,"title":{},"body":{"controllers/CatsController.html":{}}}],["apitags(healthcontroller.name",{"_index":367,"title":{},"body":{"controllers/HealthController.html":{}}}],["apitags(userscontroller.name",{"_index":435,"title":{},"body":{"controllers/UsersController.html":{}}}],["app",{"_index":519,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["app.controller",{"_index":92,"title":{},"body":{"modules/AppModule.html":{}}}],["app.service",{"_index":26,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["appcontroller",{"_index":1,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["application",{"_index":375,"title":{},"body":{"controllers/HealthController.html":{}}}],["applications",{"_index":532,"title":{},"body":{"index.html":{}}}],["applicationshutdown",{"_index":134,"title":{},"body":{"modules/AppModule.html":{},"controllers/HealthController.html":{}}}],["appmodule",{"_index":41,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appservice",{"_index":25,"title":{"injectables/AppService.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"coverage.html":{},"overview.html":{}}}],["assignment",{"_index":221,"title":{},"body":{"classes/CatRepository.html":{},"classes/UserRepository.html":{}}}],["assignment,@typescript",{"_index":76,"title":{},"body":{"modules/AppModule.html":{}}}],["async",{"_index":207,"title":{},"body":{"classes/CatRepository.html":{},"controllers/CatsController.html":{},"injectables/CatsService.html":{},"classes/UserRepository.html":{}}}],["asynchronous",{"_index":390,"title":{},"body":{"controllers/HealthController.html":{}}}],["author",{"_index":566,"title":{},"body":{"index.html":{}}}],["await",{"_index":218,"title":{},"body":{"classes/CatRepository.html":{},"classes/UserRepository.html":{}}}],["awaits",{"_index":389,"title":{},"body":{"controllers/HealthController.html":{}}}],["backers",{"_index":558,"title":{},"body":{"index.html":{}}}],["before",{"_index":19,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/CatsController.html":{},"controllers/HealthController.html":{},"controllers/UsersController.html":{}}}],["beforeapplicationshutdown",{"_index":381,"title":{},"body":{"controllers/HealthController.html":{}}}],["body",{"_index":230,"title":{},"body":{"controllers/CatsController.html":{},"controllers/UsersController.html":{}}}],["bootstrap",{"_index":46,"title":{},"body":{"modules/AppModule.html":{},"modules/CatsModule.html":{},"modules/CronModule.html":{},"modules/UsersModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["breed",{"_index":146,"title":{},"body":{"classes/Cat.html":{},"classes/CreateCatDto.html":{},"classes/GetCatResponseDto.html":{},"classes/UpdateCatDto.html":{}}}],["browse",{"_index":576,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":574,"title":{},"body":{"modules.html":{}}}],["building",{"_index":527,"title":{},"body":{"index.html":{}}}],["c",{"_index":422,"title":{},"body":{"classes/User.html":{}}}],["c.user",{"_index":423,"title":{},"body":{"classes/User.html":{}}}],["call",{"_index":378,"title":{},"body":{"controllers/HealthController.html":{}}}],["call,@typescript",{"_index":77,"title":{},"body":{"modules/AppModule.html":{}}}],["called",{"_index":332,"title":{},"body":{"injectables/CronService.html":{}}}],["cat",{"_index":94,"title":{"classes/Cat.html":{}},"body":{"modules/AppModule.html":{},"classes/Cat.html":{},"classes/CatRepository.html":{},"controllers/CatsController.html":{},"modules/CatsModule.html":{},"injectables/CatsService.html":{},"classes/CreateCatDto.html":{},"classes/GetCatResponseDto.html":{},"classes/UpdateCatDto.html":{},"classes/User.html":{},"modules/UsersModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["cat.entity",{"_index":215,"title":{},"body":{"classes/CatRepository.html":{}}}],["cat.name_length",{"_index":196,"title":{},"body":{"classes/Cat.html":{}}}],["cat_age",{"_index":156,"title":{},"body":{"classes/Cat.html":{}}}],["cat_breed",{"_index":160,"title":{},"body":{"classes/Cat.html":{}}}],["cat_name",{"_index":170,"title":{},"body":{"classes/Cat.html":{}}}],["catrepository",{"_index":203,"title":{"classes/CatRepository.html":{}},"body":{"classes/CatRepository.html":{},"modules/CatsModule.html":{},"injectables/CatsService.html":{},"modules/UsersModule.html":{},"coverage.html":{}}}],["cats",{"_index":191,"title":{},"body":{"classes/Cat.html":{},"classes/CatRepository.html":{},"controllers/CatsController.html":{},"classes/User.html":{},"controllers/UsersController.html":{}}}],["cats'})@post('/clear",{"_index":227,"title":{},"body":{"controllers/CatsController.html":{}}}],["cats.controller",{"_index":265,"title":{},"body":{"modules/CatsModule.html":{}}}],["cats.service",{"_index":238,"title":{},"body":{"controllers/CatsController.html":{},"modules/CatsModule.html":{}}}],["cats/cats.module",{"_index":93,"title":{},"body":{"modules/AppModule.html":{}}}],["cats/datum/cat.entity",{"_index":95,"title":{},"body":{"modules/AppModule.html":{},"classes/User.html":{},"modules/UsersModule.html":{}}}],["cats/datum/cat.repository",{"_index":442,"title":{},"body":{"modules/UsersModule.html":{}}}],["catscontroller",{"_index":222,"title":{"controllers/CatsController.html":{}},"body":{"controllers/CatsController.html":{},"modules/CatsModule.html":{},"coverage.html":{}}}],["catsmodule",{"_index":52,"title":{"modules/CatsModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CatsModule.html":{},"modules.html":{},"overview.html":{}}}],["catsservice",{"_index":237,"title":{"injectables/CatsService.html":{}},"body":{"controllers/CatsController.html":{},"modules/CatsModule.html":{},"injectables/CatsService.html":{},"coverage.html":{},"overview.html":{}}}],["check",{"_index":357,"title":{},"body":{"controllers/HealthController.html":{}}}],["class",{"_index":30,"title":{"classes/Cat.html":{},"classes/CatRepository.html":{},"classes/CreateCatDto.html":{},"classes/CreateUserDto.html":{},"classes/GetCatResponseDto.html":{},"classes/GetUserResponseDto.html":{},"classes/UpdateCatDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"classes/UserRepository.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Cat.html":{},"classes/CatRepository.html":{},"controllers/CatsController.html":{},"modules/CatsModule.html":{},"injectables/CatsService.html":{},"classes/CreateCatDto.html":{},"classes/CreateUserDto.html":{},"modules/CronModule.html":{},"injectables/CronService.html":{},"classes/GetCatResponseDto.html":{},"classes/GetUserResponseDto.html":{},"controllers/HealthController.html":{},"classes/UpdateCatDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"classes/UserRepository.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{}}}],["classes",{"_index":142,"title":{},"body":{"classes/Cat.html":{},"classes/CatRepository.html":{},"classes/CreateCatDto.html":{},"classes/CreateUserDto.html":{},"classes/GetCatResponseDto.html":{},"classes/GetUserResponseDto.html":{},"classes/UpdateCatDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"classes/UserRepository.html":{},"overview.html":{}}}],["clear",{"_index":224,"title":{},"body":{"controllers/CatsController.html":{},"injectables/CatsService.html":{}}}],["clearall",{"_index":208,"title":{},"body":{"classes/CatRepository.html":{},"classes/UserRepository.html":{}}}],["cleared",{"_index":217,"title":{},"body":{"classes/CatRepository.html":{},"classes/UserRepository.html":{}}}],["cluster_appmodule",{"_index":49,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":51,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":50,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_catsmodule",{"_index":259,"title":{},"body":{"modules/CatsModule.html":{},"overview.html":{}}}],["cluster_catsmodule_exports",{"_index":261,"title":{},"body":{"modules/CatsModule.html":{},"overview.html":{}}}],["cluster_catsmodule_providers",{"_index":260,"title":{},"body":{"modules/CatsModule.html":{},"overview.html":{}}}],["cluster_cronmodule",{"_index":304,"title":{},"body":{"modules/CronModule.html":{},"overview.html":{}}}],["cluster_cronmodule_providers",{"_index":305,"title":{},"body":{"modules/CronModule.html":{},"overview.html":{}}}],["cluster_usersmodule",{"_index":438,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["cluster_usersmodule_exports",{"_index":439,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["cluster_usersmodule_providers",{"_index":440,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["column",{"_index":186,"title":{},"body":{"classes/Cat.html":{},"classes/User.html":{}}}],["config",{"_index":370,"title":{},"body":{"controllers/HealthController.html":{}}}],["configmodule",{"_index":80,"title":{},"body":{"modules/AppModule.html":{}}}],["configmodule.forroot(configmoduleoptions",{"_index":126,"title":{},"body":{"modules/AppModule.html":{}}}],["configmoduleoptions",{"_index":100,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["configservice",{"_index":362,"title":{},"body":{"controllers/HealthController.html":{}}}],["console.error",{"_index":133,"title":{},"body":{"modules/AppModule.html":{}}}],["console.info(`moduleinit",{"_index":131,"title":{},"body":{"modules/AppModule.html":{}}}],["console.log",{"_index":399,"title":{},"body":{"controllers/HealthController.html":{}}}],["console.log(`moduleinit",{"_index":397,"title":{},"body":{"controllers/HealthController.html":{}}}],["const",{"_index":99,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["constructor",{"_index":271,"title":{},"body":{"injectables/CatsService.html":{},"controllers/HealthController.html":{},"injectables/UsersService.html":{}}}],["constructor(@injectrepository(catrepository",{"_index":278,"title":{},"body":{"injectables/CatsService.html":{}}}],["constructor(@injectrepository(userrepository",{"_index":450,"title":{},"body":{"injectables/UsersService.html":{}}}],["constructor(private",{"_index":33,"title":{},"body":{"controllers/AppController.html":{}}}],["constructor(public",{"_index":254,"title":{},"body":{"controllers/CatsController.html":{},"controllers/UsersController.html":{}}}],["constructor(repo",{"_index":272,"title":{},"body":{"injectables/CatsService.html":{},"injectables/UsersService.html":{}}}],["continue",{"_index":393,"title":{},"body":{"controllers/HealthController.html":{}}}],["controller",{"_index":0,"title":{"controllers/AppController.html":{},"controllers/CatsController.html":{},"controllers/HealthController.html":{},"controllers/UsersController.html":{}},"body":{"controllers/AppController.html":{},"controllers/CatsController.html":{},"controllers/HealthController.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["controller('health",{"_index":368,"title":{},"body":{"controllers/HealthController.html":{}}}],["controller(appcontroller.path",{"_index":27,"title":{},"body":{"controllers/AppController.html":{}}}],["controller(catscontroller.path",{"_index":244,"title":{},"body":{"controllers/CatsController.html":{}}}],["controller(userscontroller.path",{"_index":434,"title":{},"body":{"controllers/UsersController.html":{}}}],["controllers",{"_index":2,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/CatsController.html":{},"modules/CatsModule.html":{},"controllers/HealthController.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["coon",{"_index":198,"title":{},"body":{"classes/Cat.html":{},"classes/CreateCatDto.html":{},"classes/GetCatResponseDto.html":{},"classes/UpdateCatDto.html":{}}}],["coon'})@column({name",{"_index":159,"title":{},"body":{"classes/Cat.html":{}}}],["coon'})@isstring()@isnotempty",{"_index":284,"title":{},"body":{"classes/CreateCatDto.html":{}}}],["coon'})@isstring()@isnotempty()@isoptional",{"_index":402,"title":{},"body":{"classes/UpdateCatDto.html":{}}}],["corresponding",{"_index":385,"title":{},"body":{"controllers/HealthController.html":{}}}],["count",{"_index":310,"title":{},"body":{"injectables/CronService.html":{}}}],["coverage",{"_index":451,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["create",{"_index":248,"title":{},"body":{"controllers/CatsController.html":{},"controllers/UsersController.html":{}}}],["createcatdto",{"_index":239,"title":{"classes/CreateCatDto.html":{}},"body":{"controllers/CatsController.html":{},"classes/CreateCatDto.html":{},"classes/GetCatResponseDto.html":{},"classes/UpdateCatDto.html":{},"coverage.html":{}}}],["createdat",{"_index":147,"title":{},"body":{"classes/Cat.html":{},"classes/CreateCatDto.html":{},"classes/CreateUserDto.html":{},"classes/GetCatResponseDto.html":{},"classes/GetUserResponseDto.html":{},"classes/UpdateCatDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{}}}],["createdatecolumn",{"_index":162,"title":{},"body":{"classes/Cat.html":{},"classes/User.html":{}}}],["createswagger",{"_index":467,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["createswagger(app",{"_index":518,"title":{},"body":{"miscellaneous/functions.html":{}}}],["createuserdto",{"_index":298,"title":{"classes/CreateUserDto.html":{}},"body":{"classes/CreateUserDto.html":{},"classes/GetUserResponseDto.html":{},"classes/UpdateUserDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["cron",{"_index":327,"title":{},"body":{"injectables/CronService.html":{}}}],["cron('60",{"_index":316,"title":{},"body":{"injectables/CronService.html":{}}}],["cronmodule",{"_index":53,"title":{"modules/CronModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CronModule.html":{},"modules.html":{},"overview.html":{}}}],["cronservice",{"_index":306,"title":{"injectables/CronService.html":{}},"body":{"modules/CronModule.html":{},"injectables/CronService.html":{},"coverage.html":{},"overview.html":{}}}],["cronservice.count",{"_index":330,"title":{},"body":{"injectables/CronService.html":{}}}],["crud",{"_index":234,"title":{},"body":{"controllers/CatsController.html":{},"controllers/UsersController.html":{}}}],["crudcontroller",{"_index":235,"title":{},"body":{"controllers/CatsController.html":{},"controllers/UsersController.html":{}}}],["current",{"_index":335,"title":{},"body":{"injectables/CronService.html":{}}}],["database",{"_index":122,"title":{},"body":{"modules/AppModule.html":{},"classes/CatRepository.html":{},"injectables/CatsService.html":{},"classes/UserRepository.html":{},"miscellaneous/variables.html":{}}}],["database.sqlite",{"_index":123,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["datum/cat.dto",{"_index":242,"title":{},"body":{"controllers/CatsController.html":{}}}],["datum/cat.entity",{"_index":243,"title":{},"body":{"controllers/CatsController.html":{},"modules/CatsModule.html":{},"injectables/CatsService.html":{}}}],["datum/cat.repository",{"_index":266,"title":{},"body":{"modules/CatsModule.html":{},"injectables/CatsService.html":{}}}],["datum/user.dto",{"_index":430,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["datum/user.entity",{"_index":431,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["datum/user.repository",{"_index":443,"title":{},"body":{"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["declarations",{"_index":45,"title":{},"body":{"modules/AppModule.html":{},"modules/CatsModule.html":{},"modules/CronModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["decorators",{"_index":10,"title":{},"body":{"controllers/AppController.html":{},"classes/Cat.html":{},"controllers/CatsController.html":{},"injectables/CatsService.html":{},"classes/CreateCatDto.html":{},"classes/CreateUserDto.html":{},"injectables/CronService.html":{},"classes/GetCatResponseDto.html":{},"classes/GetUserResponseDto.html":{},"controllers/HealthController.html":{},"classes/UpdateCatDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"injectables/UsersService.html":{}}}],["default",{"_index":174,"title":{},"body":{"classes/Cat.html":{},"injectables/CronService.html":{},"classes/User.html":{},"miscellaneous/variables.html":{}}}],["default('development",{"_index":117,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["define",{"_index":20,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/CatsController.html":{},"controllers/HealthController.html":{},"controllers/UsersController.html":{}}}],["defined",{"_index":12,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Cat.html":{},"classes/CatRepository.html":{},"controllers/CatsController.html":{},"injectables/CatsService.html":{},"classes/CreateCatDto.html":{},"classes/CreateUserDto.html":{},"injectables/CronService.html":{},"classes/GetCatResponseDto.html":{},"classes/GetUserResponseDto.html":{},"controllers/HealthController.html":{},"classes/UpdateCatDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"classes/UserRepository.html":{},"injectables/UsersService.html":{}}}],["delete",{"_index":226,"title":{},"body":{"controllers/CatsController.html":{},"controllers/UsersController.html":{}}}],["deletedat",{"_index":148,"title":{},"body":{"classes/Cat.html":{},"classes/CreateCatDto.html":{},"classes/CreateUserDto.html":{},"classes/GetCatResponseDto.html":{},"classes/GetUserResponseDto.html":{},"classes/UpdateCatDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{}}}],["deletedatecolumn",{"_index":164,"title":{},"body":{"classes/Cat.html":{},"classes/User.html":{}}}],["deletes",{"_index":210,"title":{},"body":{"classes/CatRepository.html":{},"injectables/CatsService.html":{},"classes/UserRepository.html":{}}}],["dependencies",{"_index":43,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/CatsModule.html":{},"modules/CronModule.html":{},"modules/UsersModule.html":{},"dependencies.html":{},"overview.html":{}}}],["described",{"_index":383,"title":{},"body":{"controllers/HealthController.html":{}}}],["description",{"_index":193,"title":{},"body":{"classes/Cat.html":{},"classes/CreateCatDto.html":{},"classes/CreateUserDto.html":{},"classes/GetCatResponseDto.html":{},"classes/GetUserResponseDto.html":{},"classes/UpdateCatDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"index.html":{}}}],["development",{"_index":537,"title":{},"body":{"index.html":{}}}],["disable",{"_index":17,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"classes/CatRepository.html":{},"controllers/CatsController.html":{},"controllers/HealthController.html":{},"classes/UserRepository.html":{},"controllers/UsersController.html":{}}}],["dns",{"_index":369,"title":{},"body":{"controllers/HealthController.html":{}}}],["dnshealthindicator",{"_index":363,"title":{},"body":{"controllers/HealthController.html":{}}}],["docs",{"_index":373,"title":{},"body":{"controllers/HealthController.html":{}}}],["documentation",{"_index":452,"title":{},"body":{"coverage.html":{}}}],["dto",{"_index":247,"title":{},"body":{"controllers/CatsController.html":{},"controllers/UsersController.html":{}}}],["e2e",{"_index":546,"title":{},"body":{"index.html":{}}}],["eager",{"_index":437,"title":{},"body":{"controllers/UsersController.html":{}}}],["efficient",{"_index":528,"title":{},"body":{"index.html":{}}}],["entities",{"_index":119,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["entity",{"_index":187,"title":{},"body":{"classes/Cat.html":{},"classes/User.html":{}}}],["entityrepository",{"_index":213,"title":{},"body":{"classes/CatRepository.html":{},"classes/UserRepository.html":{}}}],["entityrepository(cat",{"_index":216,"title":{},"body":{"classes/CatRepository.html":{}}}],["entityrepository(user",{"_index":427,"title":{},"body":{"classes/UserRepository.html":{}}}],["eslint",{"_index":16,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"classes/CatRepository.html":{},"controllers/CatsController.html":{},"controllers/HealthController.html":{},"classes/UserRepository.html":{},"controllers/UsersController.html":{}}}],["eslint/no",{"_index":74,"title":{},"body":{"modules/AppModule.html":{},"classes/CatRepository.html":{},"classes/UserRepository.html":{}}}],["example",{"_index":154,"title":{},"body":{"classes/Cat.html":{},"classes/CreateCatDto.html":{},"classes/CreateUserDto.html":{},"classes/GetCatResponseDto.html":{},"classes/GetUserResponseDto.html":{},"classes/UpdateCatDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{}}}],["exclude",{"_index":289,"title":{},"body":{"classes/CreateCatDto.html":{},"classes/CreateUserDto.html":{},"classes/GetCatResponseDto.html":{},"classes/GetUserResponseDto.html":{},"classes/UpdateCatDto.html":{},"classes/UpdateUserDto.html":{}}}],["export",{"_index":29,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Cat.html":{},"classes/CatRepository.html":{},"controllers/CatsController.html":{},"modules/CatsModule.html":{},"injectables/CatsService.html":{},"classes/CreateCatDto.html":{},"classes/CreateUserDto.html":{},"modules/CronModule.html":{},"injectables/CronService.html":{},"classes/GetCatResponseDto.html":{},"classes/GetUserResponseDto.html":{},"controllers/HealthController.html":{},"classes/UpdateCatDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"classes/UserRepository.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["exports",{"_index":48,"title":{},"body":{"modules/AppModule.html":{},"modules/CatsModule.html":{},"modules/CronModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["express",{"_index":485,"title":{},"body":{"dependencies.html":{}}}],["extends",{"_index":205,"title":{},"body":{"classes/CatRepository.html":{},"injectables/CatsService.html":{},"classes/UserRepository.html":{},"injectables/UsersService.html":{}}}],["file",{"_index":5,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Cat.html":{},"classes/CatRepository.html":{},"controllers/CatsController.html":{},"modules/CatsModule.html":{},"injectables/CatsService.html":{},"classes/CreateCatDto.html":{},"classes/CreateUserDto.html":{},"modules/CronModule.html":{},"injectables/CronService.html":{},"classes/GetCatResponseDto.html":{},"classes/GetUserResponseDto.html":{},"controllers/HealthController.html":{},"classes/UpdateCatDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"classes/UserRepository.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["first",{"_index":386,"title":{},"body":{"controllers/HealthController.html":{}}}],["form",{"_index":212,"title":{},"body":{"classes/CatRepository.html":{},"injectables/CatsService.html":{},"classes/UserRepository.html":{}}}],["framework",{"_index":526,"title":{},"body":{"index.html":{}}}],["function",{"_index":388,"title":{},"body":{"controllers/HealthController.html":{},"coverage.html":{}}}],["functions",{"_index":516,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["get()@healthcheck",{"_index":358,"title":{},"body":{"controllers/HealthController.html":{}}}],["getcatresponsedto",{"_index":241,"title":{"classes/GetCatResponseDto.html":{}},"body":{"controllers/CatsController.html":{},"classes/CreateCatDto.html":{},"classes/GetCatResponseDto.html":{},"classes/UpdateCatDto.html":{},"coverage.html":{}}}],["gethello",{"_index":9,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["getmanager",{"_index":214,"title":{},"body":{"classes/CatRepository.html":{},"injectables/CatsService.html":{},"classes/UserRepository.html":{}}}],["getmanager().query('delete",{"_index":219,"title":{},"body":{"classes/CatRepository.html":{},"classes/UserRepository.html":{}}}],["getting",{"_index":522,"title":{"index.html":{}},"body":{}}],["getuserresponsedto",{"_index":303,"title":{"classes/GetUserResponseDto.html":{}},"body":{"classes/CreateUserDto.html":{},"classes/GetUserResponseDto.html":{},"classes/UpdateUserDto.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["grow",{"_index":553,"title":{},"body":{"index.html":{}}}],["handlecron",{"_index":313,"title":{},"body":{"injectables/CronService.html":{}}}],["handleinterval",{"_index":314,"title":{},"body":{"injectables/CronService.html":{}}}],["handletimeout",{"_index":315,"title":{},"body":{"injectables/CronService.html":{}}}],["hapi/joi",{"_index":91,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["health",{"_index":128,"title":{},"body":{"modules/AppModule.html":{},"controllers/HealthController.html":{}}}],["healthcheck",{"_index":364,"title":{},"body":{"controllers/HealthController.html":{}}}],["healthcheckservice",{"_index":365,"title":{},"body":{"controllers/HealthController.html":{}}}],["healthcontroller",{"_index":59,"title":{"controllers/HealthController.html":{}},"body":{"modules/AppModule.html":{},"controllers/HealthController.html":{},"coverage.html":{}}}],["hello",{"_index":140,"title":{},"body":{"injectables/AppService.html":{}}}],["helmet",{"_index":497,"title":{},"body":{"dependencies.html":{}}}],["here",{"_index":563,"title":{},"body":{"index.html":{}}}],["https://docs.nestjs.com",{"_index":374,"title":{},"body":{"controllers/HealthController.html":{}}}],["https://nestjs.com",{"_index":570,"title":{},"body":{"index.html":{}}}],["id",{"_index":149,"title":{},"body":{"classes/Cat.html":{},"classes/CreateCatDto.html":{},"classes/CreateUserDto.html":{},"classes/GetCatResponseDto.html":{},"classes/GetUserResponseDto.html":{},"classes/UpdateCatDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{}}}],["identifier",{"_index":453,"title":{},"body":{"coverage.html":{}}}],["implements",{"_index":130,"title":{},"body":{"modules/AppModule.html":{},"controllers/CatsController.html":{},"controllers/HealthController.html":{},"controllers/UsersController.html":{}}}],["import",{"_index":21,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Cat.html":{},"classes/CatRepository.html":{},"controllers/CatsController.html":{},"modules/CatsModule.html":{},"injectables/CatsService.html":{},"classes/CreateCatDto.html":{},"classes/CreateUserDto.html":{},"modules/CronModule.html":{},"injectables/CronService.html":{},"classes/GetCatResponseDto.html":{},"classes/GetUserResponseDto.html":{},"controllers/HealthController.html":{},"classes/UpdateCatDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"classes/UserRepository.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["imports",{"_index":60,"title":{},"body":{"modules/AppModule.html":{},"modules/CatsModule.html":{},"modules/UsersModule.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/Cat.html":{},"classes/CatRepository.html":{},"controllers/CatsController.html":{},"injectables/CatsService.html":{},"classes/CreateCatDto.html":{},"classes/CreateUserDto.html":{},"injectables/CronService.html":{},"classes/GetCatResponseDto.html":{},"classes/GetUserResponseDto.html":{},"controllers/HealthController.html":{},"classes/UpdateCatDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"classes/UserRepository.html":{},"injectables/UsersService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Cat.html":{},"classes/CatRepository.html":{},"controllers/CatsController.html":{},"modules/CatsModule.html":{},"injectables/CatsService.html":{},"classes/CreateCatDto.html":{},"classes/CreateUserDto.html":{},"modules/CronModule.html":{},"injectables/CronService.html":{},"classes/GetCatResponseDto.html":{},"classes/GetUserResponseDto.html":{},"controllers/HealthController.html":{},"classes/UpdateCatDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"classes/UserRepository.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["initialized",{"_index":132,"title":{},"body":{"modules/AppModule.html":{},"controllers/HealthController.html":{}}}],["injectable",{"_index":136,"title":{"injectables/AppService.html":{},"injectables/CatsService.html":{},"injectables/CronService.html":{},"injectables/UsersService.html":{}},"body":{"injectables/AppService.html":{},"injectables/CatsService.html":{},"injectables/CronService.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["injectables",{"_index":137,"title":{},"body":{"injectables/AppService.html":{},"injectables/CatsService.html":{},"injectables/CronService.html":{},"injectables/UsersService.html":{},"overview.html":{}}}],["injectrepository",{"_index":277,"title":{},"body":{"injectables/CatsService.html":{},"injectables/UsersService.html":{}}}],["injectrepository(catrepository",{"_index":275,"title":{},"body":{"injectables/CatsService.html":{}}}],["injectrepository(userrepository",{"_index":448,"title":{},"body":{"injectables/UsersService.html":{}}}],["installation",{"_index":534,"title":{},"body":{"index.html":{}}}],["installrunning",{"_index":536,"title":{},"body":{"index.html":{}}}],["interval",{"_index":328,"title":{},"body":{"injectables/CronService.html":{}}}],["interval(100000",{"_index":318,"title":{},"body":{"injectables/CronService.html":{}}}],["isglobal",{"_index":101,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["isint",{"_index":290,"title":{},"body":{"classes/CreateCatDto.html":{},"classes/CreateUserDto.html":{},"classes/GetCatResponseDto.html":{},"classes/GetUserResponseDto.html":{},"classes/UpdateCatDto.html":{},"classes/UpdateUserDto.html":{}}}],["isnotempty",{"_index":293,"title":{},"body":{"classes/CreateCatDto.html":{},"classes/CreateUserDto.html":{},"classes/GetCatResponseDto.html":{},"classes/GetUserResponseDto.html":{},"classes/UpdateCatDto.html":{},"classes/UpdateUserDto.html":{}}}],["isoptional",{"_index":295,"title":{},"body":{"classes/CreateCatDto.html":{},"classes/CreateUserDto.html":{},"classes/GetCatResponseDto.html":{},"classes/GetUserResponseDto.html":{},"classes/UpdateCatDto.html":{},"classes/UpdateUserDto.html":{}}}],["ispositive",{"_index":294,"title":{},"body":{"classes/CreateCatDto.html":{},"classes/CreateUserDto.html":{},"classes/GetCatResponseDto.html":{},"classes/GetUserResponseDto.html":{},"classes/UpdateCatDto.html":{},"classes/UpdateUserDto.html":{}}}],["isstring",{"_index":291,"title":{},"body":{"classes/CreateCatDto.html":{},"classes/CreateUserDto.html":{},"classes/GetCatResponseDto.html":{},"classes/GetUserResponseDto.html":{},"classes/UpdateCatDto.html":{},"classes/UpdateUserDto.html":{}}}],["joi",{"_index":90,"title":{},"body":{"modules/AppModule.html":{}}}],["joi.number().default(3000",{"_index":109,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["joi.object",{"_index":107,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["joi.string",{"_index":111,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["join",{"_index":436,"title":{},"body":{"controllers/UsersController.html":{},"index.html":{}}}],["kamil",{"_index":567,"title":{},"body":{"index.html":{}}}],["kitty",{"_index":195,"title":{},"body":{"classes/Cat.html":{},"classes/CreateCatDto.html":{},"classes/CreateUserDto.html":{},"classes/GetCatResponseDto.html":{},"classes/GetUserResponseDto.html":{},"classes/UpdateCatDto.html":{},"classes/UpdateUserDto.html":{}}}],["kitty'})@column({name",{"_index":169,"title":{},"body":{"classes/Cat.html":{}}}],["kitty'})@isstring()@isnotempty()@minlength(2",{"_index":286,"title":{},"body":{"classes/CreateCatDto.html":{}}}],["kitty'})@isstring()@isnotempty()@minlength(2)@isoptional",{"_index":404,"title":{},"body":{"classes/UpdateCatDto.html":{},"classes/UpdateUserDto.html":{}}}],["legend",{"_index":44,"title":{},"body":{"modules/AppModule.html":{},"modules/CatsModule.html":{},"modules/CronModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["length",{"_index":171,"title":{},"body":{"classes/Cat.html":{},"classes/User.html":{}}}],["license",{"_index":573,"title":{},"body":{"index.html":{}}}],["licensed",{"_index":550,"title":{},"body":{"index.html":{}}}],["limit",{"_index":495,"title":{},"body":{"dependencies.html":{}}}],["line",{"_index":220,"title":{},"body":{"classes/CatRepository.html":{},"controllers/HealthController.html":{},"classes/UserRepository.html":{}}}],["local",{"_index":500,"title":{},"body":{"dependencies.html":{}}}],["logger",{"_index":312,"title":{},"body":{"injectables/CronService.html":{}}}],["logger(cronservice.name",{"_index":325,"title":{},"body":{"injectables/CronService.html":{}}}],["logging",{"_index":125,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["maine",{"_index":158,"title":{},"body":{"classes/Cat.html":{},"classes/CreateCatDto.html":{},"classes/GetCatResponseDto.html":{},"classes/UpdateCatDto.html":{}}}],["manytoone",{"_index":189,"title":{},"body":{"classes/Cat.html":{}}}],["manytoone((type",{"_index":199,"title":{},"body":{"classes/Cat.html":{}}}],["manytoone(undefined",{"_index":180,"title":{},"body":{"classes/Cat.html":{}}}],["matching",{"_index":38,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Cat.html":{},"classes/CatRepository.html":{},"controllers/CatsController.html":{},"modules/CatsModule.html":{},"injectables/CatsService.html":{},"classes/CreateCatDto.html":{},"classes/CreateUserDto.html":{},"modules/CronModule.html":{},"injectables/CronService.html":{},"classes/GetCatResponseDto.html":{},"classes/GetUserResponseDto.html":{},"controllers/HealthController.html":{},"classes/UpdateCatDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"classes/UserRepository.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["member",{"_index":78,"title":{},"body":{"modules/AppModule.html":{}}}],["metadata",{"_index":503,"title":{},"body":{"dependencies.html":{}}}],["methods",{"_index":8,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/CatRepository.html":{},"controllers/CatsController.html":{},"injectables/CatsService.html":{},"injectables/CronService.html":{},"controllers/HealthController.html":{},"classes/UserRepository.html":{}}}],["minlength",{"_index":292,"title":{},"body":{"classes/CreateCatDto.html":{},"classes/CreateUserDto.html":{},"classes/GetCatResponseDto.html":{},"classes/GetUserResponseDto.html":{},"classes/UpdateCatDto.html":{},"classes/UpdateUserDto.html":{}}}],["minlength(2",{"_index":297,"title":{},"body":{"classes/CreateCatDto.html":{},"classes/CreateUserDto.html":{},"classes/GetCatResponseDto.html":{},"classes/GetUserResponseDto.html":{},"classes/UpdateCatDto.html":{},"classes/UpdateUserDto.html":{}}}],["miscellaneous",{"_index":515,"title":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":549,"title":{},"body":{"index.html":{}}}],["mode",{"_index":541,"title":{},"body":{"index.html":{}}}],["model",{"_index":246,"title":{},"body":{"controllers/CatsController.html":{},"controllers/UsersController.html":{}}}],["module",{"_index":40,"title":{"modules/AppModule.html":{},"modules/CatsModule.html":{},"modules/CronModule.html":{},"modules/UsersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CatsModule.html":{},"modules/CronModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["modules",{"_index":42,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/CatsModule.html":{},"modules/CronModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["more",{"_index":562,"title":{},"body":{"index.html":{}}}],["myśliwiec",{"_index":568,"title":{},"body":{"index.html":{}}}],["name",{"_index":65,"title":{},"body":{"modules/AppModule.html":{},"classes/Cat.html":{},"injectables/CatsService.html":{},"classes/CreateCatDto.html":{},"classes/CreateUserDto.html":{},"classes/GetCatResponseDto.html":{},"classes/GetUserResponseDto.html":{},"controllers/HealthController.html":{},"classes/UpdateCatDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"injectables/UsersService.html":{},"miscellaneous/functions.html":{}}}],["name'})@column({name",{"_index":413,"title":{},"body":{"classes/User.html":{}}}],["name'})@isstring()@isnotempty()@minlength(2",{"_index":300,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["name_length",{"_index":150,"title":{},"body":{"classes/Cat.html":{},"classes/User.html":{}}}],["nest",{"_index":392,"title":{},"body":{"controllers/HealthController.html":{},"index.html":{}}}],["nestframework",{"_index":572,"title":{},"body":{"index.html":{}}}],["nestjs/common",{"_index":22,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/CatsController.html":{},"modules/CatsModule.html":{},"injectables/CatsService.html":{},"modules/CronModule.html":{},"injectables/CronService.html":{},"controllers/HealthController.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["nestjs/config",{"_index":81,"title":{},"body":{"modules/AppModule.html":{},"controllers/HealthController.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":478,"title":{},"body":{"dependencies.html":{}}}],["nestjs/mapped",{"_index":479,"title":{},"body":{"dependencies.html":{}}}],["nestjs/passport",{"_index":482,"title":{},"body":{"dependencies.html":{}}}],["nestjs/platform",{"_index":484,"title":{},"body":{"dependencies.html":{}}}],["nestjs/schedule",{"_index":83,"title":{},"body":{"modules/AppModule.html":{},"injectables/CronService.html":{},"dependencies.html":{}}}],["nestjs/swagger",{"_index":24,"title":{},"body":{"controllers/AppController.html":{},"classes/Cat.html":{},"controllers/CatsController.html":{},"classes/CreateCatDto.html":{},"classes/CreateUserDto.html":{},"classes/GetCatResponseDto.html":{},"classes/GetUserResponseDto.html":{},"controllers/HealthController.html":{},"classes/UpdateCatDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"dependencies.html":{}}}],["nestjs/terminus",{"_index":85,"title":{},"body":{"modules/AppModule.html":{},"controllers/HealthController.html":{},"dependencies.html":{}}}],["nestjs/typeorm",{"_index":87,"title":{},"body":{"modules/AppModule.html":{},"modules/CatsModule.html":{},"injectables/CatsService.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["nestjsx/crud",{"_index":236,"title":{},"body":{"controllers/CatsController.html":{},"injectables/CatsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["new",{"_index":324,"title":{},"body":{"injectables/CronService.html":{},"coverage.html":{}}}],["next",{"_index":366,"title":{},"body":{"controllers/HealthController.html":{}}}],["node.js",{"_index":525,"title":{},"body":{"index.html":{}}}],["node_env",{"_index":110,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["npm",{"_index":535,"title":{},"body":{"index.html":{}}}],["number",{"_index":152,"title":{},"body":{"classes/Cat.html":{},"classes/CreateCatDto.html":{},"classes/CreateUserDto.html":{},"injectables/CronService.html":{},"classes/GetCatResponseDto.html":{},"classes/GetUserResponseDto.html":{},"classes/UpdateCatDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{}}}],["object",{"_index":581,"title":{},"body":{"miscellaneous/variables.html":{}}}],["onapplicationshutdown",{"_index":61,"title":{},"body":{"modules/AppModule.html":{},"controllers/HealthController.html":{}}}],["onapplicationshutdown(signal",{"_index":62,"title":{},"body":{"modules/AppModule.html":{},"controllers/HealthController.html":{}}}],["once",{"_index":339,"title":{},"body":{"injectables/CronService.html":{}}}],["onetomany",{"_index":418,"title":{},"body":{"classes/User.html":{}}}],["onetomany((type",{"_index":421,"title":{},"body":{"classes/User.html":{}}}],["onetomany(undefined",{"_index":408,"title":{},"body":{"classes/User.html":{}}}],["onmoduledestroy",{"_index":380,"title":{},"body":{"controllers/HealthController.html":{}}}],["onmoduleinit",{"_index":71,"title":{},"body":{"modules/AppModule.html":{},"controllers/HealthController.html":{}}}],["open",{"_index":551,"title":{},"body":{"index.html":{}}}],["optional",{"_index":67,"title":{},"body":{"modules/AppModule.html":{},"injectables/CatsService.html":{},"controllers/HealthController.html":{},"classes/UpdateCatDto.html":{},"classes/UpdateUserDto.html":{},"injectables/UsersService.html":{},"miscellaneous/functions.html":{}}}],["out",{"_index":57,"title":{},"body":{"modules/AppModule.html":{},"modules/CatsModule.html":{},"modules/CronModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["overview",{"_index":577,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":474,"title":{"dependencies.html":{}},"body":{}}],["param",{"_index":232,"title":{},"body":{"controllers/CatsController.html":{},"controllers/UsersController.html":{}}}],["parameter",{"_index":387,"title":{},"body":{"controllers/HealthController.html":{}}}],["parameters",{"_index":64,"title":{},"body":{"modules/AppModule.html":{},"injectables/CatsService.html":{},"controllers/HealthController.html":{},"injectables/UsersService.html":{},"miscellaneous/functions.html":{}}}],["passport",{"_index":499,"title":{},"body":{"dependencies.html":{}}}],["path",{"_index":32,"title":{},"body":{"controllers/AppController.html":{},"controllers/CatsController.html":{},"controllers/UsersController.html":{}}}],["please",{"_index":560,"title":{},"body":{"index.html":{}}}],["port",{"_index":108,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["post",{"_index":229,"title":{},"body":{"controllers/CatsController.html":{},"controllers/UsersController.html":{}}}],["post('/clear",{"_index":257,"title":{},"body":{"controllers/CatsController.html":{}}}],["prefix",{"_index":356,"title":{},"body":{"controllers/HealthController.html":{}}}],["primarygeneratedcolumn",{"_index":188,"title":{},"body":{"classes/Cat.html":{},"classes/User.html":{}}}],["private",{"_index":311,"title":{},"body":{"injectables/CronService.html":{},"controllers/HealthController.html":{}}}],["production",{"_index":114,"title":{},"body":{"modules/AppModule.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["progressive",{"_index":524,"title":{},"body":{"index.html":{}}}],["project",{"_index":552,"title":{},"body":{"index.html":{}}}],["promise",{"_index":391,"title":{},"body":{"controllers/HealthController.html":{}}}],["properties",{"_index":144,"title":{},"body":{"classes/Cat.html":{},"injectables/CatsService.html":{},"classes/CreateCatDto.html":{},"classes/CreateUserDto.html":{},"injectables/CronService.html":{},"classes/GetCatResponseDto.html":{},"classes/GetUserResponseDto.html":{},"classes/UpdateCatDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"injectables/UsersService.html":{}}}],["providers",{"_index":47,"title":{},"body":{"modules/AppModule.html":{},"modules/CatsModule.html":{},"modules/CronModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["provision",{"_index":116,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["public",{"_index":192,"title":{},"body":{"classes/Cat.html":{},"injectables/CatsService.html":{},"injectables/CronService.html":{},"classes/User.html":{},"injectables/UsersService.html":{}}}],["put",{"_index":231,"title":{},"body":{"controllers/CatsController.html":{},"controllers/UsersController.html":{}}}],["query",{"_index":252,"title":{},"body":{"controllers/CatsController.html":{},"controllers/UsersController.html":{}}}],["rate",{"_index":494,"title":{},"body":{"dependencies.html":{}}}],["read",{"_index":561,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":34,"title":{},"body":{"controllers/AppController.html":{},"classes/Cat.html":{},"classes/CreateCatDto.html":{},"classes/CreateUserDto.html":{},"injectables/CronService.html":{},"classes/GetCatResponseDto.html":{},"classes/GetUserResponseDto.html":{},"classes/UpdateCatDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{}}}],["receives",{"_index":376,"title":{},"body":{"controllers/HealthController.html":{}}}],["records",{"_index":211,"title":{},"body":{"classes/CatRepository.html":{},"injectables/CatsService.html":{},"classes/UserRepository.html":{}}}],["reflect",{"_index":502,"title":{},"body":{"dependencies.html":{}}}],["registered",{"_index":379,"title":{},"body":{"controllers/HealthController.html":{}}}],["rejected",{"_index":396,"title":{},"body":{"controllers/HealthController.html":{}}}],["relations",{"_index":183,"title":{},"body":{"classes/Cat.html":{},"classes/User.html":{}}}],["replace",{"_index":249,"title":{},"body":{"controllers/CatsController.html":{},"controllers/UsersController.html":{}}}],["repo",{"_index":270,"title":{},"body":{"injectables/CatsService.html":{},"injectables/UsersService.html":{}}}],["repository",{"_index":206,"title":{},"body":{"classes/CatRepository.html":{},"classes/UserRepository.html":{},"index.html":{}}}],["request",{"_index":491,"title":{},"body":{"dependencies.html":{}}}],["required",{"_index":112,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["reset",{"_index":56,"title":{},"body":{"modules/AppModule.html":{},"modules/CatsModule.html":{},"modules/CronModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["resolved",{"_index":395,"title":{},"body":{"controllers/HealthController.html":{}}}],["result",{"_index":37,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Cat.html":{},"classes/CatRepository.html":{},"controllers/CatsController.html":{},"modules/CatsModule.html":{},"injectables/CatsService.html":{},"classes/CreateCatDto.html":{},"classes/CreateUserDto.html":{},"modules/CronModule.html":{},"injectables/CronService.html":{},"classes/GetCatResponseDto.html":{},"classes/GetUserResponseDto.html":{},"controllers/HealthController.html":{},"classes/UpdateCatDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"classes/UserRepository.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["results",{"_index":39,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Cat.html":{},"classes/CatRepository.html":{},"controllers/CatsController.html":{},"modules/CatsModule.html":{},"injectables/CatsService.html":{},"classes/CreateCatDto.html":{},"classes/CreateUserDto.html":{},"modules/CronModule.html":{},"injectables/CronService.html":{},"classes/GetCatResponseDto.html":{},"classes/GetUserResponseDto.html":{},"controllers/HealthController.html":{},"classes/UpdateCatDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"classes/UserRepository.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":35,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/CatRepository.html":{},"controllers/CatsController.html":{},"injectables/CatsService.html":{},"controllers/HealthController.html":{},"classes/UserRepository.html":{}}}],["returns",{"_index":14,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/CatRepository.html":{},"controllers/CatsController.html":{},"injectables/CatsService.html":{},"injectables/CronService.html":{},"controllers/HealthController.html":{},"classes/UserRepository.html":{}}}],["rimraf",{"_index":505,"title":{},"body":{"dependencies.html":{}}}],["run",{"_index":538,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":507,"title":{},"body":{"dependencies.html":{}}}],["scalable",{"_index":529,"title":{},"body":{"index.html":{}}}],["schedulemodule",{"_index":82,"title":{},"body":{"modules/AppModule.html":{}}}],["schedulemodule.forroot",{"_index":127,"title":{},"body":{"modules/AppModule.html":{}}}],["second",{"_index":333,"title":{},"body":{"injectables/CronService.html":{}}}],["seconds",{"_index":338,"title":{},"body":{"injectables/CronService.html":{}}}],["sequence",{"_index":382,"title":{},"body":{"controllers/HealthController.html":{}}}],["serialize",{"_index":251,"title":{},"body":{"controllers/CatsController.html":{},"controllers/UsersController.html":{}}}],["server",{"_index":530,"title":{},"body":{"index.html":{}}}],["service",{"_index":255,"title":{},"body":{"controllers/CatsController.html":{},"controllers/UsersController.html":{}}}],["setupapp",{"_index":468,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["setupapp(app",{"_index":520,"title":{},"body":{"miscellaneous/functions.html":{}}}],["shutdown",{"_index":135,"title":{},"body":{"modules/AppModule.html":{},"controllers/HealthController.html":{}}}],["side",{"_index":531,"title":{},"body":{"index.html":{}}}],["signal",{"_index":68,"title":{},"body":{"modules/AppModule.html":{},"controllers/HealthController.html":{}}}],["source",{"_index":4,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Cat.html":{},"classes/CatRepository.html":{},"controllers/CatsController.html":{},"modules/CatsModule.html":{},"injectables/CatsService.html":{},"classes/CreateCatDto.html":{},"classes/CreateUserDto.html":{},"modules/CronModule.html":{},"injectables/CronService.html":{},"classes/GetCatResponseDto.html":{},"classes/GetUserResponseDto.html":{},"controllers/HealthController.html":{},"classes/UpdateCatDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"classes/UserRepository.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"index.html":{}}}],["sponsors",{"_index":555,"title":{},"body":{"index.html":{}}}],["sqlite",{"_index":121,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["sqlite3",{"_index":509,"title":{},"body":{"dependencies.html":{}}}],["src/.../app.module.ts",{"_index":580,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../main.ts",{"_index":517,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/app.controller.ts",{"_index":6,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app.controller.ts:15",{"_index":13,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.module.ts",{"_index":58,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app.module.ts:61",{"_index":72,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.module.ts:65",{"_index":63,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.service.ts",{"_index":138,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["src/app.service.ts:5",{"_index":139,"title":{},"body":{"injectables/AppService.html":{}}}],["src/cats/cats.controller.ts",{"_index":223,"title":{},"body":{"controllers/CatsController.html":{},"coverage.html":{}}}],["src/cats/cats.controller.ts:38",{"_index":228,"title":{},"body":{"controllers/CatsController.html":{}}}],["src/cats/cats.module.ts",{"_index":262,"title":{},"body":{"modules/CatsModule.html":{}}}],["src/cats/cats.service.ts",{"_index":268,"title":{},"body":{"injectables/CatsService.html":{},"coverage.html":{}}}],["src/cats/cats.service.ts:11",{"_index":273,"title":{},"body":{"injectables/CatsService.html":{}}}],["src/cats/cats.service.ts:12",{"_index":276,"title":{},"body":{"injectables/CatsService.html":{}}}],["src/cats/cats.service.ts:19",{"_index":274,"title":{},"body":{"injectables/CatsService.html":{}}}],["src/cats/datum/cat.dto.ts",{"_index":281,"title":{},"body":{"classes/CreateCatDto.html":{},"classes/GetCatResponseDto.html":{},"classes/UpdateCatDto.html":{},"coverage.html":{}}}],["src/cats/datum/cat.dto.ts:19",{"_index":287,"title":{},"body":{"classes/CreateCatDto.html":{}}}],["src/cats/datum/cat.dto.ts:25",{"_index":283,"title":{},"body":{"classes/CreateCatDto.html":{}}}],["src/cats/datum/cat.dto.ts:30",{"_index":285,"title":{},"body":{"classes/CreateCatDto.html":{}}}],["src/cats/datum/cat.dto.ts:39",{"_index":405,"title":{},"body":{"classes/UpdateCatDto.html":{}}}],["src/cats/datum/cat.dto.ts:46",{"_index":401,"title":{},"body":{"classes/UpdateCatDto.html":{}}}],["src/cats/datum/cat.dto.ts:52",{"_index":403,"title":{},"body":{"classes/UpdateCatDto.html":{}}}],["src/cats/datum/cat.dto.ts:57",{"_index":347,"title":{},"body":{"classes/GetCatResponseDto.html":{}}}],["src/cats/datum/cat.dto.ts:60",{"_index":348,"title":{},"body":{"classes/GetCatResponseDto.html":{}}}],["src/cats/datum/cat.dto.ts:63",{"_index":341,"title":{},"body":{"classes/GetCatResponseDto.html":{}}}],["src/cats/datum/cat.dto.ts:66",{"_index":342,"title":{},"body":{"classes/GetCatResponseDto.html":{}}}],["src/cats/datum/cat.dto.ts:70",{"_index":344,"title":{},"body":{"classes/GetCatResponseDto.html":{}}}],["src/cats/datum/cat.dto.ts:74",{"_index":349,"title":{},"body":{"classes/GetCatResponseDto.html":{}}}],["src/cats/datum/cat.dto.ts:78",{"_index":345,"title":{},"body":{"classes/GetCatResponseDto.html":{}}}],["src/cats/datum/cat.entity.ts",{"_index":143,"title":{},"body":{"classes/Cat.html":{},"coverage.html":{}}}],["src/cats/datum/cat.entity.ts:17",{"_index":177,"title":{},"body":{"classes/Cat.html":{}}}],["src/cats/datum/cat.entity.ts:21",{"_index":168,"title":{},"body":{"classes/Cat.html":{}}}],["src/cats/datum/cat.entity.ts:25",{"_index":173,"title":{},"body":{"classes/Cat.html":{}}}],["src/cats/datum/cat.entity.ts:29",{"_index":157,"title":{},"body":{"classes/Cat.html":{}}}],["src/cats/datum/cat.entity.ts:33",{"_index":161,"title":{},"body":{"classes/Cat.html":{}}}],["src/cats/datum/cat.entity.ts:36",{"_index":163,"title":{},"body":{"classes/Cat.html":{}}}],["src/cats/datum/cat.entity.ts:39",{"_index":179,"title":{},"body":{"classes/Cat.html":{}}}],["src/cats/datum/cat.entity.ts:42",{"_index":165,"title":{},"body":{"classes/Cat.html":{}}}],["src/cats/datum/cat.entity.ts:50",{"_index":182,"title":{},"body":{"classes/Cat.html":{}}}],["src/cats/datum/cat.repository.ts",{"_index":204,"title":{},"body":{"classes/CatRepository.html":{},"coverage.html":{}}}],["src/cats/datum/cat.repository.ts:10",{"_index":209,"title":{},"body":{"classes/CatRepository.html":{}}}],["src/cron/cron.module",{"_index":88,"title":{},"body":{"modules/AppModule.html":{}}}],["src/cron/cron.module.ts",{"_index":307,"title":{},"body":{"modules/CronModule.html":{}}}],["src/cron/cron.service",{"_index":308,"title":{},"body":{"modules/CronModule.html":{}}}],["src/cron/cron.service.ts",{"_index":309,"title":{},"body":{"injectables/CronService.html":{},"coverage.html":{}}}],["src/cron/cron.service.ts:11",{"_index":317,"title":{},"body":{"injectables/CronService.html":{}}}],["src/cron/cron.service.ts:19",{"_index":319,"title":{},"body":{"injectables/CronService.html":{}}}],["src/cron/cron.service.ts:24",{"_index":321,"title":{},"body":{"injectables/CronService.html":{}}}],["src/cron/cron.service.ts:6",{"_index":323,"title":{},"body":{"injectables/CronService.html":{}}}],["src/cron/cron.service.ts:8",{"_index":326,"title":{},"body":{"injectables/CronService.html":{}}}],["src/health/health.controller",{"_index":89,"title":{},"body":{"modules/AppModule.html":{}}}],["src/health/health.controller.ts",{"_index":355,"title":{},"body":{"controllers/HealthController.html":{},"coverage.html":{}}}],["src/health/health.controller.ts:27",{"_index":359,"title":{},"body":{"controllers/HealthController.html":{}}}],["src/health/health.controller.ts:41",{"_index":361,"title":{},"body":{"controllers/HealthController.html":{}}}],["src/health/health.controller.ts:47",{"_index":360,"title":{},"body":{"controllers/HealthController.html":{}}}],["src/main.ts",{"_index":466,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/users/datum/user.dto.ts",{"_index":299,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/GetUserResponseDto.html":{},"classes/UpdateUserDto.html":{},"coverage.html":{}}}],["src/users/datum/user.dto.ts:19",{"_index":301,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["src/users/datum/user.dto.ts:28",{"_index":406,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["src/users/datum/user.dto.ts:33",{"_index":352,"title":{},"body":{"classes/GetUserResponseDto.html":{}}}],["src/users/datum/user.dto.ts:36",{"_index":353,"title":{},"body":{"classes/GetUserResponseDto.html":{}}}],["src/users/datum/user.dto.ts:40",{"_index":350,"title":{},"body":{"classes/GetUserResponseDto.html":{}}}],["src/users/datum/user.dto.ts:44",{"_index":354,"title":{},"body":{"classes/GetUserResponseDto.html":{}}}],["src/users/datum/user.dto.ts:48",{"_index":351,"title":{},"body":{"classes/GetUserResponseDto.html":{}}}],["src/users/datum/user.entity.ts",{"_index":407,"title":{},"body":{"classes/User.html":{},"coverage.html":{}}}],["src/users/datum/user.entity.ts:16",{"_index":416,"title":{},"body":{"classes/User.html":{}}}],["src/users/datum/user.entity.ts:20",{"_index":412,"title":{},"body":{"classes/User.html":{}}}],["src/users/datum/user.entity.ts:24",{"_index":415,"title":{},"body":{"classes/User.html":{}}}],["src/users/datum/user.entity.ts:27",{"_index":410,"title":{},"body":{"classes/User.html":{}}}],["src/users/datum/user.entity.ts:30",{"_index":417,"title":{},"body":{"classes/User.html":{}}}],["src/users/datum/user.entity.ts:33",{"_index":411,"title":{},"body":{"classes/User.html":{}}}],["src/users/datum/user.entity.ts:41",{"_index":409,"title":{},"body":{"classes/User.html":{}}}],["src/users/datum/user.repository.ts",{"_index":424,"title":{},"body":{"classes/UserRepository.html":{},"coverage.html":{}}}],["src/users/datum/user.repository.ts:10",{"_index":425,"title":{},"body":{"classes/UserRepository.html":{}}}],["src/users/users.controller.ts",{"_index":429,"title":{},"body":{"controllers/UsersController.html":{},"coverage.html":{}}}],["src/users/users.module.ts",{"_index":441,"title":{},"body":{"modules/UsersModule.html":{}}}],["src/users/users.service.ts",{"_index":446,"title":{},"body":{"injectables/UsersService.html":{},"coverage.html":{}}}],["src/users/users.service.ts:10",{"_index":447,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:11",{"_index":449,"title":{},"body":{"injectables/UsersService.html":{}}}],["start",{"_index":539,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":542,"title":{},"body":{"index.html":{}}}],["start:prodtest",{"_index":543,"title":{},"body":{"index.html":{}}}],["started",{"_index":523,"title":{"index.html":{}},"body":{}}],["starter",{"_index":533,"title":{},"body":{"index.html":{}}}],["statements",{"_index":454,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":31,"title":{},"body":{"controllers/AppController.html":{},"classes/Cat.html":{},"controllers/CatsController.html":{},"injectables/CronService.html":{},"classes/User.html":{},"controllers/UsersController.html":{}}}],["stay",{"_index":564,"title":{},"body":{"index.html":{}}}],["string",{"_index":15,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Cat.html":{},"classes/CreateCatDto.html":{},"classes/CreateUserDto.html":{},"classes/GetCatResponseDto.html":{},"classes/GetUserResponseDto.html":{},"controllers/HealthController.html":{},"classes/UpdateCatDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{}}}],["summary",{"_index":256,"title":{},"body":{"controllers/CatsController.html":{}}}],["super(repo",{"_index":279,"title":{},"body":{"injectables/CatsService.html":{},"injectables/UsersService.html":{}}}],["support",{"_index":556,"title":{},"body":{"index.html":{},"modules.html":{}}}],["svg",{"_index":575,"title":{},"body":{"modules.html":{}}}],["swagger",{"_index":511,"title":{},"body":{"dependencies.html":{}}}],["synchronize",{"_index":124,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["table",{"_index":473,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":472,"title":{},"body":{"coverage.html":{}}}],["termination",{"_index":377,"title":{},"body":{"controllers/HealthController.html":{}}}],["terminusmodule",{"_index":84,"title":{},"body":{"modules/AppModule.html":{}}}],["test",{"_index":115,"title":{},"body":{"modules/AppModule.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["test:covsupport",{"_index":548,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":547,"title":{},"body":{"index.html":{}}}],["tests",{"_index":545,"title":{},"body":{"index.html":{}}}],["thanks",{"_index":554,"title":{},"body":{"index.html":{}}}],["this.appservice.gethello",{"_index":36,"title":{},"body":{"controllers/AppController.html":{}}}],["this.config.get('node_env",{"_index":398,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.dns.pingcheck('nestjs",{"_index":372,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.health.check",{"_index":371,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.logger.debug",{"_index":331,"title":{},"body":{"injectables/CronService.html":{}}}],["this.logger.debug('called",{"_index":336,"title":{},"body":{"injectables/CronService.html":{}}}],["this.repo.clearall",{"_index":280,"title":{},"body":{"injectables/CatsService.html":{}}}],["this.service.clear",{"_index":258,"title":{},"body":{"controllers/CatsController.html":{}}}],["timeout",{"_index":329,"title":{},"body":{"injectables/CronService.html":{}}}],["timeout(50000",{"_index":320,"title":{},"body":{"injectables/CronService.html":{}}}],["touch",{"_index":565,"title":{},"body":{"index.html":{}}}],["transformer",{"_index":185,"title":{},"body":{"classes/Cat.html":{},"classes/CreateCatDto.html":{},"classes/CreateUserDto.html":{},"classes/GetCatResponseDto.html":{},"classes/GetUserResponseDto.html":{},"classes/UpdateCatDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"dependencies.html":{}}}],["true",{"_index":102,"title":{},"body":{"modules/AppModule.html":{},"controllers/CatsController.html":{},"controllers/UsersController.html":{},"miscellaneous/variables.html":{}}}],["twitter",{"_index":571,"title":{},"body":{"index.html":{}}}],["type",{"_index":66,"title":{},"body":{"modules/AppModule.html":{},"classes/Cat.html":{},"controllers/CatsController.html":{},"injectables/CatsService.html":{},"classes/CreateCatDto.html":{},"classes/CreateUserDto.html":{},"injectables/CronService.html":{},"classes/GetCatResponseDto.html":{},"classes/GetUserResponseDto.html":{},"controllers/HealthController.html":{},"classes/UpdateCatDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["type((t",{"_index":202,"title":{},"body":{"classes/Cat.html":{},"classes/User.html":{}}}],["typeorm",{"_index":190,"title":{},"body":{"classes/Cat.html":{},"classes/CatRepository.html":{},"injectables/CatsService.html":{},"classes/User.html":{},"classes/UserRepository.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["typeormcrudservice",{"_index":269,"title":{},"body":{"injectables/CatsService.html":{},"injectables/UsersService.html":{}}}],["typeormmodule",{"_index":86,"title":{},"body":{"modules/AppModule.html":{},"modules/CatsModule.html":{},"modules/UsersModule.html":{}}}],["typeormmodule.forfeature([catrepository",{"_index":267,"title":{},"body":{"modules/CatsModule.html":{}}}],["typeormmodule.forfeature([userrepository",{"_index":445,"title":{},"body":{"modules/UsersModule.html":{}}}],["typeormmodule.forroot(typeormmoduleoptions",{"_index":129,"title":{},"body":{"modules/AppModule.html":{}}}],["typeormmoduleoptions",{"_index":118,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["types",{"_index":480,"title":{},"body":{"dependencies.html":{}}}],["typescript",{"_index":73,"title":{},"body":{"modules/AppModule.html":{},"classes/CatRepository.html":{},"classes/UserRepository.html":{},"index.html":{}}}],["u",{"_index":200,"title":{},"body":{"classes/Cat.html":{}}}],["u.cats",{"_index":201,"title":{},"body":{"classes/Cat.html":{}}}],["ui",{"_index":512,"title":{},"body":{"dependencies.html":{}}}],["undefined",{"_index":172,"title":{},"body":{"classes/Cat.html":{},"classes/User.html":{}}}],["undefined)@type(undefined",{"_index":181,"title":{},"body":{"classes/Cat.html":{}}}],["unique",{"_index":166,"title":{},"body":{"classes/Cat.html":{},"classes/User.html":{}}}],["unit",{"_index":544,"title":{},"body":{"index.html":{}}}],["unsafe",{"_index":75,"title":{},"body":{"modules/AppModule.html":{},"classes/CatRepository.html":{},"classes/UserRepository.html":{}}}],["until",{"_index":394,"title":{},"body":{"controllers/HealthController.html":{}}}],["update",{"_index":250,"title":{},"body":{"controllers/CatsController.html":{},"controllers/UsersController.html":{}}}],["updatecatdto",{"_index":240,"title":{"classes/UpdateCatDto.html":{}},"body":{"controllers/CatsController.html":{},"classes/CreateCatDto.html":{},"classes/GetCatResponseDto.html":{},"classes/UpdateCatDto.html":{},"coverage.html":{}}}],["updatedat",{"_index":151,"title":{},"body":{"classes/Cat.html":{},"classes/CreateCatDto.html":{},"classes/CreateUserDto.html":{},"classes/GetCatResponseDto.html":{},"classes/GetUserResponseDto.html":{},"classes/UpdateCatDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{}}}],["updatedatecolumn",{"_index":178,"title":{},"body":{"classes/Cat.html":{},"classes/User.html":{}}}],["updateuserdto",{"_index":302,"title":{"classes/UpdateUserDto.html":{}},"body":{"classes/CreateUserDto.html":{},"classes/GetUserResponseDto.html":{},"classes/UpdateUserDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["use",{"_index":18,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/CatsController.html":{},"controllers/HealthController.html":{},"controllers/UsersController.html":{}}}],["user",{"_index":97,"title":{"classes/User.html":{}},"body":{"modules/AppModule.html":{},"classes/Cat.html":{},"modules/CatsModule.html":{},"classes/CreateUserDto.html":{},"classes/GetUserResponseDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"classes/UserRepository.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["user.entity",{"_index":426,"title":{},"body":{"classes/UserRepository.html":{}}}],["user.name_length",{"_index":420,"title":{},"body":{"classes/User.html":{}}}],["user_name",{"_index":414,"title":{},"body":{"classes/User.html":{}}}],["userrepository",{"_index":263,"title":{"classes/UserRepository.html":{}},"body":{"modules/CatsModule.html":{},"classes/UserRepository.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["users",{"_index":419,"title":{},"body":{"classes/User.html":{},"classes/UserRepository.html":{},"controllers/UsersController.html":{}}}],["users.controller",{"_index":444,"title":{},"body":{"modules/UsersModule.html":{}}}],["users.service",{"_index":433,"title":{},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{}}}],["users/datum/user.entity",{"_index":98,"title":{},"body":{"modules/AppModule.html":{},"classes/Cat.html":{},"modules/CatsModule.html":{}}}],["users/datum/user.repository",{"_index":264,"title":{},"body":{"modules/CatsModule.html":{}}}],["users/users.module",{"_index":96,"title":{},"body":{"modules/AppModule.html":{}}}],["userscontroller",{"_index":428,"title":{"controllers/UsersController.html":{}},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{},"coverage.html":{}}}],["usersmodule",{"_index":54,"title":{"modules/UsersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["usersservice",{"_index":432,"title":{"injectables/UsersService.html":{}},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"overview.html":{}}}],["valid('development",{"_index":113,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["validationoptions",{"_index":103,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["validationschema",{"_index":106,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["validator",{"_index":296,"title":{},"body":{"classes/CreateCatDto.html":{},"classes/CreateUserDto.html":{},"classes/GetCatResponseDto.html":{},"classes/GetUserResponseDto.html":{},"classes/UpdateCatDto.html":{},"classes/UpdateUserDto.html":{},"dependencies.html":{}}}],["value",{"_index":175,"title":{},"body":{"classes/Cat.html":{},"injectables/CronService.html":{},"classes/User.html":{},"miscellaneous/variables.html":{}}}],["variable",{"_index":456,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":579,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["void",{"_index":70,"title":{},"body":{"modules/AppModule.html":{},"injectables/CronService.html":{},"controllers/HealthController.html":{}}}],["watch",{"_index":540,"title":{},"body":{"index.html":{}}}],["website",{"_index":569,"title":{},"body":{"index.html":{}}}],["world",{"_index":141,"title":{},"body":{"injectables/AppService.html":{}}}],["yes",{"_index":69,"title":{},"body":{"modules/AppModule.html":{},"controllers/HealthController.html":{}}}],["you'd",{"_index":559,"title":{},"body":{"index.html":{}}}],["zoom",{"_index":55,"title":{},"body":{"modules/AppModule.html":{},"modules/CatsModule.html":{},"modules/CronModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getHello\n                        \n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/app.controller.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        /* eslint-disable no-use-before-define */\nimport { Controller, Get } from '@nestjs/common'\nimport { ApiTags } from '@nestjs/swagger'\n\nimport { AppService } from './app.service'\n\n@Controller(AppController.path)\n@ApiTags(AppController.name)\nexport class AppController {\n    static path = '/'\n\n    constructor(private readonly appService: AppService) {}\n\n    @Get()\n    getHello(): string {\n        return this.appService.getHello()\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AppModule_imports\n\n\n\n\nCatsModule\n\nCatsModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nCatsModule->AppModule\n\n\n\n\n\nCronModule\n\nCronModule\n\nAppModule -->\n\nCronModule->AppModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                        \n                            HealthController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            CatsModule\n                        \n                        \n                            CronModule\n                        \n                        \n                            UsersModule\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onApplicationShutdown\n                        \n                        \n                    \n                \n            \n            \n                \nonApplicationShutdown(signal?: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app.module.ts:65\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    signal\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onModuleInit\n                        \n                        \n                    \n                \n            \n            \n                \nonModuleInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app.module.ts:61\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        /* eslint-disable @typescript-eslint/no-unsafe-assignment,@typescript-eslint/no-unsafe-call,@typescript-eslint/no-unsafe-member-access,no-use-before-define */\nimport { Module, OnApplicationShutdown, OnModuleInit } from '@nestjs/common'\nimport { ConfigModule } from '@nestjs/config'\nimport { ScheduleModule } from '@nestjs/schedule'\nimport { TerminusModule } from '@nestjs/terminus'\nimport { TypeOrmModule } from '@nestjs/typeorm'\n\nimport { CronModule } from 'src/cron/cron.module'\nimport { HealthController } from 'src/health/health.controller'\n\nimport * as Joi from '@hapi/joi'\n\nimport { AppController } from './app.controller'\nimport { AppService } from './app.service'\nimport { CatsModule } from './cats/cats.module'\nimport { Cat } from './cats/datum/cat.entity'\nimport { UsersModule } from './users/users.module'\nimport { User } from './users/datum/user.entity'\n\nconst ConfigModuleOptions = {\n    isGlobal: true,\n    validationOptions: {\n        allowUnknown: true,\n        abortEarly: true,\n    },\n    validationSchema: Joi.object({\n        PORT: Joi.number().default(3000),\n        NODE_ENV: Joi.string()\n            .required()\n            .valid('development', 'production', 'test', 'provision')\n            .default('development'),\n    }),\n}\n\nconst TypeOrmModuleOptions = {\n    entities: [\n        Cat,\n        User,\n        // `${__dirname}/**/*.entity.{ts,js}`,\n    ],\n    type: 'sqlite' as const,\n    database: 'database.sqlite',\n    synchronize: true,\n    logging: true,\n}\n\n@Module({\n    controllers: [AppController, HealthController],\n    imports: [\n        ConfigModule.forRoot(ConfigModuleOptions),\n        ScheduleModule.forRoot(),\n        CronModule,\n        TerminusModule, // Health module\n        TypeOrmModule.forRoot(TypeOrmModuleOptions),\n        CatsModule,\n        UsersModule,\n    ],\n    providers: [AppService],\n})\nexport class AppModule implements OnModuleInit, OnApplicationShutdown {\n    onModuleInit(): void {\n        console.info(`ModuleInit - AppModule has been initialized.`)\n    }\n\n    onApplicationShutdown(signal?: string): void {\n        console.error(\n            `ApplicationShutdown - AppModule has been shutdown with ${signal} signal`,\n        )\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getHello\n                        \n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n            \n                \n                    Defined in src/app.service.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common'\n\n@Injectable()\nexport class AppService {\n    getHello(): string {\n        return 'Hello World!'\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Cat.html":{"url":"classes/Cat.html","title":"class - Cat","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Cat\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/cats/datum/cat.entity.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                age\n                            \n                            \n                                breed\n                            \n                            \n                                createdAt\n                            \n                            \n                                deletedAt\n                            \n                            \n                                id\n                            \n                            \n                                name\n                            \n                            \n                                    Static\n                                    Readonly\n                                NAME_LENGTH\n                            \n                            \n                                updatedAt\n                            \n                            \n                                user\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            age\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'The age of the Cat', example: 1})@Column({name: 'cat_age'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/cats/datum/cat.entity.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            breed\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'The breed of the Cat', example: 'Maine Coon'})@Column({name: 'cat_breed'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/cats/datum/cat.entity.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @CreateDateColumn()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/cats/datum/cat.entity.ts:36\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            deletedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @DeleteDateColumn()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/cats/datum/cat.entity.ts:42\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'Cat unique ID', example: '36635263'})@PrimaryGeneratedColumn()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/cats/datum/cat.entity.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'The name of the Cat', example: 'Kitty'})@Column({name: 'cat_name', length: undefined})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/cats/datum/cat.entity.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                                Readonly\n                            NAME_LENGTH\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 36\n                        \n                    \n                        \n                            \n                                    Defined in src/cats/datum/cat.entity.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @UpdateDateColumn()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/cats/datum/cat.entity.ts:39\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            user\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         User\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ManyToOne(undefined, undefined)@Type(undefined)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/cats/datum/cat.entity.ts:50\n                            \n                        \n\n                \n                    \n                        Relations\n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger'\nimport { Type } from 'class-transformer'\n\nimport {\n    Column,\n    CreateDateColumn,\n    Entity,\n    PrimaryGeneratedColumn,\n    UpdateDateColumn,\n    DeleteDateColumn,\n    ManyToOne,\n} from 'typeorm'\nimport { User } from '../../users/datum/user.entity'\n\n@Entity({ name: 'cats' })\nexport class Cat {\n    public static readonly NAME_LENGTH = 36\n\n    @ApiProperty({ description: 'Cat unique ID', example: '36635263' })\n    @PrimaryGeneratedColumn()\n    id: number\n\n    @ApiProperty({ description: 'The name of the Cat', example: 'Kitty' })\n    @Column({ name: 'cat_name', length: Cat.NAME_LENGTH })\n    name: string\n\n    @ApiProperty({ description: 'The age of the Cat', example: 1 })\n    @Column({ name: 'cat_age' })\n    age: number\n\n    @ApiProperty({ description: 'The breed of the Cat', example: 'Maine Coon' })\n    @Column({ name: 'cat_breed' })\n    breed: string\n\n    @CreateDateColumn()\n    createdAt: any\n\n    @UpdateDateColumn()\n    updatedAt: any\n\n    @DeleteDateColumn()\n    deletedAt: any\n\n    /**\n     * Relations\n     */\n\n    @ManyToOne((type) => User, (u) => u.cats)\n    @Type((t) => User)\n    user: User\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CatRepository.html":{"url":"classes/CatRepository.html","title":"class - CatRepository","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CatRepository\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/cats/datum/cat.repository.ts\n        \n\n\n            \n                Extends\n            \n            \n                    Repository\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                clearAll\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            clearAll\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    clearAll()\n                \n            \n\n\n            \n                \n                    Defined in src/cats/datum/cat.repository.ts:10\n                \n            \n\n\n            \n                \n                    Deletes all of the Cat records form database\n\n\n                    \n                        Returns :     {}\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { EntityRepository, getManager, Repository } from 'typeorm'\n\nimport { Cat } from './cat.entity'\n\n@EntityRepository(Cat)\nexport class CatRepository extends Repository {\n    /**\n     * Deletes all of the Cat records form database\n     */\n    async clearAll() {\n        let cleared = {}\n        cleared = await getManager().query('DELETE FROM cats') // eslint-disable-line @typescript-eslint/no-unsafe-assignment\n        return cleared\n    }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/CatsController.html":{"url":"controllers/CatsController.html","title":"controller - CatsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  CatsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/cats/cats.controller.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                clear\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            clear\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    clear()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'Delete all Cats'})@Post('/clear')\n                \n            \n\n            \n                \n                    Defined in src/cats/cats.controller.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     {}\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        /* eslint-disable no-use-before-define */\nimport { Controller, Get, Post, Body, Put, Param, Delete } from '@nestjs/common'\nimport { ApiOperation, ApiTags } from '@nestjs/swagger'\nimport { Crud, CrudController } from '@nestjsx/crud'\n\nimport { CatsService } from './cats.service'\nimport { CreateCatDto, UpdateCatDto, GetCatResponseDto } from './datum/cat.dto'\nimport { Cat } from './datum/cat.entity'\n\n@Controller(CatsController.path)\n@ApiTags(CatsController.name)\n@Crud({\n    model: {\n        type: Cat,\n    },\n    dto: {\n        create: CreateCatDto,\n        replace: CreateCatDto,\n        update: UpdateCatDto,\n    },\n    serialize: {\n        create: GetCatResponseDto,\n        delete: GetCatResponseDto,\n        get: GetCatResponseDto,\n        update: GetCatResponseDto,\n    },\n    query: {\n        alwaysPaginate: true,\n    },\n})\nexport class CatsController implements CrudController {\n    static path = 'cats'\n\n    constructor(public service: CatsService) {}\n\n    @ApiOperation({ summary: 'Delete all Cats' })\n    @Post('/clear')\n    async clear() {\n        return this.service.clear()\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CatsModule.html":{"url":"modules/CatsModule.html","title":"module - CatsModule","body":"\n                   \n\n\n\n\n    Modules\n    CatsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_CatsModule\n\n\n\ncluster_CatsModule_providers\n\n\n\ncluster_CatsModule_exports\n\n\n\n\nCatsService \n\nCatsService \n\n\n\nCatsModule\n\nCatsModule\n\nCatsService  -->\n\nCatsModule->CatsService \n\n\n\n\n\nCatsService\n\nCatsService\n\nCatsModule -->\n\nCatsService->CatsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/cats/cats.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            CatsService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            CatsController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            CatsService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common'\nimport { TypeOrmModule } from '@nestjs/typeorm'\n\nimport { User } from '../users/datum/user.entity'\nimport { UserRepository } from '../users/datum/user.repository'\nimport { CatsController } from './cats.controller'\nimport { CatsService } from './cats.service'\nimport { Cat } from './datum/cat.entity'\nimport { CatRepository } from './datum/cat.repository'\n\n@Module({\n    controllers: [CatsController],\n    exports: [CatsService],\n    imports: [TypeOrmModule.forFeature([CatRepository, UserRepository, User])],\n    providers: [CatsService],\n})\nexport class CatsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CatsService.html":{"url":"injectables/CatsService.html","title":"injectable - CatsService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  CatsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/cats/cats.service.ts\n        \n\n\n            \n                Extends\n            \n            \n                    TypeOrmCrudService\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                repo\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                clear\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(repo: CatRepository)\n                    \n                \n                        \n                            \n                                Defined in src/cats/cats.service.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        repo\n                                                  \n                                                        \n                                                                        CatRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            clear\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    clear()\n                \n            \n\n\n            \n                \n                    Defined in src/cats/cats.service.ts:19\n                \n            \n\n\n            \n                \n                    Deletes all of the Cat records form database\n\n\n                    \n                        Returns :     {}\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            repo\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         CatRepository\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @InjectRepository(CatRepository)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/cats/cats.service.ts:12\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common'\nimport { InjectRepository } from '@nestjs/typeorm'\nimport { TypeOrmCrudService } from '@nestjsx/crud-typeorm'\n\nimport { getManager } from 'typeorm'\n\nimport { Cat } from './datum/cat.entity'\nimport { CatRepository } from './datum/cat.repository'\n\n@Injectable()\nexport class CatsService extends TypeOrmCrudService {\n    constructor(@InjectRepository(CatRepository) public repo: CatRepository) {\n        super(repo)\n    }\n\n    /**\n     * Deletes all of the Cat records form database\n     */\n    async clear() {\n        return this.repo.clearAll()\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateCatDto.html":{"url":"classes/CreateCatDto.html","title":"class - CreateCatDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateCatDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/cats/datum/cat.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                age\n                            \n                            \n                                    Readonly\n                                breed\n                            \n                            \n                                    Readonly\n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            age\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'The age of the Cat', example: 1})@IsInt()@IsPositive()@IsNotEmpty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/cats/datum/cat.dto.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            breed\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'The breed of the Cat', example: 'Maine Coon'})@IsString()@IsNotEmpty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/cats/datum/cat.dto.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'The name of the Cat', example: 'Kitty'})@IsString()@IsNotEmpty()@MinLength(2)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/cats/datum/cat.dto.ts:19\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiHideProperty, ApiProperty } from '@nestjs/swagger'\n\nimport { Exclude } from 'class-transformer'\nimport {\n    IsInt,\n    IsString,\n    MinLength,\n    IsNotEmpty,\n    IsPositive,\n    IsOptional,\n} from 'class-validator'\n\nexport class CreateCatDto {\n    @ApiProperty({ description: 'The name of the Cat', example: 'Kitty' })\n    @IsString()\n    @IsNotEmpty()\n    @MinLength(2)\n    readonly name: string\n\n    @ApiProperty({ description: 'The age of the Cat', example: 1 })\n    @IsInt()\n    @IsPositive()\n    @IsNotEmpty()\n    readonly age: number\n\n    @ApiProperty({ description: 'The breed of the Cat', example: 'Maine Coon' })\n    @IsString()\n    @IsNotEmpty()\n    readonly breed: string\n}\n\nexport class UpdateCatDto {\n    @ApiProperty({ description: 'The name of the Cat', example: 'Kitty' })\n    @IsString()\n    @IsNotEmpty()\n    @MinLength(2)\n    @IsOptional()\n    readonly name?: string\n\n    @ApiProperty({ description: 'The age of the Cat', example: 1 })\n    @IsInt()\n    @IsPositive()\n    @IsNotEmpty()\n    @IsOptional()\n    readonly age?: number\n\n    @ApiProperty({ description: 'The breed of the Cat', example: 'Maine Coon' })\n    @IsString()\n    @IsNotEmpty()\n    @IsOptional()\n    readonly breed?: string\n}\n\nexport class GetCatResponseDto {\n    @ApiProperty({ type: 'number' })\n    id: string\n\n    @ApiProperty({ description: 'The name of the Cat', example: 'Kitty' })\n    name: string\n\n    @ApiProperty({ description: 'The age of the Cat', example: 1 })\n    age: number\n\n    @ApiProperty({ description: 'The breed of the Cat', example: 'Maine Coon' })\n    breed: string\n\n    @ApiHideProperty()\n    @Exclude()\n    createdAt: any\n\n    @ApiHideProperty()\n    @Exclude()\n    updatedAt: any\n\n    @ApiHideProperty()\n    @Exclude()\n    deletedAt: any\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUserDto.html":{"url":"classes/CreateUserDto.html","title":"class - CreateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/datum/user.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'The name of the User', example: 'Name'})@IsString()@IsNotEmpty()@MinLength(2)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/datum/user.dto.ts:19\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiHideProperty, ApiProperty } from '@nestjs/swagger'\n\nimport { Exclude } from 'class-transformer'\nimport {\n    IsInt,\n    IsString,\n    MinLength,\n    IsNotEmpty,\n    IsPositive,\n    IsOptional,\n} from 'class-validator'\n\nexport class CreateUserDto {\n    @ApiProperty({ description: 'The name of the User', example: 'Name' })\n    @IsString()\n    @IsNotEmpty()\n    @MinLength(2)\n    readonly name: string\n}\n\nexport class UpdateUserDto {\n    @ApiProperty({ description: 'The name of the User', example: 'Kitty' })\n    @IsString()\n    @IsNotEmpty()\n    @MinLength(2)\n    @IsOptional()\n    readonly name?: string\n}\n\nexport class GetUserResponseDto {\n    @ApiProperty({ type: 'number' })\n    id: string\n\n    @ApiProperty({ description: 'The name of the User', example: 'Name' })\n    name: string\n\n    @ApiHideProperty()\n    @Exclude()\n    createdAt: any\n\n    @ApiHideProperty()\n    @Exclude()\n    updatedAt: any\n\n    @ApiHideProperty()\n    @Exclude()\n    deletedAt: any\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CronModule.html":{"url":"modules/CronModule.html","title":"module - CronModule","body":"\n                   \n\n\n\n\n    Modules\n    CronModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_CronModule\n\n\n\ncluster_CronModule_providers\n\n\n\n\nCronService\n\nCronService\n\n\n\nCronModule\n\nCronModule\n\nCronModule -->\n\nCronService->CronModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/cron/cron.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            CronService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common'\n\nimport { CronService } from 'src/cron/cron.service'\n\n@Module({\n    providers: [CronService],\n})\nexport class CronModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CronService.html":{"url":"injectables/CronService.html","title":"injectable - CronService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  CronService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/cron/cron.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                count\n                            \n                            \n                                    Private\n                                    Readonly\n                                logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                handleCron\n                            \n                            \n                                handleInterval\n                            \n                            \n                                handleTimeout\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            handleCron\n                        \n                        \n                    \n                \n            \n            \n                \nhandleCron()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Cron('60 * * * * *')\n                \n            \n\n            \n                \n                    Defined in src/cron/cron.service.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            handleInterval\n                        \n                        \n                    \n                \n            \n            \n                \nhandleInterval()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Interval(100000)\n                \n            \n\n            \n                \n                    Defined in src/cron/cron.service.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            handleTimeout\n                        \n                        \n                    \n                \n            \n            \n                \nhandleTimeout()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Timeout(50000)\n                \n            \n\n            \n                \n                    Defined in src/cron/cron.service.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            count\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in src/cron/cron.service.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            logger\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Logger(CronService.name)\n                        \n                    \n                        \n                            \n                                    Defined in src/cron/cron.service.ts:8\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable, Logger } from '@nestjs/common'\nimport { Cron, Interval, Timeout } from '@nestjs/schedule'\n\n@Injectable()\nexport class CronService {\n    public static count = 0\n\n    private readonly logger = new Logger(CronService.name)\n\n    @Cron('60 * * * * *')\n    handleCron() {\n        CronService.count += 1\n        this.logger.debug(\n            `Called when the second is 60, current count is ${CronService.count}`,\n        )\n    }\n\n    @Interval(100000)\n    handleInterval() {\n        this.logger.debug('Called every 100 seconds')\n    }\n\n    @Timeout(50000)\n    handleTimeout() {\n        this.logger.debug('Called once after 50 seconds')\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetCatResponseDto.html":{"url":"classes/GetCatResponseDto.html","title":"class - GetCatResponseDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetCatResponseDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/cats/datum/cat.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                age\n                            \n                            \n                                breed\n                            \n                            \n                                createdAt\n                            \n                            \n                                deletedAt\n                            \n                            \n                                id\n                            \n                            \n                                name\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            age\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'The age of the Cat', example: 1})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/cats/datum/cat.dto.ts:63\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            breed\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'The breed of the Cat', example: 'Maine Coon'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/cats/datum/cat.dto.ts:66\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiHideProperty()@Exclude()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/cats/datum/cat.dto.ts:70\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            deletedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiHideProperty()@Exclude()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/cats/datum/cat.dto.ts:78\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({type: 'number'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/cats/datum/cat.dto.ts:57\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'The name of the Cat', example: 'Kitty'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/cats/datum/cat.dto.ts:60\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiHideProperty()@Exclude()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/cats/datum/cat.dto.ts:74\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiHideProperty, ApiProperty } from '@nestjs/swagger'\n\nimport { Exclude } from 'class-transformer'\nimport {\n    IsInt,\n    IsString,\n    MinLength,\n    IsNotEmpty,\n    IsPositive,\n    IsOptional,\n} from 'class-validator'\n\nexport class CreateCatDto {\n    @ApiProperty({ description: 'The name of the Cat', example: 'Kitty' })\n    @IsString()\n    @IsNotEmpty()\n    @MinLength(2)\n    readonly name: string\n\n    @ApiProperty({ description: 'The age of the Cat', example: 1 })\n    @IsInt()\n    @IsPositive()\n    @IsNotEmpty()\n    readonly age: number\n\n    @ApiProperty({ description: 'The breed of the Cat', example: 'Maine Coon' })\n    @IsString()\n    @IsNotEmpty()\n    readonly breed: string\n}\n\nexport class UpdateCatDto {\n    @ApiProperty({ description: 'The name of the Cat', example: 'Kitty' })\n    @IsString()\n    @IsNotEmpty()\n    @MinLength(2)\n    @IsOptional()\n    readonly name?: string\n\n    @ApiProperty({ description: 'The age of the Cat', example: 1 })\n    @IsInt()\n    @IsPositive()\n    @IsNotEmpty()\n    @IsOptional()\n    readonly age?: number\n\n    @ApiProperty({ description: 'The breed of the Cat', example: 'Maine Coon' })\n    @IsString()\n    @IsNotEmpty()\n    @IsOptional()\n    readonly breed?: string\n}\n\nexport class GetCatResponseDto {\n    @ApiProperty({ type: 'number' })\n    id: string\n\n    @ApiProperty({ description: 'The name of the Cat', example: 'Kitty' })\n    name: string\n\n    @ApiProperty({ description: 'The age of the Cat', example: 1 })\n    age: number\n\n    @ApiProperty({ description: 'The breed of the Cat', example: 'Maine Coon' })\n    breed: string\n\n    @ApiHideProperty()\n    @Exclude()\n    createdAt: any\n\n    @ApiHideProperty()\n    @Exclude()\n    updatedAt: any\n\n    @ApiHideProperty()\n    @Exclude()\n    deletedAt: any\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetUserResponseDto.html":{"url":"classes/GetUserResponseDto.html","title":"class - GetUserResponseDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetUserResponseDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/datum/user.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                createdAt\n                            \n                            \n                                deletedAt\n                            \n                            \n                                id\n                            \n                            \n                                name\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiHideProperty()@Exclude()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/datum/user.dto.ts:40\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            deletedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiHideProperty()@Exclude()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/datum/user.dto.ts:48\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({type: 'number'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/datum/user.dto.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'The name of the User', example: 'Name'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/datum/user.dto.ts:36\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiHideProperty()@Exclude()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/datum/user.dto.ts:44\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiHideProperty, ApiProperty } from '@nestjs/swagger'\n\nimport { Exclude } from 'class-transformer'\nimport {\n    IsInt,\n    IsString,\n    MinLength,\n    IsNotEmpty,\n    IsPositive,\n    IsOptional,\n} from 'class-validator'\n\nexport class CreateUserDto {\n    @ApiProperty({ description: 'The name of the User', example: 'Name' })\n    @IsString()\n    @IsNotEmpty()\n    @MinLength(2)\n    readonly name: string\n}\n\nexport class UpdateUserDto {\n    @ApiProperty({ description: 'The name of the User', example: 'Kitty' })\n    @IsString()\n    @IsNotEmpty()\n    @MinLength(2)\n    @IsOptional()\n    readonly name?: string\n}\n\nexport class GetUserResponseDto {\n    @ApiProperty({ type: 'number' })\n    id: string\n\n    @ApiProperty({ description: 'The name of the User', example: 'Name' })\n    name: string\n\n    @ApiHideProperty()\n    @Exclude()\n    createdAt: any\n\n    @ApiHideProperty()\n    @Exclude()\n    updatedAt: any\n\n    @ApiHideProperty()\n    @Exclude()\n    deletedAt: any\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/HealthController.html":{"url":"controllers/HealthController.html","title":"controller - HealthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  HealthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/health/health.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                health\n            \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                check\n                            \n                            \n                                onApplicationShutdown\n                            \n                            \n                                onModuleInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            check\n                        \n                        \n                    \n                \n            \n            \n                \ncheck()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@HealthCheck()\n                \n            \n\n            \n                \n                    Defined in src/health/health.controller.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onApplicationShutdown\n                        \n                        \n                    \n                \n            \n            \n                \nonApplicationShutdown(signal?: string)\n                \n            \n\n\n            \n                \n                    Defined in src/health/health.controller.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    signal\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onModuleInit\n                        \n                        \n                    \n                \n            \n            \n                \nonModuleInit()\n                \n            \n\n\n            \n                \n                    Defined in src/health/health.controller.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n    Controller,\n    Get,\n    OnApplicationShutdown,\n    OnModuleInit,\n} from '@nestjs/common'\nimport { ConfigService } from '@nestjs/config'\nimport { ApiTags } from '@nestjs/swagger'\nimport {\n    DNSHealthIndicator,\n    HealthCheck,\n    HealthCheckService,\n} from '@nestjs/terminus'\n\n// eslint-disable-next-line no-use-before-define\n@ApiTags(HealthController.name)\n@Controller('health')\nexport class HealthController implements OnModuleInit, OnApplicationShutdown {\n    constructor(\n        private health: HealthCheckService,\n        private dns: DNSHealthIndicator,\n        private config: ConfigService,\n    ) {}\n\n    @Get()\n    @HealthCheck()\n    check() {\n        return this.health.check([\n            () => this.dns.pingCheck('nestjs-docs', 'https://docs.nestjs.com'),\n        ])\n    }\n\n    /*\n     * When the application receives a termination signal it will call any registered\n     * onModuleDestroy(), beforeApplicationShutdown(), then onApplicationShutdown() methods\n     * (in the sequence described above) with the corresponding signal as the first parameter.\n     * If a registered function awaits an asynchronous call (returns a promise), Nest will not\n     * continue in the sequence until the promise is resolved or rejected.\n     */\n\n    onModuleInit(): void {\n        console.log(`ModuleInit - HealthController has been initialized.`, {\n            config: this.config.get('NODE_ENV'),\n        })\n    }\n\n    onApplicationShutdown(signal?: string): void {\n        console.log(\n            `ApplicationShutdown - HealthController has been shutdown with ${signal} signal`,\n        )\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateCatDto.html":{"url":"classes/UpdateCatDto.html","title":"class - UpdateCatDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateCatDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/cats/datum/cat.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                    Optional\n                                age\n                            \n                            \n                                    Readonly\n                                    Optional\n                                breed\n                            \n                            \n                                    Readonly\n                                    Optional\n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                                Optional\n                            age\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'The age of the Cat', example: 1})@IsInt()@IsPositive()@IsNotEmpty()@IsOptional()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/cats/datum/cat.dto.ts:46\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                                Optional\n                            breed\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'The breed of the Cat', example: 'Maine Coon'})@IsString()@IsNotEmpty()@IsOptional()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/cats/datum/cat.dto.ts:52\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                                Optional\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'The name of the Cat', example: 'Kitty'})@IsString()@IsNotEmpty()@MinLength(2)@IsOptional()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/cats/datum/cat.dto.ts:39\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiHideProperty, ApiProperty } from '@nestjs/swagger'\n\nimport { Exclude } from 'class-transformer'\nimport {\n    IsInt,\n    IsString,\n    MinLength,\n    IsNotEmpty,\n    IsPositive,\n    IsOptional,\n} from 'class-validator'\n\nexport class CreateCatDto {\n    @ApiProperty({ description: 'The name of the Cat', example: 'Kitty' })\n    @IsString()\n    @IsNotEmpty()\n    @MinLength(2)\n    readonly name: string\n\n    @ApiProperty({ description: 'The age of the Cat', example: 1 })\n    @IsInt()\n    @IsPositive()\n    @IsNotEmpty()\n    readonly age: number\n\n    @ApiProperty({ description: 'The breed of the Cat', example: 'Maine Coon' })\n    @IsString()\n    @IsNotEmpty()\n    readonly breed: string\n}\n\nexport class UpdateCatDto {\n    @ApiProperty({ description: 'The name of the Cat', example: 'Kitty' })\n    @IsString()\n    @IsNotEmpty()\n    @MinLength(2)\n    @IsOptional()\n    readonly name?: string\n\n    @ApiProperty({ description: 'The age of the Cat', example: 1 })\n    @IsInt()\n    @IsPositive()\n    @IsNotEmpty()\n    @IsOptional()\n    readonly age?: number\n\n    @ApiProperty({ description: 'The breed of the Cat', example: 'Maine Coon' })\n    @IsString()\n    @IsNotEmpty()\n    @IsOptional()\n    readonly breed?: string\n}\n\nexport class GetCatResponseDto {\n    @ApiProperty({ type: 'number' })\n    id: string\n\n    @ApiProperty({ description: 'The name of the Cat', example: 'Kitty' })\n    name: string\n\n    @ApiProperty({ description: 'The age of the Cat', example: 1 })\n    age: number\n\n    @ApiProperty({ description: 'The breed of the Cat', example: 'Maine Coon' })\n    breed: string\n\n    @ApiHideProperty()\n    @Exclude()\n    createdAt: any\n\n    @ApiHideProperty()\n    @Exclude()\n    updatedAt: any\n\n    @ApiHideProperty()\n    @Exclude()\n    deletedAt: any\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateUserDto.html":{"url":"classes/UpdateUserDto.html","title":"class - UpdateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/datum/user.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                    Optional\n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                                Optional\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'The name of the User', example: 'Kitty'})@IsString()@IsNotEmpty()@MinLength(2)@IsOptional()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/datum/user.dto.ts:28\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiHideProperty, ApiProperty } from '@nestjs/swagger'\n\nimport { Exclude } from 'class-transformer'\nimport {\n    IsInt,\n    IsString,\n    MinLength,\n    IsNotEmpty,\n    IsPositive,\n    IsOptional,\n} from 'class-validator'\n\nexport class CreateUserDto {\n    @ApiProperty({ description: 'The name of the User', example: 'Name' })\n    @IsString()\n    @IsNotEmpty()\n    @MinLength(2)\n    readonly name: string\n}\n\nexport class UpdateUserDto {\n    @ApiProperty({ description: 'The name of the User', example: 'Kitty' })\n    @IsString()\n    @IsNotEmpty()\n    @MinLength(2)\n    @IsOptional()\n    readonly name?: string\n}\n\nexport class GetUserResponseDto {\n    @ApiProperty({ type: 'number' })\n    id: string\n\n    @ApiProperty({ description: 'The name of the User', example: 'Name' })\n    name: string\n\n    @ApiHideProperty()\n    @Exclude()\n    createdAt: any\n\n    @ApiHideProperty()\n    @Exclude()\n    updatedAt: any\n\n    @ApiHideProperty()\n    @Exclude()\n    deletedAt: any\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/User.html":{"url":"classes/User.html","title":"class - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/datum/user.entity.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                cats\n                            \n                            \n                                createdAt\n                            \n                            \n                                deletedAt\n                            \n                            \n                                id\n                            \n                            \n                                name\n                            \n                            \n                                    Static\n                                    Readonly\n                                NAME_LENGTH\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            cats\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Cat[]\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @OneToMany(undefined, undefined)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/datum/user.entity.ts:41\n                            \n                        \n\n                \n                    \n                        Relations\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @CreateDateColumn()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/datum/user.entity.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            deletedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @DeleteDateColumn()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/datum/user.entity.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'User unique ID', example: '36635263'})@PrimaryGeneratedColumn()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/datum/user.entity.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'The name of the User', example: 'Name'})@Column({name: 'user_name', length: undefined})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/datum/user.entity.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                                Readonly\n                            NAME_LENGTH\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 36\n                        \n                    \n                        \n                            \n                                    Defined in src/users/datum/user.entity.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @UpdateDateColumn()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/datum/user.entity.ts:30\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger'\n\nimport {\n    Column,\n    CreateDateColumn,\n    Entity,\n    PrimaryGeneratedColumn,\n    UpdateDateColumn,\n    DeleteDateColumn, OneToMany\n} from \"typeorm\";\nimport { Type } from \"class-transformer\";\nimport { Cat } from \"../../cats/datum/cat.entity\";\n\n@Entity({ name: 'users' })\nexport class User {\n    public static readonly NAME_LENGTH = 36\n\n    @ApiProperty({ description: 'User unique ID', example: '36635263' })\n    @PrimaryGeneratedColumn()\n    id: number\n\n    @ApiProperty({ description: 'The name of the User', example: 'Name' })\n    @Column({ name: 'user_name', length: User.NAME_LENGTH })\n    name: string\n\n    @CreateDateColumn()\n    createdAt: any\n\n    @UpdateDateColumn()\n    updatedAt: any\n\n    @DeleteDateColumn()\n    deletedAt: any\n\n    /**\n     * Relations\n     */\n\n    @OneToMany((type) => Cat, (c) => c.user)\n    // @Type((t) => Cat)\n    cats: Cat[]\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserRepository.html":{"url":"classes/UserRepository.html","title":"class - UserRepository","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserRepository\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/datum/user.repository.ts\n        \n\n\n            \n                Extends\n            \n            \n                    Repository\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                clearAll\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            clearAll\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    clearAll()\n                \n            \n\n\n            \n                \n                    Defined in src/users/datum/user.repository.ts:10\n                \n            \n\n\n            \n                \n                    Deletes all of the User records form database\n\n\n                    \n                        Returns :     {}\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { EntityRepository, getManager, Repository } from 'typeorm'\n\nimport { User } from './user.entity'\n\n@EntityRepository(User)\nexport class UserRepository extends Repository {\n    /**\n     * Deletes all of the User records form database\n     */\n    async clearAll() {\n        let cleared = {}\n        cleared = await getManager().query('DELETE FROM users') // eslint-disable-line @typescript-eslint/no-unsafe-assignment\n        return cleared\n    }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UsersController.html":{"url":"controllers/UsersController.html","title":"controller - UsersController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UsersController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/users.controller.ts\n        \n\n\n\n\n\n\n\n    \n\n\n    \n        /* eslint-disable no-use-before-define */\nimport { Controller, Get, Post, Body, Put, Param, Delete } from '@nestjs/common'\nimport { ApiOperation, ApiTags } from '@nestjs/swagger'\nimport { Crud, CrudController } from '@nestjsx/crud'\n\nimport { CreateUserDto, GetUserResponseDto, UpdateUserDto } from './datum/user.dto'\nimport { User } from './datum/user.entity'\nimport { UsersService } from './users.service'\n\n@Controller(UsersController.path)\n@ApiTags(UsersController.name)\n@Crud({\n    model: {\n        type: User,\n    },\n    dto: {\n        create: CreateUserDto,\n        replace: CreateUserDto,\n        update: UpdateUserDto,\n    },\n    serialize: {\n        create: GetUserResponseDto,\n        delete: GetUserResponseDto,\n        get: GetUserResponseDto,\n        update: GetUserResponseDto,\n    },\n    query: {\n        alwaysPaginate: true,\n        join: {\n            cats: {\n                eager: true,\n            },\n        },\n    },\n})\nexport class UsersController implements CrudController {\n    static path = 'users'\n\n    constructor(public service: UsersService) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UsersModule.html":{"url":"modules/UsersModule.html","title":"module - UsersModule","body":"\n                   \n\n\n\n\n    Modules\n    UsersModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_exports\n\n\n\ncluster_UsersModule_providers\n\n\n\n\nUsersService \n\nUsersService \n\n\n\nUsersModule\n\nUsersModule\n\nUsersService  -->\n\nUsersModule->UsersService \n\n\n\n\n\nUsersService\n\nUsersService\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/users/users.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            UsersService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            UsersController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            UsersService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common'\nimport { TypeOrmModule } from '@nestjs/typeorm'\n\nimport { Cat } from '../cats/datum/cat.entity'\nimport { CatRepository } from '../cats/datum/cat.repository'\nimport { UserRepository } from './datum/user.repository'\nimport { UsersController } from './users.controller'\nimport { UsersService } from './users.service'\n\n@Module({\n    controllers: [UsersController],\n    exports: [UsersService],\n    imports: [TypeOrmModule.forFeature([UserRepository, CatRepository, Cat])],\n    providers: [UsersService],\n})\nexport class UsersModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UsersService.html":{"url":"injectables/UsersService.html","title":"injectable - UsersService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  UsersService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/users.service.ts\n        \n\n\n            \n                Extends\n            \n            \n                    TypeOrmCrudService\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                repo\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(repo: UserRepository)\n                    \n                \n                        \n                            \n                                Defined in src/users/users.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        repo\n                                                  \n                                                        \n                                                                        UserRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            repo\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         UserRepository\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @InjectRepository(UserRepository)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/users.service.ts:11\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common'\nimport { InjectRepository } from '@nestjs/typeorm'\nimport { TypeOrmCrudService } from '@nestjsx/crud-typeorm'\n\nimport { CreateUserDto, UpdateUserDto } from './datum/user.dto'\nimport { User } from './datum/user.entity'\nimport { UserRepository } from './datum/user.repository'\n\n@Injectable()\nexport class UsersService extends TypeOrmCrudService {\n    constructor(@InjectRepository(UserRepository) public repo: UserRepository) {\n        super(repo)\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app.controller.ts\n            \n            controller\n            AppController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app.module.ts\n            \n            variable\n            ConfigModuleOptions\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app.module.ts\n            \n            variable\n            TypeOrmModuleOptions\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app.service.ts\n            \n            injectable\n            AppService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/cats/cats.controller.ts\n            \n            controller\n            CatsController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/cats/cats.service.ts\n            \n            injectable\n            CatsService\n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                src/cats/datum/cat.dto.ts\n            \n            class\n            CreateCatDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/cats/datum/cat.dto.ts\n            \n            class\n            GetCatResponseDto\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/cats/datum/cat.dto.ts\n            \n            class\n            UpdateCatDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/cats/datum/cat.entity.ts\n            \n            class\n            Cat\n            \n                10 %\n                (1/10)\n            \n        \n        \n            \n                \n                src/cats/datum/cat.repository.ts\n            \n            class\n            CatRepository\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                src/cron/cron.service.ts\n            \n            injectable\n            CronService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/health/health.controller.ts\n            \n            controller\n            HealthController\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            createSwagger\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            setupApp\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/users/datum/user.dto.ts\n            \n            class\n            CreateUserDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/users/datum/user.dto.ts\n            \n            class\n            GetUserResponseDto\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/users/datum/user.dto.ts\n            \n            class\n            UpdateUserDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/users/datum/user.entity.ts\n            \n            class\n            User\n            \n                12 %\n                (1/8)\n            \n        \n        \n            \n                \n                src/users/datum/user.repository.ts\n            \n            class\n            UserRepository\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                src/users/users.controller.ts\n            \n            controller\n            UsersController\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/users/users.service.ts\n            \n            injectable\n            UsersService\n            \n                0 %\n                (0/3)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @hapi/joi : ^17.1.1\n        \n            @nestjs/common : ^7.5.1\n        \n            @nestjs/config : ^0.6.1\n        \n            @nestjs/core : ^7.5.1\n        \n            @nestjs/mapped-types : ^0.1.1\n        \n            @nestjs/passport : ^7.1.3\n        \n            @nestjs/platform-express : ^7.5.1\n        \n            @nestjs/schedule : ^0.4.1\n        \n            @nestjs/swagger : ^4.7.5\n        \n            @nestjs/terminus : ^7.0.1\n        \n            @nestjs/typeorm : ^7.1.5\n        \n            @nestjsx/crud : ^4.6.2\n        \n            @nestjsx/crud-request : ^4.6.2\n        \n            @nestjsx/crud-typeorm : ^4.6.2\n        \n            class-transformer : ^0.3.1\n        \n            class-validator : ^0.12.2\n        \n            express-rate-limit : ^5.2.3\n        \n            helmet : ^4.2.0\n        \n            passport : ^0.4.1\n        \n            passport-local : ^1.0.0\n        \n            reflect-metadata : ^0.1.13\n        \n            rimraf : ^3.0.2\n        \n            rxjs : ^6.6.3\n        \n            sqlite3 : ^5.0.0\n        \n            swagger-ui-express : ^4.1.5\n        \n            typeorm : ^0.2.29\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                        \n                            createSwagger   (src/.../main.ts)\n                        \n                        \n                            setupApp   (src/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            bootstrap\n                        \n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createSwagger\n                        \n                        \n                    \n                \n            \n            \n                \ncreateSwagger(app)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    app\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setupApp\n                        \n                        \n                    \n                \n            \n            \n                \nsetupApp(app, API_DEFAULT_PORT)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    app\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    API_DEFAULT_PORT\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n  A progressive Node.js framework for building efficient and scalable server-side applications.\n    \n\n\n\n\n\n\n\n\n  \n    \n  \n\n  \n\nDescription\nNest framework TypeScript starter repository.\nInstallation\n$ npm installRunning the app\n# development\n$ npm run start\n\n# watch mode\n$ npm run start:dev\n\n# production mode\n$ npm run start:prodTest\n# unit tests\n$ npm run test\n\n# e2e tests\n$ npm run test:e2e\n\n# test coverage\n$ npm run test:covSupport\nNest is an MIT-licensed open source project. It can grow thanks to the sponsors and support by the amazing backers. If you'd like to join them, please read more here.\nStay in touch\n\nAuthor - Kamil Myśliwiec\nWebsite - https://nestjs.com\nTwitter - @nestframework\n\nLicense\nNest is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CatsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CronModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UsersModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_CatsModule\n\n\n\ncluster_CatsModule_exports\n\n\n\ncluster_CatsModule_providers\n\n\n\ncluster_CronModule\n\n\n\ncluster_CronModule_providers\n\n\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_exports\n\n\n\ncluster_UsersModule_providers\n\n\n\n\nCatsModule\n\nCatsModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nCatsModule->AppModule\n\n\n\n\n\nCatsService \n\nCatsService \n\nCatsService  -->\n\nCatsModule->CatsService \n\n\n\n\n\nCronModule\n\nCronModule\n\nAppModule -->\n\nCronModule->AppModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\nUsersService \n\nUsersService \n\nUsersService  -->\n\nUsersModule->UsersService \n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nCatsService\n\nCatsService\n\nCatsModule -->\n\nCatsService->CatsModule\n\n\n\n\n\nCronService\n\nCronService\n\nCronModule -->\n\nCronService->CronModule\n\n\n\n\n\nUsersService\n\nUsersService\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        4 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    4 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    4 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    10 Classes\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ConfigModuleOptions   (src/.../app.module.ts)\n                        \n                        \n                            TypeOrmModuleOptions   (src/.../app.module.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app.module.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            ConfigModuleOptions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    isGlobal: true,\n    validationOptions: {\n        allowUnknown: true,\n        abortEarly: true,\n    },\n    validationSchema: Joi.object({\n        PORT: Joi.number().default(3000),\n        NODE_ENV: Joi.string()\n            .required()\n            .valid('development', 'production', 'test', 'provision')\n            .default('development'),\n    }),\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            TypeOrmModuleOptions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    entities: [\n        Cat,\n        User,\n        // `${__dirname}/**/*.entity.{ts,js}`,\n    ],\n    type: 'sqlite' as const,\n    database: 'database.sqlite',\n    synchronize: true,\n    logging: true,\n}\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
