var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/interfaces/APIResponse.html",[0,0.062,1,1.237]],["body/interfaces/APIResponse.html",[0,0.124,1,2.278,2,0.751,3,0.114,4,0.089,5,0.101,6,1.077,7,0.167,8,0.715,9,1.399,10,1.493,11,0.954,12,1.963,13,1.851,14,1.292,15,1.547,16,1.92,17,1.292,18,1.084,19,0.283,20,0.014,21,1.138,22,2.067,23,0.868,24,1.547,25,0.127,26,0.299,27,0.274,28,0.008,29,1.497,30,1.497,31,1.497,32,1.497,33,1.497,34,1.497,35,1.497,36,1.292,37,2.442,38,1.161,39,1.471,40,1.161,41,1.161,42,1.161,43,1.161,44,1.161,45,1.161,46,1.077,47,1.161,48,1.118,49,1.001,50,1.631,51,1.161,52,0.807,53,1.673,54,1.161,55,1.82,56,1.161,57,1.161,58,1.161,59,1.161,60,1.161,61,1.161,62,1.161,63,1.161,64,1.161,65,1.161,66,1.161,67,1.961,68,1.673,69,1.161,70,1.161,71,1.161,72,1.692,73,1.161,74,1.161,75,1.673,76,1.161,77,1.161,78,1.161,79,1.161,80,1.161,81,1.992,82,1.161,83,1.552,84,1.552,85,1.161,86,1.161,87,1.161,88,1.161,89,1.161,90,1.161,91,1.161,92,1.161,93,1.161,94,1.673,95,1.161,96,1.161,97,1.161,98,1.077,99,1.161,100,1.161,101,1.992,102,1.161,103,1.161,104,1.161,105,1.161,106,1.161,107,1.161,108,1.161,109,1.161,110,1.038,111,1.161,112,1.161,113,1.161,114,1.161,115,0.299,116,1.161,117,1.161,118,1.161,119,1.161,120,1.161,121,1.077,122,1.82,123,1.161,124,1.161,125,1.161,126,1.552,127,1.552,128,1.161,129,1.161,130,1.161,131,0.725,132,0.008,133,0.006]],["title/classes/ApiException.html",[134,0.199,135,3.127]],["body/classes/ApiException.html",[3,0.138,4,0.107,5,0.122,7,0.202,8,0.816,9,1.57,12,2.262,13,2.172,16,2.305,18,0.92,19,0.303,20,0.014,23,0.859,24,1.011,25,0.209,26,0.362,27,0.188,28,0.007,115,0.362,132,0.009,133,0.007,134,0.202,135,5.828,136,1.351,137,3.274,138,5.586,139,3.174,140,4.656,141,3.272,142,7.432,143,4.193,144,4.915,145,3.076,146,4.048,147,5.52,148,1.66,149,5.512,150,1.011,151,3.33,152,5.416,153,4.048,154,4.048,155,4.048,156,4.048,157,4.048,158,4.048,159,4.048,160,5.512,161,5.512,162,5.512,163,5.512,164,5.512,165,5.512,166,1.403,167,4.048,168,4.048,169,4.048,170,4.048,171,4.048,172,4.048,173,1.64,174,2.708,175,4.048,176,4.048,177,4.048,178,1.575,179,2.915,180,0.908,181,2.851,182,3.521,183,4.048,184,2.536,185,4.048,186,3.521,187,4.048,188,4.048]],["title/controllers/AppController.html",[189,2.113,190,2.872]],["body/controllers/AppController.html",[3,0.2,4,0.156,5,0.178,7,0.293,20,0.014,23,0.612,25,0.265,26,0.526,27,0.2,28,0.01,132,0.012,133,0.01,134,0.293,141,2.587,148,1.272,151,2.587,166,2.036,180,1.319,189,3.113,190,5.036,191,3.28,192,5.112,193,1.811,194,7.728,195,5.876,196,1.468,197,1.468,198,1.468,199,4.232,200,4.232,201,4.232,202,4.232,203,5.876,204,5.876,205,1.89,206,5.876,207,5.876]],["title/interfaces/AppLaunchAction.html",[0,0.062,46,1.283]],["body/interfaces/AppLaunchAction.html",[0,0.125,1,2.262,2,0.785,3,0.119,4,0.093,5,0.106,6,1.125,7,0.174,8,0.737,9,0.965,10,0.843,11,0.539,12,1.489,13,1.046,14,0.73,15,0.874,16,1.084,17,0.73,18,1.079,19,0.263,20,0.014,21,0.704,22,1.662,23,0.87,24,1.244,25,0.132,26,0.313,27,0.275,28,0.008,29,1.544,30,1.544,31,1.544,32,1.544,33,1.544,34,1.544,35,1.544,36,1.318,37,2.473,38,1.212,39,1.49,40,1.212,41,1.212,42,1.212,43,1.212,44,1.212,45,1.212,46,1.601,47,2.189,48,2.108,49,1.888,50,1.659,51,2.189,52,0.843,53,1.725,54,1.212,55,1.865,56,1.212,57,1.212,58,1.212,59,1.212,60,1.212,61,1.212,62,1.212,63,1.212,64,1.212,65,1.212,66,1.212,67,2.009,68,1.725,69,1.212,70,1.212,71,1.212,72,1.733,73,1.212,74,1.212,75,1.725,76,1.212,77,1.212,78,1.212,79,1.212,80,1.212,81,2.032,82,1.212,83,1.601,84,1.601,85,1.212,86,1.212,87,1.212,88,1.212,89,1.212,90,1.212,91,1.212,92,1.212,93,1.212,94,1.725,95,1.212,96,1.212,97,1.212,98,1.125,99,1.212,100,1.212,101,2.032,102,1.212,103,1.212,104,1.212,105,1.212,106,1.212,107,1.212,108,1.212,109,1.212,110,1.084,111,1.212,112,1.212,113,1.212,114,1.212,115,0.313,116,1.212,117,1.212,118,1.212,119,1.212,120,1.212,121,1.125,122,1.865,123,1.212,124,1.212,125,1.212,126,1.601,127,1.601,128,1.212,129,1.212,130,1.212,131,0.757,132,0.008,133,0.006]],["title/modules/AppModule.html",[208,1.919,209,2.872]],["body/modules/AppModule.html",[3,0.142,4,0.11,5,0.126,9,0.807,19,0.213,20,0.014,23,0.662,25,0.298,26,0.372,27,0.142,28,0.007,115,0.372,132,0.009,133,0.007,134,0.207,148,1.215,150,1.04,178,1.619,190,4.577,191,3.134,193,1.454,196,1.588,197,1.403,198,1.04,208,3.274,209,5.775,210,2.322,211,2.454,212,2.783,213,2.098,214,2.454,215,3.134,216,2.606,217,3.619,218,3.619,219,4.899,220,4.899,221,4.899,222,4.899,223,3.756,224,2.783,225,2.783,226,3.262,227,4.577,228,5.615,229,5.92,230,4.884,231,4.16,232,6.182,233,2.996,234,3.605,235,6.182,236,4.16,237,4.16,238,3.262,239,4.16,240,3.262,241,5.615,242,3.262,243,4.16,244,3.619,245,4.16,246,4.16,247,4.16,248,4.16,249,4.16,250,4.16,251,1.117,252,3.262,253,3.619,254,2.473,255,3.619,256,3.619,257,3.619,258,3.619,259,3.619,260,3.619,261,3.619,262,3.619,263,3.619,264,2.098,265,3.619,266,3.262,267,3.262,268,3.619,269,3.619,270,1.831,271,5.92,272,3.619,273,3.619,274,2.454,275,4.16,276,4.16,277,4.16,278,4.16,279,3.619,280,1.077,281,4.16,282,4.16,283,4.16,284,3.518,285,5.615,286,4.16,287,4.16,288,5.615,289,4.16,290,4.16,291,4.16,292,2.996,293,4.16,294,4.16,295,4.16,296,2.975,297,3.619,298,4.16,299,4.16,300,4.16,301,4.16,302,4.16,303,3.619,304,4.16,305,3.619,306,3.619]],["title/classes/BaseModel.html",[134,0.199,307,1.615]],["body/classes/BaseModel.html",[0,0.066,3,0.145,4,0.113,5,0.129,7,0.212,8,0.845,9,1.248,11,0.657,18,0.841,19,0.285,20,0.014,25,0.271,27,0.194,28,0.01,36,1.191,110,1.995,115,0.381,131,0.922,132,0.01,133,0.007,134,0.212,136,1.422,140,2.669,148,1.656,150,1.065,151,1.876,152,2.85,166,1.476,173,2.311,174,3.817,180,1.28,193,1.478,196,1.065,205,2.372,251,1.144,280,1.478,307,2.311,308,3.341,309,4.633,310,5.31,311,5.31,312,4.948,313,2.571,314,4.304,315,4.633,316,5.31,317,3.023,318,4.474,319,4.26,320,4.26,321,3.095,322,2.407,323,4.109,324,3.366,325,4.26,326,2.407,327,4.26,328,4.227,329,4.26,330,4.26,331,4.26,332,4.109,333,4.948,334,3.306,335,1.769,336,4.26,337,3.341,338,3.706,339,3.706,340,1.422,341,4.963,342,6.232,343,2.229,344,4.963,345,3.068,346,4.963,347,3.341,348,3.068,349,3.706,350,2.669,351,2.669,352,1.905,353,3.706,354,3.706,355,2.378,356,3.706,357,3.706,358,3.706,359,3.706,360,3.796,361,3.706,362,3.706,363,3.706,364,4.963,365,4.963,366,3.706,367,3.706,368,3.706]],["title/interfaces/Comment.html",[0,0.062,122,1.283]],["body/interfaces/Comment.html",[0,0.125,1,2.259,2,0.78,3,0.118,4,0.092,5,0.105,6,1.118,7,0.173,8,0.734,10,0.838,11,0.536,12,1.482,13,1.04,14,0.726,15,0.869,16,1.078,17,0.726,18,1.081,19,0.27,20,0.014,21,0.7,22,1.655,23,0.871,24,1.239,25,0.132,26,0.311,27,0.275,28,0.008,29,1.537,30,1.537,31,1.537,32,1.537,33,1.537,34,1.537,35,1.537,36,1.315,37,2.469,38,1.205,39,1.487,40,1.205,41,1.205,42,1.205,43,1.205,44,1.205,45,1.205,46,1.118,47,1.205,48,1.161,49,1.04,50,1.64,51,1.205,52,0.838,53,1.718,54,1.205,55,1.859,56,1.205,57,1.205,58,1.205,59,1.205,60,1.205,61,1.205,62,1.205,63,1.205,64,1.205,65,1.205,66,1.205,67,2.002,68,1.718,69,1.205,70,1.205,71,1.205,72,1.728,73,1.205,74,1.205,75,1.718,76,1.205,77,1.205,78,1.205,79,1.205,80,1.205,81,2.026,82,1.205,83,1.595,84,1.595,85,1.205,86,1.205,87,1.205,88,1.205,89,1.205,90,1.205,91,1.205,92,1.205,93,1.205,94,2.308,95,1.205,96,1.205,97,1.205,98,1.118,99,1.205,100,1.205,101,2.026,102,1.205,103,1.205,104,1.205,105,1.205,106,1.205,107,1.205,108,1.205,109,1.205,110,1.078,111,1.205,112,1.205,113,1.205,114,1.205,115,0.311,116,1.205,117,1.205,118,1.205,119,1.205,120,1.205,121,1.118,122,2.292,123,2.183,124,2.183,125,2.183,126,1.595,127,1.595,128,1.205,129,1.205,130,1.205,131,0.752,132,0.008,133,0.006]],["title/interfaces/Comments.html",[0,0.062,126,1.283]],["body/interfaces/Comments.html",[0,0.125,1,2.278,2,0.806,3,0.122,4,0.095,5,0.109,6,1.156,7,0.179,8,0.751,10,0.866,11,0.554,12,1.517,13,1.074,14,0.75,15,0.898,16,1.114,17,0.75,18,1.078,19,0.223,20,0.014,21,0.723,22,1.694,23,0.869,24,1.268,25,0.136,26,0.321,27,0.276,28,0.009,29,1.574,30,1.574,31,1.574,32,1.574,33,1.574,34,1.574,35,1.574,36,1.334,37,2.493,38,1.245,39,1.501,40,1.245,41,1.245,42,1.245,43,1.245,44,1.245,45,1.245,46,1.156,47,1.245,48,1.199,49,1.074,50,1.648,51,1.245,52,0.866,53,1.759,54,1.245,55,1.893,56,1.245,57,1.245,58,1.245,59,1.245,60,1.245,61,1.245,62,1.245,63,1.245,64,1.245,65,1.245,66,1.245,67,2.039,68,1.759,69,1.245,70,1.245,71,1.245,72,1.759,73,1.245,74,1.245,75,1.759,76,1.245,77,1.245,78,1.245,79,1.245,80,1.245,81,2.056,82,1.245,83,1.632,84,1.632,85,1.245,86,1.245,87,1.245,88,1.245,89,1.245,90,1.245,91,1.245,92,1.245,93,1.245,94,1.759,95,1.245,96,1.245,97,1.245,98,1.156,99,1.245,100,1.245,101,2.056,102,1.245,103,1.245,104,1.245,105,1.245,106,1.245,107,1.245,108,1.245,109,1.245,110,1.114,111,1.245,112,1.245,113,1.245,114,1.245,115,0.321,116,1.245,117,1.245,118,1.245,119,1.245,120,1.245,121,1.156,122,2.169,123,1.245,124,1.245,125,1.245,126,2.251,127,1.632,128,1.245,129,1.245,130,1.245,131,0.778,132,0.009,133,0.006]],["title/classes/CreateTagsDto.html",[134,0.199,369,2.353]],["body/classes/CreateTagsDto.html",[0,0.078,3,0.171,4,0.133,5,0.151,7,0.25,8,1.031,19,0.286,20,0.014,23,0.786,25,0.286,27,0.237,28,0.008,115,0.7,131,1.373,132,0.011,133,0.008,134,0.364,136,1.674,148,1.085,151,2.207,166,1.738,205,2.041,264,2.528,270,2.207,280,1.802,307,2.57,313,1.876,326,2.604,335,1.555,340,1.674,343,1.738,369,3.743,370,3.354,371,4.582,372,4.361,373,5.014,374,3.541,375,2.798,376,2.656,377,2.116,378,3.199,379,3.199,380,3.541,381,3.541,382,2.412,383,3.884,384,2.412,385,2.528,386,2.528,387,3.141,388,2.798,389,2.937,390,2.798,391,2.798,392,2.798,393,2.798,394,2.306,395,2.798,396,2.798,397,2.798,398,2.798,399,2.798,400,2.798,401,3.354,402,2.798,403,2.798,404,2.798,405,2.958,406,3.61]],["title/classes/CreateUserDto.html",[134,0.199,407,2.353]],["body/classes/CreateUserDto.html",[0,0.055,3,0.12,4,0.094,5,0.107,7,0.176,8,0.863,19,0.298,20,0.014,23,0.852,25,0.254,27,0.198,28,0.006,49,2.081,50,1.398,52,0.852,72,2.141,115,0.521,131,1.085,132,0.008,133,0.006,134,0.316,136,1.18,148,1.506,151,3.064,166,1.225,197,1.586,198,1.586,205,1.875,251,1.346,254,1.375,264,1.782,270,1.556,280,1.51,307,2.031,313,1.322,324,4.224,326,2.678,335,1.096,340,1.18,343,1.225,350,2.214,352,1.18,372,3.074,374,2.799,375,1.972,376,1.872,377,1.491,378,3.51,379,3.379,380,3.885,381,3.885,382,1.7,383,3.254,384,1.7,386,1.782,388,1.972,389,2.46,390,1.972,391,1.972,392,1.972,393,2.799,394,1.625,395,1.972,396,1.972,397,1.972,398,1.972,399,1.972,400,1.972,402,3.74,403,3.541,404,1.972,407,2.959,408,2.364,409,3.975,410,5.268,411,5.268,412,5.268,413,3.534,414,3.534,415,5.015,416,3.534,417,3.534,418,3.534,419,3.534,420,3.534,421,3.534,422,3.534,423,2.214,424,3.612,425,3.142,426,4.569,427,2.214,428,1.782,429,3.612,430,2.545,431,2.545,432,2.959,433,2.545,434,2.545,435,2.545,436,2.545,437,2.545,438,2.545,439,2.545,440,2.545,441,2.545,442,3.612,443,2.545,444,3.612,445,2.545,446,2.545,447,1.782,448,2.545,449,2.364,450,2.545,451,2.545,452,2.545,453,2.545,454,2.545,455,2.545,456,2.364,457,2.545,458,2.545,459,1.765,460,1.83,461,1.674,462,1.876,463,3.612,464,3.612,465,2.545,466,3.355,467,3.355,468,2.545,469,2.545,470,3.355,471,2.545,472,2.545,473,2.545,474,2.085,475,2.545]],["title/modules/CronModule.html",[208,1.919,219,2.668]],["body/modules/CronModule.html",[3,0.202,4,0.157,5,0.18,20,0.014,25,0.267,26,0.532,27,0.202,28,0.01,132,0.012,133,0.01,134,0.296,208,3.61,210,3.319,211,3.508,212,3.978,213,2.998,214,3.508,215,4.188,216,3.725,219,5.372,223,4.712,224,3.978,225,3.978,476,5.172,477,5.172,478,5.372,479,5.946,480,5.946]],["title/injectables/CronService.html",[478,2.668,481,1.552]],["body/injectables/CronService.html",[3,0.151,4,0.118,5,0.134,7,0.221,8,0.869,9,0.862,10,1.685,18,0.859,19,0.249,20,0.014,25,0.222,26,0.397,27,0.151,28,0.007,115,0.397,132,0.01,133,0.007,134,0.221,148,1.672,150,1.11,151,2.892,173,2.376,180,1.316,181,1.8,193,1.519,196,1.746,205,2.113,234,3.48,240,3.484,254,1.729,321,3.361,322,2.614,432,4.122,478,3.925,481,2.283,482,2.621,483,3.865,484,7.265,485,5.867,486,5.867,487,6.319,488,4.674,489,4.377,490,6.078,491,5.867,492,6.987,493,6.319,494,5.867,495,6.569,496,6.987,497,6.569,498,5.867,499,6.987,500,6.569,501,6.569,502,5.867,503,4.443,504,6.569,505,5.867,506,4.443,507,4.443,508,4.443,509,4.443,510,4.443,511,3.666,512,4.443,513,5.867,514,4.443,515,5.867,516,4.443,517,5.867,518,4.443,519,4.443,520,5.867,521,4.443,522,4.443,523,3.865,524,3.865,525,3.484,526,4.443]],["title/classes/CrudConfigService.html",[134,0.199,527,2.353]],["body/classes/CrudConfigService.html",[3,0.079,4,0.061,5,0.07,7,0.116,8,0.542,9,0.45,10,0.559,11,0.358,14,0.484,15,0.58,17,0.484,18,0.842,19,0.267,20,0.014,21,0.467,23,0.582,24,0.58,25,0.212,26,0.207,27,0.19,28,0.004,39,1.072,115,0.556,132,0.006,133,0.004,134,0.321,136,0.774,137,1.911,141,1.61,148,0.792,150,0.58,173,0.94,178,2.176,180,1.67,181,2.081,193,0.947,196,0.58,197,0.58,198,0.58,205,2.413,213,1.17,234,1.229,251,1.889,254,1.762,274,2.158,280,0.601,321,1.759,322,1.694,326,2.222,334,3.1,335,1.134,352,2.151,389,1.544,459,0.645,460,0.669,489,2.836,527,2.158,528,2.836,529,1.453,530,3.503,531,3.657,532,2.447,533,1.938,534,3.55,535,2.32,536,2.447,537,2.32,538,1.552,539,1.295,540,2.836,541,1.369,542,1.369,543,1.369,544,1.369,545,1.369,546,1.911,547,2.69,548,2.447,549,1.759,550,1.759,551,2.591,552,1.369,553,3.438,554,2.447,555,3.029,556,3.249,557,3.147,558,1.938,559,1.844,560,2.447,561,2.447,562,1.552,563,3.974,564,1.552,565,1.552,566,1.552,567,1.552,568,1.552,569,2.291,570,1.552,571,2.041,572,1.552,573,1.552,574,1.552,575,1.552,576,2.158,577,1.552,578,2.447,579,1.552,580,1.552,581,2.447,582,1.552,583,1.552,584,2.868,585,1.552,586,1.552,587,1.552,588,1.552,589,1.552,590,3.029,591,2.447,592,1.552,593,3.029,594,1.844,595,2.836,596,2.671,597,1.552,598,1.295,599,1.552,600,1.552,601,1.552,602,3.029,603,2.447,604,1.552,605,1.453,606,1.369,607,2.722,608,1.552,609,1.552,610,1.369,611,1.552,612,1.552,613,2.447,614,1.552,615,1.552,616,2.447,617,1.552,618,1.552,619,2.447,620,1.552,621,1.552,622,1.552,623,1.552,624,1.759,625,1.552,626,1.552,627,2.398,628,1.552,629,1.552,630,2.447,631,1.552,632,2.291,633,1.453,634,2.158,635,2.041,636,1.453,637,3.029,638,1.552,639,1.453,640,1.552,641,1.552,642,4.16,643,3.029,644,2.447,645,1.552,646,1.552,647,1.552,648,1.552,649,1.552,650,1.552,651,4.16,652,1.552,653,1.369,654,1.481,655,1.552,656,1.552,657,1.552,658,1.552,659,1.552,660,1.552,661,1.552,662,3.029,663,1.552,664,1.552,665,1.552,666,1.552,667,1.552,668,1.552,669,2.447,670,2.447,671,2.447,672,1.552,673,1.552,674,1.552,675,2.447,676,1.552,677,1.552,678,1.552,679,2.447,680,1.552,681,3.438,682,2.447,683,3.438,684,1.552,685,1.552,686,3.029,687,1.552,688,3.029,689,1.552,690,3.029,691,1.552,692,3.029,693,1.552,694,1.552,695,1.552,696,1.552,697,1.552,698,1.552,699,1.552,700,1.552,701,1.552,702,1.552,703,1.552,704,1.552,705,1.552,706,1.552,707,1.552,708,1.552,709,1.552,710,1.552,711,1.552,712,1.552,713,1.552,714,2.447,715,1.552,716,2.447,717,1.552,718,1.552,719,1.552,720,1.552,721,1.552,722,1.552,723,1.552,724,2.447,725,1.552,726,1.552,727,1.369,728,1.369]],["title/classes/CrudController.html",[134,0.199,729,2.872]],["body/classes/CrudController.html",[1,2.045,3,0.152,4,0.118,5,0.135,7,0.223,9,1.279,18,0.862,19,0.289,20,0.014,21,1.186,24,1.118,25,0.283,26,0.4,27,0.152,28,0.008,115,0.59,132,0.01,133,0.008,134,0.223,136,1.494,138,3.223,143,3.944,145,2.498,148,1.427,150,1.647,151,2.596,166,1.551,179,4.246,180,1.479,181,3.134,182,6.096,193,1.527,196,1.473,270,2.596,296,3.712,307,2.671,313,2.724,317,3.156,351,4.13,352,1.968,355,2.498,384,2.153,428,2.257,546,1.889,559,2.973,576,4.412,595,3.693,635,3.291,729,4.246,730,3.894,731,4.13,732,3.693,733,4.476,734,4.688,735,4.476,736,3.944,737,4.476,738,3.911,739,5.129,740,4.246,741,4.476,742,4.476,743,4.476,744,2.804,745,5.385,746,5.896,747,4.476,748,4.476,749,4.476,750,3.51,751,3.51,752,2.257,753,3.51,754,2.371,755,4.623,756,5.735,757,4.476,758,4.476,759,3.479,760,2.994,761,3.51,762,5.129,763,5.129,764,4.476,765,3.894,766,3.894,767,3.894,768,3.894]],["title/interfaces/CrudOptions.html",[0,0.062,549,1.919]],["body/interfaces/CrudOptions.html",[0,0.103,2,0.875,3,0.133,4,0.103,5,0.118,7,0.194,8,0.796,9,1.521,10,0.94,11,0.601,14,0.814,15,0.975,17,0.814,18,0.98,19,0.307,20,0.014,21,1.081,23,0.724,25,0.204,26,0.349,27,0.259,28,0.007,36,1.122,50,1.283,132,0.009,133,0.007,137,1.646,178,2.091,180,1.487,197,1.736,198,1.736,251,1.778,284,2.444,335,1.21,340,2.212,352,2.212,377,1.646,394,3.047,447,1.967,459,1.933,460,2.004,461,2.212,462,2.479,488,2.61,533,2.067,534,3.661,546,2.268,547,1.877,549,2.585,550,1.877,551,1.967,556,1.967,557,2.847,558,2.067,559,2.71,594,1.967,607,3.51,624,3.187,627,3.51,654,1.58,752,1.967,769,2.177,770,4.771,771,5.546,772,4.15,773,4.771,774,3.87,775,2.809,776,2.809,777,2.61,778,2.61,779,2.61,780,2.61,781,2.61,782,2.61,783,3.367,784,2.809,785,2.809,786,2.444,787,2.809,788,2.809,789,2.61,790,2.61,791,2.809,792,2.809,793,2.809,794,2.809,795,1.967,796,2.809,797,2.61,798,2.61,799,2.809,800,2.809,801,2.809,802,2.809,803,2.809,804,3.87,805,2.809,806,2.707,807,2.177,808,2.61,809,2.61,810,2.61,811,2.61,812,2.61,813,2.61,814,2.809,815,1.967,816,2.177,817,2.809,818,2.809,819,2.809]],["title/classes/CrudRoutesFactory.html",[134,0.199,634,2.353]],["body/classes/CrudRoutesFactory.html",[3,0.07,4,0.055,5,0.062,7,0.103,8,0.492,9,1.15,10,0.496,11,0.317,14,0.43,15,0.515,17,0.43,18,0.807,19,0.266,20,0.014,21,0.414,23,0.549,24,0.515,25,0.2,26,0.184,27,0.179,28,0.003,39,1.002,115,0.644,132,0.006,133,0.003,134,0.307,136,0.687,137,3.068,141,1.464,145,1.149,148,1.558,150,1.482,173,0.834,178,2.051,180,1.631,181,1.945,193,0.861,196,1.636,197,0.515,198,0.515,205,2.359,213,1.038,234,3.27,251,1.831,254,1.628,274,1.962,280,0.533,321,1.6,322,1.565,326,2.109,334,3.383,335,1.031,352,1.98,389,1.403,459,0.573,460,0.594,489,2.62,527,1.215,528,4.554,529,1.29,530,2.083,532,1.378,533,1.091,534,3.425,536,1.378,538,1.378,539,1.149,540,2.62,541,1.215,542,1.215,543,1.215,544,1.215,545,1.215,546,1.765,547,2.535,548,2.225,549,1.6,550,1.6,551,3.112,552,1.215,553,3.212,554,2.225,555,2.798,556,3.301,557,2.986,558,1.762,559,1.677,560,2.225,561,2.225,562,1.378,563,3.77,564,1.378,565,1.378,566,1.378,567,1.378,568,1.378,569,2.083,570,1.378,571,1.856,572,1.378,573,1.378,574,1.378,575,1.378,576,1.962,577,1.378,578,2.225,579,1.378,580,1.378,581,2.225,582,1.378,583,1.378,584,2.68,585,1.378,586,1.378,587,1.378,588,1.378,589,1.378,590,3.525,591,3.212,592,1.378,593,2.798,594,2.421,595,2.62,596,2.468,597,1.378,598,1.149,599,1.378,600,1.378,601,1.378,602,2.798,603,2.225,604,1.378,605,1.29,606,1.215,607,2.544,608,1.378,609,1.378,610,1.215,611,1.378,612,1.378,613,2.225,614,1.378,615,1.378,616,2.225,617,1.378,618,1.378,619,2.225,620,1.378,621,1.378,622,1.378,623,1.378,624,1.6,625,1.378,626,1.378,627,2.216,628,1.378,629,1.378,630,2.225,631,1.378,632,2.083,633,1.29,634,2.833,635,3.145,636,1.29,637,2.798,638,1.378,639,1.29,640,1.378,641,1.378,642,3.967,643,2.798,644,2.225,645,2.225,646,1.378,647,2.798,648,1.378,649,2.798,650,1.378,651,4.264,652,1.378,653,2.468,654,2.402,655,2.798,656,1.378,657,1.378,658,1.378,659,1.378,660,1.378,661,2.225,662,2.798,663,1.378,664,1.378,665,2.225,666,1.378,667,1.378,668,3.212,669,2.225,670,2.225,671,2.225,672,3.212,673,1.378,674,1.378,675,2.225,676,1.378,677,1.378,678,1.378,679,2.225,680,1.378,681,3.212,682,2.225,683,3.212,684,1.378,685,1.378,686,2.798,687,1.378,688,2.798,689,1.378,690,2.798,691,1.378,692,2.798,693,1.378,694,1.378,695,1.378,696,1.378,697,3.212,698,1.378,699,1.378,700,1.378,701,1.378,702,1.378,703,1.378,704,1.378,705,1.378,706,1.378,707,1.378,708,1.378,709,1.378,710,1.378,711,1.378,712,1.378,713,2.225,714,2.225,715,1.378,716,2.225,717,1.378,718,1.378,719,2.225,720,1.378,721,1.378,722,2.225,723,1.378,724,2.225,725,1.378,726,1.378,727,1.215,728,1.215,820,3.326,821,3.326,822,3.326,823,3.326,824,2.059,825,3.326,826,2.059,827,2.059,828,2.059,829,2.059,830,2.059,831,2.059,832,2.059,833,2.059,834,2.059,835,2.059,836,2.059,837,2.059,838,2.059,839,2.059,840,2.059,841,2.059,842,2.059]],["title/classes/CrudService.html",[134,0.199,843,2.668]],["body/classes/CrudService.html",[0,0.058,3,0.127,4,0.099,5,0.113,7,0.186,8,0.772,9,1.164,11,0.926,14,1.088,17,1.088,18,0.926,19,0.246,20,0.014,23,0.677,25,0.246,26,0.334,27,0.177,28,0.012,115,0.537,132,0.009,133,0.01,134,0.186,136,1.246,145,3.351,147,4.709,148,1.48,150,1.5,173,2.111,180,1.691,181,2.111,193,1.35,196,1.5,251,1.399,280,1.35,292,2.687,296,3.929,307,1.511,313,1.396,317,3.18,340,2.476,343,1.293,351,3.264,352,1.246,355,2.082,360,2.201,384,1.795,428,1.882,447,2.628,511,2.082,596,4.179,598,3.628,635,2.908,654,2.111,731,4.284,732,3.264,734,4.017,736,4.348,738,3.816,740,3.753,744,3.762,752,2.628,754,1.977,759,2.201,760,4.017,761,2.926,795,2.628,807,2.908,843,3.486,844,2.926,845,4.533,846,4.533,847,4.681,848,3.753,849,5.654,850,4.533,851,4.709,852,4.086,853,3.246,854,4.681,855,5.211,856,4.533,857,5.654,858,4.533,859,4.324,860,4.533,861,3.731,862,5.555,863,5.555,864,3.731,865,4.709,866,3.731,867,5.948,868,4.086,869,3.246,870,3.246,871,5.223,872,3.246,873,4.086,874,4.533,875,4.681,876,2.687,877,3.246,878,2.687,879,2.496,880,3.246,881,3.246,882,3.246,883,3.246]],["title/classes/CustomQueryBuilder.html",[134,0.199,328,2.353]],["body/classes/CustomQueryBuilder.html",[3,0.128,4,0.099,5,0.113,7,0.187,8,0.774,9,1.014,11,0.578,14,1.481,17,0.783,18,0.986,19,0.276,20,0.014,25,0.198,27,0.178,28,0.01,36,0.783,50,1.091,115,0.468,131,1.132,132,0.009,133,0.006,136,1.252,148,1.607,150,1.307,178,2.666,180,1.592,193,1.354,196,1.628,197,1.819,198,1.819,251,1.748,254,1.459,296,2.77,314,4.028,317,3.288,322,2.654,328,4.451,335,1.622,340,1.252,343,1.3,352,1.252,355,2.093,360,4.295,377,1.583,432,3.085,459,1.043,460,2.1,461,2.174,462,2.724,511,2.093,633,2.349,754,3.451,763,3.262,806,3.205,813,2.509,815,2.637,879,2.509,884,2.941,885,6.021,886,6.021,887,6.021,888,6.021,889,5.229,890,6.514,891,6.514,892,5.229,893,3.75,894,3.75,895,3.75,896,3.75,897,5.229,898,5.108,899,3.75,900,3.75,901,3.75,902,3.75,903,5.229,904,7.544,905,3.75,906,3.75,907,3.262,908,4.1,909,3.262,910,2.941,911,2.941,912,3.262,913,3.75,914,3.75,915,4.549,916,3.75,917,3.75,918,3.75,919,3.75,920,3.75,921,3.75,922,3.75,923,3.75,924,5.229,925,3.75,926,6.021,927,6.514,928,3.75,929,2.7,930,4.1,931,3.75,932,3.75,933,3.75,934,3.75,935,3.75,936,3.75]],["title/modules/DatabaseModule.html",[208,1.919,220,2.668]],["body/modules/DatabaseModule.html",[3,0.181,4,0.141,5,0.161,20,0.014,25,0.291,26,0.475,27,0.181,28,0.009,52,1.586,132,0.011,133,0.009,134,0.265,180,1.476,197,1.328,198,1.328,208,3.166,210,2.966,215,4.168,216,3.33,220,4.402,251,2.005,254,2.56,317,2.243,340,2.197,343,1.842,360,3.136,385,3.318,459,1.479,460,1.533,461,1.774,571,2.966,798,4.402,847,4.739,937,4.168,938,5.528,939,5.724,940,5.315,941,5.315,942,5.16,943,4.623,944,4.623,945,4.623,946,4.623,947,4.623,948,4.623,949,4.623,950,4.168,951,4.623,952,4.623,953,4.623,954,4.623,955,4.623,956,4.623]],["title/injectables/ExcludeNullUndefinedInterceptor.html",[481,1.552,957,3.127]],["body/injectables/ExcludeNullUndefinedInterceptor.html",[3,0.181,4,0.141,5,0.161,7,0.265,9,1.031,19,0.201,20,0.014,23,0.685,25,0.271,26,0.475,27,0.181,28,0.009,36,1.373,115,0.475,132,0.011,133,0.009,134,0.265,148,1.15,150,1.328,180,1.476,181,2.153,193,1.704,196,1.328,197,1.328,198,1.328,280,1.377,322,2.794,449,4.402,459,2.078,460,1.533,461,1.774,462,1.989,481,2.56,482,3.136,559,3.318,806,2.34,911,5.16,957,5.16,958,5.724,959,4.623,960,6.58,961,5.16,962,6.58,963,4.739,964,5.16,965,4.679,966,5.379,967,5.315,968,3.33,969,4.217,970,4.739,971,2.966,972,4.402,973,3.556,974,4.623]],["title/interfaces/Follower.html",[0,0.062,127,1.283]],["body/interfaces/Follower.html",[0,0.125,1,2.259,2,0.78,3,0.118,4,0.092,5,0.105,6,1.118,7,0.173,8,0.734,10,0.838,11,0.536,12,1.482,13,1.04,14,0.726,15,0.869,16,1.078,17,0.726,18,1.079,19,0.27,20,0.014,21,0.7,22,1.655,23,0.87,24,1.239,25,0.132,26,0.311,27,0.275,28,0.008,29,1.537,30,1.537,31,1.537,32,1.537,33,1.537,34,1.537,35,1.537,36,1.315,37,2.469,38,1.205,39,1.487,40,1.205,41,1.205,42,1.205,43,1.205,44,1.205,45,1.205,46,1.118,47,1.205,48,1.161,49,1.04,50,1.672,51,1.205,52,0.838,53,1.718,54,1.205,55,1.859,56,1.205,57,1.205,58,1.205,59,1.205,60,1.205,61,1.205,62,1.205,63,1.205,64,1.205,65,1.205,66,1.205,67,2.399,68,1.718,69,1.205,70,1.205,71,1.205,72,2.07,73,1.205,74,1.205,75,1.718,76,1.205,77,1.205,78,1.205,79,1.205,80,1.205,81,2.026,82,1.205,83,1.595,84,1.595,85,1.205,86,1.205,87,1.205,88,1.205,89,1.205,90,1.205,91,1.205,92,1.205,93,1.205,94,1.718,95,1.205,96,1.205,97,1.205,98,1.118,99,1.205,100,1.205,101,2.026,102,1.205,103,1.205,104,1.205,105,1.205,106,1.205,107,1.205,108,1.205,109,1.205,110,1.078,111,1.205,112,1.205,113,1.205,114,1.205,115,0.311,116,1.205,117,1.205,118,1.205,119,1.205,120,1.205,121,1.118,122,1.859,123,1.205,124,1.205,125,1.205,126,1.595,127,1.859,128,2.183,129,2.183,130,2.183,131,0.752,132,0.008,133,0.006]],["title/interfaces/Following.html",[0,0.062,55,1.283]],["body/interfaces/Following.html",[0,0.126,1,2.284,2,0.814,3,0.123,4,0.096,5,0.11,6,1.167,10,0.875,11,0.559,12,1.528,13,1.085,14,0.757,15,0.906,16,1.125,17,0.757,18,1.079,19,0.194,20,0.014,21,0.73,22,1.706,23,0.869,24,1.277,25,0.137,26,0.324,27,0.276,28,0.009,29,1.584,30,1.584,31,1.584,32,1.584,33,1.584,34,1.584,35,1.584,36,1.34,37,2.5,38,1.257,39,1.505,40,1.257,41,1.257,42,1.257,43,1.257,44,1.257,45,1.257,46,1.167,47,1.257,48,1.211,49,1.085,50,1.65,51,1.257,52,0.875,53,1.771,54,1.257,55,2.065,56,1.257,57,1.257,58,1.257,59,1.257,60,1.257,61,1.257,62,1.257,63,1.257,64,1.257,65,1.257,66,1.257,67,2.05,68,1.771,69,1.257,70,1.257,71,1.257,72,1.768,73,1.257,74,1.257,75,1.771,76,1.257,77,1.257,78,1.257,79,1.257,80,1.257,81,2.065,82,1.257,83,1.644,84,1.644,85,1.257,86,1.257,87,1.257,88,1.257,89,1.257,90,1.257,91,1.257,92,1.257,93,1.257,94,1.771,95,1.257,96,1.257,97,1.257,98,1.167,99,1.257,100,1.257,101,2.065,102,1.257,103,1.257,104,1.257,105,1.257,106,1.257,107,1.257,108,1.257,109,1.257,110,1.125,111,1.257,112,1.257,113,1.257,114,1.257,115,0.324,116,1.257,117,1.257,118,1.257,119,1.257,120,1.257,121,1.167,122,1.902,123,1.257,124,1.257,125,1.257,126,1.644,127,1.902,128,1.257,129,1.257,130,1.257,131,1.106,132,0.009,133,0.006]],["title/interfaces/GetAppLaunchData.html",[0,0.062,29,1.237]],["body/interfaces/GetAppLaunchData.html",[0,0.125,1,2.347,2,0.803,3,0.122,4,0.095,5,0.108,6,1.152,7,0.178,8,0.75,10,0.863,11,0.552,12,1.514,13,1.071,14,0.747,15,0.895,16,1.11,17,0.747,18,1.078,19,0.222,20,0.014,21,0.72,22,1.69,23,0.869,24,1.265,25,0.136,26,0.32,27,0.276,28,0.009,29,1.821,30,1.57,31,1.57,32,1.57,33,1.57,34,1.57,35,1.57,36,1.332,37,2.622,38,1.241,39,1.579,40,1.241,41,1.241,42,1.241,43,1.241,44,1.241,45,1.241,46,1.152,47,1.241,48,1.195,49,1.071,50,1.647,51,1.241,52,0.863,53,1.754,54,1.241,55,1.889,56,1.241,57,1.241,58,1.241,59,1.241,60,1.241,61,1.241,62,1.241,63,1.241,64,1.241,65,1.241,66,1.241,67,2.035,68,1.754,69,1.241,70,1.241,71,1.241,72,1.756,73,1.241,74,1.241,75,1.754,76,1.241,77,1.241,78,1.241,79,1.241,80,1.241,81,2.053,82,1.241,83,1.628,84,1.628,85,1.241,86,1.241,87,1.241,88,1.241,89,1.241,90,1.241,91,1.241,92,1.241,93,1.241,94,1.754,95,1.241,96,1.241,97,1.241,98,1.152,99,1.241,100,1.241,101,2.053,102,1.241,103,1.241,104,1.241,105,1.241,106,1.241,107,1.241,108,1.241,109,1.241,110,1.11,111,1.241,112,1.241,113,1.241,114,1.241,115,0.32,116,1.241,117,1.241,118,1.241,119,1.241,120,1.241,121,1.152,122,1.889,123,1.241,124,1.241,125,1.241,126,1.628,127,1.628,128,1.241,129,1.241,130,1.241,131,0.775,132,0.009,133,0.006]],["title/interfaces/GetComments.html",[0,0.062,32,1.237]],["body/interfaces/GetComments.html",[0,0.125,1,2.347,2,0.803,3,0.122,4,0.095,5,0.108,6,1.152,7,0.178,8,0.75,10,0.863,11,0.552,12,1.514,13,1.071,14,0.747,15,0.895,16,1.11,17,0.747,18,1.078,19,0.222,20,0.014,21,0.72,22,1.69,23,0.869,24,1.265,25,0.136,26,0.32,27,0.276,28,0.009,29,1.57,30,1.57,31,1.57,32,1.821,33,1.57,34,1.57,35,1.57,36,1.332,37,2.622,38,1.241,39,1.579,40,1.241,41,1.241,42,1.241,43,1.241,44,1.241,45,1.241,46,1.152,47,1.241,48,1.195,49,1.071,50,1.647,51,1.241,52,0.863,53,1.754,54,1.241,55,1.889,56,1.241,57,1.241,58,1.241,59,1.241,60,1.241,61,1.241,62,1.241,63,1.241,64,1.241,65,1.241,66,1.241,67,2.035,68,1.754,69,1.241,70,1.241,71,1.241,72,1.756,73,1.241,74,1.241,75,1.754,76,1.241,77,1.241,78,1.241,79,1.241,80,1.241,81,2.053,82,1.241,83,1.628,84,1.628,85,1.241,86,1.241,87,1.241,88,1.241,89,1.241,90,1.241,91,1.241,92,1.241,93,1.241,94,1.754,95,1.241,96,1.241,97,1.241,98,1.152,99,1.241,100,1.241,101,2.053,102,1.241,103,1.241,104,1.241,105,1.241,106,1.241,107,1.241,108,1.241,109,1.241,110,1.11,111,1.241,112,1.241,113,1.241,114,1.241,115,0.32,116,1.241,117,1.241,118,1.241,119,1.241,120,1.241,121,1.152,122,1.889,123,1.241,124,1.241,125,1.241,126,1.628,127,1.628,128,1.241,129,1.241,130,1.241,131,0.775,132,0.009,133,0.006]],["title/interfaces/GetFollowers.html",[0,0.062,34,1.237]],["body/interfaces/GetFollowers.html",[0,0.125,1,2.347,2,0.803,3,0.122,4,0.095,5,0.108,6,1.152,7,0.178,8,0.75,10,0.863,11,0.552,12,1.514,13,1.071,14,0.747,15,0.895,16,1.11,17,0.747,18,1.078,19,0.222,20,0.014,21,0.72,22,1.69,23,0.869,24,1.265,25,0.136,26,0.32,27,0.276,28,0.009,29,1.57,30,1.57,31,1.57,32,1.57,33,1.57,34,1.821,35,1.57,36,1.332,37,2.622,38,1.241,39,1.579,40,1.241,41,1.241,42,1.241,43,1.241,44,1.241,45,1.241,46,1.152,47,1.241,48,1.195,49,1.071,50,1.647,51,1.241,52,0.863,53,1.754,54,1.241,55,1.889,56,1.241,57,1.241,58,1.241,59,1.241,60,1.241,61,1.241,62,1.241,63,1.241,64,1.241,65,1.241,66,1.241,67,2.035,68,1.754,69,1.241,70,1.241,71,1.241,72,1.756,73,1.241,74,1.241,75,1.754,76,1.241,77,1.241,78,1.241,79,1.241,80,1.241,81,2.053,82,1.241,83,1.628,84,1.628,85,1.241,86,1.241,87,1.241,88,1.241,89,1.241,90,1.241,91,1.241,92,1.241,93,1.241,94,1.754,95,1.241,96,1.241,97,1.241,98,1.152,99,1.241,100,1.241,101,2.053,102,1.241,103,1.241,104,1.241,105,1.241,106,1.241,107,1.241,108,1.241,109,1.241,110,1.11,111,1.241,112,1.241,113,1.241,114,1.241,115,0.32,116,1.241,117,1.241,118,1.241,119,1.241,120,1.241,121,1.152,122,1.889,123,1.241,124,1.241,125,1.241,126,1.628,127,1.628,128,1.241,129,1.241,130,1.241,131,0.775,132,0.009,133,0.006]],["title/interfaces/GetFollowing.html",[0,0.062,35,1.237]],["body/interfaces/GetFollowing.html",[0,0.125,1,2.347,2,0.803,3,0.122,4,0.095,5,0.108,6,1.152,7,0.178,8,0.75,10,0.863,11,0.552,12,1.514,13,1.071,14,0.747,15,0.895,16,1.11,17,0.747,18,1.078,19,0.222,20,0.014,21,0.72,22,1.69,23,0.869,24,1.265,25,0.136,26,0.32,27,0.276,28,0.009,29,1.57,30,1.57,31,1.57,32,1.57,33,1.57,34,1.57,35,1.821,36,1.332,37,2.622,38,1.241,39,1.579,40,1.241,41,1.241,42,1.241,43,1.241,44,1.241,45,1.241,46,1.152,47,1.241,48,1.195,49,1.071,50,1.647,51,1.241,52,0.863,53,1.754,54,1.241,55,1.889,56,1.241,57,1.241,58,1.241,59,1.241,60,1.241,61,1.241,62,1.241,63,1.241,64,1.241,65,1.241,66,1.241,67,2.035,68,1.754,69,1.241,70,1.241,71,1.241,72,1.756,73,1.241,74,1.241,75,1.754,76,1.241,77,1.241,78,1.241,79,1.241,80,1.241,81,2.053,82,1.241,83,1.628,84,1.628,85,1.241,86,1.241,87,1.241,88,1.241,89,1.241,90,1.241,91,1.241,92,1.241,93,1.241,94,1.754,95,1.241,96,1.241,97,1.241,98,1.152,99,1.241,100,1.241,101,2.053,102,1.241,103,1.241,104,1.241,105,1.241,106,1.241,107,1.241,108,1.241,109,1.241,110,1.11,111,1.241,112,1.241,113,1.241,114,1.241,115,0.32,116,1.241,117,1.241,118,1.241,119,1.241,120,1.241,121,1.152,122,1.889,123,1.241,124,1.241,125,1.241,126,1.628,127,1.628,128,1.241,129,1.241,130,1.241,131,0.775,132,0.009,133,0.006]],["title/interfaces/GetManyDefaultResponse.html",[0,0.062,550,1.919]],["body/interfaces/GetManyDefaultResponse.html",[0,0.105,2,0.923,3,0.14,4,0.109,5,0.124,7,0.205,8,0.825,10,1.633,11,1.044,14,1.414,15,1.693,17,1.414,18,1.056,19,0.283,20,0.014,21,1.363,23,0.737,25,0.211,26,0.368,27,0.262,28,0.007,36,1.163,50,1.319,132,0.009,133,0.007,137,1.736,178,2.169,180,1.52,197,1.769,198,1.769,251,1.818,284,2.577,335,1.276,340,1.373,352,1.373,377,1.736,394,1.892,447,2.075,459,1.97,460,2.042,461,2.261,462,2.535,488,2.753,533,2.18,534,3.702,546,2.352,547,1.979,549,1.979,550,2.681,551,2.075,556,2.075,557,2.953,558,2.18,594,2.075,607,2.18,624,1.979,627,2.18,654,1.667,752,2.075,769,2.296,770,2.963,772,3.491,773,4.014,774,4.014,775,2.963,776,2.963,777,2.753,778,2.753,779,2.753,780,2.753,781,2.753,782,2.753,783,3.491,784,2.963,785,2.963,786,2.577,787,2.963,788,2.963,789,2.753,790,2.753,791,2.963,792,2.963,793,2.963,794,2.963,795,2.075,796,2.963,797,2.753,798,2.753,799,2.963,800,2.963,801,2.963,802,2.963,803,2.963,804,4.014,805,2.963,806,2.783,807,2.296,808,2.753,809,2.753,810,2.753,811,2.753,812,2.753,813,2.753,814,2.963,815,2.075,816,2.296,817,2.963,818,2.963,819,2.963]],["title/interfaces/GetRescueList.html",[0,0.062,33,1.237]],["body/interfaces/GetRescueList.html",[0,0.125,1,2.347,2,0.803,3,0.122,4,0.095,5,0.108,6,1.152,7,0.178,8,0.75,10,0.863,11,0.552,12,1.514,13,1.071,14,0.747,15,0.895,16,1.11,17,0.747,18,1.078,19,0.222,20,0.014,21,0.72,22,1.69,23,0.869,24,1.265,25,0.136,26,0.32,27,0.276,28,0.009,29,1.57,30,1.57,31,1.57,32,1.57,33,1.821,34,1.57,35,1.57,36,1.332,37,2.622,38,1.241,39,1.579,40,1.241,41,1.241,42,1.241,43,1.241,44,1.241,45,1.241,46,1.152,47,1.241,48,1.195,49,1.071,50,1.647,51,1.241,52,0.863,53,1.754,54,1.241,55,1.889,56,1.241,57,1.241,58,1.241,59,1.241,60,1.241,61,1.241,62,1.241,63,1.241,64,1.241,65,1.241,66,1.241,67,2.035,68,1.754,69,1.241,70,1.241,71,1.241,72,1.756,73,1.241,74,1.241,75,1.754,76,1.241,77,1.241,78,1.241,79,1.241,80,1.241,81,2.053,82,1.241,83,1.628,84,1.628,85,1.241,86,1.241,87,1.241,88,1.241,89,1.241,90,1.241,91,1.241,92,1.241,93,1.241,94,1.754,95,1.241,96,1.241,97,1.241,98,1.152,99,1.241,100,1.241,101,2.053,102,1.241,103,1.241,104,1.241,105,1.241,106,1.241,107,1.241,108,1.241,109,1.241,110,1.11,111,1.241,112,1.241,113,1.241,114,1.241,115,0.32,116,1.241,117,1.241,118,1.241,119,1.241,120,1.241,121,1.152,122,1.889,123,1.241,124,1.241,125,1.241,126,1.628,127,1.628,128,1.241,129,1.241,130,1.241,131,0.775,132,0.009,133,0.006]],["title/interfaces/GetUserPosts.html",[0,0.062,31,1.237]],["body/interfaces/GetUserPosts.html",[0,0.125,1,2.347,2,0.803,3,0.122,4,0.095,5,0.108,6,1.152,7,0.178,8,0.75,10,0.863,11,0.552,12,1.514,13,1.071,14,0.747,15,0.895,16,1.11,17,0.747,18,1.078,19,0.222,20,0.014,21,0.72,22,1.69,23,0.869,24,1.265,25,0.136,26,0.32,27,0.276,28,0.009,29,1.57,30,1.57,31,1.821,32,1.57,33,1.57,34,1.57,35,1.57,36,1.332,37,2.622,38,1.241,39,1.579,40,1.241,41,1.241,42,1.241,43,1.241,44,1.241,45,1.241,46,1.152,47,1.241,48,1.195,49,1.071,50,1.647,51,1.241,52,0.863,53,1.754,54,1.241,55,1.889,56,1.241,57,1.241,58,1.241,59,1.241,60,1.241,61,1.241,62,1.241,63,1.241,64,1.241,65,1.241,66,1.241,67,2.035,68,1.754,69,1.241,70,1.241,71,1.241,72,1.756,73,1.241,74,1.241,75,1.754,76,1.241,77,1.241,78,1.241,79,1.241,80,1.241,81,2.053,82,1.241,83,1.628,84,1.628,85,1.241,86,1.241,87,1.241,88,1.241,89,1.241,90,1.241,91,1.241,92,1.241,93,1.241,94,1.754,95,1.241,96,1.241,97,1.241,98,1.152,99,1.241,100,1.241,101,2.053,102,1.241,103,1.241,104,1.241,105,1.241,106,1.241,107,1.241,108,1.241,109,1.241,110,1.11,111,1.241,112,1.241,113,1.241,114,1.241,115,0.32,116,1.241,117,1.241,118,1.241,119,1.241,120,1.241,121,1.152,122,1.889,123,1.241,124,1.241,125,1.241,126,1.628,127,1.628,128,1.241,129,1.241,130,1.241,131,0.775,132,0.009,133,0.006]],["title/interfaces/GetUserProfile.html",[0,0.062,30,1.237]],["body/interfaces/GetUserProfile.html",[0,0.125,1,2.347,2,0.803,3,0.122,4,0.095,5,0.108,6,1.152,7,0.178,8,0.75,10,0.863,11,0.552,12,1.514,13,1.071,14,0.747,15,0.895,16,1.11,17,0.747,18,1.078,19,0.222,20,0.014,21,0.72,22,1.69,23,0.869,24,1.265,25,0.136,26,0.32,27,0.276,28,0.009,29,1.57,30,1.821,31,1.57,32,1.57,33,1.57,34,1.57,35,1.57,36,1.332,37,2.622,38,1.241,39,1.579,40,1.241,41,1.241,42,1.241,43,1.241,44,1.241,45,1.241,46,1.152,47,1.241,48,1.195,49,1.071,50,1.647,51,1.241,52,0.863,53,1.754,54,1.241,55,1.889,56,1.241,57,1.241,58,1.241,59,1.241,60,1.241,61,1.241,62,1.241,63,1.241,64,1.241,65,1.241,66,1.241,67,2.035,68,1.754,69,1.241,70,1.241,71,1.241,72,1.756,73,1.241,74,1.241,75,1.754,76,1.241,77,1.241,78,1.241,79,1.241,80,1.241,81,2.053,82,1.241,83,1.628,84,1.628,85,1.241,86,1.241,87,1.241,88,1.241,89,1.241,90,1.241,91,1.241,92,1.241,93,1.241,94,1.754,95,1.241,96,1.241,97,1.241,98,1.152,99,1.241,100,1.241,101,2.053,102,1.241,103,1.241,104,1.241,105,1.241,106,1.241,107,1.241,108,1.241,109,1.241,110,1.11,111,1.241,112,1.241,113,1.241,114,1.241,115,0.32,116,1.241,117,1.241,118,1.241,119,1.241,120,1.241,121,1.152,122,1.889,123,1.241,124,1.241,125,1.241,126,1.628,127,1.628,128,1.241,129,1.241,130,1.241,131,0.775,132,0.009,133,0.006]],["title/controllers/HealthController.html",[189,2.113,227,2.872]],["body/controllers/HealthController.html",[3,0.134,4,0.105,5,0.119,7,0.197,9,1.052,11,0.609,19,0.15,20,0.014,23,0.645,25,0.285,26,0.353,27,0.134,28,0.007,115,0.485,132,0.009,133,0.007,134,0.197,141,1.74,145,2.206,148,1.511,150,1.355,151,2.387,166,1.37,180,1.495,189,2.094,191,2.206,193,1.404,196,1.744,197,1.802,198,1.802,199,2.846,200,2.846,201,2.846,202,2.846,205,1.271,227,4.797,229,5.795,230,4.717,232,5.385,233,2.846,234,3.279,235,6.273,238,3.099,242,3.099,251,1.061,279,4.717,280,1.024,284,2.476,303,3.438,305,3.438,306,3.438,432,3.199,459,1.1,460,2.013,461,2.33,462,2.612,487,4.717,523,3.438,524,4.717,530,3.397,632,2.476,639,2.476,653,3.652,754,3.529,806,3.073,815,3.359,908,5.224,915,5.795,969,3.652,971,2.206,972,2.644,973,2.644,975,3.438,976,5.423,977,6.981,978,3.952,979,3.952,980,5.423,981,3.952,982,6.19,983,3.952,984,3.952,985,5.423,986,3.952,987,3.952,988,3.952,989,5.423,990,5.423,991,5.423,992,5.423,993,6.19,994,4.717,995,3.952,996,3.952,997,3.952,998,3.952,999,3.952,1000,3.952,1001,3.952,1002,3.952,1003,3.952,1004,3.952,1005,3.952,1006,3.952,1007,3.952,1008,3.952,1009,3.952,1010,3.952,1011,5.423,1012,5.423,1013,3.952,1014,3.952,1015,5.423,1016,5.423,1017,6.662,1018,3.952,1019,3.952,1020,3.952,1021,3.952,1022,3.952,1023,3.952,1024,3.952]],["title/interfaces/IBaseModel.html",[0,0.062,309,2.872]],["body/interfaces/IBaseModel.html",[0,0.074,2,1.063,3,0.161,4,0.125,5,0.143,7,0.236,8,0.906,9,1.186,11,0.73,18,0.936,19,0.271,20,0.014,25,0.281,27,0.208,28,0.01,36,0.989,110,2.101,131,1.025,132,0.01,133,0.008,134,0.236,140,2.967,152,3.169,166,1.642,173,2.478,174,4.093,180,1.373,205,1.968,251,1.271,280,1.227,307,1.919,308,3.715,309,4.88,310,5.469,311,5.469,312,4.406,313,2.774,314,3.169,315,3.411,316,5.469,317,2.86,323,3.411,324,2.795,326,2.289,328,3.998,332,3.411,333,4.406,334,2.943,338,4.121,339,4.121,340,1.581,341,5.322,342,6.45,343,2.348,344,5.322,345,3.411,346,5.322,347,3.715,348,3.411,349,4.121,350,2.967,351,2.967,352,2.042,353,4.121,354,4.121,355,2.644,356,4.121,357,4.121,358,4.121,359,4.121,360,3.998,361,4.121,362,4.121,363,4.121,364,5.322,365,5.322,366,4.121,367,4.121,368,4.121]],["title/interfaces/ICrudService.html",[0,0.062,734,2.668]],["body/interfaces/ICrudService.html",[0,0.064,2,0.921,3,0.14,4,0.109,5,0.124,7,0.204,9,1.079,11,0.858,14,1.161,17,1.161,18,0.924,19,0.211,20,0.014,23,0.705,25,0.256,26,0.367,27,0.189,28,0.011,115,0.498,132,0.009,133,0.011,134,0.204,145,2.29,147,4.949,148,1.366,150,1.39,173,2.253,180,1.636,193,1.441,196,1.577,233,2.955,251,1.493,280,1.063,292,2.955,296,4.12,307,1.662,313,1.535,317,2.664,340,2.361,343,1.422,351,3.485,352,1.37,355,2.29,360,2.421,384,1.974,428,2.069,447,2.805,511,2.29,596,3.724,598,3.105,635,2.29,654,1.662,731,4.431,732,3.485,734,4.222,736,3.722,738,3.947,740,2.955,744,3.954,752,2.069,754,2.174,759,2.421,760,3.722,761,3.218,795,2.069,807,3.105,843,2.745,844,3.218,845,3.569,846,3.569,847,4.006,848,2.955,849,4.839,850,3.569,851,3.218,852,4.362,854,4.006,856,3.569,857,4.839,858,3.569,859,4.006,860,3.569,862,4.949,863,4.949,865,4.949,867,6.153,868,4.362,869,3.569,870,3.569,871,5.49,872,3.569,873,4.362,874,4.839,875,4.873,876,2.955,877,3.569,878,2.955,879,2.745,880,3.569,881,3.569,882,3.569,883,3.569,1025,4.103,1026,4.103,1027,4.103]],["title/interfaces/IPagination.html",[0,0.062,759,2.353]],["body/interfaces/IPagination.html",[0,0.105,2,1.065,3,0.161,4,0.126,5,0.143,7,0.236,8,0.907,11,1.105,14,1.496,17,0.99,18,0.993,19,0.288,20,0.014,21,1.442,23,0.638,25,0.257,27,0.231,28,0.008,39,1.278,132,0.01,133,0.008,134,0.338,152,4.794,166,1.644,181,1.922,355,3.785,382,2.283,423,4.489,428,3.741,511,3.785,525,4.802,539,2.648,584,3.418,606,3.613,624,2.283,738,2.648,759,3.613,760,4.097,771,4.41,786,2.972,859,3.417,875,4.41,876,4.884,878,5.471,879,3.174,898,3.72,961,3.72,1028,3.417,1029,5.899,1030,5.327,1031,5.327,1032,4.127,1033,4.802,1034,4.802,1035,4.802,1036,4.127,1037,5.327,1038,5.327,1039,5.327,1040,5.327,1041,4.127,1042,4.127,1043,4.127]],["title/interfaces/ITag.html",[0,0.062,371,2.498]],["body/interfaces/ITag.html",[0,0.079,2,1.134,3,0.172,4,0.134,5,0.153,7,0.252,8,1.035,19,0.287,20,0.014,23,0.804,25,0.287,27,0.238,28,0.009,115,0.71,131,1.38,132,0.011,133,0.009,134,0.366,166,1.752,205,2.052,264,2.549,270,2.226,280,1.652,307,2.583,313,1.892,326,2.614,335,1.568,340,1.688,343,1.752,369,2.983,370,3.382,371,4.596,374,3.559,375,2.822,376,2.678,377,2.134,378,3.216,379,3.216,380,3.559,381,3.559,382,2.432,383,3.899,384,2.432,385,2.549,386,2.549,387,3.167,388,2.822,389,2.949,390,2.822,391,2.822,392,2.822,393,2.822,394,2.325,395,2.822,396,2.822,397,2.822,398,2.822,399,2.822,400,2.822,401,3.382,402,2.822,403,2.822,404,2.822,405,2.983,406,3.641]],["title/interfaces/ITryRequest.html",[0,0.062,1044,3.127]],["body/interfaces/ITryRequest.html",[0,0.094,2,1.353,3,0.205,4,0.16,5,0.182,7,0.3,8,1.051,9,1.511,12,2.33,19,0.286,20,0.014,27,0.205,28,0.01,50,1.575,132,0.012,133,0.01,745,5.612,1044,5.568,1045,5.245,1046,5.245,1047,6.779]],["title/interfaces/IUser.html",[0,0.062,409,2.498]],["body/interfaces/IUser.html",[0,0.056,2,0.812,3,0.123,4,0.096,5,0.109,7,0.18,8,0.875,19,0.299,20,0.014,23,0.861,25,0.256,27,0.201,28,0.006,49,2.155,50,1.464,52,0.873,72,2.201,115,0.528,131,1.104,132,0.009,133,0.006,134,0.32,166,1.254,197,1.602,198,1.602,205,1.9,251,1.369,254,1.408,264,1.825,270,1.593,280,1.321,307,2.066,313,1.354,324,4.342,326,2.697,335,1.122,340,1.208,343,1.254,350,2.267,352,1.208,374,2.847,375,2.02,376,1.917,377,1.527,378,3.537,379,3.409,380,3.915,381,3.915,382,1.741,383,3.296,384,1.741,386,1.825,388,2.02,389,2.493,390,2.02,391,2.02,392,2.02,393,2.847,394,1.664,395,2.02,396,2.02,397,2.02,398,2.02,399,2.02,400,2.02,402,3.773,403,3.579,404,2.02,407,2.135,408,2.421,409,4.017,410,5.389,411,5.389,412,5.389,423,2.267,424,3.673,425,3.195,426,4.618,427,2.267,428,1.825,429,3.673,430,2.606,431,2.606,432,3.009,433,2.606,434,2.606,435,2.606,436,2.606,437,2.606,438,2.606,439,2.606,440,2.606,441,2.606,442,3.673,443,2.606,444,3.673,445,2.606,446,2.606,447,1.825,448,2.606,449,2.421,450,2.606,451,2.606,452,2.606,453,2.606,454,2.606,455,2.606,456,2.421,457,2.606,458,2.606,459,1.784,460,1.85,461,1.703,462,1.908,463,3.673,464,3.673,465,2.606,466,3.412,467,3.412,468,2.606,469,2.606,470,3.412,471,2.606,472,2.606,473,2.606,474,2.135,475,2.606]],["title/classes/PaginationParams.html",[134,0.199,738,2.226]],["body/classes/PaginationParams.html",[0,0.092,3,0.153,4,0.119,5,0.136,7,0.225,8,0.877,9,1.149,11,0.695,14,1.617,17,0.941,18,1.034,19,0.266,20,0.014,21,1.192,23,0.617,25,0.251,27,0.225,28,0.008,39,0.941,132,0.01,133,0.008,134,0.33,136,1.505,148,1.432,151,2.913,152,4.702,166,1.563,181,1.827,321,2.85,322,2.217,355,3.693,382,2.17,423,4.403,428,4.02,511,3.922,525,3.536,539,2.517,584,2.517,606,2.661,624,2.85,738,3.307,759,2.661,760,4.702,786,2.825,859,4.765,875,5.061,876,5.061,878,4.267,879,3.017,898,4.646,961,3.536,1028,3.247,1029,5.756,1030,3.923,1031,3.923,1032,3.923,1033,4.646,1034,4.646,1035,4.646,1036,5.154,1037,6.113,1038,5.154,1039,5.154,1040,5.154,1041,5.154,1042,3.923,1043,3.923,1048,4.51,1049,4.51,1050,5.925,1051,5.925,1052,4.51,1053,4.51]],["title/interfaces/ParamOption.html",[0,0.062,783,2.498]],["body/interfaces/ParamOption.html",[0,0.104,2,0.901,3,0.137,4,0.106,5,0.121,7,0.2,8,0.812,9,1.502,10,0.968,11,0.619,14,0.838,15,1.003,17,0.838,18,1.012,19,0.293,20,0.014,21,1.103,23,0.797,25,0.208,26,0.359,27,0.26,28,0.007,36,1.144,50,1.548,132,0.009,133,0.007,137,1.695,178,2.133,180,1.505,197,1.754,198,1.754,251,1.8,284,2.515,335,1.245,340,1.34,352,1.34,377,1.695,394,1.847,447,2.025,459,1.953,460,2.025,461,2.239,462,2.509,488,2.686,533,2.127,534,3.684,546,2.314,547,1.932,549,1.932,550,1.932,551,2.025,556,2.025,557,2.904,558,2.127,594,2.025,607,2.127,624,1.932,627,2.127,654,1.626,752,2.025,769,2.241,770,2.892,772,3.434,773,3.948,774,4.83,775,2.892,776,2.892,777,2.686,778,2.686,779,2.686,780,2.686,781,2.686,782,2.686,783,3.91,784,4.83,785,4.495,786,4.201,787,4.83,788,4.83,789,2.686,790,2.686,791,2.892,792,2.892,793,2.892,794,2.892,795,2.025,796,2.892,797,2.686,798,2.686,799,2.892,800,2.892,801,2.892,802,2.892,803,2.892,804,3.948,805,2.892,806,2.748,807,2.241,808,2.686,809,2.686,810,2.686,811,2.686,812,2.686,813,2.686,814,2.892,815,2.025,816,2.241,817,2.892,818,2.892,819,2.892]],["title/interfaces/ParamsOptions.html",[0,0.062,772,2.498]],["body/interfaces/ParamsOptions.html",[0,0.107,2,0.964,3,0.146,4,0.114,5,0.13,10,1.036,11,0.662,14,0.897,15,1.074,17,0.897,18,1.002,19,0.217,20,0.014,21,1.155,23,0.77,25,0.217,26,0.384,27,0.264,28,0.007,36,1.198,50,1.348,132,0.01,133,0.007,137,2.422,148,0.93,178,2.233,180,1.547,197,1.795,198,1.795,251,1.851,284,2.692,335,1.332,340,1.434,352,1.434,377,1.813,394,1.976,447,2.167,459,1.999,460,2.072,461,2.302,462,2.58,488,2.875,533,2.276,534,3.735,546,2.422,547,2.067,549,2.067,550,2.067,551,2.167,556,2.167,557,3.04,558,2.276,594,2.167,607,2.276,624,2.067,627,2.276,654,1.74,752,2.167,769,2.398,770,3.094,772,4.047,773,4.132,774,4.132,775,3.094,776,3.094,777,2.875,778,2.875,779,2.875,780,2.875,781,2.875,782,2.875,783,4.047,784,3.094,785,3.094,786,2.692,787,3.094,788,3.094,789,3.839,790,2.875,791,3.094,792,3.094,793,3.094,794,3.094,795,2.167,796,3.094,797,2.875,798,2.875,799,3.094,800,3.094,801,3.094,802,3.094,803,3.094,804,4.132,805,3.094,806,2.844,807,2.398,808,2.875,809,2.875,810,2.875,811,2.875,812,2.875,813,2.875,814,3.094,815,2.167,816,2.398,817,3.094,818,3.094,819,3.094,1054,4.297,1055,4.297]],["title/interfaces/PostType.html",[0,0.062,81,1.283]],["body/interfaces/PostType.html",[0,0.125,1,2.273,2,0.8,3,0.121,4,0.094,5,0.108,6,1.146,7,0.178,8,0.747,10,0.859,11,0.549,12,1.509,13,1.065,14,0.744,15,0.89,16,1.105,17,0.744,18,1.081,19,0.241,20,0.014,21,0.717,22,1.684,23,0.87,24,1.261,25,0.135,26,0.319,27,0.276,28,0.008,29,1.564,30,1.564,31,1.564,32,1.564,33,1.564,34,1.564,35,1.564,36,1.329,37,2.487,38,1.235,39,1.498,40,1.235,41,1.235,42,1.235,43,1.235,44,1.235,45,1.235,46,1.146,47,1.235,48,1.189,49,1.065,50,1.646,51,1.235,52,0.859,53,1.748,54,1.235,55,1.884,56,1.235,57,1.235,58,1.235,59,1.235,60,1.235,61,1.235,62,1.235,63,1.235,64,1.235,65,1.235,66,1.235,67,2.03,68,1.748,69,1.235,70,1.235,71,1.235,72,1.751,73,1.235,74,1.235,75,1.748,76,1.235,77,1.235,78,1.235,79,1.235,80,1.235,81,2.358,82,2.207,83,1.623,84,1.623,85,1.235,86,1.235,87,1.235,88,1.235,89,1.235,90,1.235,91,1.235,92,1.235,93,1.235,94,1.748,95,1.235,96,1.235,97,1.235,98,1.146,99,1.235,100,1.235,101,2.049,102,1.235,103,1.235,104,1.235,105,1.235,106,1.235,107,1.235,108,1.235,109,1.235,110,1.105,111,1.235,112,1.235,113,1.235,114,1.235,115,0.319,116,1.235,117,1.235,118,1.235,119,1.235,120,1.235,121,1.146,122,1.884,123,1.235,124,1.235,125,1.235,126,1.623,127,1.623,128,1.235,129,1.235,130,1.235,131,0.771,132,0.008,133,0.006]],["title/interfaces/PostedByUser.html",[0,0.062,83,1.283]],["body/interfaces/PostedByUser.html",[0,0.125,1,2.254,2,0.774,3,0.117,4,0.091,5,0.104,6,1.109,7,0.172,8,0.73,10,0.831,11,0.532,12,1.474,13,1.031,14,0.72,15,0.862,16,1.069,17,0.72,18,1.078,19,0.275,20,0.014,21,0.694,22,1.645,23,0.871,24,1.232,25,0.131,26,0.308,27,0.275,28,0.008,29,1.528,30,1.528,31,1.528,32,1.528,33,1.528,34,1.528,35,1.528,36,1.31,37,2.463,38,1.195,39,1.483,40,1.195,41,1.195,42,1.195,43,1.195,44,1.195,45,1.195,46,1.109,47,1.195,48,1.151,49,1.031,50,1.67,51,1.195,52,0.831,53,2.301,54,1.195,55,2.221,56,1.195,57,1.195,58,1.195,59,1.195,60,1.195,61,1.195,62,1.195,63,1.195,64,1.195,65,1.195,66,1.195,67,2.393,68,2.301,69,1.195,70,1.195,71,1.195,72,2.065,73,1.195,74,1.195,75,2.301,76,1.195,77,1.195,78,1.195,79,1.195,80,1.195,81,2.019,82,1.195,83,1.85,84,1.586,85,1.195,86,1.195,87,1.195,88,1.195,89,1.195,90,1.195,91,1.195,92,1.195,93,1.195,94,1.708,95,1.195,96,1.195,97,1.195,98,1.109,99,1.195,100,1.195,101,2.019,102,1.195,103,1.195,104,1.195,105,1.195,106,1.195,107,1.195,108,1.195,109,1.195,110,1.069,111,1.195,112,1.195,113,1.195,114,1.195,115,0.308,116,1.195,117,1.195,118,1.195,119,1.195,120,1.195,121,1.109,122,1.85,123,1.195,124,1.195,125,1.195,126,1.586,127,1.586,128,1.195,129,1.195,130,1.195,131,0.746,132,0.008,133,0.006]],["title/classes/QueryFailedFilter.html",[134,0.199,1056,3.127]],["body/classes/QueryFailedFilter.html",[3,0.15,4,0.116,5,0.133,7,0.219,9,0.853,11,0.898,13,1.743,16,1.364,19,0.248,20,0.014,24,1.099,25,0.248,26,0.393,27,0.15,28,0.007,39,0.918,115,0.585,132,0.01,133,0.007,134,0.219,136,1.468,140,2.755,141,1.936,143,3.899,144,3.448,148,0.952,150,1.099,173,1.781,174,2.942,184,2.755,193,1.509,196,1.099,197,1.099,198,1.099,234,2.33,251,1.943,270,2.565,280,1.509,343,2.02,345,3.167,389,2.459,459,1.223,460,1.268,461,1.468,462,2.18,470,4.372,727,4.716,728,4.716,806,2.565,807,4.041,815,2.217,816,2.454,868,5.677,929,3.167,1056,4.57,1057,5.069,1058,3.448,1059,5.685,1060,3.825,1061,7.24,1062,7.24,1063,7.24,1064,7.24,1065,7.24,1066,7.24,1067,5.685,1068,6.053,1069,4.397,1070,5.685,1071,3.825,1072,3.825,1073,3.825,1074,3.825,1075,3.825,1076,5.069,1077,6.536,1078,5.827,1079,5.827,1080,3.448,1081,3.825]],["title/classes/R.html",[134,0.199,552,2.353]],["body/classes/R.html",[3,0.076,4,0.059,5,0.067,7,0.111,9,0.856,10,0.538,11,0.344,14,0.465,15,0.557,17,0.465,18,0.831,19,0.275,20,0.014,21,0.888,23,0.682,24,0.557,25,0.208,26,0.199,27,0.187,28,0.004,39,1.049,115,0.585,132,0.006,133,0.004,134,0.317,136,0.745,137,2.121,141,1.561,148,0.955,150,1.256,173,0.903,178,2.383,180,1.658,181,2.036,193,0.918,196,1.102,197,0.557,198,0.557,205,2.429,213,1.125,234,1.878,251,1.87,254,1.717,274,2.092,280,0.578,321,2.123,322,1.881,326,2.185,334,3.057,335,1.811,352,2.044,389,1.496,459,0.621,460,0.643,489,2.764,527,1.316,528,3.149,529,1.397,530,2.221,532,1.492,533,1.182,534,3.487,536,1.492,538,1.492,539,1.245,540,2.764,541,1.316,542,1.316,543,1.316,544,1.316,545,1.316,546,1.862,547,2.639,548,2.372,549,1.706,550,1.706,551,2.535,552,2.092,553,3.907,554,3.363,555,3.67,556,3.514,557,3.554,558,3.094,559,2.535,560,2.372,561,2.372,562,2.372,563,4.251,564,1.492,565,1.492,566,1.492,567,1.492,568,1.492,569,2.221,570,1.492,571,1.979,572,1.492,573,1.492,574,1.492,575,1.492,576,2.092,577,1.492,578,2.372,579,1.492,580,1.492,581,2.372,582,1.492,583,1.492,584,2.805,585,1.492,586,1.492,587,1.492,588,1.492,589,1.492,590,2.952,591,2.372,592,1.492,593,2.952,594,1.788,595,2.764,596,2.603,597,1.492,598,1.245,599,1.492,600,1.492,601,1.492,602,2.952,603,2.372,604,1.492,605,1.397,606,1.316,607,2.663,608,1.492,609,1.492,610,1.316,611,1.492,612,1.492,613,2.372,614,1.492,615,1.492,616,2.372,617,1.492,618,1.492,619,2.372,620,1.492,621,1.492,622,1.492,623,1.492,624,1.706,625,1.492,626,1.492,627,2.337,628,1.492,629,1.492,630,2.372,631,1.492,632,2.221,633,1.397,634,2.092,635,1.979,636,1.397,637,2.952,638,1.492,639,1.397,640,1.492,641,1.492,642,4.097,643,2.952,644,2.372,645,1.492,646,1.492,647,1.492,648,1.492,649,1.492,650,1.492,651,4.097,652,1.492,653,1.316,654,1.436,655,1.492,656,1.492,657,1.492,658,1.492,659,1.492,660,1.492,661,1.492,662,2.952,663,1.492,664,1.492,665,1.492,666,1.492,667,1.492,668,1.492,669,2.372,670,2.372,671,2.372,672,1.492,673,1.492,674,1.492,675,2.372,676,1.492,677,1.492,678,1.492,679,2.372,680,1.492,681,3.363,682,2.372,683,3.363,684,1.492,685,1.492,686,2.952,687,1.492,688,2.952,689,1.492,690,2.952,691,1.492,692,2.952,693,1.492,694,1.492,695,1.492,696,1.492,697,1.492,698,1.492,699,1.492,700,1.492,701,1.492,702,1.492,703,1.492,704,1.492,705,1.492,706,1.492,707,1.492,708,1.492,709,1.492,710,1.492,711,1.492,712,1.492,713,1.492,714,2.372,715,1.492,716,2.372,717,1.492,718,1.492,719,1.492,720,1.492,721,1.492,722,1.492,723,1.492,724,2.372,725,1.492,726,1.492,727,1.316,728,1.316,1082,3.545,1083,2.23,1084,2.23,1085,2.23,1086,2.23,1087,2.23,1088,2.23]],["title/guards/RequestGuard.html",[1089,2.872,1090,3.127]],["body/guards/RequestGuard.html",[3,0.157,4,0.122,5,0.139,7,0.23,9,1.166,19,0.228,20,0.014,23,0.626,25,0.228,26,0.413,27,0.157,28,0.008,50,1.255,115,0.538,132,0.01,133,0.008,134,0.23,148,1.302,150,1.503,178,1.795,180,1.65,184,4.606,193,1.557,196,1.503,197,1.919,198,1.919,251,1.796,254,1.795,280,1.195,296,3.186,322,2.503,348,4.331,459,1.284,460,2.215,461,2.517,462,2.821,466,3.086,467,3.086,481,2.34,745,3.322,754,2.444,789,3.086,806,3.319,815,3.575,816,3.957,910,3.618,965,4.442,968,3.767,969,3.948,971,2.575,1089,3.322,1090,4.716,1091,3.618,1092,4.013,1093,6.014,1094,6.396,1095,6.014,1096,4.613,1097,5.231,1098,4.013,1099,4.613,1100,4.613,1101,6.691,1102,4.613,1103,4.613,1104,4.613,1105,4.613,1106,6.014,1107,3.322,1108,4.613,1109,4.613]],["title/interfaces/RescueLists.html",[0,0.062,121,1.283]],["body/interfaces/RescueLists.html",[0,0.125,1,2.278,2,0.806,3,0.122,4,0.095,5,0.109,6,1.156,7,0.179,8,0.751,10,0.866,11,0.554,12,1.517,13,1.074,14,0.75,15,0.898,16,1.114,17,0.75,18,1.078,19,0.223,20,0.014,21,0.723,22,1.694,23,0.869,24,1.268,25,0.136,26,0.321,27,0.276,28,0.009,29,1.574,30,1.574,31,1.574,32,1.574,33,1.574,34,1.574,35,1.574,36,1.334,37,2.493,38,1.245,39,1.501,40,1.245,41,1.245,42,1.245,43,1.245,44,1.245,45,1.245,46,1.156,47,1.245,48,1.199,49,1.074,50,1.648,51,1.245,52,0.866,53,1.759,54,1.245,55,1.893,56,1.245,57,1.245,58,1.245,59,1.245,60,1.245,61,1.245,62,1.245,63,1.245,64,1.245,65,1.245,66,1.245,67,2.039,68,1.759,69,1.245,70,1.245,71,1.245,72,1.759,73,1.245,74,1.245,75,1.759,76,1.245,77,1.245,78,1.245,79,1.245,80,1.245,81,2.056,82,1.245,83,1.632,84,1.632,85,1.245,86,1.245,87,1.245,88,1.245,89,1.245,90,1.245,91,1.245,92,1.245,93,1.245,94,1.759,95,1.245,96,1.245,97,1.245,98,1.156,99,1.245,100,1.245,101,2.403,102,1.245,103,1.245,104,1.245,105,1.245,106,1.245,107,1.245,108,1.245,109,1.245,110,1.114,111,1.245,112,1.245,113,1.245,114,1.245,115,0.321,116,1.245,117,1.245,118,1.245,119,1.245,120,1.245,121,1.632,122,1.893,123,1.245,124,1.245,125,1.245,126,1.632,127,1.632,128,1.245,129,1.245,130,1.245,131,0.778,132,0.009,133,0.006]],["title/interfaces/Rescues.html",[0,0.062,101,1.283]],["body/interfaces/Rescues.html",[0,0.124,1,2.22,2,0.731,3,0.111,4,0.086,5,0.098,6,1.048,7,0.162,8,0.701,10,0.785,11,0.502,12,1.415,13,0.974,14,0.68,15,0.814,16,1.01,17,0.68,18,1.079,19,0.298,20,0.014,21,0.656,22,1.579,23,0.874,24,1.182,25,0.123,26,0.291,27,0.273,28,0.008,29,1.467,30,1.467,31,1.467,32,1.467,33,1.467,34,1.467,35,1.467,36,1.276,37,2.422,38,1.129,39,1.458,40,1.129,41,1.129,42,1.129,43,1.129,44,1.129,45,1.129,46,1.048,47,1.129,48,1.088,49,0.974,50,1.624,51,1.129,52,0.785,53,1.64,54,1.129,55,1.792,56,1.129,57,1.129,58,1.129,59,1.129,60,1.129,61,1.129,62,1.129,63,1.129,64,1.129,65,1.129,66,1.129,67,1.931,68,1.64,69,1.129,70,1.129,71,1.129,72,1.666,73,1.129,74,1.129,75,1.64,76,1.129,77,1.129,78,1.129,79,1.129,80,1.129,81,1.966,82,1.129,83,1.522,84,1.522,85,1.129,86,1.129,87,1.129,88,1.129,89,1.129,90,1.129,91,1.129,92,1.129,93,1.129,94,1.64,95,1.129,96,1.129,97,1.129,98,1.048,99,1.129,100,1.129,101,2.088,102,2.119,103,2.119,104,2.119,105,2.119,106,2.119,107,2.119,108,2.119,109,2.119,110,1.727,111,2.119,112,2.119,113,2.119,114,1.129,115,0.291,116,1.129,117,1.129,118,1.129,119,2.119,120,2.119,121,1.048,122,1.792,123,1.129,124,1.129,125,1.129,126,1.522,127,1.522,128,1.129,129,1.129,130,1.129,131,0.705,132,0.008,133,0.005,771,3.407]],["title/interfaces/Response.html",[0,0.062,39,0.832]],["body/interfaces/Response.html",[0,0.088,2,1.269,3,0.192,4,0.15,5,0.171,7,0.282,8,1.012,11,1.204,19,0.214,20,0.014,21,1.478,25,0.278,26,0.506,27,0.233,28,0.01,39,1.426,132,0.011,133,0.01,134,0.282,180,1.269,197,1.413,198,1.413,280,1.465,459,1.901,460,1.631,461,1.888,462,2.116,481,2.659,806,2.49,930,4.435,963,4.072,965,4.281,966,4.922,968,3.543,969,4.032,970,4.922,971,3.156,972,3.783,973,3.783,1110,4.435,1111,4.072,1112,4.919]],["title/guards/ResponseGuard.html",[1089,2.872,1113,3.127]],["body/guards/ResponseGuard.html",[3,0.132,4,0.102,5,0.117,7,0.193,9,1.036,11,1.068,12,1.83,13,1.973,19,0.202,20,0.014,23,0.556,25,0.202,26,0.346,27,0.132,28,0.007,36,0.807,39,1.446,50,1.115,115,0.478,132,0.009,133,0.007,134,0.193,140,3.833,143,4.792,148,1.156,150,1.335,178,2.568,180,1.647,193,1.383,196,1.335,197,1.921,198,1.921,251,1.038,254,2.381,280,1.001,296,2.829,335,1.199,348,3.846,459,1.927,460,2.217,461,2.566,462,3.024,481,2.078,534,1.86,569,3.346,605,2.422,745,4.406,754,2.048,806,3.544,815,3.773,816,4.175,929,4.753,965,4.134,968,3.346,969,3.61,971,2.157,1047,6.025,1080,4.798,1091,3.031,1094,6.025,1097,4.646,1098,3.363,1107,2.784,1113,4.188,1114,3.363,1115,5.341,1116,5.341,1117,3.866,1118,3.866,1119,3.866,1120,5.341,1121,6.6,1122,6.119,1123,3.866,1124,3.866,1125,3.866,1126,3.866,1127,3.866,1128,3.866,1129,3.866,1130,3.866,1131,5.341,1132,3.866,1133,3.866,1134,5.341,1135,3.866,1136,3.866,1137,3.866,1138,3.866,1139,3.866]],["title/classes/SerializeHelper.html",[134,0.199,610,2.353]],["body/classes/SerializeHelper.html",[3,0.079,4,0.061,5,0.07,7,0.116,9,0.709,10,0.559,11,0.358,14,0.484,15,0.58,17,0.484,18,0.842,19,0.27,20,0.014,21,0.467,23,0.69,24,0.58,25,0.212,26,0.207,27,0.19,28,0.004,39,1.072,115,0.576,132,0.006,133,0.004,134,0.321,136,0.774,137,1.911,141,1.61,148,0.792,150,0.914,173,0.94,178,2.176,180,1.67,181,2.081,193,0.947,196,0.914,197,0.58,198,0.58,205,2.413,213,1.17,251,1.889,254,1.762,274,2.158,280,0.601,321,1.116,322,1.368,326,2.222,334,3.1,335,1.134,352,2.076,389,1.544,459,0.645,460,0.669,489,2.836,527,1.369,528,2.836,529,1.453,530,2.291,532,1.552,533,1.229,534,3.516,536,1.552,538,1.552,539,1.295,540,2.836,541,1.369,542,1.369,543,1.369,544,1.369,545,1.369,546,1.911,547,2.69,548,2.447,549,1.759,550,1.759,551,2.591,552,1.369,553,3.438,554,2.447,555,3.029,556,3.249,557,3.147,558,1.938,559,1.844,560,2.447,561,2.447,562,1.552,563,3.974,564,1.552,565,1.552,566,1.552,567,1.552,568,1.552,569,2.291,570,1.552,571,2.041,572,1.552,573,1.552,574,1.552,575,1.552,576,2.158,577,1.552,578,2.447,579,1.552,580,1.552,581,2.447,582,1.552,583,1.552,584,2.868,585,1.552,586,1.552,587,1.552,588,1.552,589,1.552,590,3.029,591,2.447,592,1.552,593,3.029,594,1.844,595,2.836,596,2.671,597,1.552,598,1.295,599,1.552,600,1.552,601,1.552,602,3.029,603,2.447,604,1.552,605,1.453,606,1.369,607,2.962,608,1.552,609,1.552,610,2.158,611,2.447,612,3.438,613,2.447,614,1.552,615,1.552,616,2.447,617,1.552,618,2.447,619,2.447,620,1.552,621,1.552,622,1.552,623,1.552,624,1.759,625,1.552,626,1.552,627,2.398,628,1.552,629,1.552,630,2.447,631,1.552,632,2.291,633,1.453,634,2.158,635,2.041,636,1.453,637,3.029,638,1.552,639,1.453,640,1.552,641,1.552,642,4.16,643,3.029,644,2.447,645,1.552,646,1.552,647,1.552,648,1.552,649,1.552,650,1.552,651,4.16,652,1.552,653,1.369,654,1.481,655,1.552,656,1.552,657,1.552,658,1.552,659,1.552,660,1.552,661,1.552,662,3.029,663,1.552,664,1.552,665,1.552,666,1.552,667,1.552,668,1.552,669,2.447,670,2.447,671,2.447,672,1.552,673,1.552,674,1.552,675,2.447,676,1.552,677,1.552,678,1.552,679,2.447,680,1.552,681,3.438,682,2.447,683,3.438,684,1.552,685,1.552,686,3.029,687,1.552,688,3.029,689,1.552,690,3.029,691,1.552,692,3.029,693,1.552,694,1.552,695,1.552,696,1.552,697,1.552,698,1.552,699,1.552,700,1.552,701,1.552,702,1.552,703,1.552,704,1.552,705,1.552,706,1.552,707,1.552,708,1.552,709,1.552,710,1.552,711,1.552,712,1.552,713,1.552,714,2.447,715,1.552,716,2.447,717,1.552,718,1.552,719,1.552,720,1.552,721,1.552,722,1.552,723,1.552,724,2.447,725,1.552,726,1.552,727,1.369,728,1.369,1140,3.657,1141,3.657,1142,2.32,1143,2.32]],["title/classes/Swagger.html",[134,0.199,546,1.683]],["body/classes/Swagger.html",[3,0.074,4,0.058,5,0.066,7,0.109,9,1.053,10,0.527,11,0.337,14,0.456,15,0.546,17,0.456,18,0.85,19,0.273,20,0.014,21,0.44,23,0.633,24,0.546,25,0.206,26,0.196,27,0.185,28,0.004,39,1.037,115,0.62,132,0.006,133,0.004,134,0.314,136,0.73,137,2.443,141,1.536,148,1.176,150,1.357,173,0.886,178,2.531,180,1.651,181,2.345,193,0.904,196,1.357,197,0.546,198,0.546,205,2.474,213,1.103,234,1.849,251,1.861,254,1.694,274,2.059,280,0.566,321,1.052,322,1.306,326,2.166,334,3.208,335,1.082,352,2.028,389,1.838,459,0.608,460,0.631,489,2.728,527,1.29,528,3.627,529,1.37,530,2.186,532,1.463,533,1.158,534,3.472,536,1.463,538,1.463,539,1.22,540,2.728,541,1.29,542,1.29,543,1.29,544,1.29,545,1.29,546,2.098,547,2.613,548,2.335,549,2.391,550,1.679,551,2.92,552,1.29,553,3.325,554,2.335,555,2.913,556,3.28,557,3.067,558,1.849,559,2.196,560,2.335,561,2.335,562,1.463,563,4.351,564,1.463,565,1.463,566,1.463,567,1.463,568,2.335,569,2.186,570,1.463,571,1.948,572,1.463,573,1.463,574,1.463,575,1.463,576,2.059,577,1.463,578,2.335,579,1.463,580,1.463,581,2.335,582,2.335,583,1.463,584,3.031,585,2.335,586,1.463,587,2.335,588,1.463,589,2.913,590,3.634,591,3.634,592,1.463,593,2.913,594,1.76,595,2.728,596,2.569,597,1.463,598,1.22,599,1.463,600,1.463,601,1.463,602,2.913,603,2.335,604,1.463,605,1.37,606,1.29,607,2.633,608,1.463,609,1.463,610,1.29,611,1.463,612,1.463,613,2.335,614,1.463,615,1.463,616,2.335,617,1.463,618,1.463,619,2.335,620,1.463,621,1.463,622,1.463,623,1.463,624,1.679,625,1.463,626,1.463,627,2.307,628,1.463,629,1.463,630,2.335,631,1.463,632,2.186,633,1.37,634,2.059,635,1.948,636,1.37,637,2.913,638,1.463,639,1.37,640,1.463,641,1.463,642,4.065,643,2.913,644,2.335,645,1.463,646,1.463,647,1.463,648,1.463,649,1.463,650,1.463,651,4.065,652,1.463,653,1.29,654,1.413,655,1.463,656,1.463,657,1.463,658,1.463,659,1.463,660,1.463,661,1.463,662,2.913,663,1.463,664,1.463,665,1.463,666,1.463,667,1.463,668,1.463,669,2.335,670,2.335,671,2.335,672,1.463,673,1.463,674,1.463,675,2.335,676,1.463,677,1.463,678,1.463,679,2.335,680,1.463,681,3.325,682,2.335,683,3.325,684,1.463,685,1.463,686,2.913,687,1.463,688,2.913,689,1.463,690,2.913,691,1.463,692,2.913,693,1.463,694,1.463,695,1.463,696,1.463,697,1.463,698,1.463,699,1.463,700,1.463,701,1.463,702,1.463,703,1.463,704,1.463,705,1.463,706,1.463,707,1.463,708,1.463,709,1.463,710,1.463,711,1.463,712,1.463,713,1.463,714,2.335,715,1.463,716,2.335,717,1.463,718,1.463,719,1.463,720,1.463,721,1.463,722,1.463,723,1.463,724,2.335,725,1.463,726,1.463,727,1.29,728,1.29,1144,3.49,1145,3.49,1146,3.49,1147,3.49,1148,2.187,1149,2.187,1150,2.187,1151,2.187,1152,2.187,1153,2.187,1154,2.187,1155,2.187]],["title/classes/Tag.html",[134,0.199,385,2.011]],["body/classes/Tag.html",[0,0.062,3,0.135,4,0.105,5,0.12,7,0.197,8,0.988,9,1.202,18,0.518,19,0.306,20,0.014,23,0.77,25,0.265,27,0.211,28,0.007,36,0.827,115,0.691,131,1.342,132,0.009,133,0.007,134,0.332,136,1.323,148,1.688,150,0.99,151,2.392,166,1.373,193,1.407,196,0.99,205,2.485,264,2.739,270,1.744,280,1.605,307,3.159,310,4.464,311,4.464,312,3.912,313,2.495,314,3.634,315,3.912,316,4.464,317,2.293,318,4.26,321,3.362,322,2.614,323,2.854,324,2.338,326,2.614,328,3.205,332,2.854,333,3.912,334,2.613,335,2.068,337,3.107,340,1.323,343,1.373,369,2.338,370,2.651,371,4.178,374,3.032,375,2.212,376,2.099,377,1.672,378,2.739,379,2.739,380,3.46,381,3.46,382,1.906,383,4.028,384,1.906,385,2.739,386,3.126,387,3.403,388,2.212,389,2.616,390,2.212,391,2.212,392,2.212,393,2.212,394,1.822,395,2.212,396,2.212,397,2.212,398,2.212,399,2.212,400,3.032,401,3.634,402,3.032,403,2.212,404,2.212,405,2.338,406,2.854,1156,3.963,1157,3.963,1158,3.963,1159,5.902,1160,3.447,1161,3.447,1162,3.447,1163,3.447,1164,3.447,1165,3.447,1166,3.447,1167,3.447]],["title/controllers/TagsController.html",[189,2.113,1168,2.872]],["body/controllers/TagsController.html",[3,0.153,4,0.119,5,0.136,7,0.224,9,1.362,18,1.024,19,0.266,20,0.014,25,0.266,26,0.403,27,0.153,28,0.008,115,0.628,132,0.01,133,0.008,134,0.224,141,1.982,148,1.579,150,1.755,151,3.212,166,1.56,180,1.637,189,2.385,191,2.513,193,1.533,196,1.823,197,1.125,198,1.125,199,3.243,200,3.243,201,3.243,202,3.243,205,1.448,313,2.802,317,3.434,369,4.144,385,2.985,387,2.821,405,4.144,636,2.821,654,2.398,731,4.4,732,3.708,736,3.012,744,2.821,750,5.185,751,3.531,752,3.334,753,4.642,754,2.385,755,5.508,765,3.917,766,5.149,767,3.917,768,3.917,795,3.334,1168,4.263,1169,3.917,1170,3.917,1171,4.503,1172,3.917,1173,5.149,1174,4.503,1175,4.503,1176,4.503,1177,3.243,1178,7.024,1179,5.149,1180,4.503,1181,3.917,1182,3.708,1183,3.917,1184,4.503,1185,4.503,1186,3.917,1187,4.503,1188,4.503,1189,4.503,1190,3.917,1191,3.917]],["title/modules/TagsModule.html",[208,1.919,221,2.668]],["body/modules/TagsModule.html",[3,0.195,4,0.151,5,0.173,20,0.014,25,0.28,26,0.512,27,0.195,28,0.01,132,0.012,133,0.01,134,0.285,191,3.841,208,3.551,210,3.192,211,3.375,212,3.827,213,2.884,214,3.375,215,4.119,216,4.624,221,5.385,223,4.604,224,3.827,225,3.827,1168,5.315,1182,5.189,1183,4.975,1192,4.975,1193,4.975,1194,4.975,1195,5.72,1196,5.72]],["title/injectables/TagsService.html",[481,1.552,1182,2.498]],["body/injectables/TagsService.html",[3,0.16,4,0.125,5,0.142,7,0.235,9,1.436,18,1.033,19,0.271,20,0.014,25,0.256,26,0.422,27,0.16,28,0.008,115,0.662,132,0.01,133,0.008,134,0.235,145,2.631,148,1.641,150,1.85,180,1.702,193,1.58,196,1.85,292,3.395,313,2.675,317,3.464,343,1.634,352,1.574,385,3.892,481,2.373,482,2.782,653,2.782,654,2.471,731,4.479,732,3.821,744,3.821,752,3.076,795,3.076,808,3.154,854,5.148,1170,5.306,1172,5.306,1177,4.392,1181,4.101,1182,3.821,1197,4.101,1198,4.715,1199,4.715,1200,4.715,1201,4.715,1202,4.715,1203,4.715,1204,4.715,1205,4.101,1206,4.715,1207,4.715,1208,4.715,1209,4.715,1210,4.715,1211,4.715,1212,4.715,1213,4.715,1214,4.715,1215,4.715,1216,4.715,1217,4.715,1218,4.715]],["title/injectables/TimeoutInterceptor.html",[481,1.552,1219,3.127]],["body/injectables/TimeoutInterceptor.html",[3,0.18,4,0.14,5,0.159,7,0.263,9,1.023,19,0.2,20,0.014,25,0.27,26,0.472,27,0.18,28,0.009,115,0.472,132,0.011,133,0.009,134,0.263,148,1.142,150,1.319,180,1.599,181,2.138,184,4.463,193,1.697,196,1.319,280,1.367,322,2.451,459,1.982,481,2.549,482,3.114,493,6.664,873,4.139,963,4.718,964,5.137,965,4.667,966,5.365,968,3.306,969,4.203,970,4.718,971,2.946,973,3.531,974,4.591,1107,3.801,1219,5.137,1220,4.591,1221,6.552,1222,6.552,1223,6.552,1224,6.552,1225,5.699,1226,5.278,1227,6.552,1228,5.278,1229,6.552,1230,5.278,1231,5.278,1232,5.278,1233,5.278,1234,5.278,1235,5.278,1236,5.278,1237,5.278]],["title/injectables/TransformInterceptor.html",[481,1.552,1111,2.872]],["body/injectables/TransformInterceptor.html",[0,0.086,3,0.188,4,0.146,5,0.167,7,0.275,9,1.07,11,1.038,19,0.209,20,0.014,21,1.111,25,0.275,26,0.494,27,0.229,28,0.009,39,1.152,115,0.494,132,0.011,133,0.009,134,0.275,148,1.195,150,1.379,180,1.239,193,1.744,196,1.379,197,1.379,198,1.379,280,1.43,459,2.105,460,1.592,461,1.843,462,2.065,481,2.621,482,3.257,806,2.43,930,4.329,963,5.234,964,4.329,965,4.741,966,5.45,968,4.219,969,4.288,970,4.85,971,3.081,972,3.693,973,3.693,1110,4.329,1111,4.85,1112,4.802,1238,5.52]],["title/classes/UpdateTagsDto.html",[134,0.199,405,2.353]],["body/classes/UpdateTagsDto.html",[0,0.08,3,0.175,4,0.136,5,0.155,8,0.761,19,0.28,20,0.014,23,0.769,25,0.288,27,0.24,28,0.009,115,0.68,131,1.395,132,0.011,133,0.009,134,0.368,136,1.717,166,1.782,205,2.074,264,2.593,270,2.264,280,1.669,307,2.611,313,1.924,326,2.634,335,1.595,340,1.717,343,1.782,369,3.034,370,3.44,371,4.411,374,3.598,375,2.87,376,2.724,377,2.17,378,3.251,379,3.251,380,3.598,381,3.598,382,2.474,383,3.93,384,2.474,385,2.593,386,2.593,387,3.221,388,2.87,389,2.972,390,2.87,391,2.87,392,2.87,393,2.87,394,2.365,395,2.87,396,2.87,397,2.87,398,2.87,399,2.87,400,2.87,401,3.44,402,2.87,403,2.87,404,2.87,405,3.803,406,3.703]],["title/classes/UpdateUserDto.html",[134,0.199,474,2.353]],["body/classes/UpdateUserDto.html",[0,0.059,3,0.13,4,0.101,5,0.116,8,0.567,19,0.287,20,0.014,23,0.848,25,0.261,27,0.207,28,0.006,49,1.965,50,1.371,52,0.923,72,2.064,115,0.544,131,1.148,132,0.009,133,0.006,134,0.327,136,1.277,166,1.326,197,1.642,198,1.642,205,1.958,251,1.423,254,1.489,264,1.929,270,1.685,280,1.373,307,2.148,313,1.432,324,4.071,326,2.739,335,1.187,340,1.277,343,1.326,350,2.397,352,1.277,374,2.96,375,2.135,376,2.027,377,1.615,378,3.6,379,3.48,380,3.985,381,3.985,382,1.841,383,3.396,384,1.841,386,1.929,388,2.135,389,2.568,390,2.135,391,2.135,392,2.135,393,2.96,394,1.76,395,2.135,396,2.135,397,2.135,398,2.135,399,2.135,400,2.135,402,3.851,403,3.667,404,2.135,407,2.257,408,2.56,409,3.812,410,5.142,411,5.142,412,5.142,423,2.397,424,3.819,425,3.322,426,4.732,427,2.397,428,1.929,429,3.819,430,2.755,431,2.755,432,3.129,433,2.755,434,2.755,435,2.755,436,2.755,437,2.755,438,2.755,439,2.755,440,2.755,441,2.755,442,3.819,443,2.755,444,3.819,445,2.755,446,2.755,447,1.929,448,2.755,449,2.56,450,2.755,451,2.755,452,2.755,453,2.755,454,2.755,455,2.755,456,2.56,457,2.755,458,2.755,459,1.828,460,1.895,461,1.77,462,1.984,463,3.819,464,3.819,465,2.755,466,3.548,467,3.548,468,2.755,469,2.755,470,3.548,471,2.755,472,2.755,473,2.755,474,3.129,475,2.755]],["title/classes/User.html",[52,0.961,134,0.199]],["body/classes/User.html",[0,0.041,3,0.09,4,0.07,5,0.08,7,0.131,8,0.814,9,0.952,18,0.344,19,0.306,20,0.014,23,0.841,25,0.225,27,0.167,28,0.004,36,0.549,49,1.948,50,1.306,52,0.973,72,2.06,115,0.583,131,1.062,132,0.007,133,0.004,134,0.274,136,0.879,148,1.648,150,0.658,151,1.159,166,0.912,193,1.045,196,0.658,197,1.679,198,1.679,205,2.363,251,1.476,254,1.57,264,2.035,270,1.159,280,1.271,307,2.897,310,3.533,311,3.533,312,2.906,313,2.058,314,2.7,315,2.906,316,3.533,317,1.703,318,3.164,321,3.011,322,2.341,323,1.896,324,4.149,326,2.514,328,2.381,332,1.896,333,2.906,334,1.941,335,1.706,337,2.065,340,0.879,343,0.912,350,2.528,352,0.879,374,2.252,375,1.469,376,1.395,377,1.111,378,3.156,379,2.991,380,3.992,381,3.992,382,1.267,383,3.492,384,1.267,386,2.474,388,1.469,389,2.071,390,1.469,391,1.469,392,1.469,393,2.252,394,1.211,395,1.469,396,1.469,397,1.469,398,1.469,399,1.469,400,2.252,402,3.925,403,3.07,404,1.469,407,1.553,408,1.761,409,3.446,410,5.151,411,5.151,412,5.151,423,1.649,424,2.906,425,2.528,426,4.691,427,2.528,428,2.035,429,3.961,430,2.906,431,2.906,432,3.245,433,1.896,434,1.896,435,1.896,436,1.896,437,2.906,438,2.906,439,2.906,440,2.906,441,2.906,442,3.961,443,2.906,444,3.961,445,2.906,446,2.906,447,2.035,448,2.906,449,2.7,450,2.906,451,2.906,452,2.906,453,2.906,454,2.906,455,2.906,456,2.7,457,2.906,458,2.906,459,1.87,460,1.938,461,1.836,462,2.058,463,3.961,464,3.961,465,2.906,466,3.68,467,3.68,468,2.906,469,2.906,470,3.68,471,2.906,472,2.906,473,1.896,474,1.553,475,1.896,1159,5.27,1160,2.29,1161,2.29,1162,2.29,1163,2.29,1164,2.29,1165,2.29,1166,2.29,1167,2.29,1239,2.633,1240,2.633,1241,2.633,1242,2.633,1243,2.633,1244,2.633,1245,2.633,1246,2.633,1247,2.633]],["title/interfaces/UserPost.html",[0,0.062,84,1.283]],["body/interfaces/UserPost.html",[0,0.124,1,2.209,2,0.718,3,0.109,4,0.085,5,0.097,6,1.029,7,0.159,8,0.691,10,0.771,11,0.493,12,1.396,13,0.957,14,0.668,15,0.799,16,0.992,17,0.668,18,1.078,19,0.296,20,0.014,21,0.644,22,1.558,23,0.872,24,1.167,25,0.121,26,0.286,27,0.273,28,0.008,29,1.448,30,1.448,31,1.448,32,1.448,33,1.448,34,1.448,35,1.448,36,1.54,37,2.408,38,1.109,39,1.45,40,1.109,41,1.109,42,1.109,43,1.109,44,1.109,45,1.109,46,1.029,47,1.109,48,1.068,49,0.957,50,1.654,51,1.109,52,0.771,53,1.618,54,1.109,55,1.773,56,1.109,57,1.109,58,1.109,59,1.109,60,1.109,61,1.109,62,1.109,63,1.109,64,1.109,65,1.109,66,1.109,67,1.91,68,1.618,69,1.109,70,1.109,71,1.109,72,1.648,73,1.109,74,1.109,75,1.618,76,1.109,77,1.109,78,1.109,79,1.109,80,1.109,81,2.337,82,1.109,83,1.95,84,1.773,85,2.1,86,2.1,87,2.1,88,2.1,89,2.1,90,2.1,91,2.1,92,2.1,93,2.1,94,2.234,95,2.1,96,2.1,97,2.1,98,1.029,99,1.109,100,1.109,101,1.95,102,1.109,103,1.109,104,1.109,105,1.109,106,1.109,107,1.109,108,1.109,109,1.109,110,0.992,111,1.109,112,1.109,113,1.109,114,1.109,115,0.286,116,1.109,117,1.109,118,1.109,119,1.109,120,1.109,121,1.029,122,1.773,123,1.109,124,1.109,125,1.109,126,1.502,127,1.502,128,1.109,129,1.109,130,1.109,131,0.692,132,0.008,133,0.005]],["title/interfaces/UserPosts.html",[0,0.062,98,1.283]],["body/interfaces/UserPosts.html",[0,0.125,1,2.273,2,0.8,3,0.121,4,0.094,5,0.108,6,1.146,7,0.178,8,0.747,10,0.859,11,0.549,12,1.509,13,1.065,14,0.744,15,0.89,16,1.105,17,0.744,18,1.078,19,0.241,20,0.014,21,0.717,22,1.684,23,0.868,24,1.261,25,0.135,26,0.319,27,0.276,28,0.008,29,1.564,30,1.564,31,1.564,32,1.564,33,1.564,34,1.564,35,1.564,36,1.329,37,2.487,38,1.235,39,1.498,40,1.235,41,1.235,42,1.235,43,1.235,44,1.235,45,1.235,46,1.146,47,1.235,48,1.189,49,1.065,50,1.663,51,1.235,52,0.859,53,1.748,54,1.235,55,1.884,56,1.235,57,1.235,58,1.235,59,1.235,60,1.235,61,1.235,62,1.235,63,1.235,64,1.235,65,1.235,66,1.235,67,2.03,68,1.748,69,1.235,70,1.235,71,1.235,72,1.751,73,1.235,74,1.235,75,1.748,76,1.235,77,1.235,78,1.235,79,1.235,80,1.235,81,2.049,82,1.235,83,1.623,84,2.049,85,1.235,86,1.235,87,1.235,88,1.235,89,1.235,90,1.235,91,1.235,92,1.235,93,1.235,94,1.748,95,1.235,96,1.235,97,1.235,98,1.623,99,2.207,100,2.207,101,2.049,102,1.235,103,1.235,104,1.235,105,1.235,106,1.235,107,1.235,108,1.235,109,1.235,110,1.105,111,1.235,112,1.235,113,1.235,114,1.235,115,0.319,116,1.235,117,1.235,118,1.235,119,1.235,120,1.235,121,1.146,122,1.884,123,1.235,124,1.235,125,1.235,126,1.623,127,1.623,128,1.235,129,1.235,130,1.235,131,0.771,132,0.008,133,0.006]],["title/controllers/UsersController.html",[189,2.113,1248,2.872]],["body/controllers/UsersController.html",[3,0.148,4,0.115,5,0.132,7,0.217,9,1.261,18,0.97,19,0.246,20,0.014,25,0.273,26,0.389,27,0.148,28,0.007,52,1.825,115,0.582,131,0.942,132,0.01,133,0.007,134,0.217,141,1.916,148,1.407,150,1.625,151,2.863,166,1.509,173,2.344,180,1.459,181,3.005,189,2.306,191,2.429,193,1.499,196,1.625,197,1.088,198,1.088,199,3.135,200,3.135,201,3.135,202,3.135,205,1.4,270,1.916,313,2.941,317,3.285,407,4.089,427,4.877,474,4.089,576,4.537,654,3.005,729,4.168,736,2.912,739,5.657,750,4.539,751,3.413,752,3.639,753,4.539,754,2.306,755,5.099,756,6.029,762,5.657,795,3.818,1173,3.786,1177,3.135,1179,3.786,1186,3.786,1190,3.786,1191,3.786,1248,4.168,1249,3.786,1250,5.035,1251,3.786,1252,5.788,1253,4.353,1254,4.353,1255,3.786,1256,4.353,1257,4.353,1258,6.931,1259,4.353,1260,4.353,1261,4.353,1262,3.786,1263,3.626,1264,3.786,1265,4.353,1266,4.353,1267,4.353,1268,4.353,1269,4.353,1270,4.353,1271,4.353]],["title/modules/UsersModule.html",[208,1.919,222,2.668]],["body/modules/UsersModule.html",[3,0.195,4,0.151,5,0.173,20,0.014,25,0.28,26,0.512,27,0.195,28,0.01,132,0.012,133,0.01,134,0.285,191,3.841,208,3.551,210,3.192,211,3.375,212,3.827,213,2.884,214,3.375,215,4.119,216,4.624,222,5.385,223,4.604,224,3.827,225,3.827,1248,5.315,1263,5.189,1264,4.975,1272,4.975,1273,4.975,1274,4.975,1275,5.72,1276,5.72]],["title/injectables/UsersService.html",[481,1.552,1263,2.498]],["body/injectables/UsersService.html",[3,0.151,4,0.117,5,0.134,7,0.221,8,0.868,9,1.446,18,1.021,19,0.283,20,0.014,23,0.61,25,0.265,26,0.397,27,0.151,28,0.012,48,1.481,52,1.834,115,0.667,131,1.269,132,0.01,133,0.007,134,0.221,145,2.476,148,1.671,150,1.864,180,1.674,193,1.518,196,1.864,296,2.35,313,2.613,317,3.428,340,1.957,343,1.537,351,2.779,428,2.237,481,2.281,482,2.617,598,3.271,654,2.374,731,4.112,732,3.672,738,3.271,744,2.779,795,2.956,843,5.089,851,4.596,852,4.596,853,3.859,854,5.029,862,5.147,863,5.147,865,3.479,1159,5.476,1177,4.221,1205,3.859,1250,5.099,1251,5.099,1255,5.099,1262,3.859,1263,3.672,1277,3.859,1278,4.436,1279,4.436,1280,4.436,1281,4.436,1282,4.436,1283,4.436,1284,4.436,1285,4.436,1286,4.436,1287,4.436,1288,4.436,1289,4.436,1290,4.436,1291,4.436,1292,4.436]],["title/classes/ValidationFailedFilter.html",[134,0.199,1293,3.127]],["body/classes/ValidationFailedFilter.html",[3,0.177,4,0.138,5,0.157,7,0.259,9,1.008,11,1,13,1.94,16,2.012,19,0.268,20,0.014,24,1.298,25,0.246,26,0.465,27,0.177,28,0.009,39,1.084,115,0.465,132,0.011,133,0.009,134,0.259,136,1.734,141,2.287,143,4.34,144,4.074,148,1.124,150,1.298,173,2.104,174,3.476,184,3.255,193,1.68,196,1.298,197,1.298,198,1.298,234,2.752,251,2.047,280,1.68,343,1.801,459,1.446,460,1.498,461,1.734,462,2.427,727,3.065,728,3.065,806,2.856,807,3.948,815,2.62,816,2.9,929,3.742,1058,4.074,1059,6.154,1060,5.644,1067,6.154,1068,6.445,1070,5.644,1071,4.52,1072,4.52,1073,4.52,1074,4.52,1075,4.52,1080,4.074,1081,4.52,1293,5.087,1294,5.644,1295,7.409,1296,5.196,1297,5.196,1298,6.488,1299,5.196,1300,5.196]],["title/coverage.html",[1301,4.278]],["body/coverage.html",[0,0.125,1,0.78,5,0.076,6,2.477,19,0.095,20,0.014,28,0.004,29,0.78,30,0.78,31,0.78,32,0.78,33,0.78,34,0.78,35,0.78,39,0.525,46,0.809,52,0.939,55,0.809,81,0.809,83,0.809,84,0.809,98,0.809,101,0.809,121,0.809,122,0.809,126,0.809,127,0.809,132,0.007,133,0.004,134,0.381,135,1.973,137,3.436,138,2.806,139,3.056,173,1.019,178,2.917,179,1.812,189,2.845,190,1.812,192,2.189,214,1.484,215,1.404,226,1.973,227,1.812,252,1.973,307,1.019,308,3.056,309,1.812,326,0.941,328,1.484,369,1.484,370,3.593,371,1.576,378,1.269,379,1.269,385,1.269,386,1.965,405,1.484,407,1.484,408,3.593,409,1.576,425,1.576,456,1.683,474,1.484,478,1.683,481,2.391,483,2.189,511,4.705,527,1.484,528,3.639,529,3.639,541,1.484,542,1.484,543,1.484,544,1.484,545,1.484,546,1.645,547,1.21,549,1.21,550,1.21,552,1.484,559,1.269,571,1.404,610,1.484,634,1.484,729,1.812,730,2.189,734,1.683,738,1.404,759,1.484,769,3.696,772,1.576,783,1.576,843,1.683,844,3.056,848,1.812,884,4.211,937,3.74,942,1.973,957,1.973,958,2.189,959,2.189,975,2.189,1028,2.806,1044,1.973,1045,2.189,1046,2.189,1056,1.973,1057,2.189,1058,3.056,1076,2.189,1089,2.806,1090,1.973,1092,2.189,1110,3.056,1111,1.812,1113,1.973,1114,2.189,1168,1.812,1169,2.189,1182,1.576,1197,2.189,1219,1.973,1220,2.189,1248,1.812,1249,2.189,1263,1.576,1277,2.189,1293,1.973,1294,2.189,1301,1.973,1302,2.516,1303,2.516,1304,6.798,1305,8.059,1306,8.243,1307,5.81,1308,2.516,1309,2.516,1310,5.81,1311,2.516,1312,2.516,1313,2.189,1314,2.189,1315,1.973,1316,2.516,1317,7.072,1318,3.897,1319,6.409,1320,2.189,1321,6.764,1322,2.189,1323,2.189,1324,2.189,1325,2.189,1326,2.189,1327,2.189,1328,2.189,1329,2.189,1330,2.189,1331,2.189,1332,2.189,1333,3.056,1334,2.189,1335,2.189,1336,2.189,1337,2.189,1338,3.39,1339,2.189,1340,2.516,1341,2.189,1342,2.516,1343,2.516,1344,3.74,1345,3.39,1346,3.39,1347,3.74,1348,4.769,1349,3.897,1350,2.189,1351,4.769,1352,2.189,1353,2.189,1354,3.39,1355,2.189,1356,2.189,1357,5.37,1358,2.516,1359,2.516,1360,4.769,1361,3.897,1362,3.897,1363,3.897,1364,4.671,1365,2.189,1366,2.189,1367,2.189,1368,2.516,1369,2.516,1370,2.516,1371,2.516]],["title/dependencies.html",[211,2.832,1372,3.324]],["body/dependencies.html",[4,0.131,20,0.014,26,0.443,28,0.008,132,0.011,133,0.008,134,0.314,140,3.105,166,1.717,184,3.105,205,1.594,211,2.924,238,3.886,240,3.886,242,3.886,244,4.311,343,2.524,345,3.569,347,3.886,376,2.625,377,2.092,382,2.384,539,2.766,540,3.105,546,2.092,584,2.766,740,3.569,790,3.315,907,4.311,938,3.569,950,3.886,971,2.766,972,3.315,994,4.311,1315,4.938,1373,4.956,1374,6.922,1375,4.956,1376,4.956,1377,4.956,1378,4.956,1379,4.956,1380,6.298,1381,6.922,1382,4.956,1383,4.956,1384,6.298,1385,4.956,1386,4.956,1387,4.956,1388,4.956,1389,4.956,1390,4.956,1391,6.922,1392,6.922,1393,6.298,1394,4.956,1395,6.298,1396,4.956,1397,4.956,1398,4.956,1399,4.956,1400,4.956,1401,4.956,1402,4.956,1403,4.956,1404,4.956,1405,4.956,1406,4.956,1407,4.956,1408,4.956,1409,4.956,1410,4.956,1411,4.956,1412,4.956,1413,4.956,1414,4.956,1415,6.298,1416,4.956,1417,4.956,1418,4.956,1419,4.956,1420,4.956,1421,4.956,1422,4.956,1423,4.956,1424,3.886,1425,4.956,1426,4.956,1427,4.956,1428,4.956,1429,4.956]],["title/miscellaneous/enumerations.html",[1430,1.855,1431,4.175]],["body/miscellaneous/enumerations.html",[7,0.316,20,0.013,28,0.011,132,0.012,133,0.011,322,2.738,1028,4.571,1033,5.738,1034,5.738,1035,5.738,1430,3.543,1431,5.522,1432,6.348]],["title/miscellaneous/functions.html",[1430,1.855,1433,4.175]],["body/miscellaneous/functions.html",[7,0.228,9,1.575,19,0.278,20,0.014,21,0.923,28,0.008,36,0.957,50,1.392,115,0.726,132,0.01,133,0.008,137,2.528,138,3.302,139,4.697,141,2.019,150,2.03,179,4.804,196,1.965,214,3.936,233,3.302,296,3.747,322,2.816,326,2.241,334,2.206,335,1.422,378,3.021,769,2.559,797,3.068,811,3.068,812,3.068,884,3.596,908,5.231,909,3.989,911,4.697,912,3.989,938,5.421,1333,4.697,1341,5.211,1344,3.596,1345,6.153,1346,6.153,1347,3.596,1350,5.211,1352,3.989,1353,5.211,1354,6.153,1355,3.989,1356,5.211,1364,3.989,1365,5.211,1366,5.211,1367,5.211,1430,2.559,1433,3.989,1434,4.585,1435,4.697,1436,7.074,1437,5.211,1438,5.211,1439,6.671,1440,4.585,1441,4.585,1442,4.585,1443,5.803,1444,4.585,1445,4.585,1446,5.99,1447,5.99,1448,4.585,1449,5.99]],["title/index.html",[7,0.166,1450,3.324,1451,3.324]],["body/index.html",[4,0.145,20,0.014,28,0.009,132,0.011,133,0.009,181,2.212,186,4.749,266,4.281,267,5.246,297,6.292,461,1.823,490,6.848,1225,4.749,1301,4.281,1424,4.281,1443,4.749,1452,5.46,1453,5.46,1454,6.69,1455,5.46,1456,5.46,1457,5.46,1458,5.46,1459,5.46,1460,5.46,1461,5.46,1462,5.46,1463,7.973,1464,5.46,1465,5.46,1466,5.46,1467,5.46,1468,6.69,1469,5.46,1470,5.46,1471,5.46,1472,6.69,1473,5.46,1474,5.46,1475,5.46,1476,6.69,1477,6.69,1478,5.46,1479,5.46,1480,5.46,1481,5.46,1482,5.46,1483,5.46,1484,5.46,1485,5.46,1486,5.46,1487,5.46,1488,5.46,1489,5.46,1490,5.46,1491,5.46,1492,5.46,1493,5.46,1494,5.46,1495,5.46,1496,5.46,1497,5.46,1498,5.46,1499,5.46]],["title/modules.html",[210,3.045]],["body/modules.html",[20,0.012,28,0.01,132,0.012,133,0.01,209,4.477,210,3.47,219,4.159,220,4.159,221,4.159,222,4.159,1424,6.171,1500,7.87,1501,7.87,1502,8.012,1503,6.217,1504,6.217]],["title/overview.html",[1505,4.746]],["body/overview.html",[2,1.23,20,0.014,28,0.009,132,0.011,133,0.009,136,1.829,191,3.058,208,2.636,209,5.88,210,3.058,211,3.233,212,3.666,213,2.763,214,3.233,215,3.058,216,3.433,217,4.767,218,4.767,219,5.181,220,4.847,221,5.271,222,5.271,223,4.486,224,3.666,225,3.666,401,3.666,476,4.767,477,4.767,478,4.847,482,3.233,1091,4.297,1182,4.998,1192,4.767,1193,4.767,1194,4.767,1263,4.998,1272,4.767,1273,4.767,1274,4.767,1505,4.767,1506,5.48,1507,5.48,1508,5.48,1509,5.48,1510,5.48]],["title/miscellaneous/typealiases.html",[1430,1.855,1511,4.8]],["body/miscellaneous/typealiases.html",[6,1.879,7,0.291,12,1.747,19,0.264,20,0.014,22,2.326,23,0.608,28,0.013,29,1.812,30,1.812,31,1.812,32,1.812,33,1.812,34,1.812,35,1.812,36,1.219,132,0.012,133,0.01,137,2.941,551,3.514,594,2.946,769,3.26,771,4.207,777,3.908,778,3.908,779,3.908,780,3.908,781,3.908,782,3.908,1430,3.26,1435,4.581,1512,5.842,1513,6.969,1514,6.969,1515,5.842,1516,6.969,1517,5.842]],["title/miscellaneous/variables.html",[1430,1.855,1518,4.175]],["body/miscellaneous/variables.html",[7,0.151,18,0.397,19,0.25,20,0.014,23,0.657,28,0.005,36,0.633,50,1.657,52,0.732,110,1.393,132,0.008,133,0.005,137,2.494,178,1.181,180,1.008,197,1.336,198,1.122,215,2.506,226,2.379,251,0.814,252,3.521,253,2.639,254,2.57,255,2.639,256,2.639,257,2.639,258,2.639,259,2.639,260,2.639,261,2.639,262,2.639,263,2.639,264,1.53,265,2.639,266,2.379,267,2.379,268,2.639,269,2.639,270,1.336,271,5.14,272,2.639,273,2.639,274,1.79,317,1.281,321,3.941,322,3.064,334,2.16,335,1.658,340,1.013,360,1.79,379,2.265,385,1.53,386,2.98,387,1.901,425,2.813,427,1.901,459,0.844,460,0.875,461,1.013,511,3.298,534,1.46,541,2.649,542,2.649,543,2.649,544,2.649,545,2.649,546,1.895,547,2.16,556,1.53,559,2.265,571,2.506,769,1.693,809,2.03,810,2.03,847,3.234,848,3.234,910,5.178,937,2.379,938,3.85,939,2.639,942,4.192,943,2.639,944,2.639,945,2.639,946,2.639,947,2.639,948,2.639,949,2.639,950,2.379,951,2.639,952,2.639,953,2.639,954,2.639,955,2.639,956,2.639,1107,2.185,1313,2.639,1314,3.906,1315,3.521,1320,2.639,1321,2.639,1322,3.906,1323,3.906,1324,3.906,1325,3.906,1326,3.906,1327,3.906,1328,3.906,1329,3.906,1330,3.906,1331,3.906,1332,3.906,1333,3.521,1334,3.906,1335,3.906,1336,3.906,1337,3.906,1338,2.639,1339,3.906,1344,2.379,1347,2.379,1430,1.693,1435,3.521,1437,2.639,1438,2.639,1518,2.639,1519,3.034,1520,3.034,1521,4.491,1522,7.967,1523,5.346,1524,3.034,1525,4.491,1526,3.034,1527,8.245,1528,3.034,1529,3.034,1530,3.034,1531,4.491,1532,3.034,1533,3.034,1534,3.034,1535,3.034,1536,4.491,1537,3.034,1538,3.034,1539,4.491,1540,3.034,1541,3.034,1542,3.034,1543,3.034,1544,3.034,1545,3.034,1546,3.034,1547,3.034,1548,4.491,1549,3.034,1550,3.034,1551,3.034,1552,3.034,1553,3.034,1554,4.491,1555,3.034,1556,3.034,1557,3.034,1558,3.034,1559,3.034,1560,3.034,1561,3.034,1562,3.034,1563,3.034,1564,3.034,1565,3.034]]],"invertedIndex":[["",{"_index":20,"title":{},"body":{"interfaces/APIResponse.html":{},"classes/ApiException.html":{},"controllers/AppController.html":{},"interfaces/AppLaunchAction.html":{},"modules/AppModule.html":{},"classes/BaseModel.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"classes/CreateTagsDto.html":{},"classes/CreateUserDto.html":{},"modules/CronModule.html":{},"injectables/CronService.html":{},"classes/CrudConfigService.html":{},"classes/CrudController.html":{},"interfaces/CrudOptions.html":{},"classes/CrudRoutesFactory.html":{},"classes/CrudService.html":{},"classes/CustomQueryBuilder.html":{},"modules/DatabaseModule.html":{},"injectables/ExcludeNullUndefinedInterceptor.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetManyDefaultResponse.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"controllers/HealthController.html":{},"interfaces/IBaseModel.html":{},"interfaces/ICrudService.html":{},"interfaces/IPagination.html":{},"interfaces/ITag.html":{},"interfaces/ITryRequest.html":{},"interfaces/IUser.html":{},"classes/PaginationParams.html":{},"interfaces/ParamOption.html":{},"interfaces/ParamsOptions.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"classes/QueryFailedFilter.html":{},"classes/R.html":{},"guards/RequestGuard.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/Response.html":{},"guards/ResponseGuard.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{},"classes/Tag.html":{},"controllers/TagsController.html":{},"modules/TagsModule.html":{},"injectables/TagsService.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateTagsDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"classes/ValidationFailedFilter.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":511,"title":{},"body":{"injectables/CronService.html":{},"classes/CrudService.html":{},"classes/CustomQueryBuilder.html":{},"interfaces/ICrudService.html":{},"interfaces/IPagination.html":{},"classes/PaginationParams.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["0.1.1",{"_index":1377,"title":{},"body":{"dependencies.html":{}}}],["0.1.13",{"_index":1420,"title":{},"body":{"dependencies.html":{}}}],["0.12.2",{"_index":1399,"title":{},"body":{"dependencies.html":{}}}],["0.2.29",{"_index":1429,"title":{},"body":{"dependencies.html":{}}}],["0.21.15",{"_index":1406,"title":{},"body":{"dependencies.html":{}}}],["0.3.1",{"_index":1398,"title":{},"body":{"dependencies.html":{}}}],["0.4.1",{"_index":1384,"title":{},"body":{"dependencies.html":{}}}],["0.5.19",{"_index":1425,"title":{},"body":{"dependencies.html":{}}}],["0.6.1",{"_index":1375,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":1306,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":1316,"title":{},"body":{"coverage.html":{}}}],["0/12",{"_index":1368,"title":{},"body":{"coverage.html":{}}}],["0/14",{"_index":1318,"title":{},"body":{"coverage.html":{}}}],["0/15",{"_index":1359,"title":{},"body":{"coverage.html":{}}}],["0/18",{"_index":1369,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":1304,"title":{},"body":{"coverage.html":{}}}],["0/23",{"_index":1358,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":1317,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":1307,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":1349,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":1319,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":1357,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":1340,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":1348,"title":{},"body":{"coverage.html":{}}}],["01]\\d",{"_index":1541,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0})@isoptional()@min(0)@transform(undefined",{"_index":1051,"title":{},"body":{"classes/PaginationParams.html":{}}}],["1",{"_index":432,"title":{},"body":{"classes/CreateUserDto.html":{},"injectables/CronService.html":{},"classes/CustomQueryBuilder.html":{},"controllers/HealthController.html":{},"interfaces/IUser.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{}}}],["1.0.0",{"_index":1417,"title":{},"body":{"dependencies.html":{}}}],["1.1.0",{"_index":1414,"title":{},"body":{"dependencies.html":{}}}],["1.1.2",{"_index":1412,"title":{},"body":{"dependencies.html":{}}}],["1/1",{"_index":1351,"title":{},"body":{"coverage.html":{}}}],["1/2",{"_index":1363,"title":{},"body":{"coverage.html":{}}}],["1/3",{"_index":1361,"title":{},"body":{"coverage.html":{}}}],["1/9",{"_index":1343,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":876,"title":{},"body":{"classes/CrudService.html":{},"interfaces/ICrudService.html":{},"interfaces/IPagination.html":{},"classes/PaginationParams.html":{}}}],["100",{"_index":1310,"title":{},"body":{"coverage.html":{}}}],["1024",{"_index":1016,"title":{},"body":{"controllers/HealthController.html":{}}}],["10_000",{"_index":1233,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["11",{"_index":1342,"title":{},"body":{"coverage.html":{}}}],["12",{"_index":870,"title":{},"body":{"classes/CrudService.html":{},"interfaces/ICrudService.html":{}}}],["15",{"_index":916,"title":{},"body":{"classes/CustomQueryBuilder.html":{}}}],["17.1.1",{"_index":1373,"title":{},"body":{"dependencies.html":{}}}],["19",{"_index":1509,"title":{},"body":{"overview.html":{}}}],["2",{"_index":401,"title":{},"body":{"classes/CreateTagsDto.html":{},"interfaces/ITag.html":{},"classes/Tag.html":{},"classes/UpdateTagsDto.html":{},"overview.html":{}}}],["2.0.21",{"_index":1418,"title":{},"body":{"dependencies.html":{}}}],["2.1.4",{"_index":1386,"title":{},"body":{"dependencies.html":{}}}],["2.2.6",{"_index":1411,"title":{},"body":{"dependencies.html":{}}}],["2.29.1",{"_index":1408,"title":{},"body":{"dependencies.html":{}}}],["2.4.3",{"_index":1397,"title":{},"body":{"dependencies.html":{}}}],["200",{"_index":1120,"title":{},"body":{"guards/ResponseGuard.html":{}}}],["20922789888000",{"_index":513,"title":{},"body":{"injectables/CronService.html":{}}}],["255",{"_index":402,"title":{},"body":{"classes/CreateTagsDto.html":{},"classes/CreateUserDto.html":{},"interfaces/ITag.html":{},"interfaces/IUser.html":{},"classes/Tag.html":{},"classes/UpdateTagsDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{}}}],["2]\\d(?::?[0",{"_index":1546,"title":{},"body":{"miscellaneous/variables.html":{}}}],["2]\\d:[0",{"_index":1543,"title":{},"body":{"miscellaneous/variables.html":{}}}],["3",{"_index":429,"title":{},"body":{"classes/CreateUserDto.html":{},"interfaces/IUser.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{}}}],["3.0.1",{"_index":1413,"title":{},"body":{"dependencies.html":{}}}],["3.0.2",{"_index":1422,"title":{},"body":{"dependencies.html":{}}}],["3/3",{"_index":1312,"title":{},"body":{"coverage.html":{}}}],["3/9",{"_index":1370,"title":{},"body":{"coverage.html":{}}}],["31",{"_index":1510,"title":{},"body":{"overview.html":{}}}],["33",{"_index":1360,"title":{},"body":{"coverage.html":{}}}],["3]\\d(?:t[0",{"_index":1542,"title":{},"body":{"miscellaneous/variables.html":{}}}],["4",{"_index":1507,"title":{},"body":{"overview.html":{}}}],["4.0.2",{"_index":1410,"title":{},"body":{"dependencies.html":{}}}],["4.1.5",{"_index":1428,"title":{},"body":{"dependencies.html":{}}}],["4.17.20",{"_index":1407,"title":{},"body":{"dependencies.html":{}}}],["4.2.0",{"_index":1405,"title":{},"body":{"dependencies.html":{}}}],["4.2.2",{"_index":1400,"title":{},"body":{"dependencies.html":{}}}],["4.6.2",{"_index":1392,"title":{},"body":{"dependencies.html":{}}}],["4.7.5",{"_index":1387,"title":{},"body":{"dependencies.html":{}}}],["4/4",{"_index":1311,"title":{},"body":{"coverage.html":{}}}],["401",{"_index":1125,"title":{},"body":{"guards/ResponseGuard.html":{}}}],["5",{"_index":1506,"title":{},"body":{"overview.html":{}}}],["5.0.0",{"_index":1426,"title":{},"body":{"dependencies.html":{}}}],["5.2.3",{"_index":1403,"title":{},"body":{"dependencies.html":{}}}],["5/6",{"_index":1309,"title":{},"body":{"coverage.html":{}}}],["50",{"_index":1362,"title":{},"body":{"coverage.html":{}}}],["50000000",{"_index":517,"title":{},"body":{"injectables/CronService.html":{}}}],["5]\\d(?:\\.\\d+)?(?:z",{"_index":1545,"title":{},"body":{"miscellaneous/variables.html":{}}}],["5]\\d)?)?)?$/g.test",{"_index":1547,"title":{},"body":{"miscellaneous/variables.html":{}}}],["5]\\d:[0",{"_index":1544,"title":{},"body":{"miscellaneous/variables.html":{}}}],["6",{"_index":1508,"title":{},"body":{"overview.html":{}}}],["6.6.3",{"_index":1423,"title":{},"body":{"dependencies.html":{}}}],["60",{"_index":524,"title":{},"body":{"injectables/CronService.html":{},"controllers/HealthController.html":{}}}],["7.0.1",{"_index":1388,"title":{},"body":{"dependencies.html":{}}}],["7.1.3",{"_index":1379,"title":{},"body":{"dependencies.html":{}}}],["7.1.5",{"_index":1390,"title":{},"body":{"dependencies.html":{}}}],["7.5.1",{"_index":1374,"title":{},"body":{"dependencies.html":{}}}],["7.6.5",{"_index":1383,"title":{},"body":{"dependencies.html":{}}}],["8",{"_index":431,"title":{},"body":{"classes/CreateUserDto.html":{},"interfaces/IUser.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{}}}],["8.2.0",{"_index":1395,"title":{},"body":{"dependencies.html":{}}}],["83",{"_index":1308,"title":{},"body":{"coverage.html":{}}}],["9]*[.])?[0",{"_index":1557,"title":{},"body":{"miscellaneous/variables.html":{}}}],["9]+$/.test(val",{"_index":1558,"title":{},"body":{"miscellaneous/variables.html":{}}}],["_",{"_index":808,"title":{},"body":{"interfaces/CrudOptions.html":{},"interfaces/GetManyDefaultResponse.html":{},"interfaces/ParamOption.html":{},"interfaces/ParamsOptions.html":{},"injectables/TagsService.html":{}}}],["abortearly",{"_index":257,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["above",{"_index":290,"title":{},"body":{"modules/AppModule.html":{}}}],["abstract",{"_index":760,"title":{},"body":{"classes/CrudController.html":{},"classes/CrudService.html":{},"interfaces/ICrudService.html":{},"interfaces/IPagination.html":{},"classes/PaginationParams.html":{}}}],["access",{"_index":816,"title":{},"body":{"interfaces/CrudOptions.html":{},"interfaces/GetManyDefaultResponse.html":{},"interfaces/ParamOption.html":{},"interfaces/ParamsOptions.html":{},"classes/QueryFailedFilter.html":{},"guards/RequestGuard.html":{},"guards/ResponseGuard.html":{},"classes/ValidationFailedFilter.html":{}}}],["access,@typescript",{"_index":924,"title":{},"body":{"classes/CustomQueryBuilder.html":{}}}],["access,no",{"_index":1017,"title":{},"body":{"controllers/HealthController.html":{}}}],["accessors",{"_index":823,"title":{},"body":{"classes/CrudRoutesFactory.html":{}}}],["action",{"_index":48,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{},"injectables/UsersService.html":{}}}],["actionid",{"_index":47,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{}}}],["adcorporatelogourl",{"_index":95,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{}}}],["against",{"_index":399,"title":{},"body":{"classes/CreateTagsDto.html":{},"classes/CreateUserDto.html":{},"interfaces/ITag.html":{},"interfaces/IUser.html":{},"classes/Tag.html":{},"classes/UpdateTagsDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{}}}],["aliases",{"_index":1512,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["allowunknown",{"_index":256,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["alwayspaginate",{"_index":533,"title":{},"body":{"classes/CrudConfigService.html":{},"interfaces/CrudOptions.html":{},"classes/CrudRoutesFactory.html":{},"interfaces/GetManyDefaultResponse.html":{},"interfaces/ParamOption.html":{},"interfaces/ParamsOptions.html":{},"classes/R.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{}}}],["amazing",{"_index":1483,"title":{},"body":{"index.html":{}}}],["animalimageurl",{"_index":103,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{}}}],["any[]).every((o",{"_index":1532,"title":{},"body":{"miscellaneous/variables.html":{}}}],["api",{"_index":38,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{}}}],["api:v1/rescue/getcomments?pageno=0&pagesize=10&postid=1230",{"_index":43,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{}}}],["api:v1/rescue/getrescuelist?pageno=0&pagesize=10&status=pending|inprogress|completed|nearest",{"_index":42,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{}}}],["api:v1/rescue/getuserfollowers?userid=1230",{"_index":44,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{}}}],["api:v1/rescue/getuserfollowing?userid=1230",{"_index":45,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{}}}],["api:v1/user/getuserposts?pageno=0&pagesize=25",{"_index":41,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{}}}],["api:v1/user/getuserprofile?userid=25",{"_index":40,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{}}}],["apibadrequestresponse",{"_index":161,"title":{},"body":{"classes/ApiException.html":{}}}],["apierror",{"_index":22,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{},"miscellaneous/typealiases.html":{}}}],["apierrors",{"_index":179,"title":{},"body":{"classes/ApiException.html":{},"classes/CrudController.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["apiexception",{"_index":135,"title":{"classes/ApiException.html":{}},"body":{"classes/ApiException.html":{},"coverage.html":{}}}],["apiforbiddenresponse",{"_index":162,"title":{},"body":{"classes/ApiException.html":{}}}],["apiinternalservererrorresponse",{"_index":163,"title":{},"body":{"classes/ApiException.html":{}}}],["apinotfoundresponse",{"_index":164,"title":{},"body":{"classes/ApiException.html":{}}}],["apioperation",{"_index":756,"title":{},"body":{"classes/CrudController.html":{},"controllers/UsersController.html":{}}}],["apioperation({summary",{"_index":739,"title":{},"body":{"classes/CrudController.html":{},"controllers/UsersController.html":{}}}],["apiproperty",{"_index":326,"title":{},"body":{"classes/BaseModel.html":{},"classes/CreateTagsDto.html":{},"classes/CreateUserDto.html":{},"classes/CrudConfigService.html":{},"classes/CrudRoutesFactory.html":{},"interfaces/IBaseModel.html":{},"interfaces/ITag.html":{},"interfaces/IUser.html":{},"classes/R.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{},"classes/Tag.html":{},"classes/UpdateTagsDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["apiproperty()@isboolean",{"_index":417,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["apiproperty()@isemail()@isnotempty()@minlength(2",{"_index":413,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["apiproperty()@isstring()@isnotempty()@minlength(2",{"_index":415,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["apiproperty()@isstring()@isnotempty()@minlength(2)@maxlength(36",{"_index":372,"title":{},"body":{"classes/CreateTagsDto.html":{},"classes/CreateUserDto.html":{}}}],["apiproperty()@isstring()@isnotempty()@minlength(8",{"_index":420,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["apiproperty(options",{"_index":811,"title":{},"body":{"interfaces/CrudOptions.html":{},"interfaces/GetManyDefaultResponse.html":{},"interfaces/ParamOption.html":{},"interfaces/ParamsOptions.html":{},"miscellaneous/functions.html":{}}}],["apipropertydecorator",{"_index":814,"title":{},"body":{"interfaces/CrudOptions.html":{},"interfaces/GetManyDefaultResponse.html":{},"interfaces/ParamOption.html":{},"interfaces/ParamsOptions.html":{}}}],["apipropertydecorator(options)(target",{"_index":819,"title":{},"body":{"interfaces/CrudOptions.html":{},"interfaces/GetManyDefaultResponse.html":{},"interfaces/ParamOption.html":{},"interfaces/ParamsOptions.html":{}}}],["apipropertyoptional",{"_index":152,"title":{},"body":{"classes/ApiException.html":{},"classes/BaseModel.html":{},"interfaces/IBaseModel.html":{},"interfaces/IPagination.html":{},"classes/PaginationParams.html":{}}}],["apipropertyoptional()@isoptional",{"_index":1048,"title":{},"body":{"classes/PaginationParams.html":{}}}],["apipropertyoptional({type",{"_index":1050,"title":{},"body":{"classes/PaginationParams.html":{}}}],["apiresponse",{"_index":1,"title":{"interfaces/APIResponse.html":{}},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"classes/CrudController.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{},"coverage.html":{}}}],["apitags",{"_index":202,"title":{},"body":{"controllers/AppController.html":{},"controllers/HealthController.html":{},"controllers/TagsController.html":{},"controllers/UsersController.html":{}}}],["apitags(appcontroller.name",{"_index":204,"title":{},"body":{"controllers/AppController.html":{}}}],["apitags(healthcontroller.name",{"_index":995,"title":{},"body":{"controllers/HealthController.html":{}}}],["apitags(tagscontroller.name",{"_index":1185,"title":{},"body":{"controllers/TagsController.html":{}}}],["apitags(userscontroller.name",{"_index":1266,"title":{},"body":{"controllers/UsersController.html":{}}}],["apiunauthorizedresponse",{"_index":165,"title":{},"body":{"classes/ApiException.html":{}}}],["app",{"_index":1443,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["app.controller",{"_index":245,"title":{},"body":{"modules/AppModule.html":{}}}],["appcontroller",{"_index":190,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["applaunchaction",{"_index":46,"title":{"interfaces/AppLaunchAction.html":{}},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{},"coverage.html":{}}}],["application",{"_index":281,"title":{},"body":{"modules/AppModule.html":{}}}],["applications",{"_index":1459,"title":{},"body":{"index.html":{}}}],["applicationshutdown",{"_index":305,"title":{},"body":{"modules/AppModule.html":{},"controllers/HealthController.html":{}}}],["applydecorators",{"_index":160,"title":{},"body":{"classes/ApiException.html":{}}}],["appmodule",{"_index":209,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["areyoufollowing",{"_index":129,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{}}}],["argumentshost",{"_index":1068,"title":{},"body":{"classes/QueryFailedFilter.html":{},"classes/ValidationFailedFilter.html":{}}}],["arr",{"_index":1549,"title":{},"body":{"miscellaneous/variables.html":{}}}],["arr.some((o",{"_index":1550,"title":{},"body":{"miscellaneous/variables.html":{}}}],["array",{"_index":605,"title":{},"body":{"classes/CrudConfigService.html":{},"classes/CrudRoutesFactory.html":{},"classes/R.html":{},"guards/ResponseGuard.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{}}}],["array.isarray(val",{"_index":1535,"title":{},"body":{"miscellaneous/variables.html":{}}}],["array.isarray(value",{"_index":913,"title":{},"body":{"classes/CustomQueryBuilder.html":{}}}],["arraymerge",{"_index":631,"title":{},"body":{"classes/CrudConfigService.html":{},"classes/CrudRoutesFactory.html":{},"classes/R.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{}}}],["arrayquerybuildertype",{"_index":885,"title":{},"body":{"classes/CustomQueryBuilder.html":{}}}],["asc",{"_index":1035,"title":{},"body":{"interfaces/IPagination.html":{},"classes/PaginationParams.html":{},"miscellaneous/enumerations.html":{}}}],["assignment",{"_index":930,"title":{},"body":{"classes/CustomQueryBuilder.html":{},"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["async",{"_index":317,"title":{},"body":{"classes/BaseModel.html":{},"classes/CrudController.html":{},"classes/CrudService.html":{},"classes/CustomQueryBuilder.html":{},"modules/DatabaseModule.html":{},"interfaces/IBaseModel.html":{},"interfaces/ICrudService.html":{},"classes/Tag.html":{},"controllers/TagsController.html":{},"injectables/TagsService.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["asynchronous",{"_index":295,"title":{},"body":{"modules/AppModule.html":{}}}],["author",{"_index":1492,"title":{},"body":{"index.html":{}}}],["available",{"_index":1504,"title":{},"body":{"modules.html":{}}}],["await",{"_index":360,"title":{},"body":{"classes/BaseModel.html":{},"classes/CrudService.html":{},"classes/CustomQueryBuilder.html":{},"modules/DatabaseModule.html":{},"interfaces/IBaseModel.html":{},"interfaces/ICrudService.html":{},"miscellaneous/variables.html":{}}}],["awaits",{"_index":294,"title":{},"body":{"modules/AppModule.html":{}}}],["b",{"_index":632,"title":{},"body":{"classes/CrudConfigService.html":{},"classes/CrudRoutesFactory.html":{},"controllers/HealthController.html":{},"classes/R.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{}}}],["backers",{"_index":1484,"title":{},"body":{"index.html":{}}}],["bad",{"_index":183,"title":{},"body":{"classes/ApiException.html":{}}}],["badge",{"_index":73,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{}}}],["badgedescription",{"_index":76,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{}}}],["badgeid",{"_index":74,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{}}}],["badgename",{"_index":75,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{}}}],["base",{"_index":596,"title":{},"body":{"classes/CrudConfigService.html":{},"classes/CrudRoutesFactory.html":{},"classes/CrudService.html":{},"interfaces/ICrudService.html":{},"classes/R.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{}}}],["base/crud",{"_index":1261,"title":{},"body":{"controllers/UsersController.html":{}}}],["based",{"_index":392,"title":{},"body":{"classes/CreateTagsDto.html":{},"classes/CreateUserDto.html":{},"interfaces/ITag.html":{},"interfaces/IUser.html":{},"classes/Tag.html":{},"classes/UpdateTagsDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{}}}],["basemodel",{"_index":307,"title":{"classes/BaseModel.html":{}},"body":{"classes/BaseModel.html":{},"classes/CreateTagsDto.html":{},"classes/CreateUserDto.html":{},"classes/CrudController.html":{},"classes/CrudService.html":{},"interfaces/IBaseModel.html":{},"interfaces/ICrudService.html":{},"interfaces/ITag.html":{},"interfaces/IUser.html":{},"classes/Tag.html":{},"classes/UpdateTagsDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"coverage.html":{}}}],["basemodel:26",{"_index":1162,"title":{},"body":{"classes/Tag.html":{},"classes/User.html":{}}}],["basemodel:28",{"_index":1165,"title":{},"body":{"classes/Tag.html":{},"classes/User.html":{}}}],["basemodel:30",{"_index":1164,"title":{},"body":{"classes/Tag.html":{},"classes/User.html":{}}}],["basemodel:32",{"_index":1163,"title":{},"body":{"classes/Tag.html":{},"classes/User.html":{}}}],["basemodel:34",{"_index":1160,"title":{},"body":{"classes/Tag.html":{},"classes/User.html":{}}}],["basemodel:36",{"_index":1166,"title":{},"body":{"classes/Tag.html":{},"classes/User.html":{}}}],["basemodel:38",{"_index":1161,"title":{},"body":{"classes/Tag.html":{},"classes/User.html":{}}}],["basemodel:41",{"_index":1167,"title":{},"body":{"classes/Tag.html":{},"classes/User.html":{}}}],["basemodel})@get(':id",{"_index":748,"title":{},"body":{"classes/CrudController.html":{}}}],["baseroutename",{"_index":551,"title":{},"body":{"classes/CrudConfigService.html":{},"interfaces/CrudOptions.html":{},"classes/CrudRoutesFactory.html":{},"interfaces/GetManyDefaultResponse.html":{},"interfaces/ParamOption.html":{},"interfaces/ParamsOptions.html":{},"classes/R.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{},"miscellaneous/typealiases.html":{}}}],["bcryptjs",{"_index":1396,"title":{},"body":{"dependencies.html":{}}}],["before",{"_index":200,"title":{},"body":{"controllers/AppController.html":{},"controllers/HealthController.html":{},"controllers/TagsController.html":{},"controllers/UsersController.html":{}}}],["beforeapplicationshutdown",{"_index":287,"title":{},"body":{"modules/AppModule.html":{}}}],["beforeinsert(querycontext",{"_index":366,"title":{},"body":{"classes/BaseModel.html":{},"interfaces/IBaseModel.html":{}}}],["beforeupdate(opt",{"_index":362,"title":{},"body":{"classes/BaseModel.html":{},"interfaces/IBaseModel.html":{}}}],["bind",{"_index":1097,"title":{},"body":{"guards/RequestGuard.html":{},"guards/ResponseGuard.html":{}}}],["bindrequesthelpers",{"_index":1093,"title":{},"body":{"guards/RequestGuard.html":{}}}],["bindrequesthelpers(request",{"_index":1095,"title":{},"body":{"guards/RequestGuard.html":{}}}],["bindresponsehelpers",{"_index":1115,"title":{},"body":{"guards/ResponseGuard.html":{}}}],["bindresponsehelpers(response",{"_index":1116,"title":{},"body":{"guards/ResponseGuard.html":{}}}],["body",{"_index":753,"title":{},"body":{"classes/CrudController.html":{},"controllers/TagsController.html":{},"controllers/UsersController.html":{}}}],["boolean",{"_index":50,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"classes/CreateUserDto.html":{},"interfaces/CrudOptions.html":{},"classes/CustomQueryBuilder.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetManyDefaultResponse.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/ITryRequest.html":{},"interfaces/IUser.html":{},"interfaces/ParamOption.html":{},"interfaces/ParamsOptions.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"guards/RequestGuard.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"guards/ResponseGuard.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["bootstrap",{"_index":214,"title":{},"body":{"modules/AppModule.html":{},"modules/CronModule.html":{},"modules/TagsModule.html":{},"modules/UsersModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["both",{"_index":451,"title":{},"body":{"classes/CreateUserDto.html":{},"interfaces/IUser.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{}}}],["browse",{"_index":1502,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":1500,"title":{},"body":{"modules.html":{}}}],["builder",{"_index":354,"title":{},"body":{"classes/BaseModel.html":{},"interfaces/IBaseModel.html":{}}}],["building",{"_index":1455,"title":{},"body":{"index.html":{}}}],["c",{"_index":633,"title":{},"body":{"classes/CrudConfigService.html":{},"classes/CrudRoutesFactory.html":{},"classes/CustomQueryBuilder.html":{},"classes/R.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{}}}],["cache",{"_index":792,"title":{},"body":{"interfaces/CrudOptions.html":{},"interfaces/GetManyDefaultResponse.html":{},"interfaces/ParamOption.html":{},"interfaces/ParamsOptions.html":{}}}],["call",{"_index":284,"title":{},"body":{"modules/AppModule.html":{},"interfaces/CrudOptions.html":{},"interfaces/GetManyDefaultResponse.html":{},"controllers/HealthController.html":{},"interfaces/ParamOption.html":{},"interfaces/ParamsOptions.html":{}}}],["call,@typescript",{"_index":929,"title":{},"body":{"classes/CustomQueryBuilder.html":{},"classes/QueryFailedFilter.html":{},"guards/ResponseGuard.html":{},"classes/ValidationFailedFilter.html":{}}}],["call,no",{"_index":932,"title":{},"body":{"classes/CustomQueryBuilder.html":{}}}],["called",{"_index":522,"title":{},"body":{"injectables/CronService.html":{}}}],["callhandler",{"_index":966,"title":{},"body":{"injectables/ExcludeNullUndefinedInterceptor.html":{},"interfaces/Response.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/TransformInterceptor.html":{}}}],["canactivate",{"_index":1094,"title":{},"body":{"guards/RequestGuard.html":{},"guards/ResponseGuard.html":{}}}],["canactivate(context",{"_index":1098,"title":{},"body":{"guards/RequestGuard.html":{},"guards/ResponseGuard.html":{}}}],["case",{"_index":593,"title":{},"body":{"classes/CrudConfigService.html":{},"classes/CrudRoutesFactory.html":{},"classes/R.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{}}}],["catch",{"_index":807,"title":{},"body":{"interfaces/CrudOptions.html":{},"classes/CrudService.html":{},"interfaces/GetManyDefaultResponse.html":{},"interfaces/ICrudService.html":{},"interfaces/ParamOption.html":{},"interfaces/ParamsOptions.html":{},"classes/QueryFailedFilter.html":{},"classes/ValidationFailedFilter.html":{}}}],["catch(exception",{"_index":1060,"title":{},"body":{"classes/QueryFailedFilter.html":{},"classes/ValidationFailedFilter.html":{}}}],["catch(validationerror",{"_index":1297,"title":{},"body":{"classes/ValidationFailedFilter.html":{}}}],["catcherror",{"_index":1230,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["catcherror((e",{"_index":1235,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["cb",{"_index":900,"title":{},"body":{"classes/CustomQueryBuilder.html":{}}}],["cb(records",{"_index":935,"title":{},"body":{"classes/CustomQueryBuilder.html":{}}}],["check",{"_index":908,"title":{},"body":{"classes/CustomQueryBuilder.html":{},"controllers/HealthController.html":{},"miscellaneous/functions.html":{}}}],["checked",{"_index":398,"title":{},"body":{"classes/CreateTagsDto.html":{},"classes/CreateUserDto.html":{},"interfaces/ITag.html":{},"interfaces/IUser.html":{},"classes/Tag.html":{},"classes/UpdateTagsDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{}}}],["checkviolationerror",{"_index":1061,"title":{},"body":{"classes/QueryFailedFilter.html":{}}}],["child",{"_index":858,"title":{},"body":{"classes/CrudService.html":{},"interfaces/ICrudService.html":{}}}],["chunk",{"_index":889,"title":{},"body":{"classes/CustomQueryBuilder.html":{}}}],["chunk(cb",{"_index":897,"title":{},"body":{"classes/CustomQueryBuilder.html":{}}}],["class",{"_index":134,"title":{"classes/ApiException.html":{},"classes/BaseModel.html":{},"classes/CreateTagsDto.html":{},"classes/CreateUserDto.html":{},"classes/CrudConfigService.html":{},"classes/CrudController.html":{},"classes/CrudRoutesFactory.html":{},"classes/CrudService.html":{},"classes/CustomQueryBuilder.html":{},"classes/PaginationParams.html":{},"classes/QueryFailedFilter.html":{},"classes/R.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{},"classes/Tag.html":{},"classes/UpdateTagsDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"classes/ValidationFailedFilter.html":{}},"body":{"classes/ApiException.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"classes/BaseModel.html":{},"classes/CreateTagsDto.html":{},"classes/CreateUserDto.html":{},"modules/CronModule.html":{},"injectables/CronService.html":{},"classes/CrudConfigService.html":{},"classes/CrudController.html":{},"classes/CrudRoutesFactory.html":{},"classes/CrudService.html":{},"modules/DatabaseModule.html":{},"injectables/ExcludeNullUndefinedInterceptor.html":{},"controllers/HealthController.html":{},"interfaces/IBaseModel.html":{},"interfaces/ICrudService.html":{},"interfaces/IPagination.html":{},"interfaces/ITag.html":{},"interfaces/IUser.html":{},"classes/PaginationParams.html":{},"classes/QueryFailedFilter.html":{},"classes/R.html":{},"guards/RequestGuard.html":{},"interfaces/Response.html":{},"guards/ResponseGuard.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{},"classes/Tag.html":{},"controllers/TagsController.html":{},"modules/TagsModule.html":{},"injectables/TagsService.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateTagsDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"classes/ValidationFailedFilter.html":{},"coverage.html":{},"dependencies.html":{}}}],["classes",{"_index":136,"title":{},"body":{"classes/ApiException.html":{},"classes/BaseModel.html":{},"classes/CreateTagsDto.html":{},"classes/CreateUserDto.html":{},"classes/CrudConfigService.html":{},"classes/CrudController.html":{},"classes/CrudRoutesFactory.html":{},"classes/CrudService.html":{},"classes/CustomQueryBuilder.html":{},"classes/PaginationParams.html":{},"classes/QueryFailedFilter.html":{},"classes/R.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{},"classes/Tag.html":{},"classes/UpdateTagsDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"classes/ValidationFailedFilter.html":{},"overview.html":{}}}],["client",{"_index":949,"title":{},"body":{"modules/DatabaseModule.html":{},"miscellaneous/variables.html":{}}}],["clonedeep",{"_index":906,"title":{},"body":{"classes/CustomQueryBuilder.html":{}}}],["clonedeep(this",{"_index":928,"title":{},"body":{"classes/CustomQueryBuilder.html":{}}}],["cluster_appmodule",{"_index":217,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":218,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_cronmodule",{"_index":476,"title":{},"body":{"modules/CronModule.html":{},"overview.html":{}}}],["cluster_cronmodule_providers",{"_index":477,"title":{},"body":{"modules/CronModule.html":{},"overview.html":{}}}],["cluster_tagsmodule",{"_index":1192,"title":{},"body":{"modules/TagsModule.html":{},"overview.html":{}}}],["cluster_tagsmodule_exports",{"_index":1194,"title":{},"body":{"modules/TagsModule.html":{},"overview.html":{}}}],["cluster_tagsmodule_providers",{"_index":1193,"title":{},"body":{"modules/TagsModule.html":{},"overview.html":{}}}],["cluster_usersmodule",{"_index":1272,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["cluster_usersmodule_exports",{"_index":1274,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["cluster_usersmodule_providers",{"_index":1273,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["code",{"_index":1122,"title":{},"body":{"guards/ResponseGuard.html":{}}}],["collectosmetrics",{"_index":976,"title":{},"body":{"controllers/HealthController.html":{}}}],["collectosmetrics(metrics",{"_index":980,"title":{},"body":{"controllers/HealthController.html":{}}}],["column",{"_index":470,"title":{},"body":{"classes/CreateUserDto.html":{},"interfaces/IUser.html":{},"classes/QueryFailedFilter.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{}}}],["columns",{"_index":1077,"title":{},"body":{"classes/QueryFailedFilter.html":{}}}],["comment",{"_index":122,"title":{"interfaces/Comment.html":{}},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{},"coverage.html":{}}}],["commentedusename",{"_index":124,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{}}}],["commenteduserid",{"_index":125,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{}}}],["commentid",{"_index":123,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{}}}],["comments",{"_index":126,"title":{"interfaces/Comments.html":{}},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{},"coverage.html":{}}}],["commentscount",{"_index":86,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{}}}],["config",{"_index":530,"title":{},"body":{"classes/CrudConfigService.html":{},"classes/CrudRoutesFactory.html":{},"controllers/HealthController.html":{},"classes/R.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{}}}],["config.params",{"_index":626,"title":{},"body":{"classes/CrudConfigService.html":{},"classes/CrudRoutesFactory.html":{},"classes/R.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{}}}],["config.query",{"_index":623,"title":{},"body":{"classes/CrudConfigService.html":{},"classes/CrudRoutesFactory.html":{},"classes/R.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{}}}],["config.serialize",{"_index":629,"title":{},"body":{"classes/CrudConfigService.html":{},"classes/CrudRoutesFactory.html":{},"classes/R.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{}}}],["configmodule",{"_index":237,"title":{},"body":{"modules/AppModule.html":{}}}],["configmodule.forroot(configmoduleoptions",{"_index":275,"title":{},"body":{"modules/AppModule.html":{}}}],["configmoduleoptions",{"_index":252,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["configservice",{"_index":989,"title":{},"body":{"controllers/HealthController.html":{}}}],["connection",{"_index":952,"title":{},"body":{"modules/DatabaseModule.html":{},"miscellaneous/variables.html":{}}}],["console.error",{"_index":304,"title":{},"body":{"modules/AppModule.html":{}}}],["console.info(`moduleinit",{"_index":302,"title":{},"body":{"modules/AppModule.html":{}}}],["console.log",{"_index":639,"title":{},"body":{"classes/CrudConfigService.html":{},"classes/CrudRoutesFactory.html":{},"controllers/HealthController.html":{},"classes/R.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{}}}],["console.log(`moduleinit",{"_index":1023,"title":{},"body":{"controllers/HealthController.html":{}}}],["const",{"_index":251,"title":{},"body":{"modules/AppModule.html":{},"classes/BaseModel.html":{},"classes/CreateUserDto.html":{},"classes/CrudConfigService.html":{},"interfaces/CrudOptions.html":{},"classes/CrudRoutesFactory.html":{},"classes/CrudService.html":{},"classes/CustomQueryBuilder.html":{},"modules/DatabaseModule.html":{},"interfaces/GetManyDefaultResponse.html":{},"controllers/HealthController.html":{},"interfaces/IBaseModel.html":{},"interfaces/ICrudService.html":{},"interfaces/IUser.html":{},"interfaces/ParamOption.html":{},"interfaces/ParamsOptions.html":{},"classes/QueryFailedFilter.html":{},"classes/R.html":{},"guards/RequestGuard.html":{},"guards/ResponseGuard.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"classes/ValidationFailedFilter.html":{},"miscellaneous/variables.html":{}}}],["constraint",{"_index":1078,"title":{},"body":{"classes/QueryFailedFilter.html":{}}}],["constraintviolationerror",{"_index":1062,"title":{},"body":{"classes/QueryFailedFilter.html":{}}}],["constructor",{"_index":145,"title":{},"body":{"classes/ApiException.html":{},"classes/CrudController.html":{},"classes/CrudRoutesFactory.html":{},"classes/CrudService.html":{},"controllers/HealthController.html":{},"interfaces/ICrudService.html":{},"injectables/TagsService.html":{},"injectables/UsersService.html":{}}}],["constructor(@inject(tag.name",{"_index":1207,"title":{},"body":{"injectables/TagsService.html":{}}}],["constructor(@inject(user.name",{"_index":1287,"title":{},"body":{"injectables/UsersService.html":{}}}],["constructor(message",{"_index":146,"title":{},"body":{"classes/ApiException.html":{}}}],["constructor(model",{"_index":853,"title":{},"body":{"classes/CrudService.html":{},"injectables/UsersService.html":{}}}],["constructor(private",{"_index":636,"title":{},"body":{"classes/CrudConfigService.html":{},"classes/CrudRoutesFactory.html":{},"classes/R.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{},"controllers/TagsController.html":{}}}],["constructor(protected",{"_index":761,"title":{},"body":{"classes/CrudController.html":{},"classes/CrudService.html":{},"interfaces/ICrudService.html":{}}}],["constructor(readonly",{"_index":1267,"title":{},"body":{"controllers/UsersController.html":{}}}],["constructor(service",{"_index":733,"title":{},"body":{"classes/CrudController.html":{}}}],["constructor(tag",{"_index":1198,"title":{},"body":{"injectables/TagsService.html":{}}}],["constructor(target",{"_index":824,"title":{},"body":{"classes/CrudRoutesFactory.html":{}}}],["contact",{"_index":114,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{}}}],["context",{"_index":968,"title":{},"body":{"injectables/ExcludeNullUndefinedInterceptor.html":{},"guards/RequestGuard.html":{},"interfaces/Response.html":{},"guards/ResponseGuard.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/TransformInterceptor.html":{}}}],["continue",{"_index":298,"title":{},"body":{"modules/AppModule.html":{}}}],["controller",{"_index":189,"title":{"controllers/AppController.html":{},"controllers/HealthController.html":{},"controllers/TagsController.html":{},"controllers/UsersController.html":{}},"body":{"controllers/AppController.html":{},"controllers/HealthController.html":{},"controllers/TagsController.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["controller(appcontroller.path",{"_index":203,"title":{},"body":{"controllers/AppController.html":{}}}],["controller(healthcontroller.path",{"_index":996,"title":{},"body":{"controllers/HealthController.html":{}}}],["controller(tagscontroller.path",{"_index":1184,"title":{},"body":{"controllers/TagsController.html":{}}}],["controller(userscontroller.path",{"_index":1265,"title":{},"body":{"controllers/UsersController.html":{}}}],["controllers",{"_index":191,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/HealthController.html":{},"controllers/TagsController.html":{},"modules/TagsModule.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["convert",{"_index":1013,"title":{},"body":{"controllers/HealthController.html":{}}}],["corporatedescription",{"_index":96,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{}}}],["corporatename",{"_index":97,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{}}}],["corresponding",{"_index":291,"title":{},"body":{"modules/AppModule.html":{}}}],["count",{"_index":10,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"injectables/CronService.html":{},"classes/CrudConfigService.html":{},"interfaces/CrudOptions.html":{},"classes/CrudRoutesFactory.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetManyDefaultResponse.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/ParamOption.html":{},"interfaces/ParamsOptions.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"classes/R.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{}}}],["coverage",{"_index":1301,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["coverimage",{"_index":54,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{}}}],["create",{"_index":654,"title":{},"body":{"classes/CrudConfigService.html":{},"interfaces/CrudOptions.html":{},"classes/CrudRoutesFactory.html":{},"classes/CrudService.html":{},"interfaces/GetManyDefaultResponse.html":{},"interfaces/ICrudService.html":{},"interfaces/ParamOption.html":{},"interfaces/ParamsOptions.html":{},"classes/R.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{},"controllers/TagsController.html":{},"injectables/TagsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["create(@body",{"_index":1186,"title":{},"body":{"controllers/TagsController.html":{},"controllers/UsersController.html":{}}}],["create(tag",{"_index":1170,"title":{},"body":{"controllers/TagsController.html":{},"injectables/TagsService.html":{}}}],["create(target",{"_index":645,"title":{},"body":{"classes/CrudConfigService.html":{},"classes/CrudRoutesFactory.html":{},"classes/R.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{}}}],["create(user",{"_index":1251,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["created",{"_index":397,"title":{},"body":{"classes/CreateTagsDto.html":{},"classes/CreateUserDto.html":{},"interfaces/ITag.html":{},"interfaces/IUser.html":{},"classes/Tag.html":{},"classes/UpdateTagsDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{}}}],["created_at",{"_index":310,"title":{},"body":{"classes/BaseModel.html":{},"interfaces/IBaseModel.html":{},"classes/Tag.html":{},"classes/User.html":{}}}],["creategetmanydto",{"_index":1140,"title":{},"body":{"classes/SerializeHelper.html":{}}}],["creategetmanydto(dto",{"_index":611,"title":{},"body":{"classes/CrudConfigService.html":{},"classes/CrudRoutesFactory.html":{},"classes/R.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{}}}],["creategetoneresponsedto",{"_index":1141,"title":{},"body":{"classes/SerializeHelper.html":{}}}],["creategetoneresponsedto(resourcename",{"_index":618,"title":{},"body":{"classes/CrudConfigService.html":{},"classes/CrudRoutesFactory.html":{},"classes/R.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{}}}],["createmany",{"_index":794,"title":{},"body":{"interfaces/CrudOptions.html":{},"interfaces/GetManyDefaultResponse.html":{},"interfaces/ParamOption.html":{},"interfaces/ParamsOptions.html":{}}}],["createmanybase",{"_index":779,"title":{},"body":{"interfaces/CrudOptions.html":{},"interfaces/GetManyDefaultResponse.html":{},"interfaces/ParamOption.html":{},"interfaces/ParamsOptions.html":{},"miscellaneous/typealiases.html":{}}}],["createonebase",{"_index":778,"title":{},"body":{"interfaces/CrudOptions.html":{},"interfaces/GetManyDefaultResponse.html":{},"interfaces/ParamOption.html":{},"interfaces/ParamsOptions.html":{},"miscellaneous/typealiases.html":{}}}],["createresponsemeta",{"_index":589,"title":{},"body":{"classes/CrudConfigService.html":{},"classes/CrudRoutesFactory.html":{},"classes/R.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{}}}],["createresponsemeta(name",{"_index":1148,"title":{},"body":{"classes/Swagger.html":{}}}],["createroutes",{"_index":820,"title":{},"body":{"classes/CrudRoutesFactory.html":{}}}],["createroutes(routesschema",{"_index":719,"title":{},"body":{"classes/CrudConfigService.html":{},"classes/CrudRoutesFactory.html":{},"classes/R.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{}}}],["creates",{"_index":454,"title":{},"body":{"classes/CreateUserDto.html":{},"interfaces/IUser.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{}}}],["createtagsdto",{"_index":369,"title":{"classes/CreateTagsDto.html":{}},"body":{"classes/CreateTagsDto.html":{},"interfaces/ITag.html":{},"classes/Tag.html":{},"controllers/TagsController.html":{},"classes/UpdateTagsDto.html":{},"coverage.html":{}}}],["createuserdto",{"_index":407,"title":{"classes/CreateUserDto.html":{}},"body":{"classes/CreateUserDto.html":{},"interfaces/IUser.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["cron",{"_index":484,"title":{},"body":{"injectables/CronService.html":{}}}],["cron('60",{"_index":505,"title":{},"body":{"injectables/CronService.html":{}}}],["cron.service",{"_index":480,"title":{},"body":{"modules/CronModule.html":{}}}],["cron/cron.module",{"_index":246,"title":{},"body":{"modules/AppModule.html":{}}}],["cronmodule",{"_index":219,"title":{"modules/CronModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CronModule.html":{},"modules.html":{},"overview.html":{}}}],["cronmodules",{"_index":277,"title":{},"body":{"modules/AppModule.html":{}}}],["cronservice",{"_index":478,"title":{"injectables/CronService.html":{}},"body":{"modules/CronModule.html":{},"injectables/CronService.html":{},"coverage.html":{},"overview.html":{}}}],["cronservice.count",{"_index":520,"title":{},"body":{"injectables/CronService.html":{}}}],["crud",{"_index":848,"title":{},"body":{"classes/CrudService.html":{},"interfaces/ICrudService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["crud.service",{"_index":758,"title":{},"body":{"classes/CrudController.html":{}}}],["crudconfigservice",{"_index":527,"title":{"classes/CrudConfigService.html":{}},"body":{"classes/CrudConfigService.html":{},"classes/CrudRoutesFactory.html":{},"classes/R.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{},"coverage.html":{}}}],["crudconfigservice.config",{"_index":630,"title":{},"body":{"classes/CrudConfigService.html":{},"classes/CrudRoutesFactory.html":{},"classes/R.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{}}}],["crudconfigservice.config.query",{"_index":676,"title":{},"body":{"classes/CrudConfigService.html":{},"classes/CrudRoutesFactory.html":{},"classes/R.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{}}}],["crudconfigservice.config.serialize",{"_index":680,"title":{},"body":{"classes/CrudConfigService.html":{},"classes/CrudRoutesFactory.html":{},"classes/R.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{}}}],["crudcontroller",{"_index":729,"title":{"classes/CrudController.html":{}},"body":{"classes/CrudController.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["crudoptions",{"_index":549,"title":{"interfaces/CrudOptions.html":{}},"body":{"classes/CrudConfigService.html":{},"interfaces/CrudOptions.html":{},"classes/CrudRoutesFactory.html":{},"interfaces/GetManyDefaultResponse.html":{},"interfaces/ParamOption.html":{},"interfaces/ParamsOptions.html":{},"classes/R.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{},"coverage.html":{}}}],["crudroutesfactory",{"_index":634,"title":{"classes/CrudRoutesFactory.html":{}},"body":{"classes/CrudConfigService.html":{},"classes/CrudRoutesFactory.html":{},"classes/R.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{},"coverage.html":{}}}],["crudroutesfactory(target",{"_index":646,"title":{},"body":{"classes/CrudConfigService.html":{},"classes/CrudRoutesFactory.html":{},"classes/R.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{}}}],["crudroutesfactory.create(target",{"_index":1526,"title":{},"body":{"miscellaneous/variables.html":{}}}],["crudroutesfactory.getroutesschema",{"_index":656,"title":{},"body":{"classes/CrudConfigService.html":{},"classes/CrudRoutesFactory.html":{},"classes/R.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{}}}],["crudroutesfactory::constructor",{"_index":640,"title":{},"body":{"classes/CrudConfigService.html":{},"classes/CrudRoutesFactory.html":{},"classes/R.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{}}}],["crudservice",{"_index":843,"title":{"classes/CrudService.html":{}},"body":{"classes/CrudService.html":{},"interfaces/ICrudService.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["crudservice:21",{"_index":1285,"title":{},"body":{"injectables/UsersService.html":{}}}],["crudservice:38",{"_index":1282,"title":{},"body":{"injectables/UsersService.html":{}}}],["crudservice:51",{"_index":1284,"title":{},"body":{"injectables/UsersService.html":{}}}],["crudservice:76",{"_index":1283,"title":{},"body":{"injectables/UsersService.html":{}}}],["ctx",{"_index":1071,"title":{},"body":{"classes/QueryFailedFilter.html":{},"classes/ValidationFailedFilter.html":{}}}],["ctx.getrequest",{"_index":1074,"title":{},"body":{"classes/QueryFailedFilter.html":{},"classes/ValidationFailedFilter.html":{}}}],["ctx.getresponse",{"_index":1073,"title":{},"body":{"classes/QueryFailedFilter.html":{},"classes/ValidationFailedFilter.html":{}}}],["current",{"_index":525,"title":{},"body":{"injectables/CronService.html":{},"interfaces/IPagination.html":{},"classes/PaginationParams.html":{}}}],["currentpage",{"_index":918,"title":{},"body":{"classes/CustomQueryBuilder.html":{}}}],["custom",{"_index":353,"title":{},"body":{"classes/BaseModel.html":{},"interfaces/IBaseModel.html":{}}}],["customquerybuilder",{"_index":328,"title":{"classes/CustomQueryBuilder.html":{}},"body":{"classes/BaseModel.html":{},"classes/CustomQueryBuilder.html":{},"interfaces/IBaseModel.html":{},"classes/Tag.html":{},"classes/User.html":{},"coverage.html":{}}}],["data",{"_index":11,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"classes/BaseModel.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"classes/CrudConfigService.html":{},"interfaces/CrudOptions.html":{},"classes/CrudRoutesFactory.html":{},"classes/CrudService.html":{},"classes/CustomQueryBuilder.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetManyDefaultResponse.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"controllers/HealthController.html":{},"interfaces/IBaseModel.html":{},"interfaces/ICrudService.html":{},"interfaces/IPagination.html":{},"classes/PaginationParams.html":{},"interfaces/ParamOption.html":{},"interfaces/ParamsOptions.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"classes/QueryFailedFilter.html":{},"classes/R.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/Response.html":{},"guards/ResponseGuard.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{},"injectables/TransformInterceptor.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{},"classes/ValidationFailedFilter.html":{}}}],["database",{"_index":270,"title":{},"body":{"modules/AppModule.html":{},"classes/CreateTagsDto.html":{},"classes/CreateUserDto.html":{},"classes/CrudController.html":{},"interfaces/ITag.html":{},"interfaces/IUser.html":{},"classes/QueryFailedFilter.html":{},"classes/Tag.html":{},"classes/UpdateTagsDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"miscellaneous/variables.html":{}}}],["database'})@post",{"_index":1253,"title":{},"body":{"controllers/UsersController.html":{}}}],["database/database.module",{"_index":247,"title":{},"body":{"modules/AppModule.html":{}}}],["database/models/base.model",{"_index":384,"title":{},"body":{"classes/CreateTagsDto.html":{},"classes/CreateUserDto.html":{},"classes/CrudController.html":{},"classes/CrudService.html":{},"interfaces/ICrudService.html":{},"interfaces/ITag.html":{},"interfaces/IUser.html":{},"classes/Tag.html":{},"classes/UpdateTagsDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{}}}],["databasemodule",{"_index":220,"title":{"modules/DatabaseModule.html":{}},"body":{"modules/AppModule.html":{},"modules/DatabaseModule.html":{},"modules.html":{},"overview.html":{}}}],["dataerror",{"_index":1063,"title":{},"body":{"classes/QueryFailedFilter.html":{}}}],["dataobj",{"_index":1134,"title":{},"body":{"guards/ResponseGuard.html":{}}}],["datapoints",{"_index":1000,"title":{},"body":{"controllers/HealthController.html":{}}}],["date",{"_index":110,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"classes/BaseModel.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/IBaseModel.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{},"miscellaneous/variables.html":{}}}],["date().toisostring",{"_index":174,"title":{},"body":{"classes/ApiException.html":{},"classes/BaseModel.html":{},"interfaces/IBaseModel.html":{},"classes/QueryFailedFilter.html":{},"classes/ValidationFailedFilter.html":{}}}],["date.now",{"_index":1019,"title":{},"body":{"controllers/HealthController.html":{}}}],["db",{"_index":345,"title":{},"body":{"classes/BaseModel.html":{},"interfaces/IBaseModel.html":{},"classes/QueryFailedFilter.html":{},"dependencies.html":{}}}],["dberrors",{"_index":344,"title":{},"body":{"classes/BaseModel.html":{},"interfaces/IBaseModel.html":{}}}],["debug",{"_index":955,"title":{},"body":{"modules/DatabaseModule.html":{},"miscellaneous/variables.html":{}}}],["declarations",{"_index":213,"title":{},"body":{"modules/AppModule.html":{},"modules/CronModule.html":{},"classes/CrudConfigService.html":{},"classes/CrudRoutesFactory.html":{},"classes/R.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{},"modules/TagsModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["declare",{"_index":488,"title":{},"body":{"injectables/CronService.html":{},"interfaces/CrudOptions.html":{},"interfaces/GetManyDefaultResponse.html":{},"interfaces/ParamOption.html":{},"interfaces/ParamsOptions.html":{}}}],["decorators",{"_index":151,"title":{},"body":{"classes/ApiException.html":{},"controllers/AppController.html":{},"classes/BaseModel.html":{},"classes/CreateTagsDto.html":{},"classes/CreateUserDto.html":{},"injectables/CronService.html":{},"classes/CrudController.html":{},"controllers/HealthController.html":{},"classes/PaginationParams.html":{},"classes/Tag.html":{},"controllers/TagsController.html":{},"classes/User.html":{},"controllers/UsersController.html":{}}}],["deepmerge",{"_index":540,"title":{},"body":{"classes/CrudConfigService.html":{},"classes/CrudRoutesFactory.html":{},"classes/R.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{},"dependencies.html":{}}}],["default",{"_index":321,"title":{},"body":{"classes/BaseModel.html":{},"injectables/CronService.html":{},"classes/CrudConfigService.html":{},"classes/CrudRoutesFactory.html":{},"classes/PaginationParams.html":{},"classes/R.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{},"classes/Tag.html":{},"classes/User.html":{},"miscellaneous/variables.html":{}}}],["default('development",{"_index":269,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["define",{"_index":201,"title":{},"body":{"controllers/AppController.html":{},"controllers/HealthController.html":{},"controllers/TagsController.html":{},"controllers/UsersController.html":{}}}],["defined",{"_index":148,"title":{},"body":{"classes/ApiException.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"classes/BaseModel.html":{},"classes/CreateTagsDto.html":{},"classes/CreateUserDto.html":{},"injectables/CronService.html":{},"classes/CrudConfigService.html":{},"classes/CrudController.html":{},"classes/CrudRoutesFactory.html":{},"classes/CrudService.html":{},"classes/CustomQueryBuilder.html":{},"injectables/ExcludeNullUndefinedInterceptor.html":{},"controllers/HealthController.html":{},"interfaces/ICrudService.html":{},"classes/PaginationParams.html":{},"interfaces/ParamsOptions.html":{},"classes/QueryFailedFilter.html":{},"classes/R.html":{},"guards/RequestGuard.html":{},"guards/ResponseGuard.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{},"classes/Tag.html":{},"controllers/TagsController.html":{},"injectables/TagsService.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/TransformInterceptor.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"classes/ValidationFailedFilter.html":{}}}],["delete",{"_index":752,"title":{},"body":{"classes/CrudController.html":{},"interfaces/CrudOptions.html":{},"classes/CrudService.html":{},"interfaces/GetManyDefaultResponse.html":{},"interfaces/ICrudService.html":{},"interfaces/ParamOption.html":{},"interfaces/ParamsOptions.html":{},"controllers/TagsController.html":{},"injectables/TagsService.html":{},"controllers/UsersController.html":{}}}],["delete(':id",{"_index":1173,"title":{},"body":{"controllers/TagsController.html":{},"controllers/UsersController.html":{}}}],["delete(@param('id",{"_index":1188,"title":{},"body":{"controllers/TagsController.html":{}}}],["delete(id",{"_index":1172,"title":{},"body":{"controllers/TagsController.html":{},"injectables/TagsService.html":{}}}],["deletebyid(id",{"_index":1216,"title":{},"body":{"injectables/TagsService.html":{}}}],["deleted_at",{"_index":311,"title":{},"body":{"classes/BaseModel.html":{},"interfaces/IBaseModel.html":{},"classes/Tag.html":{},"classes/User.html":{}}}],["deleteonebase",{"_index":782,"title":{},"body":{"interfaces/CrudOptions.html":{},"interfaces/GetManyDefaultResponse.html":{},"interfaces/ParamOption.html":{},"interfaces/ParamsOptions.html":{},"miscellaneous/typealiases.html":{}}}],["dependencies",{"_index":211,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/CronModule.html":{},"modules/TagsModule.html":{},"modules/UsersModule.html":{},"dependencies.html":{},"overview.html":{}}}],["deps",{"_index":278,"title":{},"body":{"modules/AppModule.html":{}}}],["desc",{"_index":1034,"title":{},"body":{"interfaces/IPagination.html":{},"classes/PaginationParams.html":{},"miscellaneous/enumerations.html":{}}}],["described",{"_index":289,"title":{},"body":{"modules/AppModule.html":{}}}],["describes",{"_index":1036,"title":{},"body":{"interfaces/IPagination.html":{},"classes/PaginationParams.html":{}}}],["description",{"_index":181,"title":{},"body":{"classes/ApiException.html":{},"injectables/CronService.html":{},"classes/CrudConfigService.html":{},"classes/CrudController.html":{},"classes/CrudRoutesFactory.html":{},"classes/CrudService.html":{},"injectables/ExcludeNullUndefinedInterceptor.html":{},"interfaces/IPagination.html":{},"classes/PaginationParams.html":{},"classes/R.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{},"injectables/TimeoutInterceptor.html":{},"controllers/UsersController.html":{},"index.html":{}}}],["development",{"_index":1465,"title":{},"body":{"index.html":{}}}],["disable",{"_index":198,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"classes/CreateUserDto.html":{},"classes/CrudConfigService.html":{},"interfaces/CrudOptions.html":{},"classes/CrudRoutesFactory.html":{},"classes/CustomQueryBuilder.html":{},"modules/DatabaseModule.html":{},"injectables/ExcludeNullUndefinedInterceptor.html":{},"interfaces/GetManyDefaultResponse.html":{},"controllers/HealthController.html":{},"interfaces/IUser.html":{},"interfaces/ParamOption.html":{},"interfaces/ParamsOptions.html":{},"classes/QueryFailedFilter.html":{},"classes/R.html":{},"guards/RequestGuard.html":{},"interfaces/Response.html":{},"guards/ResponseGuard.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{},"controllers/TagsController.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"classes/ValidationFailedFilter.html":{},"miscellaneous/variables.html":{}}}],["disabled",{"_index":788,"title":{},"body":{"interfaces/CrudOptions.html":{},"interfaces/GetManyDefaultResponse.html":{},"interfaces/ParamOption.html":{},"interfaces/ParamsOptions.html":{}}}],["distance",{"_index":104,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{}}}],["distanceaway",{"_index":105,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{}}}],["dns",{"_index":997,"title":{},"body":{"controllers/HealthController.html":{}}}],["dnshealthindicator",{"_index":990,"title":{},"body":{"controllers/HealthController.html":{}}}],["docs",{"_index":1008,"title":{},"body":{"controllers/HealthController.html":{}}}],["documentation",{"_index":1302,"title":{},"body":{"coverage.html":{}}}],["don't",{"_index":457,"title":{},"body":{"classes/CreateUserDto.html":{},"interfaces/IUser.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{}}}],["dotenv",{"_index":1401,"title":{},"body":{"dependencies.html":{}}}],["down",{"_index":1345,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["down(knex",{"_index":1446,"title":{},"body":{"miscellaneous/functions.html":{}}}],["dto",{"_index":607,"title":{},"body":{"classes/CrudConfigService.html":{},"interfaces/CrudOptions.html":{},"classes/CrudRoutesFactory.html":{},"interfaces/GetManyDefaultResponse.html":{},"interfaces/ParamOption.html":{},"interfaces/ParamsOptions.html":{},"classes/R.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{}}}],["dumb",{"_index":440,"title":{},"body":{"classes/CreateUserDto.html":{},"interfaces/IUser.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{}}}],["dynamic",{"_index":802,"title":{},"body":{"interfaces/CrudOptions.html":{},"interfaces/GetManyDefaultResponse.html":{},"interfaces/ParamOption.html":{},"interfaces/ParamsOptions.html":{}}}],["d{4",{"_index":1540,"title":{},"body":{"miscellaneous/variables.html":{}}}],["e",{"_index":873,"title":{},"body":{"classes/CrudService.html":{},"interfaces/ICrudService.html":{},"injectables/TimeoutInterceptor.html":{}}}],["e2e",{"_index":1473,"title":{},"body":{"index.html":{}}}],["each",{"_index":449,"title":{},"body":{"classes/CreateUserDto.html":{},"injectables/ExcludeNullUndefinedInterceptor.html":{},"interfaces/IUser.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{}}}],["efficient",{"_index":1456,"title":{},"body":{"index.html":{}}}],["email",{"_index":410,"title":{},"body":{"classes/CreateUserDto.html":{},"interfaces/IUser.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{}}}],["emergencytype",{"_index":106,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{}}}],["empty",{"_index":911,"title":{},"body":{"classes/CustomQueryBuilder.html":{},"injectables/ExcludeNullUndefinedInterceptor.html":{},"miscellaneous/functions.html":{}}}],["enable",{"_index":274,"title":{},"body":{"modules/AppModule.html":{},"classes/CrudConfigService.html":{},"classes/CrudRoutesFactory.html":{},"classes/R.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{},"miscellaneous/variables.html":{}}}],["enableroutes",{"_index":821,"title":{},"body":{"classes/CrudRoutesFactory.html":{}}}],["enableroutes(routesschema",{"_index":713,"title":{},"body":{"classes/CrudConfigService.html":{},"classes/CrudRoutesFactory.html":{},"classes/R.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{}}}],["end",{"_index":1232,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["entries",{"_index":863,"title":{},"body":{"classes/CrudService.html":{},"interfaces/ICrudService.html":{},"injectables/UsersService.html":{}}}],["enum",{"_index":786,"title":{},"body":{"interfaces/CrudOptions.html":{},"interfaces/GetManyDefaultResponse.html":{},"interfaces/IPagination.html":{},"classes/PaginationParams.html":{},"interfaces/ParamOption.html":{},"interfaces/ParamsOptions.html":{}}}],["enum.type",{"_index":776,"title":{},"body":{"interfaces/CrudOptions.html":{},"interfaces/GetManyDefaultResponse.html":{},"interfaces/ParamOption.html":{},"interfaces/ParamsOptions.html":{}}}],["enumerations",{"_index":1431,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["eq",{"_index":1548,"title":{},"body":{"miscellaneous/variables.html":{}}}],["err",{"_index":1011,"title":{},"body":{"controllers/HealthController.html":{}}}],["error",{"_index":12,"title":{},"body":{"interfaces/APIResponse.html":{},"classes/ApiException.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/ITryRequest.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"guards/ResponseGuard.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{},"miscellaneous/typealiases.html":{}}}],["error(error",{"_index":1124,"title":{},"body":{"guards/ResponseGuard.html":{}}}],["error.errors",{"_index":1130,"title":{},"body":{"guards/ResponseGuard.html":{}}}],["error.message",{"_index":1129,"title":{},"body":{"guards/ResponseGuard.html":{}}}],["errorhash",{"_index":1299,"title":{},"body":{"classes/ValidationFailedFilter.html":{}}}],["errors",{"_index":140,"title":{},"body":{"classes/ApiException.html":{},"classes/BaseModel.html":{},"interfaces/IBaseModel.html":{},"classes/QueryFailedFilter.html":{},"guards/ResponseGuard.html":{},"dependencies.html":{}}}],["errors.decorator",{"_index":757,"title":{},"body":{"classes/CrudController.html":{}}}],["errors.decorator.ts",{"_index":139,"title":{},"body":{"classes/ApiException.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["errors.decorator.ts:12",{"_index":158,"title":{},"body":{"classes/ApiException.html":{}}}],["errors.decorator.ts:14",{"_index":155,"title":{},"body":{"classes/ApiException.html":{}}}],["errors.decorator.ts:16",{"_index":157,"title":{},"body":{"classes/ApiException.html":{}}}],["errors.decorator.ts:18",{"_index":153,"title":{},"body":{"classes/ApiException.html":{}}}],["errors.decorator.ts:20",{"_index":154,"title":{},"body":{"classes/ApiException.html":{}}}],["errors.decorator.ts:22",{"_index":159,"title":{},"body":{"classes/ApiException.html":{}}}],["errors.decorator.ts:24",{"_index":156,"title":{},"body":{"classes/ApiException.html":{}}}],["errors.decorator.ts:26",{"_index":149,"title":{},"body":{"classes/ApiException.html":{}}}],["eslint",{"_index":197,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"classes/CreateUserDto.html":{},"classes/CrudConfigService.html":{},"interfaces/CrudOptions.html":{},"classes/CrudRoutesFactory.html":{},"classes/CustomQueryBuilder.html":{},"modules/DatabaseModule.html":{},"injectables/ExcludeNullUndefinedInterceptor.html":{},"interfaces/GetManyDefaultResponse.html":{},"controllers/HealthController.html":{},"interfaces/IUser.html":{},"interfaces/ParamOption.html":{},"interfaces/ParamsOptions.html":{},"classes/QueryFailedFilter.html":{},"classes/R.html":{},"guards/RequestGuard.html":{},"interfaces/Response.html":{},"guards/ResponseGuard.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{},"controllers/TagsController.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"classes/ValidationFailedFilter.html":{},"miscellaneous/variables.html":{}}}],["eslint/ban",{"_index":813,"title":{},"body":{"interfaces/CrudOptions.html":{},"classes/CustomQueryBuilder.html":{},"interfaces/GetManyDefaultResponse.html":{},"interfaces/ParamOption.html":{},"interfaces/ParamsOptions.html":{}}}],["eslint/no",{"_index":462,"title":{},"body":{"classes/CreateUserDto.html":{},"interfaces/CrudOptions.html":{},"classes/CustomQueryBuilder.html":{},"injectables/ExcludeNullUndefinedInterceptor.html":{},"interfaces/GetManyDefaultResponse.html":{},"controllers/HealthController.html":{},"interfaces/IUser.html":{},"interfaces/ParamOption.html":{},"interfaces/ParamsOptions.html":{},"classes/QueryFailedFilter.html":{},"guards/RequestGuard.html":{},"interfaces/Response.html":{},"guards/ResponseGuard.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"classes/ValidationFailedFilter.html":{}}}],["eslint/require",{"_index":947,"title":{},"body":{"modules/DatabaseModule.html":{},"miscellaneous/variables.html":{}}}],["example",{"_index":437,"title":{},"body":{"classes/CreateUserDto.html":{},"interfaces/IUser.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{}}}],["exception",{"_index":1070,"title":{},"body":{"classes/QueryFailedFilter.html":{},"classes/ValidationFailedFilter.html":{}}}],["exceptionfilter",{"_index":1059,"title":{},"body":{"classes/QueryFailedFilter.html":{},"classes/ValidationFailedFilter.html":{}}}],["excludenullundefinedinterceptor",{"_index":957,"title":{"injectables/ExcludeNullUndefinedInterceptor.html":{}},"body":{"injectables/ExcludeNullUndefinedInterceptor.html":{},"coverage.html":{}}}],["executioncontext",{"_index":965,"title":{},"body":{"injectables/ExcludeNullUndefinedInterceptor.html":{},"guards/RequestGuard.html":{},"interfaces/Response.html":{},"guards/ResponseGuard.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/TransformInterceptor.html":{}}}],["exists",{"_index":890,"title":{},"body":{"classes/CustomQueryBuilder.html":{}}}],["export",{"_index":27,"title":{},"body":{"interfaces/APIResponse.html":{},"classes/ApiException.html":{},"controllers/AppController.html":{},"interfaces/AppLaunchAction.html":{},"modules/AppModule.html":{},"classes/BaseModel.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"classes/CreateTagsDto.html":{},"classes/CreateUserDto.html":{},"modules/CronModule.html":{},"injectables/CronService.html":{},"classes/CrudConfigService.html":{},"classes/CrudController.html":{},"interfaces/CrudOptions.html":{},"classes/CrudRoutesFactory.html":{},"classes/CrudService.html":{},"classes/CustomQueryBuilder.html":{},"modules/DatabaseModule.html":{},"injectables/ExcludeNullUndefinedInterceptor.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetManyDefaultResponse.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"controllers/HealthController.html":{},"interfaces/IBaseModel.html":{},"interfaces/ICrudService.html":{},"interfaces/IPagination.html":{},"interfaces/ITag.html":{},"interfaces/ITryRequest.html":{},"interfaces/IUser.html":{},"classes/PaginationParams.html":{},"interfaces/ParamOption.html":{},"interfaces/ParamsOptions.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"classes/QueryFailedFilter.html":{},"classes/R.html":{},"guards/RequestGuard.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/Response.html":{},"guards/ResponseGuard.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{},"classes/Tag.html":{},"controllers/TagsController.html":{},"modules/TagsModule.html":{},"injectables/TagsService.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateTagsDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"classes/ValidationFailedFilter.html":{}}}],["exports",{"_index":216,"title":{},"body":{"modules/AppModule.html":{},"modules/CronModule.html":{},"modules/DatabaseModule.html":{},"modules/TagsModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["express",{"_index":1381,"title":{},"body":{"dependencies.html":{}}}],["expression",{"_index":337,"title":{},"body":{"classes/BaseModel.html":{},"classes/Tag.html":{},"classes/User.html":{}}}],["extend",{"_index":846,"title":{},"body":{"classes/CrudService.html":{},"interfaces/ICrudService.html":{}}}],["extend.ts",{"_index":1314,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["extendmoment(momentdefault",{"_index":1565,"title":{},"body":{"miscellaneous/variables.html":{}}}],["extends",{"_index":131,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"classes/BaseModel.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"classes/CreateTagsDto.html":{},"classes/CreateUserDto.html":{},"classes/CustomQueryBuilder.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/IBaseModel.html":{},"interfaces/ITag.html":{},"interfaces/IUser.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"classes/Tag.html":{},"classes/UpdateTagsDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["fact16",{"_index":495,"title":{},"body":{"injectables/CronService.html":{}}}],["factorial",{"_index":498,"title":{},"body":{"injectables/CronService.html":{}}}],["factorial(n",{"_index":502,"title":{},"body":{"injectables/CronService.html":{}}}],["factory",{"_index":1525,"title":{},"body":{"miscellaneous/variables.html":{}}}],["failed.filter.ts",{"_index":1058,"title":{},"body":{"classes/QueryFailedFilter.html":{},"classes/ValidationFailedFilter.html":{},"coverage.html":{}}}],["failed.filter.ts:23",{"_index":1069,"title":{},"body":{"classes/QueryFailedFilter.html":{}}}],["failed.filter.ts:7",{"_index":1296,"title":{},"body":{"classes/ValidationFailedFilter.html":{}}}],["false",{"_index":534,"title":{},"body":{"classes/CrudConfigService.html":{},"interfaces/CrudOptions.html":{},"classes/CrudRoutesFactory.html":{},"interfaces/GetManyDefaultResponse.html":{},"interfaces/ParamOption.html":{},"interfaces/ParamsOptions.html":{},"classes/R.html":{},"guards/ResponseGuard.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{},"miscellaneous/variables.html":{}}}],["feed",{"_index":100,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{}}}],["fetch",{"_index":356,"title":{},"body":{"classes/BaseModel.html":{},"interfaces/IBaseModel.html":{}}}],["fetchrelation",{"_index":318,"title":{},"body":{"classes/BaseModel.html":{},"classes/Tag.html":{},"classes/User.html":{}}}],["fetchrelation(expression",{"_index":332,"title":{},"body":{"classes/BaseModel.html":{},"interfaces/IBaseModel.html":{},"classes/Tag.html":{},"classes/User.html":{}}}],["field",{"_index":784,"title":{},"body":{"interfaces/CrudOptions.html":{},"interfaces/GetManyDefaultResponse.html":{},"interfaces/ParamOption.html":{},"interfaces/ParamsOptions.html":{}}}],["fields",{"_index":350,"title":{},"body":{"classes/BaseModel.html":{},"classes/CreateUserDto.html":{},"interfaces/IBaseModel.html":{},"interfaces/IUser.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{}}}],["file",{"_index":5,"title":{},"body":{"interfaces/APIResponse.html":{},"classes/ApiException.html":{},"controllers/AppController.html":{},"interfaces/AppLaunchAction.html":{},"modules/AppModule.html":{},"classes/BaseModel.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"classes/CreateTagsDto.html":{},"classes/CreateUserDto.html":{},"modules/CronModule.html":{},"injectables/CronService.html":{},"classes/CrudConfigService.html":{},"classes/CrudController.html":{},"interfaces/CrudOptions.html":{},"classes/CrudRoutesFactory.html":{},"classes/CrudService.html":{},"classes/CustomQueryBuilder.html":{},"modules/DatabaseModule.html":{},"injectables/ExcludeNullUndefinedInterceptor.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetManyDefaultResponse.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"controllers/HealthController.html":{},"interfaces/IBaseModel.html":{},"interfaces/ICrudService.html":{},"interfaces/IPagination.html":{},"interfaces/ITag.html":{},"interfaces/ITryRequest.html":{},"interfaces/IUser.html":{},"classes/PaginationParams.html":{},"interfaces/ParamOption.html":{},"interfaces/ParamsOptions.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"classes/QueryFailedFilter.html":{},"classes/R.html":{},"guards/RequestGuard.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/Response.html":{},"guards/ResponseGuard.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{},"classes/Tag.html":{},"controllers/TagsController.html":{},"modules/TagsModule.html":{},"injectables/TagsService.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateTagsDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"classes/ValidationFailedFilter.html":{},"coverage.html":{}}}],["filename",{"_index":953,"title":{},"body":{"modules/DatabaseModule.html":{},"miscellaneous/variables.html":{}}}],["filter",{"_index":351,"title":{},"body":{"classes/BaseModel.html":{},"classes/CrudController.html":{},"classes/CrudService.html":{},"interfaces/IBaseModel.html":{},"interfaces/ICrudService.html":{},"injectables/UsersService.html":{}}}],["filter((one",{"_index":575,"title":{},"body":{"classes/CrudConfigService.html":{},"classes/CrudRoutesFactory.html":{},"classes/R.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{}}}],["find",{"_index":740,"title":{},"body":{"classes/CrudController.html":{},"classes/CrudService.html":{},"interfaces/ICrudService.html":{},"dependencies.html":{}}}],["findall",{"_index":731,"title":{},"body":{"classes/CrudController.html":{},"classes/CrudService.html":{},"interfaces/ICrudService.html":{},"controllers/TagsController.html":{},"injectables/TagsService.html":{},"injectables/UsersService.html":{}}}],["findall(filter",{"_index":737,"title":{},"body":{"classes/CrudController.html":{}}}],["findbyid(id",{"_index":882,"title":{},"body":{"classes/CrudService.html":{},"interfaces/ICrudService.html":{}}}],["findone",{"_index":732,"title":{},"body":{"classes/CrudController.html":{},"classes/CrudService.html":{},"interfaces/ICrudService.html":{},"controllers/TagsController.html":{},"injectables/TagsService.html":{},"injectables/UsersService.html":{}}}],["findone(@param('id",{"_index":767,"title":{},"body":{"classes/CrudController.html":{},"controllers/TagsController.html":{}}}],["findone(id",{"_index":744,"title":{},"body":{"classes/CrudController.html":{},"classes/CrudService.html":{},"interfaces/ICrudService.html":{},"controllers/TagsController.html":{},"injectables/TagsService.html":{},"injectables/UsersService.html":{}}}],["finds",{"_index":862,"title":{},"body":{"classes/CrudService.html":{},"interfaces/ICrudService.html":{},"injectables/UsersService.html":{}}}],["first",{"_index":292,"title":{},"body":{"modules/AppModule.html":{},"classes/CrudService.html":{},"interfaces/ICrudService.html":{},"injectables/TagsService.html":{}}}],["firstname",{"_index":411,"title":{},"body":{"classes/CreateUserDto.html":{},"interfaces/IUser.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{}}}],["floating",{"_index":463,"title":{},"body":{"classes/CreateUserDto.html":{},"interfaces/IUser.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{}}}],["fn",{"_index":338,"title":{},"body":{"classes/BaseModel.html":{},"interfaces/IBaseModel.html":{}}}],["fn.now",{"_index":365,"title":{},"body":{"classes/BaseModel.html":{},"interfaces/IBaseModel.html":{}}}],["follower",{"_index":127,"title":{"interfaces/Follower.html":{}},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{},"coverage.html":{}}}],["following",{"_index":55,"title":{"interfaces/Following.html":{}},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{},"coverage.html":{}}}],["forbidden",{"_index":188,"title":{},"body":{"classes/ApiException.html":{}}}],["foreignkeyviolationerror",{"_index":1064,"title":{},"body":{"classes/QueryFailedFilter.html":{}}}],["format",{"_index":430,"title":{},"body":{"classes/CreateUserDto.html":{},"interfaces/IUser.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{}}}],["found",{"_index":182,"title":{},"body":{"classes/ApiException.html":{},"classes/CrudController.html":{}}}],["framework",{"_index":1454,"title":{},"body":{"index.html":{}}}],["func",{"_index":563,"title":{},"body":{"classes/CrudConfigService.html":{},"classes/CrudRoutesFactory.html":{},"classes/R.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{}}}],["function",{"_index":178,"title":{},"body":{"classes/ApiException.html":{},"modules/AppModule.html":{},"classes/CrudConfigService.html":{},"interfaces/CrudOptions.html":{},"classes/CrudRoutesFactory.html":{},"classes/CustomQueryBuilder.html":{},"interfaces/GetManyDefaultResponse.html":{},"interfaces/ParamOption.html":{},"interfaces/ParamsOptions.html":{},"classes/R.html":{},"guards/RequestGuard.html":{},"guards/ResponseGuard.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["functionality",{"_index":849,"title":{},"body":{"classes/CrudService.html":{},"interfaces/ICrudService.html":{}}}],["functions",{"_index":1433,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["fuzzy",{"_index":441,"title":{},"body":{"classes/CreateUserDto.html":{},"interfaces/IUser.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{}}}],["gen/api",{"_index":138,"title":{},"body":{"classes/ApiException.html":{},"classes/CrudController.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["gen/crud",{"_index":528,"title":{},"body":{"classes/CrudConfigService.html":{},"classes/CrudRoutesFactory.html":{},"classes/R.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{},"coverage.html":{}}}],["gen/crud.decorator.ts",{"_index":1320,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["gen/utils/checks.util.ts",{"_index":1321,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["gen/utils/obj.util.ts",{"_index":1338,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["gen/utils/other.ts",{"_index":769,"title":{},"body":{"interfaces/CrudOptions.html":{},"interfaces/GetManyDefaultResponse.html":{},"interfaces/ParamOption.html":{},"interfaces/ParamsOptions.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["gen/utils/other.ts:30",{"_index":1055,"title":{},"body":{"interfaces/ParamsOptions.html":{}}}],["gen/utils/types/object",{"_index":1517,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["gender",{"_index":56,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{}}}],["generated",{"_index":391,"title":{},"body":{"classes/CreateTagsDto.html":{},"classes/CreateUserDto.html":{},"interfaces/ITag.html":{},"interfaces/IUser.html":{},"classes/Tag.html":{},"classes/UpdateTagsDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{}}}],["generic",{"_index":1029,"title":{},"body":{"interfaces/IPagination.html":{},"classes/PaginationParams.html":{}}}],["get(':id",{"_index":766,"title":{},"body":{"classes/CrudController.html":{},"controllers/TagsController.html":{}}}],["get()@httpcode(200)@healthcheck",{"_index":978,"title":{},"body":{"controllers/HealthController.html":{}}}],["get(metadatakey",{"_index":1083,"title":{},"body":{"classes/R.html":{}}}],["getapplaunchdata",{"_index":29,"title":{"interfaces/GetAppLaunchData.html":{}},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["getcomments",{"_index":32,"title":{"interfaces/GetComments.html":{}},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["getextramodels",{"_index":1144,"title":{},"body":{"classes/Swagger.html":{}}}],["getextramodels(target",{"_index":585,"title":{},"body":{"classes/CrudConfigService.html":{},"classes/CrudRoutesFactory.html":{},"classes/R.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{}}}],["getfollowers",{"_index":34,"title":{"interfaces/GetFollowers.html":{}},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["getfollowing",{"_index":35,"title":{"interfaces/GetFollowing.html":{}},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["gethello",{"_index":194,"title":{},"body":{"controllers/AppController.html":{}}}],["getmany",{"_index":793,"title":{},"body":{"interfaces/CrudOptions.html":{},"interfaces/GetManyDefaultResponse.html":{},"interfaces/ParamOption.html":{},"interfaces/ParamsOptions.html":{}}}],["getmany${resourcename}responsedto",{"_index":617,"title":{},"body":{"classes/CrudConfigService.html":{},"classes/CrudRoutesFactory.html":{},"classes/R.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{}}}],["getmanybase",{"_index":777,"title":{},"body":{"interfaces/CrudOptions.html":{},"interfaces/GetManyDefaultResponse.html":{},"interfaces/ParamOption.html":{},"interfaces/ParamsOptions.html":{},"miscellaneous/typealiases.html":{}}}],["getmanydefaultresponse",{"_index":550,"title":{"interfaces/GetManyDefaultResponse.html":{}},"body":{"classes/CrudConfigService.html":{},"interfaces/CrudOptions.html":{},"classes/CrudRoutesFactory.html":{},"interfaces/GetManyDefaultResponse.html":{},"interfaces/ParamOption.html":{},"interfaces/ParamsOptions.html":{},"classes/R.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{},"coverage.html":{}}}],["getmanyresponsedto",{"_index":613,"title":{},"body":{"classes/CrudConfigService.html":{},"classes/CrudRoutesFactory.html":{},"classes/R.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{}}}],["getmodelname",{"_index":839,"title":{},"body":{"classes/CrudRoutesFactory.html":{}}}],["getmodeltype",{"_index":841,"title":{},"body":{"classes/CrudRoutesFactory.html":{}}}],["getnotifications",{"_index":80,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{}}}],["getone",{"_index":590,"title":{},"body":{"classes/CrudConfigService.html":{},"classes/CrudRoutesFactory.html":{},"classes/R.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{}}}],["getone(name",{"_index":661,"title":{},"body":{"classes/CrudConfigService.html":{},"classes/CrudRoutesFactory.html":{},"classes/R.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{}}}],["getone(req",{"_index":663,"title":{},"body":{"classes/CrudConfigService.html":{},"classes/CrudRoutesFactory.html":{},"classes/R.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{}}}],["getonebase",{"_index":594,"title":{},"body":{"classes/CrudConfigService.html":{},"interfaces/CrudOptions.html":{},"classes/CrudRoutesFactory.html":{},"interfaces/GetManyDefaultResponse.html":{},"interfaces/ParamOption.html":{},"interfaces/ParamsOptions.html":{},"classes/R.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{},"miscellaneous/typealiases.html":{}}}],["getonebase(name",{"_index":665,"title":{},"body":{"classes/CrudConfigService.html":{},"classes/CrudRoutesFactory.html":{},"classes/R.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{}}}],["getonebase(req",{"_index":666,"title":{},"body":{"classes/CrudConfigService.html":{},"classes/CrudRoutesFactory.html":{},"classes/R.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{}}}],["getoneresponsedto",{"_index":619,"title":{},"body":{"classes/CrudConfigService.html":{},"classes/CrudRoutesFactory.html":{},"classes/R.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{}}}],["getownpropnames",{"_index":1339,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["getrescuelist",{"_index":33,"title":{"interfaces/GetRescueList.html":{}},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["getresponseok",{"_index":1145,"title":{},"body":{"classes/Swagger.html":{}}}],["getresponseok(func",{"_index":587,"title":{},"body":{"classes/CrudConfigService.html":{},"classes/CrudRoutesFactory.html":{},"classes/R.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{}}}],["getroutesschema",{"_index":668,"title":{},"body":{"classes/CrudConfigService.html":{},"classes/CrudRoutesFactory.html":{},"classes/R.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{}}}],["gettargetproto",{"_index":837,"title":{},"body":{"classes/CrudRoutesFactory.html":{}}}],["getting",{"_index":1450,"title":{"index.html":{}},"body":{}}],["getuserposts",{"_index":31,"title":{"interfaces/GetUserPosts.html":{}},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["getuserprofile",{"_index":30,"title":{"interfaces/GetUserProfile.html":{}},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["global",{"_index":798,"title":{},"body":{"interfaces/CrudOptions.html":{},"modules/DatabaseModule.html":{},"interfaces/GetManyDefaultResponse.html":{},"interfaces/ParamOption.html":{},"interfaces/ParamsOptions.html":{}}}],["graph",{"_index":1503,"title":{},"body":{"modules.html":{}}}],["grow",{"_index":1480,"title":{},"body":{"index.html":{}}}],["guard",{"_index":1089,"title":{"guards/RequestGuard.html":{},"guards/ResponseGuard.html":{}},"body":{"guards/RequestGuard.html":{},"coverage.html":{}}}],["guards",{"_index":1091,"title":{},"body":{"guards/RequestGuard.html":{},"guards/ResponseGuard.html":{},"overview.html":{}}}],["handlecron",{"_index":499,"title":{},"body":{"injectables/CronService.html":{}}}],["handleinterval",{"_index":500,"title":{},"body":{"injectables/CronService.html":{}}}],["handletimeout",{"_index":501,"title":{},"body":{"injectables/CronService.html":{}}}],["hapi/joi",{"_index":244,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["haslength",{"_index":1322,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["haslength(objkeys(val",{"_index":1560,"title":{},"body":{"miscellaneous/variables.html":{}}}],["haslength(val",{"_index":1536,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hasmore",{"_index":927,"title":{},"body":{"classes/CustomQueryBuilder.html":{}}}],["hasvalue",{"_index":1323,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["health",{"_index":279,"title":{},"body":{"modules/AppModule.html":{},"controllers/HealthController.html":{}}}],["health/health.controller",{"_index":248,"title":{},"body":{"modules/AppModule.html":{}}}],["healthcheck",{"_index":991,"title":{},"body":{"controllers/HealthController.html":{}}}],["healthcheckservice",{"_index":992,"title":{},"body":{"controllers/HealthController.html":{}}}],["healthcontroller",{"_index":227,"title":{"controllers/HealthController.html":{}},"body":{"modules/AppModule.html":{},"controllers/HealthController.html":{},"coverage.html":{}}}],["hello",{"_index":206,"title":{},"body":{"controllers/AppController.html":{}}}],["helmet",{"_index":1404,"title":{},"body":{"dependencies.html":{}}}],["helpers",{"_index":348,"title":{},"body":{"classes/BaseModel.html":{},"interfaces/IBaseModel.html":{},"guards/RequestGuard.html":{},"guards/ResponseGuard.html":{}}}],["here",{"_index":1489,"title":{},"body":{"index.html":{}}}],["hidden",{"_index":312,"title":{},"body":{"classes/BaseModel.html":{},"interfaces/IBaseModel.html":{},"classes/Tag.html":{},"classes/User.html":{}}}],["host",{"_index":1067,"title":{},"body":{"classes/QueryFailedFilter.html":{},"classes/ValidationFailedFilter.html":{}}}],["host.switchtohttp",{"_index":1072,"title":{},"body":{"classes/QueryFailedFilter.html":{},"classes/ValidationFailedFilter.html":{}}}],["httpcode",{"_index":987,"title":{},"body":{"controllers/HealthController.html":{}}}],["httpcode(200",{"_index":1005,"title":{},"body":{"controllers/HealthController.html":{}}}],["https://docs.nestjs.com",{"_index":1009,"title":{},"body":{"controllers/HealthController.html":{}}}],["https://nestjs.com",{"_index":1496,"title":{},"body":{"index.html":{}}}],["httpstatus",{"_index":24,"title":{},"body":{"interfaces/APIResponse.html":{},"classes/ApiException.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"classes/CrudConfigService.html":{},"classes/CrudController.html":{},"classes/CrudRoutesFactory.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"classes/QueryFailedFilter.html":{},"classes/R.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{},"classes/ValidationFailedFilter.html":{}}}],["httpstatus.ok",{"_index":595,"title":{},"body":{"classes/CrudConfigService.html":{},"classes/CrudController.html":{},"classes/CrudRoutesFactory.html":{},"classes/R.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{}}}],["httpstatus.precondition_failed",{"_index":1075,"title":{},"body":{"classes/QueryFailedFilter.html":{},"classes/ValidationFailedFilter.html":{}}}],["httpstatus[statuscode",{"_index":177,"title":{},"body":{"classes/ApiException.html":{}}}],["ibasemodel",{"_index":309,"title":{"interfaces/IBaseModel.html":{}},"body":{"classes/BaseModel.html":{},"interfaces/IBaseModel.html":{},"coverage.html":{}}}],["icrudservice",{"_index":734,"title":{"interfaces/ICrudService.html":{}},"body":{"classes/CrudController.html":{},"classes/CrudService.html":{},"interfaces/ICrudService.html":{},"coverage.html":{}}}],["id",{"_index":313,"title":{},"body":{"classes/BaseModel.html":{},"classes/CreateTagsDto.html":{},"classes/CreateUserDto.html":{},"classes/CrudController.html":{},"classes/CrudService.html":{},"interfaces/IBaseModel.html":{},"interfaces/ICrudService.html":{},"interfaces/ITag.html":{},"interfaces/IUser.html":{},"classes/Tag.html":{},"controllers/TagsController.html":{},"injectables/TagsService.html":{},"classes/UpdateTagsDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["id'})@apiresponse({status",{"_index":747,"title":{},"body":{"classes/CrudController.html":{}}}],["id'})@delete(':id",{"_index":1256,"title":{},"body":{"controllers/UsersController.html":{}}}],["id'})@put(':id",{"_index":1259,"title":{},"body":{"controllers/UsersController.html":{}}}],["identifier",{"_index":1303,"title":{},"body":{"coverage.html":{}}}],["ignore",{"_index":728,"title":{},"body":{"classes/CrudConfigService.html":{},"classes/CrudRoutesFactory.html":{},"classes/QueryFailedFilter.html":{},"classes/R.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{},"classes/ValidationFailedFilter.html":{}}}],["implements",{"_index":280,"title":{},"body":{"modules/AppModule.html":{},"classes/BaseModel.html":{},"classes/CreateTagsDto.html":{},"classes/CreateUserDto.html":{},"classes/CrudConfigService.html":{},"classes/CrudRoutesFactory.html":{},"classes/CrudService.html":{},"injectables/ExcludeNullUndefinedInterceptor.html":{},"controllers/HealthController.html":{},"interfaces/IBaseModel.html":{},"interfaces/ICrudService.html":{},"interfaces/ITag.html":{},"interfaces/IUser.html":{},"classes/QueryFailedFilter.html":{},"classes/R.html":{},"guards/RequestGuard.html":{},"interfaces/Response.html":{},"guards/ResponseGuard.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{},"classes/Tag.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateTagsDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"classes/ValidationFailedFilter.html":{}}}],["import",{"_index":25,"title":{},"body":{"interfaces/APIResponse.html":{},"classes/ApiException.html":{},"controllers/AppController.html":{},"interfaces/AppLaunchAction.html":{},"modules/AppModule.html":{},"classes/BaseModel.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"classes/CreateTagsDto.html":{},"classes/CreateUserDto.html":{},"modules/CronModule.html":{},"injectables/CronService.html":{},"classes/CrudConfigService.html":{},"classes/CrudController.html":{},"interfaces/CrudOptions.html":{},"classes/CrudRoutesFactory.html":{},"classes/CrudService.html":{},"classes/CustomQueryBuilder.html":{},"modules/DatabaseModule.html":{},"injectables/ExcludeNullUndefinedInterceptor.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetManyDefaultResponse.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"controllers/HealthController.html":{},"interfaces/IBaseModel.html":{},"interfaces/ICrudService.html":{},"interfaces/IPagination.html":{},"interfaces/ITag.html":{},"interfaces/IUser.html":{},"classes/PaginationParams.html":{},"interfaces/ParamOption.html":{},"interfaces/ParamsOptions.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"classes/QueryFailedFilter.html":{},"classes/R.html":{},"guards/RequestGuard.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/Response.html":{},"guards/ResponseGuard.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{},"classes/Tag.html":{},"controllers/TagsController.html":{},"modules/TagsModule.html":{},"injectables/TagsService.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateTagsDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"classes/ValidationFailedFilter.html":{}}}],["imports",{"_index":228,"title":{},"body":{"modules/AppModule.html":{}}}],["in,no",{"_index":1105,"title":{},"body":{"guards/RequestGuard.html":{}}}],["included",{"_index":1030,"title":{},"body":{"interfaces/IPagination.html":{},"classes/PaginationParams.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"interfaces/APIResponse.html":{},"classes/ApiException.html":{},"controllers/AppController.html":{},"interfaces/AppLaunchAction.html":{},"classes/BaseModel.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"classes/CreateTagsDto.html":{},"classes/CreateUserDto.html":{},"injectables/CronService.html":{},"classes/CrudConfigService.html":{},"classes/CrudController.html":{},"interfaces/CrudOptions.html":{},"classes/CrudRoutesFactory.html":{},"classes/CrudService.html":{},"classes/CustomQueryBuilder.html":{},"injectables/ExcludeNullUndefinedInterceptor.html":{},"interfaces/Follower.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetManyDefaultResponse.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"controllers/HealthController.html":{},"interfaces/IBaseModel.html":{},"interfaces/ICrudService.html":{},"interfaces/IPagination.html":{},"interfaces/ITag.html":{},"interfaces/ITryRequest.html":{},"interfaces/IUser.html":{},"classes/PaginationParams.html":{},"interfaces/ParamOption.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"classes/QueryFailedFilter.html":{},"classes/R.html":{},"guards/RequestGuard.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/Response.html":{},"guards/ResponseGuard.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{},"classes/Tag.html":{},"controllers/TagsController.html":{},"injectables/TagsService.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/TransformInterceptor.html":{},"classes/User.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"classes/ValidationFailedFilter.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["indexable",{"_index":1054,"title":{},"body":{"interfaces/ParamsOptions.html":{}}}],["info",{"_index":3,"title":{},"body":{"interfaces/APIResponse.html":{},"classes/ApiException.html":{},"controllers/AppController.html":{},"interfaces/AppLaunchAction.html":{},"modules/AppModule.html":{},"classes/BaseModel.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"classes/CreateTagsDto.html":{},"classes/CreateUserDto.html":{},"modules/CronModule.html":{},"injectables/CronService.html":{},"classes/CrudConfigService.html":{},"classes/CrudController.html":{},"interfaces/CrudOptions.html":{},"classes/CrudRoutesFactory.html":{},"classes/CrudService.html":{},"classes/CustomQueryBuilder.html":{},"modules/DatabaseModule.html":{},"injectables/ExcludeNullUndefinedInterceptor.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetManyDefaultResponse.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"controllers/HealthController.html":{},"interfaces/IBaseModel.html":{},"interfaces/ICrudService.html":{},"interfaces/IPagination.html":{},"interfaces/ITag.html":{},"interfaces/ITryRequest.html":{},"interfaces/IUser.html":{},"classes/PaginationParams.html":{},"interfaces/ParamOption.html":{},"interfaces/ParamsOptions.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"classes/QueryFailedFilter.html":{},"classes/R.html":{},"guards/RequestGuard.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/Response.html":{},"guards/ResponseGuard.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{},"classes/Tag.html":{},"controllers/TagsController.html":{},"modules/TagsModule.html":{},"injectables/TagsService.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateTagsDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"classes/ValidationFailedFilter.html":{}}}],["inherited",{"_index":1159,"title":{},"body":{"classes/Tag.html":{},"classes/User.html":{},"injectables/UsersService.html":{}}}],["initialized",{"_index":303,"title":{},"body":{"modules/AppModule.html":{},"controllers/HealthController.html":{}}}],["inject",{"_index":1205,"title":{},"body":{"injectables/TagsService.html":{},"injectables/UsersService.html":{}}}],["injectable",{"_index":481,"title":{"injectables/CronService.html":{},"injectables/ExcludeNullUndefinedInterceptor.html":{},"injectables/TagsService.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/TransformInterceptor.html":{},"injectables/UsersService.html":{}},"body":{"injectables/CronService.html":{},"injectables/ExcludeNullUndefinedInterceptor.html":{},"guards/RequestGuard.html":{},"interfaces/Response.html":{},"guards/ResponseGuard.html":{},"injectables/TagsService.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/TransformInterceptor.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["injectables",{"_index":482,"title":{},"body":{"injectables/CronService.html":{},"injectables/ExcludeNullUndefinedInterceptor.html":{},"injectables/TagsService.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/TransformInterceptor.html":{},"injectables/UsersService.html":{},"overview.html":{}}}],["injected",{"_index":857,"title":{},"body":{"classes/CrudService.html":{},"interfaces/ICrudService.html":{}}}],["inputs",{"_index":1101,"title":{},"body":{"guards/RequestGuard.html":{}}}],["inputs[key",{"_index":1106,"title":{},"body":{"guards/RequestGuard.html":{}}}],["installation",{"_index":1462,"title":{},"body":{"index.html":{}}}],["installrunning",{"_index":1464,"title":{},"body":{"index.html":{}}}],["instance",{"_index":396,"title":{},"body":{"classes/CreateTagsDto.html":{},"classes/CreateUserDto.html":{},"interfaces/ITag.html":{},"interfaces/IUser.html":{},"classes/Tag.html":{},"classes/UpdateTagsDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{}}}],["instanceof",{"_index":1107,"title":{},"body":{"guards/RequestGuard.html":{},"guards/ResponseGuard.html":{},"injectables/TimeoutInterceptor.html":{},"miscellaneous/variables.html":{}}}],["integer",{"_index":400,"title":{},"body":{"classes/CreateTagsDto.html":{},"classes/CreateUserDto.html":{},"interfaces/ITag.html":{},"interfaces/IUser.html":{},"classes/Tag.html":{},"classes/UpdateTagsDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{}}}],["intercept",{"_index":963,"title":{},"body":{"injectables/ExcludeNullUndefinedInterceptor.html":{},"interfaces/Response.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/TransformInterceptor.html":{}}}],["intercept(context",{"_index":964,"title":{},"body":{"injectables/ExcludeNullUndefinedInterceptor.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/TransformInterceptor.html":{}}}],["interceptor",{"_index":1221,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["interceptors",{"_index":960,"title":{},"body":{"injectables/ExcludeNullUndefinedInterceptor.html":{}}}],["interface",{"_index":0,"title":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/CrudOptions.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetManyDefaultResponse.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/IBaseModel.html":{},"interfaces/ICrudService.html":{},"interfaces/IPagination.html":{},"interfaces/ITag.html":{},"interfaces/ITryRequest.html":{},"interfaces/IUser.html":{},"interfaces/ParamOption.html":{},"interfaces/ParamsOptions.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/Response.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{}},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"classes/BaseModel.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"classes/CreateTagsDto.html":{},"classes/CreateUserDto.html":{},"interfaces/CrudOptions.html":{},"classes/CrudService.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetManyDefaultResponse.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/IBaseModel.html":{},"interfaces/ICrudService.html":{},"interfaces/IPagination.html":{},"interfaces/ITag.html":{},"interfaces/ITryRequest.html":{},"interfaces/IUser.html":{},"classes/PaginationParams.html":{},"interfaces/ParamOption.html":{},"interfaces/ParamsOptions.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/Response.html":{},"classes/Tag.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateTagsDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{},"coverage.html":{}}}],["interfaces",{"_index":2,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/CrudOptions.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetManyDefaultResponse.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/IBaseModel.html":{},"interfaces/ICrudService.html":{},"interfaces/IPagination.html":{},"interfaces/ITag.html":{},"interfaces/ITryRequest.html":{},"interfaces/IUser.html":{},"interfaces/ParamOption.html":{},"interfaces/ParamsOptions.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/Response.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{},"overview.html":{}}}],["internal",{"_index":185,"title":{},"body":{"classes/ApiException.html":{}}}],["internalservererrorexception",{"_index":867,"title":{},"body":{"classes/CrudService.html":{},"interfaces/ICrudService.html":{}}}],["interval",{"_index":487,"title":{},"body":{"injectables/CronService.html":{},"controllers/HealthController.html":{}}}],["interval(100000",{"_index":507,"title":{},"body":{"injectables/CronService.html":{}}}],["interval(5000).pipe",{"_index":1002,"title":{},"body":{"controllers/HealthController.html":{}}}],["ipagination",{"_index":759,"title":{"interfaces/IPagination.html":{}},"body":{"classes/CrudController.html":{},"classes/CrudService.html":{},"interfaces/ICrudService.html":{},"interfaces/IPagination.html":{},"classes/PaginationParams.html":{},"coverage.html":{}}}],["isactive",{"_index":49,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"classes/CreateUserDto.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/IUser.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{}}}],["isarray",{"_index":614,"title":{},"body":{"classes/CrudConfigService.html":{},"classes/CrudRoutesFactory.html":{},"classes/R.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{}}}],["isarrayfull",{"_index":541,"title":{},"body":{"classes/CrudConfigService.html":{},"classes/CrudRoutesFactory.html":{},"classes/R.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["isarrayfull(val",{"_index":1531,"title":{},"body":{"miscellaneous/variables.html":{}}}],["isarraystrings",{"_index":1324,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["isboolean",{"_index":425,"title":{},"body":{"classes/CreateUserDto.html":{},"interfaces/IUser.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["isboolean(val",{"_index":1563,"title":{},"body":{"miscellaneous/variables.html":{}}}],["isdate",{"_index":1325,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["isdate(val",{"_index":1564,"title":{},"body":{"miscellaneous/variables.html":{}}}],["isdatestring",{"_index":1326,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["isemail",{"_index":424,"title":{},"body":{"classes/CreateUserDto.html":{},"interfaces/IUser.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{}}}],["isempty",{"_index":1350,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["isempty(value",{"_index":912,"title":{},"body":{"classes/CustomQueryBuilder.html":{},"miscellaneous/functions.html":{}}}],["isequal",{"_index":1327,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["isequal(val",{"_index":1551,"title":{},"body":{"miscellaneous/variables.html":{}}}],["isfalse",{"_index":542,"title":{},"body":{"classes/CrudConfigService.html":{},"classes/CrudRoutesFactory.html":{},"classes/R.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["isfalse(this.options.serialize.create",{"_index":687,"title":{},"body":{"classes/CrudConfigService.html":{},"classes/CrudRoutesFactory.html":{},"classes/R.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{}}}],["isfalse(this.options.serialize.delete",{"_index":693,"title":{},"body":{"classes/CrudConfigService.html":{},"classes/CrudRoutesFactory.html":{},"classes/R.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{}}}],["isfalse(this.options.serialize.get",{"_index":682,"title":{},"body":{"classes/CrudConfigService.html":{},"classes/CrudRoutesFactory.html":{},"classes/R.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{}}}],["isfalse(this.options.serialize.getmany",{"_index":684,"title":{},"body":{"classes/CrudConfigService.html":{},"classes/CrudRoutesFactory.html":{},"classes/R.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{}}}],["isfalse(this.options.serialize.replace",{"_index":691,"title":{},"body":{"classes/CrudConfigService.html":{},"classes/CrudRoutesFactory.html":{},"classes/R.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{}}}],["isfalse(this.options.serialize.update",{"_index":689,"title":{},"body":{"classes/CrudConfigService.html":{},"classes/CrudRoutesFactory.html":{},"classes/R.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{}}}],["isfunction",{"_index":543,"title":{},"body":{"classes/CrudConfigService.html":{},"classes/CrudRoutesFactory.html":{},"classes/R.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["isfunction(this.modeltype",{"_index":698,"title":{},"body":{"classes/CrudConfigService.html":{},"classes/CrudRoutesFactory.html":{},"classes/R.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{}}}],["isfunction(this.options.serialize.create",{"_index":705,"title":{},"body":{"classes/CrudConfigService.html":{},"classes/CrudRoutesFactory.html":{},"classes/R.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{}}}],["isfunction(this.options.serialize.delete",{"_index":711,"title":{},"body":{"classes/CrudConfigService.html":{},"classes/CrudRoutesFactory.html":{},"classes/R.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{}}}],["isfunction(this.options.serialize.get",{"_index":701,"title":{},"body":{"classes/CrudConfigService.html":{},"classes/CrudRoutesFactory.html":{},"classes/R.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{}}}],["isfunction(this.options.serialize.replace",{"_index":709,"title":{},"body":{"classes/CrudConfigService.html":{},"classes/CrudRoutesFactory.html":{},"classes/R.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{}}}],["isfunction(this.options.serialize.update",{"_index":707,"title":{},"body":{"classes/CrudConfigService.html":{},"classes/CrudRoutesFactory.html":{},"classes/R.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{}}}],["isglobal",{"_index":253,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["isin",{"_index":1328,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["isnil",{"_index":1329,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["isnotempty",{"_index":378,"title":{},"body":{"classes/CreateTagsDto.html":{},"classes/CreateUserDto.html":{},"interfaces/ITag.html":{},"interfaces/IUser.html":{},"classes/Tag.html":{},"classes/UpdateTagsDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["isnotempty(records",{"_index":934,"title":{},"body":{"classes/CustomQueryBuilder.html":{}}}],["isnotempty(value",{"_index":1448,"title":{},"body":{"miscellaneous/functions.html":{}}}],["isnull",{"_index":1330,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["isnull(val",{"_index":1554,"title":{},"body":{"miscellaneous/variables.html":{}}}],["isnumber",{"_index":1331,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["isnumber(val",{"_index":1562,"title":{},"body":{"miscellaneous/variables.html":{}}}],["isnumeric",{"_index":1332,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["isobject",{"_index":1333,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["isobject(val",{"_index":1559,"title":{},"body":{"miscellaneous/variables.html":{}}}],["isobject(value",{"_index":909,"title":{},"body":{"classes/CustomQueryBuilder.html":{},"miscellaneous/functions.html":{}}}],["isobjectfull",{"_index":544,"title":{},"body":{"classes/CrudConfigService.html":{},"classes/CrudRoutesFactory.html":{},"classes/R.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["isobjectfull(config.params",{"_index":625,"title":{},"body":{"classes/CrudConfigService.html":{},"classes/CrudRoutesFactory.html":{},"classes/R.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{}}}],["isobjectfull(config.query",{"_index":622,"title":{},"body":{"classes/CrudConfigService.html":{},"classes/CrudRoutesFactory.html":{},"classes/R.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{}}}],["isobjectfull(config.serialize",{"_index":628,"title":{},"body":{"classes/CrudConfigService.html":{},"classes/CrudRoutesFactory.html":{},"classes/R.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{}}}],["isobjectfull(this.options.dto",{"_index":677,"title":{},"body":{"classes/CrudConfigService.html":{},"classes/CrudRoutesFactory.html":{},"classes/R.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{}}}],["isobjectfull(this.options.query",{"_index":674,"title":{},"body":{"classes/CrudConfigService.html":{},"classes/CrudRoutesFactory.html":{},"classes/R.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{}}}],["isoptional",{"_index":423,"title":{},"body":{"classes/CreateUserDto.html":{},"interfaces/IPagination.html":{},"interfaces/IUser.html":{},"classes/PaginationParams.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{}}}],["isownprofile",{"_index":57,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{}}}],["isrecent",{"_index":99,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{}}}],["isrescuer",{"_index":58,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{}}}],["isstring",{"_index":379,"title":{},"body":{"classes/CreateTagsDto.html":{},"classes/CreateUserDto.html":{},"interfaces/ITag.html":{},"interfaces/IUser.html":{},"classes/Tag.html":{},"classes/UpdateTagsDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["isstring(val",{"_index":1561,"title":{},"body":{"miscellaneous/variables.html":{}}}],["isstringfull",{"_index":1334,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["isstringfull(v",{"_index":1538,"title":{},"body":{"miscellaneous/variables.html":{}}}],["isstringfull(val",{"_index":1539,"title":{},"body":{"miscellaneous/variables.html":{}}}],["istrue",{"_index":1335,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["isundefined",{"_index":1336,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["isundefined(val",{"_index":1553,"title":{},"body":{"miscellaneous/variables.html":{}}}],["isuserreactedtopost",{"_index":87,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{}}}],["isvalue",{"_index":1337,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["isvalue(o",{"_index":1533,"title":{},"body":{"miscellaneous/variables.html":{}}}],["isvalue(val",{"_index":1534,"title":{},"body":{"miscellaneous/variables.html":{}}}],["itag",{"_index":371,"title":{"interfaces/ITag.html":{}},"body":{"classes/CreateTagsDto.html":{},"interfaces/ITag.html":{},"classes/Tag.html":{},"classes/UpdateTagsDto.html":{},"coverage.html":{}}}],["items",{"_index":606,"title":{},"body":{"classes/CrudConfigService.html":{},"classes/CrudRoutesFactory.html":{},"interfaces/IPagination.html":{},"classes/PaginationParams.html":{},"classes/R.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{}}}],["itryrequest",{"_index":1044,"title":{"interfaces/ITryRequest.html":{}},"body":{"interfaces/ITryRequest.html":{},"coverage.html":{}}}],["iuser",{"_index":409,"title":{"interfaces/IUser.html":{}},"body":{"classes/CreateUserDto.html":{},"interfaces/IUser.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"coverage.html":{}}}],["jobs",{"_index":486,"title":{},"body":{"injectables/CronService.html":{}}}],["joi",{"_index":243,"title":{},"body":{"modules/AppModule.html":{}}}],["joi.number().default(3000",{"_index":261,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["joi.object",{"_index":259,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["joi.string",{"_index":263,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["joi.string().required",{"_index":271,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["join",{"_index":1486,"title":{},"body":{"index.html":{}}}],["json",{"_index":388,"title":{},"body":{"classes/CreateTagsDto.html":{},"classes/CreateUserDto.html":{},"interfaces/ITag.html":{},"interfaces/IUser.html":{},"classes/Tag.html":{},"classes/UpdateTagsDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{}}}],["jsonschema",{"_index":383,"title":{},"body":{"classes/CreateTagsDto.html":{},"classes/CreateUserDto.html":{},"interfaces/ITag.html":{},"interfaces/IUser.html":{},"classes/Tag.html":{},"classes/UpdateTagsDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{}}}],["kamil",{"_index":1493,"title":{},"body":{"index.html":{}}}],["keep",{"_index":999,"title":{},"body":{"controllers/HealthController.html":{}}}],["key",{"_index":789,"title":{},"body":{"interfaces/CrudOptions.html":{},"interfaces/GetManyDefaultResponse.html":{},"interfaces/ParamOption.html":{},"interfaces/ParamsOptions.html":{},"guards/RequestGuard.html":{}}}],["keyof",{"_index":1043,"title":{},"body":{"interfaces/IPagination.html":{},"classes/PaginationParams.html":{}}}],["knex",{"_index":938,"title":{},"body":{"modules/DatabaseModule.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["knex.sqlite",{"_index":954,"title":{},"body":{"modules/DatabaseModule.html":{},"miscellaneous/variables.html":{}}}],["knexconnection",{"_index":946,"title":{},"body":{"modules/DatabaseModule.html":{},"miscellaneous/variables.html":{}}}],["knexsnakecasemappers",{"_index":939,"title":{},"body":{"modules/DatabaseModule.html":{},"miscellaneous/variables.html":{}}}],["lastname",{"_index":412,"title":{},"body":{"classes/CreateUserDto.html":{},"interfaces/IUser.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{}}}],["latitude",{"_index":59,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{}}}],["legend",{"_index":212,"title":{},"body":{"modules/AppModule.html":{},"modules/CronModule.html":{},"modules/TagsModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["license",{"_index":1499,"title":{},"body":{"index.html":{}}}],["licensed",{"_index":1477,"title":{},"body":{"index.html":{}}}],["limit",{"_index":790,"title":{},"body":{"interfaces/CrudOptions.html":{},"interfaces/GetManyDefaultResponse.html":{},"interfaces/ParamOption.html":{},"interfaces/ParamsOptions.html":{},"dependencies.html":{}}}],["line",{"_index":460,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/CrudConfigService.html":{},"interfaces/CrudOptions.html":{},"classes/CrudRoutesFactory.html":{},"classes/CustomQueryBuilder.html":{},"modules/DatabaseModule.html":{},"injectables/ExcludeNullUndefinedInterceptor.html":{},"interfaces/GetManyDefaultResponse.html":{},"controllers/HealthController.html":{},"interfaces/IUser.html":{},"interfaces/ParamOption.html":{},"interfaces/ParamsOptions.html":{},"classes/QueryFailedFilter.html":{},"classes/R.html":{},"guards/RequestGuard.html":{},"interfaces/Response.html":{},"guards/ResponseGuard.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"classes/ValidationFailedFilter.html":{},"miscellaneous/variables.html":{}}}],["link",{"_index":37,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{}}}],["listing",{"_index":1031,"title":{},"body":{"interfaces/IPagination.html":{},"classes/PaginationParams.html":{}}}],["literal",{"_index":771,"title":{},"body":{"interfaces/CrudOptions.html":{},"interfaces/IPagination.html":{},"interfaces/Rescues.html":{},"miscellaneous/typealiases.html":{}}}],["literal.type.ts",{"_index":1516,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["load",{"_index":531,"title":{},"body":{"classes/CrudConfigService.html":{}}}],["load(config",{"_index":536,"title":{},"body":{"classes/CrudConfigService.html":{},"classes/CrudRoutesFactory.html":{},"classes/R.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{}}}],["local",{"_index":1416,"title":{},"body":{"dependencies.html":{}}}],["lodash",{"_index":907,"title":{},"body":{"classes/CustomQueryBuilder.html":{},"dependencies.html":{}}}],["logger",{"_index":496,"title":{},"body":{"injectables/CronService.html":{}}}],["logger(cronservice.name",{"_index":515,"title":{},"body":{"injectables/CronService.html":{}}}],["logging",{"_index":272,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["longitude",{"_index":60,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{}}}],["loop",{"_index":936,"title":{},"body":{"classes/CustomQueryBuilder.html":{}}}],["loop,@typescript",{"_index":933,"title":{},"body":{"classes/CustomQueryBuilder.html":{}}}],["many",{"_index":600,"title":{},"body":{"classes/CrudConfigService.html":{},"classes/CrudRoutesFactory.html":{},"classes/R.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{}}}],["map",{"_index":972,"title":{},"body":{"injectables/ExcludeNullUndefinedInterceptor.html":{},"controllers/HealthController.html":{},"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{},"dependencies.html":{}}}],["map((_",{"_index":1003,"title":{},"body":{"controllers/HealthController.html":{}}}],["map((name",{"_index":573,"title":{},"body":{"classes/CrudConfigService.html":{},"classes/CrudRoutesFactory.html":{},"classes/R.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{}}}],["mappedpartialtype",{"_index":375,"title":{},"body":{"classes/CreateTagsDto.html":{},"classes/CreateUserDto.html":{},"interfaces/ITag.html":{},"interfaces/IUser.html":{},"classes/Tag.html":{},"classes/UpdateTagsDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{}}}],["mapping",{"_index":358,"title":{},"body":{"classes/BaseModel.html":{},"interfaces/IBaseModel.html":{}}}],["match",{"_index":442,"title":{},"body":{"classes/CreateUserDto.html":{},"interfaces/IUser.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{}}}],["matching",{"_index":132,"title":{},"body":{"interfaces/APIResponse.html":{},"classes/ApiException.html":{},"controllers/AppController.html":{},"interfaces/AppLaunchAction.html":{},"modules/AppModule.html":{},"classes/BaseModel.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"classes/CreateTagsDto.html":{},"classes/CreateUserDto.html":{},"modules/CronModule.html":{},"injectables/CronService.html":{},"classes/CrudConfigService.html":{},"classes/CrudController.html":{},"interfaces/CrudOptions.html":{},"classes/CrudRoutesFactory.html":{},"classes/CrudService.html":{},"classes/CustomQueryBuilder.html":{},"modules/DatabaseModule.html":{},"injectables/ExcludeNullUndefinedInterceptor.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetManyDefaultResponse.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"controllers/HealthController.html":{},"interfaces/IBaseModel.html":{},"interfaces/ICrudService.html":{},"interfaces/IPagination.html":{},"interfaces/ITag.html":{},"interfaces/ITryRequest.html":{},"interfaces/IUser.html":{},"classes/PaginationParams.html":{},"interfaces/ParamOption.html":{},"interfaces/ParamsOptions.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"classes/QueryFailedFilter.html":{},"classes/R.html":{},"guards/RequestGuard.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/Response.html":{},"guards/ResponseGuard.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{},"classes/Tag.html":{},"controllers/TagsController.html":{},"modules/TagsModule.html":{},"injectables/TagsService.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateTagsDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"classes/ValidationFailedFilter.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["math.ceil(result.total",{"_index":919,"title":{},"body":{"classes/CustomQueryBuilder.html":{}}}],["math.ceil(total",{"_index":880,"title":{},"body":{"classes/CrudService.html":{},"interfaces/ICrudService.html":{}}}],["maxlength",{"_index":380,"title":{},"body":{"classes/CreateTagsDto.html":{},"classes/CreateUserDto.html":{},"interfaces/ITag.html":{},"interfaces/IUser.html":{},"classes/Tag.html":{},"classes/UpdateTagsDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{}}}],["maxlength(36",{"_index":404,"title":{},"body":{"classes/CreateTagsDto.html":{},"classes/CreateUserDto.html":{},"interfaces/ITag.html":{},"interfaces/IUser.html":{},"classes/Tag.html":{},"classes/UpdateTagsDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{}}}],["maxlimit",{"_index":791,"title":{},"body":{"interfaces/CrudOptions.html":{},"interfaces/GetManyDefaultResponse.html":{},"interfaces/ParamOption.html":{},"interfaces/ParamsOptions.html":{}}}],["mb",{"_index":1014,"title":{},"body":{"controllers/HealthController.html":{}}}],["member",{"_index":815,"title":{},"body":{"interfaces/CrudOptions.html":{},"classes/CustomQueryBuilder.html":{},"interfaces/GetManyDefaultResponse.html":{},"controllers/HealthController.html":{},"interfaces/ParamOption.html":{},"interfaces/ParamsOptions.html":{},"classes/QueryFailedFilter.html":{},"guards/RequestGuard.html":{},"guards/ResponseGuard.html":{},"classes/ValidationFailedFilter.html":{}}}],["memory",{"_index":1001,"title":{},"body":{"controllers/HealthController.html":{}}}],["merge",{"_index":673,"title":{},"body":{"classes/CrudConfigService.html":{},"classes/CrudRoutesFactory.html":{},"classes/R.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{}}}],["mergeoptions",{"_index":672,"title":{},"body":{"classes/CrudConfigService.html":{},"classes/CrudRoutesFactory.html":{},"classes/R.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{}}}],["message",{"_index":13,"title":{},"body":{"interfaces/APIResponse.html":{},"classes/ApiException.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"classes/QueryFailedFilter.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"guards/ResponseGuard.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{},"classes/ValidationFailedFilter.html":{}}}],["messageevent",{"_index":988,"title":{},"body":{"controllers/HealthController.html":{}}}],["meta",{"_index":569,"title":{},"body":{"classes/CrudConfigService.html":{},"classes/CrudRoutesFactory.html":{},"classes/R.html":{},"guards/ResponseGuard.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{}}}],["metadata",{"_index":584,"title":{},"body":{"classes/CrudConfigService.html":{},"classes/CrudRoutesFactory.html":{},"interfaces/IPagination.html":{},"classes/PaginationParams.html":{},"classes/R.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{},"dependencies.html":{}}}],["metadatakey",{"_index":554,"title":{},"body":{"classes/CrudConfigService.html":{},"classes/CrudRoutesFactory.html":{},"classes/R.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{}}}],["metadatatoadd",{"_index":724,"title":{},"body":{"classes/CrudConfigService.html":{},"classes/CrudRoutesFactory.html":{},"classes/R.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{}}}],["metadatavalue",{"_index":555,"title":{},"body":{"classes/CrudConfigService.html":{},"classes/CrudRoutesFactory.html":{},"classes/R.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{}}}],["method",{"_index":489,"title":{},"body":{"injectables/CronService.html":{},"classes/CrudConfigService.html":{},"classes/CrudRoutesFactory.html":{},"classes/R.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{}}}],["methods",{"_index":193,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"classes/BaseModel.html":{},"injectables/CronService.html":{},"classes/CrudConfigService.html":{},"classes/CrudController.html":{},"classes/CrudRoutesFactory.html":{},"classes/CrudService.html":{},"classes/CustomQueryBuilder.html":{},"injectables/ExcludeNullUndefinedInterceptor.html":{},"controllers/HealthController.html":{},"interfaces/ICrudService.html":{},"classes/QueryFailedFilter.html":{},"classes/R.html":{},"guards/RequestGuard.html":{},"guards/ResponseGuard.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{},"classes/Tag.html":{},"controllers/TagsController.html":{},"injectables/TagsService.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/TransformInterceptor.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"classes/ValidationFailedFilter.html":{}}}],["metrics",{"_index":982,"title":{},"body":{"controllers/HealthController.html":{}}}],["metrics.os",{"_index":1022,"title":{},"body":{"controllers/HealthController.html":{}}}],["milliseconds",{"_index":1234,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["min",{"_index":1032,"title":{},"body":{"interfaces/IPagination.html":{},"classes/PaginationParams.html":{}}}],["min(0",{"_index":1038,"title":{},"body":{"interfaces/IPagination.html":{},"classes/PaginationParams.html":{}}}],["minimum",{"_index":1037,"title":{},"body":{"interfaces/IPagination.html":{},"classes/PaginationParams.html":{}}}],["minlength",{"_index":381,"title":{},"body":{"classes/CreateTagsDto.html":{},"classes/CreateUserDto.html":{},"interfaces/ITag.html":{},"interfaces/IUser.html":{},"classes/Tag.html":{},"classes/UpdateTagsDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{}}}],["minlength(2",{"_index":403,"title":{},"body":{"classes/CreateTagsDto.html":{},"classes/CreateUserDto.html":{},"interfaces/ITag.html":{},"interfaces/IUser.html":{},"classes/Tag.html":{},"classes/UpdateTagsDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{}}}],["minlength(8",{"_index":473,"title":{},"body":{"classes/CreateUserDto.html":{},"interfaces/IUser.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{}}}],["miscellaneous",{"_index":1430,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":1476,"title":{},"body":{"index.html":{}}}],["mixed",{"_index":458,"title":{},"body":{"classes/CreateUserDto.html":{},"interfaces/IUser.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{}}}],["mixin",{"_index":339,"title":{},"body":{"classes/BaseModel.html":{},"interfaces/IBaseModel.html":{}}}],["mixin(model",{"_index":349,"title":{},"body":{"classes/BaseModel.html":{},"interfaces/IBaseModel.html":{}}}],["mode",{"_index":1468,"title":{},"body":{"index.html":{}}}],["model",{"_index":340,"title":{},"body":{"classes/BaseModel.html":{},"classes/CreateTagsDto.html":{},"classes/CreateUserDto.html":{},"interfaces/CrudOptions.html":{},"classes/CrudService.html":{},"classes/CustomQueryBuilder.html":{},"modules/DatabaseModule.html":{},"interfaces/GetManyDefaultResponse.html":{},"interfaces/IBaseModel.html":{},"interfaces/ICrudService.html":{},"interfaces/ITag.html":{},"interfaces/IUser.html":{},"interfaces/ParamOption.html":{},"interfaces/ParamsOptions.html":{},"classes/Tag.html":{},"classes/UpdateTagsDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["model.knex(knex",{"_index":956,"title":{},"body":{"modules/DatabaseModule.html":{},"miscellaneous/variables.html":{}}}],["model.name",{"_index":944,"title":{},"body":{"modules/DatabaseModule.html":{},"miscellaneous/variables.html":{}}}],["modelclass",{"_index":854,"title":{},"body":{"classes/CrudService.html":{},"interfaces/ICrudService.html":{},"injectables/TagsService.html":{},"injectables/UsersService.html":{}}}],["modelname",{"_index":649,"title":{},"body":{"classes/CrudConfigService.html":{},"classes/CrudRoutesFactory.html":{},"classes/R.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{}}}],["modeloptions",{"_index":341,"title":{},"body":{"classes/BaseModel.html":{},"interfaces/IBaseModel.html":{}}}],["modelproviders",{"_index":942,"title":{},"body":{"modules/DatabaseModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["models",{"_index":571,"title":{},"body":{"classes/CrudConfigService.html":{},"classes/CrudRoutesFactory.html":{},"modules/DatabaseModule.html":{},"classes/R.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["models.map((model",{"_index":943,"title":{},"body":{"modules/DatabaseModule.html":{},"miscellaneous/variables.html":{}}}],["modeltype",{"_index":651,"title":{},"body":{"classes/CrudConfigService.html":{},"classes/CrudRoutesFactory.html":{},"classes/R.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{}}}],["modifier",{"_index":438,"title":{},"body":{"classes/CreateUserDto.html":{},"interfaces/IUser.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{}}}],["modifiers",{"_index":426,"title":{},"body":{"classes/CreateUserDto.html":{},"interfaces/IUser.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{}}}],["module",{"_index":208,"title":{"modules/AppModule.html":{},"modules/CronModule.html":{},"modules/DatabaseModule.html":{},"modules/TagsModule.html":{},"modules/UsersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CronModule.html":{},"modules/DatabaseModule.html":{},"modules/TagsModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["modules",{"_index":210,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/CronModule.html":{},"modules/DatabaseModule.html":{},"modules/TagsModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["moment",{"_index":1315,"title":{},"body":{"coverage.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["more",{"_index":1225,"title":{},"body":{"injectables/TimeoutInterceptor.html":{},"index.html":{}}}],["myśliwiec",{"_index":1494,"title":{},"body":{"index.html":{}}}],["n",{"_index":504,"title":{},"body":{"injectables/CronService.html":{}}}],["name",{"_index":115,"title":{},"body":{"interfaces/APIResponse.html":{},"classes/ApiException.html":{},"interfaces/AppLaunchAction.html":{},"modules/AppModule.html":{},"classes/BaseModel.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"classes/CreateTagsDto.html":{},"classes/CreateUserDto.html":{},"injectables/CronService.html":{},"classes/CrudConfigService.html":{},"classes/CrudController.html":{},"classes/CrudRoutesFactory.html":{},"classes/CrudService.html":{},"classes/CustomQueryBuilder.html":{},"injectables/ExcludeNullUndefinedInterceptor.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"controllers/HealthController.html":{},"interfaces/ICrudService.html":{},"interfaces/ITag.html":{},"interfaces/IUser.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"classes/QueryFailedFilter.html":{},"classes/R.html":{},"guards/RequestGuard.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"guards/ResponseGuard.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{},"classes/Tag.html":{},"controllers/TagsController.html":{},"injectables/TagsService.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateTagsDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"classes/ValidationFailedFilter.html":{},"miscellaneous/functions.html":{}}}],["name.trim().split(/\\s",{"_index":469,"title":{},"body":{"classes/CreateUserDto.html":{},"interfaces/IUser.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{}}}],["namepart",{"_index":468,"title":{},"body":{"classes/CreateUserDto.html":{},"interfaces/IUser.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{}}}],["namepart.tolowercase",{"_index":472,"title":{},"body":{"classes/CreateUserDto.html":{},"interfaces/IUser.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{}}}],["nativeerror",{"_index":1079,"title":{},"body":{"classes/QueryFailedFilter.html":{}}}],["nest",{"_index":297,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["nestframework",{"_index":1498,"title":{},"body":{"index.html":{}}}],["nestinterceptor",{"_index":970,"title":{},"body":{"injectables/ExcludeNullUndefinedInterceptor.html":{},"interfaces/Response.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/TransformInterceptor.html":{}}}],["nestjs/common",{"_index":26,"title":{},"body":{"interfaces/APIResponse.html":{},"classes/ApiException.html":{},"controllers/AppController.html":{},"interfaces/AppLaunchAction.html":{},"modules/AppModule.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"modules/CronModule.html":{},"injectables/CronService.html":{},"classes/CrudConfigService.html":{},"classes/CrudController.html":{},"interfaces/CrudOptions.html":{},"classes/CrudRoutesFactory.html":{},"classes/CrudService.html":{},"modules/DatabaseModule.html":{},"injectables/ExcludeNullUndefinedInterceptor.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetManyDefaultResponse.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"controllers/HealthController.html":{},"interfaces/ICrudService.html":{},"interfaces/ParamOption.html":{},"interfaces/ParamsOptions.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"classes/QueryFailedFilter.html":{},"classes/R.html":{},"guards/RequestGuard.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/Response.html":{},"guards/ResponseGuard.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{},"controllers/TagsController.html":{},"modules/TagsModule.html":{},"injectables/TagsService.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/TransformInterceptor.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"classes/ValidationFailedFilter.html":{},"dependencies.html":{}}}],["nestjs/config",{"_index":238,"title":{},"body":{"modules/AppModule.html":{},"controllers/HealthController.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":1376,"title":{},"body":{"dependencies.html":{}}}],["nestjs/mapped",{"_index":376,"title":{},"body":{"classes/CreateTagsDto.html":{},"classes/CreateUserDto.html":{},"interfaces/ITag.html":{},"interfaces/IUser.html":{},"classes/Tag.html":{},"classes/UpdateTagsDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"dependencies.html":{}}}],["nestjs/passport",{"_index":1378,"title":{},"body":{"dependencies.html":{}}}],["nestjs/platform",{"_index":1380,"title":{},"body":{"dependencies.html":{}}}],["nestjs/schedule",{"_index":240,"title":{},"body":{"modules/AppModule.html":{},"injectables/CronService.html":{},"dependencies.html":{}}}],["nestjs/serve",{"_index":1385,"title":{},"body":{"dependencies.html":{}}}],["nestjs/swagger",{"_index":166,"title":{},"body":{"classes/ApiException.html":{},"controllers/AppController.html":{},"classes/BaseModel.html":{},"classes/CreateTagsDto.html":{},"classes/CreateUserDto.html":{},"classes/CrudController.html":{},"controllers/HealthController.html":{},"interfaces/IBaseModel.html":{},"interfaces/IPagination.html":{},"interfaces/ITag.html":{},"interfaces/IUser.html":{},"classes/PaginationParams.html":{},"classes/Tag.html":{},"controllers/TagsController.html":{},"classes/UpdateTagsDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"dependencies.html":{}}}],["nestjs/swagger/dist/types/swagger",{"_index":775,"title":{},"body":{"interfaces/CrudOptions.html":{},"interfaces/GetManyDefaultResponse.html":{},"interfaces/ParamOption.html":{},"interfaces/ParamsOptions.html":{}}}],["nestjs/terminus",{"_index":242,"title":{},"body":{"modules/AppModule.html":{},"controllers/HealthController.html":{},"dependencies.html":{}}}],["nestjs/typeorm",{"_index":1389,"title":{},"body":{"dependencies.html":{}}}],["nestjsx/crud",{"_index":1391,"title":{},"body":{"dependencies.html":{}}}],["new",{"_index":173,"title":{},"body":{"classes/ApiException.html":{},"classes/BaseModel.html":{},"injectables/CronService.html":{},"classes/CrudConfigService.html":{},"classes/CrudRoutesFactory.html":{},"classes/CrudService.html":{},"interfaces/IBaseModel.html":{},"interfaces/ICrudService.html":{},"classes/QueryFailedFilter.html":{},"classes/R.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{},"controllers/UsersController.html":{},"classes/ValidationFailedFilter.html":{},"coverage.html":{}}}],["next",{"_index":459,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/CrudConfigService.html":{},"interfaces/CrudOptions.html":{},"classes/CrudRoutesFactory.html":{},"classes/CustomQueryBuilder.html":{},"modules/DatabaseModule.html":{},"injectables/ExcludeNullUndefinedInterceptor.html":{},"interfaces/GetManyDefaultResponse.html":{},"controllers/HealthController.html":{},"interfaces/IUser.html":{},"interfaces/ParamOption.html":{},"interfaces/ParamsOptions.html":{},"classes/QueryFailedFilter.html":{},"classes/R.html":{},"guards/RequestGuard.html":{},"interfaces/Response.html":{},"guards/ResponseGuard.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"classes/ValidationFailedFilter.html":{},"miscellaneous/variables.html":{}}}],["next.handle().pipe",{"_index":974,"title":{},"body":{"injectables/ExcludeNullUndefinedInterceptor.html":{},"injectables/TimeoutInterceptor.html":{}}}],["next.handle().pipe(map((data",{"_index":1112,"title":{},"body":{"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["nocontent",{"_index":1131,"title":{},"body":{"guards/ResponseGuard.html":{}}}],["node.js",{"_index":1453,"title":{},"body":{"index.html":{}}}],["node_env",{"_index":262,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["notfounderror",{"_index":868,"title":{},"body":{"classes/CrudService.html":{},"interfaces/ICrudService.html":{},"classes/QueryFailedFilter.html":{}}}],["nothing",{"_index":390,"title":{},"body":{"classes/CreateTagsDto.html":{},"classes/CreateUserDto.html":{},"interfaces/ITag.html":{},"interfaces/IUser.html":{},"classes/Tag.html":{},"classes/UpdateTagsDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{}}}],["notnullviolationerror",{"_index":1065,"title":{},"body":{"classes/QueryFailedFilter.html":{}}}],["npm",{"_index":1463,"title":{},"body":{"index.html":{}}}],["null",{"_index":36,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"classes/BaseModel.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/CrudOptions.html":{},"classes/CustomQueryBuilder.html":{},"injectables/ExcludeNullUndefinedInterceptor.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetManyDefaultResponse.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/IBaseModel.html":{},"interfaces/ParamOption.html":{},"interfaces/ParamsOptions.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"guards/ResponseGuard.html":{},"classes/Tag.html":{},"classes/User.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["number",{"_index":18,"title":{},"body":{"interfaces/APIResponse.html":{},"classes/ApiException.html":{},"interfaces/AppLaunchAction.html":{},"classes/BaseModel.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"injectables/CronService.html":{},"classes/CrudConfigService.html":{},"classes/CrudController.html":{},"interfaces/CrudOptions.html":{},"classes/CrudRoutesFactory.html":{},"classes/CrudService.html":{},"classes/CustomQueryBuilder.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetManyDefaultResponse.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/IBaseModel.html":{},"interfaces/ICrudService.html":{},"interfaces/IPagination.html":{},"classes/PaginationParams.html":{},"interfaces/ParamOption.html":{},"interfaces/ParamsOptions.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"classes/R.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{},"classes/Tag.html":{},"controllers/TagsController.html":{},"injectables/TagsService.html":{},"classes/User.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["number.isfinite(val",{"_index":1556,"title":{},"body":{"miscellaneous/variables.html":{}}}],["number.isnan(val",{"_index":1555,"title":{},"body":{"miscellaneous/variables.html":{}}}],["numberoffollowers",{"_index":61,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{}}}],["numberoffollowing",{"_index":62,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{}}}],["numberofposts",{"_index":63,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{}}}],["numberofrescuescompleted",{"_index":64,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{}}}],["numberofrescuescreated",{"_index":65,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{}}}],["numberofrescuesinprogress",{"_index":66,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{}}}],["numberquerybuildertype",{"_index":886,"title":{},"body":{"classes/CustomQueryBuilder.html":{}}}],["o",{"_index":1552,"title":{},"body":{"miscellaneous/variables.html":{}}}],["object",{"_index":335,"title":{},"body":{"classes/BaseModel.html":{},"classes/CreateTagsDto.html":{},"classes/CreateUserDto.html":{},"classes/CrudConfigService.html":{},"interfaces/CrudOptions.html":{},"classes/CrudRoutesFactory.html":{},"classes/CustomQueryBuilder.html":{},"interfaces/GetManyDefaultResponse.html":{},"interfaces/ITag.html":{},"interfaces/IUser.html":{},"interfaces/ParamOption.html":{},"interfaces/ParamsOptions.html":{},"classes/R.html":{},"guards/ResponseGuard.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{},"classes/Tag.html":{},"classes/UpdateTagsDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["object.defineproperty(getmanyresponsedto",{"_index":615,"title":{},"body":{"classes/CrudConfigService.html":{},"classes/CrudRoutesFactory.html":{},"classes/R.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{}}}],["object.defineproperty(getoneresponsedto",{"_index":620,"title":{},"body":{"classes/CrudConfigService.html":{},"classes/CrudRoutesFactory.html":{},"classes/R.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{}}}],["object.getownpropertynames(val",{"_index":1528,"title":{},"body":{"miscellaneous/variables.html":{}}}],["object.keys(val",{"_index":1529,"title":{},"body":{"miscellaneous/variables.html":{}}}],["objection",{"_index":343,"title":{},"body":{"classes/BaseModel.html":{},"classes/CreateTagsDto.html":{},"classes/CreateUserDto.html":{},"classes/CrudService.html":{},"classes/CustomQueryBuilder.html":{},"modules/DatabaseModule.html":{},"interfaces/IBaseModel.html":{},"interfaces/ICrudService.html":{},"interfaces/ITag.html":{},"interfaces/IUser.html":{},"classes/QueryFailedFilter.html":{},"classes/Tag.html":{},"injectables/TagsService.html":{},"classes/UpdateTagsDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"injectables/UsersService.html":{},"classes/ValidationFailedFilter.html":{},"dependencies.html":{}}}],["objectliteral",{"_index":1514,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["objkeys",{"_index":545,"title":{},"body":{"classes/CrudConfigService.html":{},"classes/CrudRoutesFactory.html":{},"classes/R.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["objkeys(swaggermodels",{"_index":572,"title":{},"body":{"classes/CrudConfigService.html":{},"classes/CrudRoutesFactory.html":{},"classes/R.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{}}}],["observable",{"_index":969,"title":{},"body":{"injectables/ExcludeNullUndefinedInterceptor.html":{},"controllers/HealthController.html":{},"guards/RequestGuard.html":{},"interfaces/Response.html":{},"guards/ResponseGuard.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/TransformInterceptor.html":{}}}],["observer",{"_index":1222,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["occurrence",{"_index":962,"title":{},"body":{"injectables/ExcludeNullUndefinedInterceptor.html":{}}}],["offset",{"_index":926,"title":{},"body":{"classes/CustomQueryBuilder.html":{}}}],["ok",{"_index":526,"title":{},"body":{"injectables/CronService.html":{}}}],["onapplicationshutdown",{"_index":229,"title":{},"body":{"modules/AppModule.html":{},"controllers/HealthController.html":{}}}],["onapplicationshutdown(signal",{"_index":230,"title":{},"body":{"modules/AppModule.html":{},"controllers/HealthController.html":{}}}],["once",{"_index":494,"title":{},"body":{"injectables/CronService.html":{}}}],["one",{"_index":576,"title":{},"body":{"classes/CrudConfigService.html":{},"classes/CrudController.html":{},"classes/CrudRoutesFactory.html":{},"classes/R.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{},"controllers/UsersController.html":{}}}],["one.name",{"_index":577,"title":{},"body":{"classes/CrudConfigService.html":{},"classes/CrudRoutesFactory.html":{},"classes/R.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{}}}],["oneof",{"_index":601,"title":{},"body":{"classes/CrudConfigService.html":{},"classes/CrudRoutesFactory.html":{},"classes/R.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{}}}],["onlycount",{"_index":891,"title":{},"body":{"classes/CustomQueryBuilder.html":{}}}],["onmoduledestroy",{"_index":286,"title":{},"body":{"modules/AppModule.html":{}}}],["onmoduleinit",{"_index":235,"title":{},"body":{"modules/AppModule.html":{},"controllers/HealthController.html":{}}}],["open",{"_index":1478,"title":{},"body":{"index.html":{}}}],["optional",{"_index":9,"title":{},"body":{"interfaces/APIResponse.html":{},"classes/ApiException.html":{},"interfaces/AppLaunchAction.html":{},"modules/AppModule.html":{},"classes/BaseModel.html":{},"injectables/CronService.html":{},"classes/CrudConfigService.html":{},"classes/CrudController.html":{},"interfaces/CrudOptions.html":{},"classes/CrudRoutesFactory.html":{},"classes/CrudService.html":{},"classes/CustomQueryBuilder.html":{},"injectables/ExcludeNullUndefinedInterceptor.html":{},"controllers/HealthController.html":{},"interfaces/IBaseModel.html":{},"interfaces/ICrudService.html":{},"interfaces/ITryRequest.html":{},"classes/PaginationParams.html":{},"interfaces/ParamOption.html":{},"classes/QueryFailedFilter.html":{},"classes/R.html":{},"guards/RequestGuard.html":{},"guards/ResponseGuard.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{},"classes/Tag.html":{},"controllers/TagsController.html":{},"injectables/TagsService.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/TransformInterceptor.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"classes/ValidationFailedFilter.html":{},"miscellaneous/functions.html":{}}}],["options",{"_index":334,"title":{},"body":{"classes/BaseModel.html":{},"classes/CrudConfigService.html":{},"classes/CrudRoutesFactory.html":{},"interfaces/IBaseModel.html":{},"classes/R.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{},"classes/Tag.html":{},"classes/User.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["order",{"_index":859,"title":{},"body":{"classes/CrudService.html":{},"interfaces/ICrudService.html":{},"interfaces/IPagination.html":{},"classes/PaginationParams.html":{}}}],["orderby",{"_index":1041,"title":{},"body":{"interfaces/IPagination.html":{},"classes/PaginationParams.html":{}}}],["ordertype",{"_index":1033,"title":{},"body":{"interfaces/IPagination.html":{},"classes/PaginationParams.html":{},"miscellaneous/enumerations.html":{}}}],["os",{"_index":993,"title":{},"body":{"controllers/HealthController.html":{}}}],["os.loadavg",{"_index":1021,"title":{},"body":{"controllers/HealthController.html":{}}}],["out",{"_index":225,"title":{},"body":{"modules/AppModule.html":{},"modules/CronModule.html":{},"modules/TagsModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["override",{"_index":670,"title":{},"body":{"classes/CrudConfigService.html":{},"classes/CrudRoutesFactory.html":{},"classes/R.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{}}}],["override.ts",{"_index":959,"title":{},"body":{"injectables/ExcludeNullUndefinedInterceptor.html":{},"coverage.html":{}}}],["override.ts:16",{"_index":967,"title":{},"body":{"injectables/ExcludeNullUndefinedInterceptor.html":{}}}],["overview",{"_index":1505,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["ownpage",{"_index":88,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{}}}],["p",{"_index":1042,"title":{},"body":{"interfaces/IPagination.html":{},"classes/PaginationParams.html":{}}}],["pack",{"_index":804,"title":{},"body":{"interfaces/CrudOptions.html":{},"interfaces/GetManyDefaultResponse.html":{},"interfaces/ParamOption.html":{},"interfaces/ParamsOptions.html":{}}}],["package",{"_index":1372,"title":{"dependencies.html":{}},"body":{}}],["page",{"_index":14,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"classes/CrudConfigService.html":{},"interfaces/CrudOptions.html":{},"classes/CrudRoutesFactory.html":{},"classes/CrudService.html":{},"classes/CustomQueryBuilder.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetManyDefaultResponse.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/ICrudService.html":{},"interfaces/IPagination.html":{},"classes/PaginationParams.html":{},"interfaces/ParamOption.html":{},"interfaces/ParamsOptions.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"classes/R.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{}}}],["pagecount",{"_index":15,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"classes/CrudConfigService.html":{},"interfaces/CrudOptions.html":{},"classes/CrudRoutesFactory.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetManyDefaultResponse.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/ParamOption.html":{},"interfaces/ParamsOptions.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"classes/R.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{}}}],["pagequerybuildertype",{"_index":887,"title":{},"body":{"classes/CustomQueryBuilder.html":{}}}],["pagesize",{"_index":875,"title":{},"body":{"classes/CrudService.html":{},"interfaces/ICrudService.html":{},"interfaces/IPagination.html":{},"classes/PaginationParams.html":{}}}],["paginate",{"_index":892,"title":{},"body":{"classes/CustomQueryBuilder.html":{}}}],["paginate(page",{"_index":903,"title":{},"body":{"classes/CustomQueryBuilder.html":{}}}],["paginated",{"_index":598,"title":{},"body":{"classes/CrudConfigService.html":{},"classes/CrudRoutesFactory.html":{},"classes/CrudService.html":{},"interfaces/ICrudService.html":{},"classes/R.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{},"injectables/UsersService.html":{}}}],["paginatedfindall",{"_index":852,"title":{},"body":{"classes/CrudService.html":{},"interfaces/ICrudService.html":{},"injectables/UsersService.html":{}}}],["paginatedfindall(filter",{"_index":865,"title":{},"body":{"classes/CrudService.html":{},"interfaces/ICrudService.html":{},"injectables/UsersService.html":{}}}],["pagination",{"_index":355,"title":{},"body":{"classes/BaseModel.html":{},"classes/CrudController.html":{},"classes/CrudService.html":{},"classes/CustomQueryBuilder.html":{},"interfaces/IBaseModel.html":{},"interfaces/ICrudService.html":{},"interfaces/IPagination.html":{},"classes/PaginationParams.html":{}}}],["paginationparams",{"_index":738,"title":{"classes/PaginationParams.html":{}},"body":{"classes/CrudController.html":{},"classes/CrudService.html":{},"interfaces/ICrudService.html":{},"interfaces/IPagination.html":{},"classes/PaginationParams.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["paging",{"_index":878,"title":{},"body":{"classes/CrudService.html":{},"interfaces/ICrudService.html":{},"interfaces/IPagination.html":{},"classes/PaginationParams.html":{}}}],["param",{"_index":754,"title":{},"body":{"classes/CrudController.html":{},"classes/CrudService.html":{},"classes/CustomQueryBuilder.html":{},"controllers/HealthController.html":{},"interfaces/ICrudService.html":{},"guards/RequestGuard.html":{},"guards/ResponseGuard.html":{},"controllers/TagsController.html":{},"controllers/UsersController.html":{}}}],["param('id",{"_index":1190,"title":{},"body":{"controllers/TagsController.html":{},"controllers/UsersController.html":{}}}],["parameter",{"_index":293,"title":{},"body":{"modules/AppModule.html":{}}}],["parameters",{"_index":150,"title":{},"body":{"classes/ApiException.html":{},"modules/AppModule.html":{},"classes/BaseModel.html":{},"injectables/CronService.html":{},"classes/CrudConfigService.html":{},"classes/CrudController.html":{},"classes/CrudRoutesFactory.html":{},"classes/CrudService.html":{},"classes/CustomQueryBuilder.html":{},"injectables/ExcludeNullUndefinedInterceptor.html":{},"controllers/HealthController.html":{},"interfaces/ICrudService.html":{},"classes/QueryFailedFilter.html":{},"classes/R.html":{},"guards/RequestGuard.html":{},"guards/ResponseGuard.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{},"classes/Tag.html":{},"controllers/TagsController.html":{},"injectables/TagsService.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/TransformInterceptor.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"classes/ValidationFailedFilter.html":{},"miscellaneous/functions.html":{}}}],["paramoption",{"_index":783,"title":{"interfaces/ParamOption.html":{}},"body":{"interfaces/CrudOptions.html":{},"interfaces/GetManyDefaultResponse.html":{},"interfaces/ParamOption.html":{},"interfaces/ParamsOptions.html":{},"coverage.html":{}}}],["params",{"_index":624,"title":{},"body":{"classes/CrudConfigService.html":{},"interfaces/CrudOptions.html":{},"classes/CrudRoutesFactory.html":{},"interfaces/GetManyDefaultResponse.html":{},"interfaces/IPagination.html":{},"classes/PaginationParams.html":{},"interfaces/ParamOption.html":{},"interfaces/ParamsOptions.html":{},"classes/R.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{}}}],["paramsoptions",{"_index":772,"title":{"interfaces/ParamsOptions.html":{}},"body":{"interfaces/CrudOptions.html":{},"interfaces/GetManyDefaultResponse.html":{},"interfaces/ParamOption.html":{},"interfaces/ParamsOptions.html":{},"coverage.html":{}}}],["parentheses",{"_index":455,"title":{},"body":{"classes/CreateUserDto.html":{},"interfaces/IUser.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{}}}],["parseint(val",{"_index":1040,"title":{},"body":{"interfaces/IPagination.html":{},"classes/PaginationParams.html":{}}}],["parseintpipe",{"_index":755,"title":{},"body":{"classes/CrudController.html":{},"controllers/TagsController.html":{},"controllers/UsersController.html":{}}}],["partial",{"_index":532,"title":{},"body":{"classes/CrudConfigService.html":{},"classes/CrudRoutesFactory.html":{},"classes/R.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{}}}],["partially",{"_index":448,"title":{},"body":{"classes/CreateUserDto.html":{},"interfaces/IUser.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{}}}],["partialtype",{"_index":374,"title":{},"body":{"classes/CreateTagsDto.html":{},"classes/CreateUserDto.html":{},"interfaces/ITag.html":{},"interfaces/IUser.html":{},"classes/Tag.html":{},"classes/UpdateTagsDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{}}}],["partialtype(createtagsdto",{"_index":406,"title":{},"body":{"classes/CreateTagsDto.html":{},"interfaces/ITag.html":{},"classes/Tag.html":{},"classes/UpdateTagsDto.html":{}}}],["partialtype(createuserdto",{"_index":475,"title":{},"body":{"classes/CreateUserDto.html":{},"interfaces/IUser.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{}}}],["passport",{"_index":1415,"title":{},"body":{"dependencies.html":{}}}],["password",{"_index":324,"title":{},"body":{"classes/BaseModel.html":{},"classes/CreateUserDto.html":{},"interfaces/IBaseModel.html":{},"interfaces/IUser.html":{},"classes/Tag.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{}}}],["path",{"_index":141,"title":{},"body":{"classes/ApiException.html":{},"controllers/AppController.html":{},"classes/CrudConfigService.html":{},"classes/CrudRoutesFactory.html":{},"controllers/HealthController.html":{},"classes/QueryFailedFilter.html":{},"classes/R.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{},"controllers/TagsController.html":{},"controllers/UsersController.html":{},"classes/ValidationFailedFilter.html":{},"miscellaneous/functions.html":{}}}],["perpage",{"_index":904,"title":{},"body":{"classes/CustomQueryBuilder.html":{}}}],["pidusage",{"_index":994,"title":{},"body":{"controllers/HealthController.html":{},"dependencies.html":{}}}],["pidusage(process.pid",{"_index":1010,"title":{},"body":{"controllers/HealthController.html":{}}}],["pieces",{"_index":444,"title":{},"body":{"classes/CreateUserDto.html":{},"interfaces/IUser.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{}}}],["places",{"_index":436,"title":{},"body":{"classes/CreateUserDto.html":{},"interfaces/IUser.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{}}}],["please",{"_index":1487,"title":{},"body":{"index.html":{}}}],["port",{"_index":260,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["post",{"_index":750,"title":{},"body":{"classes/CrudController.html":{},"controllers/TagsController.html":{},"controllers/UsersController.html":{}}}],["postby",{"_index":89,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{}}}],["postedby",{"_index":107,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{}}}],["postedbyuser",{"_index":83,"title":{"interfaces/PostedByUser.html":{}},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{},"coverage.html":{}}}],["postedminago",{"_index":108,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{}}}],["postid",{"_index":85,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{}}}],["postimage",{"_index":90,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{}}}],["posttime",{"_index":91,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{}}}],["posttype",{"_index":81,"title":{"interfaces/PostType.html":{}},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{},"coverage.html":{}}}],["posttypeid",{"_index":82,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{}}}],["postvideo",{"_index":92,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{}}}],["primary",{"_index":787,"title":{},"body":{"interfaces/CrudOptions.html":{},"interfaces/GetManyDefaultResponse.html":{},"interfaces/ParamOption.html":{},"interfaces/ParamsOptions.html":{}}}],["private",{"_index":653,"title":{},"body":{"classes/CrudConfigService.html":{},"classes/CrudRoutesFactory.html":{},"controllers/HealthController.html":{},"classes/R.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{},"injectables/TagsService.html":{}}}],["production",{"_index":266,"title":{},"body":{"modules/AppModule.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["profileid",{"_index":116,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{}}}],["profileimage",{"_index":67,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{}}}],["profileimageurl",{"_index":117,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{}}}],["progressive",{"_index":1452,"title":{},"body":{"index.html":{}}}],["project",{"_index":1479,"title":{},"body":{"index.html":{}}}],["promise",{"_index":296,"title":{},"body":{"modules/AppModule.html":{},"classes/CrudController.html":{},"classes/CrudService.html":{},"classes/CustomQueryBuilder.html":{},"interfaces/ICrudService.html":{},"guards/RequestGuard.html":{},"guards/ResponseGuard.html":{},"injectables/UsersService.html":{},"miscellaneous/functions.html":{}}}],["promise.resolve(`this",{"_index":1291,"title":{},"body":{"injectables/UsersService.html":{}}}],["promises",{"_index":464,"title":{},"body":{"classes/CreateUserDto.html":{},"interfaces/IUser.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{}}}],["proper",{"_index":860,"title":{},"body":{"classes/CrudService.html":{},"interfaces/ICrudService.html":{}}}],["properties",{"_index":8,"title":{},"body":{"interfaces/APIResponse.html":{},"classes/ApiException.html":{},"interfaces/AppLaunchAction.html":{},"classes/BaseModel.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"classes/CreateTagsDto.html":{},"classes/CreateUserDto.html":{},"injectables/CronService.html":{},"classes/CrudConfigService.html":{},"interfaces/CrudOptions.html":{},"classes/CrudRoutesFactory.html":{},"classes/CrudService.html":{},"classes/CustomQueryBuilder.html":{},"interfaces/Follower.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetManyDefaultResponse.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/IBaseModel.html":{},"interfaces/IPagination.html":{},"interfaces/ITag.html":{},"interfaces/ITryRequest.html":{},"interfaces/IUser.html":{},"classes/PaginationParams.html":{},"interfaces/ParamOption.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/Response.html":{},"classes/Tag.html":{},"classes/UpdateTagsDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{},"injectables/UsersService.html":{}}}],["propertydecorator",{"_index":812,"title":{},"body":{"interfaces/CrudOptions.html":{},"interfaces/GetManyDefaultResponse.html":{},"interfaces/ParamOption.html":{},"interfaces/ParamsOptions.html":{},"miscellaneous/functions.html":{}}}],["propertykey",{"_index":557,"title":{},"body":{"classes/CrudConfigService.html":{},"interfaces/CrudOptions.html":{},"classes/CrudRoutesFactory.html":{},"interfaces/GetManyDefaultResponse.html":{},"interfaces/ParamOption.html":{},"interfaces/ParamsOptions.html":{},"classes/R.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{}}}],["protected",{"_index":635,"title":{},"body":{"classes/CrudConfigService.html":{},"classes/CrudController.html":{},"classes/CrudRoutesFactory.html":{},"classes/CrudService.html":{},"interfaces/ICrudService.html":{},"classes/R.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{}}}],["provide",{"_index":847,"title":{},"body":{"classes/CrudService.html":{},"modules/DatabaseModule.html":{},"interfaces/ICrudService.html":{},"miscellaneous/variables.html":{}}}],["provided",{"_index":746,"title":{},"body":{"classes/CrudController.html":{}}}],["providers",{"_index":215,"title":{},"body":{"modules/AppModule.html":{},"modules/CronModule.html":{},"modules/DatabaseModule.html":{},"modules/TagsModule.html":{},"modules/UsersModule.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["provision",{"_index":268,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["put",{"_index":751,"title":{},"body":{"classes/CrudController.html":{},"controllers/TagsController.html":{},"controllers/UsersController.html":{}}}],["put(':id",{"_index":1179,"title":{},"body":{"controllers/TagsController.html":{},"controllers/UsersController.html":{}}}],["q.orwhereraw('lower",{"_index":471,"title":{},"body":{"classes/CreateUserDto.html":{},"interfaces/IUser.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{}}}],["query",{"_index":352,"title":{},"body":{"classes/BaseModel.html":{},"classes/CreateUserDto.html":{},"classes/CrudConfigService.html":{},"classes/CrudController.html":{},"interfaces/CrudOptions.html":{},"classes/CrudRoutesFactory.html":{},"classes/CrudService.html":{},"classes/CustomQueryBuilder.html":{},"interfaces/GetManyDefaultResponse.html":{},"interfaces/IBaseModel.html":{},"interfaces/ICrudService.html":{},"interfaces/IUser.html":{},"interfaces/ParamOption.html":{},"interfaces/ParamsOptions.html":{},"classes/R.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{},"injectables/TagsService.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{}}}],["query.alwayspaginate",{"_index":597,"title":{},"body":{"classes/CrudConfigService.html":{},"classes/CrudRoutesFactory.html":{},"classes/R.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{}}}],["query.offset(offset).limit(size",{"_index":931,"title":{},"body":{"classes/CustomQueryBuilder.html":{}}}],["query.where((q",{"_index":465,"title":{},"body":{"classes/CreateUserDto.html":{},"interfaces/IUser.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{}}}],["querybuilder",{"_index":314,"title":{},"body":{"classes/BaseModel.html":{},"classes/CustomQueryBuilder.html":{},"interfaces/IBaseModel.html":{},"classes/Tag.html":{},"classes/User.html":{}}}],["querybuildertype",{"_index":315,"title":{},"body":{"classes/BaseModel.html":{},"interfaces/IBaseModel.html":{},"classes/Tag.html":{},"classes/User.html":{}}}],["querycontext",{"_index":342,"title":{},"body":{"classes/BaseModel.html":{},"interfaces/IBaseModel.html":{}}}],["queryfailedfilter",{"_index":1056,"title":{"classes/QueryFailedFilter.html":{}},"body":{"classes/QueryFailedFilter.html":{},"coverage.html":{}}}],["r",{"_index":552,"title":{"classes/R.html":{}},"body":{"classes/CrudConfigService.html":{},"classes/CrudRoutesFactory.html":{},"classes/R.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{},"coverage.html":{}}}],["r.get(swaggerconst.api_extra_models",{"_index":586,"title":{},"body":{"classes/CrudConfigService.html":{},"classes/CrudRoutesFactory.html":{},"classes/R.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{}}}],["r.get(swaggerconst.decorators.api_response",{"_index":588,"title":{},"body":{"classes/CrudConfigService.html":{},"classes/CrudRoutesFactory.html":{},"classes/R.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{}}}],["r.set",{"_index":579,"title":{},"body":{"classes/CrudConfigService.html":{},"classes/CrudRoutesFactory.html":{},"classes/R.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{}}}],["r.set('crud_options_metadata",{"_index":695,"title":{},"body":{"classes/CrudConfigService.html":{},"classes/CrudRoutesFactory.html":{},"classes/R.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{}}}],["r.set('method",{"_index":566,"title":{},"body":{"classes/CrudConfigService.html":{},"classes/CrudRoutesFactory.html":{},"classes/R.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{}}}],["r.set('path",{"_index":564,"title":{},"body":{"classes/CrudConfigService.html":{},"classes/CrudRoutesFactory.html":{},"classes/R.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{}}}],["r.set(swaggerconst.decorators.api_response",{"_index":583,"title":{},"body":{"classes/CrudConfigService.html":{},"classes/CrudRoutesFactory.html":{},"classes/R.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{}}}],["r.setroute(route",{"_index":717,"title":{},"body":{"classes/CrudConfigService.html":{},"classes/CrudRoutesFactory.html":{},"classes/R.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{}}}],["range",{"_index":1409,"title":{},"body":{"dependencies.html":{}}}],["rate",{"_index":1402,"title":{},"body":{"dependencies.html":{}}}],["reactionscount",{"_index":93,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{}}}],["read",{"_index":1488,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":428,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/CrudController.html":{},"classes/CrudService.html":{},"interfaces/ICrudService.html":{},"interfaces/IPagination.html":{},"interfaces/IUser.html":{},"classes/PaginationParams.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"injectables/UsersService.html":{}}}],["reassign",{"_index":915,"title":{},"body":{"classes/CustomQueryBuilder.html":{},"controllers/HealthController.html":{}}}],["receive",{"_index":856,"title":{},"body":{"classes/CrudService.html":{},"interfaces/ICrudService.html":{}}}],["receives",{"_index":282,"title":{},"body":{"modules/AppModule.html":{}}}],["record",{"_index":745,"title":{},"body":{"classes/CrudController.html":{},"interfaces/ITryRequest.html":{},"guards/RequestGuard.html":{},"guards/ResponseGuard.html":{}}}],["records",{"_index":763,"title":{},"body":{"classes/CrudController.html":{},"classes/CustomQueryBuilder.html":{}}}],["records'})@apiresponse({status",{"_index":741,"title":{},"body":{"classes/CrudController.html":{}}}],["records'})@get",{"_index":742,"title":{},"body":{"classes/CrudController.html":{}}}],["recuescompletionneeded",{"_index":77,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{}}}],["recurring",{"_index":491,"title":{},"body":{"injectables/CronService.html":{}}}],["ref",{"_index":602,"title":{},"body":{"classes/CrudConfigService.html":{},"classes/CrudRoutesFactory.html":{},"classes/R.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{}}}],["reflect",{"_index":1419,"title":{},"body":{"dependencies.html":{}}}],["reflect.definemetadata(metadatakey",{"_index":560,"title":{},"body":{"classes/CrudConfigService.html":{},"classes/CrudRoutesFactory.html":{},"classes/R.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{}}}],["reflect.getmetadata(metadatakey",{"_index":561,"title":{},"body":{"classes/CrudConfigService.html":{},"classes/CrudRoutesFactory.html":{},"classes/R.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{}}}],["registered",{"_index":285,"title":{},"body":{"modules/AppModule.html":{}}}],["regular",{"_index":485,"title":{},"body":{"injectables/CronService.html":{}}}],["rejected",{"_index":301,"title":{},"body":{"modules/AppModule.html":{}}}],["relation",{"_index":357,"title":{},"body":{"classes/BaseModel.html":{},"interfaces/IBaseModel.html":{}}}],["relationexpression",{"_index":333,"title":{},"body":{"classes/BaseModel.html":{},"interfaces/IBaseModel.html":{},"classes/Tag.html":{},"classes/User.html":{}}}],["remove",{"_index":1250,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["remove(@param('id",{"_index":1270,"title":{},"body":{"controllers/UsersController.html":{}}}],["remove(id",{"_index":1255,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["removes",{"_index":1292,"title":{},"body":{"injectables/UsersService.html":{}}}],["replace",{"_index":796,"title":{},"body":{"interfaces/CrudOptions.html":{},"interfaces/GetManyDefaultResponse.html":{},"interfaces/ParamOption.html":{},"interfaces/ParamsOptions.html":{}}}],["replaceonebase",{"_index":781,"title":{},"body":{"interfaces/CrudOptions.html":{},"interfaces/GetManyDefaultResponse.html":{},"interfaces/ParamOption.html":{},"interfaces/ParamsOptions.html":{},"miscellaneous/typealiases.html":{}}}],["repository",{"_index":1461,"title":{},"body":{"index.html":{}}}],["request",{"_index":184,"title":{},"body":{"classes/ApiException.html":{},"classes/QueryFailedFilter.html":{},"guards/RequestGuard.html":{},"injectables/TimeoutInterceptor.html":{},"classes/ValidationFailedFilter.html":{},"dependencies.html":{}}}],["request.all",{"_index":1109,"title":{},"body":{"guards/RequestGuard.html":{}}}],["request.body",{"_index":1103,"title":{},"body":{"guards/RequestGuard.html":{}}}],["request.params",{"_index":1104,"title":{},"body":{"guards/RequestGuard.html":{}}}],["request.query",{"_index":1102,"title":{},"body":{"guards/RequestGuard.html":{}}}],["request.ts",{"_index":1046,"title":{},"body":{"interfaces/ITryRequest.html":{},"coverage.html":{}}}],["request.url",{"_index":1081,"title":{},"body":{"classes/QueryFailedFilter.html":{},"classes/ValidationFailedFilter.html":{}}}],["requestguard",{"_index":1090,"title":{"guards/RequestGuard.html":{}},"body":{"guards/RequestGuard.html":{},"coverage.html":{}}}],["requestmethod",{"_index":538,"title":{},"body":{"classes/CrudConfigService.html":{},"classes/CrudRoutesFactory.html":{},"classes/R.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{}}}],["requestmethod.get",{"_index":669,"title":{},"body":{"classes/CrudConfigService.html":{},"classes/CrudRoutesFactory.html":{},"classes/R.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{}}}],["requesttimeoutexception",{"_index":1227,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["require",{"_index":803,"title":{},"body":{"interfaces/CrudOptions.html":{},"interfaces/GetManyDefaultResponse.html":{},"interfaces/ParamOption.html":{},"interfaces/ParamsOptions.html":{}}}],["require(path",{"_index":805,"title":{},"body":{"interfaces/CrudOptions.html":{},"interfaces/GetManyDefaultResponse.html":{},"interfaces/ParamOption.html":{},"interfaces/ParamsOptions.html":{}}}],["require,@typescript",{"_index":799,"title":{},"body":{"interfaces/CrudOptions.html":{},"interfaces/GetManyDefaultResponse.html":{},"interfaces/ParamOption.html":{},"interfaces/ParamsOptions.html":{}}}],["required",{"_index":264,"title":{},"body":{"modules/AppModule.html":{},"classes/CreateTagsDto.html":{},"classes/CreateUserDto.html":{},"interfaces/ITag.html":{},"interfaces/IUser.html":{},"classes/Tag.html":{},"classes/UpdateTagsDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"miscellaneous/variables.html":{}}}],["requires,import/no",{"_index":801,"title":{},"body":{"interfaces/CrudOptions.html":{},"interfaces/GetManyDefaultResponse.html":{},"interfaces/ParamOption.html":{},"interfaces/ParamsOptions.html":{}}}],["rescuedate",{"_index":109,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{}}}],["rescuedpetname",{"_index":111,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{}}}],["rescueid",{"_index":102,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{}}}],["rescuelists",{"_index":121,"title":{"interfaces/RescueLists.html":{}},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{},"coverage.html":{}}}],["rescuelocality",{"_index":112,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{}}}],["rescuer",{"_index":68,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{}}}],["rescuers",{"_index":113,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{}}}],["rescues",{"_index":101,"title":{"interfaces/Rescues.html":{}},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{},"coverage.html":{}}}],["rescuestatus",{"_index":119,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{}}}],["reset",{"_index":224,"title":{},"body":{"modules/AppModule.html":{},"modules/CronModule.html":{},"modules/TagsModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["resolved",{"_index":300,"title":{},"body":{"modules/AppModule.html":{}}}],["resourcename",{"_index":612,"title":{},"body":{"classes/CrudConfigService.html":{},"classes/CrudRoutesFactory.html":{},"classes/R.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{}}}],["resourcename}responsedto",{"_index":621,"title":{},"body":{"classes/CrudConfigService.html":{},"classes/CrudRoutesFactory.html":{},"classes/R.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{}}}],["response",{"_index":39,"title":{"interfaces/Response.html":{}},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"classes/CrudConfigService.html":{},"classes/CrudRoutesFactory.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/IPagination.html":{},"classes/PaginationParams.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"classes/QueryFailedFilter.html":{},"classes/R.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/Response.html":{},"guards/ResponseGuard.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{},"injectables/TransformInterceptor.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{},"classes/ValidationFailedFilter.html":{},"coverage.html":{}}}],["response.error",{"_index":1135,"title":{},"body":{"guards/ResponseGuard.html":{}}}],["response.nocontent",{"_index":1139,"title":{},"body":{"guards/ResponseGuard.html":{}}}],["response.status(204).end",{"_index":1132,"title":{},"body":{"guards/ResponseGuard.html":{}}}],["response.status(status).json",{"_index":1080,"title":{},"body":{"classes/QueryFailedFilter.html":{},"guards/ResponseGuard.html":{},"classes/ValidationFailedFilter.html":{}}}],["response.success",{"_index":1136,"title":{},"body":{"guards/ResponseGuard.html":{}}}],["response.withmeta",{"_index":1137,"title":{},"body":{"guards/ResponseGuard.html":{}}}],["responseguard",{"_index":1113,"title":{"guards/ResponseGuard.html":{}},"body":{"guards/ResponseGuard.html":{},"coverage.html":{}}}],["restricted",{"_index":466,"title":{},"body":{"classes/CreateUserDto.html":{},"interfaces/IUser.html":{},"guards/RequestGuard.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{}}}],["result",{"_index":28,"title":{},"body":{"interfaces/APIResponse.html":{},"classes/ApiException.html":{},"controllers/AppController.html":{},"interfaces/AppLaunchAction.html":{},"modules/AppModule.html":{},"classes/BaseModel.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"classes/CreateTagsDto.html":{},"classes/CreateUserDto.html":{},"modules/CronModule.html":{},"injectables/CronService.html":{},"classes/CrudConfigService.html":{},"classes/CrudController.html":{},"interfaces/CrudOptions.html":{},"classes/CrudRoutesFactory.html":{},"classes/CrudService.html":{},"classes/CustomQueryBuilder.html":{},"modules/DatabaseModule.html":{},"injectables/ExcludeNullUndefinedInterceptor.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetManyDefaultResponse.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"controllers/HealthController.html":{},"interfaces/IBaseModel.html":{},"interfaces/ICrudService.html":{},"interfaces/IPagination.html":{},"interfaces/ITag.html":{},"interfaces/ITryRequest.html":{},"interfaces/IUser.html":{},"classes/PaginationParams.html":{},"interfaces/ParamOption.html":{},"interfaces/ParamsOptions.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"classes/QueryFailedFilter.html":{},"classes/R.html":{},"guards/RequestGuard.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/Response.html":{},"guards/ResponseGuard.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{},"classes/Tag.html":{},"controllers/TagsController.html":{},"modules/TagsModule.html":{},"injectables/TagsService.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateTagsDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"classes/ValidationFailedFilter.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["result.results",{"_index":921,"title":{},"body":{"classes/CustomQueryBuilder.html":{}}}],["result.total",{"_index":920,"title":{},"body":{"classes/CustomQueryBuilder.html":{}}}],["result[0].c",{"_index":923,"title":{},"body":{"classes/CustomQueryBuilder.html":{}}}],["results",{"_index":133,"title":{},"body":{"interfaces/APIResponse.html":{},"classes/ApiException.html":{},"controllers/AppController.html":{},"interfaces/AppLaunchAction.html":{},"modules/AppModule.html":{},"classes/BaseModel.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"classes/CreateTagsDto.html":{},"classes/CreateUserDto.html":{},"modules/CronModule.html":{},"injectables/CronService.html":{},"classes/CrudConfigService.html":{},"classes/CrudController.html":{},"interfaces/CrudOptions.html":{},"classes/CrudRoutesFactory.html":{},"classes/CrudService.html":{},"classes/CustomQueryBuilder.html":{},"modules/DatabaseModule.html":{},"injectables/ExcludeNullUndefinedInterceptor.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetManyDefaultResponse.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"controllers/HealthController.html":{},"interfaces/IBaseModel.html":{},"interfaces/ICrudService.html":{},"interfaces/IPagination.html":{},"interfaces/ITag.html":{},"interfaces/ITryRequest.html":{},"interfaces/IUser.html":{},"classes/PaginationParams.html":{},"interfaces/ParamOption.html":{},"interfaces/ParamsOptions.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"classes/QueryFailedFilter.html":{},"classes/R.html":{},"guards/RequestGuard.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/Response.html":{},"guards/ResponseGuard.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{},"classes/Tag.html":{},"controllers/TagsController.html":{},"modules/TagsModule.html":{},"injectables/TagsService.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateTagsDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"classes/ValidationFailedFilter.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["retention",{"_index":998,"title":{},"body":{"controllers/HealthController.html":{}}}],["return",{"_index":180,"title":{},"body":{"classes/ApiException.html":{},"controllers/AppController.html":{},"classes/BaseModel.html":{},"injectables/CronService.html":{},"classes/CrudConfigService.html":{},"classes/CrudController.html":{},"interfaces/CrudOptions.html":{},"classes/CrudRoutesFactory.html":{},"classes/CrudService.html":{},"classes/CustomQueryBuilder.html":{},"modules/DatabaseModule.html":{},"injectables/ExcludeNullUndefinedInterceptor.html":{},"interfaces/GetManyDefaultResponse.html":{},"controllers/HealthController.html":{},"interfaces/IBaseModel.html":{},"interfaces/ICrudService.html":{},"interfaces/ParamOption.html":{},"interfaces/ParamsOptions.html":{},"classes/R.html":{},"guards/RequestGuard.html":{},"interfaces/Response.html":{},"guards/ResponseGuard.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{},"controllers/TagsController.html":{},"injectables/TagsService.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/TransformInterceptor.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["return,@typescript",{"_index":1121,"title":{},"body":{"guards/ResponseGuard.html":{}}}],["returning",{"_index":1217,"title":{},"body":{"injectables/TagsService.html":{}}}],["returning('*').first",{"_index":1212,"title":{},"body":{"injectables/TagsService.html":{}}}],["returns",{"_index":196,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"classes/BaseModel.html":{},"injectables/CronService.html":{},"classes/CrudConfigService.html":{},"classes/CrudController.html":{},"classes/CrudRoutesFactory.html":{},"classes/CrudService.html":{},"classes/CustomQueryBuilder.html":{},"injectables/ExcludeNullUndefinedInterceptor.html":{},"controllers/HealthController.html":{},"interfaces/ICrudService.html":{},"classes/QueryFailedFilter.html":{},"classes/R.html":{},"guards/RequestGuard.html":{},"guards/ResponseGuard.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{},"classes/Tag.html":{},"controllers/TagsController.html":{},"injectables/TagsService.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/TransformInterceptor.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"classes/ValidationFailedFilter.html":{},"miscellaneous/functions.html":{}}}],["reusable",{"_index":433,"title":{},"body":{"classes/CreateUserDto.html":{},"interfaces/IUser.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{}}}],["rimraf",{"_index":1421,"title":{},"body":{"dependencies.html":{}}}],["route",{"_index":1088,"title":{},"body":{"classes/R.html":{}}}],["route.enable",{"_index":716,"title":{},"body":{"classes/CrudConfigService.html":{},"classes/CrudRoutesFactory.html":{},"classes/R.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{}}}],["route.method",{"_index":567,"title":{},"body":{"classes/CrudConfigService.html":{},"classes/CrudRoutesFactory.html":{},"classes/R.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{}}}],["route.override",{"_index":715,"title":{},"body":{"classes/CrudConfigService.html":{},"classes/CrudRoutesFactory.html":{},"classes/R.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{}}}],["route.path",{"_index":565,"title":{},"body":{"classes/CrudConfigService.html":{},"classes/CrudRoutesFactory.html":{},"classes/R.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{}}}],["routes",{"_index":770,"title":{},"body":{"interfaces/CrudOptions.html":{},"interfaces/GetManyDefaultResponse.html":{},"interfaces/ParamOption.html":{},"interfaces/ParamsOptions.html":{}}}],["routes.factory.ts",{"_index":529,"title":{},"body":{"classes/CrudConfigService.html":{},"classes/CrudRoutesFactory.html":{},"classes/R.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{},"coverage.html":{}}}],["routes.factory.ts:148",{"_index":1142,"title":{},"body":{"classes/SerializeHelper.html":{}}}],["routes.factory.ts:175",{"_index":1143,"title":{},"body":{"classes/SerializeHelper.html":{}}}],["routes.factory.ts:188",{"_index":535,"title":{},"body":{"classes/CrudConfigService.html":{}}}],["routes.factory.ts:194",{"_index":537,"title":{},"body":{"classes/CrudConfigService.html":{}}}],["routes.factory.ts:20",{"_index":1086,"title":{},"body":{"classes/R.html":{}}}],["routes.factory.ts:208",{"_index":826,"title":{},"body":{"classes/CrudRoutesFactory.html":{}}}],["routes.factory.ts:210",{"_index":825,"title":{},"body":{"classes/CrudRoutesFactory.html":{}}}],["routes.factory.ts:226",{"_index":827,"title":{},"body":{"classes/CrudRoutesFactory.html":{}}}],["routes.factory.ts:230",{"_index":838,"title":{},"body":{"classes/CrudRoutesFactory.html":{}}}],["routes.factory.ts:234",{"_index":840,"title":{},"body":{"classes/CrudRoutesFactory.html":{}}}],["routes.factory.ts:238",{"_index":842,"title":{},"body":{"classes/CrudRoutesFactory.html":{}}}],["routes.factory.ts:242",{"_index":828,"title":{},"body":{"classes/CrudRoutesFactory.html":{}}}],["routes.factory.ts:250",{"_index":831,"title":{},"body":{"classes/CrudRoutesFactory.html":{}}}],["routes.factory.ts:256",{"_index":832,"title":{},"body":{"classes/CrudRoutesFactory.html":{}}}],["routes.factory.ts:262",{"_index":833,"title":{},"body":{"classes/CrudRoutesFactory.html":{}}}],["routes.factory.ts:283",{"_index":834,"title":{},"body":{"classes/CrudRoutesFactory.html":{}}}],["routes.factory.ts:33",{"_index":1084,"title":{},"body":{"classes/R.html":{}}}],["routes.factory.ts:335",{"_index":835,"title":{},"body":{"classes/CrudRoutesFactory.html":{}}}],["routes.factory.ts:367",{"_index":830,"title":{},"body":{"classes/CrudRoutesFactory.html":{}}}],["routes.factory.ts:375",{"_index":829,"title":{},"body":{"classes/CrudRoutesFactory.html":{}}}],["routes.factory.ts:386",{"_index":836,"title":{},"body":{"classes/CrudRoutesFactory.html":{}}}],["routes.factory.ts:43",{"_index":1087,"title":{},"body":{"classes/R.html":{}}}],["routes.factory.ts:50",{"_index":1154,"title":{},"body":{"classes/Swagger.html":{}}}],["routes.factory.ts:68",{"_index":1155,"title":{},"body":{"classes/Swagger.html":{}}}],["routes.factory.ts:74",{"_index":1152,"title":{},"body":{"classes/Swagger.html":{}}}],["routes.factory.ts:80",{"_index":1153,"title":{},"body":{"classes/Swagger.html":{}}}],["routes.factory.ts:86",{"_index":1149,"title":{},"body":{"classes/Swagger.html":{}}}],["routesschema",{"_index":655,"title":{},"body":{"classes/CrudConfigService.html":{},"classes/CrudRoutesFactory.html":{},"classes/R.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{}}}],["routesschema.foreach((route",{"_index":714,"title":{},"body":{"classes/CrudConfigService.html":{},"classes/CrudRoutesFactory.html":{},"classes/R.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{}}}],["run",{"_index":490,"title":{},"body":{"injectables/CronService.html":{},"index.html":{}}}],["rxjs",{"_index":971,"title":{},"body":{"injectables/ExcludeNullUndefinedInterceptor.html":{},"controllers/HealthController.html":{},"guards/RequestGuard.html":{},"interfaces/Response.html":{},"guards/ResponseGuard.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/TransformInterceptor.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":973,"title":{},"body":{"injectables/ExcludeNullUndefinedInterceptor.html":{},"controllers/HealthController.html":{},"interfaces/Response.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/TransformInterceptor.html":{}}}],["s",{"_index":1151,"title":{},"body":{"classes/Swagger.html":{}}}],["saferequire",{"_index":1341,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["saferequire('@nestjs/swagger",{"_index":809,"title":{},"body":{"interfaces/CrudOptions.html":{},"interfaces/GetManyDefaultResponse.html":{},"interfaces/ParamOption.html":{},"interfaces/ParamsOptions.html":{},"miscellaneous/variables.html":{}}}],["saferequire('@nestjs/swagger/dist/constants",{"_index":810,"title":{},"body":{"interfaces/CrudOptions.html":{},"interfaces/GetManyDefaultResponse.html":{},"interfaces/ParamOption.html":{},"interfaces/ParamsOptions.html":{},"miscellaneous/variables.html":{}}}],["saferequire(path",{"_index":797,"title":{},"body":{"interfaces/CrudOptions.html":{},"interfaces/GetManyDefaultResponse.html":{},"interfaces/ParamOption.html":{},"interfaces/ParamsOptions.html":{},"miscellaneous/functions.html":{}}}],["salt",{"_index":323,"title":{},"body":{"classes/BaseModel.html":{},"interfaces/IBaseModel.html":{},"classes/Tag.html":{},"classes/User.html":{}}}],["saltrounds",{"_index":851,"title":{},"body":{"classes/CrudService.html":{},"interfaces/ICrudService.html":{},"injectables/UsersService.html":{}}}],["scalable",{"_index":1457,"title":{},"body":{"index.html":{}}}],["schedulemodule",{"_index":239,"title":{},"body":{"modules/AppModule.html":{}}}],["schedulemodule.forroot",{"_index":276,"title":{},"body":{"modules/AppModule.html":{}}}],["schema",{"_index":389,"title":{},"body":{"classes/CreateTagsDto.html":{},"classes/CreateUserDto.html":{},"classes/CrudConfigService.html":{},"classes/CrudRoutesFactory.html":{},"interfaces/ITag.html":{},"interfaces/IUser.html":{},"classes/QueryFailedFilter.html":{},"classes/R.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{},"classes/Tag.html":{},"classes/UpdateTagsDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{}}}],["searchbyname(query",{"_index":452,"title":{},"body":{"classes/CreateUserDto.html":{},"interfaces/IUser.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{}}}],["second",{"_index":523,"title":{},"body":{"injectables/CronService.html":{},"controllers/HealthController.html":{}}}],["seed",{"_index":1354,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["seed(knex",{"_index":1449,"title":{},"body":{"miscellaneous/functions.html":{}}}],["semi",{"_index":439,"title":{},"body":{"classes/CreateUserDto.html":{},"interfaces/IUser.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{}}}],["sequence",{"_index":288,"title":{},"body":{"modules/AppModule.html":{}}}],["serialize",{"_index":627,"title":{},"body":{"classes/CrudConfigService.html":{},"interfaces/CrudOptions.html":{},"classes/CrudRoutesFactory.html":{},"interfaces/GetManyDefaultResponse.html":{},"interfaces/ParamOption.html":{},"interfaces/ParamsOptions.html":{},"classes/R.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{}}}],["serializehelper",{"_index":610,"title":{"classes/SerializeHelper.html":{}},"body":{"classes/CrudConfigService.html":{},"classes/CrudRoutesFactory.html":{},"classes/R.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{},"coverage.html":{}}}],["serializehelper.creategetmanydto",{"_index":685,"title":{},"body":{"classes/CrudConfigService.html":{},"classes/CrudRoutesFactory.html":{},"classes/R.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{}}}],["serializehelper.creategetmanydto(this.swaggermodels.get",{"_index":703,"title":{},"body":{"classes/CrudConfigService.html":{},"classes/CrudRoutesFactory.html":{},"classes/R.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{}}}],["serializehelper.creategetoneresponsedto(this.modelname",{"_index":699,"title":{},"body":{"classes/CrudConfigService.html":{},"classes/CrudRoutesFactory.html":{},"classes/R.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{}}}],["server",{"_index":186,"title":{},"body":{"classes/ApiException.html":{},"index.html":{}}}],["service",{"_index":736,"title":{},"body":{"classes/CrudController.html":{},"classes/CrudService.html":{},"interfaces/ICrudService.html":{},"controllers/TagsController.html":{},"controllers/UsersController.html":{}}}],["services",{"_index":845,"title":{},"body":{"classes/CrudService.html":{},"interfaces/ICrudService.html":{}}}],["set",{"_index":553,"title":{},"body":{"classes/CrudConfigService.html":{},"classes/CrudRoutesFactory.html":{},"classes/R.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{}}}],["set(metadatakey",{"_index":1085,"title":{},"body":{"classes/R.html":{}}}],["setextramodels",{"_index":1146,"title":{},"body":{"classes/Swagger.html":{}}}],["setextramodels(swaggermodels",{"_index":568,"title":{},"body":{"classes/CrudConfigService.html":{},"classes/CrudRoutesFactory.html":{},"classes/R.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{}}}],["setresponsemodels",{"_index":697,"title":{},"body":{"classes/CrudConfigService.html":{},"classes/CrudRoutesFactory.html":{},"classes/R.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{}}}],["setresponseok",{"_index":1147,"title":{},"body":{"classes/Swagger.html":{}}}],["setresponseok(metadata",{"_index":582,"title":{},"body":{"classes/CrudConfigService.html":{},"classes/CrudRoutesFactory.html":{},"classes/R.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{}}}],["setroute",{"_index":1082,"title":{},"body":{"classes/R.html":{}}}],["setroute(route",{"_index":562,"title":{},"body":{"classes/CrudConfigService.html":{},"classes/CrudRoutesFactory.html":{},"classes/R.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{}}}],["setswaggerresponseok",{"_index":822,"title":{},"body":{"classes/CrudRoutesFactory.html":{}}}],["setswaggerresponseok(name",{"_index":722,"title":{},"body":{"classes/CrudConfigService.html":{},"classes/CrudRoutesFactory.html":{},"classes/R.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{}}}],["setting",{"_index":78,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{}}}],["setupinfra",{"_index":1365,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["setupinfra(app",{"_index":1442,"title":{},"body":{"miscellaneous/functions.html":{}}}],["setupmiddlewares",{"_index":1366,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["setupmiddlewares(app",{"_index":1444,"title":{},"body":{"miscellaneous/functions.html":{}}}],["setupswaggerdocs",{"_index":1367,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["setupswaggerdocs(app",{"_index":1445,"title":{},"body":{"miscellaneous/functions.html":{}}}],["shadow",{"_index":1123,"title":{},"body":{"guards/ResponseGuard.html":{}}}],["showmycontacts",{"_index":79,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{}}}],["showmynumber",{"_index":118,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{}}}],["showremoveoption",{"_index":130,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{}}}],["shutdown",{"_index":306,"title":{},"body":{"modules/AppModule.html":{},"controllers/HealthController.html":{}}}],["side",{"_index":1458,"title":{},"body":{"index.html":{}}}],["signal",{"_index":232,"title":{},"body":{"modules/AppModule.html":{},"controllers/HealthController.html":{}}}],["simply",{"_index":453,"title":{},"body":{"classes/CreateUserDto.html":{},"interfaces/IUser.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{}}}],["singlequerybuildertype",{"_index":888,"title":{},"body":{"classes/CustomQueryBuilder.html":{}}}],["size",{"_index":898,"title":{},"body":{"classes/CustomQueryBuilder.html":{},"interfaces/IPagination.html":{},"classes/PaginationParams.html":{}}}],["snippets",{"_index":434,"title":{},"body":{"classes/CreateUserDto.html":{},"interfaces/IUser.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{}}}],["socket.io",{"_index":1382,"title":{},"body":{"dependencies.html":{}}}],["something",{"_index":1126,"title":{},"body":{"guards/ResponseGuard.html":{}}}],["source",{"_index":4,"title":{},"body":{"interfaces/APIResponse.html":{},"classes/ApiException.html":{},"controllers/AppController.html":{},"interfaces/AppLaunchAction.html":{},"modules/AppModule.html":{},"classes/BaseModel.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"classes/CreateTagsDto.html":{},"classes/CreateUserDto.html":{},"modules/CronModule.html":{},"injectables/CronService.html":{},"classes/CrudConfigService.html":{},"classes/CrudController.html":{},"interfaces/CrudOptions.html":{},"classes/CrudRoutesFactory.html":{},"classes/CrudService.html":{},"classes/CustomQueryBuilder.html":{},"modules/DatabaseModule.html":{},"injectables/ExcludeNullUndefinedInterceptor.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetManyDefaultResponse.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"controllers/HealthController.html":{},"interfaces/IBaseModel.html":{},"interfaces/ICrudService.html":{},"interfaces/IPagination.html":{},"interfaces/ITag.html":{},"interfaces/ITryRequest.html":{},"interfaces/IUser.html":{},"classes/PaginationParams.html":{},"interfaces/ParamOption.html":{},"interfaces/ParamsOptions.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"classes/QueryFailedFilter.html":{},"classes/R.html":{},"guards/RequestGuard.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/Response.html":{},"guards/ResponseGuard.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{},"classes/Tag.html":{},"controllers/TagsController.html":{},"modules/TagsModule.html":{},"injectables/TagsService.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateTagsDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"classes/ValidationFailedFilter.html":{},"dependencies.html":{},"index.html":{}}}],["specified",{"_index":492,"title":{},"body":{"injectables/CronService.html":{}}}],["split",{"_index":443,"title":{},"body":{"classes/CreateUserDto.html":{},"interfaces/IUser.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{}}}],["sponsors",{"_index":1482,"title":{},"body":{"index.html":{}}}],["sqlite3",{"_index":950,"title":{},"body":{"modules/DatabaseModule.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["src/.../01",{"_index":1440,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../02",{"_index":1441,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../20190609143930_createtag.ts",{"_index":1437,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/.../20190609143930_createuser.ts",{"_index":1438,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/.../api",{"_index":1434,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../app.module.ts",{"_index":1519,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../checks.util.ts",{"_index":1522,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../crud.decorator.ts",{"_index":1520,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../database.module.ts",{"_index":1523,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../domain.ts",{"_index":1513,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../helpers.ts",{"_index":1439,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../main.ts",{"_index":1436,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../moment",{"_index":1524,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../obj.util.ts",{"_index":1521,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../object",{"_index":1515,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../other.ts",{"_index":1435,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../pagination.ts",{"_index":1432,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/app.controller.ts",{"_index":192,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app.controller.ts:10",{"_index":195,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.module.ts",{"_index":226,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app.module.ts:59",{"_index":236,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.module.ts:63",{"_index":231,"title":{},"body":{"modules/AppModule.html":{}}}],["src/base/crud/crud.controller.ts",{"_index":730,"title":{},"body":{"classes/CrudController.html":{},"coverage.html":{}}}],["src/base/crud/crud.controller.ts:20",{"_index":735,"title":{},"body":{"classes/CrudController.html":{}}}],["src/base/crud/crud.controller.ts:30",{"_index":743,"title":{},"body":{"classes/CrudController.html":{}}}],["src/base/crud/crud.controller.ts:50",{"_index":749,"title":{},"body":{"classes/CrudController.html":{}}}],["src/base/crud/crud.service",{"_index":1286,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/base/crud/crud.service.ts",{"_index":844,"title":{},"body":{"classes/CrudService.html":{},"interfaces/ICrudService.html":{},"coverage.html":{}}}],["src/base/crud/crud.service.ts:11",{"_index":1026,"title":{},"body":{"interfaces/ICrudService.html":{}}}],["src/base/crud/crud.service.ts:13",{"_index":1027,"title":{},"body":{"interfaces/ICrudService.html":{}}}],["src/base/crud/crud.service.ts:21",{"_index":855,"title":{},"body":{"classes/CrudService.html":{}}}],["src/base/crud/crud.service.ts:38",{"_index":861,"title":{},"body":{"classes/CrudService.html":{}}}],["src/base/crud/crud.service.ts:51",{"_index":866,"title":{},"body":{"classes/CrudService.html":{}}}],["src/base/crud/crud.service.ts:76",{"_index":864,"title":{},"body":{"classes/CrudService.html":{}}}],["src/base/crud/crud.service.ts:9",{"_index":1025,"title":{},"body":{"interfaces/ICrudService.html":{}}}],["src/base/crud/pagination.ts",{"_index":1028,"title":{},"body":{"interfaces/IPagination.html":{},"classes/PaginationParams.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["src/base/crud/pagination.ts:22",{"_index":1052,"title":{},"body":{"classes/PaginationParams.html":{}}}],["src/base/crud/pagination.ts:31",{"_index":1053,"title":{},"body":{"classes/PaginationParams.html":{}}}],["src/base/crud/pagination.ts:38",{"_index":1049,"title":{},"body":{"classes/PaginationParams.html":{}}}],["src/base/crud/try",{"_index":1045,"title":{},"body":{"interfaces/ITryRequest.html":{},"coverage.html":{}}}],["src/base/moment",{"_index":1313,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/base/swagger",{"_index":137,"title":{},"body":{"classes/ApiException.html":{},"classes/CrudConfigService.html":{},"interfaces/CrudOptions.html":{},"classes/CrudRoutesFactory.html":{},"interfaces/GetManyDefaultResponse.html":{},"interfaces/ParamOption.html":{},"interfaces/ParamsOptions.html":{},"classes/R.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/cron/cron.module.ts",{"_index":479,"title":{},"body":{"modules/CronModule.html":{}}}],["src/cron/cron.service.ts",{"_index":483,"title":{},"body":{"injectables/CronService.html":{},"coverage.html":{}}}],["src/cron/cron.service.ts:13",{"_index":512,"title":{},"body":{"injectables/CronService.html":{}}}],["src/cron/cron.service.ts:15",{"_index":516,"title":{},"body":{"injectables/CronService.html":{}}}],["src/cron/cron.service.ts:17",{"_index":518,"title":{},"body":{"injectables/CronService.html":{}}}],["src/cron/cron.service.ts:19",{"_index":514,"title":{},"body":{"injectables/CronService.html":{}}}],["src/cron/cron.service.ts:21",{"_index":503,"title":{},"body":{"injectables/CronService.html":{}}}],["src/cron/cron.service.ts:27",{"_index":506,"title":{},"body":{"injectables/CronService.html":{}}}],["src/cron/cron.service.ts:41",{"_index":508,"title":{},"body":{"injectables/CronService.html":{}}}],["src/cron/cron.service.ts:52",{"_index":510,"title":{},"body":{"injectables/CronService.html":{}}}],["src/database/database.module.ts",{"_index":937,"title":{},"body":{"modules/DatabaseModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/database/migrations/20190609143930_createtag.ts",{"_index":1344,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/database/migrations/20190609143930_createuser.ts",{"_index":1347,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/database/models/base.model.ts",{"_index":308,"title":{},"body":{"classes/BaseModel.html":{},"interfaces/IBaseModel.html":{},"coverage.html":{}}}],["src/database/models/base.model.ts:26",{"_index":325,"title":{},"body":{"classes/BaseModel.html":{}}}],["src/database/models/base.model.ts:28",{"_index":330,"title":{},"body":{"classes/BaseModel.html":{}}}],["src/database/models/base.model.ts:30",{"_index":329,"title":{},"body":{"classes/BaseModel.html":{}}}],["src/database/models/base.model.ts:32",{"_index":327,"title":{},"body":{"classes/BaseModel.html":{}}}],["src/database/models/base.model.ts:34",{"_index":319,"title":{},"body":{"classes/BaseModel.html":{}}}],["src/database/models/base.model.ts:36",{"_index":331,"title":{},"body":{"classes/BaseModel.html":{}}}],["src/database/models/base.model.ts:38",{"_index":320,"title":{},"body":{"classes/BaseModel.html":{}}}],["src/database/models/base.model.ts:41",{"_index":336,"title":{},"body":{"classes/BaseModel.html":{}}}],["src/database/models/helpers.ts",{"_index":884,"title":{},"body":{"classes/CustomQueryBuilder.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/database/models/helpers.ts:37",{"_index":893,"title":{},"body":{"classes/CustomQueryBuilder.html":{}}}],["src/database/models/helpers.ts:39",{"_index":896,"title":{},"body":{"classes/CustomQueryBuilder.html":{}}}],["src/database/models/helpers.ts:41",{"_index":894,"title":{},"body":{"classes/CustomQueryBuilder.html":{}}}],["src/database/models/helpers.ts:43",{"_index":895,"title":{},"body":{"classes/CustomQueryBuilder.html":{}}}],["src/database/models/helpers.ts:45",{"_index":905,"title":{},"body":{"classes/CustomQueryBuilder.html":{}}}],["src/database/models/helpers.ts:61",{"_index":902,"title":{},"body":{"classes/CustomQueryBuilder.html":{}}}],["src/database/models/helpers.ts:66",{"_index":901,"title":{},"body":{"classes/CustomQueryBuilder.html":{}}}],["src/database/models/helpers.ts:71",{"_index":899,"title":{},"body":{"classes/CustomQueryBuilder.html":{}}}],["src/database/seeds/01",{"_index":1352,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/database/seeds/02",{"_index":1355,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/domain.ts",{"_index":6,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/health/health.controller.ts",{"_index":975,"title":{},"body":{"controllers/HealthController.html":{},"coverage.html":{}}}],["src/health/health.controller.ts:36",{"_index":986,"title":{},"body":{"controllers/HealthController.html":{}}}],["src/health/health.controller.ts:55",{"_index":979,"title":{},"body":{"controllers/HealthController.html":{}}}],["src/health/health.controller.ts:61",{"_index":981,"title":{},"body":{"controllers/HealthController.html":{}}}],["src/health/health.controller.ts:75",{"_index":984,"title":{},"body":{"controllers/HealthController.html":{}}}],["src/health/health.controller.ts:81",{"_index":983,"title":{},"body":{"controllers/HealthController.html":{}}}],["src/infra/filters/query",{"_index":1057,"title":{},"body":{"classes/QueryFailedFilter.html":{},"coverage.html":{}}}],["src/infra/filters/validation",{"_index":1294,"title":{},"body":{"classes/ValidationFailedFilter.html":{},"coverage.html":{}}}],["src/infra/guards/req.ts",{"_index":1092,"title":{},"body":{"guards/RequestGuard.html":{},"coverage.html":{}}}],["src/infra/guards/req.ts:20",{"_index":1096,"title":{},"body":{"guards/RequestGuard.html":{}}}],["src/infra/guards/req.ts:7",{"_index":1099,"title":{},"body":{"guards/RequestGuard.html":{}}}],["src/infra/guards/res.ts",{"_index":1114,"title":{},"body":{"guards/ResponseGuard.html":{},"coverage.html":{}}}],["src/infra/guards/res.ts:20",{"_index":1117,"title":{},"body":{"guards/ResponseGuard.html":{}}}],["src/infra/guards/res.ts:7",{"_index":1118,"title":{},"body":{"guards/ResponseGuard.html":{}}}],["src/infra/interceptors/null",{"_index":958,"title":{},"body":{"injectables/ExcludeNullUndefinedInterceptor.html":{},"coverage.html":{}}}],["src/infra/interceptors/timeout.ts",{"_index":1220,"title":{},"body":{"injectables/TimeoutInterceptor.html":{},"coverage.html":{}}}],["src/infra/interceptors/timeout.ts:17",{"_index":1226,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["src/infra/interceptors/transform.ts",{"_index":1110,"title":{},"body":{"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{},"coverage.html":{}}}],["src/infra/interceptors/transform.ts:17",{"_index":1238,"title":{},"body":{"injectables/TransformInterceptor.html":{}}}],["src/main.ts",{"_index":1364,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/tags/tag.model.ts",{"_index":370,"title":{},"body":{"classes/CreateTagsDto.html":{},"interfaces/ITag.html":{},"classes/Tag.html":{},"classes/UpdateTagsDto.html":{},"coverage.html":{}}}],["src/tags/tag.model.ts:14",{"_index":1158,"title":{},"body":{"classes/Tag.html":{}}}],["src/tags/tag.model.ts:16",{"_index":1157,"title":{},"body":{"classes/Tag.html":{}}}],["src/tags/tag.model.ts:20",{"_index":1156,"title":{},"body":{"classes/Tag.html":{}}}],["src/tags/tag.model.ts:36",{"_index":373,"title":{},"body":{"classes/CreateTagsDto.html":{}}}],["src/tags/tags.controller.ts",{"_index":1169,"title":{},"body":{"controllers/TagsController.html":{},"coverage.html":{}}}],["src/tags/tags.controller.ts:25",{"_index":1175,"title":{},"body":{"controllers/TagsController.html":{}}}],["src/tags/tags.controller.ts:30",{"_index":1176,"title":{},"body":{"controllers/TagsController.html":{}}}],["src/tags/tags.controller.ts:35",{"_index":1171,"title":{},"body":{"controllers/TagsController.html":{}}}],["src/tags/tags.controller.ts:40",{"_index":1174,"title":{},"body":{"controllers/TagsController.html":{}}}],["src/tags/tags.controller.ts:45",{"_index":1180,"title":{},"body":{"controllers/TagsController.html":{}}}],["src/tags/tags.module.ts",{"_index":1195,"title":{},"body":{"modules/TagsModule.html":{}}}],["src/tags/tags.service.ts",{"_index":1197,"title":{},"body":{"injectables/TagsService.html":{},"coverage.html":{}}}],["src/tags/tags.service.ts:11",{"_index":1202,"title":{},"body":{"injectables/TagsService.html":{}}}],["src/tags/tags.service.ts:15",{"_index":1203,"title":{},"body":{"injectables/TagsService.html":{}}}],["src/tags/tags.service.ts:19",{"_index":1200,"title":{},"body":{"injectables/TagsService.html":{}}}],["src/tags/tags.service.ts:23",{"_index":1204,"title":{},"body":{"injectables/TagsService.html":{}}}],["src/tags/tags.service.ts:27",{"_index":1201,"title":{},"body":{"injectables/TagsService.html":{}}}],["src/tags/tags.service.ts:8",{"_index":1199,"title":{},"body":{"injectables/TagsService.html":{}}}],["src/users/user.model.ts",{"_index":408,"title":{},"body":{"classes/CreateUserDto.html":{},"interfaces/IUser.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"coverage.html":{}}}],["src/users/user.model.ts:100",{"_index":414,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["src/users/user.model.ts:106",{"_index":421,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["src/users/user.model.ts:112",{"_index":416,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["src/users/user.model.ts:118",{"_index":419,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["src/users/user.model.ts:122",{"_index":418,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["src/users/user.model.ts:27",{"_index":1246,"title":{},"body":{"classes/User.html":{}}}],["src/users/user.model.ts:29",{"_index":1247,"title":{},"body":{"classes/User.html":{}}}],["src/users/user.model.ts:31",{"_index":1239,"title":{},"body":{"classes/User.html":{}}}],["src/users/user.model.ts:33",{"_index":1240,"title":{},"body":{"classes/User.html":{}}}],["src/users/user.model.ts:35",{"_index":1243,"title":{},"body":{"classes/User.html":{}}}],["src/users/user.model.ts:37",{"_index":1241,"title":{},"body":{"classes/User.html":{}}}],["src/users/user.model.ts:39",{"_index":1245,"title":{},"body":{"classes/User.html":{}}}],["src/users/user.model.ts:43",{"_index":1242,"title":{},"body":{"classes/User.html":{}}}],["src/users/user.model.ts:63",{"_index":1244,"title":{},"body":{"classes/User.html":{}}}],["src/users/user.model.ts:94",{"_index":422,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["src/users/users.controller.ts",{"_index":1249,"title":{},"body":{"controllers/UsersController.html":{},"coverage.html":{}}}],["src/users/users.controller.ts:32",{"_index":1254,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:41",{"_index":1260,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:53",{"_index":1257,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.module.ts",{"_index":1275,"title":{},"body":{"modules/UsersModule.html":{}}}],["src/users/users.service.ts",{"_index":1277,"title":{},"body":{"injectables/UsersService.html":{},"coverage.html":{}}}],["src/users/users.service.ts:10",{"_index":1278,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:15",{"_index":1279,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:19",{"_index":1281,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:23",{"_index":1280,"title":{},"body":{"injectables/UsersService.html":{}}}],["sse",{"_index":977,"title":{},"body":{"controllers/HealthController.html":{}}}],["sse('sse",{"_index":985,"title":{},"body":{"controllers/HealthController.html":{}}}],["stack",{"_index":142,"title":{},"body":{"classes/ApiException.html":{}}}],["start",{"_index":1466,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":1469,"title":{},"body":{"index.html":{}}}],["start:prodtest",{"_index":1470,"title":{},"body":{"index.html":{}}}],["started",{"_index":1451,"title":{"index.html":{}},"body":{}}],["starter",{"_index":1460,"title":{},"body":{"index.html":{}}}],["stat",{"_index":1012,"title":{},"body":{"controllers/HealthController.html":{}}}],["stat.load",{"_index":1020,"title":{},"body":{"controllers/HealthController.html":{}}}],["stat.memory",{"_index":1015,"title":{},"body":{"controllers/HealthController.html":{}}}],["stat.timestamp",{"_index":1018,"title":{},"body":{"controllers/HealthController.html":{}}}],["statements",{"_index":456,"title":{},"body":{"classes/CreateUserDto.html":{},"interfaces/IUser.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"coverage.html":{}}}],["static",{"_index":205,"title":{},"body":{"controllers/AppController.html":{},"classes/BaseModel.html":{},"classes/CreateTagsDto.html":{},"classes/CreateUserDto.html":{},"injectables/CronService.html":{},"classes/CrudConfigService.html":{},"classes/CrudRoutesFactory.html":{},"controllers/HealthController.html":{},"interfaces/IBaseModel.html":{},"interfaces/ITag.html":{},"interfaces/IUser.html":{},"classes/R.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{},"classes/Tag.html":{},"controllers/TagsController.html":{},"classes/UpdateTagsDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"dependencies.html":{}}}],["status",{"_index":143,"title":{},"body":{"classes/ApiException.html":{},"classes/CrudController.html":{},"classes/QueryFailedFilter.html":{},"guards/ResponseGuard.html":{},"classes/ValidationFailedFilter.html":{}}}],["statuscode",{"_index":16,"title":{},"body":{"interfaces/APIResponse.html":{},"classes/ApiException.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"classes/QueryFailedFilter.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{},"classes/ValidationFailedFilter.html":{}}}],["stay",{"_index":1490,"title":{},"body":{"index.html":{}}}],["store",{"_index":1252,"title":{},"body":{"controllers/UsersController.html":{}}}],["string",{"_index":23,"title":{},"body":{"interfaces/APIResponse.html":{},"classes/ApiException.html":{},"controllers/AppController.html":{},"interfaces/AppLaunchAction.html":{},"modules/AppModule.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"classes/CreateTagsDto.html":{},"classes/CreateUserDto.html":{},"classes/CrudConfigService.html":{},"interfaces/CrudOptions.html":{},"classes/CrudRoutesFactory.html":{},"classes/CrudService.html":{},"injectables/ExcludeNullUndefinedInterceptor.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetManyDefaultResponse.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"controllers/HealthController.html":{},"interfaces/ICrudService.html":{},"interfaces/IPagination.html":{},"interfaces/ITag.html":{},"interfaces/IUser.html":{},"classes/PaginationParams.html":{},"interfaces/ParamOption.html":{},"interfaces/ParamsOptions.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"classes/R.html":{},"guards/RequestGuard.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"guards/ResponseGuard.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{},"classes/Tag.html":{},"classes/UpdateTagsDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{},"injectables/UsersService.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["string[]).every((v",{"_index":1537,"title":{},"body":{"miscellaneous/variables.html":{}}}],["subject",{"_index":51,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{}}}],["success",{"_index":1047,"title":{},"body":{"interfaces/ITryRequest.html":{},"guards/ResponseGuard.html":{}}}],["such",{"_index":850,"title":{},"body":{"classes/CrudService.html":{},"interfaces/ICrudService.html":{}}}],["summary",{"_index":762,"title":{},"body":{"classes/CrudController.html":{},"controllers/UsersController.html":{}}}],["super(model",{"_index":1288,"title":{},"body":{"injectables/UsersService.html":{}}}],["super(service",{"_index":1268,"title":{},"body":{"controllers/UsersController.html":{}}}],["super.$beforeinsert(querycontext",{"_index":367,"title":{},"body":{"classes/BaseModel.html":{},"interfaces/IBaseModel.html":{}}}],["super.$beforeupdate(opt",{"_index":363,"title":{},"body":{"classes/BaseModel.html":{},"interfaces/IBaseModel.html":{}}}],["support",{"_index":1424,"title":{},"body":{"dependencies.html":{},"index.html":{},"modules.html":{}}}],["svg",{"_index":1501,"title":{},"body":{"modules.html":{}}}],["swagger",{"_index":546,"title":{"classes/Swagger.html":{}},"body":{"classes/CrudConfigService.html":{},"classes/CrudController.html":{},"interfaces/CrudOptions.html":{},"classes/CrudRoutesFactory.html":{},"interfaces/GetManyDefaultResponse.html":{},"interfaces/ParamOption.html":{},"interfaces/ParamsOptions.html":{},"classes/R.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["swagger.apimodelproperty",{"_index":818,"title":{},"body":{"interfaces/CrudOptions.html":{},"interfaces/GetManyDefaultResponse.html":{},"interfaces/ParamOption.html":{},"interfaces/ParamsOptions.html":{}}}],["swagger.apiproperty",{"_index":817,"title":{},"body":{"interfaces/CrudOptions.html":{},"interfaces/GetManyDefaultResponse.html":{},"interfaces/ParamOption.html":{},"interfaces/ParamsOptions.html":{}}}],["swagger.createresponsemeta(name",{"_index":725,"title":{},"body":{"classes/CrudConfigService.html":{},"classes/CrudRoutesFactory.html":{},"classes/R.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{}}}],["swagger.getextramodels(swaggermodels.get",{"_index":570,"title":{},"body":{"classes/CrudConfigService.html":{},"classes/CrudRoutesFactory.html":{},"classes/R.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{}}}],["swagger.getresponseok(this.targetproto[name",{"_index":723,"title":{},"body":{"classes/CrudConfigService.html":{},"classes/CrudRoutesFactory.html":{},"classes/R.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{}}}],["swagger.getschemapath",{"_index":603,"title":{},"body":{"classes/CrudConfigService.html":{},"classes/CrudRoutesFactory.html":{},"classes/R.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{}}}],["swagger.getschemapath(dto.name",{"_index":609,"title":{},"body":{"classes/CrudConfigService.html":{},"classes/CrudRoutesFactory.html":{},"classes/R.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{}}}],["swagger.setextramodels(this.swaggermodels",{"_index":712,"title":{},"body":{"classes/CrudConfigService.html":{},"classes/CrudRoutesFactory.html":{},"classes/R.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{}}}],["swagger.setresponseok",{"_index":726,"title":{},"body":{"classes/CrudConfigService.html":{},"classes/CrudRoutesFactory.html":{},"classes/R.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{}}}],["swaggerconst",{"_index":547,"title":{},"body":{"classes/CrudConfigService.html":{},"interfaces/CrudOptions.html":{},"classes/CrudRoutesFactory.html":{},"interfaces/GetManyDefaultResponse.html":{},"interfaces/ParamOption.html":{},"interfaces/ParamsOptions.html":{},"classes/R.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["swaggerconst.decorators.api_extra_models",{"_index":580,"title":{},"body":{"classes/CrudConfigService.html":{},"classes/CrudRoutesFactory.html":{},"classes/R.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{}}}],["swaggerenumtype",{"_index":774,"title":{},"body":{"interfaces/CrudOptions.html":{},"interfaces/GetManyDefaultResponse.html":{},"interfaces/ParamOption.html":{},"interfaces/ParamsOptions.html":{}}}],["swaggermodels",{"_index":591,"title":{},"body":{"classes/CrudConfigService.html":{},"classes/CrudRoutesFactory.html":{},"classes/R.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{}}}],["swaggermodels.get",{"_index":581,"title":{},"body":{"classes/CrudConfigService.html":{},"classes/CrudRoutesFactory.html":{},"classes/R.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{}}}],["swaggermodels.get.name",{"_index":578,"title":{},"body":{"classes/CrudConfigService.html":{},"classes/CrudRoutesFactory.html":{},"classes/R.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{}}}],["swaggermodels.getmany",{"_index":599,"title":{},"body":{"classes/CrudConfigService.html":{},"classes/CrudRoutesFactory.html":{},"classes/R.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{}}}],["swaggermodels.getmany.name",{"_index":604,"title":{},"body":{"classes/CrudConfigService.html":{},"classes/CrudRoutesFactory.html":{},"classes/R.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{}}}],["swaggermodels[name",{"_index":574,"title":{},"body":{"classes/CrudConfigService.html":{},"classes/CrudRoutesFactory.html":{},"classes/R.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{}}}],["swaggermodels[name.split('onebase')[0",{"_index":608,"title":{},"body":{"classes/CrudConfigService.html":{},"classes/CrudRoutesFactory.html":{},"classes/R.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{}}}],["switch",{"_index":592,"title":{},"body":{"classes/CrudConfigService.html":{},"classes/CrudRoutesFactory.html":{},"classes/R.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{}}}],["symbol",{"_index":558,"title":{},"body":{"classes/CrudConfigService.html":{},"interfaces/CrudOptions.html":{},"classes/CrudRoutesFactory.html":{},"interfaces/GetManyDefaultResponse.html":{},"interfaces/ParamOption.html":{},"interfaces/ParamsOptions.html":{},"classes/R.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{}}}],["synchronize",{"_index":273,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["syntax",{"_index":467,"title":{},"body":{"classes/CreateUserDto.html":{},"interfaces/IUser.html":{},"guards/RequestGuard.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{}}}],["t",{"_index":21,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"classes/CrudConfigService.html":{},"classes/CrudController.html":{},"interfaces/CrudOptions.html":{},"classes/CrudRoutesFactory.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetManyDefaultResponse.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/IPagination.html":{},"classes/PaginationParams.html":{},"interfaces/ParamOption.html":{},"interfaces/ParamsOptions.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"classes/R.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/Response.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{},"injectables/TransformInterceptor.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{},"miscellaneous/functions.html":{}}}],["table",{"_index":1076,"title":{},"body":{"classes/QueryFailedFilter.html":{},"coverage.html":{}}}],["tablename",{"_index":386,"title":{},"body":{"classes/CreateTagsDto.html":{},"classes/CreateUserDto.html":{},"interfaces/ITag.html":{},"interfaces/IUser.html":{},"classes/Tag.html":{},"classes/UpdateTagsDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1371,"title":{},"body":{"coverage.html":{}}}],["tag",{"_index":385,"title":{"classes/Tag.html":{}},"body":{"classes/CreateTagsDto.html":{},"modules/DatabaseModule.html":{},"interfaces/ITag.html":{},"classes/Tag.html":{},"controllers/TagsController.html":{},"injectables/TagsService.html":{},"classes/UpdateTagsDto.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["tag.model",{"_index":1181,"title":{},"body":{"controllers/TagsController.html":{},"injectables/TagsService.html":{}}}],["tag.ts",{"_index":1356,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["tags",{"_index":387,"title":{},"body":{"classes/CreateTagsDto.html":{},"interfaces/ITag.html":{},"classes/Tag.html":{},"controllers/TagsController.html":{},"classes/UpdateTagsDto.html":{},"miscellaneous/variables.html":{}}}],["tags.controller",{"_index":1196,"title":{},"body":{"modules/TagsModule.html":{}}}],["tags.service",{"_index":1183,"title":{},"body":{"controllers/TagsController.html":{},"modules/TagsModule.html":{}}}],["tags/tag.model",{"_index":940,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["tags/tags.module",{"_index":249,"title":{},"body":{"modules/AppModule.html":{}}}],["tagscontroller",{"_index":1168,"title":{"controllers/TagsController.html":{}},"body":{"controllers/TagsController.html":{},"modules/TagsModule.html":{},"coverage.html":{}}}],["tagsmodule",{"_index":221,"title":{"modules/TagsModule.html":{}},"body":{"modules/AppModule.html":{},"modules/TagsModule.html":{},"modules.html":{},"overview.html":{}}}],["tagsservice",{"_index":1182,"title":{"injectables/TagsService.html":{}},"body":{"controllers/TagsController.html":{},"modules/TagsModule.html":{},"injectables/TagsService.html":{},"coverage.html":{},"overview.html":{}}}],["takes",{"_index":1224,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["target",{"_index":556,"title":{},"body":{"classes/CrudConfigService.html":{},"interfaces/CrudOptions.html":{},"classes/CrudRoutesFactory.html":{},"interfaces/GetManyDefaultResponse.html":{},"interfaces/ParamOption.html":{},"interfaces/ParamsOptions.html":{},"classes/R.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{},"miscellaneous/variables.html":{}}}],["targetproto",{"_index":647,"title":{},"body":{"classes/CrudConfigService.html":{},"classes/CrudRoutesFactory.html":{},"classes/R.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{}}}],["terminate",{"_index":1223,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["termination",{"_index":283,"title":{},"body":{"modules/AppModule.html":{}}}],["terminusmodule",{"_index":241,"title":{},"body":{"modules/AppModule.html":{}}}],["test",{"_index":267,"title":{},"body":{"modules/AppModule.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["test:covsupport",{"_index":1475,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":1474,"title":{},"body":{"index.html":{}}}],["tests",{"_index":1472,"title":{},"body":{"index.html":{}}}],["thanks",{"_index":1481,"title":{},"body":{"index.html":{}}}],["this.$fetchgraph(expression",{"_index":361,"title":{},"body":{"classes/BaseModel.html":{},"interfaces/IBaseModel.html":{}}}],["this.bindrequesthelpers(context.switchtohttp().getrequest",{"_index":1100,"title":{},"body":{"guards/RequestGuard.html":{}}}],["this.bindresponsehelpers(context.switchtohttp().getresponse",{"_index":1119,"title":{},"body":{"guards/ResponseGuard.html":{}}}],["this.collectosmetrics(metrics",{"_index":1004,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.config.get('node_env",{"_index":1024,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.count",{"_index":922,"title":{},"body":{"classes/CustomQueryBuilder.html":{}}}],["this.create",{"_index":638,"title":{},"body":{"classes/CrudConfigService.html":{},"classes/CrudRoutesFactory.html":{},"classes/R.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{}}}],["this.created_at",{"_index":368,"title":{},"body":{"classes/BaseModel.html":{},"interfaces/IBaseModel.html":{}}}],["this.createroutes(routesschema",{"_index":659,"title":{},"body":{"classes/CrudConfigService.html":{},"classes/CrudRoutesFactory.html":{},"classes/R.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{}}}],["this.dns.pingcheck('nestjs",{"_index":1007,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.enableroutes(routesschema",{"_index":660,"title":{},"body":{"classes/CrudConfigService.html":{},"classes/CrudRoutesFactory.html":{},"classes/R.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{}}}],["this.error",{"_index":168,"title":{},"body":{"classes/ApiException.html":{}}}],["this.errors",{"_index":170,"title":{},"body":{"classes/ApiException.html":{}}}],["this.factorial(n",{"_index":519,"title":{},"body":{"injectables/CronService.html":{}}}],["this.health.check",{"_index":1006,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.logger.debug",{"_index":521,"title":{},"body":{"injectables/CronService.html":{}}}],["this.mergeoptions",{"_index":657,"title":{},"body":{"classes/CrudConfigService.html":{},"classes/CrudRoutesFactory.html":{},"classes/R.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{}}}],["this.message",{"_index":167,"title":{},"body":{"classes/ApiException.html":{}}}],["this.model",{"_index":881,"title":{},"body":{"classes/CrudService.html":{},"interfaces/ICrudService.html":{}}}],["this.model.query",{"_index":872,"title":{},"body":{"classes/CrudService.html":{},"interfaces/ICrudService.html":{}}}],["this.model.query().insertandfetch(user",{"_index":1289,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.model.query().page(page",{"_index":877,"title":{},"body":{"classes/CrudService.html":{},"interfaces/ICrudService.html":{}}}],["this.model.query().patchandfetchbyid(id",{"_index":1290,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.modelname",{"_index":643,"title":{},"body":{"classes/CrudConfigService.html":{},"classes/CrudRoutesFactory.html":{},"classes/R.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{}}}],["this.modeltype",{"_index":642,"title":{},"body":{"classes/CrudConfigService.html":{},"classes/CrudRoutesFactory.html":{},"classes/R.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{}}}],["this.onlycount",{"_index":925,"title":{},"body":{"classes/CustomQueryBuilder.html":{}}}],["this.options",{"_index":637,"title":{},"body":{"classes/CrudConfigService.html":{},"classes/CrudRoutesFactory.html":{},"classes/R.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{}}}],["this.options.dto",{"_index":678,"title":{},"body":{"classes/CrudConfigService.html":{},"classes/CrudRoutesFactory.html":{},"classes/R.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{}}}],["this.options.model.type",{"_index":652,"title":{},"body":{"classes/CrudConfigService.html":{},"classes/CrudRoutesFactory.html":{},"classes/R.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{}}}],["this.options.model.type.name",{"_index":650,"title":{},"body":{"classes/CrudConfigService.html":{},"classes/CrudRoutesFactory.html":{},"classes/R.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{}}}],["this.options.query",{"_index":675,"title":{},"body":{"classes/CrudConfigService.html":{},"classes/CrudRoutesFactory.html":{},"classes/R.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{}}}],["this.options.routes?.deleteonebase?.returndeleted",{"_index":694,"title":{},"body":{"classes/CrudConfigService.html":{},"classes/CrudRoutesFactory.html":{},"classes/R.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{}}}],["this.options.serialize",{"_index":679,"title":{},"body":{"classes/CrudConfigService.html":{},"classes/CrudRoutesFactory.html":{},"classes/R.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{}}}],["this.options.serialize.create",{"_index":686,"title":{},"body":{"classes/CrudConfigService.html":{},"classes/CrudRoutesFactory.html":{},"classes/R.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{}}}],["this.options.serialize.delete",{"_index":692,"title":{},"body":{"classes/CrudConfigService.html":{},"classes/CrudRoutesFactory.html":{},"classes/R.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{}}}],["this.options.serialize.get",{"_index":681,"title":{},"body":{"classes/CrudConfigService.html":{},"classes/CrudRoutesFactory.html":{},"classes/R.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{}}}],["this.options.serialize.getmany",{"_index":683,"title":{},"body":{"classes/CrudConfigService.html":{},"classes/CrudRoutesFactory.html":{},"classes/R.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{}}}],["this.options.serialize.replace",{"_index":690,"title":{},"body":{"classes/CrudConfigService.html":{},"classes/CrudRoutesFactory.html":{},"classes/R.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{}}}],["this.options.serialize.update",{"_index":688,"title":{},"body":{"classes/CrudConfigService.html":{},"classes/CrudRoutesFactory.html":{},"classes/R.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{}}}],["this.page(page",{"_index":917,"title":{},"body":{"classes/CustomQueryBuilder.html":{}}}],["this.path",{"_index":171,"title":{},"body":{"classes/ApiException.html":{}}}],["this.saltrounds",{"_index":869,"title":{},"body":{"classes/CrudService.html":{},"interfaces/ICrudService.html":{}}}],["this.service.create(tag",{"_index":1187,"title":{},"body":{"controllers/TagsController.html":{}}}],["this.service.create(user",{"_index":1269,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.service.delete(id",{"_index":1189,"title":{},"body":{"controllers/TagsController.html":{}}}],["this.service.findall",{"_index":765,"title":{},"body":{"classes/CrudController.html":{},"controllers/TagsController.html":{}}}],["this.service.findone(id",{"_index":768,"title":{},"body":{"classes/CrudController.html":{},"controllers/TagsController.html":{}}}],["this.service.getone(req",{"_index":664,"title":{},"body":{"classes/CrudConfigService.html":{},"classes/CrudRoutesFactory.html":{},"classes/R.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{}}}],["this.service.getonebase(req",{"_index":667,"title":{},"body":{"classes/CrudConfigService.html":{},"classes/CrudRoutesFactory.html":{},"classes/R.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{}}}],["this.service.paginatedfindall(filter",{"_index":764,"title":{},"body":{"classes/CrudController.html":{}}}],["this.service.remove(id",{"_index":1271,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.service.update(id",{"_index":1191,"title":{},"body":{"controllers/TagsController.html":{},"controllers/UsersController.html":{}}}],["this.setresponsemodels",{"_index":658,"title":{},"body":{"classes/CrudConfigService.html":{},"classes/CrudRoutesFactory.html":{},"classes/R.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{}}}],["this.setswaggerresponseok(route.name",{"_index":721,"title":{},"body":{"classes/CrudConfigService.html":{},"classes/CrudRoutesFactory.html":{},"classes/R.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{}}}],["this.stack",{"_index":169,"title":{},"body":{"classes/ApiException.html":{}}}],["this.status",{"_index":176,"title":{},"body":{"classes/ApiException.html":{}}}],["this.statuscode",{"_index":175,"title":{},"body":{"classes/ApiException.html":{}}}],["this.swaggermodels",{"_index":644,"title":{},"body":{"classes/CrudConfigService.html":{},"classes/CrudRoutesFactory.html":{},"classes/R.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{}}}],["this.swaggermodels.create",{"_index":704,"title":{},"body":{"classes/CrudConfigService.html":{},"classes/CrudRoutesFactory.html":{},"classes/R.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{}}}],["this.swaggermodels.delete",{"_index":710,"title":{},"body":{"classes/CrudConfigService.html":{},"classes/CrudRoutesFactory.html":{},"classes/R.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{}}}],["this.swaggermodels.get",{"_index":700,"title":{},"body":{"classes/CrudConfigService.html":{},"classes/CrudRoutesFactory.html":{},"classes/R.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{}}}],["this.swaggermodels.getmany",{"_index":702,"title":{},"body":{"classes/CrudConfigService.html":{},"classes/CrudRoutesFactory.html":{},"classes/R.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{}}}],["this.swaggermodels.replace",{"_index":708,"title":{},"body":{"classes/CrudConfigService.html":{},"classes/CrudRoutesFactory.html":{},"classes/R.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{}}}],["this.swaggermodels.update",{"_index":706,"title":{},"body":{"classes/CrudConfigService.html":{},"classes/CrudRoutesFactory.html":{},"classes/R.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{}}}],["this.tag",{"_index":1215,"title":{},"body":{"injectables/TagsService.html":{}}}],["this.tag.query",{"_index":1208,"title":{},"body":{"injectables/TagsService.html":{}}}],["this.tag.query().findbyid(id",{"_index":1209,"title":{},"body":{"injectables/TagsService.html":{}}}],["this.tag.query().insert(tag).returning",{"_index":1210,"title":{},"body":{"injectables/TagsService.html":{}}}],["this.tag.query().patch(tag).where",{"_index":1211,"title":{},"body":{"injectables/TagsService.html":{}}}],["this.target",{"_index":696,"title":{},"body":{"classes/CrudConfigService.html":{},"classes/CrudRoutesFactory.html":{},"classes/R.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{}}}],["this.target.prototype",{"_index":648,"title":{},"body":{"classes/CrudConfigService.html":{},"classes/CrudRoutesFactory.html":{},"classes/R.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{}}}],["this.targetproto",{"_index":641,"title":{},"body":{"classes/CrudConfigService.html":{},"classes/CrudRoutesFactory.html":{},"classes/R.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{}}}],["this.targetproto[name",{"_index":662,"title":{},"body":{"classes/CrudConfigService.html":{},"classes/CrudRoutesFactory.html":{},"classes/R.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{}}}],["this.targetproto[route.name",{"_index":718,"title":{},"body":{"classes/CrudConfigService.html":{},"classes/CrudRoutesFactory.html":{},"classes/R.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{}}}],["this.timestamp",{"_index":172,"title":{},"body":{"classes/ApiException.html":{}}}],["this.updated_at",{"_index":364,"title":{},"body":{"classes/BaseModel.html":{},"interfaces/IBaseModel.html":{}}}],["this[expression.tostring",{"_index":359,"title":{},"body":{"classes/BaseModel.html":{},"interfaces/IBaseModel.html":{}}}],["this[route.name](route.name",{"_index":720,"title":{},"body":{"classes/CrudConfigService.html":{},"classes/CrudRoutesFactory.html":{},"classes/R.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{}}}],["those",{"_index":450,"title":{},"body":{"classes/CreateUserDto.html":{},"interfaces/IUser.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{}}}],["throw",{"_index":874,"title":{},"body":{"classes/CrudService.html":{},"interfaces/ICrudService.html":{}}}],["throwerror",{"_index":1228,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["throwerror(e",{"_index":1237,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["throwerror(new",{"_index":1236,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["throwifnotfound",{"_index":883,"title":{},"body":{"classes/CrudService.html":{},"interfaces/ICrudService.html":{}}}],["throws",{"_index":871,"title":{},"body":{"classes/CrudService.html":{},"interfaces/ICrudService.html":{}}}],["timeago",{"_index":94,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{}}}],["timeout",{"_index":493,"title":{},"body":{"injectables/CronService.html":{},"injectables/TimeoutInterceptor.html":{}}}],["timeout(10000",{"_index":1231,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["timeout(50000",{"_index":509,"title":{},"body":{"injectables/CronService.html":{}}}],["timeouterror",{"_index":1229,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["timeoutinterceptor",{"_index":1219,"title":{"injectables/TimeoutInterceptor.html":{}},"body":{"injectables/TimeoutInterceptor.html":{},"coverage.html":{}}}],["times",{"_index":497,"title":{},"body":{"injectables/CronService.html":{}}}],["timestamp",{"_index":144,"title":{},"body":{"classes/ApiException.html":{},"classes/QueryFailedFilter.html":{},"classes/ValidationFailedFilter.html":{}}}],["total",{"_index":17,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"classes/CrudConfigService.html":{},"interfaces/CrudOptions.html":{},"classes/CrudRoutesFactory.html":{},"classes/CrudService.html":{},"classes/CustomQueryBuilder.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetManyDefaultResponse.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/ICrudService.html":{},"interfaces/IPagination.html":{},"classes/PaginationParams.html":{},"interfaces/ParamOption.html":{},"interfaces/ParamsOptions.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"classes/R.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{}}}],["totalpages",{"_index":879,"title":{},"body":{"classes/CrudService.html":{},"classes/CustomQueryBuilder.html":{},"interfaces/ICrudService.html":{},"interfaces/IPagination.html":{},"classes/PaginationParams.html":{}}}],["touch",{"_index":1491,"title":{},"body":{"index.html":{}}}],["transacting(trx",{"_index":1218,"title":{},"body":{"injectables/TagsService.html":{}}}],["transaction",{"_index":1206,"title":{},"body":{"injectables/TagsService.html":{}}}],["transaction(this.tag",{"_index":1213,"title":{},"body":{"injectables/TagsService.html":{}}}],["transform",{"_index":961,"title":{},"body":{"injectables/ExcludeNullUndefinedInterceptor.html":{},"interfaces/IPagination.html":{},"classes/PaginationParams.html":{}}}],["transform((val",{"_index":1039,"title":{},"body":{"interfaces/IPagination.html":{},"classes/PaginationParams.html":{}}}],["transformer",{"_index":539,"title":{},"body":{"classes/CrudConfigService.html":{},"classes/CrudRoutesFactory.html":{},"interfaces/IPagination.html":{},"classes/PaginationParams.html":{},"classes/R.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{},"dependencies.html":{}}}],["transforminterceptor",{"_index":1111,"title":{"injectables/TransformInterceptor.html":{}},"body":{"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{},"coverage.html":{}}}],["true",{"_index":254,"title":{},"body":{"modules/AppModule.html":{},"classes/CreateUserDto.html":{},"injectables/CronService.html":{},"classes/CrudConfigService.html":{},"classes/CrudRoutesFactory.html":{},"classes/CustomQueryBuilder.html":{},"modules/DatabaseModule.html":{},"interfaces/IUser.html":{},"classes/R.html":{},"guards/RequestGuard.html":{},"guards/ResponseGuard.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"miscellaneous/variables.html":{}}}],["trx",{"_index":1214,"title":{},"body":{"injectables/TagsService.html":{}}}],["try",{"_index":447,"title":{},"body":{"classes/CreateUserDto.html":{},"interfaces/CrudOptions.html":{},"classes/CrudService.html":{},"interfaces/GetManyDefaultResponse.html":{},"interfaces/ICrudService.html":{},"interfaces/IUser.html":{},"interfaces/ParamOption.html":{},"interfaces/ParamsOptions.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{}}}],["ts",{"_index":727,"title":{},"body":{"classes/CrudConfigService.html":{},"classes/CrudRoutesFactory.html":{},"classes/QueryFailedFilter.html":{},"classes/R.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{},"classes/ValidationFailedFilter.html":{}}}],["twitter",{"_index":1497,"title":{},"body":{"index.html":{}}}],["type",{"_index":19,"title":{},"body":{"interfaces/APIResponse.html":{},"classes/ApiException.html":{},"interfaces/AppLaunchAction.html":{},"modules/AppModule.html":{},"classes/BaseModel.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"classes/CreateTagsDto.html":{},"classes/CreateUserDto.html":{},"injectables/CronService.html":{},"classes/CrudConfigService.html":{},"classes/CrudController.html":{},"interfaces/CrudOptions.html":{},"classes/CrudRoutesFactory.html":{},"classes/CrudService.html":{},"classes/CustomQueryBuilder.html":{},"injectables/ExcludeNullUndefinedInterceptor.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetManyDefaultResponse.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"controllers/HealthController.html":{},"interfaces/IBaseModel.html":{},"interfaces/ICrudService.html":{},"interfaces/IPagination.html":{},"interfaces/ITag.html":{},"interfaces/ITryRequest.html":{},"interfaces/IUser.html":{},"classes/PaginationParams.html":{},"interfaces/ParamOption.html":{},"interfaces/ParamsOptions.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"classes/QueryFailedFilter.html":{},"classes/R.html":{},"guards/RequestGuard.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/Response.html":{},"guards/ResponseGuard.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{},"classes/Tag.html":{},"controllers/TagsController.html":{},"injectables/TagsService.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateTagsDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"classes/ValidationFailedFilter.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealiases",{"_index":1511,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typeof",{"_index":910,"title":{},"body":{"classes/CustomQueryBuilder.html":{},"guards/RequestGuard.html":{},"miscellaneous/variables.html":{}}}],["typeorm",{"_index":1393,"title":{},"body":{"dependencies.html":{}}}],["types",{"_index":377,"title":{},"body":{"classes/CreateTagsDto.html":{},"classes/CreateUserDto.html":{},"interfaces/CrudOptions.html":{},"classes/CustomQueryBuilder.html":{},"interfaces/GetManyDefaultResponse.html":{},"interfaces/ITag.html":{},"interfaces/IUser.html":{},"interfaces/ParamOption.html":{},"interfaces/ParamsOptions.html":{},"classes/Tag.html":{},"classes/UpdateTagsDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"dependencies.html":{}}}],["types/dotenv",{"_index":1394,"title":{},"body":{"dependencies.html":{}}}],["typescript",{"_index":461,"title":{},"body":{"classes/CreateUserDto.html":{},"interfaces/CrudOptions.html":{},"classes/CustomQueryBuilder.html":{},"modules/DatabaseModule.html":{},"injectables/ExcludeNullUndefinedInterceptor.html":{},"interfaces/GetManyDefaultResponse.html":{},"controllers/HealthController.html":{},"interfaces/IUser.html":{},"interfaces/ParamOption.html":{},"interfaces/ParamsOptions.html":{},"classes/QueryFailedFilter.html":{},"guards/RequestGuard.html":{},"interfaces/Response.html":{},"guards/ResponseGuard.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"classes/ValidationFailedFilter.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["ui",{"_index":1427,"title":{},"body":{"dependencies.html":{}}}],["unauthorized",{"_index":187,"title":{},"body":{"classes/ApiException.html":{}}}],["undefined",{"_index":559,"title":{},"body":{"classes/CrudConfigService.html":{},"classes/CrudController.html":{},"interfaces/CrudOptions.html":{},"classes/CrudRoutesFactory.html":{},"injectables/ExcludeNullUndefinedInterceptor.html":{},"classes/R.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["uniqueviolationerror",{"_index":1066,"title":{},"body":{"classes/QueryFailedFilter.html":{}}}],["unit",{"_index":1471,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":147,"title":{},"body":{"classes/ApiException.html":{},"classes/CrudService.html":{},"interfaces/ICrudService.html":{}}}],["unsafe",{"_index":806,"title":{},"body":{"interfaces/CrudOptions.html":{},"classes/CustomQueryBuilder.html":{},"injectables/ExcludeNullUndefinedInterceptor.html":{},"interfaces/GetManyDefaultResponse.html":{},"controllers/HealthController.html":{},"interfaces/ParamOption.html":{},"interfaces/ParamsOptions.html":{},"classes/QueryFailedFilter.html":{},"guards/RequestGuard.html":{},"interfaces/Response.html":{},"guards/ResponseGuard.html":{},"injectables/TransformInterceptor.html":{},"classes/ValidationFailedFilter.html":{}}}],["until",{"_index":299,"title":{},"body":{"modules/AppModule.html":{}}}],["up",{"_index":1346,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["up(knex",{"_index":1447,"title":{},"body":{"miscellaneous/functions.html":{}}}],["update",{"_index":795,"title":{},"body":{"interfaces/CrudOptions.html":{},"classes/CrudService.html":{},"interfaces/GetManyDefaultResponse.html":{},"interfaces/ICrudService.html":{},"interfaces/ParamOption.html":{},"interfaces/ParamsOptions.html":{},"controllers/TagsController.html":{},"injectables/TagsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["update(id",{"_index":1177,"title":{},"body":{"controllers/TagsController.html":{},"injectables/TagsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["updated_at",{"_index":316,"title":{},"body":{"classes/BaseModel.html":{},"interfaces/IBaseModel.html":{},"classes/Tag.html":{},"classes/User.html":{}}}],["updatedtag",{"_index":1178,"title":{},"body":{"controllers/TagsController.html":{}}}],["updateduser",{"_index":1258,"title":{},"body":{"controllers/UsersController.html":{}}}],["updateonebase",{"_index":780,"title":{},"body":{"interfaces/CrudOptions.html":{},"interfaces/GetManyDefaultResponse.html":{},"interfaces/ParamOption.html":{},"interfaces/ParamsOptions.html":{},"miscellaneous/typealiases.html":{}}}],["updatetagsdto",{"_index":405,"title":{"classes/UpdateTagsDto.html":{}},"body":{"classes/CreateTagsDto.html":{},"interfaces/ITag.html":{},"classes/Tag.html":{},"controllers/TagsController.html":{},"classes/UpdateTagsDto.html":{},"coverage.html":{}}}],["updateuserdto",{"_index":474,"title":{"classes/UpdateUserDto.html":{}},"body":{"classes/CreateUserDto.html":{},"interfaces/IUser.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["use",{"_index":199,"title":{},"body":{"controllers/AppController.html":{},"controllers/HealthController.html":{},"controllers/TagsController.html":{},"controllers/UsersController.html":{}}}],["used",{"_index":393,"title":{},"body":{"classes/CreateTagsDto.html":{},"classes/CreateUserDto.html":{},"interfaces/ITag.html":{},"interfaces/IUser.html":{},"classes/Tag.html":{},"classes/UpdateTagsDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{}}}],["usefactory",{"_index":948,"title":{},"body":{"modules/DatabaseModule.html":{},"miscellaneous/variables.html":{}}}],["usenullasdefault",{"_index":951,"title":{},"body":{"modules/DatabaseModule.html":{},"miscellaneous/variables.html":{}}}],["user",{"_index":52,"title":{"classes/User.html":{}},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"classes/CreateUserDto.html":{},"modules/DatabaseModule.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/IUser.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["user.model",{"_index":1262,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["user.ts",{"_index":1353,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["useraddress",{"_index":69,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{}}}],["usercontacts",{"_index":70,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{}}}],["useremail",{"_index":71,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{}}}],["userid",{"_index":128,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{}}}],["username",{"_index":72,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"classes/CreateUserDto.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/IUser.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{}}}],["userpost",{"_index":84,"title":{"interfaces/UserPost.html":{}},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{},"coverage.html":{}}}],["userposts",{"_index":98,"title":{"interfaces/UserPosts.html":{}},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{},"coverage.html":{}}}],["users",{"_index":427,"title":{},"body":{"classes/CreateUserDto.html":{},"interfaces/IUser.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"miscellaneous/variables.html":{}}}],["users.controller",{"_index":1276,"title":{},"body":{"modules/UsersModule.html":{}}}],["users.service",{"_index":1264,"title":{},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{}}}],["users/user.model",{"_index":941,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["users/users.module",{"_index":250,"title":{},"body":{"modules/AppModule.html":{}}}],["userscontroller",{"_index":1248,"title":{"controllers/UsersController.html":{}},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{},"coverage.html":{}}}],["usersmodule",{"_index":222,"title":{"modules/UsersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["usersservice",{"_index":1263,"title":{"injectables/UsersService.html":{}},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"overview.html":{}}}],["usesid",{"_index":53,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{}}}],["usevalue",{"_index":945,"title":{},"body":{"modules/DatabaseModule.html":{},"miscellaneous/variables.html":{}}}],["using",{"_index":445,"title":{},"body":{"classes/CreateUserDto.html":{},"interfaces/IUser.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{}}}],["utils",{"_index":548,"title":{},"body":{"classes/CrudConfigService.html":{},"classes/CrudRoutesFactory.html":{},"classes/R.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{}}}],["uuid",{"_index":785,"title":{},"body":{"interfaces/CrudOptions.html":{},"interfaces/GetManyDefaultResponse.html":{},"interfaces/ParamOption.html":{},"interfaces/ParamsOptions.html":{}}}],["val",{"_index":1527,"title":{},"body":{"miscellaneous/variables.html":{}}}],["val.length",{"_index":1530,"title":{},"body":{"miscellaneous/variables.html":{}}}],["valid('development",{"_index":265,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["validation",{"_index":394,"title":{},"body":{"classes/CreateTagsDto.html":{},"classes/CreateUserDto.html":{},"interfaces/CrudOptions.html":{},"interfaces/GetManyDefaultResponse.html":{},"interfaces/ITag.html":{},"interfaces/IUser.html":{},"interfaces/ParamOption.html":{},"interfaces/ParamsOptions.html":{},"classes/Tag.html":{},"classes/UpdateTagsDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{}}}],["validationerror",{"_index":1295,"title":{},"body":{"classes/ValidationFailedFilter.html":{}}}],["validationerrorcode",{"_index":1298,"title":{},"body":{"classes/ValidationFailedFilter.html":{}}}],["validationerrortype",{"_index":1300,"title":{},"body":{"classes/ValidationFailedFilter.html":{}}}],["validationfailedfilter",{"_index":1293,"title":{"classes/ValidationFailedFilter.html":{}},"body":{"classes/ValidationFailedFilter.html":{},"coverage.html":{}}}],["validationoptions",{"_index":255,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["validationpipeoptions",{"_index":773,"title":{},"body":{"interfaces/CrudOptions.html":{},"interfaces/GetManyDefaultResponse.html":{},"interfaces/ParamOption.html":{},"interfaces/ParamsOptions.html":{}}}],["validationschema",{"_index":258,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["validator",{"_index":382,"title":{},"body":{"classes/CreateTagsDto.html":{},"classes/CreateUserDto.html":{},"interfaces/IPagination.html":{},"interfaces/ITag.html":{},"interfaces/IUser.html":{},"classes/PaginationParams.html":{},"classes/Tag.html":{},"classes/UpdateTagsDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"dependencies.html":{}}}],["value",{"_index":322,"title":{},"body":{"classes/BaseModel.html":{},"injectables/CronService.html":{},"classes/CrudConfigService.html":{},"classes/CrudRoutesFactory.html":{},"classes/CustomQueryBuilder.html":{},"injectables/ExcludeNullUndefinedInterceptor.html":{},"classes/PaginationParams.html":{},"classes/R.html":{},"guards/RequestGuard.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{},"classes/Tag.html":{},"injectables/TimeoutInterceptor.html":{},"classes/User.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["value.length",{"_index":914,"title":{},"body":{"classes/CustomQueryBuilder.html":{}}}],["value.trim",{"_index":1108,"title":{},"body":{"guards/RequestGuard.html":{}}}],["var",{"_index":800,"title":{},"body":{"interfaces/CrudOptions.html":{},"interfaces/GetManyDefaultResponse.html":{},"interfaces/ParamOption.html":{},"interfaces/ParamsOptions.html":{}}}],["variable",{"_index":1305,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":1518,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["various",{"_index":435,"title":{},"body":{"classes/CreateUserDto.html":{},"interfaces/IUser.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{}}}],["viewscont",{"_index":120,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{}}}],["visibility",{"_index":347,"title":{},"body":{"classes/BaseModel.html":{},"interfaces/IBaseModel.html":{},"dependencies.html":{}}}],["visibilityplugin",{"_index":346,"title":{},"body":{"classes/BaseModel.html":{},"interfaces/IBaseModel.html":{}}}],["void",{"_index":234,"title":{},"body":{"modules/AppModule.html":{},"injectables/CronService.html":{},"classes/CrudConfigService.html":{},"classes/CrudRoutesFactory.html":{},"controllers/HealthController.html":{},"classes/QueryFailedFilter.html":{},"classes/R.html":{},"classes/Swagger.html":{},"classes/ValidationFailedFilter.html":{}}}],["watch",{"_index":1467,"title":{},"body":{"index.html":{}}}],["website",{"_index":1495,"title":{},"body":{"index.html":{}}}],["went",{"_index":1127,"title":{},"body":{"guards/ResponseGuard.html":{}}}],["whenever",{"_index":395,"title":{},"body":{"classes/CreateTagsDto.html":{},"classes/CreateUserDto.html":{},"interfaces/ITag.html":{},"interfaces/IUser.html":{},"classes/Tag.html":{},"classes/UpdateTagsDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{}}}],["whitespace",{"_index":446,"title":{},"body":{"classes/CreateUserDto.html":{},"interfaces/IUser.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{}}}],["withmeta",{"_index":1138,"title":{},"body":{"guards/ResponseGuard.html":{}}}],["withmeta(data",{"_index":1133,"title":{},"body":{"guards/ResponseGuard.html":{}}}],["withparams",{"_index":671,"title":{},"body":{"classes/CrudConfigService.html":{},"classes/CrudRoutesFactory.html":{},"classes/R.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{}}}],["world",{"_index":207,"title":{},"body":{"controllers/AppController.html":{}}}],["writable",{"_index":616,"title":{},"body":{"classes/CrudConfigService.html":{},"classes/CrudRoutesFactory.html":{},"classes/R.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{}}}],["wrong",{"_index":1128,"title":{},"body":{"guards/ResponseGuard.html":{}}}],["x",{"_index":1150,"title":{},"body":{"classes/Swagger.html":{}}}],["yes",{"_index":233,"title":{},"body":{"modules/AppModule.html":{},"controllers/HealthController.html":{},"interfaces/ICrudService.html":{},"miscellaneous/functions.html":{}}}],["you'd",{"_index":1485,"title":{},"body":{"index.html":{}}}],["zoom",{"_index":223,"title":{},"body":{"modules/AppModule.html":{},"modules/CronModule.html":{},"modules/TagsModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"interfaces/APIResponse.html":{"url":"interfaces/APIResponse.html","title":"interface - APIResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  APIResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/domain.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        count\n                                \n                                \n                                        data\n                                \n                                \n                                        error\n                                \n                                \n                                        message\n                                \n                                \n                                            Optional\n                                        page\n                                \n                                \n                                            Optional\n                                        pageCount\n                                \n                                \n                                        statusCode\n                                \n                                \n                                            Optional\n                                        total\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        count\n                                    \n                                \n                                \n                                    \n                                        count:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                    \n                                \n                                \n                                    \n                                        data:     T\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     T\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        error\n                                    \n                                \n                                \n                                    \n                                        error:         APIError\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         APIError\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        message\n                                    \n                                \n                                \n                                    \n                                        message:     string | string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        page\n                                    \n                                \n                                \n                                    \n                                        page:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pageCount\n                                    \n                                \n                                \n                                    \n                                        pageCount:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        statusCode\n                                    \n                                \n                                \n                                    \n                                        statusCode:     HttpStatus\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     HttpStatus\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        total\n                                    \n                                \n                                \n                                    \n                                        total:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { HttpStatus } from '@nestjs/common'\n\nexport type Result =\n    | GetAppLaunchData\n    | GetUserProfile\n    | GetUserPosts\n    | GetComments\n    | GetRescueList\n    | GetFollowers\n    | GetFollowing\n\nexport type APIError = Error | string | null\n\nexport interface APIResponse {\n    data: T\n    error: APIError\n    message: string | string[]\n    statusCode: HttpStatus\n\n    count?: number\n    page?: number\n    pageCount?: number\n    total?: number\n}\n\nexport interface GetAppLaunchData {\n    link: 'api:/'\n    response: APIResponse\n}\n\nexport interface GetUserProfile {\n    link: 'api:v1/user/getUserProfile?userId=25'\n    response: APIResponse\n}\n\nexport interface GetUserPosts {\n    link: 'api:v1/user/getUserPosts?pageNo=0&pageSize=25'\n    response: APIResponse\n}\n\nexport interface GetRescueList {\n    link: 'api:v1/rescue/getRescueList?pageNo=0&pageSize=10&status=pending|inProgress|completed|nearest'\n    response: APIResponse\n}\n\nexport interface GetComments {\n    link: 'api:v1/rescue/getComments?pageNo=0&pageSize=10&postId=1230'\n    response: APIResponse\n}\n\nexport interface GetFollowers {\n    link: 'api:v1/rescue/getUserFollowers?userId=1230'\n    response: APIResponse\n}\n\nexport interface GetFollowing {\n    link: 'api:v1/rescue/getUserFollowing?userId=1230'\n    response: APIResponse\n}\n\nexport interface AppLaunchAction {\n    actionId: number\n    action: string\n    isActive: boolean\n    subject?: string\n}\n\nexport interface User {\n    usesId: number\n\n    coverImage: string\n    following: boolean\n    gender: string\n    isOwnProfile: number\n    isRescuer: boolean\n    latitude: number\n    longitude: number\n    numberOfFollowers: number\n    numberOfFollowing: number\n    numberOfPosts: number\n    numberOfRescuesCompleted: number\n    numberOfRescuesCreated: number\n    numberOfRescuesInProgress: number\n    profileImage: string\n    rescuer: boolean\n    userAddress: string\n    userContacts: string\n    userEmail: string\n    userName: string\n    badge: {\n        badgeId: number\n        badgeName: string\n        badgeDescription: string\n        recuesCompletionNeeded: number\n    }\n    setting: {\n        showMyContacts: boolean\n        getNotifications: boolean\n    }\n}\n\nexport interface PostType {\n    postTypeId: number\n    postType: string\n}\n\nexport interface PostedByUser {\n    usesId: number\n    badgeName: string\n    following: boolean\n    profileImage: string\n    rescuer: boolean\n    userName: string\n}\n\nexport interface UserPost {\n    postId: number\n    commentsCount: number\n    isUserReactedToPost: boolean\n    ownPage: boolean\n    postBy: PostedByUser\n    postImage: string\n    postTime: string\n    postType: PostType\n    postVideo: string\n    reactionsCount: number\n    timeAgo: string\n\n    adCorporateLogoUrl: string | null\n    corporateDescription: string | null\n    corporateName: string | null\n}\n\nexport interface UserPosts {\n    isRecent: boolean\n    feed: UserPost[]\n}\n\nexport interface Rescues {\n    rescueId: number\n    animalImageUrl: string\n    distance: number\n    distanceAway: string\n    emergencyType: string\n    postedBy: string\n    postedMinAgo: string\n    rescueDate: Date\n    rescuedPetName: string\n    rescueLocality: string\n    rescuers: {\n        contact: number\n        name: string\n        profileId: number\n        profileImageUrl: string\n        rescues: boolean\n        showMyNumber: boolean\n    }\n    rescueStatus: string\n    viewsCont: number\n}\n\nexport interface RescueLists {\n    rescues: Rescues[]\n}\n\nexport interface Comment {\n    commentId: number\n    comment: string\n    commentedUseName: string\n    commentedUserId: number\n    timeAgo: string\n}\n\nexport interface Comments {\n    comments: Comment[]\n}\n\nexport interface Follower {\n    userId: number\n    userName: string\n    profileImage: string\n    areYouFollowing: boolean\n    showRemoveOption: boolean\n}\n\nexport interface Following extends Follower {}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ApiException.html":{"url":"classes/ApiException.html","title":"class - ApiException","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ApiException\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/base/swagger-gen/api-errors.decorator.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                error\n                            \n                            \n                                    Optional\n                                errors\n                            \n                            \n                                    Optional\n                                message\n                            \n                            \n                                    Optional\n                                path\n                            \n                            \n                                    Optional\n                                stack\n                            \n                            \n                                    Optional\n                                status\n                            \n                            \n                                    Optional\n                                statusCode\n                            \n                            \n                                    Optional\n                                timestamp\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(message: string, error: string, stack: string, errors: unknown, path: string, statusCode: number)\n                    \n                \n                        \n                            \n                                Defined in src/base/swagger-gen/api-errors.decorator.ts:26\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        message\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        error\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        stack\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        errors\n                                                  \n                                                        \n                                                                    unknown\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        path\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        statusCode\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            error\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiPropertyOptional()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/base/swagger-gen/api-errors.decorator.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            errors\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     unknown\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiPropertyOptional()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/base/swagger-gen/api-errors.decorator.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            message\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiPropertyOptional()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/base/swagger-gen/api-errors.decorator.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            path\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiPropertyOptional()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/base/swagger-gen/api-errors.decorator.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            stack\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiPropertyOptional()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/base/swagger-gen/api-errors.decorator.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            status\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiPropertyOptional()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/base/swagger-gen/api-errors.decorator.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            statusCode\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiPropertyOptional()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/base/swagger-gen/api-errors.decorator.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            timestamp\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiPropertyOptional()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/base/swagger-gen/api-errors.decorator.ts:22\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { applyDecorators, HttpStatus } from '@nestjs/common'\nimport {\n    ApiBadRequestResponse,\n    ApiForbiddenResponse,\n    ApiInternalServerErrorResponse,\n    ApiNotFoundResponse,\n    ApiUnauthorizedResponse,\n    ApiPropertyOptional,\n} from '@nestjs/swagger'\n\nexport class ApiException {\n    @ApiPropertyOptional() statusCode?: number\n\n    @ApiPropertyOptional() message?: string\n\n    @ApiPropertyOptional() status?: string\n\n    @ApiPropertyOptional() error?: string\n\n    @ApiPropertyOptional() errors?: unknown\n\n    @ApiPropertyOptional() timestamp?: string\n\n    @ApiPropertyOptional() path?: string\n\n    @ApiPropertyOptional() stack?: string\n\n    constructor(\n        message: string,\n        error: string,\n        stack: string,\n        errors: unknown,\n        path: string,\n        statusCode: number,\n    ) {\n        this.message = message\n        this.error = error\n        this.stack = stack\n        this.errors = errors\n        this.path = path\n        this.timestamp = new Date().toISOString()\n        this.statusCode = statusCode\n        this.status = HttpStatus[statusCode]\n    }\n}\n\nexport function ApiErrors() {\n    return applyDecorators(\n        ApiNotFoundResponse({ type: ApiException, description: 'Not found' }),\n        ApiBadRequestResponse({ type: ApiException, description: 'Bad Request' }),\n        ApiInternalServerErrorResponse({\n            type: ApiException,\n            description: 'Internal Server Error',\n        }),\n        ApiUnauthorizedResponse({\n            type: ApiException,\n            description: 'Unauthorized',\n        }),\n        ApiForbiddenResponse({ type: ApiException, description: 'Forbidden' }),\n    )\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getHello\n                        \n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/app.controller.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        /* eslint-disable no-use-before-define */\nimport { Controller, Get } from '@nestjs/common'\nimport { ApiTags } from '@nestjs/swagger'\n\n@Controller(AppController.path)\n@ApiTags(AppController.name)\nexport class AppController {\n    static path = '/'\n\n    @Get() getHello() {\n        return 'Hello World!'\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AppLaunchAction.html":{"url":"interfaces/AppLaunchAction.html","title":"interface - AppLaunchAction","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  AppLaunchAction\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/domain.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        action\n                                \n                                \n                                        actionId\n                                \n                                \n                                        isActive\n                                \n                                \n                                            Optional\n                                        subject\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        action\n                                    \n                                \n                                \n                                    \n                                        action:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        actionId\n                                    \n                                \n                                \n                                    \n                                        actionId:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isActive\n                                    \n                                \n                                \n                                    \n                                        isActive:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        subject\n                                    \n                                \n                                \n                                    \n                                        subject:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { HttpStatus } from '@nestjs/common'\n\nexport type Result =\n    | GetAppLaunchData\n    | GetUserProfile\n    | GetUserPosts\n    | GetComments\n    | GetRescueList\n    | GetFollowers\n    | GetFollowing\n\nexport type APIError = Error | string | null\n\nexport interface APIResponse {\n    data: T\n    error: APIError\n    message: string | string[]\n    statusCode: HttpStatus\n\n    count?: number\n    page?: number\n    pageCount?: number\n    total?: number\n}\n\nexport interface GetAppLaunchData {\n    link: 'api:/'\n    response: APIResponse\n}\n\nexport interface GetUserProfile {\n    link: 'api:v1/user/getUserProfile?userId=25'\n    response: APIResponse\n}\n\nexport interface GetUserPosts {\n    link: 'api:v1/user/getUserPosts?pageNo=0&pageSize=25'\n    response: APIResponse\n}\n\nexport interface GetRescueList {\n    link: 'api:v1/rescue/getRescueList?pageNo=0&pageSize=10&status=pending|inProgress|completed|nearest'\n    response: APIResponse\n}\n\nexport interface GetComments {\n    link: 'api:v1/rescue/getComments?pageNo=0&pageSize=10&postId=1230'\n    response: APIResponse\n}\n\nexport interface GetFollowers {\n    link: 'api:v1/rescue/getUserFollowers?userId=1230'\n    response: APIResponse\n}\n\nexport interface GetFollowing {\n    link: 'api:v1/rescue/getUserFollowing?userId=1230'\n    response: APIResponse\n}\n\nexport interface AppLaunchAction {\n    actionId: number\n    action: string\n    isActive: boolean\n    subject?: string\n}\n\nexport interface User {\n    usesId: number\n\n    coverImage: string\n    following: boolean\n    gender: string\n    isOwnProfile: number\n    isRescuer: boolean\n    latitude: number\n    longitude: number\n    numberOfFollowers: number\n    numberOfFollowing: number\n    numberOfPosts: number\n    numberOfRescuesCompleted: number\n    numberOfRescuesCreated: number\n    numberOfRescuesInProgress: number\n    profileImage: string\n    rescuer: boolean\n    userAddress: string\n    userContacts: string\n    userEmail: string\n    userName: string\n    badge: {\n        badgeId: number\n        badgeName: string\n        badgeDescription: string\n        recuesCompletionNeeded: number\n    }\n    setting: {\n        showMyContacts: boolean\n        getNotifications: boolean\n    }\n}\n\nexport interface PostType {\n    postTypeId: number\n    postType: string\n}\n\nexport interface PostedByUser {\n    usesId: number\n    badgeName: string\n    following: boolean\n    profileImage: string\n    rescuer: boolean\n    userName: string\n}\n\nexport interface UserPost {\n    postId: number\n    commentsCount: number\n    isUserReactedToPost: boolean\n    ownPage: boolean\n    postBy: PostedByUser\n    postImage: string\n    postTime: string\n    postType: PostType\n    postVideo: string\n    reactionsCount: number\n    timeAgo: string\n\n    adCorporateLogoUrl: string | null\n    corporateDescription: string | null\n    corporateName: string | null\n}\n\nexport interface UserPosts {\n    isRecent: boolean\n    feed: UserPost[]\n}\n\nexport interface Rescues {\n    rescueId: number\n    animalImageUrl: string\n    distance: number\n    distanceAway: string\n    emergencyType: string\n    postedBy: string\n    postedMinAgo: string\n    rescueDate: Date\n    rescuedPetName: string\n    rescueLocality: string\n    rescuers: {\n        contact: number\n        name: string\n        profileId: number\n        profileImageUrl: string\n        rescues: boolean\n        showMyNumber: boolean\n    }\n    rescueStatus: string\n    viewsCont: number\n}\n\nexport interface RescueLists {\n    rescues: Rescues[]\n}\n\nexport interface Comment {\n    commentId: number\n    comment: string\n    commentedUseName: string\n    commentedUserId: number\n    timeAgo: string\n}\n\nexport interface Comments {\n    comments: Comment[]\n}\n\nexport interface Follower {\n    userId: number\n    userName: string\n    profileImage: string\n    areYouFollowing: boolean\n    showRemoveOption: boolean\n}\n\nexport interface Following extends Follower {}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\n\nCronModule\n\nCronModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nCronModule->AppModule\n\n\n\n\n\nDatabaseModule\n\nDatabaseModule\n\nAppModule -->\n\nDatabaseModule->AppModule\n\n\n\n\n\nTagsModule\n\nTagsModule\n\nAppModule -->\n\nTagsModule->AppModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                        \n                            HealthController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            CronModule\n                        \n                        \n                            DatabaseModule\n                        \n                        \n                            TagsModule\n                        \n                        \n                            UsersModule\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onApplicationShutdown\n                        \n                        \n                    \n                \n            \n            \n                \nonApplicationShutdown(signal?: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app.module.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    signal\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onModuleInit\n                        \n                        \n                    \n                \n            \n            \n                \nonModuleInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app.module.ts:59\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        import { Module, OnApplicationShutdown, OnModuleInit } from '@nestjs/common'\nimport { ConfigModule } from '@nestjs/config'\nimport { ScheduleModule } from '@nestjs/schedule'\nimport { TerminusModule } from '@nestjs/terminus'\n\nimport * as Joi from '@hapi/joi'\n\nimport { AppController } from './app.controller'\nimport { CronModule } from './cron/cron.module'\nimport { DatabaseModule } from './database/database.module'\nimport { HealthController } from './health/health.controller'\nimport { TagsModule } from './tags/tags.module'\nimport { UsersModule } from './users/users.module'\n\nconst ConfigModuleOptions = {\n    isGlobal: true,\n    validationOptions: {\n        allowUnknown: true,\n        abortEarly: true,\n    },\n    /* eslint-disable */\n    validationSchema: Joi.object({\n        PORT: Joi.number().default(3000),\n        NODE_ENV: Joi.string()\n            .required()\n            .valid('development', 'production', 'test', 'provision')\n            .default('development'),\n\n        database: Joi.string().required(),\n        type: Joi.string().required(),\n        logging: Joi.string().required(),\n        synchronize: Joi.string().required(),\n    }),\n    /* eslint-enable */\n}\n\n@Module({\n    controllers: [AppController, HealthController],\n    imports: [\n        ConfigModule.forRoot(ConfigModuleOptions),\n        DatabaseModule,\n        ScheduleModule.forRoot(), // CronModules deps\n        CronModule,\n        TerminusModule, // Health module\n        TagsModule,\n        UsersModule,\n    ],\n    providers: [],\n})\nexport class AppModule implements OnModuleInit, OnApplicationShutdown {\n    /*\n     * When the application receives a termination signal it will call any registered\n     * onModuleDestroy(), beforeApplicationShutdown(), then onApplicationShutdown() methods\n     * (in the sequence described above) with the corresponding signal as the first parameter.\n     * If a registered function awaits an asynchronous call (returns a promise), Nest will not\n     * continue in the sequence until the promise is resolved or rejected.\n     */\n\n    onModuleInit(): void {\n        console.info(`ModuleInit - AppModule has been initialized.`)\n    }\n\n    onApplicationShutdown(signal?: string): void {\n        console.error(\n            `ApplicationShutdown - AppModule has been shutdown with ${signal} signal`,\n        )\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BaseModel.html":{"url":"classes/BaseModel.html","title":"class - BaseModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BaseModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/database/models/base.model.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            IBaseModel\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                created_at\n                            \n                            \n                                    Optional\n                                deleted_at\n                            \n                            \n                                    Static\n                                hidden\n                            \n                            \n                                id\n                            \n                            \n                                    Static\n                                QueryBuilder\n                            \n                            \n                                QueryBuilderType\n                            \n                            \n                                updated_at\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                fetchRelation\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            created_at\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/database/models/base.model.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            deleted_at\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     any | null\n\n                        \n                    \n                        \n                            \n                                    Defined in src/database/models/base.model.ts:38\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            hidden\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : ['salt', 'password', 'created_at', 'updated_at', 'deleted_at']\n                        \n                    \n                        \n                            \n                                    Defined in src/database/models/base.model.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/database/models/base.model.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            QueryBuilder\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : CustomQueryBuilder\n                        \n                    \n                        \n                            \n                                    Defined in src/database/models/base.model.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            QueryBuilderType\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         CustomQueryBuilder<>\n\n                        \n                    \n                        \n                            \n                                    Defined in src/database/models/base.model.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updated_at\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/database/models/base.model.ts:36\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            fetchRelation\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    fetchRelation(expression: RelationExpression, options: object)\n                \n            \n\n\n            \n                \n                    Defined in src/database/models/base.model.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    expression\n                                    \n                                                RelationExpression\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    options\n                                    \n                                                object\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, ApiPropertyOptional } from '@nestjs/swagger'\n\nimport {\n    fn,\n    mixin,\n    Model,\n    ModelOptions,\n    QueryContext,\n    RelationExpression,\n} from 'objection'\nimport { DBErrors } from 'objection-db-errors'\nimport visibilityPlugin from 'objection-visibility'\n\nimport { CustomQueryBuilder } from './helpers'\n\nexport interface IBaseModel {\n    id: number\n    created_at: any\n    updated_at: any\n    deleted_at?: any\n}\n\nexport class BaseModel\n    extends mixin(Model, [visibilityPlugin, DBErrors])\n    implements IBaseModel {\n    static hidden = ['salt', 'password', 'created_at', 'updated_at', 'deleted_at'] // hidden fields to filter from query result\n\n    QueryBuilderType!: CustomQueryBuilder // custom query builder for pagination\n\n    static QueryBuilder = CustomQueryBuilder\n\n    @ApiProperty() id: number\n\n    created_at: any\n\n    updated_at: any\n\n    deleted_at?: any | null\n\n    // fetch data with relation mapping\n    async fetchRelation(expression: RelationExpression, options = {}) {\n        if (this[expression.toString()]) return this\n\n        await this.$fetchGraph(expression, options)\n        return this\n    }\n\n    /*\n    async $beforeUpdate(opt: ModelOptions, queryContext: QueryContext) {\n        await super.$beforeUpdate(opt, queryContext)\n\n        this.updated_at = new Date().toISOString() // fn.now()\n    }\n\n    async $beforeInsert(queryContext: QueryContext) {\n        await super.$beforeInsert(queryContext)\n\n        const date = fn.now() // new Date().toISOString()\n\n        this.created_at = date\n        this.updated_at = date\n    }\n    */\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Comment.html":{"url":"interfaces/Comment.html","title":"interface - Comment","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Comment\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/domain.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        comment\n                                \n                                \n                                        commentedUseName\n                                \n                                \n                                        commentedUserId\n                                \n                                \n                                        commentId\n                                \n                                \n                                        timeAgo\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        comment\n                                    \n                                \n                                \n                                    \n                                        comment:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        commentedUseName\n                                    \n                                \n                                \n                                    \n                                        commentedUseName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        commentedUserId\n                                    \n                                \n                                \n                                    \n                                        commentedUserId:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        commentId\n                                    \n                                \n                                \n                                    \n                                        commentId:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        timeAgo\n                                    \n                                \n                                \n                                    \n                                        timeAgo:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { HttpStatus } from '@nestjs/common'\n\nexport type Result =\n    | GetAppLaunchData\n    | GetUserProfile\n    | GetUserPosts\n    | GetComments\n    | GetRescueList\n    | GetFollowers\n    | GetFollowing\n\nexport type APIError = Error | string | null\n\nexport interface APIResponse {\n    data: T\n    error: APIError\n    message: string | string[]\n    statusCode: HttpStatus\n\n    count?: number\n    page?: number\n    pageCount?: number\n    total?: number\n}\n\nexport interface GetAppLaunchData {\n    link: 'api:/'\n    response: APIResponse\n}\n\nexport interface GetUserProfile {\n    link: 'api:v1/user/getUserProfile?userId=25'\n    response: APIResponse\n}\n\nexport interface GetUserPosts {\n    link: 'api:v1/user/getUserPosts?pageNo=0&pageSize=25'\n    response: APIResponse\n}\n\nexport interface GetRescueList {\n    link: 'api:v1/rescue/getRescueList?pageNo=0&pageSize=10&status=pending|inProgress|completed|nearest'\n    response: APIResponse\n}\n\nexport interface GetComments {\n    link: 'api:v1/rescue/getComments?pageNo=0&pageSize=10&postId=1230'\n    response: APIResponse\n}\n\nexport interface GetFollowers {\n    link: 'api:v1/rescue/getUserFollowers?userId=1230'\n    response: APIResponse\n}\n\nexport interface GetFollowing {\n    link: 'api:v1/rescue/getUserFollowing?userId=1230'\n    response: APIResponse\n}\n\nexport interface AppLaunchAction {\n    actionId: number\n    action: string\n    isActive: boolean\n    subject?: string\n}\n\nexport interface User {\n    usesId: number\n\n    coverImage: string\n    following: boolean\n    gender: string\n    isOwnProfile: number\n    isRescuer: boolean\n    latitude: number\n    longitude: number\n    numberOfFollowers: number\n    numberOfFollowing: number\n    numberOfPosts: number\n    numberOfRescuesCompleted: number\n    numberOfRescuesCreated: number\n    numberOfRescuesInProgress: number\n    profileImage: string\n    rescuer: boolean\n    userAddress: string\n    userContacts: string\n    userEmail: string\n    userName: string\n    badge: {\n        badgeId: number\n        badgeName: string\n        badgeDescription: string\n        recuesCompletionNeeded: number\n    }\n    setting: {\n        showMyContacts: boolean\n        getNotifications: boolean\n    }\n}\n\nexport interface PostType {\n    postTypeId: number\n    postType: string\n}\n\nexport interface PostedByUser {\n    usesId: number\n    badgeName: string\n    following: boolean\n    profileImage: string\n    rescuer: boolean\n    userName: string\n}\n\nexport interface UserPost {\n    postId: number\n    commentsCount: number\n    isUserReactedToPost: boolean\n    ownPage: boolean\n    postBy: PostedByUser\n    postImage: string\n    postTime: string\n    postType: PostType\n    postVideo: string\n    reactionsCount: number\n    timeAgo: string\n\n    adCorporateLogoUrl: string | null\n    corporateDescription: string | null\n    corporateName: string | null\n}\n\nexport interface UserPosts {\n    isRecent: boolean\n    feed: UserPost[]\n}\n\nexport interface Rescues {\n    rescueId: number\n    animalImageUrl: string\n    distance: number\n    distanceAway: string\n    emergencyType: string\n    postedBy: string\n    postedMinAgo: string\n    rescueDate: Date\n    rescuedPetName: string\n    rescueLocality: string\n    rescuers: {\n        contact: number\n        name: string\n        profileId: number\n        profileImageUrl: string\n        rescues: boolean\n        showMyNumber: boolean\n    }\n    rescueStatus: string\n    viewsCont: number\n}\n\nexport interface RescueLists {\n    rescues: Rescues[]\n}\n\nexport interface Comment {\n    commentId: number\n    comment: string\n    commentedUseName: string\n    commentedUserId: number\n    timeAgo: string\n}\n\nexport interface Comments {\n    comments: Comment[]\n}\n\nexport interface Follower {\n    userId: number\n    userName: string\n    profileImage: string\n    areYouFollowing: boolean\n    showRemoveOption: boolean\n}\n\nexport interface Following extends Follower {}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Comments.html":{"url":"interfaces/Comments.html","title":"interface - Comments","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Comments\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/domain.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        comments\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        comments\n                                    \n                                \n                                \n                                    \n                                        comments:         Comment[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Comment[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { HttpStatus } from '@nestjs/common'\n\nexport type Result =\n    | GetAppLaunchData\n    | GetUserProfile\n    | GetUserPosts\n    | GetComments\n    | GetRescueList\n    | GetFollowers\n    | GetFollowing\n\nexport type APIError = Error | string | null\n\nexport interface APIResponse {\n    data: T\n    error: APIError\n    message: string | string[]\n    statusCode: HttpStatus\n\n    count?: number\n    page?: number\n    pageCount?: number\n    total?: number\n}\n\nexport interface GetAppLaunchData {\n    link: 'api:/'\n    response: APIResponse\n}\n\nexport interface GetUserProfile {\n    link: 'api:v1/user/getUserProfile?userId=25'\n    response: APIResponse\n}\n\nexport interface GetUserPosts {\n    link: 'api:v1/user/getUserPosts?pageNo=0&pageSize=25'\n    response: APIResponse\n}\n\nexport interface GetRescueList {\n    link: 'api:v1/rescue/getRescueList?pageNo=0&pageSize=10&status=pending|inProgress|completed|nearest'\n    response: APIResponse\n}\n\nexport interface GetComments {\n    link: 'api:v1/rescue/getComments?pageNo=0&pageSize=10&postId=1230'\n    response: APIResponse\n}\n\nexport interface GetFollowers {\n    link: 'api:v1/rescue/getUserFollowers?userId=1230'\n    response: APIResponse\n}\n\nexport interface GetFollowing {\n    link: 'api:v1/rescue/getUserFollowing?userId=1230'\n    response: APIResponse\n}\n\nexport interface AppLaunchAction {\n    actionId: number\n    action: string\n    isActive: boolean\n    subject?: string\n}\n\nexport interface User {\n    usesId: number\n\n    coverImage: string\n    following: boolean\n    gender: string\n    isOwnProfile: number\n    isRescuer: boolean\n    latitude: number\n    longitude: number\n    numberOfFollowers: number\n    numberOfFollowing: number\n    numberOfPosts: number\n    numberOfRescuesCompleted: number\n    numberOfRescuesCreated: number\n    numberOfRescuesInProgress: number\n    profileImage: string\n    rescuer: boolean\n    userAddress: string\n    userContacts: string\n    userEmail: string\n    userName: string\n    badge: {\n        badgeId: number\n        badgeName: string\n        badgeDescription: string\n        recuesCompletionNeeded: number\n    }\n    setting: {\n        showMyContacts: boolean\n        getNotifications: boolean\n    }\n}\n\nexport interface PostType {\n    postTypeId: number\n    postType: string\n}\n\nexport interface PostedByUser {\n    usesId: number\n    badgeName: string\n    following: boolean\n    profileImage: string\n    rescuer: boolean\n    userName: string\n}\n\nexport interface UserPost {\n    postId: number\n    commentsCount: number\n    isUserReactedToPost: boolean\n    ownPage: boolean\n    postBy: PostedByUser\n    postImage: string\n    postTime: string\n    postType: PostType\n    postVideo: string\n    reactionsCount: number\n    timeAgo: string\n\n    adCorporateLogoUrl: string | null\n    corporateDescription: string | null\n    corporateName: string | null\n}\n\nexport interface UserPosts {\n    isRecent: boolean\n    feed: UserPost[]\n}\n\nexport interface Rescues {\n    rescueId: number\n    animalImageUrl: string\n    distance: number\n    distanceAway: string\n    emergencyType: string\n    postedBy: string\n    postedMinAgo: string\n    rescueDate: Date\n    rescuedPetName: string\n    rescueLocality: string\n    rescuers: {\n        contact: number\n        name: string\n        profileId: number\n        profileImageUrl: string\n        rescues: boolean\n        showMyNumber: boolean\n    }\n    rescueStatus: string\n    viewsCont: number\n}\n\nexport interface RescueLists {\n    rescues: Rescues[]\n}\n\nexport interface Comment {\n    commentId: number\n    comment: string\n    commentedUseName: string\n    commentedUserId: number\n    timeAgo: string\n}\n\nexport interface Comments {\n    comments: Comment[]\n}\n\nexport interface Follower {\n    userId: number\n    userName: string\n    profileImage: string\n    areYouFollowing: boolean\n    showRemoveOption: boolean\n}\n\nexport interface Following extends Follower {}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateTagsDto.html":{"url":"classes/CreateTagsDto.html","title":"class - CreateTagsDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateTagsDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/tags/tag.model.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            ITag\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()@IsString()@IsNotEmpty()@MinLength(2)@MaxLength(36)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/tags/tag.model.ts:36\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType as MappedPartialType } from '@nestjs/mapped-types'\nimport { ApiProperty, PartialType } from '@nestjs/swagger'\n\nimport { IsNotEmpty, IsString, MaxLength, MinLength } from 'class-validator'\nimport type { JSONSchema } from 'objection'\n\nimport { BaseModel } from '../database/models/base.model'\n\ninterface ITag {\n    name: string\n}\n\nexport class Tag extends BaseModel implements ITag {\n    static tableName = 'tags'\n\n    @ApiProperty() name: string\n\n    // JSON schema is not the database schema! Nothing is generated based on this.\n    // This is only used for validation. Whenever a model instance is created it is checked against this schema.\n    static jsonSchema: JSONSchema = {\n        type: 'object',\n        required: ['name'],\n        properties: {\n            id: { type: 'integer' },\n            name: { type: 'string', minLength: 2, maxLength: 255 },\n        },\n    }\n}\n\nexport class CreateTagsDto implements ITag {\n    @ApiProperty()\n    @IsString()\n    @IsNotEmpty()\n    @MinLength(2)\n    @MaxLength(36)\n    name: string\n}\n\nexport class UpdateTagsDto extends PartialType(CreateTagsDto) {}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUserDto.html":{"url":"classes/CreateUserDto.html","title":"class - CreateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/user.model.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            IUser\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                email\n                            \n                            \n                                firstName\n                            \n                            \n                                isActive\n                            \n                            \n                                lastName\n                            \n                            \n                                password\n                            \n                            \n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            email\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()@IsEmail()@IsNotEmpty()@MinLength(2)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/user.model.ts:100\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            firstName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()@IsString()@IsNotEmpty()@MinLength(2)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/user.model.ts:112\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isActive\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()@IsBoolean()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/user.model.ts:122\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            lastName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()@IsString()@IsNotEmpty()@MinLength(2)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/user.model.ts:118\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            password\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()@IsString()@IsNotEmpty()@MinLength(8)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/user.model.ts:106\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            username\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()@IsString()@IsNotEmpty()@MinLength(2)@MaxLength(36)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/user.model.ts:94\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType as MappedPartialType } from '@nestjs/mapped-types'\nimport { ApiProperty, PartialType } from '@nestjs/swagger'\n\nimport {\n    IsString,\n    MinLength,\n    IsNotEmpty,\n    IsOptional,\n    MaxLength,\n    IsEmail,\n    IsBoolean,\n} from 'class-validator'\nimport type { JSONSchema, Modifiers } from 'objection'\n\nimport { BaseModel } from '../database/models/base.model'\n\ninterface IUser {\n    username: string\n    email: string\n    firstName: string\n    lastName: string\n    isActive: boolean\n    password: string\n}\n\nexport class User extends BaseModel implements IUser {\n    static tableName = 'users'\n\n    username: string\n\n    email: string\n\n    firstName: string\n\n    lastName: string\n\n    isActive: boolean\n\n    password: string\n\n    // JSON schema is not the database schema! Nothing is generated based on this.\n    // This is only used for validation. Whenever a model instance is created it is checked against this schema.\n    static jsonSchema: JSONSchema = {\n        type: 'object',\n        required: ['username', 'email', 'password'],\n        properties: {\n            id: { type: 'integer', readOnly: true },\n            username: { type: 'string', minLength: 3, maxLength: 255 },\n            email: {\n                type: 'string',\n                minLength: 3,\n                maxLength: 255,\n                format: 'email',\n            },\n            password: { type: 'string', minLength: 8, maxLength: 255 },\n            firstName: { type: 'string', minLength: 1, maxLength: 255 },\n            lastName: { type: 'string', minLength: 1, maxLength: 255 },\n            isActive: { type: 'boolean' },\n        },\n    }\n\n    // Modifiers are reusable query snippets that can be used in various places.\n    static modifiers: Modifiers = {\n        // Our example modifier is a a semi-dumb fuzzy name match. We split the name into pieces using whitespace\n        // and then try to partially match each of those pieces to both the `firstName` and the `lastName` fields.\n\n        searchByName(query, name: string) {\n            // This `where` simply creates parentheses so that other `where` statements don't get mixed with the these.\n\n            // eslint-disable-next-line @typescript-eslint/no-floating-promises\n            query.where((q) => {\n                // eslint-disable-next-line no-restricted-syntax\n                for (const namePart of name.trim().split(/\\s+/)) {\n                    // eslint-disable-next-line no-restricted-syntax\n                    for (const column of ['firstName', 'lastName']) {\n                        // eslint-disable-next-line @typescript-eslint/no-floating-promises\n                        q.orWhereRaw('lower(??) like ?', [\n                            column,\n                            `${namePart.toLowerCase()}%`,\n                        ])\n                    }\n                }\n            })\n        },\n    }\n}\n\nexport class CreateUserDto implements IUser {\n    @ApiProperty()\n    @IsString()\n    @IsNotEmpty()\n    @MinLength(2)\n    @MaxLength(36)\n    username: string\n\n    @ApiProperty()\n    @IsEmail()\n    @IsNotEmpty()\n    @MinLength(2)\n    email: string\n\n    @ApiProperty()\n    @IsString()\n    @IsNotEmpty()\n    @MinLength(8)\n    password: string\n\n    @ApiProperty()\n    @IsString()\n    @IsNotEmpty()\n    @MinLength(2)\n    firstName: string\n\n    @ApiProperty()\n    @IsString()\n    @IsNotEmpty()\n    @MinLength(2)\n    lastName: string\n\n    @ApiProperty()\n    @IsBoolean()\n    isActive: boolean\n}\n\nexport class UpdateUserDto extends PartialType(CreateUserDto) {}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CronModule.html":{"url":"modules/CronModule.html","title":"module - CronModule","body":"\n                   \n\n\n\n\n    Modules\n    CronModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_CronModule\n\n\n\ncluster_CronModule_providers\n\n\n\n\nCronService\n\nCronService\n\n\n\nCronModule\n\nCronModule\n\nCronModule -->\n\nCronService->CronModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/cron/cron.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            CronService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common'\n\nimport { CronService } from './cron.service'\n\n@Module({\n    providers: [CronService],\n})\nexport class CronModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CronService.html":{"url":"injectables/CronService.html","title":"injectable - CronService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  CronService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/cron/cron.service.ts\n        \n\n            \n                Description\n            \n            \n                @Cron are regular cron jobs\n@Interval To declare that a method should run at a (recurring) specified interval\n@Timeout To declare that a method should run (once) at a specified timeout\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                count\n                            \n                            \n                                fact16\n                            \n                            \n                                logger\n                            \n                            \n                                times\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                factorial\n                            \n                            \n                                handleCron\n                            \n                            \n                                handleInterval\n                            \n                            \n                                handleTimeout\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            factorial\n                        \n                        \n                    \n                \n            \n            \n                \nfactorial(n)\n                \n            \n\n\n            \n                \n                    Defined in src/cron/cron.service.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    n\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            handleCron\n                        \n                        \n                    \n                \n            \n            \n                \nhandleCron()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Cron('60 * * * * *')\n                \n            \n\n            \n                \n                    Defined in src/cron/cron.service.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            handleInterval\n                        \n                        \n                    \n                \n            \n            \n                \nhandleInterval()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Interval(100000)\n                \n            \n\n            \n                \n                    Defined in src/cron/cron.service.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            handleTimeout\n                        \n                        \n                    \n                \n            \n            \n                \nhandleTimeout()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Timeout(50000)\n                \n            \n\n            \n                \n                    Defined in src/cron/cron.service.ts:52\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            count\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in src/cron/cron.service.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            fact16\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 20922789888000\n                        \n                    \n                        \n                            \n                                    Defined in src/cron/cron.service.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            logger\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Logger(CronService.name)\n                        \n                    \n                        \n                            \n                                    Defined in src/cron/cron.service.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            times\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 50000000\n                        \n                    \n                        \n                            \n                                    Defined in src/cron/cron.service.ts:17\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable, Logger } from '@nestjs/common'\nimport { Cron, Interval, Timeout } from '@nestjs/schedule'\n\n/**\n * `@Cron` are regular cron jobs\n *\n * `@Interval` To declare that a method should run at a (recurring) specified interval\n *\n * `@Timeout` To declare that a method should run (once) at a specified timeout\n */\n@Injectable()\nexport class CronService {\n    static count = 0\n\n    logger = new Logger(CronService.name)\n\n    times = 50000000\n\n    fact16 = 20922789888000\n\n    factorial(n) {\n        if (n === 1) return 1\n        return n * this.factorial(n - 1)\n    }\n\n    @Cron('60 * * * * *')\n    handleCron() {\n        CronService.count += 1\n        this.logger.debug(\n            `Called when the second is 60, current count is ${CronService.count}`,\n        )\n\n        let ok = true\n        for (let i = 0; i \n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CrudConfigService.html":{"url":"classes/CrudConfigService.html","title":"class - CrudConfigService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CrudConfigService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/base/swagger-gen/crud-routes.factory.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                config\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                load\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            config\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Partial\n\n                        \n                    \n                    \n                        \n                            Default value : {\n        query: {\n            alwaysPaginate: false,\n        },\n    }\n                        \n                    \n                        \n                            \n                                    Defined in src/base/swagger-gen/crud-routes.factory.ts:188\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            load\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    load(config)\n                \n            \n\n\n            \n                \n                    Defined in src/base/swagger-gen/crud-routes.factory.ts:194\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    config\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { HttpStatus, RequestMethod } from '@nestjs/common'\n\nimport { Type } from 'class-transformer'\nimport * as deepmerge from 'deepmerge'\n\nimport {\n    ApiProperty,\n    isArrayFull,\n    isFalse,\n    isFunction,\n    isObjectFull,\n    objKeys,\n    swagger,\n    swaggerConst,\n} from './utils'\nimport type { CrudOptions, GetManyDefaultResponse, BaseRouteName } from './utils'\n\nexport class R {\n    static set(\n        metadataKey,\n        metadataValue,\n        target: Object,\n        propertyKey: string | symbol = undefined,\n    ) {\n        if (!propertyKey) {\n            Reflect.defineMetadata(metadataKey, metadataValue, target)\n        } else {\n            Reflect.defineMetadata(metadataKey, metadataValue, target, propertyKey)\n        }\n    }\n\n    static get(\n        metadataKey,\n        target: Object,\n        propertyKey: string | symbol = undefined,\n    ): T {\n        if (!propertyKey) return Reflect.getMetadata(metadataKey, target)\n\n        return Reflect.getMetadata(metadataKey, target, propertyKey)\n    }\n\n    static setRoute(route, func: Function) {\n        R.set('path', route.path, func)\n        R.set('method', route.method, func)\n    }\n}\n\nexport class Swagger {\n    static setExtraModels(swaggerModels) {\n        if (swaggerConst) {\n            const meta = Swagger.getExtraModels(swaggerModels.get)\n            const models = [\n                ...meta,\n                ...objKeys(swaggerModels)\n                    .map((name) => swaggerModels[name])\n                    .filter((one) => one && one.name !== swaggerModels.get.name),\n            ]\n\n            R.set(\n                swaggerConst.DECORATORS.API_EXTRA_MODELS,\n                models,\n                swaggerModels.get,\n            )\n        }\n    }\n\n    static setResponseOk(metadata, func: Function) {\n        if (swaggerConst) {\n            R.set(swaggerConst.DECORATORS.API_RESPONSE, metadata, func)\n        }\n    }\n\n    static getExtraModels(target): any[] {\n        return swaggerConst\n            ? R.get(swaggerConst.API_EXTRA_MODELS, target) || []\n            : []\n    }\n\n    static getResponseOk(func: Function) {\n        return swaggerConst\n            ? R.get(swaggerConst.DECORATORS.API_RESPONSE, func) || {}\n            : {}\n    }\n\n    static createResponseMeta(\n        name: BaseRouteName | 'getOne',\n        options: CrudOptions,\n        swaggerModels,\n    ) {\n        if (swagger) {\n            const { query } = options\n\n            switch (name) {\n                case 'getOneBase':\n                    return {\n                        [HttpStatus.OK]: {\n                            description: 'Get one base response',\n                            type: swaggerModels.get,\n                        },\n                    }\n                case 'getOne':\n                    return {\n                        [HttpStatus.OK]: query.alwaysPaginate\n                            ? {\n                                  description: 'Get paginated response',\n                                  type: swaggerModels.getMany,\n                              }\n                            : {\n                                  description: 'Get many base response',\n                                  schema: {\n                                      oneOf: [\n                                          {\n                                              $ref: swagger.getSchemaPath(\n                                                  swaggerModels.getMany.name,\n                                              ),\n                                          },\n                                          {\n                                              type: 'array',\n                                              items: {\n                                                  $ref: swagger.getSchemaPath(\n                                                      swaggerModels.get.name,\n                                                  ),\n                                              },\n                                          },\n                                      ],\n                                  },\n                              },\n                    }\n                default:\n                    // eslint-disable-next-line no-case-declarations\n                    const dto = swaggerModels[name.split('OneBase')[0]]\n\n                    return {\n                        [HttpStatus.OK]: {\n                            description: 'Response',\n                            schema: { $ref: swagger.getSchemaPath(dto.name) },\n                        },\n                    }\n            }\n        } else {\n            return {}\n        }\n    }\n}\n\nexport class SerializeHelper {\n    static createGetManyDto(dto, resourceName: string): any {\n        class GetManyResponseDto implements GetManyDefaultResponse {\n            @ApiProperty({ type: dto, isArray: true })\n            @Type(() => dto)\n            data: any[]\n\n            @ApiProperty({ type: 'number' })\n            count: number\n\n            @ApiProperty({ type: 'number' })\n            total: number\n\n            @ApiProperty({ type: 'number' })\n            page: number\n\n            @ApiProperty({ type: 'number' })\n            pageCount: number\n        }\n\n        Object.defineProperty(GetManyResponseDto, 'name', {\n            writable: false,\n            value: `GetMany${resourceName}ResponseDto`,\n        })\n\n        return GetManyResponseDto\n    }\n\n    static createGetOneResponseDto(resourceName: string): any {\n        class GetOneResponseDto {}\n\n        Object.defineProperty(GetOneResponseDto, 'name', {\n            writable: false,\n            value: `${resourceName}ResponseDto`,\n        })\n\n        return GetOneResponseDto\n    }\n}\n\nexport class CrudConfigService {\n    static config: Partial = {\n        query: {\n            alwaysPaginate: false,\n        },\n    }\n\n    static load(config) {\n        const query = isObjectFull(config.query) ? config.query : {}\n        const params = isObjectFull(config.params) ? config.params : {}\n        const serialize = isObjectFull(config.serialize) ? config.serialize : {}\n\n        CrudConfigService.config = deepmerge(\n            CrudConfigService.config,\n            { query, params, serialize },\n            { arrayMerge: (a, b, c) => b },\n        )\n    }\n}\n\nexport class CrudRoutesFactory {\n    protected options\n\n    protected swaggerModels: any = {}\n\n    constructor(private target, options) {\n        this.options = options\n        this.create()\n\n        console.log(\n            'CrudRoutesFactory::constructor',\n            // { ...options },\n            // this.targetProto,\n            // this.modelType,\n            // this.modelName,\n            // this.swaggerModels,\n        )\n    }\n\n    static create(target, options): CrudRoutesFactory {\n        return new CrudRoutesFactory(target, options)\n    }\n\n    get targetProto() {\n        return this.target.prototype\n    }\n\n    get modelName(): string {\n        return this.options.model.type.name\n    }\n\n    get modelType() {\n        return this.options.model.type\n    }\n\n    private create() {\n        const routesSchema = CrudRoutesFactory.getRoutesSchema()\n        this.mergeOptions()\n        this.setResponseModels()\n        this.createRoutes(routesSchema)\n        this.enableRoutes(routesSchema)\n    }\n\n    getOne(name: BaseRouteName) {\n        this.targetProto[name] = function getOne(req) {\n            return this.service.getOne(req)\n        }\n    }\n\n    getOneBase(name: BaseRouteName) {\n        this.targetProto[name] = function getOneBase(req) {\n            return this.service.getOneBase(req)\n        }\n    }\n\n    static getRoutesSchema() {\n        return [\n            {\n                name: 'getOneBase',\n                path: '/',\n                method: RequestMethod.GET,\n                enable: false,\n                override: false,\n                withParams: true,\n            },\n            {\n                name: 'getOne',\n                path: '/',\n                method: RequestMethod.GET,\n                enable: false,\n                override: false,\n                withParams: false,\n            },\n        ]\n    }\n\n    mergeOptions() {\n        // merge query config\n        const query = isObjectFull(this.options.query) ? this.options.query : {}\n        this.options.query = { ...CrudConfigService.config.query, ...query }\n\n        // set dto\n        if (!isObjectFull(this.options.dto)) {\n            this.options.dto = {}\n        }\n\n        // set serialize\n        this.options.serialize = {\n            ...CrudConfigService.config.serialize,\n            ...this.options.serialize,\n        }\n\n        this.options.serialize.get = isFalse(this.options.serialize.get)\n            ? false\n            : this.options.serialize.get || this.modelType\n\n        this.options.serialize.getMany = isFalse(this.options.serialize.getMany)\n            ? false\n            : this.options.serialize.getMany\n            ? this.options.serialize.getMany\n            : isFalse(this.options.serialize.get)\n            ? false\n            : SerializeHelper.createGetManyDto(\n                  this.options.serialize.get,\n                  this.modelName,\n              )\n\n        this.options.serialize.create = isFalse(this.options.serialize.create)\n            ? false\n            : this.options.serialize.create || this.modelType\n\n        this.options.serialize.update = isFalse(this.options.serialize.update)\n            ? false\n            : this.options.serialize.update || this.modelType\n\n        this.options.serialize.replace = isFalse(this.options.serialize.replace)\n            ? false\n            : this.options.serialize.replace || this.modelType\n\n        this.options.serialize.delete =\n            isFalse(this.options.serialize.delete) ||\n            !this.options.routes?.deleteOneBase?.returnDeleted\n                ? false\n                : this.options.serialize.delete || this.modelType\n\n        R.set('CRUD_OPTIONS_METADATA', this.options, this.target)\n    }\n\n    setResponseModels() {\n        const modelType = isFunction(this.modelType)\n            ? this.modelType\n            : SerializeHelper.createGetOneResponseDto(this.modelName)\n\n        this.swaggerModels.get = isFunction(this.options.serialize.get)\n            ? this.options.serialize.get\n            : modelType\n\n        this.swaggerModels.getMany =\n            this.options.serialize.getMany ||\n            SerializeHelper.createGetManyDto(this.swaggerModels.get, this.modelName)\n\n        this.swaggerModels.create = isFunction(this.options.serialize.create)\n            ? this.options.serialize.create\n            : modelType\n\n        this.swaggerModels.update = isFunction(this.options.serialize.update)\n            ? this.options.serialize.update\n            : modelType\n\n        this.swaggerModels.replace = isFunction(this.options.serialize.replace)\n            ? this.options.serialize.replace\n            : modelType\n\n        this.swaggerModels.delete = isFunction(this.options.serialize.delete)\n            ? this.options.serialize.delete\n            : modelType\n\n        Swagger.setExtraModels(this.swaggerModels)\n    }\n\n    enableRoutes(routesSchema) {\n        routesSchema.forEach((route) => {\n            if (!route.override && route.enable) {\n                R.setRoute(route, this.targetProto[route.name])\n            }\n        })\n    }\n\n    createRoutes(routesSchema) {\n        routesSchema.forEach((route) => {\n            // create base method\n            /* this[route.name](route.name) */\n            route.enable = true\n\n            // set metadata\n            this.setSwaggerResponseOk(route.name)\n        })\n    }\n\n    setSwaggerResponseOk(name) {\n        const metadata = Swagger.getResponseOk(this.targetProto[name]) || {}\n        const metadataToAdd =\n            Swagger.createResponseMeta(name, this.options, this.swaggerModels) || {}\n\n        Swagger.setResponseOk(\n            // @ts-ignore\n            { ...metadata, ...metadataToAdd },\n            this.targetProto[name],\n        )\n    }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CrudController.html":{"url":"classes/CrudController.html","title":"class - CrudController","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CrudController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/base/crud/crud.controller.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findOne\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Protected\n                        constructor(service: ICrudService)\n                    \n                \n                        \n                            \n                                Defined in src/base/crud/crud.controller.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        service\n                                                  \n                                                        \n                                                                        ICrudService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findAll\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll(filter: PaginationParams)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'find all', description: 'Get all of the records'})@ApiResponse({status: undefined, description: 'Found all records'})@Get()\n                \n            \n\n            \n                \n                    Defined in src/base/crud/crud.controller.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                                PaginationParams\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findOne\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'Get one record by id', description: 'Get one record from database with provided by id'})@ApiResponse({status: undefined, description: 'Found one record', type: BaseModel})@Get(':id')\n                \n            \n\n            \n                \n                    Defined in src/base/crud/crud.controller.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n    Get,\n    Post,\n    Put,\n    Delete,\n    Body,\n    Param,\n    ParseIntPipe,\n    HttpStatus,\n    Query,\n} from '@nestjs/common'\nimport { ApiOperation, ApiResponse } from '@nestjs/swagger'\n\nimport { BaseModel } from '../../database/models/base.model'\nimport { ApiErrors } from '../swagger-gen/api-errors.decorator'\nimport { ICrudService } from './crud.service'\nimport { IPagination, PaginationParams } from './pagination'\n\n@ApiErrors()\nexport abstract class CrudController {\n    protected constructor(protected readonly service: ICrudService) {}\n\n    @ApiOperation({ summary: 'find all', description: 'Get all of the records' })\n    @ApiResponse({\n        status: HttpStatus.OK,\n        description: 'Found all records',\n        // type: IPagination | BaseModel[]\n    })\n    @Get()\n    async findAll(\n        @Query() filter: PaginationParams,\n    ): Promise | T[]> {\n        if (filter) {\n            return this.service.paginatedFindAll(filter)\n        }\n\n        return this.service.findAll()\n    }\n\n    @ApiOperation({\n        summary: 'Get one record by id',\n        description: 'Get one record from database with provided by id',\n    })\n    @ApiResponse({\n        status: HttpStatus.OK,\n        description: 'Found one record',\n        type: BaseModel, // type: T,\n    })\n    @Get(':id')\n    async findOne(@Param('id', ParseIntPipe) id: number): Promise {\n        return this.service.findOne(id)\n    }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CrudOptions.html":{"url":"interfaces/CrudOptions.html","title":"interface - CrudOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  CrudOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/base/swagger-gen/utils/other.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        dto\n                                \n                                \n                                        model\n                                \n                                \n                                            Optional\n                                        params\n                                \n                                \n                                            Optional\n                                        query\n                                \n                                \n                                            Optional\n                                        routes\n                                \n                                \n                                            Optional\n                                        serialize\n                                \n                                \n                                            Optional\n                                        validation\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        dto\n                                    \n                                \n                                \n                                    \n                                        dto:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        model\n                                    \n                                \n                                \n                                    \n                                        model:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        params\n                                    \n                                \n                                \n                                    \n                                        params:         ParamsOptions\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ParamsOptions\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        query\n                                    \n                                \n                                \n                                    \n                                        query:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        routes\n                                    \n                                \n                                \n                                    \n                                        routes:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        serialize\n                                    \n                                \n                                \n                                    \n                                        serialize:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        validation\n                                    \n                                \n                                \n                                    \n                                        validation:     ValidationPipeOptions | \"undefined\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     ValidationPipeOptions | \"undefined\"\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ValidationPipeOptions } from '@nestjs/common'\nimport { SwaggerEnumType } from '@nestjs/swagger/dist/types/swagger-enum.type'\n\nexport declare type BaseRouteName =\n    | 'getManyBase'\n    | 'getOneBase'\n    | 'createOneBase'\n    | 'createManyBase'\n    | 'updateOneBase'\n    | 'replaceOneBase'\n    | 'deleteOneBase'\n\nexport interface GetManyDefaultResponse {\n    data: T[]\n    count: number\n    total: number\n    page: number\n    pageCount: number\n}\n\nexport interface ParamOption {\n    field?: string\n    type?: 'number' | 'string' | 'uuid'\n    enum?: SwaggerEnumType\n    primary?: boolean\n    disabled?: boolean\n}\n\nexport interface ParamsOptions {\n    [key: string]: ParamOption\n}\n\nexport interface CrudOptions {\n    model: {}\n    dto?: {}\n    routes?: {}\n    validation?: ValidationPipeOptions | false\n    params?: ParamsOptions\n    query?: {\n        limit?: number\n        maxLimit?: number\n        cache?: number | false\n        alwaysPaginate?: boolean\n    }\n    serialize?: {\n        getMany?: false\n        get?: false\n        create?: false\n        createMany?: false\n        update?: false\n        replace?: false\n        delete?: false\n    }\n}\n\nexport function safeRequire(path: string): T | null {\n    try {\n        // eslint-disable-next-line global-require,@typescript-eslint/no-var-requires,import/no-dynamic-require\n        const pack = require(path)\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-return\n        return pack\n    } catch (_) {\n        return null\n    }\n}\n\nexport const swagger = safeRequire('@nestjs/swagger')\nexport const swaggerConst = safeRequire('@nestjs/swagger/dist/constants')\n\nexport function ApiProperty(options?: any): PropertyDecorator {\n    // eslint-disable-next-line @typescript-eslint/ban-types\n    return (target: object, propertyKey: string | symbol) => {\n        if (swagger) {\n            const ApiPropertyDecorator =\n                // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n                swagger.ApiProperty || swagger.ApiModelProperty\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-call\n            ApiPropertyDecorator(options)(target, propertyKey)\n        }\n    }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CrudRoutesFactory.html":{"url":"classes/CrudRoutesFactory.html","title":"class - CrudRoutesFactory","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CrudRoutesFactory\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/base/swagger-gen/crud-routes.factory.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                options\n                            \n                            \n                                    Protected\n                                swaggerModels\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                create\n                            \n                            \n                                    Private\n                                create\n                            \n                            \n                                createRoutes\n                            \n                            \n                                enableRoutes\n                            \n                            \n                                getOne\n                            \n                            \n                                getOneBase\n                            \n                            \n                                    Static\n                                getRoutesSchema\n                            \n                            \n                                mergeOptions\n                            \n                            \n                                setResponseModels\n                            \n                            \n                                setSwaggerResponseOk\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    targetProto\n                                \n                                \n                                    modelName\n                                \n                                \n                                    modelType\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(target, options)\n                    \n                \n                        \n                            \n                                Defined in src/base/swagger-gen/crud-routes.factory.ts:210\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        target\n                                                  \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        options\n                                                  \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            options\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/base/swagger-gen/crud-routes.factory.ts:208\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            swaggerModels\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                        \n                            \n                                    Defined in src/base/swagger-gen/crud-routes.factory.ts:210\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            create\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    create(target, options)\n                \n            \n\n\n            \n                \n                    Defined in src/base/swagger-gen/crud-routes.factory.ts:226\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    target\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         CrudRoutesFactory\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            create\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    create()\n                \n            \n\n\n            \n                \n                    Defined in src/base/swagger-gen/crud-routes.factory.ts:242\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createRoutes\n                        \n                        \n                    \n                \n            \n            \n                \ncreateRoutes(routesSchema)\n                \n            \n\n\n            \n                \n                    Defined in src/base/swagger-gen/crud-routes.factory.ts:375\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    routesSchema\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            enableRoutes\n                        \n                        \n                    \n                \n            \n            \n                \nenableRoutes(routesSchema)\n                \n            \n\n\n            \n                \n                    Defined in src/base/swagger-gen/crud-routes.factory.ts:367\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    routesSchema\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getOne\n                        \n                        \n                    \n                \n            \n            \n                \ngetOne(name: BaseRouteName)\n                \n            \n\n\n            \n                \n                    Defined in src/base/swagger-gen/crud-routes.factory.ts:250\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                BaseRouteName\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getOneBase\n                        \n                        \n                    \n                \n            \n            \n                \ngetOneBase(name: BaseRouteName)\n                \n            \n\n\n            \n                \n                    Defined in src/base/swagger-gen/crud-routes.factory.ts:256\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                BaseRouteName\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            getRoutesSchema\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getRoutesSchema()\n                \n            \n\n\n            \n                \n                    Defined in src/base/swagger-gen/crud-routes.factory.ts:262\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     {}\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            mergeOptions\n                        \n                        \n                    \n                \n            \n            \n                \nmergeOptions()\n                \n            \n\n\n            \n                \n                    Defined in src/base/swagger-gen/crud-routes.factory.ts:283\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setResponseModels\n                        \n                        \n                    \n                \n            \n            \n                \nsetResponseModels()\n                \n            \n\n\n            \n                \n                    Defined in src/base/swagger-gen/crud-routes.factory.ts:335\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setSwaggerResponseOk\n                        \n                        \n                    \n                \n            \n            \n                \nsetSwaggerResponseOk(name)\n                \n            \n\n\n            \n                \n                    Defined in src/base/swagger-gen/crud-routes.factory.ts:386\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        targetProto\n                    \n                \n\n                \n                    \n                        gettargetProto()\n                    \n                \n                            \n                                \n                                    Defined in src/base/swagger-gen/crud-routes.factory.ts:230\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        modelName\n                    \n                \n\n                \n                    \n                        getmodelName()\n                    \n                \n                            \n                                \n                                    Defined in src/base/swagger-gen/crud-routes.factory.ts:234\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        modelType\n                    \n                \n\n                \n                    \n                        getmodelType()\n                    \n                \n                            \n                                \n                                    Defined in src/base/swagger-gen/crud-routes.factory.ts:238\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { HttpStatus, RequestMethod } from '@nestjs/common'\n\nimport { Type } from 'class-transformer'\nimport * as deepmerge from 'deepmerge'\n\nimport {\n    ApiProperty,\n    isArrayFull,\n    isFalse,\n    isFunction,\n    isObjectFull,\n    objKeys,\n    swagger,\n    swaggerConst,\n} from './utils'\nimport type { CrudOptions, GetManyDefaultResponse, BaseRouteName } from './utils'\n\nexport class R {\n    static set(\n        metadataKey,\n        metadataValue,\n        target: Object,\n        propertyKey: string | symbol = undefined,\n    ) {\n        if (!propertyKey) {\n            Reflect.defineMetadata(metadataKey, metadataValue, target)\n        } else {\n            Reflect.defineMetadata(metadataKey, metadataValue, target, propertyKey)\n        }\n    }\n\n    static get(\n        metadataKey,\n        target: Object,\n        propertyKey: string | symbol = undefined,\n    ): T {\n        if (!propertyKey) return Reflect.getMetadata(metadataKey, target)\n\n        return Reflect.getMetadata(metadataKey, target, propertyKey)\n    }\n\n    static setRoute(route, func: Function) {\n        R.set('path', route.path, func)\n        R.set('method', route.method, func)\n    }\n}\n\nexport class Swagger {\n    static setExtraModels(swaggerModels) {\n        if (swaggerConst) {\n            const meta = Swagger.getExtraModels(swaggerModels.get)\n            const models = [\n                ...meta,\n                ...objKeys(swaggerModels)\n                    .map((name) => swaggerModels[name])\n                    .filter((one) => one && one.name !== swaggerModels.get.name),\n            ]\n\n            R.set(\n                swaggerConst.DECORATORS.API_EXTRA_MODELS,\n                models,\n                swaggerModels.get,\n            )\n        }\n    }\n\n    static setResponseOk(metadata, func: Function) {\n        if (swaggerConst) {\n            R.set(swaggerConst.DECORATORS.API_RESPONSE, metadata, func)\n        }\n    }\n\n    static getExtraModels(target): any[] {\n        return swaggerConst\n            ? R.get(swaggerConst.API_EXTRA_MODELS, target) || []\n            : []\n    }\n\n    static getResponseOk(func: Function) {\n        return swaggerConst\n            ? R.get(swaggerConst.DECORATORS.API_RESPONSE, func) || {}\n            : {}\n    }\n\n    static createResponseMeta(\n        name: BaseRouteName | 'getOne',\n        options: CrudOptions,\n        swaggerModels,\n    ) {\n        if (swagger) {\n            const { query } = options\n\n            switch (name) {\n                case 'getOneBase':\n                    return {\n                        [HttpStatus.OK]: {\n                            description: 'Get one base response',\n                            type: swaggerModels.get,\n                        },\n                    }\n                case 'getOne':\n                    return {\n                        [HttpStatus.OK]: query.alwaysPaginate\n                            ? {\n                                  description: 'Get paginated response',\n                                  type: swaggerModels.getMany,\n                              }\n                            : {\n                                  description: 'Get many base response',\n                                  schema: {\n                                      oneOf: [\n                                          {\n                                              $ref: swagger.getSchemaPath(\n                                                  swaggerModels.getMany.name,\n                                              ),\n                                          },\n                                          {\n                                              type: 'array',\n                                              items: {\n                                                  $ref: swagger.getSchemaPath(\n                                                      swaggerModels.get.name,\n                                                  ),\n                                              },\n                                          },\n                                      ],\n                                  },\n                              },\n                    }\n                default:\n                    // eslint-disable-next-line no-case-declarations\n                    const dto = swaggerModels[name.split('OneBase')[0]]\n\n                    return {\n                        [HttpStatus.OK]: {\n                            description: 'Response',\n                            schema: { $ref: swagger.getSchemaPath(dto.name) },\n                        },\n                    }\n            }\n        } else {\n            return {}\n        }\n    }\n}\n\nexport class SerializeHelper {\n    static createGetManyDto(dto, resourceName: string): any {\n        class GetManyResponseDto implements GetManyDefaultResponse {\n            @ApiProperty({ type: dto, isArray: true })\n            @Type(() => dto)\n            data: any[]\n\n            @ApiProperty({ type: 'number' })\n            count: number\n\n            @ApiProperty({ type: 'number' })\n            total: number\n\n            @ApiProperty({ type: 'number' })\n            page: number\n\n            @ApiProperty({ type: 'number' })\n            pageCount: number\n        }\n\n        Object.defineProperty(GetManyResponseDto, 'name', {\n            writable: false,\n            value: `GetMany${resourceName}ResponseDto`,\n        })\n\n        return GetManyResponseDto\n    }\n\n    static createGetOneResponseDto(resourceName: string): any {\n        class GetOneResponseDto {}\n\n        Object.defineProperty(GetOneResponseDto, 'name', {\n            writable: false,\n            value: `${resourceName}ResponseDto`,\n        })\n\n        return GetOneResponseDto\n    }\n}\n\nexport class CrudConfigService {\n    static config: Partial = {\n        query: {\n            alwaysPaginate: false,\n        },\n    }\n\n    static load(config) {\n        const query = isObjectFull(config.query) ? config.query : {}\n        const params = isObjectFull(config.params) ? config.params : {}\n        const serialize = isObjectFull(config.serialize) ? config.serialize : {}\n\n        CrudConfigService.config = deepmerge(\n            CrudConfigService.config,\n            { query, params, serialize },\n            { arrayMerge: (a, b, c) => b },\n        )\n    }\n}\n\nexport class CrudRoutesFactory {\n    protected options\n\n    protected swaggerModels: any = {}\n\n    constructor(private target, options) {\n        this.options = options\n        this.create()\n\n        console.log(\n            'CrudRoutesFactory::constructor',\n            // { ...options },\n            // this.targetProto,\n            // this.modelType,\n            // this.modelName,\n            // this.swaggerModels,\n        )\n    }\n\n    static create(target, options): CrudRoutesFactory {\n        return new CrudRoutesFactory(target, options)\n    }\n\n    get targetProto() {\n        return this.target.prototype\n    }\n\n    get modelName(): string {\n        return this.options.model.type.name\n    }\n\n    get modelType() {\n        return this.options.model.type\n    }\n\n    private create() {\n        const routesSchema = CrudRoutesFactory.getRoutesSchema()\n        this.mergeOptions()\n        this.setResponseModels()\n        this.createRoutes(routesSchema)\n        this.enableRoutes(routesSchema)\n    }\n\n    getOne(name: BaseRouteName) {\n        this.targetProto[name] = function getOne(req) {\n            return this.service.getOne(req)\n        }\n    }\n\n    getOneBase(name: BaseRouteName) {\n        this.targetProto[name] = function getOneBase(req) {\n            return this.service.getOneBase(req)\n        }\n    }\n\n    static getRoutesSchema() {\n        return [\n            {\n                name: 'getOneBase',\n                path: '/',\n                method: RequestMethod.GET,\n                enable: false,\n                override: false,\n                withParams: true,\n            },\n            {\n                name: 'getOne',\n                path: '/',\n                method: RequestMethod.GET,\n                enable: false,\n                override: false,\n                withParams: false,\n            },\n        ]\n    }\n\n    mergeOptions() {\n        // merge query config\n        const query = isObjectFull(this.options.query) ? this.options.query : {}\n        this.options.query = { ...CrudConfigService.config.query, ...query }\n\n        // set dto\n        if (!isObjectFull(this.options.dto)) {\n            this.options.dto = {}\n        }\n\n        // set serialize\n        this.options.serialize = {\n            ...CrudConfigService.config.serialize,\n            ...this.options.serialize,\n        }\n\n        this.options.serialize.get = isFalse(this.options.serialize.get)\n            ? false\n            : this.options.serialize.get || this.modelType\n\n        this.options.serialize.getMany = isFalse(this.options.serialize.getMany)\n            ? false\n            : this.options.serialize.getMany\n            ? this.options.serialize.getMany\n            : isFalse(this.options.serialize.get)\n            ? false\n            : SerializeHelper.createGetManyDto(\n                  this.options.serialize.get,\n                  this.modelName,\n              )\n\n        this.options.serialize.create = isFalse(this.options.serialize.create)\n            ? false\n            : this.options.serialize.create || this.modelType\n\n        this.options.serialize.update = isFalse(this.options.serialize.update)\n            ? false\n            : this.options.serialize.update || this.modelType\n\n        this.options.serialize.replace = isFalse(this.options.serialize.replace)\n            ? false\n            : this.options.serialize.replace || this.modelType\n\n        this.options.serialize.delete =\n            isFalse(this.options.serialize.delete) ||\n            !this.options.routes?.deleteOneBase?.returnDeleted\n                ? false\n                : this.options.serialize.delete || this.modelType\n\n        R.set('CRUD_OPTIONS_METADATA', this.options, this.target)\n    }\n\n    setResponseModels() {\n        const modelType = isFunction(this.modelType)\n            ? this.modelType\n            : SerializeHelper.createGetOneResponseDto(this.modelName)\n\n        this.swaggerModels.get = isFunction(this.options.serialize.get)\n            ? this.options.serialize.get\n            : modelType\n\n        this.swaggerModels.getMany =\n            this.options.serialize.getMany ||\n            SerializeHelper.createGetManyDto(this.swaggerModels.get, this.modelName)\n\n        this.swaggerModels.create = isFunction(this.options.serialize.create)\n            ? this.options.serialize.create\n            : modelType\n\n        this.swaggerModels.update = isFunction(this.options.serialize.update)\n            ? this.options.serialize.update\n            : modelType\n\n        this.swaggerModels.replace = isFunction(this.options.serialize.replace)\n            ? this.options.serialize.replace\n            : modelType\n\n        this.swaggerModels.delete = isFunction(this.options.serialize.delete)\n            ? this.options.serialize.delete\n            : modelType\n\n        Swagger.setExtraModels(this.swaggerModels)\n    }\n\n    enableRoutes(routesSchema) {\n        routesSchema.forEach((route) => {\n            if (!route.override && route.enable) {\n                R.setRoute(route, this.targetProto[route.name])\n            }\n        })\n    }\n\n    createRoutes(routesSchema) {\n        routesSchema.forEach((route) => {\n            // create base method\n            /* this[route.name](route.name) */\n            route.enable = true\n\n            // set metadata\n            this.setSwaggerResponseOk(route.name)\n        })\n    }\n\n    setSwaggerResponseOk(name) {\n        const metadata = Swagger.getResponseOk(this.targetProto[name]) || {}\n        const metadataToAdd =\n            Swagger.createResponseMeta(name, this.options, this.swaggerModels) || {}\n\n        Swagger.setResponseOk(\n            // @ts-ignore\n            { ...metadata, ...metadataToAdd },\n            this.targetProto[name],\n        )\n    }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CrudService.html":{"url":"classes/CrudService.html","title":"class - CrudService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CrudService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/base/crud/crud.service.ts\n        \n\n            \n                Description\n            \n            \n                Abstract base service that other services can extend to provide base CRUD\nfunctionality such as to create, find, update and delete data.\n\n            \n\n\n            \n                Implements\n            \n            \n                            ICrudService\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                saltRounds\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                paginatedFindAll\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Protected\n                        constructor(model: ModelClass)\n                    \n                \n                        \n                            \n                                Defined in src/base/crud/crud.service.ts:21\n                            \n                        \n\n                \n                    \n                            The constructor must receive the injected model from the child service in\norder to provide all the proper base functionality.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        model\n                                                  \n                                                        \n                                                                    ModelClass\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nThe injected model.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            saltRounds\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/base/crud/crud.service.ts:21\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findAll\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll()\n                \n            \n\n\n            \n                \n                    Defined in src/base/crud/crud.service.ts:38\n                \n            \n\n\n            \n                \n                    Finds all entries and return the result\n\n\n                    \n                        Returns :     {}\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findOne\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(id: string | number)\n                \n            \n\n\n            \n                \n                    Defined in src/base/crud/crud.service.ts:76\n                \n            \n\n\n            \n                \n                    Finds paginated entries and return the result\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                            string | number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            paginatedFindAll\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    paginatedFindAll(filter: PaginationParams)\n                \n            \n\n\n            \n                \n                    Defined in src/base/crud/crud.service.ts:51\n                \n            \n\n\n            \n                \n                    Finds paginated entries and return the result\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                                PaginationParams\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { InternalServerErrorException } from '@nestjs/common'\n\nimport { NotFoundError, ModelClass } from 'objection'\n\nimport { BaseModel } from '../../database/models/base.model'\nimport { IPagination, PaginationParams } from './pagination'\n\nexport interface ICrudService {\n    findAll(): Promise\n\n    findOne(id: string | number): Promise\n\n    paginatedFindAll(filter?: PaginationParams): Promise>\n}\n\n/**\n * Abstract base service that other services can extend to provide base CRUD\n * functionality such as to create, find, update and delete data.\n */\nexport abstract class CrudService implements ICrudService {\n    saltRounds: number\n\n    /**\n     * The constructor must receive the injected model from the child service in\n     * order to provide all the proper base functionality.\n     *\n     * @param {Model} model - The injected model.\n     */\n    protected constructor(protected readonly model: ModelClass) {\n        this.saltRounds = 12\n    }\n\n    /**\n     * Finds all entries and return the result\n     *\n     * @throws InternalServerErrorException\n     */\n    async findAll() {\n        try {\n            return (this.model.query() as unknown) as Promise\n        } catch (e) {\n            throw new InternalServerErrorException()\n        }\n    }\n\n    /**\n     * Finds paginated entries and return the result\n     *\n     * @throws InternalServerErrorException\n     */\n    async paginatedFindAll(filter: PaginationParams) {\n        const { page = 0, pageSize = 10, order } = filter\n\n        try {\n            const { results, total } = await this.model.query().page(page, pageSize)\n\n            return ({\n                data: results,\n                paging: {\n                    pageSize,\n                    page,\n                    total,\n                    totalPages: Math.ceil(total / pageSize),\n                },\n            } as unknown) as Promise>\n        } catch (e) {\n            throw new InternalServerErrorException()\n        }\n    }\n\n    /**\n     * Finds paginated entries and return the result\n     *\n     * @throws NotFoundError\n     */\n    async findOne(id: string | number): Promise {\n        return (this.model\n            .query()\n            .findById(id)\n            .first()\n            .throwIfNotFound() as unknown) as Promise\n    }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CustomQueryBuilder.html":{"url":"classes/CustomQueryBuilder.html","title":"class - CustomQueryBuilder","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CustomQueryBuilder\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/database/models/helpers.ts\n        \n\n\n            \n                Extends\n            \n            \n                    QueryBuilder\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                ArrayQueryBuilderType\n                            \n                            \n                                NumberQueryBuilderType\n                            \n                            \n                                PageQueryBuilderType\n                            \n                            \n                                SingleQueryBuilderType\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                chunk\n                            \n                            \n                                    Async\n                                exists\n                            \n                            \n                                    Async\n                                onlyCount\n                            \n                            \n                                    Async\n                                paginate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ArrayQueryBuilderType\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         CustomQueryBuilder\n\n                        \n                    \n                        \n                            \n                                    Defined in src/database/models/helpers.ts:37\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            NumberQueryBuilderType\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         CustomQueryBuilder\n\n                        \n                    \n                        \n                            \n                                    Defined in src/database/models/helpers.ts:41\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            PageQueryBuilderType\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         CustomQueryBuilder>\n\n                        \n                    \n                        \n                            \n                                    Defined in src/database/models/helpers.ts:43\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            SingleQueryBuilderType\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         CustomQueryBuilder\n\n                        \n                    \n                        \n                            \n                                    Defined in src/database/models/helpers.ts:39\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            chunk\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    chunk(cb: Function, size: number)\n                \n            \n\n\n            \n                \n                    Defined in src/database/models/helpers.ts:71\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    cb\n                                    \n                                                Function\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    size\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            exists\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    exists()\n                \n            \n\n\n            \n                \n                    Defined in src/database/models/helpers.ts:66\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     {}\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            onlyCount\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    onlyCount()\n                \n            \n\n\n            \n                \n                    Defined in src/database/models/helpers.ts:61\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     {}\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            paginate\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    paginate(page: number, perPage: number)\n                \n            \n\n\n            \n                \n                    Defined in src/database/models/helpers.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    page\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    perPage\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { cloneDeep } from 'lodash'\nimport { Model, Page, QueryBuilder } from 'objection'\n\n/**\n * Check if value is of type object.\n *\n * @param value\n */\nexport function isObject(value: any): boolean {\n    return typeof value === 'object' && value !== null\n}\n\n/**\n * Check if value is empty\n *\n * @param value\n */\nexport function isEmpty(value: any): boolean {\n    if (Array.isArray(value) && value.length  extends QueryBuilder {\n    ArrayQueryBuilderType!: CustomQueryBuilder\n\n    SingleQueryBuilderType!: CustomQueryBuilder\n\n    NumberQueryBuilderType!: CustomQueryBuilder\n\n    PageQueryBuilderType!: CustomQueryBuilder>\n\n    async paginate(page: number, perPage: number) {\n        page = +page ? +page : 1 // eslint-disable-line no-param-reassign\n        perPage = +perPage ? +perPage : 15 // eslint-disable-line no-param-reassign\n\n        const result = await this.page(page - 1, perPage)\n        return {\n            pagination: {\n                currentPage: page,\n                totalPages: Math.ceil(result.total / perPage),\n                perPage,\n                total: result.total,\n            },\n            data: result.results,\n        }\n    }\n\n    async onlyCount() {\n        const result = await this.count({ c: '*' })\n        return result[0].c // eslint-disable-line @typescript-eslint/no-unsafe-member-access,@typescript-eslint/no-unsafe-return\n    }\n\n    async exists() {\n        return !!(await this.onlyCount())\n    }\n\n    // eslint-disable-next-line @typescript-eslint/ban-types\n    async chunk(cb: Function, size: number): Promise {\n        let offset = 0\n        let hasMore = true\n\n        while (!offset || hasMore) {\n            const query = cloneDeep(this) // eslint-disable-line @typescript-eslint/no-unsafe-call,@typescript-eslint/no-unsafe-assignment\n            const records = await query.offset(offset).limit(size) // eslint-disable-line @typescript-eslint/no-unsafe-call,no-await-in-loop,@typescript-eslint/no-unsafe-member-access,@typescript-eslint/no-unsafe-assignment\n\n            hasMore = isNotEmpty(records)\n\n            if (!hasMore) return\n\n            await cb(records) // eslint-disable-line no-await-in-loop\n\n            offset += size\n        }\n    }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/DatabaseModule.html":{"url":"modules/DatabaseModule.html","title":"module - DatabaseModule","body":"\n                   \n\n\n\n\n    Modules\n    DatabaseModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/database/database.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { Global, Module } from '@nestjs/common'\n\nimport * as Knex from 'knex'\nimport { knexSnakeCaseMappers, Model } from 'objection'\n\nimport { Tag } from '../tags/tag.model'\nimport { User } from '../users/user.model'\n\nconst models = [Tag, User]\n\nconst modelProviders = models.map((model) => {\n    return {\n        provide: model.name,\n        useValue: model,\n    }\n})\n\nconst providers = [\n    ...modelProviders,\n    {\n        provide: 'KnexConnection',\n        // eslint-disable-next-line @typescript-eslint/require-await\n        useFactory: async () => {\n            const knex = Knex({\n                client: 'sqlite3',\n                useNullAsDefault: true,\n                connection: {\n                    filename: './knex.sqlite',\n                },\n                debug: true,\n                // ...knexSnakeCaseMappers(),\n            })\n\n            Model.knex(knex)\n            return knex\n        },\n    },\n]\n\n@Global()\n@Module({\n    providers: [...providers],\n    exports: [...providers],\n})\nexport class DatabaseModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ExcludeNullUndefinedInterceptor.html":{"url":"injectables/ExcludeNullUndefinedInterceptor.html","title":"injectable - ExcludeNullUndefinedInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ExcludeNullUndefinedInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/infra/interceptors/null-undefined-override.ts\n        \n\n            \n                Description\n            \n            \n                Interceptors to transform each occurrence of a null value to an empty string ''\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            intercept\n                        \n                        \n                    \n                \n            \n            \n                \nintercept(context: ExecutionContext, next: CallHandler)\n                \n            \n\n\n            \n                \n                    Defined in src/infra/interceptors/null-undefined-override.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                            CallHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n    Injectable,\n    NestInterceptor,\n    ExecutionContext,\n    CallHandler,\n} from '@nestjs/common'\n\nimport { Observable } from 'rxjs'\nimport { map } from 'rxjs/operators'\n\n/**\n * Interceptors to transform each occurrence of a null value to an empty string ''\n */\n@Injectable()\nexport class ExcludeNullUndefinedInterceptor implements NestInterceptor {\n    intercept(context: ExecutionContext, next: CallHandler): Observable {\n        return next.handle().pipe(\n            map(\n                // eslint-disable-next-line @typescript-eslint/no-unsafe-return\n                (value) => value ?? '',\n            ),\n        )\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Follower.html":{"url":"interfaces/Follower.html","title":"interface - Follower","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Follower\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/domain.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        areYouFollowing\n                                \n                                \n                                        profileImage\n                                \n                                \n                                        showRemoveOption\n                                \n                                \n                                        userId\n                                \n                                \n                                        userName\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        areYouFollowing\n                                    \n                                \n                                \n                                    \n                                        areYouFollowing:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        profileImage\n                                    \n                                \n                                \n                                    \n                                        profileImage:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        showRemoveOption\n                                    \n                                \n                                \n                                    \n                                        showRemoveOption:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        userId\n                                    \n                                \n                                \n                                    \n                                        userId:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        userName\n                                    \n                                \n                                \n                                    \n                                        userName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { HttpStatus } from '@nestjs/common'\n\nexport type Result =\n    | GetAppLaunchData\n    | GetUserProfile\n    | GetUserPosts\n    | GetComments\n    | GetRescueList\n    | GetFollowers\n    | GetFollowing\n\nexport type APIError = Error | string | null\n\nexport interface APIResponse {\n    data: T\n    error: APIError\n    message: string | string[]\n    statusCode: HttpStatus\n\n    count?: number\n    page?: number\n    pageCount?: number\n    total?: number\n}\n\nexport interface GetAppLaunchData {\n    link: 'api:/'\n    response: APIResponse\n}\n\nexport interface GetUserProfile {\n    link: 'api:v1/user/getUserProfile?userId=25'\n    response: APIResponse\n}\n\nexport interface GetUserPosts {\n    link: 'api:v1/user/getUserPosts?pageNo=0&pageSize=25'\n    response: APIResponse\n}\n\nexport interface GetRescueList {\n    link: 'api:v1/rescue/getRescueList?pageNo=0&pageSize=10&status=pending|inProgress|completed|nearest'\n    response: APIResponse\n}\n\nexport interface GetComments {\n    link: 'api:v1/rescue/getComments?pageNo=0&pageSize=10&postId=1230'\n    response: APIResponse\n}\n\nexport interface GetFollowers {\n    link: 'api:v1/rescue/getUserFollowers?userId=1230'\n    response: APIResponse\n}\n\nexport interface GetFollowing {\n    link: 'api:v1/rescue/getUserFollowing?userId=1230'\n    response: APIResponse\n}\n\nexport interface AppLaunchAction {\n    actionId: number\n    action: string\n    isActive: boolean\n    subject?: string\n}\n\nexport interface User {\n    usesId: number\n\n    coverImage: string\n    following: boolean\n    gender: string\n    isOwnProfile: number\n    isRescuer: boolean\n    latitude: number\n    longitude: number\n    numberOfFollowers: number\n    numberOfFollowing: number\n    numberOfPosts: number\n    numberOfRescuesCompleted: number\n    numberOfRescuesCreated: number\n    numberOfRescuesInProgress: number\n    profileImage: string\n    rescuer: boolean\n    userAddress: string\n    userContacts: string\n    userEmail: string\n    userName: string\n    badge: {\n        badgeId: number\n        badgeName: string\n        badgeDescription: string\n        recuesCompletionNeeded: number\n    }\n    setting: {\n        showMyContacts: boolean\n        getNotifications: boolean\n    }\n}\n\nexport interface PostType {\n    postTypeId: number\n    postType: string\n}\n\nexport interface PostedByUser {\n    usesId: number\n    badgeName: string\n    following: boolean\n    profileImage: string\n    rescuer: boolean\n    userName: string\n}\n\nexport interface UserPost {\n    postId: number\n    commentsCount: number\n    isUserReactedToPost: boolean\n    ownPage: boolean\n    postBy: PostedByUser\n    postImage: string\n    postTime: string\n    postType: PostType\n    postVideo: string\n    reactionsCount: number\n    timeAgo: string\n\n    adCorporateLogoUrl: string | null\n    corporateDescription: string | null\n    corporateName: string | null\n}\n\nexport interface UserPosts {\n    isRecent: boolean\n    feed: UserPost[]\n}\n\nexport interface Rescues {\n    rescueId: number\n    animalImageUrl: string\n    distance: number\n    distanceAway: string\n    emergencyType: string\n    postedBy: string\n    postedMinAgo: string\n    rescueDate: Date\n    rescuedPetName: string\n    rescueLocality: string\n    rescuers: {\n        contact: number\n        name: string\n        profileId: number\n        profileImageUrl: string\n        rescues: boolean\n        showMyNumber: boolean\n    }\n    rescueStatus: string\n    viewsCont: number\n}\n\nexport interface RescueLists {\n    rescues: Rescues[]\n}\n\nexport interface Comment {\n    commentId: number\n    comment: string\n    commentedUseName: string\n    commentedUserId: number\n    timeAgo: string\n}\n\nexport interface Comments {\n    comments: Comment[]\n}\n\nexport interface Follower {\n    userId: number\n    userName: string\n    profileImage: string\n    areYouFollowing: boolean\n    showRemoveOption: boolean\n}\n\nexport interface Following extends Follower {}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Following.html":{"url":"interfaces/Following.html","title":"interface - Following","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Following\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/domain.ts\n        \n\n\n            \n                Extends\n            \n            \n                        Follower\n            \n\n\n\n\n    \n\n\n    \n        import { HttpStatus } from '@nestjs/common'\n\nexport type Result =\n    | GetAppLaunchData\n    | GetUserProfile\n    | GetUserPosts\n    | GetComments\n    | GetRescueList\n    | GetFollowers\n    | GetFollowing\n\nexport type APIError = Error | string | null\n\nexport interface APIResponse {\n    data: T\n    error: APIError\n    message: string | string[]\n    statusCode: HttpStatus\n\n    count?: number\n    page?: number\n    pageCount?: number\n    total?: number\n}\n\nexport interface GetAppLaunchData {\n    link: 'api:/'\n    response: APIResponse\n}\n\nexport interface GetUserProfile {\n    link: 'api:v1/user/getUserProfile?userId=25'\n    response: APIResponse\n}\n\nexport interface GetUserPosts {\n    link: 'api:v1/user/getUserPosts?pageNo=0&pageSize=25'\n    response: APIResponse\n}\n\nexport interface GetRescueList {\n    link: 'api:v1/rescue/getRescueList?pageNo=0&pageSize=10&status=pending|inProgress|completed|nearest'\n    response: APIResponse\n}\n\nexport interface GetComments {\n    link: 'api:v1/rescue/getComments?pageNo=0&pageSize=10&postId=1230'\n    response: APIResponse\n}\n\nexport interface GetFollowers {\n    link: 'api:v1/rescue/getUserFollowers?userId=1230'\n    response: APIResponse\n}\n\nexport interface GetFollowing {\n    link: 'api:v1/rescue/getUserFollowing?userId=1230'\n    response: APIResponse\n}\n\nexport interface AppLaunchAction {\n    actionId: number\n    action: string\n    isActive: boolean\n    subject?: string\n}\n\nexport interface User {\n    usesId: number\n\n    coverImage: string\n    following: boolean\n    gender: string\n    isOwnProfile: number\n    isRescuer: boolean\n    latitude: number\n    longitude: number\n    numberOfFollowers: number\n    numberOfFollowing: number\n    numberOfPosts: number\n    numberOfRescuesCompleted: number\n    numberOfRescuesCreated: number\n    numberOfRescuesInProgress: number\n    profileImage: string\n    rescuer: boolean\n    userAddress: string\n    userContacts: string\n    userEmail: string\n    userName: string\n    badge: {\n        badgeId: number\n        badgeName: string\n        badgeDescription: string\n        recuesCompletionNeeded: number\n    }\n    setting: {\n        showMyContacts: boolean\n        getNotifications: boolean\n    }\n}\n\nexport interface PostType {\n    postTypeId: number\n    postType: string\n}\n\nexport interface PostedByUser {\n    usesId: number\n    badgeName: string\n    following: boolean\n    profileImage: string\n    rescuer: boolean\n    userName: string\n}\n\nexport interface UserPost {\n    postId: number\n    commentsCount: number\n    isUserReactedToPost: boolean\n    ownPage: boolean\n    postBy: PostedByUser\n    postImage: string\n    postTime: string\n    postType: PostType\n    postVideo: string\n    reactionsCount: number\n    timeAgo: string\n\n    adCorporateLogoUrl: string | null\n    corporateDescription: string | null\n    corporateName: string | null\n}\n\nexport interface UserPosts {\n    isRecent: boolean\n    feed: UserPost[]\n}\n\nexport interface Rescues {\n    rescueId: number\n    animalImageUrl: string\n    distance: number\n    distanceAway: string\n    emergencyType: string\n    postedBy: string\n    postedMinAgo: string\n    rescueDate: Date\n    rescuedPetName: string\n    rescueLocality: string\n    rescuers: {\n        contact: number\n        name: string\n        profileId: number\n        profileImageUrl: string\n        rescues: boolean\n        showMyNumber: boolean\n    }\n    rescueStatus: string\n    viewsCont: number\n}\n\nexport interface RescueLists {\n    rescues: Rescues[]\n}\n\nexport interface Comment {\n    commentId: number\n    comment: string\n    commentedUseName: string\n    commentedUserId: number\n    timeAgo: string\n}\n\nexport interface Comments {\n    comments: Comment[]\n}\n\nexport interface Follower {\n    userId: number\n    userName: string\n    profileImage: string\n    areYouFollowing: boolean\n    showRemoveOption: boolean\n}\n\nexport interface Following extends Follower {}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/GetAppLaunchData.html":{"url":"interfaces/GetAppLaunchData.html","title":"interface - GetAppLaunchData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  GetAppLaunchData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/domain.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        link\n                                \n                                \n                                        response\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        link\n                                    \n                                \n                                \n                                    \n                                        link:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        response\n                                    \n                                \n                                \n                                    \n                                        response:         APIResponse\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         APIResponse\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { HttpStatus } from '@nestjs/common'\n\nexport type Result =\n    | GetAppLaunchData\n    | GetUserProfile\n    | GetUserPosts\n    | GetComments\n    | GetRescueList\n    | GetFollowers\n    | GetFollowing\n\nexport type APIError = Error | string | null\n\nexport interface APIResponse {\n    data: T\n    error: APIError\n    message: string | string[]\n    statusCode: HttpStatus\n\n    count?: number\n    page?: number\n    pageCount?: number\n    total?: number\n}\n\nexport interface GetAppLaunchData {\n    link: 'api:/'\n    response: APIResponse\n}\n\nexport interface GetUserProfile {\n    link: 'api:v1/user/getUserProfile?userId=25'\n    response: APIResponse\n}\n\nexport interface GetUserPosts {\n    link: 'api:v1/user/getUserPosts?pageNo=0&pageSize=25'\n    response: APIResponse\n}\n\nexport interface GetRescueList {\n    link: 'api:v1/rescue/getRescueList?pageNo=0&pageSize=10&status=pending|inProgress|completed|nearest'\n    response: APIResponse\n}\n\nexport interface GetComments {\n    link: 'api:v1/rescue/getComments?pageNo=0&pageSize=10&postId=1230'\n    response: APIResponse\n}\n\nexport interface GetFollowers {\n    link: 'api:v1/rescue/getUserFollowers?userId=1230'\n    response: APIResponse\n}\n\nexport interface GetFollowing {\n    link: 'api:v1/rescue/getUserFollowing?userId=1230'\n    response: APIResponse\n}\n\nexport interface AppLaunchAction {\n    actionId: number\n    action: string\n    isActive: boolean\n    subject?: string\n}\n\nexport interface User {\n    usesId: number\n\n    coverImage: string\n    following: boolean\n    gender: string\n    isOwnProfile: number\n    isRescuer: boolean\n    latitude: number\n    longitude: number\n    numberOfFollowers: number\n    numberOfFollowing: number\n    numberOfPosts: number\n    numberOfRescuesCompleted: number\n    numberOfRescuesCreated: number\n    numberOfRescuesInProgress: number\n    profileImage: string\n    rescuer: boolean\n    userAddress: string\n    userContacts: string\n    userEmail: string\n    userName: string\n    badge: {\n        badgeId: number\n        badgeName: string\n        badgeDescription: string\n        recuesCompletionNeeded: number\n    }\n    setting: {\n        showMyContacts: boolean\n        getNotifications: boolean\n    }\n}\n\nexport interface PostType {\n    postTypeId: number\n    postType: string\n}\n\nexport interface PostedByUser {\n    usesId: number\n    badgeName: string\n    following: boolean\n    profileImage: string\n    rescuer: boolean\n    userName: string\n}\n\nexport interface UserPost {\n    postId: number\n    commentsCount: number\n    isUserReactedToPost: boolean\n    ownPage: boolean\n    postBy: PostedByUser\n    postImage: string\n    postTime: string\n    postType: PostType\n    postVideo: string\n    reactionsCount: number\n    timeAgo: string\n\n    adCorporateLogoUrl: string | null\n    corporateDescription: string | null\n    corporateName: string | null\n}\n\nexport interface UserPosts {\n    isRecent: boolean\n    feed: UserPost[]\n}\n\nexport interface Rescues {\n    rescueId: number\n    animalImageUrl: string\n    distance: number\n    distanceAway: string\n    emergencyType: string\n    postedBy: string\n    postedMinAgo: string\n    rescueDate: Date\n    rescuedPetName: string\n    rescueLocality: string\n    rescuers: {\n        contact: number\n        name: string\n        profileId: number\n        profileImageUrl: string\n        rescues: boolean\n        showMyNumber: boolean\n    }\n    rescueStatus: string\n    viewsCont: number\n}\n\nexport interface RescueLists {\n    rescues: Rescues[]\n}\n\nexport interface Comment {\n    commentId: number\n    comment: string\n    commentedUseName: string\n    commentedUserId: number\n    timeAgo: string\n}\n\nexport interface Comments {\n    comments: Comment[]\n}\n\nexport interface Follower {\n    userId: number\n    userName: string\n    profileImage: string\n    areYouFollowing: boolean\n    showRemoveOption: boolean\n}\n\nexport interface Following extends Follower {}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/GetComments.html":{"url":"interfaces/GetComments.html","title":"interface - GetComments","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  GetComments\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/domain.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        link\n                                \n                                \n                                        response\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        link\n                                    \n                                \n                                \n                                    \n                                        link:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        response\n                                    \n                                \n                                \n                                    \n                                        response:         APIResponse\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         APIResponse\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { HttpStatus } from '@nestjs/common'\n\nexport type Result =\n    | GetAppLaunchData\n    | GetUserProfile\n    | GetUserPosts\n    | GetComments\n    | GetRescueList\n    | GetFollowers\n    | GetFollowing\n\nexport type APIError = Error | string | null\n\nexport interface APIResponse {\n    data: T\n    error: APIError\n    message: string | string[]\n    statusCode: HttpStatus\n\n    count?: number\n    page?: number\n    pageCount?: number\n    total?: number\n}\n\nexport interface GetAppLaunchData {\n    link: 'api:/'\n    response: APIResponse\n}\n\nexport interface GetUserProfile {\n    link: 'api:v1/user/getUserProfile?userId=25'\n    response: APIResponse\n}\n\nexport interface GetUserPosts {\n    link: 'api:v1/user/getUserPosts?pageNo=0&pageSize=25'\n    response: APIResponse\n}\n\nexport interface GetRescueList {\n    link: 'api:v1/rescue/getRescueList?pageNo=0&pageSize=10&status=pending|inProgress|completed|nearest'\n    response: APIResponse\n}\n\nexport interface GetComments {\n    link: 'api:v1/rescue/getComments?pageNo=0&pageSize=10&postId=1230'\n    response: APIResponse\n}\n\nexport interface GetFollowers {\n    link: 'api:v1/rescue/getUserFollowers?userId=1230'\n    response: APIResponse\n}\n\nexport interface GetFollowing {\n    link: 'api:v1/rescue/getUserFollowing?userId=1230'\n    response: APIResponse\n}\n\nexport interface AppLaunchAction {\n    actionId: number\n    action: string\n    isActive: boolean\n    subject?: string\n}\n\nexport interface User {\n    usesId: number\n\n    coverImage: string\n    following: boolean\n    gender: string\n    isOwnProfile: number\n    isRescuer: boolean\n    latitude: number\n    longitude: number\n    numberOfFollowers: number\n    numberOfFollowing: number\n    numberOfPosts: number\n    numberOfRescuesCompleted: number\n    numberOfRescuesCreated: number\n    numberOfRescuesInProgress: number\n    profileImage: string\n    rescuer: boolean\n    userAddress: string\n    userContacts: string\n    userEmail: string\n    userName: string\n    badge: {\n        badgeId: number\n        badgeName: string\n        badgeDescription: string\n        recuesCompletionNeeded: number\n    }\n    setting: {\n        showMyContacts: boolean\n        getNotifications: boolean\n    }\n}\n\nexport interface PostType {\n    postTypeId: number\n    postType: string\n}\n\nexport interface PostedByUser {\n    usesId: number\n    badgeName: string\n    following: boolean\n    profileImage: string\n    rescuer: boolean\n    userName: string\n}\n\nexport interface UserPost {\n    postId: number\n    commentsCount: number\n    isUserReactedToPost: boolean\n    ownPage: boolean\n    postBy: PostedByUser\n    postImage: string\n    postTime: string\n    postType: PostType\n    postVideo: string\n    reactionsCount: number\n    timeAgo: string\n\n    adCorporateLogoUrl: string | null\n    corporateDescription: string | null\n    corporateName: string | null\n}\n\nexport interface UserPosts {\n    isRecent: boolean\n    feed: UserPost[]\n}\n\nexport interface Rescues {\n    rescueId: number\n    animalImageUrl: string\n    distance: number\n    distanceAway: string\n    emergencyType: string\n    postedBy: string\n    postedMinAgo: string\n    rescueDate: Date\n    rescuedPetName: string\n    rescueLocality: string\n    rescuers: {\n        contact: number\n        name: string\n        profileId: number\n        profileImageUrl: string\n        rescues: boolean\n        showMyNumber: boolean\n    }\n    rescueStatus: string\n    viewsCont: number\n}\n\nexport interface RescueLists {\n    rescues: Rescues[]\n}\n\nexport interface Comment {\n    commentId: number\n    comment: string\n    commentedUseName: string\n    commentedUserId: number\n    timeAgo: string\n}\n\nexport interface Comments {\n    comments: Comment[]\n}\n\nexport interface Follower {\n    userId: number\n    userName: string\n    profileImage: string\n    areYouFollowing: boolean\n    showRemoveOption: boolean\n}\n\nexport interface Following extends Follower {}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/GetFollowers.html":{"url":"interfaces/GetFollowers.html","title":"interface - GetFollowers","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  GetFollowers\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/domain.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        link\n                                \n                                \n                                        response\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        link\n                                    \n                                \n                                \n                                    \n                                        link:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        response\n                                    \n                                \n                                \n                                    \n                                        response:         APIResponse\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         APIResponse\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { HttpStatus } from '@nestjs/common'\n\nexport type Result =\n    | GetAppLaunchData\n    | GetUserProfile\n    | GetUserPosts\n    | GetComments\n    | GetRescueList\n    | GetFollowers\n    | GetFollowing\n\nexport type APIError = Error | string | null\n\nexport interface APIResponse {\n    data: T\n    error: APIError\n    message: string | string[]\n    statusCode: HttpStatus\n\n    count?: number\n    page?: number\n    pageCount?: number\n    total?: number\n}\n\nexport interface GetAppLaunchData {\n    link: 'api:/'\n    response: APIResponse\n}\n\nexport interface GetUserProfile {\n    link: 'api:v1/user/getUserProfile?userId=25'\n    response: APIResponse\n}\n\nexport interface GetUserPosts {\n    link: 'api:v1/user/getUserPosts?pageNo=0&pageSize=25'\n    response: APIResponse\n}\n\nexport interface GetRescueList {\n    link: 'api:v1/rescue/getRescueList?pageNo=0&pageSize=10&status=pending|inProgress|completed|nearest'\n    response: APIResponse\n}\n\nexport interface GetComments {\n    link: 'api:v1/rescue/getComments?pageNo=0&pageSize=10&postId=1230'\n    response: APIResponse\n}\n\nexport interface GetFollowers {\n    link: 'api:v1/rescue/getUserFollowers?userId=1230'\n    response: APIResponse\n}\n\nexport interface GetFollowing {\n    link: 'api:v1/rescue/getUserFollowing?userId=1230'\n    response: APIResponse\n}\n\nexport interface AppLaunchAction {\n    actionId: number\n    action: string\n    isActive: boolean\n    subject?: string\n}\n\nexport interface User {\n    usesId: number\n\n    coverImage: string\n    following: boolean\n    gender: string\n    isOwnProfile: number\n    isRescuer: boolean\n    latitude: number\n    longitude: number\n    numberOfFollowers: number\n    numberOfFollowing: number\n    numberOfPosts: number\n    numberOfRescuesCompleted: number\n    numberOfRescuesCreated: number\n    numberOfRescuesInProgress: number\n    profileImage: string\n    rescuer: boolean\n    userAddress: string\n    userContacts: string\n    userEmail: string\n    userName: string\n    badge: {\n        badgeId: number\n        badgeName: string\n        badgeDescription: string\n        recuesCompletionNeeded: number\n    }\n    setting: {\n        showMyContacts: boolean\n        getNotifications: boolean\n    }\n}\n\nexport interface PostType {\n    postTypeId: number\n    postType: string\n}\n\nexport interface PostedByUser {\n    usesId: number\n    badgeName: string\n    following: boolean\n    profileImage: string\n    rescuer: boolean\n    userName: string\n}\n\nexport interface UserPost {\n    postId: number\n    commentsCount: number\n    isUserReactedToPost: boolean\n    ownPage: boolean\n    postBy: PostedByUser\n    postImage: string\n    postTime: string\n    postType: PostType\n    postVideo: string\n    reactionsCount: number\n    timeAgo: string\n\n    adCorporateLogoUrl: string | null\n    corporateDescription: string | null\n    corporateName: string | null\n}\n\nexport interface UserPosts {\n    isRecent: boolean\n    feed: UserPost[]\n}\n\nexport interface Rescues {\n    rescueId: number\n    animalImageUrl: string\n    distance: number\n    distanceAway: string\n    emergencyType: string\n    postedBy: string\n    postedMinAgo: string\n    rescueDate: Date\n    rescuedPetName: string\n    rescueLocality: string\n    rescuers: {\n        contact: number\n        name: string\n        profileId: number\n        profileImageUrl: string\n        rescues: boolean\n        showMyNumber: boolean\n    }\n    rescueStatus: string\n    viewsCont: number\n}\n\nexport interface RescueLists {\n    rescues: Rescues[]\n}\n\nexport interface Comment {\n    commentId: number\n    comment: string\n    commentedUseName: string\n    commentedUserId: number\n    timeAgo: string\n}\n\nexport interface Comments {\n    comments: Comment[]\n}\n\nexport interface Follower {\n    userId: number\n    userName: string\n    profileImage: string\n    areYouFollowing: boolean\n    showRemoveOption: boolean\n}\n\nexport interface Following extends Follower {}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/GetFollowing.html":{"url":"interfaces/GetFollowing.html","title":"interface - GetFollowing","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  GetFollowing\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/domain.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        link\n                                \n                                \n                                        response\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        link\n                                    \n                                \n                                \n                                    \n                                        link:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        response\n                                    \n                                \n                                \n                                    \n                                        response:         APIResponse\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         APIResponse\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { HttpStatus } from '@nestjs/common'\n\nexport type Result =\n    | GetAppLaunchData\n    | GetUserProfile\n    | GetUserPosts\n    | GetComments\n    | GetRescueList\n    | GetFollowers\n    | GetFollowing\n\nexport type APIError = Error | string | null\n\nexport interface APIResponse {\n    data: T\n    error: APIError\n    message: string | string[]\n    statusCode: HttpStatus\n\n    count?: number\n    page?: number\n    pageCount?: number\n    total?: number\n}\n\nexport interface GetAppLaunchData {\n    link: 'api:/'\n    response: APIResponse\n}\n\nexport interface GetUserProfile {\n    link: 'api:v1/user/getUserProfile?userId=25'\n    response: APIResponse\n}\n\nexport interface GetUserPosts {\n    link: 'api:v1/user/getUserPosts?pageNo=0&pageSize=25'\n    response: APIResponse\n}\n\nexport interface GetRescueList {\n    link: 'api:v1/rescue/getRescueList?pageNo=0&pageSize=10&status=pending|inProgress|completed|nearest'\n    response: APIResponse\n}\n\nexport interface GetComments {\n    link: 'api:v1/rescue/getComments?pageNo=0&pageSize=10&postId=1230'\n    response: APIResponse\n}\n\nexport interface GetFollowers {\n    link: 'api:v1/rescue/getUserFollowers?userId=1230'\n    response: APIResponse\n}\n\nexport interface GetFollowing {\n    link: 'api:v1/rescue/getUserFollowing?userId=1230'\n    response: APIResponse\n}\n\nexport interface AppLaunchAction {\n    actionId: number\n    action: string\n    isActive: boolean\n    subject?: string\n}\n\nexport interface User {\n    usesId: number\n\n    coverImage: string\n    following: boolean\n    gender: string\n    isOwnProfile: number\n    isRescuer: boolean\n    latitude: number\n    longitude: number\n    numberOfFollowers: number\n    numberOfFollowing: number\n    numberOfPosts: number\n    numberOfRescuesCompleted: number\n    numberOfRescuesCreated: number\n    numberOfRescuesInProgress: number\n    profileImage: string\n    rescuer: boolean\n    userAddress: string\n    userContacts: string\n    userEmail: string\n    userName: string\n    badge: {\n        badgeId: number\n        badgeName: string\n        badgeDescription: string\n        recuesCompletionNeeded: number\n    }\n    setting: {\n        showMyContacts: boolean\n        getNotifications: boolean\n    }\n}\n\nexport interface PostType {\n    postTypeId: number\n    postType: string\n}\n\nexport interface PostedByUser {\n    usesId: number\n    badgeName: string\n    following: boolean\n    profileImage: string\n    rescuer: boolean\n    userName: string\n}\n\nexport interface UserPost {\n    postId: number\n    commentsCount: number\n    isUserReactedToPost: boolean\n    ownPage: boolean\n    postBy: PostedByUser\n    postImage: string\n    postTime: string\n    postType: PostType\n    postVideo: string\n    reactionsCount: number\n    timeAgo: string\n\n    adCorporateLogoUrl: string | null\n    corporateDescription: string | null\n    corporateName: string | null\n}\n\nexport interface UserPosts {\n    isRecent: boolean\n    feed: UserPost[]\n}\n\nexport interface Rescues {\n    rescueId: number\n    animalImageUrl: string\n    distance: number\n    distanceAway: string\n    emergencyType: string\n    postedBy: string\n    postedMinAgo: string\n    rescueDate: Date\n    rescuedPetName: string\n    rescueLocality: string\n    rescuers: {\n        contact: number\n        name: string\n        profileId: number\n        profileImageUrl: string\n        rescues: boolean\n        showMyNumber: boolean\n    }\n    rescueStatus: string\n    viewsCont: number\n}\n\nexport interface RescueLists {\n    rescues: Rescues[]\n}\n\nexport interface Comment {\n    commentId: number\n    comment: string\n    commentedUseName: string\n    commentedUserId: number\n    timeAgo: string\n}\n\nexport interface Comments {\n    comments: Comment[]\n}\n\nexport interface Follower {\n    userId: number\n    userName: string\n    profileImage: string\n    areYouFollowing: boolean\n    showRemoveOption: boolean\n}\n\nexport interface Following extends Follower {}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/GetManyDefaultResponse.html":{"url":"interfaces/GetManyDefaultResponse.html","title":"interface - GetManyDefaultResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  GetManyDefaultResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/base/swagger-gen/utils/other.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        count\n                                \n                                \n                                        data\n                                \n                                \n                                        page\n                                \n                                \n                                        pageCount\n                                \n                                \n                                        total\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        count\n                                    \n                                \n                                \n                                    \n                                        count:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                    \n                                \n                                \n                                    \n                                        data:     T[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     T[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        page\n                                    \n                                \n                                \n                                    \n                                        page:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pageCount\n                                    \n                                \n                                \n                                    \n                                        pageCount:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        total\n                                    \n                                \n                                \n                                    \n                                        total:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ValidationPipeOptions } from '@nestjs/common'\nimport { SwaggerEnumType } from '@nestjs/swagger/dist/types/swagger-enum.type'\n\nexport declare type BaseRouteName =\n    | 'getManyBase'\n    | 'getOneBase'\n    | 'createOneBase'\n    | 'createManyBase'\n    | 'updateOneBase'\n    | 'replaceOneBase'\n    | 'deleteOneBase'\n\nexport interface GetManyDefaultResponse {\n    data: T[]\n    count: number\n    total: number\n    page: number\n    pageCount: number\n}\n\nexport interface ParamOption {\n    field?: string\n    type?: 'number' | 'string' | 'uuid'\n    enum?: SwaggerEnumType\n    primary?: boolean\n    disabled?: boolean\n}\n\nexport interface ParamsOptions {\n    [key: string]: ParamOption\n}\n\nexport interface CrudOptions {\n    model: {}\n    dto?: {}\n    routes?: {}\n    validation?: ValidationPipeOptions | false\n    params?: ParamsOptions\n    query?: {\n        limit?: number\n        maxLimit?: number\n        cache?: number | false\n        alwaysPaginate?: boolean\n    }\n    serialize?: {\n        getMany?: false\n        get?: false\n        create?: false\n        createMany?: false\n        update?: false\n        replace?: false\n        delete?: false\n    }\n}\n\nexport function safeRequire(path: string): T | null {\n    try {\n        // eslint-disable-next-line global-require,@typescript-eslint/no-var-requires,import/no-dynamic-require\n        const pack = require(path)\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-return\n        return pack\n    } catch (_) {\n        return null\n    }\n}\n\nexport const swagger = safeRequire('@nestjs/swagger')\nexport const swaggerConst = safeRequire('@nestjs/swagger/dist/constants')\n\nexport function ApiProperty(options?: any): PropertyDecorator {\n    // eslint-disable-next-line @typescript-eslint/ban-types\n    return (target: object, propertyKey: string | symbol) => {\n        if (swagger) {\n            const ApiPropertyDecorator =\n                // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n                swagger.ApiProperty || swagger.ApiModelProperty\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-call\n            ApiPropertyDecorator(options)(target, propertyKey)\n        }\n    }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/GetRescueList.html":{"url":"interfaces/GetRescueList.html","title":"interface - GetRescueList","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  GetRescueList\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/domain.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        link\n                                \n                                \n                                        response\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        link\n                                    \n                                \n                                \n                                    \n                                        link:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        response\n                                    \n                                \n                                \n                                    \n                                        response:         APIResponse\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         APIResponse\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { HttpStatus } from '@nestjs/common'\n\nexport type Result =\n    | GetAppLaunchData\n    | GetUserProfile\n    | GetUserPosts\n    | GetComments\n    | GetRescueList\n    | GetFollowers\n    | GetFollowing\n\nexport type APIError = Error | string | null\n\nexport interface APIResponse {\n    data: T\n    error: APIError\n    message: string | string[]\n    statusCode: HttpStatus\n\n    count?: number\n    page?: number\n    pageCount?: number\n    total?: number\n}\n\nexport interface GetAppLaunchData {\n    link: 'api:/'\n    response: APIResponse\n}\n\nexport interface GetUserProfile {\n    link: 'api:v1/user/getUserProfile?userId=25'\n    response: APIResponse\n}\n\nexport interface GetUserPosts {\n    link: 'api:v1/user/getUserPosts?pageNo=0&pageSize=25'\n    response: APIResponse\n}\n\nexport interface GetRescueList {\n    link: 'api:v1/rescue/getRescueList?pageNo=0&pageSize=10&status=pending|inProgress|completed|nearest'\n    response: APIResponse\n}\n\nexport interface GetComments {\n    link: 'api:v1/rescue/getComments?pageNo=0&pageSize=10&postId=1230'\n    response: APIResponse\n}\n\nexport interface GetFollowers {\n    link: 'api:v1/rescue/getUserFollowers?userId=1230'\n    response: APIResponse\n}\n\nexport interface GetFollowing {\n    link: 'api:v1/rescue/getUserFollowing?userId=1230'\n    response: APIResponse\n}\n\nexport interface AppLaunchAction {\n    actionId: number\n    action: string\n    isActive: boolean\n    subject?: string\n}\n\nexport interface User {\n    usesId: number\n\n    coverImage: string\n    following: boolean\n    gender: string\n    isOwnProfile: number\n    isRescuer: boolean\n    latitude: number\n    longitude: number\n    numberOfFollowers: number\n    numberOfFollowing: number\n    numberOfPosts: number\n    numberOfRescuesCompleted: number\n    numberOfRescuesCreated: number\n    numberOfRescuesInProgress: number\n    profileImage: string\n    rescuer: boolean\n    userAddress: string\n    userContacts: string\n    userEmail: string\n    userName: string\n    badge: {\n        badgeId: number\n        badgeName: string\n        badgeDescription: string\n        recuesCompletionNeeded: number\n    }\n    setting: {\n        showMyContacts: boolean\n        getNotifications: boolean\n    }\n}\n\nexport interface PostType {\n    postTypeId: number\n    postType: string\n}\n\nexport interface PostedByUser {\n    usesId: number\n    badgeName: string\n    following: boolean\n    profileImage: string\n    rescuer: boolean\n    userName: string\n}\n\nexport interface UserPost {\n    postId: number\n    commentsCount: number\n    isUserReactedToPost: boolean\n    ownPage: boolean\n    postBy: PostedByUser\n    postImage: string\n    postTime: string\n    postType: PostType\n    postVideo: string\n    reactionsCount: number\n    timeAgo: string\n\n    adCorporateLogoUrl: string | null\n    corporateDescription: string | null\n    corporateName: string | null\n}\n\nexport interface UserPosts {\n    isRecent: boolean\n    feed: UserPost[]\n}\n\nexport interface Rescues {\n    rescueId: number\n    animalImageUrl: string\n    distance: number\n    distanceAway: string\n    emergencyType: string\n    postedBy: string\n    postedMinAgo: string\n    rescueDate: Date\n    rescuedPetName: string\n    rescueLocality: string\n    rescuers: {\n        contact: number\n        name: string\n        profileId: number\n        profileImageUrl: string\n        rescues: boolean\n        showMyNumber: boolean\n    }\n    rescueStatus: string\n    viewsCont: number\n}\n\nexport interface RescueLists {\n    rescues: Rescues[]\n}\n\nexport interface Comment {\n    commentId: number\n    comment: string\n    commentedUseName: string\n    commentedUserId: number\n    timeAgo: string\n}\n\nexport interface Comments {\n    comments: Comment[]\n}\n\nexport interface Follower {\n    userId: number\n    userName: string\n    profileImage: string\n    areYouFollowing: boolean\n    showRemoveOption: boolean\n}\n\nexport interface Following extends Follower {}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/GetUserPosts.html":{"url":"interfaces/GetUserPosts.html","title":"interface - GetUserPosts","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  GetUserPosts\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/domain.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        link\n                                \n                                \n                                        response\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        link\n                                    \n                                \n                                \n                                    \n                                        link:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        response\n                                    \n                                \n                                \n                                    \n                                        response:     APIResponse\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     APIResponse\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { HttpStatus } from '@nestjs/common'\n\nexport type Result =\n    | GetAppLaunchData\n    | GetUserProfile\n    | GetUserPosts\n    | GetComments\n    | GetRescueList\n    | GetFollowers\n    | GetFollowing\n\nexport type APIError = Error | string | null\n\nexport interface APIResponse {\n    data: T\n    error: APIError\n    message: string | string[]\n    statusCode: HttpStatus\n\n    count?: number\n    page?: number\n    pageCount?: number\n    total?: number\n}\n\nexport interface GetAppLaunchData {\n    link: 'api:/'\n    response: APIResponse\n}\n\nexport interface GetUserProfile {\n    link: 'api:v1/user/getUserProfile?userId=25'\n    response: APIResponse\n}\n\nexport interface GetUserPosts {\n    link: 'api:v1/user/getUserPosts?pageNo=0&pageSize=25'\n    response: APIResponse\n}\n\nexport interface GetRescueList {\n    link: 'api:v1/rescue/getRescueList?pageNo=0&pageSize=10&status=pending|inProgress|completed|nearest'\n    response: APIResponse\n}\n\nexport interface GetComments {\n    link: 'api:v1/rescue/getComments?pageNo=0&pageSize=10&postId=1230'\n    response: APIResponse\n}\n\nexport interface GetFollowers {\n    link: 'api:v1/rescue/getUserFollowers?userId=1230'\n    response: APIResponse\n}\n\nexport interface GetFollowing {\n    link: 'api:v1/rescue/getUserFollowing?userId=1230'\n    response: APIResponse\n}\n\nexport interface AppLaunchAction {\n    actionId: number\n    action: string\n    isActive: boolean\n    subject?: string\n}\n\nexport interface User {\n    usesId: number\n\n    coverImage: string\n    following: boolean\n    gender: string\n    isOwnProfile: number\n    isRescuer: boolean\n    latitude: number\n    longitude: number\n    numberOfFollowers: number\n    numberOfFollowing: number\n    numberOfPosts: number\n    numberOfRescuesCompleted: number\n    numberOfRescuesCreated: number\n    numberOfRescuesInProgress: number\n    profileImage: string\n    rescuer: boolean\n    userAddress: string\n    userContacts: string\n    userEmail: string\n    userName: string\n    badge: {\n        badgeId: number\n        badgeName: string\n        badgeDescription: string\n        recuesCompletionNeeded: number\n    }\n    setting: {\n        showMyContacts: boolean\n        getNotifications: boolean\n    }\n}\n\nexport interface PostType {\n    postTypeId: number\n    postType: string\n}\n\nexport interface PostedByUser {\n    usesId: number\n    badgeName: string\n    following: boolean\n    profileImage: string\n    rescuer: boolean\n    userName: string\n}\n\nexport interface UserPost {\n    postId: number\n    commentsCount: number\n    isUserReactedToPost: boolean\n    ownPage: boolean\n    postBy: PostedByUser\n    postImage: string\n    postTime: string\n    postType: PostType\n    postVideo: string\n    reactionsCount: number\n    timeAgo: string\n\n    adCorporateLogoUrl: string | null\n    corporateDescription: string | null\n    corporateName: string | null\n}\n\nexport interface UserPosts {\n    isRecent: boolean\n    feed: UserPost[]\n}\n\nexport interface Rescues {\n    rescueId: number\n    animalImageUrl: string\n    distance: number\n    distanceAway: string\n    emergencyType: string\n    postedBy: string\n    postedMinAgo: string\n    rescueDate: Date\n    rescuedPetName: string\n    rescueLocality: string\n    rescuers: {\n        contact: number\n        name: string\n        profileId: number\n        profileImageUrl: string\n        rescues: boolean\n        showMyNumber: boolean\n    }\n    rescueStatus: string\n    viewsCont: number\n}\n\nexport interface RescueLists {\n    rescues: Rescues[]\n}\n\nexport interface Comment {\n    commentId: number\n    comment: string\n    commentedUseName: string\n    commentedUserId: number\n    timeAgo: string\n}\n\nexport interface Comments {\n    comments: Comment[]\n}\n\nexport interface Follower {\n    userId: number\n    userName: string\n    profileImage: string\n    areYouFollowing: boolean\n    showRemoveOption: boolean\n}\n\nexport interface Following extends Follower {}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/GetUserProfile.html":{"url":"interfaces/GetUserProfile.html","title":"interface - GetUserProfile","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  GetUserProfile\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/domain.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        link\n                                \n                                \n                                        response\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        link\n                                    \n                                \n                                \n                                    \n                                        link:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        response\n                                    \n                                \n                                \n                                    \n                                        response:     APIResponse\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     APIResponse\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { HttpStatus } from '@nestjs/common'\n\nexport type Result =\n    | GetAppLaunchData\n    | GetUserProfile\n    | GetUserPosts\n    | GetComments\n    | GetRescueList\n    | GetFollowers\n    | GetFollowing\n\nexport type APIError = Error | string | null\n\nexport interface APIResponse {\n    data: T\n    error: APIError\n    message: string | string[]\n    statusCode: HttpStatus\n\n    count?: number\n    page?: number\n    pageCount?: number\n    total?: number\n}\n\nexport interface GetAppLaunchData {\n    link: 'api:/'\n    response: APIResponse\n}\n\nexport interface GetUserProfile {\n    link: 'api:v1/user/getUserProfile?userId=25'\n    response: APIResponse\n}\n\nexport interface GetUserPosts {\n    link: 'api:v1/user/getUserPosts?pageNo=0&pageSize=25'\n    response: APIResponse\n}\n\nexport interface GetRescueList {\n    link: 'api:v1/rescue/getRescueList?pageNo=0&pageSize=10&status=pending|inProgress|completed|nearest'\n    response: APIResponse\n}\n\nexport interface GetComments {\n    link: 'api:v1/rescue/getComments?pageNo=0&pageSize=10&postId=1230'\n    response: APIResponse\n}\n\nexport interface GetFollowers {\n    link: 'api:v1/rescue/getUserFollowers?userId=1230'\n    response: APIResponse\n}\n\nexport interface GetFollowing {\n    link: 'api:v1/rescue/getUserFollowing?userId=1230'\n    response: APIResponse\n}\n\nexport interface AppLaunchAction {\n    actionId: number\n    action: string\n    isActive: boolean\n    subject?: string\n}\n\nexport interface User {\n    usesId: number\n\n    coverImage: string\n    following: boolean\n    gender: string\n    isOwnProfile: number\n    isRescuer: boolean\n    latitude: number\n    longitude: number\n    numberOfFollowers: number\n    numberOfFollowing: number\n    numberOfPosts: number\n    numberOfRescuesCompleted: number\n    numberOfRescuesCreated: number\n    numberOfRescuesInProgress: number\n    profileImage: string\n    rescuer: boolean\n    userAddress: string\n    userContacts: string\n    userEmail: string\n    userName: string\n    badge: {\n        badgeId: number\n        badgeName: string\n        badgeDescription: string\n        recuesCompletionNeeded: number\n    }\n    setting: {\n        showMyContacts: boolean\n        getNotifications: boolean\n    }\n}\n\nexport interface PostType {\n    postTypeId: number\n    postType: string\n}\n\nexport interface PostedByUser {\n    usesId: number\n    badgeName: string\n    following: boolean\n    profileImage: string\n    rescuer: boolean\n    userName: string\n}\n\nexport interface UserPost {\n    postId: number\n    commentsCount: number\n    isUserReactedToPost: boolean\n    ownPage: boolean\n    postBy: PostedByUser\n    postImage: string\n    postTime: string\n    postType: PostType\n    postVideo: string\n    reactionsCount: number\n    timeAgo: string\n\n    adCorporateLogoUrl: string | null\n    corporateDescription: string | null\n    corporateName: string | null\n}\n\nexport interface UserPosts {\n    isRecent: boolean\n    feed: UserPost[]\n}\n\nexport interface Rescues {\n    rescueId: number\n    animalImageUrl: string\n    distance: number\n    distanceAway: string\n    emergencyType: string\n    postedBy: string\n    postedMinAgo: string\n    rescueDate: Date\n    rescuedPetName: string\n    rescueLocality: string\n    rescuers: {\n        contact: number\n        name: string\n        profileId: number\n        profileImageUrl: string\n        rescues: boolean\n        showMyNumber: boolean\n    }\n    rescueStatus: string\n    viewsCont: number\n}\n\nexport interface RescueLists {\n    rescues: Rescues[]\n}\n\nexport interface Comment {\n    commentId: number\n    comment: string\n    commentedUseName: string\n    commentedUserId: number\n    timeAgo: string\n}\n\nexport interface Comments {\n    comments: Comment[]\n}\n\nexport interface Follower {\n    userId: number\n    userName: string\n    profileImage: string\n    areYouFollowing: boolean\n    showRemoveOption: boolean\n}\n\nexport interface Following extends Follower {}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/HealthController.html":{"url":"controllers/HealthController.html","title":"controller - HealthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  HealthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/health/health.controller.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                check\n                            \n                            \n                                collectOsMetrics\n                            \n                            \n                                onApplicationShutdown\n                            \n                            \n                                onModuleInit\n                            \n                            \n                                sse\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            check\n                        \n                        \n                    \n                \n            \n            \n                \ncheck()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@HttpCode(200)@HealthCheck()\n                \n            \n\n            \n                \n                    Defined in src/health/health.controller.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            collectOsMetrics\n                        \n                        \n                    \n                \n            \n            \n                \ncollectOsMetrics(metrics)\n                \n            \n\n\n            \n                \n                    Defined in src/health/health.controller.ts:61\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    metrics\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onApplicationShutdown\n                        \n                        \n                    \n                \n            \n            \n                \nonApplicationShutdown(signal?: string)\n                \n            \n\n\n            \n                \n                    Defined in src/health/health.controller.ts:81\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    signal\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onModuleInit\n                        \n                        \n                    \n                \n            \n            \n                \nonModuleInit()\n                \n            \n\n\n            \n                \n                    Defined in src/health/health.controller.ts:75\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            sse\n                        \n                        \n                    \n                \n            \n            \n                \nsse()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Sse('sse')\n                \n            \n\n            \n                \n                    Defined in src/health/health.controller.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        /* eslint-disable no-use-before-define */\nimport {\n    Controller,\n    Get,\n    HttpCode,\n    OnApplicationShutdown,\n    OnModuleInit,\n    MessageEvent,\n    Sse,\n} from '@nestjs/common'\nimport { ConfigService } from '@nestjs/config'\nimport { ApiTags } from '@nestjs/swagger'\nimport {\n    DNSHealthIndicator,\n    HealthCheck,\n    HealthCheckService,\n} from '@nestjs/terminus'\n\nimport * as os from 'os'\nimport * as pidusage from 'pidusage'\nimport { interval, Observable } from 'rxjs'\nimport { map } from 'rxjs/operators'\n\n@ApiTags(HealthController.name)\n@Controller(HealthController.path)\nexport class HealthController implements OnModuleInit, OnApplicationShutdown {\n    static path = 'health'\n\n    constructor(\n        private health: HealthCheckService,\n        private dns: DNSHealthIndicator,\n        private config: ConfigService,\n    ) {}\n\n    @Sse('sse')\n    sse(): Observable {\n        const metrics = {\n            os: {},\n            interval: 1, // Every 1 second\n            retention: 60, // Keep 60 datapoints in memory\n        }\n\n        return interval(5000).pipe(\n            map((_) => {\n                this.collectOsMetrics(metrics)\n\n                return { data: metrics }\n            }),\n        )\n    }\n\n    @Get()\n    @HttpCode(200)\n    @HealthCheck()\n    check() {\n        return this.health.check([\n            () => this.dns.pingCheck('nestjs-docs', 'https://docs.nestjs.com'),\n        ])\n    }\n\n    collectOsMetrics(metrics) {\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-call\n        pidusage(process.pid, (err, stat) => {\n            if (err) return\n\n            // Convert from B to MB\n            stat.memory = stat.memory / 1024 / 1024 // eslint-disable-line @typescript-eslint/no-unsafe-member-access,no-param-reassign\n            stat.timestamp = Date.now() // eslint-disable-line @typescript-eslint/no-unsafe-member-access,no-param-reassign\n            stat.load = os.loadavg() // eslint-disable-line @typescript-eslint/no-unsafe-member-access,no-param-reassign\n\n            metrics.os = stat // eslint-disable-line @typescript-eslint/no-unsafe-member-access,no-param-reassign\n        })\n    }\n\n    onModuleInit() {\n        console.log(`ModuleInit - HealthController has been initialized.`, {\n            config: this.config.get('NODE_ENV'),\n        })\n    }\n\n    onApplicationShutdown(signal?: string) {\n        console.log(\n            `ApplicationShutdown - HealthController has been shutdown with ${signal} signal`,\n        )\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IBaseModel.html":{"url":"interfaces/IBaseModel.html","title":"interface - IBaseModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IBaseModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/database/models/base.model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        created_at\n                                \n                                \n                                            Optional\n                                        deleted_at\n                                \n                                \n                                        id\n                                \n                                \n                                        updated_at\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        created_at\n                                    \n                                \n                                \n                                    \n                                        created_at:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        deleted_at\n                                    \n                                \n                                \n                                    \n                                        deleted_at:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        updated_at\n                                    \n                                \n                                \n                                    \n                                        updated_at:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ApiProperty, ApiPropertyOptional } from '@nestjs/swagger'\n\nimport {\n    fn,\n    mixin,\n    Model,\n    ModelOptions,\n    QueryContext,\n    RelationExpression,\n} from 'objection'\nimport { DBErrors } from 'objection-db-errors'\nimport visibilityPlugin from 'objection-visibility'\n\nimport { CustomQueryBuilder } from './helpers'\n\nexport interface IBaseModel {\n    id: number\n    created_at: any\n    updated_at: any\n    deleted_at?: any\n}\n\nexport class BaseModel\n    extends mixin(Model, [visibilityPlugin, DBErrors])\n    implements IBaseModel {\n    static hidden = ['salt', 'password', 'created_at', 'updated_at', 'deleted_at'] // hidden fields to filter from query result\n\n    QueryBuilderType!: CustomQueryBuilder // custom query builder for pagination\n\n    static QueryBuilder = CustomQueryBuilder\n\n    @ApiProperty() id: number\n\n    created_at: any\n\n    updated_at: any\n\n    deleted_at?: any | null\n\n    // fetch data with relation mapping\n    async fetchRelation(expression: RelationExpression, options = {}) {\n        if (this[expression.toString()]) return this\n\n        await this.$fetchGraph(expression, options)\n        return this\n    }\n\n    /*\n    async $beforeUpdate(opt: ModelOptions, queryContext: QueryContext) {\n        await super.$beforeUpdate(opt, queryContext)\n\n        this.updated_at = new Date().toISOString() // fn.now()\n    }\n\n    async $beforeInsert(queryContext: QueryContext) {\n        await super.$beforeInsert(queryContext)\n\n        const date = fn.now() // new Date().toISOString()\n\n        this.created_at = date\n        this.updated_at = date\n    }\n    */\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ICrudService.html":{"url":"interfaces/ICrudService.html","title":"interface - ICrudService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ICrudService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/base/crud/crud.service.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    findAll\n                                \n                                \n                                    findOne\n                                \n                                \n                                    paginatedFindAll\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            findAll\n                        \n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n\n            \n                \n                    Defined in src/base/crud/crud.service.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            findOne\n                        \n                        \n                    \n                \n            \n            \n                \nfindOne(id: string | number)\n                \n            \n\n\n            \n                \n                    Defined in src/base/crud/crud.service.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                            string | number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            paginatedFindAll\n                        \n                        \n                    \n                \n            \n            \n                \npaginatedFindAll(filter?: PaginationParams)\n                \n            \n\n\n            \n                \n                    Defined in src/base/crud/crud.service.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                                PaginationParams\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { InternalServerErrorException } from '@nestjs/common'\n\nimport { NotFoundError, ModelClass } from 'objection'\n\nimport { BaseModel } from '../../database/models/base.model'\nimport { IPagination, PaginationParams } from './pagination'\n\nexport interface ICrudService {\n    findAll(): Promise\n\n    findOne(id: string | number): Promise\n\n    paginatedFindAll(filter?: PaginationParams): Promise>\n}\n\n/**\n * Abstract base service that other services can extend to provide base CRUD\n * functionality such as to create, find, update and delete data.\n */\nexport abstract class CrudService implements ICrudService {\n    saltRounds: number\n\n    /**\n     * The constructor must receive the injected model from the child service in\n     * order to provide all the proper base functionality.\n     *\n     * @param {Model} model - The injected model.\n     */\n    protected constructor(protected readonly model: ModelClass) {\n        this.saltRounds = 12\n    }\n\n    /**\n     * Finds all entries and return the result\n     *\n     * @throws InternalServerErrorException\n     */\n    async findAll() {\n        try {\n            return (this.model.query() as unknown) as Promise\n        } catch (e) {\n            throw new InternalServerErrorException()\n        }\n    }\n\n    /**\n     * Finds paginated entries and return the result\n     *\n     * @throws InternalServerErrorException\n     */\n    async paginatedFindAll(filter: PaginationParams) {\n        const { page = 0, pageSize = 10, order } = filter\n\n        try {\n            const { results, total } = await this.model.query().page(page, pageSize)\n\n            return ({\n                data: results,\n                paging: {\n                    pageSize,\n                    page,\n                    total,\n                    totalPages: Math.ceil(total / pageSize),\n                },\n            } as unknown) as Promise>\n        } catch (e) {\n            throw new InternalServerErrorException()\n        }\n    }\n\n    /**\n     * Finds paginated entries and return the result\n     *\n     * @throws NotFoundError\n     */\n    async findOne(id: string | number): Promise {\n        return (this.model\n            .query()\n            .findById(id)\n            .first()\n            .throwIfNotFound() as unknown) as Promise\n    }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IPagination.html":{"url":"interfaces/IPagination.html","title":"interface - IPagination","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IPagination\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/base/crud/pagination.ts\n        \n\n            \n                Description\n            \n            \n                Generic pagination response interface\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        data\n                                \n                                \n                                        paging\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                    \n                                \n                                \n                                    \n                                        data:     T[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     T[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Items included in the current listing\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        paging\n                                    \n                                \n                                \n                                    \n                                        paging:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Paging metadata\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { ApiPropertyOptional } from '@nestjs/swagger'\n\nimport { Transform } from 'class-transformer'\nimport { IsOptional, Min } from 'class-validator'\n\nexport enum OrderType {\n    DESC = 'DESC',\n    ASC = 'ASC',\n}\n\n/**\n * Describes generic pagination params\n */\nexport abstract class PaginationParams {\n    /**\n     * Page\n     */\n    @ApiPropertyOptional({ type: Number, minimum: 0 })\n    @IsOptional()\n    @Min(0)\n    @Transform((val: string) => parseInt(val, 10))\n    readonly page = 0\n\n    /**\n     * Page Size\n     */\n    @ApiPropertyOptional({ type: Number, minimum: 0 })\n    @IsOptional()\n    @Min(0)\n    @Transform((val: string) => parseInt(val, 10))\n    readonly pageSize = 10\n\n    /**\n     * OrderBy\n     */\n    @ApiPropertyOptional()\n    @IsOptional()\n    abstract readonly order?: { [P in keyof T]?: OrderType }\n}\n\n/**\n * Generic pagination response interface\n */\nexport interface IPagination {\n    /**\n     * Items included in the current listing\n     */\n    readonly data: T[]\n\n    /**\n     * Paging metadata\n     */\n    readonly paging: {\n        pageSize: number\n        page: number\n        total: number\n        totalPages: number\n    }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ITag.html":{"url":"interfaces/ITag.html","title":"interface - ITag","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ITag\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/tags/tag.model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        name\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { PartialType as MappedPartialType } from '@nestjs/mapped-types'\nimport { ApiProperty, PartialType } from '@nestjs/swagger'\n\nimport { IsNotEmpty, IsString, MaxLength, MinLength } from 'class-validator'\nimport type { JSONSchema } from 'objection'\n\nimport { BaseModel } from '../database/models/base.model'\n\ninterface ITag {\n    name: string\n}\n\nexport class Tag extends BaseModel implements ITag {\n    static tableName = 'tags'\n\n    @ApiProperty() name: string\n\n    // JSON schema is not the database schema! Nothing is generated based on this.\n    // This is only used for validation. Whenever a model instance is created it is checked against this schema.\n    static jsonSchema: JSONSchema = {\n        type: 'object',\n        required: ['name'],\n        properties: {\n            id: { type: 'integer' },\n            name: { type: 'string', minLength: 2, maxLength: 255 },\n        },\n    }\n}\n\nexport class CreateTagsDto implements ITag {\n    @ApiProperty()\n    @IsString()\n    @IsNotEmpty()\n    @MinLength(2)\n    @MaxLength(36)\n    name: string\n}\n\nexport class UpdateTagsDto extends PartialType(CreateTagsDto) {}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ITryRequest.html":{"url":"interfaces/ITryRequest.html","title":"interface - ITryRequest","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ITryRequest\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/base/crud/try-request.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        error\n                                \n                                \n                                            Optional\n                                        record\n                                \n                                \n                                        success\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        error\n                                    \n                                \n                                \n                                    \n                                        error:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        record\n                                    \n                                \n                                \n                                    \n                                        record:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        success\n                                    \n                                \n                                \n                                    \n                                        success:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface ITryRequest {\n    success: boolean\n    record?: any\n    error?: any\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IUser.html":{"url":"interfaces/IUser.html","title":"interface - IUser","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IUser\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/user.model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        email\n                                \n                                \n                                        firstName\n                                \n                                \n                                        isActive\n                                \n                                \n                                        lastName\n                                \n                                \n                                        password\n                                \n                                \n                                        username\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        firstName\n                                    \n                                \n                                \n                                    \n                                        firstName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isActive\n                                    \n                                \n                                \n                                    \n                                        isActive:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lastName\n                                    \n                                \n                                \n                                    \n                                        lastName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                    \n                                \n                                \n                                    \n                                        password:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        username\n                                    \n                                \n                                \n                                    \n                                        username:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { PartialType as MappedPartialType } from '@nestjs/mapped-types'\nimport { ApiProperty, PartialType } from '@nestjs/swagger'\n\nimport {\n    IsString,\n    MinLength,\n    IsNotEmpty,\n    IsOptional,\n    MaxLength,\n    IsEmail,\n    IsBoolean,\n} from 'class-validator'\nimport type { JSONSchema, Modifiers } from 'objection'\n\nimport { BaseModel } from '../database/models/base.model'\n\ninterface IUser {\n    username: string\n    email: string\n    firstName: string\n    lastName: string\n    isActive: boolean\n    password: string\n}\n\nexport class User extends BaseModel implements IUser {\n    static tableName = 'users'\n\n    username: string\n\n    email: string\n\n    firstName: string\n\n    lastName: string\n\n    isActive: boolean\n\n    password: string\n\n    // JSON schema is not the database schema! Nothing is generated based on this.\n    // This is only used for validation. Whenever a model instance is created it is checked against this schema.\n    static jsonSchema: JSONSchema = {\n        type: 'object',\n        required: ['username', 'email', 'password'],\n        properties: {\n            id: { type: 'integer', readOnly: true },\n            username: { type: 'string', minLength: 3, maxLength: 255 },\n            email: {\n                type: 'string',\n                minLength: 3,\n                maxLength: 255,\n                format: 'email',\n            },\n            password: { type: 'string', minLength: 8, maxLength: 255 },\n            firstName: { type: 'string', minLength: 1, maxLength: 255 },\n            lastName: { type: 'string', minLength: 1, maxLength: 255 },\n            isActive: { type: 'boolean' },\n        },\n    }\n\n    // Modifiers are reusable query snippets that can be used in various places.\n    static modifiers: Modifiers = {\n        // Our example modifier is a a semi-dumb fuzzy name match. We split the name into pieces using whitespace\n        // and then try to partially match each of those pieces to both the `firstName` and the `lastName` fields.\n\n        searchByName(query, name: string) {\n            // This `where` simply creates parentheses so that other `where` statements don't get mixed with the these.\n\n            // eslint-disable-next-line @typescript-eslint/no-floating-promises\n            query.where((q) => {\n                // eslint-disable-next-line no-restricted-syntax\n                for (const namePart of name.trim().split(/\\s+/)) {\n                    // eslint-disable-next-line no-restricted-syntax\n                    for (const column of ['firstName', 'lastName']) {\n                        // eslint-disable-next-line @typescript-eslint/no-floating-promises\n                        q.orWhereRaw('lower(??) like ?', [\n                            column,\n                            `${namePart.toLowerCase()}%`,\n                        ])\n                    }\n                }\n            })\n        },\n    }\n}\n\nexport class CreateUserDto implements IUser {\n    @ApiProperty()\n    @IsString()\n    @IsNotEmpty()\n    @MinLength(2)\n    @MaxLength(36)\n    username: string\n\n    @ApiProperty()\n    @IsEmail()\n    @IsNotEmpty()\n    @MinLength(2)\n    email: string\n\n    @ApiProperty()\n    @IsString()\n    @IsNotEmpty()\n    @MinLength(8)\n    password: string\n\n    @ApiProperty()\n    @IsString()\n    @IsNotEmpty()\n    @MinLength(2)\n    firstName: string\n\n    @ApiProperty()\n    @IsString()\n    @IsNotEmpty()\n    @MinLength(2)\n    lastName: string\n\n    @ApiProperty()\n    @IsBoolean()\n    isActive: boolean\n}\n\nexport class UpdateUserDto extends PartialType(CreateUserDto) {}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PaginationParams.html":{"url":"classes/PaginationParams.html","title":"class - PaginationParams","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PaginationParams\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/base/crud/pagination.ts\n        \n\n            \n                Description\n            \n            \n                Describes generic pagination params\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Abstract\n                                    Readonly\n                                    Optional\n                                order\n                            \n                            \n                                    Readonly\n                                page\n                            \n                            \n                                    Readonly\n                                pageSize\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Abstract\n                                Readonly\n                                Optional\n                            order\n                            \n                        \n                    \n                \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiPropertyOptional()@IsOptional()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/base/crud/pagination.ts:38\n                            \n                        \n\n                \n                    \n                        OrderBy\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            page\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiPropertyOptional({type: Number, minimum: 0})@IsOptional()@Min(0)@Transform(undefined)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/base/crud/pagination.ts:22\n                            \n                        \n\n                \n                    \n                        Page\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            pageSize\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 10\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiPropertyOptional({type: Number, minimum: 0})@IsOptional()@Min(0)@Transform(undefined)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/base/crud/pagination.ts:31\n                            \n                        \n\n                \n                    \n                        Page Size\n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiPropertyOptional } from '@nestjs/swagger'\n\nimport { Transform } from 'class-transformer'\nimport { IsOptional, Min } from 'class-validator'\n\nexport enum OrderType {\n    DESC = 'DESC',\n    ASC = 'ASC',\n}\n\n/**\n * Describes generic pagination params\n */\nexport abstract class PaginationParams {\n    /**\n     * Page\n     */\n    @ApiPropertyOptional({ type: Number, minimum: 0 })\n    @IsOptional()\n    @Min(0)\n    @Transform((val: string) => parseInt(val, 10))\n    readonly page = 0\n\n    /**\n     * Page Size\n     */\n    @ApiPropertyOptional({ type: Number, minimum: 0 })\n    @IsOptional()\n    @Min(0)\n    @Transform((val: string) => parseInt(val, 10))\n    readonly pageSize = 10\n\n    /**\n     * OrderBy\n     */\n    @ApiPropertyOptional()\n    @IsOptional()\n    abstract readonly order?: { [P in keyof T]?: OrderType }\n}\n\n/**\n * Generic pagination response interface\n */\nexport interface IPagination {\n    /**\n     * Items included in the current listing\n     */\n    readonly data: T[]\n\n    /**\n     * Paging metadata\n     */\n    readonly paging: {\n        pageSize: number\n        page: number\n        total: number\n        totalPages: number\n    }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ParamOption.html":{"url":"interfaces/ParamOption.html","title":"interface - ParamOption","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ParamOption\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/base/swagger-gen/utils/other.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        disabled\n                                \n                                \n                                            Optional\n                                        enum\n                                \n                                \n                                            Optional\n                                        field\n                                \n                                \n                                            Optional\n                                        primary\n                                \n                                \n                                            Optional\n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        disabled\n                                    \n                                \n                                \n                                    \n                                        disabled:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        enum\n                                    \n                                \n                                \n                                    \n                                        enum:         SwaggerEnumType\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         SwaggerEnumType\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        field\n                                    \n                                \n                                \n                                    \n                                        field:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        primary\n                                    \n                                \n                                \n                                    \n                                        primary:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:     \"number\" | \"string\" | \"uuid\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"number\" | \"string\" | \"uuid\"\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ValidationPipeOptions } from '@nestjs/common'\nimport { SwaggerEnumType } from '@nestjs/swagger/dist/types/swagger-enum.type'\n\nexport declare type BaseRouteName =\n    | 'getManyBase'\n    | 'getOneBase'\n    | 'createOneBase'\n    | 'createManyBase'\n    | 'updateOneBase'\n    | 'replaceOneBase'\n    | 'deleteOneBase'\n\nexport interface GetManyDefaultResponse {\n    data: T[]\n    count: number\n    total: number\n    page: number\n    pageCount: number\n}\n\nexport interface ParamOption {\n    field?: string\n    type?: 'number' | 'string' | 'uuid'\n    enum?: SwaggerEnumType\n    primary?: boolean\n    disabled?: boolean\n}\n\nexport interface ParamsOptions {\n    [key: string]: ParamOption\n}\n\nexport interface CrudOptions {\n    model: {}\n    dto?: {}\n    routes?: {}\n    validation?: ValidationPipeOptions | false\n    params?: ParamsOptions\n    query?: {\n        limit?: number\n        maxLimit?: number\n        cache?: number | false\n        alwaysPaginate?: boolean\n    }\n    serialize?: {\n        getMany?: false\n        get?: false\n        create?: false\n        createMany?: false\n        update?: false\n        replace?: false\n        delete?: false\n    }\n}\n\nexport function safeRequire(path: string): T | null {\n    try {\n        // eslint-disable-next-line global-require,@typescript-eslint/no-var-requires,import/no-dynamic-require\n        const pack = require(path)\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-return\n        return pack\n    } catch (_) {\n        return null\n    }\n}\n\nexport const swagger = safeRequire('@nestjs/swagger')\nexport const swaggerConst = safeRequire('@nestjs/swagger/dist/constants')\n\nexport function ApiProperty(options?: any): PropertyDecorator {\n    // eslint-disable-next-line @typescript-eslint/ban-types\n    return (target: object, propertyKey: string | symbol) => {\n        if (swagger) {\n            const ApiPropertyDecorator =\n                // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n                swagger.ApiProperty || swagger.ApiModelProperty\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-call\n            ApiPropertyDecorator(options)(target, propertyKey)\n        }\n    }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ParamsOptions.html":{"url":"interfaces/ParamsOptions.html","title":"interface - ParamsOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ParamsOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/base/swagger-gen/utils/other.ts\n        \n\n\n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: string]:        ParamOption\n\n                    \n                \n                        \n                            \n                                Defined in src/base/swagger-gen/utils/other.ts:30\n                            \n                        \n            \n        \n\n\n    \n\n\n    \n        import { ValidationPipeOptions } from '@nestjs/common'\nimport { SwaggerEnumType } from '@nestjs/swagger/dist/types/swagger-enum.type'\n\nexport declare type BaseRouteName =\n    | 'getManyBase'\n    | 'getOneBase'\n    | 'createOneBase'\n    | 'createManyBase'\n    | 'updateOneBase'\n    | 'replaceOneBase'\n    | 'deleteOneBase'\n\nexport interface GetManyDefaultResponse {\n    data: T[]\n    count: number\n    total: number\n    page: number\n    pageCount: number\n}\n\nexport interface ParamOption {\n    field?: string\n    type?: 'number' | 'string' | 'uuid'\n    enum?: SwaggerEnumType\n    primary?: boolean\n    disabled?: boolean\n}\n\nexport interface ParamsOptions {\n    [key: string]: ParamOption\n}\n\nexport interface CrudOptions {\n    model: {}\n    dto?: {}\n    routes?: {}\n    validation?: ValidationPipeOptions | false\n    params?: ParamsOptions\n    query?: {\n        limit?: number\n        maxLimit?: number\n        cache?: number | false\n        alwaysPaginate?: boolean\n    }\n    serialize?: {\n        getMany?: false\n        get?: false\n        create?: false\n        createMany?: false\n        update?: false\n        replace?: false\n        delete?: false\n    }\n}\n\nexport function safeRequire(path: string): T | null {\n    try {\n        // eslint-disable-next-line global-require,@typescript-eslint/no-var-requires,import/no-dynamic-require\n        const pack = require(path)\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-return\n        return pack\n    } catch (_) {\n        return null\n    }\n}\n\nexport const swagger = safeRequire('@nestjs/swagger')\nexport const swaggerConst = safeRequire('@nestjs/swagger/dist/constants')\n\nexport function ApiProperty(options?: any): PropertyDecorator {\n    // eslint-disable-next-line @typescript-eslint/ban-types\n    return (target: object, propertyKey: string | symbol) => {\n        if (swagger) {\n            const ApiPropertyDecorator =\n                // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n                swagger.ApiProperty || swagger.ApiModelProperty\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-call\n            ApiPropertyDecorator(options)(target, propertyKey)\n        }\n    }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PostType.html":{"url":"interfaces/PostType.html","title":"interface - PostType","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  PostType\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/domain.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        postType\n                                \n                                \n                                        postTypeId\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        postType\n                                    \n                                \n                                \n                                    \n                                        postType:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        postTypeId\n                                    \n                                \n                                \n                                    \n                                        postTypeId:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { HttpStatus } from '@nestjs/common'\n\nexport type Result =\n    | GetAppLaunchData\n    | GetUserProfile\n    | GetUserPosts\n    | GetComments\n    | GetRescueList\n    | GetFollowers\n    | GetFollowing\n\nexport type APIError = Error | string | null\n\nexport interface APIResponse {\n    data: T\n    error: APIError\n    message: string | string[]\n    statusCode: HttpStatus\n\n    count?: number\n    page?: number\n    pageCount?: number\n    total?: number\n}\n\nexport interface GetAppLaunchData {\n    link: 'api:/'\n    response: APIResponse\n}\n\nexport interface GetUserProfile {\n    link: 'api:v1/user/getUserProfile?userId=25'\n    response: APIResponse\n}\n\nexport interface GetUserPosts {\n    link: 'api:v1/user/getUserPosts?pageNo=0&pageSize=25'\n    response: APIResponse\n}\n\nexport interface GetRescueList {\n    link: 'api:v1/rescue/getRescueList?pageNo=0&pageSize=10&status=pending|inProgress|completed|nearest'\n    response: APIResponse\n}\n\nexport interface GetComments {\n    link: 'api:v1/rescue/getComments?pageNo=0&pageSize=10&postId=1230'\n    response: APIResponse\n}\n\nexport interface GetFollowers {\n    link: 'api:v1/rescue/getUserFollowers?userId=1230'\n    response: APIResponse\n}\n\nexport interface GetFollowing {\n    link: 'api:v1/rescue/getUserFollowing?userId=1230'\n    response: APIResponse\n}\n\nexport interface AppLaunchAction {\n    actionId: number\n    action: string\n    isActive: boolean\n    subject?: string\n}\n\nexport interface User {\n    usesId: number\n\n    coverImage: string\n    following: boolean\n    gender: string\n    isOwnProfile: number\n    isRescuer: boolean\n    latitude: number\n    longitude: number\n    numberOfFollowers: number\n    numberOfFollowing: number\n    numberOfPosts: number\n    numberOfRescuesCompleted: number\n    numberOfRescuesCreated: number\n    numberOfRescuesInProgress: number\n    profileImage: string\n    rescuer: boolean\n    userAddress: string\n    userContacts: string\n    userEmail: string\n    userName: string\n    badge: {\n        badgeId: number\n        badgeName: string\n        badgeDescription: string\n        recuesCompletionNeeded: number\n    }\n    setting: {\n        showMyContacts: boolean\n        getNotifications: boolean\n    }\n}\n\nexport interface PostType {\n    postTypeId: number\n    postType: string\n}\n\nexport interface PostedByUser {\n    usesId: number\n    badgeName: string\n    following: boolean\n    profileImage: string\n    rescuer: boolean\n    userName: string\n}\n\nexport interface UserPost {\n    postId: number\n    commentsCount: number\n    isUserReactedToPost: boolean\n    ownPage: boolean\n    postBy: PostedByUser\n    postImage: string\n    postTime: string\n    postType: PostType\n    postVideo: string\n    reactionsCount: number\n    timeAgo: string\n\n    adCorporateLogoUrl: string | null\n    corporateDescription: string | null\n    corporateName: string | null\n}\n\nexport interface UserPosts {\n    isRecent: boolean\n    feed: UserPost[]\n}\n\nexport interface Rescues {\n    rescueId: number\n    animalImageUrl: string\n    distance: number\n    distanceAway: string\n    emergencyType: string\n    postedBy: string\n    postedMinAgo: string\n    rescueDate: Date\n    rescuedPetName: string\n    rescueLocality: string\n    rescuers: {\n        contact: number\n        name: string\n        profileId: number\n        profileImageUrl: string\n        rescues: boolean\n        showMyNumber: boolean\n    }\n    rescueStatus: string\n    viewsCont: number\n}\n\nexport interface RescueLists {\n    rescues: Rescues[]\n}\n\nexport interface Comment {\n    commentId: number\n    comment: string\n    commentedUseName: string\n    commentedUserId: number\n    timeAgo: string\n}\n\nexport interface Comments {\n    comments: Comment[]\n}\n\nexport interface Follower {\n    userId: number\n    userName: string\n    profileImage: string\n    areYouFollowing: boolean\n    showRemoveOption: boolean\n}\n\nexport interface Following extends Follower {}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PostedByUser.html":{"url":"interfaces/PostedByUser.html","title":"interface - PostedByUser","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  PostedByUser\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/domain.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        badgeName\n                                \n                                \n                                        following\n                                \n                                \n                                        profileImage\n                                \n                                \n                                        rescuer\n                                \n                                \n                                        userName\n                                \n                                \n                                        usesId\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        badgeName\n                                    \n                                \n                                \n                                    \n                                        badgeName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        following\n                                    \n                                \n                                \n                                    \n                                        following:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        profileImage\n                                    \n                                \n                                \n                                    \n                                        profileImage:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        rescuer\n                                    \n                                \n                                \n                                    \n                                        rescuer:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        userName\n                                    \n                                \n                                \n                                    \n                                        userName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        usesId\n                                    \n                                \n                                \n                                    \n                                        usesId:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { HttpStatus } from '@nestjs/common'\n\nexport type Result =\n    | GetAppLaunchData\n    | GetUserProfile\n    | GetUserPosts\n    | GetComments\n    | GetRescueList\n    | GetFollowers\n    | GetFollowing\n\nexport type APIError = Error | string | null\n\nexport interface APIResponse {\n    data: T\n    error: APIError\n    message: string | string[]\n    statusCode: HttpStatus\n\n    count?: number\n    page?: number\n    pageCount?: number\n    total?: number\n}\n\nexport interface GetAppLaunchData {\n    link: 'api:/'\n    response: APIResponse\n}\n\nexport interface GetUserProfile {\n    link: 'api:v1/user/getUserProfile?userId=25'\n    response: APIResponse\n}\n\nexport interface GetUserPosts {\n    link: 'api:v1/user/getUserPosts?pageNo=0&pageSize=25'\n    response: APIResponse\n}\n\nexport interface GetRescueList {\n    link: 'api:v1/rescue/getRescueList?pageNo=0&pageSize=10&status=pending|inProgress|completed|nearest'\n    response: APIResponse\n}\n\nexport interface GetComments {\n    link: 'api:v1/rescue/getComments?pageNo=0&pageSize=10&postId=1230'\n    response: APIResponse\n}\n\nexport interface GetFollowers {\n    link: 'api:v1/rescue/getUserFollowers?userId=1230'\n    response: APIResponse\n}\n\nexport interface GetFollowing {\n    link: 'api:v1/rescue/getUserFollowing?userId=1230'\n    response: APIResponse\n}\n\nexport interface AppLaunchAction {\n    actionId: number\n    action: string\n    isActive: boolean\n    subject?: string\n}\n\nexport interface User {\n    usesId: number\n\n    coverImage: string\n    following: boolean\n    gender: string\n    isOwnProfile: number\n    isRescuer: boolean\n    latitude: number\n    longitude: number\n    numberOfFollowers: number\n    numberOfFollowing: number\n    numberOfPosts: number\n    numberOfRescuesCompleted: number\n    numberOfRescuesCreated: number\n    numberOfRescuesInProgress: number\n    profileImage: string\n    rescuer: boolean\n    userAddress: string\n    userContacts: string\n    userEmail: string\n    userName: string\n    badge: {\n        badgeId: number\n        badgeName: string\n        badgeDescription: string\n        recuesCompletionNeeded: number\n    }\n    setting: {\n        showMyContacts: boolean\n        getNotifications: boolean\n    }\n}\n\nexport interface PostType {\n    postTypeId: number\n    postType: string\n}\n\nexport interface PostedByUser {\n    usesId: number\n    badgeName: string\n    following: boolean\n    profileImage: string\n    rescuer: boolean\n    userName: string\n}\n\nexport interface UserPost {\n    postId: number\n    commentsCount: number\n    isUserReactedToPost: boolean\n    ownPage: boolean\n    postBy: PostedByUser\n    postImage: string\n    postTime: string\n    postType: PostType\n    postVideo: string\n    reactionsCount: number\n    timeAgo: string\n\n    adCorporateLogoUrl: string | null\n    corporateDescription: string | null\n    corporateName: string | null\n}\n\nexport interface UserPosts {\n    isRecent: boolean\n    feed: UserPost[]\n}\n\nexport interface Rescues {\n    rescueId: number\n    animalImageUrl: string\n    distance: number\n    distanceAway: string\n    emergencyType: string\n    postedBy: string\n    postedMinAgo: string\n    rescueDate: Date\n    rescuedPetName: string\n    rescueLocality: string\n    rescuers: {\n        contact: number\n        name: string\n        profileId: number\n        profileImageUrl: string\n        rescues: boolean\n        showMyNumber: boolean\n    }\n    rescueStatus: string\n    viewsCont: number\n}\n\nexport interface RescueLists {\n    rescues: Rescues[]\n}\n\nexport interface Comment {\n    commentId: number\n    comment: string\n    commentedUseName: string\n    commentedUserId: number\n    timeAgo: string\n}\n\nexport interface Comments {\n    comments: Comment[]\n}\n\nexport interface Follower {\n    userId: number\n    userName: string\n    profileImage: string\n    areYouFollowing: boolean\n    showRemoveOption: boolean\n}\n\nexport interface Following extends Follower {}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/QueryFailedFilter.html":{"url":"classes/QueryFailedFilter.html","title":"class - QueryFailedFilter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  QueryFailedFilter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/infra/filters/query-failed.filter.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        ExceptionFilter\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                catch\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            catch\n                        \n                        \n                    \n                \n            \n            \n                \ncatch(exception: CheckViolationError | ConstraintViolationError | DataError | ForeignKeyViolationError | NotNullViolationError | UniqueViolationError | NotFoundError, host: ArgumentsHost)\n                \n            \n\n\n            \n                \n                    Defined in src/infra/filters/query-failed.filter.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    exception\n                                    \n                                            CheckViolationError | ConstraintViolationError | DataError | ForeignKeyViolationError | NotNullViolationError | UniqueViolationError | NotFoundError\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    host\n                                    \n                                            ArgumentsHost\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ArgumentsHost, Catch, ExceptionFilter, HttpStatus } from '@nestjs/common'\n\nimport { NotFoundError } from 'objection'\nimport {\n    UniqueViolationError,\n    NotNullViolationError,\n    ForeignKeyViolationError,\n    ConstraintViolationError,\n    CheckViolationError,\n    DataError,\n} from 'objection-db-errors'\n\n@Catch(\n    CheckViolationError,\n    ConstraintViolationError,\n    DataError,\n    ForeignKeyViolationError,\n    NotNullViolationError,\n    UniqueViolationError,\n    NotFoundError,\n)\nexport class QueryFailedFilter implements ExceptionFilter {\n    catch(\n        exception:\n            | CheckViolationError\n            | ConstraintViolationError\n            | DataError\n            | ForeignKeyViolationError\n            | NotNullViolationError\n            | UniqueViolationError\n            | NotFoundError,\n        host: ArgumentsHost,\n    ) {\n        const ctx = host.switchToHttp()\n        const response = ctx.getResponse()\n        const request = ctx.getRequest()\n        const status = HttpStatus.PRECONDITION_FAILED\n\n        const {\n            name, // @ts-ignore\n            data, // @ts-ignore\n            type, // @ts-ignore\n            table, // @ts-ignore\n            column, // @ts-ignore\n            schema, // @ts-ignore\n            message, // @ts-ignore\n            columns, // @ts-ignore\n            database, // @ts-ignore\n            constraint, // @ts-ignore\n            nativeError, // @ts-ignore\n        } = exception\n\n        // @ts-ignore\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-call,@typescript-eslint/no-unsafe-member-access\n        response.status(status).json({\n            statusCode: status,\n            message,\n\n            name,\n            table,\n            schema,\n            database,\n            constraint,\n            nativeError,\n            columns: column ? [column] : columns,\n\n            data,\n            type,\n\n            path: request.url,\n            // timestamp: new Date().toISOString(),\n        })\n    }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/R.html":{"url":"classes/R.html","title":"class - R","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  R\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/base/swagger-gen/crud-routes.factory.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                get\n                            \n                            \n                                    Static\n                                set\n                            \n                            \n                                    Static\n                                setRoute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            get\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    get(metadataKey, target: Object, propertyKey: string | symbol)\n                \n            \n\n\n            \n                \n                    Defined in src/base/swagger-gen/crud-routes.factory.ts:33\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    metadataKey\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    target\n                                    \n                                                Object\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    propertyKey\n                                    \n                                            string | symbol\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        undefined\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     T\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            set\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    set(metadataKey, metadataValue, target: Object, propertyKey: string | symbol)\n                \n            \n\n\n            \n                \n                    Defined in src/base/swagger-gen/crud-routes.factory.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    metadataKey\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    metadataValue\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    target\n                                    \n                                                Object\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    propertyKey\n                                    \n                                            string | symbol\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        undefined\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            setRoute\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setRoute(route, func: Function)\n                \n            \n\n\n            \n                \n                    Defined in src/base/swagger-gen/crud-routes.factory.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    route\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    func\n                                    \n                                                Function\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { HttpStatus, RequestMethod } from '@nestjs/common'\n\nimport { Type } from 'class-transformer'\nimport * as deepmerge from 'deepmerge'\n\nimport {\n    ApiProperty,\n    isArrayFull,\n    isFalse,\n    isFunction,\n    isObjectFull,\n    objKeys,\n    swagger,\n    swaggerConst,\n} from './utils'\nimport type { CrudOptions, GetManyDefaultResponse, BaseRouteName } from './utils'\n\nexport class R {\n    static set(\n        metadataKey,\n        metadataValue,\n        target: Object,\n        propertyKey: string | symbol = undefined,\n    ) {\n        if (!propertyKey) {\n            Reflect.defineMetadata(metadataKey, metadataValue, target)\n        } else {\n            Reflect.defineMetadata(metadataKey, metadataValue, target, propertyKey)\n        }\n    }\n\n    static get(\n        metadataKey,\n        target: Object,\n        propertyKey: string | symbol = undefined,\n    ): T {\n        if (!propertyKey) return Reflect.getMetadata(metadataKey, target)\n\n        return Reflect.getMetadata(metadataKey, target, propertyKey)\n    }\n\n    static setRoute(route, func: Function) {\n        R.set('path', route.path, func)\n        R.set('method', route.method, func)\n    }\n}\n\nexport class Swagger {\n    static setExtraModels(swaggerModels) {\n        if (swaggerConst) {\n            const meta = Swagger.getExtraModels(swaggerModels.get)\n            const models = [\n                ...meta,\n                ...objKeys(swaggerModels)\n                    .map((name) => swaggerModels[name])\n                    .filter((one) => one && one.name !== swaggerModels.get.name),\n            ]\n\n            R.set(\n                swaggerConst.DECORATORS.API_EXTRA_MODELS,\n                models,\n                swaggerModels.get,\n            )\n        }\n    }\n\n    static setResponseOk(metadata, func: Function) {\n        if (swaggerConst) {\n            R.set(swaggerConst.DECORATORS.API_RESPONSE, metadata, func)\n        }\n    }\n\n    static getExtraModels(target): any[] {\n        return swaggerConst\n            ? R.get(swaggerConst.API_EXTRA_MODELS, target) || []\n            : []\n    }\n\n    static getResponseOk(func: Function) {\n        return swaggerConst\n            ? R.get(swaggerConst.DECORATORS.API_RESPONSE, func) || {}\n            : {}\n    }\n\n    static createResponseMeta(\n        name: BaseRouteName | 'getOne',\n        options: CrudOptions,\n        swaggerModels,\n    ) {\n        if (swagger) {\n            const { query } = options\n\n            switch (name) {\n                case 'getOneBase':\n                    return {\n                        [HttpStatus.OK]: {\n                            description: 'Get one base response',\n                            type: swaggerModels.get,\n                        },\n                    }\n                case 'getOne':\n                    return {\n                        [HttpStatus.OK]: query.alwaysPaginate\n                            ? {\n                                  description: 'Get paginated response',\n                                  type: swaggerModels.getMany,\n                              }\n                            : {\n                                  description: 'Get many base response',\n                                  schema: {\n                                      oneOf: [\n                                          {\n                                              $ref: swagger.getSchemaPath(\n                                                  swaggerModels.getMany.name,\n                                              ),\n                                          },\n                                          {\n                                              type: 'array',\n                                              items: {\n                                                  $ref: swagger.getSchemaPath(\n                                                      swaggerModels.get.name,\n                                                  ),\n                                              },\n                                          },\n                                      ],\n                                  },\n                              },\n                    }\n                default:\n                    // eslint-disable-next-line no-case-declarations\n                    const dto = swaggerModels[name.split('OneBase')[0]]\n\n                    return {\n                        [HttpStatus.OK]: {\n                            description: 'Response',\n                            schema: { $ref: swagger.getSchemaPath(dto.name) },\n                        },\n                    }\n            }\n        } else {\n            return {}\n        }\n    }\n}\n\nexport class SerializeHelper {\n    static createGetManyDto(dto, resourceName: string): any {\n        class GetManyResponseDto implements GetManyDefaultResponse {\n            @ApiProperty({ type: dto, isArray: true })\n            @Type(() => dto)\n            data: any[]\n\n            @ApiProperty({ type: 'number' })\n            count: number\n\n            @ApiProperty({ type: 'number' })\n            total: number\n\n            @ApiProperty({ type: 'number' })\n            page: number\n\n            @ApiProperty({ type: 'number' })\n            pageCount: number\n        }\n\n        Object.defineProperty(GetManyResponseDto, 'name', {\n            writable: false,\n            value: `GetMany${resourceName}ResponseDto`,\n        })\n\n        return GetManyResponseDto\n    }\n\n    static createGetOneResponseDto(resourceName: string): any {\n        class GetOneResponseDto {}\n\n        Object.defineProperty(GetOneResponseDto, 'name', {\n            writable: false,\n            value: `${resourceName}ResponseDto`,\n        })\n\n        return GetOneResponseDto\n    }\n}\n\nexport class CrudConfigService {\n    static config: Partial = {\n        query: {\n            alwaysPaginate: false,\n        },\n    }\n\n    static load(config) {\n        const query = isObjectFull(config.query) ? config.query : {}\n        const params = isObjectFull(config.params) ? config.params : {}\n        const serialize = isObjectFull(config.serialize) ? config.serialize : {}\n\n        CrudConfigService.config = deepmerge(\n            CrudConfigService.config,\n            { query, params, serialize },\n            { arrayMerge: (a, b, c) => b },\n        )\n    }\n}\n\nexport class CrudRoutesFactory {\n    protected options\n\n    protected swaggerModels: any = {}\n\n    constructor(private target, options) {\n        this.options = options\n        this.create()\n\n        console.log(\n            'CrudRoutesFactory::constructor',\n            // { ...options },\n            // this.targetProto,\n            // this.modelType,\n            // this.modelName,\n            // this.swaggerModels,\n        )\n    }\n\n    static create(target, options): CrudRoutesFactory {\n        return new CrudRoutesFactory(target, options)\n    }\n\n    get targetProto() {\n        return this.target.prototype\n    }\n\n    get modelName(): string {\n        return this.options.model.type.name\n    }\n\n    get modelType() {\n        return this.options.model.type\n    }\n\n    private create() {\n        const routesSchema = CrudRoutesFactory.getRoutesSchema()\n        this.mergeOptions()\n        this.setResponseModels()\n        this.createRoutes(routesSchema)\n        this.enableRoutes(routesSchema)\n    }\n\n    getOne(name: BaseRouteName) {\n        this.targetProto[name] = function getOne(req) {\n            return this.service.getOne(req)\n        }\n    }\n\n    getOneBase(name: BaseRouteName) {\n        this.targetProto[name] = function getOneBase(req) {\n            return this.service.getOneBase(req)\n        }\n    }\n\n    static getRoutesSchema() {\n        return [\n            {\n                name: 'getOneBase',\n                path: '/',\n                method: RequestMethod.GET,\n                enable: false,\n                override: false,\n                withParams: true,\n            },\n            {\n                name: 'getOne',\n                path: '/',\n                method: RequestMethod.GET,\n                enable: false,\n                override: false,\n                withParams: false,\n            },\n        ]\n    }\n\n    mergeOptions() {\n        // merge query config\n        const query = isObjectFull(this.options.query) ? this.options.query : {}\n        this.options.query = { ...CrudConfigService.config.query, ...query }\n\n        // set dto\n        if (!isObjectFull(this.options.dto)) {\n            this.options.dto = {}\n        }\n\n        // set serialize\n        this.options.serialize = {\n            ...CrudConfigService.config.serialize,\n            ...this.options.serialize,\n        }\n\n        this.options.serialize.get = isFalse(this.options.serialize.get)\n            ? false\n            : this.options.serialize.get || this.modelType\n\n        this.options.serialize.getMany = isFalse(this.options.serialize.getMany)\n            ? false\n            : this.options.serialize.getMany\n            ? this.options.serialize.getMany\n            : isFalse(this.options.serialize.get)\n            ? false\n            : SerializeHelper.createGetManyDto(\n                  this.options.serialize.get,\n                  this.modelName,\n              )\n\n        this.options.serialize.create = isFalse(this.options.serialize.create)\n            ? false\n            : this.options.serialize.create || this.modelType\n\n        this.options.serialize.update = isFalse(this.options.serialize.update)\n            ? false\n            : this.options.serialize.update || this.modelType\n\n        this.options.serialize.replace = isFalse(this.options.serialize.replace)\n            ? false\n            : this.options.serialize.replace || this.modelType\n\n        this.options.serialize.delete =\n            isFalse(this.options.serialize.delete) ||\n            !this.options.routes?.deleteOneBase?.returnDeleted\n                ? false\n                : this.options.serialize.delete || this.modelType\n\n        R.set('CRUD_OPTIONS_METADATA', this.options, this.target)\n    }\n\n    setResponseModels() {\n        const modelType = isFunction(this.modelType)\n            ? this.modelType\n            : SerializeHelper.createGetOneResponseDto(this.modelName)\n\n        this.swaggerModels.get = isFunction(this.options.serialize.get)\n            ? this.options.serialize.get\n            : modelType\n\n        this.swaggerModels.getMany =\n            this.options.serialize.getMany ||\n            SerializeHelper.createGetManyDto(this.swaggerModels.get, this.modelName)\n\n        this.swaggerModels.create = isFunction(this.options.serialize.create)\n            ? this.options.serialize.create\n            : modelType\n\n        this.swaggerModels.update = isFunction(this.options.serialize.update)\n            ? this.options.serialize.update\n            : modelType\n\n        this.swaggerModels.replace = isFunction(this.options.serialize.replace)\n            ? this.options.serialize.replace\n            : modelType\n\n        this.swaggerModels.delete = isFunction(this.options.serialize.delete)\n            ? this.options.serialize.delete\n            : modelType\n\n        Swagger.setExtraModels(this.swaggerModels)\n    }\n\n    enableRoutes(routesSchema) {\n        routesSchema.forEach((route) => {\n            if (!route.override && route.enable) {\n                R.setRoute(route, this.targetProto[route.name])\n            }\n        })\n    }\n\n    createRoutes(routesSchema) {\n        routesSchema.forEach((route) => {\n            // create base method\n            /* this[route.name](route.name) */\n            route.enable = true\n\n            // set metadata\n            this.setSwaggerResponseOk(route.name)\n        })\n    }\n\n    setSwaggerResponseOk(name) {\n        const metadata = Swagger.getResponseOk(this.targetProto[name]) || {}\n        const metadataToAdd =\n            Swagger.createResponseMeta(name, this.options, this.swaggerModels) || {}\n\n        Swagger.setResponseOk(\n            // @ts-ignore\n            { ...metadata, ...metadataToAdd },\n            this.targetProto[name],\n        )\n    }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/RequestGuard.html":{"url":"guards/RequestGuard.html","title":"guard - RequestGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    RequestGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/infra/guards/req.ts\n            \n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                bindRequestHelpers\n                            \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            bindRequestHelpers\n                        \n                        \n                    \n                \n            \n            \n                \nbindRequestHelpers(request: any)\n                \n            \n\n\n            \n                \n                    Defined in src/infra/guards/req.ts:20\n                \n            \n\n\n            \n                \n                    Bind Request Helpers\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            canActivate\n                        \n                        \n                    \n                \n            \n            \n                \ncanActivate(context: ExecutionContext)\n                \n            \n\n\n            \n                \n                    Defined in src/infra/guards/req.ts:7\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     boolean | Promise | Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable, CanActivate, ExecutionContext } from '@nestjs/common'\n\nimport { Observable } from 'rxjs'\n\n@Injectable()\nexport class RequestGuard implements CanActivate {\n    canActivate(\n        context: ExecutionContext,\n    ): boolean | Promise | Observable {\n        this.bindRequestHelpers(context.switchToHttp().getRequest())\n\n        return true\n    }\n\n    /**\n     * Bind Request Helpers\n     *\n     * @param request\n     */\n    bindRequestHelpers(request: any): any {\n        function all(): Record {\n            const inputs = { ...request.query, ...request.body, ...request.params } // eslint-disable-line @typescript-eslint/no-unsafe-member-access\n\n            // eslint-disable-next-line guard-for-in,no-restricted-syntax\n            for (const key in inputs) {\n                const value = inputs[key] // eslint-disable-line @typescript-eslint/no-unsafe-member-access\n\n                if (typeof value === 'string' || value instanceof String) {\n                    inputs[key] = value.trim() // eslint-disable-line @typescript-eslint/no-unsafe-member-access\n                }\n            }\n\n            return inputs // eslint-disable-line @typescript-eslint/no-unsafe-return\n        }\n\n        request.all = all // eslint-disable-line @typescript-eslint/no-unsafe-member-access\n\n        return request // eslint-disable-line @typescript-eslint/no-unsafe-return\n    }\n}\n\n        \n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/RescueLists.html":{"url":"interfaces/RescueLists.html","title":"interface - RescueLists","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  RescueLists\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/domain.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        rescues\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        rescues\n                                    \n                                \n                                \n                                    \n                                        rescues:         Rescues[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Rescues[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { HttpStatus } from '@nestjs/common'\n\nexport type Result =\n    | GetAppLaunchData\n    | GetUserProfile\n    | GetUserPosts\n    | GetComments\n    | GetRescueList\n    | GetFollowers\n    | GetFollowing\n\nexport type APIError = Error | string | null\n\nexport interface APIResponse {\n    data: T\n    error: APIError\n    message: string | string[]\n    statusCode: HttpStatus\n\n    count?: number\n    page?: number\n    pageCount?: number\n    total?: number\n}\n\nexport interface GetAppLaunchData {\n    link: 'api:/'\n    response: APIResponse\n}\n\nexport interface GetUserProfile {\n    link: 'api:v1/user/getUserProfile?userId=25'\n    response: APIResponse\n}\n\nexport interface GetUserPosts {\n    link: 'api:v1/user/getUserPosts?pageNo=0&pageSize=25'\n    response: APIResponse\n}\n\nexport interface GetRescueList {\n    link: 'api:v1/rescue/getRescueList?pageNo=0&pageSize=10&status=pending|inProgress|completed|nearest'\n    response: APIResponse\n}\n\nexport interface GetComments {\n    link: 'api:v1/rescue/getComments?pageNo=0&pageSize=10&postId=1230'\n    response: APIResponse\n}\n\nexport interface GetFollowers {\n    link: 'api:v1/rescue/getUserFollowers?userId=1230'\n    response: APIResponse\n}\n\nexport interface GetFollowing {\n    link: 'api:v1/rescue/getUserFollowing?userId=1230'\n    response: APIResponse\n}\n\nexport interface AppLaunchAction {\n    actionId: number\n    action: string\n    isActive: boolean\n    subject?: string\n}\n\nexport interface User {\n    usesId: number\n\n    coverImage: string\n    following: boolean\n    gender: string\n    isOwnProfile: number\n    isRescuer: boolean\n    latitude: number\n    longitude: number\n    numberOfFollowers: number\n    numberOfFollowing: number\n    numberOfPosts: number\n    numberOfRescuesCompleted: number\n    numberOfRescuesCreated: number\n    numberOfRescuesInProgress: number\n    profileImage: string\n    rescuer: boolean\n    userAddress: string\n    userContacts: string\n    userEmail: string\n    userName: string\n    badge: {\n        badgeId: number\n        badgeName: string\n        badgeDescription: string\n        recuesCompletionNeeded: number\n    }\n    setting: {\n        showMyContacts: boolean\n        getNotifications: boolean\n    }\n}\n\nexport interface PostType {\n    postTypeId: number\n    postType: string\n}\n\nexport interface PostedByUser {\n    usesId: number\n    badgeName: string\n    following: boolean\n    profileImage: string\n    rescuer: boolean\n    userName: string\n}\n\nexport interface UserPost {\n    postId: number\n    commentsCount: number\n    isUserReactedToPost: boolean\n    ownPage: boolean\n    postBy: PostedByUser\n    postImage: string\n    postTime: string\n    postType: PostType\n    postVideo: string\n    reactionsCount: number\n    timeAgo: string\n\n    adCorporateLogoUrl: string | null\n    corporateDescription: string | null\n    corporateName: string | null\n}\n\nexport interface UserPosts {\n    isRecent: boolean\n    feed: UserPost[]\n}\n\nexport interface Rescues {\n    rescueId: number\n    animalImageUrl: string\n    distance: number\n    distanceAway: string\n    emergencyType: string\n    postedBy: string\n    postedMinAgo: string\n    rescueDate: Date\n    rescuedPetName: string\n    rescueLocality: string\n    rescuers: {\n        contact: number\n        name: string\n        profileId: number\n        profileImageUrl: string\n        rescues: boolean\n        showMyNumber: boolean\n    }\n    rescueStatus: string\n    viewsCont: number\n}\n\nexport interface RescueLists {\n    rescues: Rescues[]\n}\n\nexport interface Comment {\n    commentId: number\n    comment: string\n    commentedUseName: string\n    commentedUserId: number\n    timeAgo: string\n}\n\nexport interface Comments {\n    comments: Comment[]\n}\n\nexport interface Follower {\n    userId: number\n    userName: string\n    profileImage: string\n    areYouFollowing: boolean\n    showRemoveOption: boolean\n}\n\nexport interface Following extends Follower {}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Rescues.html":{"url":"interfaces/Rescues.html","title":"interface - Rescues","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Rescues\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/domain.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        animalImageUrl\n                                \n                                \n                                        distance\n                                \n                                \n                                        distanceAway\n                                \n                                \n                                        emergencyType\n                                \n                                \n                                        postedBy\n                                \n                                \n                                        postedMinAgo\n                                \n                                \n                                        rescueDate\n                                \n                                \n                                        rescuedPetName\n                                \n                                \n                                        rescueId\n                                \n                                \n                                        rescueLocality\n                                \n                                \n                                        rescuers\n                                \n                                \n                                        rescueStatus\n                                \n                                \n                                        viewsCont\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        animalImageUrl\n                                    \n                                \n                                \n                                    \n                                        animalImageUrl:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        distance\n                                    \n                                \n                                \n                                    \n                                        distance:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        distanceAway\n                                    \n                                \n                                \n                                    \n                                        distanceAway:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        emergencyType\n                                    \n                                \n                                \n                                    \n                                        emergencyType:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        postedBy\n                                    \n                                \n                                \n                                    \n                                        postedBy:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        postedMinAgo\n                                    \n                                \n                                \n                                    \n                                        postedMinAgo:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        rescueDate\n                                    \n                                \n                                \n                                    \n                                        rescueDate:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        rescuedPetName\n                                    \n                                \n                                \n                                    \n                                        rescuedPetName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        rescueId\n                                    \n                                \n                                \n                                    \n                                        rescueId:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        rescueLocality\n                                    \n                                \n                                \n                                    \n                                        rescueLocality:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        rescuers\n                                    \n                                \n                                \n                                    \n                                        rescuers:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        rescueStatus\n                                    \n                                \n                                \n                                    \n                                        rescueStatus:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        viewsCont\n                                    \n                                \n                                \n                                    \n                                        viewsCont:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { HttpStatus } from '@nestjs/common'\n\nexport type Result =\n    | GetAppLaunchData\n    | GetUserProfile\n    | GetUserPosts\n    | GetComments\n    | GetRescueList\n    | GetFollowers\n    | GetFollowing\n\nexport type APIError = Error | string | null\n\nexport interface APIResponse {\n    data: T\n    error: APIError\n    message: string | string[]\n    statusCode: HttpStatus\n\n    count?: number\n    page?: number\n    pageCount?: number\n    total?: number\n}\n\nexport interface GetAppLaunchData {\n    link: 'api:/'\n    response: APIResponse\n}\n\nexport interface GetUserProfile {\n    link: 'api:v1/user/getUserProfile?userId=25'\n    response: APIResponse\n}\n\nexport interface GetUserPosts {\n    link: 'api:v1/user/getUserPosts?pageNo=0&pageSize=25'\n    response: APIResponse\n}\n\nexport interface GetRescueList {\n    link: 'api:v1/rescue/getRescueList?pageNo=0&pageSize=10&status=pending|inProgress|completed|nearest'\n    response: APIResponse\n}\n\nexport interface GetComments {\n    link: 'api:v1/rescue/getComments?pageNo=0&pageSize=10&postId=1230'\n    response: APIResponse\n}\n\nexport interface GetFollowers {\n    link: 'api:v1/rescue/getUserFollowers?userId=1230'\n    response: APIResponse\n}\n\nexport interface GetFollowing {\n    link: 'api:v1/rescue/getUserFollowing?userId=1230'\n    response: APIResponse\n}\n\nexport interface AppLaunchAction {\n    actionId: number\n    action: string\n    isActive: boolean\n    subject?: string\n}\n\nexport interface User {\n    usesId: number\n\n    coverImage: string\n    following: boolean\n    gender: string\n    isOwnProfile: number\n    isRescuer: boolean\n    latitude: number\n    longitude: number\n    numberOfFollowers: number\n    numberOfFollowing: number\n    numberOfPosts: number\n    numberOfRescuesCompleted: number\n    numberOfRescuesCreated: number\n    numberOfRescuesInProgress: number\n    profileImage: string\n    rescuer: boolean\n    userAddress: string\n    userContacts: string\n    userEmail: string\n    userName: string\n    badge: {\n        badgeId: number\n        badgeName: string\n        badgeDescription: string\n        recuesCompletionNeeded: number\n    }\n    setting: {\n        showMyContacts: boolean\n        getNotifications: boolean\n    }\n}\n\nexport interface PostType {\n    postTypeId: number\n    postType: string\n}\n\nexport interface PostedByUser {\n    usesId: number\n    badgeName: string\n    following: boolean\n    profileImage: string\n    rescuer: boolean\n    userName: string\n}\n\nexport interface UserPost {\n    postId: number\n    commentsCount: number\n    isUserReactedToPost: boolean\n    ownPage: boolean\n    postBy: PostedByUser\n    postImage: string\n    postTime: string\n    postType: PostType\n    postVideo: string\n    reactionsCount: number\n    timeAgo: string\n\n    adCorporateLogoUrl: string | null\n    corporateDescription: string | null\n    corporateName: string | null\n}\n\nexport interface UserPosts {\n    isRecent: boolean\n    feed: UserPost[]\n}\n\nexport interface Rescues {\n    rescueId: number\n    animalImageUrl: string\n    distance: number\n    distanceAway: string\n    emergencyType: string\n    postedBy: string\n    postedMinAgo: string\n    rescueDate: Date\n    rescuedPetName: string\n    rescueLocality: string\n    rescuers: {\n        contact: number\n        name: string\n        profileId: number\n        profileImageUrl: string\n        rescues: boolean\n        showMyNumber: boolean\n    }\n    rescueStatus: string\n    viewsCont: number\n}\n\nexport interface RescueLists {\n    rescues: Rescues[]\n}\n\nexport interface Comment {\n    commentId: number\n    comment: string\n    commentedUseName: string\n    commentedUserId: number\n    timeAgo: string\n}\n\nexport interface Comments {\n    comments: Comment[]\n}\n\nexport interface Follower {\n    userId: number\n    userName: string\n    profileImage: string\n    areYouFollowing: boolean\n    showRemoveOption: boolean\n}\n\nexport interface Following extends Follower {}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Response.html":{"url":"interfaces/Response.html","title":"interface - Response","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Response\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/infra/interceptors/transform.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        data\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                    \n                                \n                                \n                                    \n                                        data:     T\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     T\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {\n    Injectable,\n    NestInterceptor,\n    ExecutionContext,\n    CallHandler,\n} from '@nestjs/common'\n\nimport { Observable } from 'rxjs'\nimport { map } from 'rxjs/operators'\n\nexport interface Response {\n    data: T\n}\n\n@Injectable()\nexport class TransformInterceptor implements NestInterceptor> {\n    intercept(\n        context: ExecutionContext,\n        next: CallHandler,\n    ): Observable> {\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n        return next.handle().pipe(map((data) => ({ data })))\n    }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/ResponseGuard.html":{"url":"guards/ResponseGuard.html","title":"guard - ResponseGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    ResponseGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/infra/guards/res.ts\n            \n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                bindResponseHelpers\n                            \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            bindResponseHelpers\n                        \n                        \n                    \n                \n            \n            \n                \nbindResponseHelpers(response: any)\n                \n            \n\n\n            \n                \n                    Defined in src/infra/guards/res.ts:20\n                \n            \n\n\n            \n                \n                    Bind Response Helpers\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    response\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            canActivate\n                        \n                        \n                    \n                \n            \n            \n                \ncanActivate(context: ExecutionContext)\n                \n            \n\n\n            \n                \n                    Defined in src/infra/guards/res.ts:7\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     boolean | Promise | Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable, CanActivate, ExecutionContext } from '@nestjs/common'\n\nimport { Observable } from 'rxjs'\n\n@Injectable()\nexport class ResponseGuard implements CanActivate {\n    canActivate(\n        context: ExecutionContext,\n    ): boolean | Promise | Observable {\n        this.bindResponseHelpers(context.switchToHttp().getResponse())\n\n        return true\n    }\n\n    /**\n     * Bind Response Helpers\n     *\n     * @param response\n     */\n    bindResponseHelpers(response: any): any {\n        function success(\n            data: Record | Array | string,\n            status = 200,\n        ) {\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-return,@typescript-eslint/no-unsafe-call,@typescript-eslint/no-unsafe-member-access\n            return response.status(status).json({\n                success: true,\n                code: status,\n                data,\n            })\n        }\n\n        // eslint-disable-next-line @typescript-eslint/no-shadow\n        function error(error: Record | string, status = 401) {\n            let message = 'Something went wrong!'\n            let errors = null\n            if (error instanceof Object) {\n                message = error.message\n                errors = error.errors\n            } else {\n                message = error\n            }\n\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-return,@typescript-eslint/no-unsafe-call,@typescript-eslint/no-unsafe-member-access\n            return response.status(status).json({\n                success: false,\n                code: status,\n                message,\n                errors,\n            })\n        }\n\n        function noContent() {\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-return,@typescript-eslint/no-unsafe-call,@typescript-eslint/no-unsafe-member-access\n            return response.status(204).end()\n        }\n\n        function withMeta(data: Record, status = 200) {\n            const { data: dataObj, ...meta } = data\n\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-return,@typescript-eslint/no-unsafe-call,@typescript-eslint/no-unsafe-member-access\n            return response.status(status).json({\n                success: true,\n                code: status,\n                data: dataObj,\n                meta,\n            })\n        }\n\n        response.error = error // eslint-disable-line @typescript-eslint/no-unsafe-member-access\n        response.success = success // eslint-disable-line @typescript-eslint/no-unsafe-member-access\n        response.withMeta = withMeta // eslint-disable-line @typescript-eslint/no-unsafe-member-access\n        response.noContent = noContent // eslint-disable-line @typescript-eslint/no-unsafe-member-access\n\n        return response // eslint-disable-line @typescript-eslint/no-unsafe-return\n    }\n}\n\n        \n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SerializeHelper.html":{"url":"classes/SerializeHelper.html","title":"class - SerializeHelper","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SerializeHelper\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/base/swagger-gen/crud-routes.factory.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                createGetManyDto\n                            \n                            \n                                    Static\n                                createGetOneResponseDto\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            createGetManyDto\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createGetManyDto(dto, resourceName: string)\n                \n            \n\n\n            \n                \n                    Defined in src/base/swagger-gen/crud-routes.factory.ts:148\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dto\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    resourceName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            createGetOneResponseDto\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createGetOneResponseDto(resourceName: string)\n                \n            \n\n\n            \n                \n                    Defined in src/base/swagger-gen/crud-routes.factory.ts:175\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    resourceName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { HttpStatus, RequestMethod } from '@nestjs/common'\n\nimport { Type } from 'class-transformer'\nimport * as deepmerge from 'deepmerge'\n\nimport {\n    ApiProperty,\n    isArrayFull,\n    isFalse,\n    isFunction,\n    isObjectFull,\n    objKeys,\n    swagger,\n    swaggerConst,\n} from './utils'\nimport type { CrudOptions, GetManyDefaultResponse, BaseRouteName } from './utils'\n\nexport class R {\n    static set(\n        metadataKey,\n        metadataValue,\n        target: Object,\n        propertyKey: string | symbol = undefined,\n    ) {\n        if (!propertyKey) {\n            Reflect.defineMetadata(metadataKey, metadataValue, target)\n        } else {\n            Reflect.defineMetadata(metadataKey, metadataValue, target, propertyKey)\n        }\n    }\n\n    static get(\n        metadataKey,\n        target: Object,\n        propertyKey: string | symbol = undefined,\n    ): T {\n        if (!propertyKey) return Reflect.getMetadata(metadataKey, target)\n\n        return Reflect.getMetadata(metadataKey, target, propertyKey)\n    }\n\n    static setRoute(route, func: Function) {\n        R.set('path', route.path, func)\n        R.set('method', route.method, func)\n    }\n}\n\nexport class Swagger {\n    static setExtraModels(swaggerModels) {\n        if (swaggerConst) {\n            const meta = Swagger.getExtraModels(swaggerModels.get)\n            const models = [\n                ...meta,\n                ...objKeys(swaggerModels)\n                    .map((name) => swaggerModels[name])\n                    .filter((one) => one && one.name !== swaggerModels.get.name),\n            ]\n\n            R.set(\n                swaggerConst.DECORATORS.API_EXTRA_MODELS,\n                models,\n                swaggerModels.get,\n            )\n        }\n    }\n\n    static setResponseOk(metadata, func: Function) {\n        if (swaggerConst) {\n            R.set(swaggerConst.DECORATORS.API_RESPONSE, metadata, func)\n        }\n    }\n\n    static getExtraModels(target): any[] {\n        return swaggerConst\n            ? R.get(swaggerConst.API_EXTRA_MODELS, target) || []\n            : []\n    }\n\n    static getResponseOk(func: Function) {\n        return swaggerConst\n            ? R.get(swaggerConst.DECORATORS.API_RESPONSE, func) || {}\n            : {}\n    }\n\n    static createResponseMeta(\n        name: BaseRouteName | 'getOne',\n        options: CrudOptions,\n        swaggerModels,\n    ) {\n        if (swagger) {\n            const { query } = options\n\n            switch (name) {\n                case 'getOneBase':\n                    return {\n                        [HttpStatus.OK]: {\n                            description: 'Get one base response',\n                            type: swaggerModels.get,\n                        },\n                    }\n                case 'getOne':\n                    return {\n                        [HttpStatus.OK]: query.alwaysPaginate\n                            ? {\n                                  description: 'Get paginated response',\n                                  type: swaggerModels.getMany,\n                              }\n                            : {\n                                  description: 'Get many base response',\n                                  schema: {\n                                      oneOf: [\n                                          {\n                                              $ref: swagger.getSchemaPath(\n                                                  swaggerModels.getMany.name,\n                                              ),\n                                          },\n                                          {\n                                              type: 'array',\n                                              items: {\n                                                  $ref: swagger.getSchemaPath(\n                                                      swaggerModels.get.name,\n                                                  ),\n                                              },\n                                          },\n                                      ],\n                                  },\n                              },\n                    }\n                default:\n                    // eslint-disable-next-line no-case-declarations\n                    const dto = swaggerModels[name.split('OneBase')[0]]\n\n                    return {\n                        [HttpStatus.OK]: {\n                            description: 'Response',\n                            schema: { $ref: swagger.getSchemaPath(dto.name) },\n                        },\n                    }\n            }\n        } else {\n            return {}\n        }\n    }\n}\n\nexport class SerializeHelper {\n    static createGetManyDto(dto, resourceName: string): any {\n        class GetManyResponseDto implements GetManyDefaultResponse {\n            @ApiProperty({ type: dto, isArray: true })\n            @Type(() => dto)\n            data: any[]\n\n            @ApiProperty({ type: 'number' })\n            count: number\n\n            @ApiProperty({ type: 'number' })\n            total: number\n\n            @ApiProperty({ type: 'number' })\n            page: number\n\n            @ApiProperty({ type: 'number' })\n            pageCount: number\n        }\n\n        Object.defineProperty(GetManyResponseDto, 'name', {\n            writable: false,\n            value: `GetMany${resourceName}ResponseDto`,\n        })\n\n        return GetManyResponseDto\n    }\n\n    static createGetOneResponseDto(resourceName: string): any {\n        class GetOneResponseDto {}\n\n        Object.defineProperty(GetOneResponseDto, 'name', {\n            writable: false,\n            value: `${resourceName}ResponseDto`,\n        })\n\n        return GetOneResponseDto\n    }\n}\n\nexport class CrudConfigService {\n    static config: Partial = {\n        query: {\n            alwaysPaginate: false,\n        },\n    }\n\n    static load(config) {\n        const query = isObjectFull(config.query) ? config.query : {}\n        const params = isObjectFull(config.params) ? config.params : {}\n        const serialize = isObjectFull(config.serialize) ? config.serialize : {}\n\n        CrudConfigService.config = deepmerge(\n            CrudConfigService.config,\n            { query, params, serialize },\n            { arrayMerge: (a, b, c) => b },\n        )\n    }\n}\n\nexport class CrudRoutesFactory {\n    protected options\n\n    protected swaggerModels: any = {}\n\n    constructor(private target, options) {\n        this.options = options\n        this.create()\n\n        console.log(\n            'CrudRoutesFactory::constructor',\n            // { ...options },\n            // this.targetProto,\n            // this.modelType,\n            // this.modelName,\n            // this.swaggerModels,\n        )\n    }\n\n    static create(target, options): CrudRoutesFactory {\n        return new CrudRoutesFactory(target, options)\n    }\n\n    get targetProto() {\n        return this.target.prototype\n    }\n\n    get modelName(): string {\n        return this.options.model.type.name\n    }\n\n    get modelType() {\n        return this.options.model.type\n    }\n\n    private create() {\n        const routesSchema = CrudRoutesFactory.getRoutesSchema()\n        this.mergeOptions()\n        this.setResponseModels()\n        this.createRoutes(routesSchema)\n        this.enableRoutes(routesSchema)\n    }\n\n    getOne(name: BaseRouteName) {\n        this.targetProto[name] = function getOne(req) {\n            return this.service.getOne(req)\n        }\n    }\n\n    getOneBase(name: BaseRouteName) {\n        this.targetProto[name] = function getOneBase(req) {\n            return this.service.getOneBase(req)\n        }\n    }\n\n    static getRoutesSchema() {\n        return [\n            {\n                name: 'getOneBase',\n                path: '/',\n                method: RequestMethod.GET,\n                enable: false,\n                override: false,\n                withParams: true,\n            },\n            {\n                name: 'getOne',\n                path: '/',\n                method: RequestMethod.GET,\n                enable: false,\n                override: false,\n                withParams: false,\n            },\n        ]\n    }\n\n    mergeOptions() {\n        // merge query config\n        const query = isObjectFull(this.options.query) ? this.options.query : {}\n        this.options.query = { ...CrudConfigService.config.query, ...query }\n\n        // set dto\n        if (!isObjectFull(this.options.dto)) {\n            this.options.dto = {}\n        }\n\n        // set serialize\n        this.options.serialize = {\n            ...CrudConfigService.config.serialize,\n            ...this.options.serialize,\n        }\n\n        this.options.serialize.get = isFalse(this.options.serialize.get)\n            ? false\n            : this.options.serialize.get || this.modelType\n\n        this.options.serialize.getMany = isFalse(this.options.serialize.getMany)\n            ? false\n            : this.options.serialize.getMany\n            ? this.options.serialize.getMany\n            : isFalse(this.options.serialize.get)\n            ? false\n            : SerializeHelper.createGetManyDto(\n                  this.options.serialize.get,\n                  this.modelName,\n              )\n\n        this.options.serialize.create = isFalse(this.options.serialize.create)\n            ? false\n            : this.options.serialize.create || this.modelType\n\n        this.options.serialize.update = isFalse(this.options.serialize.update)\n            ? false\n            : this.options.serialize.update || this.modelType\n\n        this.options.serialize.replace = isFalse(this.options.serialize.replace)\n            ? false\n            : this.options.serialize.replace || this.modelType\n\n        this.options.serialize.delete =\n            isFalse(this.options.serialize.delete) ||\n            !this.options.routes?.deleteOneBase?.returnDeleted\n                ? false\n                : this.options.serialize.delete || this.modelType\n\n        R.set('CRUD_OPTIONS_METADATA', this.options, this.target)\n    }\n\n    setResponseModels() {\n        const modelType = isFunction(this.modelType)\n            ? this.modelType\n            : SerializeHelper.createGetOneResponseDto(this.modelName)\n\n        this.swaggerModels.get = isFunction(this.options.serialize.get)\n            ? this.options.serialize.get\n            : modelType\n\n        this.swaggerModels.getMany =\n            this.options.serialize.getMany ||\n            SerializeHelper.createGetManyDto(this.swaggerModels.get, this.modelName)\n\n        this.swaggerModels.create = isFunction(this.options.serialize.create)\n            ? this.options.serialize.create\n            : modelType\n\n        this.swaggerModels.update = isFunction(this.options.serialize.update)\n            ? this.options.serialize.update\n            : modelType\n\n        this.swaggerModels.replace = isFunction(this.options.serialize.replace)\n            ? this.options.serialize.replace\n            : modelType\n\n        this.swaggerModels.delete = isFunction(this.options.serialize.delete)\n            ? this.options.serialize.delete\n            : modelType\n\n        Swagger.setExtraModels(this.swaggerModels)\n    }\n\n    enableRoutes(routesSchema) {\n        routesSchema.forEach((route) => {\n            if (!route.override && route.enable) {\n                R.setRoute(route, this.targetProto[route.name])\n            }\n        })\n    }\n\n    createRoutes(routesSchema) {\n        routesSchema.forEach((route) => {\n            // create base method\n            /* this[route.name](route.name) */\n            route.enable = true\n\n            // set metadata\n            this.setSwaggerResponseOk(route.name)\n        })\n    }\n\n    setSwaggerResponseOk(name) {\n        const metadata = Swagger.getResponseOk(this.targetProto[name]) || {}\n        const metadataToAdd =\n            Swagger.createResponseMeta(name, this.options, this.swaggerModels) || {}\n\n        Swagger.setResponseOk(\n            // @ts-ignore\n            { ...metadata, ...metadataToAdd },\n            this.targetProto[name],\n        )\n    }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Swagger.html":{"url":"classes/Swagger.html","title":"class - Swagger","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Swagger\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/base/swagger-gen/crud-routes.factory.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                createResponseMeta\n                            \n                            \n                                    Static\n                                getExtraModels\n                            \n                            \n                                    Static\n                                getResponseOk\n                            \n                            \n                                    Static\n                                setExtraModels\n                            \n                            \n                                    Static\n                                setResponseOk\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            createResponseMeta\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createResponseMeta(name: BaseRouteName | \"getOne\", options: CrudOptions, swaggerModels)\n                \n            \n\n\n            \n                \n                    Defined in src/base/swagger-gen/crud-routes.factory.ts:86\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                BaseRouteName | \"getOne\"\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                                CrudOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    swaggerModels\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     { [x: number]: { description: string; type: any; schema?: undefined; } | { description: string; s...\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            getExtraModels\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getExtraModels(target)\n                \n            \n\n\n            \n                \n                    Defined in src/base/swagger-gen/crud-routes.factory.ts:74\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    target\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     any[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            getResponseOk\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getResponseOk(func: Function)\n                \n            \n\n\n            \n                \n                    Defined in src/base/swagger-gen/crud-routes.factory.ts:80\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    func\n                                    \n                                                Function\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            setExtraModels\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setExtraModels(swaggerModels)\n                \n            \n\n\n            \n                \n                    Defined in src/base/swagger-gen/crud-routes.factory.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    swaggerModels\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            setResponseOk\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setResponseOk(metadata, func: Function)\n                \n            \n\n\n            \n                \n                    Defined in src/base/swagger-gen/crud-routes.factory.ts:68\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    metadata\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    func\n                                    \n                                                Function\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { HttpStatus, RequestMethod } from '@nestjs/common'\n\nimport { Type } from 'class-transformer'\nimport * as deepmerge from 'deepmerge'\n\nimport {\n    ApiProperty,\n    isArrayFull,\n    isFalse,\n    isFunction,\n    isObjectFull,\n    objKeys,\n    swagger,\n    swaggerConst,\n} from './utils'\nimport type { CrudOptions, GetManyDefaultResponse, BaseRouteName } from './utils'\n\nexport class R {\n    static set(\n        metadataKey,\n        metadataValue,\n        target: Object,\n        propertyKey: string | symbol = undefined,\n    ) {\n        if (!propertyKey) {\n            Reflect.defineMetadata(metadataKey, metadataValue, target)\n        } else {\n            Reflect.defineMetadata(metadataKey, metadataValue, target, propertyKey)\n        }\n    }\n\n    static get(\n        metadataKey,\n        target: Object,\n        propertyKey: string | symbol = undefined,\n    ): T {\n        if (!propertyKey) return Reflect.getMetadata(metadataKey, target)\n\n        return Reflect.getMetadata(metadataKey, target, propertyKey)\n    }\n\n    static setRoute(route, func: Function) {\n        R.set('path', route.path, func)\n        R.set('method', route.method, func)\n    }\n}\n\nexport class Swagger {\n    static setExtraModels(swaggerModels) {\n        if (swaggerConst) {\n            const meta = Swagger.getExtraModels(swaggerModels.get)\n            const models = [\n                ...meta,\n                ...objKeys(swaggerModels)\n                    .map((name) => swaggerModels[name])\n                    .filter((one) => one && one.name !== swaggerModels.get.name),\n            ]\n\n            R.set(\n                swaggerConst.DECORATORS.API_EXTRA_MODELS,\n                models,\n                swaggerModels.get,\n            )\n        }\n    }\n\n    static setResponseOk(metadata, func: Function) {\n        if (swaggerConst) {\n            R.set(swaggerConst.DECORATORS.API_RESPONSE, metadata, func)\n        }\n    }\n\n    static getExtraModels(target): any[] {\n        return swaggerConst\n            ? R.get(swaggerConst.API_EXTRA_MODELS, target) || []\n            : []\n    }\n\n    static getResponseOk(func: Function) {\n        return swaggerConst\n            ? R.get(swaggerConst.DECORATORS.API_RESPONSE, func) || {}\n            : {}\n    }\n\n    static createResponseMeta(\n        name: BaseRouteName | 'getOne',\n        options: CrudOptions,\n        swaggerModels,\n    ) {\n        if (swagger) {\n            const { query } = options\n\n            switch (name) {\n                case 'getOneBase':\n                    return {\n                        [HttpStatus.OK]: {\n                            description: 'Get one base response',\n                            type: swaggerModels.get,\n                        },\n                    }\n                case 'getOne':\n                    return {\n                        [HttpStatus.OK]: query.alwaysPaginate\n                            ? {\n                                  description: 'Get paginated response',\n                                  type: swaggerModels.getMany,\n                              }\n                            : {\n                                  description: 'Get many base response',\n                                  schema: {\n                                      oneOf: [\n                                          {\n                                              $ref: swagger.getSchemaPath(\n                                                  swaggerModels.getMany.name,\n                                              ),\n                                          },\n                                          {\n                                              type: 'array',\n                                              items: {\n                                                  $ref: swagger.getSchemaPath(\n                                                      swaggerModels.get.name,\n                                                  ),\n                                              },\n                                          },\n                                      ],\n                                  },\n                              },\n                    }\n                default:\n                    // eslint-disable-next-line no-case-declarations\n                    const dto = swaggerModels[name.split('OneBase')[0]]\n\n                    return {\n                        [HttpStatus.OK]: {\n                            description: 'Response',\n                            schema: { $ref: swagger.getSchemaPath(dto.name) },\n                        },\n                    }\n            }\n        } else {\n            return {}\n        }\n    }\n}\n\nexport class SerializeHelper {\n    static createGetManyDto(dto, resourceName: string): any {\n        class GetManyResponseDto implements GetManyDefaultResponse {\n            @ApiProperty({ type: dto, isArray: true })\n            @Type(() => dto)\n            data: any[]\n\n            @ApiProperty({ type: 'number' })\n            count: number\n\n            @ApiProperty({ type: 'number' })\n            total: number\n\n            @ApiProperty({ type: 'number' })\n            page: number\n\n            @ApiProperty({ type: 'number' })\n            pageCount: number\n        }\n\n        Object.defineProperty(GetManyResponseDto, 'name', {\n            writable: false,\n            value: `GetMany${resourceName}ResponseDto`,\n        })\n\n        return GetManyResponseDto\n    }\n\n    static createGetOneResponseDto(resourceName: string): any {\n        class GetOneResponseDto {}\n\n        Object.defineProperty(GetOneResponseDto, 'name', {\n            writable: false,\n            value: `${resourceName}ResponseDto`,\n        })\n\n        return GetOneResponseDto\n    }\n}\n\nexport class CrudConfigService {\n    static config: Partial = {\n        query: {\n            alwaysPaginate: false,\n        },\n    }\n\n    static load(config) {\n        const query = isObjectFull(config.query) ? config.query : {}\n        const params = isObjectFull(config.params) ? config.params : {}\n        const serialize = isObjectFull(config.serialize) ? config.serialize : {}\n\n        CrudConfigService.config = deepmerge(\n            CrudConfigService.config,\n            { query, params, serialize },\n            { arrayMerge: (a, b, c) => b },\n        )\n    }\n}\n\nexport class CrudRoutesFactory {\n    protected options\n\n    protected swaggerModels: any = {}\n\n    constructor(private target, options) {\n        this.options = options\n        this.create()\n\n        console.log(\n            'CrudRoutesFactory::constructor',\n            // { ...options },\n            // this.targetProto,\n            // this.modelType,\n            // this.modelName,\n            // this.swaggerModels,\n        )\n    }\n\n    static create(target, options): CrudRoutesFactory {\n        return new CrudRoutesFactory(target, options)\n    }\n\n    get targetProto() {\n        return this.target.prototype\n    }\n\n    get modelName(): string {\n        return this.options.model.type.name\n    }\n\n    get modelType() {\n        return this.options.model.type\n    }\n\n    private create() {\n        const routesSchema = CrudRoutesFactory.getRoutesSchema()\n        this.mergeOptions()\n        this.setResponseModels()\n        this.createRoutes(routesSchema)\n        this.enableRoutes(routesSchema)\n    }\n\n    getOne(name: BaseRouteName) {\n        this.targetProto[name] = function getOne(req) {\n            return this.service.getOne(req)\n        }\n    }\n\n    getOneBase(name: BaseRouteName) {\n        this.targetProto[name] = function getOneBase(req) {\n            return this.service.getOneBase(req)\n        }\n    }\n\n    static getRoutesSchema() {\n        return [\n            {\n                name: 'getOneBase',\n                path: '/',\n                method: RequestMethod.GET,\n                enable: false,\n                override: false,\n                withParams: true,\n            },\n            {\n                name: 'getOne',\n                path: '/',\n                method: RequestMethod.GET,\n                enable: false,\n                override: false,\n                withParams: false,\n            },\n        ]\n    }\n\n    mergeOptions() {\n        // merge query config\n        const query = isObjectFull(this.options.query) ? this.options.query : {}\n        this.options.query = { ...CrudConfigService.config.query, ...query }\n\n        // set dto\n        if (!isObjectFull(this.options.dto)) {\n            this.options.dto = {}\n        }\n\n        // set serialize\n        this.options.serialize = {\n            ...CrudConfigService.config.serialize,\n            ...this.options.serialize,\n        }\n\n        this.options.serialize.get = isFalse(this.options.serialize.get)\n            ? false\n            : this.options.serialize.get || this.modelType\n\n        this.options.serialize.getMany = isFalse(this.options.serialize.getMany)\n            ? false\n            : this.options.serialize.getMany\n            ? this.options.serialize.getMany\n            : isFalse(this.options.serialize.get)\n            ? false\n            : SerializeHelper.createGetManyDto(\n                  this.options.serialize.get,\n                  this.modelName,\n              )\n\n        this.options.serialize.create = isFalse(this.options.serialize.create)\n            ? false\n            : this.options.serialize.create || this.modelType\n\n        this.options.serialize.update = isFalse(this.options.serialize.update)\n            ? false\n            : this.options.serialize.update || this.modelType\n\n        this.options.serialize.replace = isFalse(this.options.serialize.replace)\n            ? false\n            : this.options.serialize.replace || this.modelType\n\n        this.options.serialize.delete =\n            isFalse(this.options.serialize.delete) ||\n            !this.options.routes?.deleteOneBase?.returnDeleted\n                ? false\n                : this.options.serialize.delete || this.modelType\n\n        R.set('CRUD_OPTIONS_METADATA', this.options, this.target)\n    }\n\n    setResponseModels() {\n        const modelType = isFunction(this.modelType)\n            ? this.modelType\n            : SerializeHelper.createGetOneResponseDto(this.modelName)\n\n        this.swaggerModels.get = isFunction(this.options.serialize.get)\n            ? this.options.serialize.get\n            : modelType\n\n        this.swaggerModels.getMany =\n            this.options.serialize.getMany ||\n            SerializeHelper.createGetManyDto(this.swaggerModels.get, this.modelName)\n\n        this.swaggerModels.create = isFunction(this.options.serialize.create)\n            ? this.options.serialize.create\n            : modelType\n\n        this.swaggerModels.update = isFunction(this.options.serialize.update)\n            ? this.options.serialize.update\n            : modelType\n\n        this.swaggerModels.replace = isFunction(this.options.serialize.replace)\n            ? this.options.serialize.replace\n            : modelType\n\n        this.swaggerModels.delete = isFunction(this.options.serialize.delete)\n            ? this.options.serialize.delete\n            : modelType\n\n        Swagger.setExtraModels(this.swaggerModels)\n    }\n\n    enableRoutes(routesSchema) {\n        routesSchema.forEach((route) => {\n            if (!route.override && route.enable) {\n                R.setRoute(route, this.targetProto[route.name])\n            }\n        })\n    }\n\n    createRoutes(routesSchema) {\n        routesSchema.forEach((route) => {\n            // create base method\n            /* this[route.name](route.name) */\n            route.enable = true\n\n            // set metadata\n            this.setSwaggerResponseOk(route.name)\n        })\n    }\n\n    setSwaggerResponseOk(name) {\n        const metadata = Swagger.getResponseOk(this.targetProto[name]) || {}\n        const metadataToAdd =\n            Swagger.createResponseMeta(name, this.options, this.swaggerModels) || {}\n\n        Swagger.setResponseOk(\n            // @ts-ignore\n            { ...metadata, ...metadataToAdd },\n            this.targetProto[name],\n        )\n    }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Tag.html":{"url":"classes/Tag.html","title":"class - Tag","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Tag\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/tags/tag.model.ts\n        \n\n\n            \n                Extends\n            \n            \n                        BaseModel\n            \n\n            \n                Implements\n            \n            \n                            ITag\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                jsonSchema\n                            \n                            \n                                name\n                            \n                            \n                                    Static\n                                tableName\n                            \n                            \n                                created_at\n                            \n                            \n                                    Optional\n                                deleted_at\n                            \n                            \n                                    Static\n                                hidden\n                            \n                            \n                                id\n                            \n                            \n                                    Static\n                                QueryBuilder\n                            \n                            \n                                QueryBuilderType\n                            \n                            \n                                updated_at\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                fetchRelation\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            jsonSchema\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     JSONSchema\n\n                        \n                    \n                    \n                        \n                            Default value : {\n        type: 'object',\n        required: ['name'],\n        properties: {\n            id: { type: 'integer' },\n            name: { type: 'string', minLength: 2, maxLength: 255 },\n        },\n    }\n                        \n                    \n                        \n                            \n                                    Defined in src/tags/tag.model.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/tags/tag.model.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            tableName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'tags'\n                        \n                    \n                        \n                            \n                                    Defined in src/tags/tag.model.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            created_at\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseModel:34\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            deleted_at\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     any | null\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseModel:38\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            hidden\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : ['salt', 'password', 'created_at', 'updated_at', 'deleted_at']\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseModel:26\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseModel:32\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            QueryBuilder\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : CustomQueryBuilder\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseModel:30\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            QueryBuilderType\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         CustomQueryBuilder<>\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseModel:28\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updated_at\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseModel:36\n\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            fetchRelation\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    fetchRelation(expression: RelationExpression, options: object)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseModel\n\n                \n            \n            \n                \n                        Defined in         BaseModel:41\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    expression\n                                    \n                                                RelationExpression\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    options\n                                    \n                                                object\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType as MappedPartialType } from '@nestjs/mapped-types'\nimport { ApiProperty, PartialType } from '@nestjs/swagger'\n\nimport { IsNotEmpty, IsString, MaxLength, MinLength } from 'class-validator'\nimport type { JSONSchema } from 'objection'\n\nimport { BaseModel } from '../database/models/base.model'\n\ninterface ITag {\n    name: string\n}\n\nexport class Tag extends BaseModel implements ITag {\n    static tableName = 'tags'\n\n    @ApiProperty() name: string\n\n    // JSON schema is not the database schema! Nothing is generated based on this.\n    // This is only used for validation. Whenever a model instance is created it is checked against this schema.\n    static jsonSchema: JSONSchema = {\n        type: 'object',\n        required: ['name'],\n        properties: {\n            id: { type: 'integer' },\n            name: { type: 'string', minLength: 2, maxLength: 255 },\n        },\n    }\n}\n\nexport class CreateTagsDto implements ITag {\n    @ApiProperty()\n    @IsString()\n    @IsNotEmpty()\n    @MinLength(2)\n    @MaxLength(36)\n    name: string\n}\n\nexport class UpdateTagsDto extends PartialType(CreateTagsDto) {}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/TagsController.html":{"url":"controllers/TagsController.html","title":"controller - TagsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  TagsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/tags/tags.controller.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                delete\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            create\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    create(tag: CreateTagsDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n            \n                \n                    Defined in src/tags/tags.controller.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    tag\n                                    \n                                                CreateTagsDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            delete\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n            \n                \n                    Defined in src/tags/tags.controller.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findAll\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/tags/tags.controller.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     {}\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findOne\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n            \n                \n                    Defined in src/tags/tags.controller.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            update\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: number, updatedTag: UpdateTagsDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Put(':id')\n                \n            \n\n            \n                \n                    Defined in src/tags/tags.controller.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updatedTag\n                                    \n                                                UpdateTagsDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        /* eslint-disable no-use-before-define */\nimport {\n    Body,\n    Controller,\n    Delete,\n    Get,\n    Param,\n    ParseIntPipe,\n    Post,\n    Put,\n} from '@nestjs/common'\nimport { ApiTags } from '@nestjs/swagger'\n\nimport { CreateTagsDto, UpdateTagsDto } from './tag.model'\nimport { TagsService } from './tags.service'\n\n@Controller(TagsController.path)\n@ApiTags(TagsController.name)\nexport class TagsController {\n    static path = 'tags'\n\n    constructor(private service: TagsService) {}\n\n    @Get()\n    async findAll() {\n        return this.service.findAll()\n    }\n\n    @Get(':id')\n    async findOne(@Param('id', ParseIntPipe) id: number) {\n        return this.service.findOne(id)\n    }\n\n    @Post()\n    async create(@Body() tag: CreateTagsDto) {\n        return this.service.create(tag)\n    }\n\n    @Delete(':id')\n    async delete(@Param('id', ParseIntPipe) id: number) {\n        return this.service.delete(id)\n    }\n\n    @Put(':id')\n    async update(\n        @Param('id', ParseIntPipe) id: number,\n        @Body() updatedTag: UpdateTagsDto,\n    ) {\n        return this.service.update(id, updatedTag)\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TagsModule.html":{"url":"modules/TagsModule.html","title":"module - TagsModule","body":"\n                   \n\n\n\n\n    Modules\n    TagsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TagsModule\n\n\n\ncluster_TagsModule_providers\n\n\n\ncluster_TagsModule_exports\n\n\n\n\nTagsService \n\nTagsService \n\n\n\nTagsModule\n\nTagsModule\n\nTagsService  -->\n\nTagsModule->TagsService \n\n\n\n\n\nTagsService\n\nTagsService\n\nTagsModule -->\n\nTagsService->TagsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/tags/tags.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            TagsService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            TagsController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            TagsService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common'\n\nimport { TagsController } from './tags.controller'\nimport { TagsService } from './tags.service'\n\n@Module({\n    controllers: [TagsController],\n    providers: [TagsService],\n    exports: [TagsService],\n})\nexport class TagsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TagsService.html":{"url":"injectables/TagsService.html","title":"injectable - TagsService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  TagsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/tags/tags.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                delete\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(tag: ModelClass)\n                    \n                \n                        \n                            \n                                Defined in src/tags/tags.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        tag\n                                                  \n                                                        \n                                                                        ModelClass\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            create\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    create(tag)\n                \n            \n\n\n            \n                \n                    Defined in src/tags/tags.service.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    tag\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            delete\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/tags/tags.service.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findAll\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll()\n                \n            \n\n\n            \n                \n                    Defined in src/tags/tags.service.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     {}\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findOne\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/tags/tags.service.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            update\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: number, tag)\n                \n            \n\n\n            \n                \n                    Defined in src/tags/tags.service.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    tag\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Inject, Injectable } from '@nestjs/common'\n\nimport { ModelClass, transaction } from 'objection'\n\nimport { Tag } from './tag.model'\n\n@Injectable()\nexport class TagsService {\n    constructor(@Inject(Tag.name) private tag: ModelClass) {}\n\n    async findAll() {\n        return this.tag.query()\n    }\n\n    async findOne(id: number) {\n        return this.tag.query().findById(id)\n    }\n\n    async create(tag) {\n        return this.tag.query().insert(tag).returning('*')\n    }\n\n    async update(id: number, tag) {\n        return this.tag.query().patch(tag).where({ id }).returning('*').first()\n    }\n\n    async delete(id: number) {\n        return transaction(this.tag, async (_, trx) => {\n            return this.tag\n                .query()\n                .deleteById(id)\n                .returning('*')\n                .first()\n                .transacting(trx)\n        })\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TimeoutInterceptor.html":{"url":"injectables/TimeoutInterceptor.html","title":"injectable - TimeoutInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  TimeoutInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/infra/interceptors/timeout.ts\n        \n\n            \n                Description\n            \n            \n                Timeout interceptor is Observer which terminate request if it takes more than timeout value\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            intercept\n                        \n                        \n                    \n                \n            \n            \n                \nintercept(context: ExecutionContext, next: CallHandler)\n                \n            \n\n\n            \n                \n                    Defined in src/infra/interceptors/timeout.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                            CallHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n    Injectable,\n    NestInterceptor,\n    ExecutionContext,\n    CallHandler,\n    RequestTimeoutException,\n} from '@nestjs/common'\n\nimport { Observable, throwError, TimeoutError } from 'rxjs'\nimport { catchError, timeout } from 'rxjs/operators'\n\n/**\n * Timeout interceptor is Observer which terminate request if it takes more than timeout value\n */\n@Injectable()\nexport class TimeoutInterceptor implements NestInterceptor {\n    intercept(context: ExecutionContext, next: CallHandler): Observable {\n        return next.handle().pipe(\n            timeout(10000), // end request after 10_000 milliseconds\n\n            catchError((e) => {\n                if (e instanceof TimeoutError) {\n                    return throwError(new RequestTimeoutException())\n                }\n\n                return throwError(e)\n            }),\n        )\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TransformInterceptor.html":{"url":"injectables/TransformInterceptor.html","title":"injectable - TransformInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  TransformInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/infra/interceptors/transform.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            intercept\n                        \n                        \n                    \n                \n            \n            \n                \nintercept(context: ExecutionContext, next: CallHandler)\n                \n            \n\n\n            \n                \n                    Defined in src/infra/interceptors/transform.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                            CallHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n    Injectable,\n    NestInterceptor,\n    ExecutionContext,\n    CallHandler,\n} from '@nestjs/common'\n\nimport { Observable } from 'rxjs'\nimport { map } from 'rxjs/operators'\n\nexport interface Response {\n    data: T\n}\n\n@Injectable()\nexport class TransformInterceptor implements NestInterceptor> {\n    intercept(\n        context: ExecutionContext,\n        next: CallHandler,\n    ): Observable> {\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n        return next.handle().pipe(map((data) => ({ data })))\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateTagsDto.html":{"url":"classes/UpdateTagsDto.html","title":"class - UpdateTagsDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateTagsDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/tags/tag.model.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType as MappedPartialType } from '@nestjs/mapped-types'\nimport { ApiProperty, PartialType } from '@nestjs/swagger'\n\nimport { IsNotEmpty, IsString, MaxLength, MinLength } from 'class-validator'\nimport type { JSONSchema } from 'objection'\n\nimport { BaseModel } from '../database/models/base.model'\n\ninterface ITag {\n    name: string\n}\n\nexport class Tag extends BaseModel implements ITag {\n    static tableName = 'tags'\n\n    @ApiProperty() name: string\n\n    // JSON schema is not the database schema! Nothing is generated based on this.\n    // This is only used for validation. Whenever a model instance is created it is checked against this schema.\n    static jsonSchema: JSONSchema = {\n        type: 'object',\n        required: ['name'],\n        properties: {\n            id: { type: 'integer' },\n            name: { type: 'string', minLength: 2, maxLength: 255 },\n        },\n    }\n}\n\nexport class CreateTagsDto implements ITag {\n    @ApiProperty()\n    @IsString()\n    @IsNotEmpty()\n    @MinLength(2)\n    @MaxLength(36)\n    name: string\n}\n\nexport class UpdateTagsDto extends PartialType(CreateTagsDto) {}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateUserDto.html":{"url":"classes/UpdateUserDto.html","title":"class - UpdateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/user.model.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType as MappedPartialType } from '@nestjs/mapped-types'\nimport { ApiProperty, PartialType } from '@nestjs/swagger'\n\nimport {\n    IsString,\n    MinLength,\n    IsNotEmpty,\n    IsOptional,\n    MaxLength,\n    IsEmail,\n    IsBoolean,\n} from 'class-validator'\nimport type { JSONSchema, Modifiers } from 'objection'\n\nimport { BaseModel } from '../database/models/base.model'\n\ninterface IUser {\n    username: string\n    email: string\n    firstName: string\n    lastName: string\n    isActive: boolean\n    password: string\n}\n\nexport class User extends BaseModel implements IUser {\n    static tableName = 'users'\n\n    username: string\n\n    email: string\n\n    firstName: string\n\n    lastName: string\n\n    isActive: boolean\n\n    password: string\n\n    // JSON schema is not the database schema! Nothing is generated based on this.\n    // This is only used for validation. Whenever a model instance is created it is checked against this schema.\n    static jsonSchema: JSONSchema = {\n        type: 'object',\n        required: ['username', 'email', 'password'],\n        properties: {\n            id: { type: 'integer', readOnly: true },\n            username: { type: 'string', minLength: 3, maxLength: 255 },\n            email: {\n                type: 'string',\n                minLength: 3,\n                maxLength: 255,\n                format: 'email',\n            },\n            password: { type: 'string', minLength: 8, maxLength: 255 },\n            firstName: { type: 'string', minLength: 1, maxLength: 255 },\n            lastName: { type: 'string', minLength: 1, maxLength: 255 },\n            isActive: { type: 'boolean' },\n        },\n    }\n\n    // Modifiers are reusable query snippets that can be used in various places.\n    static modifiers: Modifiers = {\n        // Our example modifier is a a semi-dumb fuzzy name match. We split the name into pieces using whitespace\n        // and then try to partially match each of those pieces to both the `firstName` and the `lastName` fields.\n\n        searchByName(query, name: string) {\n            // This `where` simply creates parentheses so that other `where` statements don't get mixed with the these.\n\n            // eslint-disable-next-line @typescript-eslint/no-floating-promises\n            query.where((q) => {\n                // eslint-disable-next-line no-restricted-syntax\n                for (const namePart of name.trim().split(/\\s+/)) {\n                    // eslint-disable-next-line no-restricted-syntax\n                    for (const column of ['firstName', 'lastName']) {\n                        // eslint-disable-next-line @typescript-eslint/no-floating-promises\n                        q.orWhereRaw('lower(??) like ?', [\n                            column,\n                            `${namePart.toLowerCase()}%`,\n                        ])\n                    }\n                }\n            })\n        },\n    }\n}\n\nexport class CreateUserDto implements IUser {\n    @ApiProperty()\n    @IsString()\n    @IsNotEmpty()\n    @MinLength(2)\n    @MaxLength(36)\n    username: string\n\n    @ApiProperty()\n    @IsEmail()\n    @IsNotEmpty()\n    @MinLength(2)\n    email: string\n\n    @ApiProperty()\n    @IsString()\n    @IsNotEmpty()\n    @MinLength(8)\n    password: string\n\n    @ApiProperty()\n    @IsString()\n    @IsNotEmpty()\n    @MinLength(2)\n    firstName: string\n\n    @ApiProperty()\n    @IsString()\n    @IsNotEmpty()\n    @MinLength(2)\n    lastName: string\n\n    @ApiProperty()\n    @IsBoolean()\n    isActive: boolean\n}\n\nexport class UpdateUserDto extends PartialType(CreateUserDto) {}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/User.html":{"url":"classes/User.html","title":"class - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/user.model.ts\n        \n\n\n            \n                Extends\n            \n            \n                        BaseModel\n            \n\n            \n                Implements\n            \n            \n                            IUser\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                email\n                            \n                            \n                                firstName\n                            \n                            \n                                isActive\n                            \n                            \n                                    Static\n                                jsonSchema\n                            \n                            \n                                lastName\n                            \n                            \n                                    Static\n                                modifiers\n                            \n                            \n                                password\n                            \n                            \n                                    Static\n                                tableName\n                            \n                            \n                                username\n                            \n                            \n                                created_at\n                            \n                            \n                                    Optional\n                                deleted_at\n                            \n                            \n                                    Static\n                                hidden\n                            \n                            \n                                id\n                            \n                            \n                                    Static\n                                QueryBuilder\n                            \n                            \n                                QueryBuilderType\n                            \n                            \n                                updated_at\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                fetchRelation\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            email\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/users/user.model.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            firstName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/users/user.model.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isActive\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/users/user.model.ts:37\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            jsonSchema\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     JSONSchema\n\n                        \n                    \n                    \n                        \n                            Default value : {\n        type: 'object',\n        required: ['username', 'email', 'password'],\n        properties: {\n            id: { type: 'integer', readOnly: true },\n            username: { type: 'string', minLength: 3, maxLength: 255 },\n            email: {\n                type: 'string',\n                minLength: 3,\n                maxLength: 255,\n                format: 'email',\n            },\n            password: { type: 'string', minLength: 8, maxLength: 255 },\n            firstName: { type: 'string', minLength: 1, maxLength: 255 },\n            lastName: { type: 'string', minLength: 1, maxLength: 255 },\n            isActive: { type: 'boolean' },\n        },\n    }\n                        \n                    \n                        \n                            \n                                    Defined in src/users/user.model.ts:43\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            lastName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/users/user.model.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            modifiers\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Modifiers\n\n                        \n                    \n                    \n                        \n                            Default value : {\n        // Our example modifier is a a semi-dumb fuzzy name match. We split the name into pieces using whitespace\n        // and then try to partially match each of those pieces to both the `firstName` and the `lastName` fields.\n\n        searchByName(query, name: string) {\n            // This `where` simply creates parentheses so that other `where` statements don't get mixed with the these.\n\n            // eslint-disable-next-line @typescript-eslint/no-floating-promises\n            query.where((q) => {\n                // eslint-disable-next-line no-restricted-syntax\n                for (const namePart of name.trim().split(/\\s+/)) {\n                    // eslint-disable-next-line no-restricted-syntax\n                    for (const column of ['firstName', 'lastName']) {\n                        // eslint-disable-next-line @typescript-eslint/no-floating-promises\n                        q.orWhereRaw('lower(??) like ?', [\n                            column,\n                            `${namePart.toLowerCase()}%`,\n                        ])\n                    }\n                }\n            })\n        },\n    }\n                        \n                    \n                        \n                            \n                                    Defined in src/users/user.model.ts:63\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            password\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/users/user.model.ts:39\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            tableName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'users'\n                        \n                    \n                        \n                            \n                                    Defined in src/users/user.model.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            username\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/users/user.model.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            created_at\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseModel:34\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            deleted_at\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     any | null\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseModel:38\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            hidden\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : ['salt', 'password', 'created_at', 'updated_at', 'deleted_at']\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseModel:26\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseModel:32\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            QueryBuilder\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : CustomQueryBuilder\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseModel:30\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            QueryBuilderType\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         CustomQueryBuilder<>\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseModel:28\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updated_at\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseModel:36\n\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            fetchRelation\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    fetchRelation(expression: RelationExpression, options: object)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseModel\n\n                \n            \n            \n                \n                        Defined in         BaseModel:41\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    expression\n                                    \n                                                RelationExpression\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    options\n                                    \n                                                object\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType as MappedPartialType } from '@nestjs/mapped-types'\nimport { ApiProperty, PartialType } from '@nestjs/swagger'\n\nimport {\n    IsString,\n    MinLength,\n    IsNotEmpty,\n    IsOptional,\n    MaxLength,\n    IsEmail,\n    IsBoolean,\n} from 'class-validator'\nimport type { JSONSchema, Modifiers } from 'objection'\n\nimport { BaseModel } from '../database/models/base.model'\n\ninterface IUser {\n    username: string\n    email: string\n    firstName: string\n    lastName: string\n    isActive: boolean\n    password: string\n}\n\nexport class User extends BaseModel implements IUser {\n    static tableName = 'users'\n\n    username: string\n\n    email: string\n\n    firstName: string\n\n    lastName: string\n\n    isActive: boolean\n\n    password: string\n\n    // JSON schema is not the database schema! Nothing is generated based on this.\n    // This is only used for validation. Whenever a model instance is created it is checked against this schema.\n    static jsonSchema: JSONSchema = {\n        type: 'object',\n        required: ['username', 'email', 'password'],\n        properties: {\n            id: { type: 'integer', readOnly: true },\n            username: { type: 'string', minLength: 3, maxLength: 255 },\n            email: {\n                type: 'string',\n                minLength: 3,\n                maxLength: 255,\n                format: 'email',\n            },\n            password: { type: 'string', minLength: 8, maxLength: 255 },\n            firstName: { type: 'string', minLength: 1, maxLength: 255 },\n            lastName: { type: 'string', minLength: 1, maxLength: 255 },\n            isActive: { type: 'boolean' },\n        },\n    }\n\n    // Modifiers are reusable query snippets that can be used in various places.\n    static modifiers: Modifiers = {\n        // Our example modifier is a a semi-dumb fuzzy name match. We split the name into pieces using whitespace\n        // and then try to partially match each of those pieces to both the `firstName` and the `lastName` fields.\n\n        searchByName(query, name: string) {\n            // This `where` simply creates parentheses so that other `where` statements don't get mixed with the these.\n\n            // eslint-disable-next-line @typescript-eslint/no-floating-promises\n            query.where((q) => {\n                // eslint-disable-next-line no-restricted-syntax\n                for (const namePart of name.trim().split(/\\s+/)) {\n                    // eslint-disable-next-line no-restricted-syntax\n                    for (const column of ['firstName', 'lastName']) {\n                        // eslint-disable-next-line @typescript-eslint/no-floating-promises\n                        q.orWhereRaw('lower(??) like ?', [\n                            column,\n                            `${namePart.toLowerCase()}%`,\n                        ])\n                    }\n                }\n            })\n        },\n    }\n}\n\nexport class CreateUserDto implements IUser {\n    @ApiProperty()\n    @IsString()\n    @IsNotEmpty()\n    @MinLength(2)\n    @MaxLength(36)\n    username: string\n\n    @ApiProperty()\n    @IsEmail()\n    @IsNotEmpty()\n    @MinLength(2)\n    email: string\n\n    @ApiProperty()\n    @IsString()\n    @IsNotEmpty()\n    @MinLength(8)\n    password: string\n\n    @ApiProperty()\n    @IsString()\n    @IsNotEmpty()\n    @MinLength(2)\n    firstName: string\n\n    @ApiProperty()\n    @IsString()\n    @IsNotEmpty()\n    @MinLength(2)\n    lastName: string\n\n    @ApiProperty()\n    @IsBoolean()\n    isActive: boolean\n}\n\nexport class UpdateUserDto extends PartialType(CreateUserDto) {}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UserPost.html":{"url":"interfaces/UserPost.html","title":"interface - UserPost","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  UserPost\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/domain.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        adCorporateLogoUrl\n                                \n                                \n                                        commentsCount\n                                \n                                \n                                        corporateDescription\n                                \n                                \n                                        corporateName\n                                \n                                \n                                        isUserReactedToPost\n                                \n                                \n                                        ownPage\n                                \n                                \n                                        postBy\n                                \n                                \n                                        postId\n                                \n                                \n                                        postImage\n                                \n                                \n                                        postTime\n                                \n                                \n                                        postType\n                                \n                                \n                                        postVideo\n                                \n                                \n                                        reactionsCount\n                                \n                                \n                                        timeAgo\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        adCorporateLogoUrl\n                                    \n                                \n                                \n                                    \n                                        adCorporateLogoUrl:     string | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        commentsCount\n                                    \n                                \n                                \n                                    \n                                        commentsCount:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        corporateDescription\n                                    \n                                \n                                \n                                    \n                                        corporateDescription:     string | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        corporateName\n                                    \n                                \n                                \n                                    \n                                        corporateName:     string | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isUserReactedToPost\n                                    \n                                \n                                \n                                    \n                                        isUserReactedToPost:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ownPage\n                                    \n                                \n                                \n                                    \n                                        ownPage:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        postBy\n                                    \n                                \n                                \n                                    \n                                        postBy:         PostedByUser\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         PostedByUser\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        postId\n                                    \n                                \n                                \n                                    \n                                        postId:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        postImage\n                                    \n                                \n                                \n                                    \n                                        postImage:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        postTime\n                                    \n                                \n                                \n                                    \n                                        postTime:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        postType\n                                    \n                                \n                                \n                                    \n                                        postType:         PostType\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         PostType\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        postVideo\n                                    \n                                \n                                \n                                    \n                                        postVideo:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        reactionsCount\n                                    \n                                \n                                \n                                    \n                                        reactionsCount:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        timeAgo\n                                    \n                                \n                                \n                                    \n                                        timeAgo:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { HttpStatus } from '@nestjs/common'\n\nexport type Result =\n    | GetAppLaunchData\n    | GetUserProfile\n    | GetUserPosts\n    | GetComments\n    | GetRescueList\n    | GetFollowers\n    | GetFollowing\n\nexport type APIError = Error | string | null\n\nexport interface APIResponse {\n    data: T\n    error: APIError\n    message: string | string[]\n    statusCode: HttpStatus\n\n    count?: number\n    page?: number\n    pageCount?: number\n    total?: number\n}\n\nexport interface GetAppLaunchData {\n    link: 'api:/'\n    response: APIResponse\n}\n\nexport interface GetUserProfile {\n    link: 'api:v1/user/getUserProfile?userId=25'\n    response: APIResponse\n}\n\nexport interface GetUserPosts {\n    link: 'api:v1/user/getUserPosts?pageNo=0&pageSize=25'\n    response: APIResponse\n}\n\nexport interface GetRescueList {\n    link: 'api:v1/rescue/getRescueList?pageNo=0&pageSize=10&status=pending|inProgress|completed|nearest'\n    response: APIResponse\n}\n\nexport interface GetComments {\n    link: 'api:v1/rescue/getComments?pageNo=0&pageSize=10&postId=1230'\n    response: APIResponse\n}\n\nexport interface GetFollowers {\n    link: 'api:v1/rescue/getUserFollowers?userId=1230'\n    response: APIResponse\n}\n\nexport interface GetFollowing {\n    link: 'api:v1/rescue/getUserFollowing?userId=1230'\n    response: APIResponse\n}\n\nexport interface AppLaunchAction {\n    actionId: number\n    action: string\n    isActive: boolean\n    subject?: string\n}\n\nexport interface User {\n    usesId: number\n\n    coverImage: string\n    following: boolean\n    gender: string\n    isOwnProfile: number\n    isRescuer: boolean\n    latitude: number\n    longitude: number\n    numberOfFollowers: number\n    numberOfFollowing: number\n    numberOfPosts: number\n    numberOfRescuesCompleted: number\n    numberOfRescuesCreated: number\n    numberOfRescuesInProgress: number\n    profileImage: string\n    rescuer: boolean\n    userAddress: string\n    userContacts: string\n    userEmail: string\n    userName: string\n    badge: {\n        badgeId: number\n        badgeName: string\n        badgeDescription: string\n        recuesCompletionNeeded: number\n    }\n    setting: {\n        showMyContacts: boolean\n        getNotifications: boolean\n    }\n}\n\nexport interface PostType {\n    postTypeId: number\n    postType: string\n}\n\nexport interface PostedByUser {\n    usesId: number\n    badgeName: string\n    following: boolean\n    profileImage: string\n    rescuer: boolean\n    userName: string\n}\n\nexport interface UserPost {\n    postId: number\n    commentsCount: number\n    isUserReactedToPost: boolean\n    ownPage: boolean\n    postBy: PostedByUser\n    postImage: string\n    postTime: string\n    postType: PostType\n    postVideo: string\n    reactionsCount: number\n    timeAgo: string\n\n    adCorporateLogoUrl: string | null\n    corporateDescription: string | null\n    corporateName: string | null\n}\n\nexport interface UserPosts {\n    isRecent: boolean\n    feed: UserPost[]\n}\n\nexport interface Rescues {\n    rescueId: number\n    animalImageUrl: string\n    distance: number\n    distanceAway: string\n    emergencyType: string\n    postedBy: string\n    postedMinAgo: string\n    rescueDate: Date\n    rescuedPetName: string\n    rescueLocality: string\n    rescuers: {\n        contact: number\n        name: string\n        profileId: number\n        profileImageUrl: string\n        rescues: boolean\n        showMyNumber: boolean\n    }\n    rescueStatus: string\n    viewsCont: number\n}\n\nexport interface RescueLists {\n    rescues: Rescues[]\n}\n\nexport interface Comment {\n    commentId: number\n    comment: string\n    commentedUseName: string\n    commentedUserId: number\n    timeAgo: string\n}\n\nexport interface Comments {\n    comments: Comment[]\n}\n\nexport interface Follower {\n    userId: number\n    userName: string\n    profileImage: string\n    areYouFollowing: boolean\n    showRemoveOption: boolean\n}\n\nexport interface Following extends Follower {}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UserPosts.html":{"url":"interfaces/UserPosts.html","title":"interface - UserPosts","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  UserPosts\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/domain.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        feed\n                                \n                                \n                                        isRecent\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        feed\n                                    \n                                \n                                \n                                    \n                                        feed:         UserPost[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         UserPost[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isRecent\n                                    \n                                \n                                \n                                    \n                                        isRecent:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { HttpStatus } from '@nestjs/common'\n\nexport type Result =\n    | GetAppLaunchData\n    | GetUserProfile\n    | GetUserPosts\n    | GetComments\n    | GetRescueList\n    | GetFollowers\n    | GetFollowing\n\nexport type APIError = Error | string | null\n\nexport interface APIResponse {\n    data: T\n    error: APIError\n    message: string | string[]\n    statusCode: HttpStatus\n\n    count?: number\n    page?: number\n    pageCount?: number\n    total?: number\n}\n\nexport interface GetAppLaunchData {\n    link: 'api:/'\n    response: APIResponse\n}\n\nexport interface GetUserProfile {\n    link: 'api:v1/user/getUserProfile?userId=25'\n    response: APIResponse\n}\n\nexport interface GetUserPosts {\n    link: 'api:v1/user/getUserPosts?pageNo=0&pageSize=25'\n    response: APIResponse\n}\n\nexport interface GetRescueList {\n    link: 'api:v1/rescue/getRescueList?pageNo=0&pageSize=10&status=pending|inProgress|completed|nearest'\n    response: APIResponse\n}\n\nexport interface GetComments {\n    link: 'api:v1/rescue/getComments?pageNo=0&pageSize=10&postId=1230'\n    response: APIResponse\n}\n\nexport interface GetFollowers {\n    link: 'api:v1/rescue/getUserFollowers?userId=1230'\n    response: APIResponse\n}\n\nexport interface GetFollowing {\n    link: 'api:v1/rescue/getUserFollowing?userId=1230'\n    response: APIResponse\n}\n\nexport interface AppLaunchAction {\n    actionId: number\n    action: string\n    isActive: boolean\n    subject?: string\n}\n\nexport interface User {\n    usesId: number\n\n    coverImage: string\n    following: boolean\n    gender: string\n    isOwnProfile: number\n    isRescuer: boolean\n    latitude: number\n    longitude: number\n    numberOfFollowers: number\n    numberOfFollowing: number\n    numberOfPosts: number\n    numberOfRescuesCompleted: number\n    numberOfRescuesCreated: number\n    numberOfRescuesInProgress: number\n    profileImage: string\n    rescuer: boolean\n    userAddress: string\n    userContacts: string\n    userEmail: string\n    userName: string\n    badge: {\n        badgeId: number\n        badgeName: string\n        badgeDescription: string\n        recuesCompletionNeeded: number\n    }\n    setting: {\n        showMyContacts: boolean\n        getNotifications: boolean\n    }\n}\n\nexport interface PostType {\n    postTypeId: number\n    postType: string\n}\n\nexport interface PostedByUser {\n    usesId: number\n    badgeName: string\n    following: boolean\n    profileImage: string\n    rescuer: boolean\n    userName: string\n}\n\nexport interface UserPost {\n    postId: number\n    commentsCount: number\n    isUserReactedToPost: boolean\n    ownPage: boolean\n    postBy: PostedByUser\n    postImage: string\n    postTime: string\n    postType: PostType\n    postVideo: string\n    reactionsCount: number\n    timeAgo: string\n\n    adCorporateLogoUrl: string | null\n    corporateDescription: string | null\n    corporateName: string | null\n}\n\nexport interface UserPosts {\n    isRecent: boolean\n    feed: UserPost[]\n}\n\nexport interface Rescues {\n    rescueId: number\n    animalImageUrl: string\n    distance: number\n    distanceAway: string\n    emergencyType: string\n    postedBy: string\n    postedMinAgo: string\n    rescueDate: Date\n    rescuedPetName: string\n    rescueLocality: string\n    rescuers: {\n        contact: number\n        name: string\n        profileId: number\n        profileImageUrl: string\n        rescues: boolean\n        showMyNumber: boolean\n    }\n    rescueStatus: string\n    viewsCont: number\n}\n\nexport interface RescueLists {\n    rescues: Rescues[]\n}\n\nexport interface Comment {\n    commentId: number\n    comment: string\n    commentedUseName: string\n    commentedUserId: number\n    timeAgo: string\n}\n\nexport interface Comments {\n    comments: Comment[]\n}\n\nexport interface Follower {\n    userId: number\n    userName: string\n    profileImage: string\n    areYouFollowing: boolean\n    showRemoveOption: boolean\n}\n\nexport interface Following extends Follower {}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UsersController.html":{"url":"controllers/UsersController.html","title":"controller - UsersController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UsersController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/users.controller.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            create\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    create(user: CreateUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'Create a User', description: 'Create a new User and store it in database'})@Post()\n                \n            \n\n            \n                \n                    Defined in src/users/users.controller.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                CreateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            remove\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    remove(id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'Delete one users by id', description: 'Delete one users by id'})@Delete(':id')\n                \n            \n\n            \n                \n                    Defined in src/users/users.controller.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            update\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: number, updatedUser: UpdateUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'Update one users by id', description: 'Update one users by id'})@Put(':id')\n                \n            \n\n            \n                \n                    Defined in src/users/users.controller.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updatedUser\n                                    \n                                                UpdateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        /* eslint-disable no-use-before-define */\nimport {\n    Controller,\n    Get,\n    Post,\n    Body,\n    Put,\n    Param,\n    Delete,\n    ParseIntPipe,\n} from '@nestjs/common'\nimport { ApiOperation, ApiTags } from '@nestjs/swagger'\n\nimport { CrudController } from '../base/crud'\nimport { CreateUserDto, UpdateUserDto, User } from './user.model'\nimport { UsersService } from './users.service'\n\n@Controller(UsersController.path)\n@ApiTags(UsersController.name)\nexport class UsersController extends CrudController {\n    static path = 'users'\n\n    constructor(readonly service: UsersService) {\n        super(service)\n    }\n\n    @ApiOperation({\n        summary: 'Create a User',\n        description: 'Create a new User and store it in database',\n    })\n    @Post()\n    async create(@Body() user: CreateUserDto) {\n        return this.service.create(user)\n    }\n\n    @ApiOperation({\n        summary: 'Update one users by id',\n        description: 'Update one users by id',\n    })\n    @Put(':id')\n    async update(\n        @Param('id', ParseIntPipe) id: number,\n        @Body() updatedUser: UpdateUserDto,\n    ) {\n        return this.service.update(id, updatedUser)\n    }\n\n    @ApiOperation({\n        summary: 'Delete one users by id',\n        description: 'Delete one users by id',\n    })\n    @Delete(':id')\n    async remove(@Param('id', ParseIntPipe) id: number) {\n        return this.service.remove(id)\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UsersModule.html":{"url":"modules/UsersModule.html","title":"module - UsersModule","body":"\n                   \n\n\n\n\n    Modules\n    UsersModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_providers\n\n\n\ncluster_UsersModule_exports\n\n\n\n\nUsersService \n\nUsersService \n\n\n\nUsersModule\n\nUsersModule\n\nUsersService  -->\n\nUsersModule->UsersService \n\n\n\n\n\nUsersService\n\nUsersService\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/users/users.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            UsersService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            UsersController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            UsersService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common'\n\nimport { UsersController } from './users.controller'\nimport { UsersService } from './users.service'\n\n@Module({\n    controllers: [UsersController],\n    providers: [UsersService],\n    exports: [UsersService],\n})\nexport class UsersModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UsersService.html":{"url":"injectables/UsersService.html","title":"injectable - UsersService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  UsersService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/users.service.ts\n        \n\n\n            \n                Extends\n            \n            \n                        CrudService\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                saltRounds\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                update\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                paginatedFindAll\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(model: ModelClass)\n                    \n                \n                        \n                            \n                                Defined in src/users/users.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        model\n                                                  \n                                                        \n                                                                        ModelClass\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            create\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    create(user)\n                \n            \n\n\n            \n                \n                    Defined in src/users/users.service.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            remove\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    remove(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/users/users.service.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            update\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: number, user)\n                \n            \n\n\n            \n                \n                    Defined in src/users/users.service.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findAll\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll()\n                \n            \n\n\n            \n                \n                    Inherited from         CrudService\n\n                \n            \n            \n                \n                        Defined in         CrudService:38\n\n                \n            \n\n\n            \n                \n                    Finds all entries and return the result\n\n\n                    \n                        Returns :     {}\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findOne\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(id: string | number)\n                \n            \n\n\n            \n                \n                    Inherited from         CrudService\n\n                \n            \n            \n                \n                        Defined in         CrudService:76\n\n                \n            \n\n\n            \n                \n                    Finds paginated entries and return the result\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                            string | number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            paginatedFindAll\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    paginatedFindAll(filter: PaginationParams)\n                \n            \n\n\n            \n                \n                    Inherited from         CrudService\n\n                \n            \n            \n                \n                        Defined in         CrudService:51\n\n                \n            \n\n\n            \n                \n                    Finds paginated entries and return the result\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                                PaginationParams\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            saltRounds\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                            \n                                \n                                    Inherited from         CrudService\n\n                                \n                            \n                        \n                            \n                                    Defined in         CrudService:21\n\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Inject, Injectable } from '@nestjs/common'\n\nimport { CrudService } from 'src/base/crud/crud.service'\n\nimport { ModelClass } from 'objection'\n\nimport { User } from './user.model'\n\n@Injectable()\nexport class UsersService extends CrudService {\n    constructor(@Inject(User.name) readonly model: ModelClass) {\n        super(model)\n    }\n\n    async create(user) {\n        return this.model.query().insertAndFetch(user)\n    }\n\n    async update(id: number, user) {\n        return this.model.query().patchAndFetchById(id, user)\n    }\n\n    async remove(id: number) {\n        return Promise.resolve(`This action removes a #${id} user`)\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ValidationFailedFilter.html":{"url":"classes/ValidationFailedFilter.html","title":"class - ValidationFailedFilter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ValidationFailedFilter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/infra/filters/validation-failed.filter.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        ExceptionFilter\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                catch\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            catch\n                        \n                        \n                    \n                \n            \n            \n                \ncatch(exception: ValidationError, host: ArgumentsHost)\n                \n            \n\n\n            \n                \n                    Defined in src/infra/filters/validation-failed.filter.ts:7\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    exception\n                                    \n                                            ValidationError\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    host\n                                    \n                                            ArgumentsHost\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ArgumentsHost, Catch, ExceptionFilter, HttpStatus } from '@nestjs/common'\n\nimport { ValidationError } from 'objection'\n\n@Catch(ValidationError)\nexport class ValidationFailedFilter implements ExceptionFilter {\n    catch(exception: ValidationError, host: ArgumentsHost) {\n        const ctx = host.switchToHttp()\n        const response = ctx.getResponse()\n        const request = ctx.getRequest()\n        const status = HttpStatus.PRECONDITION_FAILED\n\n        const {\n            statusCode: validationErrorCode,\n            message,\n            data, // ErrorHash?\n            type, // ValidationErrorType\n        } = exception\n\n        // @ts-ignore\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-call,@typescript-eslint/no-unsafe-member-access\n        response.status(status).json({\n            data,\n            type,\n            message,\n            validationErrorCode,\n\n            statusCode: status,\n\n            path: request.url,\n            // timestamp: new Date().toISOString(),\n        })\n    }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app.controller.ts\n            \n            controller\n            AppController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app.module.ts\n            \n            variable\n            ConfigModuleOptions\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/base/crud/crud.controller.ts\n            \n            class\n            CrudController\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/base/crud/crud.service.ts\n            \n            class\n            CrudService\n            \n                83 %\n                (5/6)\n            \n        \n        \n            \n                \n                src/base/crud/crud.service.ts\n            \n            interface\n            ICrudService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/base/crud/pagination.ts\n            \n            class\n            PaginationParams\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/base/crud/pagination.ts\n            \n            interface\n            IPagination\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/base/crud/try-request.ts\n            \n            interface\n            ITryRequest\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/base/moment-extend.ts\n            \n            variable\n            moment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/base/swagger-gen/api-errors.decorator.ts\n            \n            class\n            ApiException\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/base/swagger-gen/api-errors.decorator.ts\n            \n            function\n            ApiErrors\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/base/swagger-gen/crud-routes.factory.ts\n            \n            class\n            CrudConfigService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/base/swagger-gen/crud-routes.factory.ts\n            \n            class\n            CrudRoutesFactory\n            \n                0 %\n                (0/14)\n            \n        \n        \n            \n                \n                src/base/swagger-gen/crud-routes.factory.ts\n            \n            class\n            R\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/base/swagger-gen/crud-routes.factory.ts\n            \n            class\n            SerializeHelper\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/base/swagger-gen/crud-routes.factory.ts\n            \n            class\n            Swagger\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/base/swagger-gen/crud.decorator.ts\n            \n            variable\n            Crud\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/base/swagger-gen/utils/checks.util.ts\n            \n            variable\n            hasLength\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/base/swagger-gen/utils/checks.util.ts\n            \n            variable\n            hasValue\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/base/swagger-gen/utils/checks.util.ts\n            \n            variable\n            isArrayFull\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/base/swagger-gen/utils/checks.util.ts\n            \n            variable\n            isArrayStrings\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/base/swagger-gen/utils/checks.util.ts\n            \n            variable\n            isBoolean\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/base/swagger-gen/utils/checks.util.ts\n            \n            variable\n            isDate\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/base/swagger-gen/utils/checks.util.ts\n            \n            variable\n            isDateString\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/base/swagger-gen/utils/checks.util.ts\n            \n            variable\n            isEqual\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/base/swagger-gen/utils/checks.util.ts\n            \n            variable\n            isFalse\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/base/swagger-gen/utils/checks.util.ts\n            \n            variable\n            isFunction\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/base/swagger-gen/utils/checks.util.ts\n            \n            variable\n            isIn\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/base/swagger-gen/utils/checks.util.ts\n            \n            variable\n            isNil\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/base/swagger-gen/utils/checks.util.ts\n            \n            variable\n            isNull\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/base/swagger-gen/utils/checks.util.ts\n            \n            variable\n            isNumber\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/base/swagger-gen/utils/checks.util.ts\n            \n            variable\n            isNumeric\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/base/swagger-gen/utils/checks.util.ts\n            \n            variable\n            isObject\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/base/swagger-gen/utils/checks.util.ts\n            \n            variable\n            isObjectFull\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/base/swagger-gen/utils/checks.util.ts\n            \n            variable\n            isString\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/base/swagger-gen/utils/checks.util.ts\n            \n            variable\n            isStringFull\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/base/swagger-gen/utils/checks.util.ts\n            \n            variable\n            isTrue\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/base/swagger-gen/utils/checks.util.ts\n            \n            variable\n            isUndefined\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/base/swagger-gen/utils/checks.util.ts\n            \n            variable\n            isValue\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/base/swagger-gen/utils/obj.util.ts\n            \n            variable\n            getOwnPropNames\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/base/swagger-gen/utils/obj.util.ts\n            \n            variable\n            objKeys\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/base/swagger-gen/utils/other.ts\n            \n            interface\n            CrudOptions\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/base/swagger-gen/utils/other.ts\n            \n            interface\n            GetManyDefaultResponse\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/base/swagger-gen/utils/other.ts\n            \n            interface\n            ParamOption\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/base/swagger-gen/utils/other.ts\n            \n            interface\n            ParamsOptions\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/base/swagger-gen/utils/other.ts\n            \n            function\n            ApiProperty\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/base/swagger-gen/utils/other.ts\n            \n            function\n            safeRequire\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/base/swagger-gen/utils/other.ts\n            \n            variable\n            swagger\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/base/swagger-gen/utils/other.ts\n            \n            variable\n            swaggerConst\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/cron/cron.service.ts\n            \n            injectable\n            CronService\n            \n                11 %\n                (1/9)\n            \n        \n        \n            \n                \n                src/database/database.module.ts\n            \n            variable\n            modelProviders\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/database/database.module.ts\n            \n            variable\n            models\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/database/database.module.ts\n            \n            variable\n            providers\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/database/migrations/20190609143930_CreateTag.ts\n            \n            function\n            down\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/database/migrations/20190609143930_CreateTag.ts\n            \n            function\n            up\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/database/migrations/20190609143930_CreateTag.ts\n            \n            variable\n            tableName\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/database/migrations/20190609143930_CreateUser.ts\n            \n            function\n            down\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/database/migrations/20190609143930_CreateUser.ts\n            \n            function\n            up\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/database/migrations/20190609143930_CreateUser.ts\n            \n            variable\n            tableName\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/database/models/base.model.ts\n            \n            class\n            BaseModel\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/database/models/base.model.ts\n            \n            interface\n            IBaseModel\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/database/models/helpers.ts\n            \n            class\n            CustomQueryBuilder\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/database/models/helpers.ts\n            \n            function\n            isEmpty\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/database/models/helpers.ts\n            \n            function\n            isNotEmpty\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/database/models/helpers.ts\n            \n            function\n            isObject\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/database/seeds/01-User.ts\n            \n            function\n            seed\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/database/seeds/02-Tag.ts\n            \n            function\n            seed\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/domain.ts\n            \n            interface\n            APIResponse\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/domain.ts\n            \n            interface\n            AppLaunchAction\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/domain.ts\n            \n            interface\n            Comment\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/domain.ts\n            \n            interface\n            Comments\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/domain.ts\n            \n            interface\n            Follower\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/domain.ts\n            \n            interface\n            Following\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/domain.ts\n            \n            interface\n            GetAppLaunchData\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/domain.ts\n            \n            interface\n            GetComments\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/domain.ts\n            \n            interface\n            GetFollowers\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/domain.ts\n            \n            interface\n            GetFollowing\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/domain.ts\n            \n            interface\n            GetRescueList\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/domain.ts\n            \n            interface\n            GetUserPosts\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/domain.ts\n            \n            interface\n            GetUserProfile\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/domain.ts\n            \n            interface\n            PostedByUser\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/domain.ts\n            \n            interface\n            PostType\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/domain.ts\n            \n            interface\n            RescueLists\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/domain.ts\n            \n            interface\n            Rescues\n            \n                0 %\n                (0/14)\n            \n        \n        \n            \n                \n                src/domain.ts\n            \n            interface\n            User\n            \n                0 %\n                (0/23)\n            \n        \n        \n            \n                \n                src/domain.ts\n            \n            interface\n            UserPost\n            \n                0 %\n                (0/15)\n            \n        \n        \n            \n                \n                src/domain.ts\n            \n            interface\n            UserPosts\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/health/health.controller.ts\n            \n            controller\n            HealthController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/infra/filters/query-failed.filter.ts\n            \n            class\n            QueryFailedFilter\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/infra/filters/validation-failed.filter.ts\n            \n            class\n            ValidationFailedFilter\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/infra/guards/req.ts\n            \n            guard\n            RequestGuard\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/infra/guards/res.ts\n            \n            guard\n            ResponseGuard\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/infra/interceptors/null-undefined-override.ts\n            \n            injectable\n            ExcludeNullUndefinedInterceptor\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                src/infra/interceptors/timeout.ts\n            \n            injectable\n            TimeoutInterceptor\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                src/infra/interceptors/transform.ts\n            \n            injectable\n            TransformInterceptor\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/infra/interceptors/transform.ts\n            \n            interface\n            Response\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            setupInfra\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            setupMiddlewares\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            setupSwaggerDocs\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/tags/tag.model.ts\n            \n            class\n            CreateTagsDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/tags/tag.model.ts\n            \n            class\n            Tag\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/tags/tag.model.ts\n            \n            class\n            UpdateTagsDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/tags/tag.model.ts\n            \n            interface\n            ITag\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/tags/tags.controller.ts\n            \n            controller\n            TagsController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/tags/tags.service.ts\n            \n            injectable\n            TagsService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/users/user.model.ts\n            \n            class\n            CreateUserDto\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/users/user.model.ts\n            \n            class\n            UpdateUserDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/users/user.model.ts\n            \n            class\n            User\n            \n                0 %\n                (0/18)\n            \n        \n        \n            \n                \n                src/users/user.model.ts\n            \n            interface\n            IUser\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/users/users.controller.ts\n            \n            controller\n            UsersController\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/users/users.service.ts\n            \n            injectable\n            UsersService\n            \n                33 %\n                (3/9)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @hapi/joi : ^17.1.1\n        \n            @nestjs/common : ^7.5.1\n        \n            @nestjs/config : ^0.6.1\n        \n            @nestjs/core : ^7.5.1\n        \n            @nestjs/mapped-types : ^0.1.1\n        \n            @nestjs/passport : ^7.1.3\n        \n            @nestjs/platform-express : ^7.5.1\n        \n            @nestjs/platform-socket.io : ^7.6.5\n        \n            @nestjs/schedule : ^0.4.1\n        \n            @nestjs/serve-static : ^2.1.4\n        \n            @nestjs/swagger : ^4.7.5\n        \n            @nestjs/terminus : ^7.0.1\n        \n            @nestjs/typeorm : ^7.1.5\n        \n            @nestjsx/crud : ^4.6.2\n        \n            @nestjsx/crud-request : ^4.6.2\n        \n            @nestjsx/crud-typeorm : ^4.6.2\n        \n            @types/dotenv : ^8.2.0\n        \n            bcryptjs : ^2.4.3\n        \n            class-transformer : ^0.3.1\n        \n            class-validator : ^0.12.2\n        \n            deepmerge : ^4.2.2\n        \n            dotenv : ^8.2.0\n        \n            express-rate-limit : ^5.2.3\n        \n            helmet : ^4.2.0\n        \n            knex : ^0.21.15\n        \n            lodash : ^4.17.20\n        \n            moment : ^2.29.1\n        \n            moment-range : ^4.0.2\n        \n            objection : ^2.2.6\n        \n            objection-db-errors : ^1.1.2\n        \n            objection-find : ^3.0.1\n        \n            objection-visibility : ^1.1.0\n        \n            passport : ^0.4.1\n        \n            passport-local : ^1.0.0\n        \n            pidusage : ^2.0.21\n        \n            reflect-metadata : ^0.1.13\n        \n            rimraf : ^3.0.2\n        \n            rxjs : ^6.6.3\n        \n            source-map-support : ^0.5.19\n        \n            sqlite3 : ^5.0.0\n        \n            swagger-ui-express : ^4.1.5\n        \n            typeorm : ^0.2.29\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            OrderType   (src/.../pagination.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/base/crud/pagination.ts\n    \n        \n            \n                \n                    \n                        \n                        OrderType\n                    \n                \n                        \n                            \n                                 DESC\n                            \n                        \n                        \n                            \n                                Value : DESC\n                            \n                        \n                        \n                            \n                                 ASC\n                            \n                        \n                        \n                            \n                                Value : ASC\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ApiErrors   (src/.../api-errors.decorator.ts)\n                        \n                        \n                            ApiProperty   (src/.../other.ts)\n                        \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                        \n                            down   (src/.../20190609143930_CreateTag.ts)\n                        \n                        \n                            down   (src/.../20190609143930_CreateUser.ts)\n                        \n                        \n                            isEmpty   (src/.../helpers.ts)\n                        \n                        \n                            isNotEmpty   (src/.../helpers.ts)\n                        \n                        \n                            isObject   (src/.../helpers.ts)\n                        \n                        \n                            safeRequire   (src/.../other.ts)\n                        \n                        \n                            seed   (src/.../01-User.ts)\n                        \n                        \n                            seed   (src/.../02-Tag.ts)\n                        \n                        \n                            setupInfra   (src/.../main.ts)\n                        \n                        \n                            setupMiddlewares   (src/.../main.ts)\n                        \n                        \n                            setupSwaggerDocs   (src/.../main.ts)\n                        \n                        \n                            up   (src/.../20190609143930_CreateTag.ts)\n                        \n                        \n                            up   (src/.../20190609143930_CreateUser.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/base/swagger-gen/api-errors.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            ApiErrors\n                        \n                        \n                    \n                \n            \n            \n                \nApiErrors()\n                \n            \n\n\n\n\n        \n    \n    src/base/swagger-gen/utils/other.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            ApiProperty\n                        \n                        \n                    \n                \n            \n            \n                \nApiProperty(options?: any)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                any\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     PropertyDecorator\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            safeRequire\n                        \n                        \n                    \n                \n            \n            \n                \nsafeRequire(path)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    path\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     T | null\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            bootstrap\n                        \n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setupInfra\n                        \n                        \n                    \n                \n            \n            \n                \nsetupInfra(app)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    app\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setupMiddlewares\n                        \n                        \n                    \n                \n            \n            \n                \nsetupMiddlewares(app)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    app\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setupSwaggerDocs\n                        \n                        \n                    \n                \n            \n            \n                \nsetupSwaggerDocs(app)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    app\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    src/database/migrations/20190609143930_CreateTag.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            down\n                        \n                        \n                    \n                \n            \n            \n                \ndown(knex)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    knex\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            up\n                        \n                        \n                    \n                \n            \n            \n                \nup(knex)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    knex\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    src/database/migrations/20190609143930_CreateUser.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            down\n                        \n                        \n                    \n                \n            \n            \n                \ndown(knex)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    knex\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            up\n                        \n                        \n                    \n                \n            \n            \n                \nup(knex)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    knex\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    src/database/models/helpers.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            isEmpty\n                        \n                        \n                    \n                \n            \n            \n                \nisEmpty(value: any)\n                \n            \n\n\n\n\n            \n                \n                    Check if value is empty\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isNotEmpty\n                        \n                        \n                    \n                \n            \n            \n                \nisNotEmpty(value: any)\n                \n            \n\n\n\n\n            \n                \n                    Check if value is not empty\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isObject\n                        \n                        \n                    \n                \n            \n            \n                \nisObject(value: any)\n                \n            \n\n\n\n\n            \n                \n                    Check if value is of type object.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    src/database/seeds/01-User.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            seed\n                        \n                        \n                    \n                \n            \n            \n                \nseed(knex)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    knex\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    src/database/seeds/02-Tag.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            seed\n                        \n                        \n                    \n                \n            \n            \n                \nseed(knex)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    knex\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n  A progressive Node.js framework for building efficient and scalable server-side applications.\n    \n\n\n\n\n\n\n\n\n  \n    \n  \n\n  \n\nDescription\nNest framework TypeScript starter repository.\nInstallation\n$ npm installRunning the app\n# development\n$ npm run start\n\n# watch mode\n$ npm run start:dev\n\n# production mode\n$ npm run start:prodTest\n# unit tests\n$ npm run test\n\n# e2e tests\n$ npm run test:e2e\n\n# test coverage\n$ npm run test:covSupport\nNest is an MIT-licensed open source project. It can grow thanks to the sponsors and support by the amazing backers. If you'd like to join them, please read more here.\nStay in touch\n\nAuthor - Kamil Myśliwiec\nWebsite - https://nestjs.com\nTwitter - @nestframework\n\nLicense\nNest is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CronModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        DatabaseModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TagsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UsersModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_CronModule\n\n\n\ncluster_CronModule_providers\n\n\n\ncluster_TagsModule\n\n\n\ncluster_TagsModule_exports\n\n\n\ncluster_TagsModule_providers\n\n\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_exports\n\n\n\ncluster_UsersModule_providers\n\n\n\n\nCronModule\n\nCronModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nCronModule->AppModule\n\n\n\n\n\nDatabaseModule\n\nDatabaseModule\n\nAppModule -->\n\nDatabaseModule->AppModule\n\n\n\n\n\nTagsModule\n\nTagsModule\n\nAppModule -->\n\nTagsModule->AppModule\n\n\n\n\n\nTagsService \n\nTagsService \n\nTagsService  -->\n\nTagsModule->TagsService \n\n\n\n\n\nUsersModule\n\nUsersModule\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\nUsersService \n\nUsersService \n\nUsersService  -->\n\nUsersModule->UsersService \n\n\n\n\n\nCronService\n\nCronService\n\nCronModule -->\n\nCronService->CronModule\n\n\n\n\n\nTagsService\n\nTagsService\n\nTagsModule -->\n\nTagsService->TagsModule\n\n\n\n\n\nUsersService\n\nUsersService\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        5 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    4 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    6 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    19 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    2 Guards\n                \n            \n        \n        \n            \n                \n                    \n                    31 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            APIError   (src/.../domain.ts)\n                        \n                        \n                            BaseRouteName   (src/.../other.ts)\n                        \n                        \n                            ObjectLiteral   (src/.../object-literal.type.ts)\n                        \n                        \n                            Result   (src/.../domain.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/domain.ts\n    \n    \n        \n            \n                \n                    \n                    APIError\n                \n            \n            \n                \n                        Error | string | null\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Result\n                \n            \n            \n                \n                        GetAppLaunchData | GetUserProfile | GetUserPosts | GetComments | GetRescueList | GetFollowers | GetFollowing\n\n                \n            \n        \n    \n    src/base/swagger-gen/utils/other.ts\n    \n    \n        \n            \n                \n                    \n                    BaseRouteName\n                \n            \n            \n                \n                        \"getManyBase\" | \"getOneBase\" | \"createOneBase\" | \"createManyBase\" | \"updateOneBase\" | \"replaceOneBase\" | \"deleteOneBase\"\n\n                \n            \n        \n    \n    src/base/swagger-gen/utils/types/object-literal.type.ts\n    \n    \n        \n            \n                \n                    \n                    ObjectLiteral\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ConfigModuleOptions   (src/.../app.module.ts)\n                        \n                        \n                            Crud   (src/.../crud.decorator.ts)\n                        \n                        \n                            getOwnPropNames   (src/.../obj.util.ts)\n                        \n                        \n                            hasLength   (src/.../checks.util.ts)\n                        \n                        \n                            hasValue   (src/.../checks.util.ts)\n                        \n                        \n                            isArrayFull   (src/.../checks.util.ts)\n                        \n                        \n                            isArrayStrings   (src/.../checks.util.ts)\n                        \n                        \n                            isBoolean   (src/.../checks.util.ts)\n                        \n                        \n                            isDate   (src/.../checks.util.ts)\n                        \n                        \n                            isDateString   (src/.../checks.util.ts)\n                        \n                        \n                            isEqual   (src/.../checks.util.ts)\n                        \n                        \n                            isFalse   (src/.../checks.util.ts)\n                        \n                        \n                            isFunction   (src/.../checks.util.ts)\n                        \n                        \n                            isIn   (src/.../checks.util.ts)\n                        \n                        \n                            isNil   (src/.../checks.util.ts)\n                        \n                        \n                            isNull   (src/.../checks.util.ts)\n                        \n                        \n                            isNumber   (src/.../checks.util.ts)\n                        \n                        \n                            isNumeric   (src/.../checks.util.ts)\n                        \n                        \n                            isObject   (src/.../checks.util.ts)\n                        \n                        \n                            isObjectFull   (src/.../checks.util.ts)\n                        \n                        \n                            isString   (src/.../checks.util.ts)\n                        \n                        \n                            isStringFull   (src/.../checks.util.ts)\n                        \n                        \n                            isTrue   (src/.../checks.util.ts)\n                        \n                        \n                            isUndefined   (src/.../checks.util.ts)\n                        \n                        \n                            isValue   (src/.../checks.util.ts)\n                        \n                        \n                            modelProviders   (src/.../database.module.ts)\n                        \n                        \n                            models   (src/.../database.module.ts)\n                        \n                        \n                            moment   (src/.../moment-extend.ts)\n                        \n                        \n                            objKeys   (src/.../obj.util.ts)\n                        \n                        \n                            providers   (src/.../database.module.ts)\n                        \n                        \n                            swagger   (src/.../other.ts)\n                        \n                        \n                            swaggerConst   (src/.../other.ts)\n                        \n                        \n                            tableName   (src/.../20190609143930_CreateTag.ts)\n                        \n                        \n                            tableName   (src/.../20190609143930_CreateUser.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app.module.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            ConfigModuleOptions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    isGlobal: true,\n    validationOptions: {\n        allowUnknown: true,\n        abortEarly: true,\n    },\n    /* eslint-disable */\n    validationSchema: Joi.object({\n        PORT: Joi.number().default(3000),\n        NODE_ENV: Joi.string()\n            .required()\n            .valid('development', 'production', 'test', 'provision')\n            .default('development'),\n\n        database: Joi.string().required(),\n        type: Joi.string().required(),\n        logging: Joi.string().required(),\n        synchronize: Joi.string().required(),\n    }),\n    /* eslint-enable */\n}\n                        \n                    \n\n\n            \n        \n\n    src/base/swagger-gen/crud.decorator.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            Crud\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (options) => (target: Object) => {\n    let factory = CrudRoutesFactory.create(target, options)\n    factory = undefined\n}\n                        \n                    \n\n\n            \n        \n\n    src/base/swagger-gen/utils/obj.util.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            getOwnPropNames\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (val: any): string[] => Object.getOwnPropertyNames(val)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            objKeys\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (val: any): string[] => Object.keys(val)\n                        \n                    \n\n\n            \n        \n\n    src/base/swagger-gen/utils/checks.util.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            hasLength\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (val: any): boolean => val.length > 0\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            hasValue\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (val: any): boolean =>\n    isArrayFull(val) ? (val as any[]).every((o) => isValue(o)) : isValue(val)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isArrayFull\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (val: any): boolean =>\n    Array.isArray(val) && hasLength(val)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isArrayStrings\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (val: any): boolean =>\n    isArrayFull(val) && (val as string[]).every((v) => isStringFull(v))\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isBoolean\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (val: any): boolean => typeof val === 'boolean'\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isDate\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (val: any): val is Date => val instanceof Date\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isDateString\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (val: any): boolean =>\n    isStringFull(val) &&\n    /^\\d{4}-[01]\\d-[0-3]\\d(?:T[0-2]\\d:[0-5]\\d:[0-5]\\d(?:\\.\\d+)?(?:Z|[-+][0-2]\\d(?::?[0-5]\\d)?)?)?$/g.test(\n        val,\n    )\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isEqual\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (val: any, eq: any): boolean => val === eq\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isFalse\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (val: any): boolean => val === false\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isFunction\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (val: any): boolean => typeof val === 'function'\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isIn\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (val: any, arr: any[] = []): boolean =>\n    arr.some((o) => isEqual(val, o))\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isNil\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (val: any): boolean => isUndefined(val) || isNull(val)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isNull\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (val: any): boolean => val === null\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isNumber\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (val: any): boolean =>\n    typeof val === 'number' && !Number.isNaN(val) && Number.isFinite(val)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isNumeric\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (val: any): boolean =>\n    /^[+-]?([0-9]*[.])?[0-9]+$/.test(val)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isObject\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (val: any): boolean =>\n    typeof val === 'object' && !isNull(val)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isObjectFull\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (val: any) => isObject(val) && hasLength(objKeys(val))\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isString\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (val: any): boolean => typeof val === 'string'\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isStringFull\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (val: any): boolean => isString(val) && hasLength(val)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isTrue\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (val: any): boolean => val === true\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isUndefined\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (val: any): boolean => typeof val === 'undefined'\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isValue\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (val: any): boolean =>\n    isStringFull(val) || isNumber(val) || isBoolean(val) || isDate(val)\n                        \n                    \n\n\n            \n        \n\n    src/database/database.module.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            modelProviders\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : models.map((model) => {\n    return {\n        provide: model.name,\n        useValue: model,\n    }\n})\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            models\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [Tag, User]\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            providers\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n    ...modelProviders,\n    {\n        provide: 'KnexConnection',\n        // eslint-disable-next-line @typescript-eslint/require-await\n        useFactory: async () => {\n            const knex = Knex({\n                client: 'sqlite3',\n                useNullAsDefault: true,\n                connection: {\n                    filename: './knex.sqlite',\n                },\n                debug: true,\n                // ...knexSnakeCaseMappers(),\n            })\n\n            Model.knex(knex)\n            return knex\n        },\n    },\n]\n                        \n                    \n\n\n            \n        \n\n    src/base/moment-extend.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            moment\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : extendMoment(momentDefault)\n                        \n                    \n\n\n            \n        \n\n    src/base/swagger-gen/utils/other.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            swagger\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : safeRequire('@nestjs/swagger')\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            swaggerConst\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : safeRequire('@nestjs/swagger/dist/constants')\n                        \n                    \n\n\n            \n        \n\n    src/database/migrations/20190609143930_CreateTag.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            tableName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'tags'\n                        \n                    \n\n\n            \n        \n\n    src/database/migrations/20190609143930_CreateUser.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            tableName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'users'\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
