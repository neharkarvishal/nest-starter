var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/controllers/AppController.html",[0,1.021,1,1.552]],["body/controllers/AppController.html",[0,1.452,1,2.209,2,1.254,3,0.524,4,0.439,5,0.439,6,2.32,7,0.524,8,1.452,9,3.681,10,1.254,11,0.053,12,2.89,13,1.945,14,0.831,15,2.89,16,1.094,17,1.452,18,1.664,19,1.664,20,2.32,21,2.581,22,2.32,23,2.89,24,3.079,25,2.209,26,2.32,27,2.32,28,0.92,29,2.32,30,1.664,31,0.719,32,3.079,33,1.945,34,1.254,35,1.868,36,2.32,37,2.89,38,0.524,39,0.284,40,1.945,41,0.955,42,2.32,43,2.32,44,1.441,45,2.89,46,0.028,47,0.037,48,0.028]],["title/modules/AppModule.html",[49,1.021,50,1.552]],["body/modules/AppModule.html",[1,1.722,2,1.049,3,0.278,4,0.233,5,0.233,8,0.581,11,0.053,14,0.695,16,0.915,17,1.133,18,0.883,19,0.883,21,2.013,22,2.401,25,0.883,28,1.007,30,2.127,31,0.381,35,1.702,36,1.231,38,0.278,39,0.151,40,1.032,41,0.507,46,0.015,47,0.024,48,0.015,49,1.285,50,2.676,51,0.665,52,0.665,53,0.883,54,0.883,55,0.665,56,1.722,57,0.883,58,1.231,59,1.231,60,1.231,61,1.955,62,1.955,63,1.392,64,0.883,65,0.883,66,1.032,67,1.722,68,1.94,69,2.401,70,1.94,71,1.534,72,0.764,73,0.695,74,0.695,75,0.764,76,2.401,77,1.231,78,2.284,79,1.534,80,1.534,81,1.534,82,1.534,83,1.534,84,1.534,85,1.534,86,1.032,87,2.417,88,1.032,89,1.231,90,0.883,91,2.417,92,1.534,93,1.231,94,1.231,95,1.231,96,1.231,97,1.534,98,0.507,99,0.883,100,1.534,101,1.534,102,1.534,103,1.032,104,1.534,105,2.284,106,1.032,107,1.231,108,2.763,109,1.231,110,1.231,111,1.231,112,1.231,113,1.231,114,1.231,115,1.231,116,1.231,117,1.231,118,1.231,119,1.032,120,1.032,121,1.231,122,1.231,123,1.032,124,1.231,125,1.231,126,1.231,127,1.231,128,1.032,129,1.231,130,1.231,131,1.94,132,1.231,133,1.231,134,1.231,135,1.231,136,1.231,137,1.94,138,1.231,139,1.231,140,1.231,141,1.231,142,1.231,143,1.231,144,1.231,145,1.032,146,1.032,147,1.231,148,1.231,149,1.231,150,1.231,151,1.231,152,1.231,153,1.534,154,1.534,155,1.534,156,1.231,157,1.534,158,1.032,159,1.231,160,1.534,161,1.534,162,1.231,163,1.534,164,1.231,165,1.231]],["title/injectables/AppService.html",[35,1.169,166,1.021]],["body/injectables/AppService.html",[3,0.629,4,0.526,5,0.526,7,0.629,8,1.632,9,3.94,11,0.052,14,0.996,16,1.313,17,1.632,28,0.741,30,1.996,31,0.862,35,1.87,38,0.629,39,0.341,44,1.728,46,0.034,47,0.042,48,0.034,166,1.632,167,1.996,168,2.783,169,3.466,170,3.466,171,3.466]],["title/classes/Cat.html",[39,0.265,98,0.89]],["body/classes/Cat.html",[3,0.381,4,0.318,5,0.318,7,0.381,10,1.73,11,0.052,13,1.411,14,1.219,17,1.51,28,0.655,34,0.91,38,0.381,39,0.206,41,1.197,46,0.021,47,0.03,48,0.021,73,1.375,74,1.219,98,1.607,172,1.411,173,1.684,174,1.766,175,2.854,176,2.854,177,2.854,178,3.624,179,3.624,180,2.114,181,3.201,182,3.766,183,2.098,184,3.066,185,2.098,186,2.462,187,2.098,188,3.066,189,2.098,190,3.066,191,2.098,192,2.098,193,2.098,194,3.066,195,3.066,196,2.098,197,1.411,198,1.411,199,3.066,200,2.098,201,3.405,202,3.987,203,2.462,204,3.066,205,1.411,206,1.684,207,2.098,208,2.296,209,2.098,210,1.684,211,2.098,212,1.411,213,1.684]],["title/controllers/CatsController.html",[0,1.021,214,1.552]],["body/controllers/CatsController.html",[0,0.678,2,0.777,3,0.325,4,0.272,5,0.272,7,0.325,8,1.032,10,1.431,11,0.053,13,2.48,14,0.948,16,1.249,18,1.031,19,1.031,28,0.847,29,1.437,31,0.445,32,3.184,33,1.204,34,0.777,38,0.325,39,0.176,40,1.204,41,0.591,42,3.487,43,2.187,44,1.644,46,0.017,47,0.027,48,0.017,72,1.358,73,0.783,74,1.287,75,1.358,98,1.218,99,1.031,108,1.833,128,1.833,146,1.833,177,2.219,180,1.644,203,2.187,206,3.594,208,2.284,214,1.569,215,1.437,216,1.437,217,3.354,218,2.959,219,2.959,220,2.187,221,1.79,222,2.082,223,1.79,224,1.79,225,2.724,226,2.724,227,1.79,228,2.724,229,1.79,230,2.811,231,1.79,232,1.79,233,2.724,234,3.686,235,4.178,236,1.79,237,1.437,238,1.79,239,1.79,240,1.79,241,1.79,242,1.79,243,2.724,244,3.686,245,1.431,246,1.437,247,1.79,248,1.79,249,1.79,250,3.298,251,1.79,252,1.79,253,1.79,254,1.79,255,1.79,256,1.79,257,1.79,258,1.79,259,1.79]],["title/modules/CatsModule.html",[49,1.021,61,1.343]],["body/modules/CatsModule.html",[2,1.702,3,0.542,4,0.454,5,0.454,11,0.053,28,1.031,31,0.744,38,0.542,39,0.294,46,0.029,47,0.038,48,0.029,49,1.657,51,1.297,52,1.297,53,1.722,54,1.722,55,1.297,56,2.52,57,1.722,61,2.468,63,2.259,64,1.722,65,1.722,68,2.4,89,2.4,90,1.722,98,0.988,99,1.722,214,2.52,245,2.148,246,2.4,260,2.4,261,2.4,262,2.99,263,2.99,264,2.99]],["title/injectables/CatsService.html",[166,1.021,245,1.169]],["body/injectables/CatsService.html",[3,0.414,4,0.346,5,0.346,7,0.414,8,1.235,11,0.053,14,1.192,16,1.44,28,0.937,31,0.568,38,0.414,39,0.225,41,0.754,44,1.895,46,0.022,47,0.032,48,0.022,72,1.895,73,1.093,74,1.093,75,1.895,90,1.315,98,1.256,99,1.315,105,1.536,166,1.235,167,1.315,177,1.536,180,1.895,205,1.536,217,3.923,218,2.617,219,3.33,220,2.617,222,2.067,230,2.791,237,2.617,245,1.415,265,1.833,266,1.833,267,2.283,268,3.33,269,2.283,270,3.26,271,3.26,272,2.283,273,2.283,274,2.283,275,2.283,276,2.283,277,2.283,278,1.536,279,2.283,280,1.536,281,2.283,282,2.283,283,2.283,284,2.283,285,2.283,286,2.283,287,2.283,288,2.283,289,2.283]],["title/classes/CreateCatDto.html",[39,0.265,222,1.343]],["body/classes/CreateCatDto.html",[3,0.447,4,0.373,5,0.373,7,0.447,10,1.719,11,0.052,14,1.139,17,1.624,28,0.846,34,1.068,38,0.447,39,0.338,41,1.642,46,0.024,47,0.034,48,0.024,73,1.297,74,1.139,98,1.544,158,2.313,172,1.656,174,1.98,175,3.036,176,3.036,180,1.713,181,3.18,182,3.752,186,2.76,201,3.443,208,2.281,210,1.976,212,1.656,213,1.976,222,1.713,290,1.976,291,2.281,292,2.461,293,2.461,294,2.461,295,2.461,296,2.461,297,2.461,298,3.438,299,3.961,300,1.976,301,2.461]],["title/modules/CronModule.html",[49,1.021,62,1.343]],["body/modules/CronModule.html",[3,0.596,4,0.499,5,0.499,11,0.051,28,0.891,31,0.817,38,0.596,39,0.323,46,0.032,47,0.041,48,0.032,49,1.734,51,1.426,52,1.426,53,1.892,54,1.892,55,1.426,56,2.637,57,1.892,62,2.531,63,2.401,64,1.892,65,1.892,302,2.638,303,2.638,304,2.531,305,3.286,306,3.286]],["title/injectables/CronService.html",[166,1.021,304,1.343]],["body/injectables/CronService.html",[3,0.453,4,0.379,5,0.379,7,0.453,8,1.315,10,1.732,11,0.054,14,1.24,16,1.512,28,0.742,31,0.621,38,0.453,39,0.246,41,1.319,46,0.024,47,0.034,48,0.024,78,2.686,103,1.68,159,3.464,166,1.315,167,1.438,174,1.999,197,1.68,198,1.68,278,2.686,280,2.336,304,1.73,307,2.004,308,4.315,309,4.315,310,4.315,311,3.472,312,2.496,313,3.472,314,2.496,315,3.472,316,2.496,317,3.472,318,2.496,319,2.496,320,2.496,321,2.496,322,3.992,323,2.496,324,2.496,325,2.496,326,3.472,327,2.496,328,2.496]],["title/controllers/HealthController.html",[0,1.021,67,1.552]],["body/controllers/HealthController.html",[0,0.773,2,0.886,3,0.371,4,0.31,5,0.31,7,0.371,8,1.351,10,0.886,11,0.053,14,1.026,16,1.491,17,1.351,18,1.176,19,1.176,21,1.374,24,2.414,25,1.732,26,1.639,27,1.639,28,0.841,30,2.527,31,0.508,33,1.374,34,0.886,38,0.371,39,0.201,44,1.018,46,0.02,47,0.029,48,0.02,67,2.267,69,3.368,70,2.414,72,1.018,73,0.587,74,0.587,75,1.018,76,3.368,77,1.639,78,2.649,86,1.374,88,1.374,156,2.414,158,1.374,162,1.639,164,1.639,165,1.639,216,1.639,230,2.023,266,1.639,278,2.401,329,1.639,330,3.936,331,2.042,332,2.042,333,2.042,334,2.042,335,3.007,336,3.007,337,3.007,338,3.007,339,2.042,340,2.042,341,2.042,342,3.007,343,2.042,344,2.042,345,2.042,346,2.042,347,2.042,348,2.042,349,2.042,350,3.007,351,3.007,352,2.042,353,2.042,354,3.007,355,2.042,356,2.042,357,2.042,358,2.042,359,2.042,360,1.639,361,2.042,362,2.042,363,1.639,364,2.042,365,2.042,366,2.042,367,2.042,368,2.042,369,2.042,370,2.042]],["title/interfaces/ICat.html",[291,1.552,371,1.552]],["body/interfaces/ICat.html",[3,0.605,4,0.506,5,0.506,7,0.605,11,0.051,17,1.93,38,0.605,41,1.522,46,0.033,47,0.041,48,0.033,73,1.391,74,1.325,174,2.422,175,3.257,176,3.257,180,2.297,291,2.422,371,1.92,372,3.334,373,2.676]],["title/coverage.html",[374,2.463]],["body/coverage.html",[0,1.575,1,1.555,5,0.41,6,2.167,11,0.052,35,1.171,39,0.361,46,0.026,47,0.036,48,0.026,55,1.171,66,2.798,67,1.555,74,0.776,98,0.892,106,1.817,123,1.817,145,1.817,166,1.575,168,2.167,173,2.167,214,1.555,215,2.167,222,1.346,245,1.171,265,2.167,280,1.817,290,2.167,291,1.555,304,1.346,307,2.167,329,2.167,360,2.941,371,1.555,373,2.167,374,1.817,375,2.7,376,2.7,377,2.7,378,5.28,379,3.664,380,4.159,381,4.663,382,4.46,383,3.664,384,2.7,385,2.941,386,2.167,387,2.7,388,2.7]],["title/dependencies.html",[52,1.404,389,2.26]],["body/dependencies.html",[11,0.054,31,0.669,34,1.167,39,0.36,46,0.026,47,0.036,48,0.026,52,1.167,86,1.81,88,1.81,90,1.549,93,2.159,94,2.934,95,2.159,96,2.159,103,1.81,205,1.81,300,2.159,390,2.689,391,4.15,392,2.689,393,2.689,394,2.689,395,2.689,396,2.689,397,4.15,398,3.654,399,2.689,400,2.689,401,2.689,402,2.689,403,2.689,404,2.689,405,3.654,406,2.689,407,2.689,408,2.689,409,2.689,410,2.689,411,2.689,412,2.689,413,2.689,414,2.689,415,2.689,416,3.654,417,2.689,418,2.689,419,2.689,420,2.689,421,2.689,422,2.689,423,2.689,424,2.689,425,2.689,426,2.689,427,2.689,428,2.689,429,2.689,430,2.689,431,2.689,432,2.689,433,2.689]],["title/miscellaneous/functions.html",[434,1.302,435,2.598]],["body/miscellaneous/functions.html",[7,0.695,11,0.048,46,0.037,47,0.045,48,0.037,55,2.126,72,1.908,73,1.1,75,1.908,385,3.074,386,3.677,434,2.205,435,3.074,436,4.58,437,3.829,438,3.074]],["title/index.html",[7,0.41,439,2.26,440,2.26]],["body/index.html",[4,0.411,11,0.052,20,2.176,46,0.026,47,0.036,48,0.026,119,1.824,120,2.472,208,1.561,268,2.176,363,3.345,374,1.824,438,2.176,441,2.71,442,2.71,443,3.673,444,2.71,445,2.71,446,2.71,447,2.71,448,2.71,449,2.71,450,2.71,451,2.71,452,4.923,453,2.71,454,2.71,455,4.814,456,2.71,457,2.71,458,3.673,459,2.71,460,2.71,461,2.71,462,3.673,463,2.71,464,2.71,465,2.71,466,3.673,467,3.673,468,2.71,469,2.71,470,2.71,471,2.71,472,2.71,473,2.176,474,2.71,475,2.71,476,2.71,477,2.71,478,2.71,479,2.71,480,2.71,481,2.71,482,2.71,483,2.71,484,2.71,485,2.71,486,2.71,487,2.71,488,2.71,489,2.71,490,2.71,491,2.71]],["title/modules.html",[51,1.588]],["body/modules.html",[11,0.045,46,0.038,47,0.045,48,0.038,50,2.217,51,1.671,61,1.919,62,1.919,473,3.944,492,4.912,493,4.912,494,4.912]],["title/overview.html",[495,2.938]],["body/overview.html",[2,1.338,11,0.05,35,1.927,46,0.03,47,0.039,48,0.03,49,1.167,50,2.967,51,1.338,52,1.338,53,1.775,54,1.775,55,1.338,56,1.775,57,1.775,58,2.475,59,2.475,60,2.475,61,2.428,62,2.428,63,2.304,64,1.775,65,1.775,167,1.775,172,2.074,212,2.074,245,1.927,260,2.475,261,2.475,302,2.475,303,2.475,304,2.214,371,1.775,495,2.475,496,4.442,497,3.082]],["title/miscellaneous/variables.html",[434,1.302,498,2.598]],["body/miscellaneous/variables.html",[7,0.473,11,0.053,25,1.502,46,0.025,47,0.035,48,0.025,66,1.755,73,0.75,74,1.264,105,1.755,106,2.408,107,2.094,108,3.28,109,2.094,110,2.094,111,2.094,112,2.094,113,2.094,114,2.094,115,2.094,116,2.094,117,2.094,118,2.094,119,1.755,120,1.755,121,2.094,122,2.094,123,2.408,124,2.094,125,2.094,126,2.094,127,2.094,128,1.755,129,2.094,130,2.094,131,2.873,132,2.094,133,2.094,134,2.094,135,2.094,136,2.094,137,2.873,138,2.094,139,2.094,140,2.094,141,2.094,142,2.094,143,2.094,144,2.094,145,2.408,146,1.755,147,2.094,148,2.094,149,2.094,150,2.094,151,2.094,152,2.094,197,2.749,198,2.749,434,1.502,498,2.094,499,4.086,500,4.086]]],"invertedIndex":[["",{"_index":11,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Cat.html":{},"controllers/CatsController.html":{},"modules/CatsModule.html":{},"injectables/CatsService.html":{},"classes/CreateCatDto.html":{},"modules/CronModule.html":{},"injectables/CronService.html":{},"controllers/HealthController.html":{},"interfaces/ICat.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":378,"title":{},"body":{"coverage.html":{}}}],["0.1.13",{"_index":423,"title":{},"body":{"dependencies.html":{}}}],["0.12.2",{"_index":404,"title":{},"body":{"dependencies.html":{}}}],["0.2.29",{"_index":433,"title":{},"body":{"dependencies.html":{}}}],["0.3.1",{"_index":403,"title":{},"body":{"dependencies.html":{}}}],["0.4.1",{"_index":398,"title":{},"body":{"dependencies.html":{}}}],["0.6.1",{"_index":392,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":381,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":379,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":382,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":383,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":384,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":212,"title":{},"body":{"classes/Cat.html":{},"classes/CreateCatDto.html":{},"overview.html":{}}}],["1.0.0",{"_index":418,"title":{},"body":{"dependencies.html":{}}}],["1.3.0",{"_index":415,"title":{},"body":{"dependencies.html":{}}}],["100",{"_index":325,"title":{},"body":{"injectables/CronService.html":{}}}],["17.1.1",{"_index":390,"title":{},"body":{"dependencies.html":{}}}],["17.3.0",{"_index":414,"title":{},"body":{"dependencies.html":{}}}],["1})@column({name",{"_index":183,"title":{},"body":{"classes/Cat.html":{}}}],["1})@isint",{"_index":292,"title":{},"body":{"classes/CreateCatDto.html":{}}}],["2",{"_index":497,"title":{},"body":{"overview.html":{}}}],["3",{"_index":496,"title":{},"body":{"overview.html":{}}}],["3.0.2",{"_index":425,"title":{},"body":{"dependencies.html":{}}}],["36",{"_index":199,"title":{},"body":{"classes/Cat.html":{}}}],["36635263",{"_index":209,"title":{},"body":{"classes/Cat.html":{}}}],["36635263'})@primarygeneratedcolumn",{"_index":191,"title":{},"body":{"classes/Cat.html":{}}}],["4.1.5",{"_index":432,"title":{},"body":{"dependencies.html":{}}}],["4.2.0",{"_index":413,"title":{},"body":{"dependencies.html":{}}}],["4.3.0",{"_index":420,"title":{},"body":{"dependencies.html":{}}}],["4.7.5",{"_index":399,"title":{},"body":{"dependencies.html":{}}}],["5.0.0",{"_index":429,"title":{},"body":{"dependencies.html":{}}}],["5.1.0",{"_index":408,"title":{},"body":{"dependencies.html":{}}}],["5.2.3",{"_index":411,"title":{},"body":{"dependencies.html":{}}}],["50",{"_index":328,"title":{},"body":{"injectables/CronService.html":{}}}],["6.6.3",{"_index":427,"title":{},"body":{"dependencies.html":{}}}],["60",{"_index":324,"title":{},"body":{"injectables/CronService.html":{}}}],["7.0.1",{"_index":400,"title":{},"body":{"dependencies.html":{}}}],["7.1.3",{"_index":395,"title":{},"body":{"dependencies.html":{}}}],["7.1.5",{"_index":401,"title":{},"body":{"dependencies.html":{}}}],["7.5.1",{"_index":391,"title":{},"body":{"dependencies.html":{}}}],["8.2.0",{"_index":406,"title":{},"body":{"dependencies.html":{}}}],["__dirname}/../**/*.entity.{ts,js",{"_index":147,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["abortearly",{"_index":111,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["above",{"_index":356,"title":{},"body":{"controllers/HealthController.html":{}}}],["access",{"_index":84,"title":{},"body":{"modules/AppModule.html":{}}}],["age",{"_index":175,"title":{},"body":{"classes/Cat.html":{},"classes/CreateCatDto.html":{},"interfaces/ICat.html":{}}}],["allowunknown",{"_index":110,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["amazing",{"_index":474,"title":{},"body":{"index.html":{}}}],["apioperation",{"_index":244,"title":{},"body":{"controllers/CatsController.html":{}}}],["apiproperty",{"_index":201,"title":{},"body":{"classes/Cat.html":{},"classes/CreateCatDto.html":{}}}],["apiproperty({description",{"_index":181,"title":{},"body":{"classes/Cat.html":{},"classes/CreateCatDto.html":{}}}],["apiresponse",{"_index":32,"title":{},"body":{"controllers/AppController.html":{},"controllers/CatsController.html":{}}}],["apitags",{"_index":33,"title":{},"body":{"controllers/AppController.html":{},"controllers/CatsController.html":{},"controllers/HealthController.html":{}}}],["apitags(appcontroller.name",{"_index":37,"title":{},"body":{"controllers/AppController.html":{}}}],["apitags(catscontroller.name",{"_index":248,"title":{},"body":{"controllers/CatsController.html":{}}}],["apitags(healthcontroller.name",{"_index":339,"title":{},"body":{"controllers/HealthController.html":{}}}],["app",{"_index":438,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["app.controller",{"_index":101,"title":{},"body":{"modules/AppModule.html":{}}}],["app.service",{"_index":36,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["appcontroller",{"_index":1,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["application",{"_index":347,"title":{},"body":{"controllers/HealthController.html":{}}}],["applications",{"_index":449,"title":{},"body":{"index.html":{}}}],["applicationshutdown",{"_index":164,"title":{},"body":{"modules/AppModule.html":{},"controllers/HealthController.html":{}}}],["appmodule",{"_index":50,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appservice",{"_index":35,"title":{"injectables/AppService.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"coverage.html":{},"overview.html":{}}}],["array",{"_index":233,"title":{},"body":{"controllers/CatsController.html":{}}}],["assignment,@typescript",{"_index":81,"title":{},"body":{"modules/AppModule.html":{}}}],["assignment,no",{"_index":23,"title":{},"body":{"controllers/AppController.html":{}}}],["async",{"_index":217,"title":{},"body":{"controllers/CatsController.html":{},"injectables/CatsService.html":{}}}],["asynchronous",{"_index":362,"title":{},"body":{"controllers/HealthController.html":{}}}],["author",{"_index":484,"title":{},"body":{"index.html":{}}}],["await",{"_index":254,"title":{},"body":{"controllers/CatsController.html":{}}}],["awaits",{"_index":361,"title":{},"body":{"controllers/HealthController.html":{}}}],["backers",{"_index":475,"title":{},"body":{"index.html":{}}}],["before",{"_index":25,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/HealthController.html":{},"miscellaneous/variables.html":{}}}],["beforeapplicationshutdown",{"_index":353,"title":{},"body":{"controllers/HealthController.html":{}}}],["body",{"_index":241,"title":{},"body":{"controllers/CatsController.html":{}}}],["bootstrap",{"_index":55,"title":{},"body":{"modules/AppModule.html":{},"modules/CatsModule.html":{},"modules/CronModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["breed",{"_index":176,"title":{},"body":{"classes/Cat.html":{},"classes/CreateCatDto.html":{},"interfaces/ICat.html":{}}}],["browse",{"_index":494,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":492,"title":{},"body":{"modules.html":{}}}],["building",{"_index":444,"title":{},"body":{"index.html":{}}}],["call",{"_index":350,"title":{},"body":{"controllers/HealthController.html":{}}}],["call,@typescript",{"_index":82,"title":{},"body":{"modules/AppModule.html":{}}}],["cat",{"_index":98,"title":{"classes/Cat.html":{}},"body":{"modules/AppModule.html":{},"classes/Cat.html":{},"controllers/CatsController.html":{},"modules/CatsModule.html":{},"injectables/CatsService.html":{},"classes/CreateCatDto.html":{},"coverage.html":{}}}],["cat'})@apiresponse({status",{"_index":224,"title":{},"body":{"controllers/CatsController.html":{}}}],["cat.age",{"_index":284,"title":{},"body":{"injectables/CatsService.html":{}}}],["cat.breed",{"_index":286,"title":{},"body":{"injectables/CatsService.html":{}}}],["cat.name",{"_index":282,"title":{},"body":{"injectables/CatsService.html":{}}}],["cat.name_length",{"_index":211,"title":{},"body":{"classes/Cat.html":{}}}],["cat_age",{"_index":184,"title":{},"body":{"classes/Cat.html":{}}}],["cat_breed",{"_index":188,"title":{},"body":{"classes/Cat.html":{}}}],["cat_name",{"_index":194,"title":{},"body":{"classes/Cat.html":{}}}],["catentity",{"_index":235,"title":{},"body":{"controllers/CatsController.html":{}}}],["catentity})@apiresponse({description",{"_index":227,"title":{},"body":{"controllers/CatsController.html":{}}}],["catrepo",{"_index":270,"title":{},"body":{"injectables/CatsService.html":{}}}],["cats",{"_index":206,"title":{},"body":{"classes/Cat.html":{},"controllers/CatsController.html":{}}}],["cats'})@apiresponse({description",{"_index":232,"title":{},"body":{"controllers/CatsController.html":{}}}],["catscontroller",{"_index":214,"title":{"controllers/CatsController.html":{}},"body":{"controllers/CatsController.html":{},"modules/CatsModule.html":{},"coverage.html":{}}}],["catsmodule",{"_index":61,"title":{"modules/CatsModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CatsModule.html":{},"modules.html":{},"overview.html":{}}}],["catsservice",{"_index":245,"title":{"injectables/CatsService.html":{}},"body":{"controllers/CatsController.html":{},"modules/CatsModule.html":{},"injectables/CatsService.html":{},"coverage.html":{},"overview.html":{}}}],["check",{"_index":330,"title":{},"body":{"controllers/HealthController.html":{}}}],["class",{"_index":39,"title":{"classes/Cat.html":{},"classes/CreateCatDto.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Cat.html":{},"controllers/CatsController.html":{},"modules/CatsModule.html":{},"injectables/CatsService.html":{},"classes/CreateCatDto.html":{},"modules/CronModule.html":{},"injectables/CronService.html":{},"controllers/HealthController.html":{},"coverage.html":{},"dependencies.html":{}}}],["classes",{"_index":172,"title":{},"body":{"classes/Cat.html":{},"classes/CreateCatDto.html":{},"overview.html":{}}}],["cluster_appmodule",{"_index":58,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":60,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":59,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_catsmodule",{"_index":260,"title":{},"body":{"modules/CatsModule.html":{},"overview.html":{}}}],["cluster_catsmodule_providers",{"_index":261,"title":{},"body":{"modules/CatsModule.html":{},"overview.html":{}}}],["cluster_cronmodule",{"_index":302,"title":{},"body":{"modules/CronModule.html":{},"overview.html":{}}}],["cluster_cronmodule_providers",{"_index":303,"title":{},"body":{"modules/CronModule.html":{},"overview.html":{}}}],["colorize",{"_index":126,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["column",{"_index":202,"title":{},"body":{"classes/Cat.html":{}}}],["config",{"_index":342,"title":{},"body":{"controllers/HealthController.html":{}}}],["configmodule",{"_index":85,"title":{},"body":{"modules/AppModule.html":{}}}],["configmodule.forroot(configmoduleoptions",{"_index":153,"title":{},"body":{"modules/AppModule.html":{}}}],["configmoduleoptions",{"_index":106,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["configservice",{"_index":335,"title":{},"body":{"controllers/HealthController.html":{}}}],["console,@typescript",{"_index":80,"title":{},"body":{"modules/AppModule.html":{}}}],["console.log",{"_index":370,"title":{},"body":{"controllers/HealthController.html":{}}}],["console.log(`moduleinit",{"_index":368,"title":{},"body":{"controllers/HealthController.html":{}}}],["const",{"_index":105,"title":{},"body":{"modules/AppModule.html":{},"injectables/CatsService.html":{},"miscellaneous/variables.html":{}}}],["constructor",{"_index":266,"title":{},"body":{"injectables/CatsService.html":{},"controllers/HealthController.html":{}}}],["constructor(@injectrepository(cat",{"_index":277,"title":{},"body":{"injectables/CatsService.html":{}}}],["constructor(catrepo",{"_index":267,"title":{},"body":{"injectables/CatsService.html":{}}}],["constructor(private",{"_index":40,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/CatsController.html":{}}}],["continue",{"_index":364,"title":{},"body":{"controllers/HealthController.html":{}}}],["controller",{"_index":0,"title":{"controllers/AppController.html":{},"controllers/CatsController.html":{},"controllers/HealthController.html":{}},"body":{"controllers/AppController.html":{},"controllers/CatsController.html":{},"controllers/HealthController.html":{},"coverage.html":{}}}],["controller('cats",{"_index":249,"title":{},"body":{"controllers/CatsController.html":{}}}],["controller('health",{"_index":340,"title":{},"body":{"controllers/HealthController.html":{}}}],["controllers",{"_index":2,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/CatsController.html":{},"modules/CatsModule.html":{},"controllers/HealthController.html":{},"overview.html":{}}}],["coon",{"_index":213,"title":{},"body":{"classes/Cat.html":{},"classes/CreateCatDto.html":{}}}],["coon'})@column({name",{"_index":187,"title":{},"body":{"classes/Cat.html":{}}}],["coon'})@isstring",{"_index":294,"title":{},"body":{"classes/CreateCatDto.html":{}}}],["corresponding",{"_index":357,"title":{},"body":{"controllers/HealthController.html":{}}}],["coverage",{"_index":374,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["create",{"_index":218,"title":{},"body":{"controllers/CatsController.html":{},"injectables/CatsService.html":{}}}],["create(@body",{"_index":253,"title":{},"body":{"controllers/CatsController.html":{}}}],["create(cat",{"_index":271,"title":{},"body":{"injectables/CatsService.html":{}}}],["create(createcatdto",{"_index":221,"title":{},"body":{"controllers/CatsController.html":{}}}],["createcatdto",{"_index":222,"title":{"classes/CreateCatDto.html":{}},"body":{"controllers/CatsController.html":{},"injectables/CatsService.html":{},"classes/CreateCatDto.html":{},"coverage.html":{}}}],["created",{"_index":225,"title":{},"body":{"controllers/CatsController.html":{}}}],["createswagger",{"_index":386,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["createswagger(app",{"_index":437,"title":{},"body":{"miscellaneous/functions.html":{}}}],["cron",{"_index":319,"title":{},"body":{"injectables/CronService.html":{}}}],["cron('60",{"_index":311,"title":{},"body":{"injectables/CronService.html":{}}}],["cron.service",{"_index":306,"title":{},"body":{"modules/CronModule.html":{}}}],["cron/cron.module",{"_index":104,"title":{},"body":{"modules/AppModule.html":{}}}],["cronmodule",{"_index":62,"title":{"modules/CronModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CronModule.html":{},"modules.html":{},"overview.html":{}}}],["cronservice",{"_index":304,"title":{"injectables/CronService.html":{}},"body":{"modules/CronModule.html":{},"injectables/CronService.html":{},"coverage.html":{},"overview.html":{}}}],["database",{"_index":149,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["database.sqlite",{"_index":150,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["date",{"_index":133,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["declarations",{"_index":54,"title":{},"body":{"modules/AppModule.html":{},"modules/CatsModule.html":{},"modules/CronModule.html":{},"overview.html":{}}}],["decorators",{"_index":10,"title":{},"body":{"controllers/AppController.html":{},"classes/Cat.html":{},"controllers/CatsController.html":{},"classes/CreateCatDto.html":{},"injectables/CronService.html":{},"controllers/HealthController.html":{}}}],["default",{"_index":197,"title":{},"body":{"classes/Cat.html":{},"injectables/CronService.html":{},"miscellaneous/variables.html":{}}}],["default('development",{"_index":122,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["define",{"_index":27,"title":{},"body":{"controllers/AppController.html":{},"controllers/HealthController.html":{}}}],["define,@typescript",{"_index":26,"title":{},"body":{"controllers/AppController.html":{},"controllers/HealthController.html":{}}}],["defined",{"_index":14,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Cat.html":{},"controllers/CatsController.html":{},"injectables/CatsService.html":{},"classes/CreateCatDto.html":{},"injectables/CronService.html":{},"controllers/HealthController.html":{}}}],["dependencies",{"_index":52,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/CatsModule.html":{},"modules/CronModule.html":{},"dependencies.html":{},"overview.html":{}}}],["described",{"_index":355,"title":{},"body":{"controllers/HealthController.html":{}}}],["description",{"_index":208,"title":{},"body":{"classes/Cat.html":{},"controllers/CatsController.html":{},"classes/CreateCatDto.html":{},"index.html":{}}}],["development",{"_index":454,"title":{},"body":{"index.html":{}}}],["disable",{"_index":19,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/CatsController.html":{},"controllers/HealthController.html":{}}}],["display",{"_index":129,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["dns",{"_index":341,"title":{},"body":{"controllers/HealthController.html":{}}}],["dnshealthindicator",{"_index":336,"title":{},"body":{"controllers/HealthController.html":{}}}],["docs",{"_index":345,"title":{},"body":{"controllers/HealthController.html":{}}}],["documentation",{"_index":375,"title":{},"body":{"coverage.html":{}}}],["dotenv",{"_index":405,"title":{},"body":{"dependencies.html":{}}}],["dto/cat.dto",{"_index":276,"title":{},"body":{"injectables/CatsService.html":{}}}],["e2e",{"_index":463,"title":{},"body":{"index.html":{}}}],["efficient",{"_index":445,"title":{},"body":{"index.html":{}}}],["entities",{"_index":146,"title":{},"body":{"modules/AppModule.html":{},"controllers/CatsController.html":{},"miscellaneous/variables.html":{}}}],["entity",{"_index":203,"title":{},"body":{"classes/Cat.html":{},"controllers/CatsController.html":{}}}],["err",{"_index":142,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["error",{"_index":143,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["errorlikeobjectkeys",{"_index":141,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["errors",{"_index":144,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["eslint",{"_index":18,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/CatsController.html":{},"controllers/HealthController.html":{}}}],["eslint/no",{"_index":21,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/HealthController.html":{}}}],["example",{"_index":182,"title":{},"body":{"classes/Cat.html":{},"classes/CreateCatDto.html":{}}}],["expand",{"_index":407,"title":{},"body":{"dependencies.html":{}}}],["export",{"_index":38,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Cat.html":{},"controllers/CatsController.html":{},"modules/CatsModule.html":{},"injectables/CatsService.html":{},"classes/CreateCatDto.html":{},"modules/CronModule.html":{},"injectables/CronService.html":{},"controllers/HealthController.html":{},"interfaces/ICat.html":{}}}],["exports",{"_index":57,"title":{},"body":{"modules/AppModule.html":{},"modules/CatsModule.html":{},"modules/CronModule.html":{},"overview.html":{}}}],["express",{"_index":397,"title":{},"body":{"dependencies.html":{}}}],["false",{"_index":128,"title":{},"body":{"modules/AppModule.html":{},"controllers/CatsController.html":{},"miscellaneous/variables.html":{}}}],["file",{"_index":5,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Cat.html":{},"controllers/CatsController.html":{},"modules/CatsModule.html":{},"injectables/CatsService.html":{},"classes/CreateCatDto.html":{},"modules/CronModule.html":{},"injectables/CronService.html":{},"controllers/HealthController.html":{},"interfaces/ICat.html":{},"coverage.html":{}}}],["findall",{"_index":219,"title":{},"body":{"controllers/CatsController.html":{},"injectables/CatsService.html":{}}}],["findone",{"_index":220,"title":{},"body":{"controllers/CatsController.html":{},"injectables/CatsService.html":{}}}],["findone(@param('id",{"_index":258,"title":{},"body":{"controllers/CatsController.html":{}}}],["findone(id",{"_index":237,"title":{},"body":{"controllers/CatsController.html":{},"injectables/CatsService.html":{}}}],["first",{"_index":358,"title":{},"body":{"controllers/HealthController.html":{}}}],["forbidden",{"_index":228,"title":{},"body":{"controllers/CatsController.html":{}}}],["framework",{"_index":443,"title":{},"body":{"index.html":{}}}],["function",{"_index":360,"title":{},"body":{"controllers/HealthController.html":{},"coverage.html":{}}}],["functions",{"_index":435,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["get(':id",{"_index":257,"title":{},"body":{"controllers/CatsController.html":{}}}],["get(':id')@apioperation({summary",{"_index":238,"title":{},"body":{"controllers/CatsController.html":{}}}],["get()@apioperation({summary",{"_index":231,"title":{},"body":{"controllers/CatsController.html":{}}}],["get()@apiresponse({status",{"_index":12,"title":{},"body":{"controllers/AppController.html":{}}}],["get()@healthcheck",{"_index":331,"title":{},"body":{"controllers/HealthController.html":{}}}],["gethello",{"_index":9,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["getting",{"_index":439,"title":{"index.html":{}},"body":{}}],["grow",{"_index":470,"title":{},"body":{"index.html":{}}}],["handlecron",{"_index":308,"title":{},"body":{"injectables/CronService.html":{}}}],["handleinterval",{"_index":309,"title":{},"body":{"injectables/CronService.html":{}}}],["handletimeout",{"_index":310,"title":{},"body":{"injectables/CronService.html":{}}}],["hapi/joi",{"_index":96,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["health",{"_index":156,"title":{},"body":{"modules/AppModule.html":{},"controllers/HealthController.html":{}}}],["health/health.controller",{"_index":100,"title":{},"body":{"modules/AppModule.html":{}}}],["healthcheck",{"_index":337,"title":{},"body":{"controllers/HealthController.html":{}}}],["healthcheckservice",{"_index":338,"title":{},"body":{"controllers/HealthController.html":{}}}],["healthcontroller",{"_index":67,"title":{"controllers/HealthController.html":{}},"body":{"modules/AppModule.html":{},"controllers/HealthController.html":{},"coverage.html":{}}}],["hello",{"_index":170,"title":{},"body":{"injectables/AppService.html":{}}}],["helmet",{"_index":412,"title":{},"body":{"dependencies.html":{}}}],["here",{"_index":481,"title":{},"body":{"index.html":{}}}],["https://docs.nestjs.com",{"_index":346,"title":{},"body":{"controllers/HealthController.html":{}}}],["https://nestjs.com",{"_index":488,"title":{},"body":{"index.html":{}}}],["httpstatus",{"_index":29,"title":{},"body":{"controllers/AppController.html":{},"controllers/CatsController.html":{}}}],["httpstatus.created",{"_index":251,"title":{},"body":{"controllers/CatsController.html":{}}}],["httpstatus.forbidden",{"_index":252,"title":{},"body":{"controllers/CatsController.html":{}}}],["httpstatus.ok",{"_index":43,"title":{},"body":{"controllers/AppController.html":{},"controllers/CatsController.html":{}}}],["icat",{"_index":291,"title":{"interfaces/ICat.html":{}},"body":{"classes/CreateCatDto.html":{},"interfaces/ICat.html":{},"coverage.html":{}}}],["id",{"_index":177,"title":{},"body":{"classes/Cat.html":{},"controllers/CatsController.html":{},"injectables/CatsService.html":{}}}],["id'})@apiresponse({description",{"_index":239,"title":{},"body":{"controllers/CatsController.html":{}}}],["identifier",{"_index":376,"title":{},"body":{"coverage.html":{}}}],["ignore",{"_index":139,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["implements",{"_index":158,"title":{},"body":{"modules/AppModule.html":{},"classes/CreateCatDto.html":{},"controllers/HealthController.html":{}}}],["import",{"_index":28,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Cat.html":{},"controllers/CatsController.html":{},"modules/CatsModule.html":{},"injectables/CatsService.html":{},"classes/CreateCatDto.html":{},"modules/CronModule.html":{},"injectables/CronService.html":{},"controllers/HealthController.html":{}}}],["imports",{"_index":68,"title":{},"body":{"modules/AppModule.html":{},"modules/CatsModule.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/Cat.html":{},"controllers/CatsController.html":{},"injectables/CatsService.html":{},"classes/CreateCatDto.html":{},"injectables/CronService.html":{},"controllers/HealthController.html":{},"interfaces/ICat.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Cat.html":{},"controllers/CatsController.html":{},"modules/CatsModule.html":{},"injectables/CatsService.html":{},"classes/CreateCatDto.html":{},"modules/CronModule.html":{},"injectables/CronService.html":{},"controllers/HealthController.html":{},"interfaces/ICat.html":{}}}],["initialized",{"_index":162,"title":{},"body":{"modules/AppModule.html":{},"controllers/HealthController.html":{}}}],["injectable",{"_index":166,"title":{"injectables/AppService.html":{},"injectables/CatsService.html":{},"injectables/CronService.html":{}},"body":{"injectables/AppService.html":{},"injectables/CatsService.html":{},"injectables/CronService.html":{},"coverage.html":{}}}],["injectables",{"_index":167,"title":{},"body":{"injectables/AppService.html":{},"injectables/CatsService.html":{},"injectables/CronService.html":{},"overview.html":{}}}],["injectrepository",{"_index":275,"title":{},"body":{"injectables/CatsService.html":{}}}],["installation",{"_index":451,"title":{},"body":{"index.html":{}}}],["installrunning",{"_index":453,"title":{},"body":{"index.html":{}}}],["interface",{"_index":371,"title":{"interfaces/ICat.html":{}},"body":{"interfaces/ICat.html":{},"coverage.html":{},"overview.html":{}}}],["interfaces",{"_index":372,"title":{},"body":{"interfaces/ICat.html":{}}}],["interval",{"_index":320,"title":{},"body":{"injectables/CronService.html":{}}}],["interval(100000",{"_index":313,"title":{},"body":{"injectables/CronService.html":{}}}],["isarray",{"_index":234,"title":{},"body":{"controllers/CatsController.html":{}}}],["isglobal",{"_index":107,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["isint",{"_index":298,"title":{},"body":{"classes/CreateCatDto.html":{}}}],["isstring",{"_index":299,"title":{},"body":{"classes/CreateCatDto.html":{}}}],["joi",{"_index":95,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["joi.number().default(3000",{"_index":115,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["joi.object",{"_index":113,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["joi.string",{"_index":117,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["join",{"_index":477,"title":{},"body":{"index.html":{}}}],["kamil",{"_index":485,"title":{},"body":{"index.html":{}}}],["kitty",{"_index":210,"title":{},"body":{"classes/Cat.html":{},"classes/CreateCatDto.html":{}}}],["kitty'})@column({name",{"_index":193,"title":{},"body":{"classes/Cat.html":{}}}],["kitty'})@isstring",{"_index":296,"title":{},"body":{"classes/CreateCatDto.html":{}}}],["legend",{"_index":53,"title":{},"body":{"modules/AppModule.html":{},"modules/CatsModule.html":{},"modules/CronModule.html":{},"overview.html":{}}}],["length",{"_index":195,"title":{},"body":{"classes/Cat.html":{}}}],["level",{"_index":131,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["levelfirst",{"_index":127,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["license",{"_index":491,"title":{},"body":{"index.html":{}}}],["licensed",{"_index":467,"title":{},"body":{"index.html":{}}}],["limit",{"_index":410,"title":{},"body":{"dependencies.html":{}}}],["local",{"_index":417,"title":{},"body":{"dependencies.html":{}}}],["log",{"_index":130,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["logged",{"_index":132,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["logger",{"_index":159,"title":{},"body":{"modules/AppModule.html":{},"injectables/CronService.html":{}}}],["logger(cronservice.name",{"_index":317,"title":{},"body":{"injectables/CronService.html":{}}}],["logger.setcontext(appmodule.name",{"_index":160,"title":{},"body":{"modules/AppModule.html":{}}}],["loggermodule",{"_index":92,"title":{},"body":{"modules/AppModule.html":{}}}],["loggermodule.forroot(loggermoduleoptions",{"_index":154,"title":{},"body":{"modules/AppModule.html":{}}}],["loggermoduleoptions",{"_index":123,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["logging",{"_index":152,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["maine",{"_index":186,"title":{},"body":{"classes/Cat.html":{},"classes/CreateCatDto.html":{}}}],["matching",{"_index":47,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Cat.html":{},"controllers/CatsController.html":{},"modules/CatsModule.html":{},"injectables/CatsService.html":{},"classes/CreateCatDto.html":{},"modules/CronModule.html":{},"injectables/CronService.html":{},"controllers/HealthController.html":{},"interfaces/ICat.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["member",{"_index":83,"title":{},"body":{"modules/AppModule.html":{}}}],["messageformat",{"_index":136,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["metadata",{"_index":422,"title":{},"body":{"dependencies.html":{}}}],["methods",{"_index":8,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/CatsController.html":{},"injectables/CatsService.html":{},"injectables/CronService.html":{},"controllers/HealthController.html":{}}}],["miscellaneous",{"_index":434,"title":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":466,"title":{},"body":{"index.html":{}}}],["mode",{"_index":458,"title":{},"body":{"index.html":{}}}],["module",{"_index":49,"title":{"modules/AppModule.html":{},"modules/CatsModule.html":{},"modules/CronModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CatsModule.html":{},"modules/CronModule.html":{},"overview.html":{}}}],["modules",{"_index":51,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/CatsModule.html":{},"modules/CronModule.html":{},"modules.html":{},"overview.html":{}}}],["more",{"_index":480,"title":{},"body":{"index.html":{}}}],["msg",{"_index":137,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["myśliwiec",{"_index":486,"title":{},"body":{"index.html":{}}}],["name",{"_index":73,"title":{},"body":{"modules/AppModule.html":{},"classes/Cat.html":{},"controllers/CatsController.html":{},"injectables/CatsService.html":{},"classes/CreateCatDto.html":{},"controllers/HealthController.html":{},"interfaces/ICat.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["name_length",{"_index":179,"title":{},"body":{"classes/Cat.html":{}}}],["nest",{"_index":363,"title":{},"body":{"controllers/HealthController.html":{},"index.html":{}}}],["nestframework",{"_index":490,"title":{},"body":{"index.html":{}}}],["nestjs",{"_index":93,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["nestjs/common",{"_index":31,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/CatsController.html":{},"modules/CatsModule.html":{},"injectables/CatsService.html":{},"modules/CronModule.html":{},"injectables/CronService.html":{},"controllers/HealthController.html":{},"dependencies.html":{}}}],["nestjs/config",{"_index":86,"title":{},"body":{"modules/AppModule.html":{},"controllers/HealthController.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":393,"title":{},"body":{"dependencies.html":{}}}],["nestjs/passport",{"_index":394,"title":{},"body":{"dependencies.html":{}}}],["nestjs/platform",{"_index":396,"title":{},"body":{"dependencies.html":{}}}],["nestjs/schedule",{"_index":103,"title":{},"body":{"modules/AppModule.html":{},"injectables/CronService.html":{},"dependencies.html":{}}}],["nestjs/swagger",{"_index":34,"title":{},"body":{"controllers/AppController.html":{},"classes/Cat.html":{},"controllers/CatsController.html":{},"classes/CreateCatDto.html":{},"controllers/HealthController.html":{},"dependencies.html":{}}}],["nestjs/terminus",{"_index":88,"title":{},"body":{"modules/AppModule.html":{},"controllers/HealthController.html":{},"dependencies.html":{}}}],["nestjs/typeorm",{"_index":90,"title":{},"body":{"modules/AppModule.html":{},"modules/CatsModule.html":{},"injectables/CatsService.html":{},"dependencies.html":{}}}],["new",{"_index":280,"title":{},"body":{"injectables/CatsService.html":{},"injectables/CronService.html":{},"coverage.html":{}}}],["newcat",{"_index":279,"title":{},"body":{"injectables/CatsService.html":{}}}],["newcat.age",{"_index":283,"title":{},"body":{"injectables/CatsService.html":{}}}],["newcat.breed",{"_index":285,"title":{},"body":{"injectables/CatsService.html":{}}}],["newcat.name",{"_index":281,"title":{},"body":{"injectables/CatsService.html":{}}}],["node.js",{"_index":442,"title":{},"body":{"index.html":{}}}],["node_env",{"_index":116,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["npm",{"_index":452,"title":{},"body":{"index.html":{}}}],["number",{"_index":180,"title":{},"body":{"classes/Cat.html":{},"controllers/CatsController.html":{},"injectables/CatsService.html":{},"classes/CreateCatDto.html":{},"interfaces/ICat.html":{}}}],["object",{"_index":500,"title":{},"body":{"miscellaneous/variables.html":{}}}],["onapplicationshutdown",{"_index":69,"title":{},"body":{"modules/AppModule.html":{},"controllers/HealthController.html":{}}}],["onapplicationshutdown(signal",{"_index":70,"title":{},"body":{"modules/AppModule.html":{},"controllers/HealthController.html":{}}}],["once",{"_index":327,"title":{},"body":{"injectables/CronService.html":{}}}],["onmoduledestroy",{"_index":352,"title":{},"body":{"controllers/HealthController.html":{}}}],["onmoduleinit",{"_index":30,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/HealthController.html":{}}}],["open",{"_index":468,"title":{},"body":{"index.html":{}}}],["optional",{"_index":75,"title":{},"body":{"modules/AppModule.html":{},"controllers/CatsController.html":{},"injectables/CatsService.html":{},"controllers/HealthController.html":{},"miscellaneous/functions.html":{}}}],["out",{"_index":65,"title":{},"body":{"modules/AppModule.html":{},"modules/CatsModule.html":{},"modules/CronModule.html":{},"overview.html":{}}}],["overview",{"_index":495,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":389,"title":{"dependencies.html":{}},"body":{}}],["param",{"_index":242,"title":{},"body":{"controllers/CatsController.html":{}}}],["parameter",{"_index":359,"title":{},"body":{"controllers/HealthController.html":{}}}],["parameters",{"_index":72,"title":{},"body":{"modules/AppModule.html":{},"controllers/CatsController.html":{},"injectables/CatsService.html":{},"controllers/HealthController.html":{},"miscellaneous/functions.html":{}}}],["passport",{"_index":416,"title":{},"body":{"dependencies.html":{}}}],["pid",{"_index":138,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["pid,hostname",{"_index":140,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["pino",{"_index":94,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["pinohttp",{"_index":124,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["pinologger",{"_index":91,"title":{},"body":{"modules/AppModule.html":{}}}],["please",{"_index":478,"title":{},"body":{"index.html":{}}}],["port",{"_index":114,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["post",{"_index":243,"title":{},"body":{"controllers/CatsController.html":{}}}],["post()@apioperation({summary",{"_index":223,"title":{},"body":{"controllers/CatsController.html":{}}}],["prefix",{"_index":216,"title":{},"body":{"controllers/CatsController.html":{},"controllers/HealthController.html":{}}}],["pretty",{"_index":419,"title":{},"body":{"dependencies.html":{}}}],["prettyprint",{"_index":125,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["primarygeneratedcolumn",{"_index":204,"title":{},"body":{"classes/Cat.html":{}}}],["private",{"_index":278,"title":{},"body":{"injectables/CatsService.html":{},"injectables/CronService.html":{},"controllers/HealthController.html":{}}}],["production",{"_index":119,"title":{},"body":{"modules/AppModule.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["progressive",{"_index":441,"title":{},"body":{"index.html":{}}}],["project",{"_index":469,"title":{},"body":{"index.html":{}}}],["promise",{"_index":230,"title":{},"body":{"controllers/CatsController.html":{},"injectables/CatsService.html":{},"controllers/HealthController.html":{}}}],["properties",{"_index":174,"title":{},"body":{"classes/Cat.html":{},"classes/CreateCatDto.html":{},"injectables/CronService.html":{},"interfaces/ICat.html":{}}}],["providers",{"_index":56,"title":{},"body":{"modules/AppModule.html":{},"modules/CatsModule.html":{},"modules/CronModule.html":{},"overview.html":{}}}],["provision",{"_index":121,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["public",{"_index":207,"title":{},"body":{"classes/Cat.html":{}}}],["rate",{"_index":409,"title":{},"body":{"dependencies.html":{}}}],["read",{"_index":479,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":41,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"classes/Cat.html":{},"controllers/CatsController.html":{},"injectables/CatsService.html":{},"classes/CreateCatDto.html":{},"injectables/CronService.html":{},"interfaces/ICat.html":{}}}],["receives",{"_index":348,"title":{},"body":{"controllers/HealthController.html":{}}}],["reflect",{"_index":421,"title":{},"body":{"dependencies.html":{}}}],["registered",{"_index":351,"title":{},"body":{"controllers/HealthController.html":{}}}],["rejected",{"_index":367,"title":{},"body":{"controllers/HealthController.html":{}}}],["repository",{"_index":268,"title":{},"body":{"injectables/CatsService.html":{},"index.html":{}}}],["reset",{"_index":64,"title":{},"body":{"modules/AppModule.html":{},"modules/CatsModule.html":{},"modules/CronModule.html":{},"overview.html":{}}}],["resolved",{"_index":366,"title":{},"body":{"controllers/HealthController.html":{}}}],["result",{"_index":46,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Cat.html":{},"controllers/CatsController.html":{},"modules/CatsModule.html":{},"injectables/CatsService.html":{},"classes/CreateCatDto.html":{},"modules/CronModule.html":{},"injectables/CronService.html":{},"controllers/HealthController.html":{},"interfaces/ICat.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["results",{"_index":48,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Cat.html":{},"controllers/CatsController.html":{},"modules/CatsModule.html":{},"injectables/CatsService.html":{},"classes/CreateCatDto.html":{},"modules/CronModule.html":{},"injectables/CronService.html":{},"controllers/HealthController.html":{},"interfaces/ICat.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":44,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/CatsController.html":{},"injectables/CatsService.html":{},"controllers/HealthController.html":{}}}],["returns",{"_index":16,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/CatsController.html":{},"injectables/CatsService.html":{},"injectables/CronService.html":{},"controllers/HealthController.html":{}}}],["rimraf",{"_index":424,"title":{},"body":{"dependencies.html":{}}}],["run",{"_index":455,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":426,"title":{},"body":{"dependencies.html":{}}}],["scalable",{"_index":446,"title":{},"body":{"index.html":{}}}],["schedulemodule",{"_index":102,"title":{},"body":{"modules/AppModule.html":{}}}],["schedulemodule.forroot",{"_index":155,"title":{},"body":{"modules/AppModule.html":{}}}],["second",{"_index":323,"title":{},"body":{"injectables/CronService.html":{}}}],["seconds",{"_index":326,"title":{},"body":{"injectables/CronService.html":{}}}],["sequence",{"_index":354,"title":{},"body":{"controllers/HealthController.html":{}}}],["server",{"_index":447,"title":{},"body":{"index.html":{}}}],["shutdown",{"_index":165,"title":{},"body":{"modules/AppModule.html":{},"controllers/HealthController.html":{}}}],["side",{"_index":448,"title":{},"body":{"index.html":{}}}],["signal",{"_index":76,"title":{},"body":{"modules/AppModule.html":{},"controllers/HealthController.html":{}}}],["source",{"_index":4,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Cat.html":{},"controllers/CatsController.html":{},"modules/CatsModule.html":{},"injectables/CatsService.html":{},"classes/CreateCatDto.html":{},"modules/CronModule.html":{},"injectables/CronService.html":{},"controllers/HealthController.html":{},"interfaces/ICat.html":{},"index.html":{}}}],["sponsors",{"_index":472,"title":{},"body":{"index.html":{}}}],["sqlite",{"_index":148,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["sqlite3",{"_index":428,"title":{},"body":{"dependencies.html":{}}}],["src/.../app.module.ts",{"_index":499,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../main.ts",{"_index":436,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/app/app.controller.ts",{"_index":6,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app/app.controller.ts:14",{"_index":15,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app/app.module.ts",{"_index":66,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/app.module.ts:72",{"_index":79,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/app.module.ts:76",{"_index":71,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/app.service.ts",{"_index":168,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["src/app/app.service.ts:5",{"_index":169,"title":{},"body":{"injectables/AppService.html":{}}}],["src/cats/cats.controller",{"_index":263,"title":{},"body":{"modules/CatsModule.html":{}}}],["src/cats/cats.controller.ts",{"_index":215,"title":{},"body":{"controllers/CatsController.html":{},"coverage.html":{}}}],["src/cats/cats.controller.ts:25",{"_index":229,"title":{},"body":{"controllers/CatsController.html":{}}}],["src/cats/cats.controller.ts:37",{"_index":236,"title":{},"body":{"controllers/CatsController.html":{}}}],["src/cats/cats.controller.ts:49",{"_index":240,"title":{},"body":{"controllers/CatsController.html":{}}}],["src/cats/cats.module",{"_index":97,"title":{},"body":{"modules/AppModule.html":{}}}],["src/cats/cats.module.ts",{"_index":262,"title":{},"body":{"modules/CatsModule.html":{}}}],["src/cats/cats.service",{"_index":246,"title":{},"body":{"controllers/CatsController.html":{},"modules/CatsModule.html":{}}}],["src/cats/cats.service.ts",{"_index":265,"title":{},"body":{"injectables/CatsService.html":{},"coverage.html":{}}}],["src/cats/cats.service.ts:10",{"_index":269,"title":{},"body":{"injectables/CatsService.html":{}}}],["src/cats/cats.service.ts:13",{"_index":272,"title":{},"body":{"injectables/CatsService.html":{}}}],["src/cats/cats.service.ts:23",{"_index":273,"title":{},"body":{"injectables/CatsService.html":{}}}],["src/cats/cats.service.ts:27",{"_index":274,"title":{},"body":{"injectables/CatsService.html":{}}}],["src/cats/dto/cat.dto",{"_index":247,"title":{},"body":{"controllers/CatsController.html":{}}}],["src/cats/dto/cat.dto.ts",{"_index":290,"title":{},"body":{"classes/CreateCatDto.html":{},"coverage.html":{}}}],["src/cats/dto/cat.dto.ts:13",{"_index":293,"title":{},"body":{"classes/CreateCatDto.html":{}}}],["src/cats/dto/cat.dto.ts:17",{"_index":295,"title":{},"body":{"classes/CreateCatDto.html":{}}}],["src/cats/dto/cat.dto.ts:9",{"_index":297,"title":{},"body":{"classes/CreateCatDto.html":{}}}],["src/cats/entities/cat.entity",{"_index":99,"title":{},"body":{"modules/AppModule.html":{},"controllers/CatsController.html":{},"modules/CatsModule.html":{},"injectables/CatsService.html":{}}}],["src/cats/entities/cat.entity.ts",{"_index":173,"title":{},"body":{"classes/Cat.html":{},"coverage.html":{}}}],["src/cats/entities/cat.entity.ts:11",{"_index":192,"title":{},"body":{"classes/Cat.html":{}}}],["src/cats/entities/cat.entity.ts:15",{"_index":196,"title":{},"body":{"classes/Cat.html":{}}}],["src/cats/entities/cat.entity.ts:19",{"_index":185,"title":{},"body":{"classes/Cat.html":{}}}],["src/cats/entities/cat.entity.ts:23",{"_index":189,"title":{},"body":{"classes/Cat.html":{}}}],["src/cats/entities/cat.entity.ts:7",{"_index":200,"title":{},"body":{"classes/Cat.html":{}}}],["src/cats/interfaces/cat.interface",{"_index":301,"title":{},"body":{"classes/CreateCatDto.html":{}}}],["src/cats/interfaces/cat.interface.ts",{"_index":373,"title":{},"body":{"interfaces/ICat.html":{},"coverage.html":{}}}],["src/cron/cron.module.ts",{"_index":305,"title":{},"body":{"modules/CronModule.html":{}}}],["src/cron/cron.service.ts",{"_index":307,"title":{},"body":{"injectables/CronService.html":{},"coverage.html":{}}}],["src/cron/cron.service.ts:14",{"_index":314,"title":{},"body":{"injectables/CronService.html":{}}}],["src/cron/cron.service.ts:19",{"_index":316,"title":{},"body":{"injectables/CronService.html":{}}}],["src/cron/cron.service.ts:6",{"_index":318,"title":{},"body":{"injectables/CronService.html":{}}}],["src/cron/cron.service.ts:9",{"_index":312,"title":{},"body":{"injectables/CronService.html":{}}}],["src/health/health.controller.ts",{"_index":329,"title":{},"body":{"controllers/HealthController.html":{},"coverage.html":{}}}],["src/health/health.controller.ts:18",{"_index":332,"title":{},"body":{"controllers/HealthController.html":{}}}],["src/health/health.controller.ts:32",{"_index":334,"title":{},"body":{"controllers/HealthController.html":{}}}],["src/health/health.controller.ts:38",{"_index":333,"title":{},"body":{"controllers/HealthController.html":{}}}],["src/main.ts",{"_index":385,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["start",{"_index":456,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":459,"title":{},"body":{"index.html":{}}}],["start:prodtest",{"_index":460,"title":{},"body":{"index.html":{}}}],["started",{"_index":440,"title":{"index.html":{}},"body":{}}],["starter",{"_index":450,"title":{},"body":{"index.html":{}}}],["statements",{"_index":377,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":178,"title":{},"body":{"classes/Cat.html":{}}}],["status",{"_index":42,"title":{},"body":{"controllers/AppController.html":{},"controllers/CatsController.html":{}}}],["stay",{"_index":482,"title":{},"body":{"index.html":{}}}],["string",{"_index":17,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Cat.html":{},"classes/CreateCatDto.html":{},"controllers/HealthController.html":{},"interfaces/ICat.html":{}}}],["successfully",{"_index":226,"title":{},"body":{"controllers/CatsController.html":{}}}],["summary",{"_index":250,"title":{},"body":{"controllers/CatsController.html":{}}}],["support",{"_index":473,"title":{},"body":{"index.html":{},"modules.html":{}}}],["svg",{"_index":493,"title":{},"body":{"modules.html":{}}}],["swagger",{"_index":430,"title":{},"body":{"dependencies.html":{}}}],["synchronize",{"_index":151,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["table",{"_index":388,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":387,"title":{},"body":{"coverage.html":{}}}],["termination",{"_index":349,"title":{},"body":{"controllers/HealthController.html":{}}}],["terminusmodule",{"_index":87,"title":{},"body":{"modules/AppModule.html":{}}}],["test",{"_index":120,"title":{},"body":{"modules/AppModule.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["test:covsupport",{"_index":465,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":464,"title":{},"body":{"index.html":{}}}],["tests",{"_index":462,"title":{},"body":{"index.html":{}}}],["thanks",{"_index":471,"title":{},"body":{"index.html":{}}}],["this.appservice.gethello",{"_index":45,"title":{},"body":{"controllers/AppController.html":{}}}],["this.catrepo.find",{"_index":288,"title":{},"body":{"injectables/CatsService.html":{}}}],["this.catrepo.findone(id",{"_index":289,"title":{},"body":{"injectables/CatsService.html":{}}}],["this.catrepo.save(newcat",{"_index":287,"title":{},"body":{"injectables/CatsService.html":{}}}],["this.catsservice.create(createcatdto",{"_index":255,"title":{},"body":{"controllers/CatsController.html":{}}}],["this.catsservice.findall",{"_index":256,"title":{},"body":{"controllers/CatsController.html":{}}}],["this.catsservice.findone(id",{"_index":259,"title":{},"body":{"controllers/CatsController.html":{}}}],["this.config.get('node_env",{"_index":369,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.dns.pingcheck('nestjs",{"_index":344,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.health.check",{"_index":343,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.logger.debug('called",{"_index":322,"title":{},"body":{"injectables/CronService.html":{}}}],["this.logger.fatal",{"_index":163,"title":{},"body":{"modules/AppModule.html":{}}}],["this.logger.info(`moduleinit",{"_index":161,"title":{},"body":{"modules/AppModule.html":{}}}],["time",{"_index":134,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["timeout",{"_index":321,"title":{},"body":{"injectables/CronService.html":{}}}],["timeout(50000",{"_index":315,"title":{},"body":{"injectables/CronService.html":{}}}],["touch",{"_index":483,"title":{},"body":{"index.html":{}}}],["transformer",{"_index":402,"title":{},"body":{"dependencies.html":{}}}],["translatetime",{"_index":135,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["true",{"_index":108,"title":{},"body":{"modules/AppModule.html":{},"controllers/CatsController.html":{},"miscellaneous/variables.html":{}}}],["twitter",{"_index":489,"title":{},"body":{"index.html":{}}}],["type",{"_index":74,"title":{},"body":{"modules/AppModule.html":{},"classes/Cat.html":{},"controllers/CatsController.html":{},"injectables/CatsService.html":{},"classes/CreateCatDto.html":{},"controllers/HealthController.html":{},"interfaces/ICat.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["typeorm",{"_index":205,"title":{},"body":{"classes/Cat.html":{},"injectables/CatsService.html":{},"dependencies.html":{}}}],["typeormmodule",{"_index":89,"title":{},"body":{"modules/AppModule.html":{},"modules/CatsModule.html":{}}}],["typeormmodule.forfeature([cat",{"_index":264,"title":{},"body":{"modules/CatsModule.html":{}}}],["typeormmodule.forroot(typeormmoduleoptions",{"_index":157,"title":{},"body":{"modules/AppModule.html":{}}}],["typeormmoduleoptions",{"_index":145,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["typescript",{"_index":20,"title":{},"body":{"controllers/AppController.html":{},"index.html":{}}}],["ui",{"_index":431,"title":{},"body":{"dependencies.html":{}}}],["undefined",{"_index":13,"title":{},"body":{"controllers/AppController.html":{},"classes/Cat.html":{},"controllers/CatsController.html":{}}}],["unique",{"_index":190,"title":{},"body":{"classes/Cat.html":{}}}],["unit",{"_index":461,"title":{},"body":{"index.html":{}}}],["unsafe",{"_index":22,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["until",{"_index":365,"title":{},"body":{"controllers/HealthController.html":{}}}],["use",{"_index":24,"title":{},"body":{"controllers/AppController.html":{},"controllers/HealthController.html":{}}}],["valid('development",{"_index":118,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["validationoptions",{"_index":109,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["validationschema",{"_index":112,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["validator",{"_index":300,"title":{},"body":{"classes/CreateCatDto.html":{},"dependencies.html":{}}}],["value",{"_index":198,"title":{},"body":{"classes/Cat.html":{},"injectables/CronService.html":{},"miscellaneous/variables.html":{}}}],["variable",{"_index":380,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":498,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["void",{"_index":78,"title":{},"body":{"modules/AppModule.html":{},"injectables/CronService.html":{},"controllers/HealthController.html":{}}}],["watch",{"_index":457,"title":{},"body":{"index.html":{}}}],["website",{"_index":487,"title":{},"body":{"index.html":{}}}],["world",{"_index":171,"title":{},"body":{"injectables/AppService.html":{}}}],["yes",{"_index":77,"title":{},"body":{"modules/AppModule.html":{},"controllers/HealthController.html":{}}}],["you'd",{"_index":476,"title":{},"body":{"index.html":{}}}],["zoom",{"_index":63,"title":{},"body":{"modules/AppModule.html":{},"modules/CatsModule.html":{},"modules/CronModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/app.controller.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getHello\n                        \n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@ApiResponse({status: undefined})\n                \n            \n\n            \n                \n                    Defined in src/app/app.controller.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        /* eslint-disable @typescript-eslint/no-unsafe-assignment,no-use-before-define,@typescript-eslint/no-use-before-define */\nimport { Controller, Get, HttpStatus, OnModuleInit } from '@nestjs/common'\nimport { ApiResponse, ApiTags } from '@nestjs/swagger'\n\nimport { AppService } from './app.service'\n\n@ApiTags(AppController.name)\n@Controller()\nexport class AppController {\n    constructor(private readonly appService: AppService) {}\n\n    @Get()\n    @ApiResponse({ status: HttpStatus.OK })\n    getHello(): string {\n        return this.appService.getHello()\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AppModule_imports\n\n\n\n\nCatsModule\n\nCatsModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nCatsModule->AppModule\n\n\n\n\n\nCronModule\n\nCronModule\n\nAppModule -->\n\nCronModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                        \n                            HealthController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            CatsModule\n                        \n                        \n                            CronModule\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onApplicationShutdown\n                        \n                        \n                    \n                \n            \n            \n                \nonApplicationShutdown(signal?: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.module.ts:76\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    signal\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onModuleInit\n                        \n                        \n                    \n                \n            \n            \n                \nonModuleInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.module.ts:72\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        /* eslint-disable no-console,@typescript-eslint/no-unsafe-assignment,@typescript-eslint/no-unsafe-call,@typescript-eslint/no-unsafe-member-access */\nimport { Module, OnModuleInit, OnApplicationShutdown } from '@nestjs/common'\nimport { ConfigModule } from '@nestjs/config'\nimport { TerminusModule } from '@nestjs/terminus'\nimport { TypeOrmModule } from '@nestjs/typeorm'\n\nimport { PinoLogger, LoggerModule } from 'nestjs-pino'\n\nimport * as Joi from '@hapi/joi'\nimport { CatsModule } from 'src/cats/cats.module'\nimport { Cat } from 'src/cats/entities/cat.entity'\n\nimport { HealthController } from '../health/health.controller'\nimport { AppController } from './app.controller'\nimport { AppService } from './app.service'\nimport { ScheduleModule } from '@nestjs/schedule'\nimport { CronModule } from '../cron/cron.module'\n\nconst ConfigModuleOptions = {\n    isGlobal: true,\n    validationOptions: {\n        allowUnknown: true,\n        abortEarly: true,\n    },\n    validationSchema: Joi.object({\n        PORT: Joi.number().default(3000),\n        NODE_ENV: Joi.string()\n            .valid('development', 'production', 'test', 'provision')\n            .default('development'),\n    }),\n}\n\nconst LoggerModuleOptions = {\n    pinoHttp: {\n        prettyPrint: {\n            colorize: true,\n            levelFirst: false, // Display the log level name before the logged date and time\n            translateTime: true,\n            messageFormat: '{msg}', // 'pid', 'msg', 'level'\n            ignore: 'pid,hostname',\n            errorLikeObjectKeys: ['err', 'error', 'errors'],\n        },\n    },\n}\n\nconst TypeOrmModuleOptions = {\n    entities: [`${__dirname}/../**/*.entity.{ts,js}`],\n    type: 'sqlite' as const,\n    database: 'database.sqlite',\n    synchronize: true,\n    logging: true,\n}\n\n@Module({\n    controllers: [AppController, HealthController],\n    imports: [\n        ConfigModule.forRoot(ConfigModuleOptions),\n        LoggerModule.forRoot(LoggerModuleOptions),\n        ScheduleModule.forRoot(),\n        CronModule,\n        TerminusModule, // Health module\n        TypeOrmModule.forRoot(TypeOrmModuleOptions),\n        CatsModule,\n    ],\n    providers: [AppService],\n})\nexport class AppModule implements OnModuleInit, OnApplicationShutdown {\n    constructor(private readonly logger: PinoLogger) {\n        logger.setContext(AppModule.name)\n    }\n\n    onModuleInit(): void {\n        this.logger.info(`ModuleInit - AppModule has been initialized.`)\n    }\n\n    onApplicationShutdown(signal?: string): void {\n        this.logger.fatal(\n            `ApplicationShutdown - AppModule has been shutdown with ${signal} signal`,\n        )\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/app.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getHello\n                        \n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.service.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, OnModuleInit } from '@nestjs/common'\n\n@Injectable()\nexport class AppService {\n    getHello(): string {\n        return 'Hello World!'\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Cat.html":{"url":"classes/Cat.html","title":"class - Cat","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Cat\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/cats/entities/cat.entity.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                age\n                            \n                            \n                                breed\n                            \n                            \n                                id\n                            \n                            \n                                name\n                            \n                            \n                                    Static\n                                    Readonly\n                                NAME_LENGTH\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            age\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'The age of the Cat', example: 1})@Column({name: 'cat_age'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/cats/entities/cat.entity.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            breed\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'The breed of the Cat', example: 'Maine Coon'})@Column({name: 'cat_breed'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/cats/entities/cat.entity.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'Cat unique ID', example: '36635263'})@PrimaryGeneratedColumn()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/cats/entities/cat.entity.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'The name of the Cat', example: 'Kitty'})@Column({name: 'cat_name', length: undefined})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/cats/entities/cat.entity.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                                Readonly\n                            NAME_LENGTH\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 36\n                        \n                    \n                        \n                            \n                                    Defined in src/cats/entities/cat.entity.ts:7\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger'\n\nimport { Column, Entity, PrimaryGeneratedColumn } from 'typeorm'\n\n@Entity({ name: 'cats' })\nexport class Cat {\n    public static readonly NAME_LENGTH = 36\n\n    @ApiProperty({ description: 'Cat unique ID', example: '36635263' })\n    @PrimaryGeneratedColumn()\n    id: number\n\n    @ApiProperty({ description: 'The name of the Cat', example: 'Kitty' })\n    @Column({ name: 'cat_name', length: Cat.NAME_LENGTH })\n    name: string\n\n    @ApiProperty({ description: 'The age of the Cat', example: 1 })\n    @Column({ name: 'cat_age' })\n    age: number\n\n    @ApiProperty({ description: 'The breed of the Cat', example: 'Maine Coon' })\n    @Column({ name: 'cat_breed' })\n    breed: string\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/CatsController.html":{"url":"controllers/CatsController.html","title":"controller - CatsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  CatsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/cats/cats.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                cats\n            \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                findOne\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            create\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    create(createCatDto: CreateCatDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@ApiOperation({summary: 'Create cat'})@ApiResponse({status: undefined, description: 'Created Cat Successfully', type: CatEntity})@ApiResponse({description: 'Forbidden', status: undefined})\n                \n            \n\n            \n                \n                    Defined in src/cats/cats.controller.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createCatDto\n                                    \n                                                CreateCatDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findAll\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@ApiOperation({summary: 'Get all Cats'})@ApiResponse({description: 'Array of all Cats Entities', isArray: true, status: undefined, type: CatEntity})\n                \n            \n\n            \n                \n                    Defined in src/cats/cats.controller.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            findOne\n                        \n                        \n                    \n                \n            \n            \n                \nfindOne(id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')@ApiOperation({summary: 'Get a Cats by id'})@ApiResponse({description: 'Entity of a Cats', isArray: false, status: undefined, type: CatEntity})\n                \n            \n\n            \n                \n                    Defined in src/cats/cats.controller.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        /* eslint-disable */\nimport { Body, Controller, Get, Param, Post, HttpStatus } from '@nestjs/common'\nimport { ApiOperation, ApiResponse, ApiTags } from '@nestjs/swagger'\n\nimport { CatsService } from 'src/cats/cats.service'\nimport { CreateCatDto } from 'src/cats/dto/cat.dto'\nimport { Cat as CatEntity } from 'src/cats/entities/cat.entity'\n\n@ApiTags(CatsController.name)\n@Controller('cats')\nexport class CatsController {\n    constructor(private readonly catsService: CatsService) {}\n\n    @Post()\n    @ApiOperation({ summary: 'Create cat' })\n    @ApiResponse({\n        status: HttpStatus.CREATED,\n        description: 'Created Cat Successfully',\n        type: CatEntity,\n    })\n    @ApiResponse({\n        description: 'Forbidden',\n        status: HttpStatus.FORBIDDEN,\n    })\n    async create(@Body() createCatDto: CreateCatDto): Promise {\n        return await this.catsService.create(createCatDto)\n    }\n\n    @Get()\n    @ApiOperation({ summary: 'Get all Cats' })\n    @ApiResponse({\n        description: 'Array of all Cats Entities',\n        isArray: true,\n        status: HttpStatus.OK,\n        type: CatEntity,\n    })\n    async findAll(): Promise {\n        return this.catsService.findAll()\n    }\n\n    @Get(':id')\n    @ApiOperation({ summary: 'Get a Cats by id' })\n    @ApiResponse({\n        description: 'Entity of a Cats',\n        isArray: false,\n        status: HttpStatus.OK,\n        type: CatEntity,\n    })\n    findOne(@Param('id') id: number): Promise {\n        return this.catsService.findOne(id)\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CatsModule.html":{"url":"modules/CatsModule.html","title":"module - CatsModule","body":"\n                   \n\n\n\n\n    Modules\n    CatsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_CatsModule\n\n\n\ncluster_CatsModule_providers\n\n\n\n\nCatsService\n\nCatsService\n\n\n\nCatsModule\n\nCatsModule\n\nCatsModule -->\n\nCatsService->CatsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/cats/cats.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            CatsService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            CatsController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common'\nimport { TypeOrmModule } from '@nestjs/typeorm'\n\nimport { CatsController } from 'src/cats/cats.controller'\nimport { CatsService } from 'src/cats/cats.service'\nimport { Cat } from 'src/cats/entities/cat.entity'\n\n@Module({\n    controllers: [CatsController],\n    imports: [TypeOrmModule.forFeature([Cat])],\n    providers: [CatsService],\n})\nexport class CatsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CatsService.html":{"url":"injectables/CatsService.html","title":"injectable - CatsService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  CatsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/cats/cats.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findOne\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(catRepo: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/cats/cats.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        catRepo\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            create\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    create(cat: CreateCatDto)\n                \n            \n\n\n            \n                \n                    Defined in src/cats/cats.service.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    cat\n                                    \n                                                CreateCatDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findAll\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll()\n                \n            \n\n\n            \n                \n                    Defined in src/cats/cats.service.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findOne\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/cats/cats.service.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common'\nimport { InjectRepository } from '@nestjs/typeorm'\n\nimport { Cat } from 'src/cats/entities/cat.entity'\nimport { Repository } from 'typeorm'\n\nimport { CreateCatDto } from './dto/cat.dto'\n\n@Injectable()\nexport class CatsService {\n    constructor(@InjectRepository(Cat) private readonly catRepo: Repository) {}\n\n    async create(cat: CreateCatDto) {\n        const newCat = new Cat()\n\n        newCat.name = cat.name\n        newCat.age = cat.age\n        newCat.breed = cat.breed\n\n        return this.catRepo.save(newCat)\n    }\n\n    async findAll(): Promise {\n        return this.catRepo.find()\n    }\n\n    async findOne(id: number): Promise {\n        return this.catRepo.findOne(id)\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateCatDto.html":{"url":"classes/CreateCatDto.html","title":"class - CreateCatDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateCatDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/cats/dto/cat.dto.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            ICat\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                age\n                            \n                            \n                                    Readonly\n                                breed\n                            \n                            \n                                    Readonly\n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            age\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'The age of the Cat', example: 1})@IsInt()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/cats/dto/cat.dto.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            breed\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'The breed of the Cat', example: 'Maine Coon'})@IsString()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/cats/dto/cat.dto.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'The name of the Cat', example: 'Kitty'})@IsString()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/cats/dto/cat.dto.ts:9\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger'\n\nimport { IsInt, IsString } from 'class-validator'\nimport { ICat } from 'src/cats/interfaces/cat.interface'\n\nexport class CreateCatDto implements ICat {\n    @ApiProperty({ description: 'The name of the Cat', example: 'Kitty' })\n    @IsString()\n    readonly name: string\n\n    @ApiProperty({ description: 'The age of the Cat', example: 1 })\n    @IsInt()\n    readonly age: number\n\n    @ApiProperty({ description: 'The breed of the Cat', example: 'Maine Coon' })\n    @IsString()\n    readonly breed: string\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CronModule.html":{"url":"modules/CronModule.html","title":"module - CronModule","body":"\n                   \n\n\n\n\n    Modules\n    CronModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_CronModule\n\n\n\ncluster_CronModule_providers\n\n\n\n\nCronService\n\nCronService\n\n\n\nCronModule\n\nCronModule\n\nCronModule -->\n\nCronService->CronModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/cron/cron.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            CronService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common'\nimport { CronService } from './cron.service'\n\n@Module({\n    providers: [CronService],\n})\nexport class CronModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CronService.html":{"url":"injectables/CronService.html","title":"injectable - CronService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  CronService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/cron/cron.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                handleCron\n                            \n                            \n                                handleInterval\n                            \n                            \n                                handleTimeout\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            handleCron\n                        \n                        \n                    \n                \n            \n            \n                \nhandleCron()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Cron('60 * * * * *')\n                \n            \n\n            \n                \n                    Defined in src/cron/cron.service.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            handleInterval\n                        \n                        \n                    \n                \n            \n            \n                \nhandleInterval()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Interval(100000)\n                \n            \n\n            \n                \n                    Defined in src/cron/cron.service.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            handleTimeout\n                        \n                        \n                    \n                \n            \n            \n                \nhandleTimeout()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Timeout(50000)\n                \n            \n\n            \n                \n                    Defined in src/cron/cron.service.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            logger\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Logger(CronService.name)\n                        \n                    \n                        \n                            \n                                    Defined in src/cron/cron.service.ts:6\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable, Logger } from '@nestjs/common'\nimport { Cron, Interval, Timeout } from '@nestjs/schedule'\n\n@Injectable()\nexport class CronService {\n    private readonly logger = new Logger(CronService.name)\n\n    @Cron('60 * * * * *')\n    handleCron() {\n        this.logger.debug('Called when the second is 60')\n    }\n\n    @Interval(100000)\n    handleInterval() {\n        this.logger.debug('Called every 100 seconds')\n    }\n\n    @Timeout(50000)\n    handleTimeout() {\n        this.logger.debug('Called once after 50 seconds')\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/HealthController.html":{"url":"controllers/HealthController.html","title":"controller - HealthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  HealthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/health/health.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                health\n            \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                check\n                            \n                            \n                                onApplicationShutdown\n                            \n                            \n                                onModuleInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            check\n                        \n                        \n                    \n                \n            \n            \n                \ncheck()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@HealthCheck()\n                \n            \n\n            \n                \n                    Defined in src/health/health.controller.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onApplicationShutdown\n                        \n                        \n                    \n                \n            \n            \n                \nonApplicationShutdown(signal?: string)\n                \n            \n\n\n            \n                \n                    Defined in src/health/health.controller.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    signal\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onModuleInit\n                        \n                        \n                    \n                \n            \n            \n                \nonModuleInit()\n                \n            \n\n\n            \n                \n                    Defined in src/health/health.controller.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        /* eslint-disable no-use-before-define,@typescript-eslint/no-use-before-define */\nimport { Controller, Get, OnApplicationShutdown, OnModuleInit } from '@nestjs/common'\nimport { ConfigService } from '@nestjs/config'\nimport { ApiTags } from '@nestjs/swagger'\nimport { DNSHealthIndicator, HealthCheck, HealthCheckService } from '@nestjs/terminus'\n\n@ApiTags(HealthController.name)\n@Controller('health')\nexport class HealthController implements OnModuleInit, OnApplicationShutdown {\n    constructor(\n        private health: HealthCheckService,\n        private dns: DNSHealthIndicator,\n        private config: ConfigService,\n    ) {}\n\n    @Get()\n    @HealthCheck()\n    check() {\n        return this.health.check([\n            () => this.dns.pingCheck('nestjs-docs', 'https://docs.nestjs.com'),\n        ])\n    }\n\n    /*\n     * When the application receives a termination signal it will call any registered\n     * onModuleDestroy(), beforeApplicationShutdown(), then onApplicationShutdown() methods\n     * (in the sequence described above) with the corresponding signal as the first parameter.\n     * If a registered function awaits an asynchronous call (returns a promise), Nest will not\n     * continue in the sequence until the promise is resolved or rejected.\n     */\n\n    onModuleInit(): void {\n        console.log(`ModuleInit - HealthController has been initialized.`, {\n            config: this.config.get('NODE_ENV'),\n        })\n    }\n\n    onApplicationShutdown(signal?: string): void {\n        console.log(\n            `ApplicationShutdown - HealthController has been shutdown with ${signal} signal`,\n        )\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ICat.html":{"url":"interfaces/ICat.html","title":"interface - ICat","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ICat\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/cats/interfaces/cat.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        age\n                                \n                                \n                                        breed\n                                \n                                \n                                        name\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        age\n                                    \n                                \n                                \n                                    \n                                        age:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        breed\n                                    \n                                \n                                \n                                    \n                                        breed:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface ICat {\n    readonly name: string\n    readonly age: number\n    readonly breed: string\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/app.controller.ts\n            \n            controller\n            AppController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/app.module.ts\n            \n            variable\n            ConfigModuleOptions\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/app.module.ts\n            \n            variable\n            LoggerModuleOptions\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/app.module.ts\n            \n            variable\n            TypeOrmModuleOptions\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/app.service.ts\n            \n            injectable\n            AppService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/cats/cats.controller.ts\n            \n            controller\n            CatsController\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/cats/cats.service.ts\n            \n            injectable\n            CatsService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/cats/dto/cat.dto.ts\n            \n            class\n            CreateCatDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/cats/entities/cat.entity.ts\n            \n            class\n            Cat\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/cats/interfaces/cat.interface.ts\n            \n            interface\n            ICat\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/cron/cron.service.ts\n            \n            injectable\n            CronService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/health/health.controller.ts\n            \n            controller\n            HealthController\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            createSwagger\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @hapi/joi : ^17.1.1\n        \n            @nestjs/common : ^7.5.1\n        \n            @nestjs/config : ^0.6.1\n        \n            @nestjs/core : ^7.5.1\n        \n            @nestjs/passport : ^7.1.3\n        \n            @nestjs/platform-express : ^7.5.1\n        \n            @nestjs/schedule : ^0.4.1\n        \n            @nestjs/swagger : ^4.7.5\n        \n            @nestjs/terminus : ^7.0.1\n        \n            @nestjs/typeorm : ^7.1.5\n        \n            class-transformer : ^0.3.1\n        \n            class-validator : ^0.12.2\n        \n            dotenv : ^8.2.0\n        \n            dotenv-expand : ^5.1.0\n        \n            express-rate-limit : ^5.2.3\n        \n            helmet : ^4.2.0\n        \n            joi : ^17.3.0\n        \n            nestjs-pino : ^1.3.0\n        \n            passport : ^0.4.1\n        \n            passport-local : ^1.0.0\n        \n            pino-pretty : ^4.3.0\n        \n            reflect-metadata : ^0.1.13\n        \n            rimraf : ^3.0.2\n        \n            rxjs : ^6.6.3\n        \n            sqlite3 : ^5.0.0\n        \n            swagger-ui-express : ^4.1.5\n        \n            typeorm : ^0.2.29\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                        \n                            createSwagger   (src/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            bootstrap\n                        \n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createSwagger\n                        \n                        \n                    \n                \n            \n            \n                \ncreateSwagger(app)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    app\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n  A progressive Node.js framework for building efficient and scalable server-side applications.\n    \n\n\n\n\n\n\n\n\n  \n    \n  \n\n  \n\nDescription\nNest framework TypeScript starter repository.\nInstallation\n$ npm installRunning the app\n# development\n$ npm run start\n\n# watch mode\n$ npm run start:dev\n\n# production mode\n$ npm run start:prodTest\n# unit tests\n$ npm run test\n\n# e2e tests\n$ npm run test:e2e\n\n# test coverage\n$ npm run test:covSupport\nNest is an MIT-licensed open source project. It can grow thanks to the sponsors and support by the amazing backers. If you'd like to join them, please read more here.\nStay in touch\n\nAuthor - Kamil Myśliwiec\nWebsite - https://nestjs.com\nTwitter - @nestframework\n\nLicense\nNest is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CatsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CronModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_CatsModule\n\n\n\ncluster_CatsModule_providers\n\n\n\ncluster_CronModule\n\n\n\ncluster_CronModule_providers\n\n\n\n\nCatsModule\n\nCatsModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nCatsModule->AppModule\n\n\n\n\n\nCronModule\n\nCronModule\n\nAppModule -->\n\nCronModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nCatsService\n\nCatsService\n\nCatsModule -->\n\nCatsService->CatsModule\n\n\n\n\n\nCronService\n\nCronService\n\nCronModule -->\n\nCronService->CronModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        3 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    3 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    3 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    2 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    1 Interface\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ConfigModuleOptions   (src/.../app.module.ts)\n                        \n                        \n                            LoggerModuleOptions   (src/.../app.module.ts)\n                        \n                        \n                            TypeOrmModuleOptions   (src/.../app.module.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/app.module.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            ConfigModuleOptions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    isGlobal: true,\n    validationOptions: {\n        allowUnknown: true,\n        abortEarly: true,\n    },\n    validationSchema: Joi.object({\n        PORT: Joi.number().default(3000),\n        NODE_ENV: Joi.string()\n            .valid('development', 'production', 'test', 'provision')\n            .default('development'),\n    }),\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            LoggerModuleOptions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    pinoHttp: {\n        prettyPrint: {\n            colorize: true,\n            levelFirst: false, // Display the log level name before the logged date and time\n            translateTime: true,\n            messageFormat: '{msg}', // 'pid', 'msg', 'level'\n            ignore: 'pid,hostname',\n            errorLikeObjectKeys: ['err', 'error', 'errors'],\n        },\n    },\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            TypeOrmModuleOptions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    entities: [`${__dirname}/../**/*.entity.{ts,js}`],\n    type: 'sqlite' as const,\n    database: 'database.sqlite',\n    synchronize: true,\n    logging: true,\n}\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
