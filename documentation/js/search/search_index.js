var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/interfaces/APIResponse.html",[0,0.21,1,1.083]],["body/interfaces/APIResponse.html",[0,0.411,1,1.91,2,0.656,3,0.123,4,0.095,5,0.109,6,0.782,7,0.137,8,0.681,9,1.637,10,1.428,11,1.366,12,1.529,13,1.559,14,1.629,15,1.629,16,1.629,17,1.366,18,1.226,19,0.413,20,0.017,21,1.077,22,1.629,23,0.949,24,1.629,25,0.151,26,0.314,27,0.336,28,0.009,29,1.121,30,1.121,31,1.121,32,1.121,33,1.121,34,1.121,35,1.121,36,1.251,37,1.984,38,0.817,39,1.458,40,0.854,41,0.854,42,0.854,43,0.854,44,0.854,45,0.854,46,0.782,47,0.854,48,0.854,49,0.817,50,1.885,51,0.854,52,0.748,53,1.279,54,0.854,55,1.404,56,0.854,57,0.854,58,0.854,59,0.854,60,0.854,61,0.854,62,0.854,63,0.854,64,0.854,65,0.854,66,0.854,67,1.533,68,1.279,69,0.854,70,0.854,71,0.854,72,1.467,73,0.854,74,0.854,75,1.279,76,0.854,77,0.854,78,0.854,79,0.854,80,0.854,81,1.559,82,0.854,83,1.171,84,1.171,85,0.854,86,0.854,87,0.854,88,0.854,89,0.854,90,0.854,91,0.854,92,0.854,93,0.854,94,1.279,95,0.854,96,0.854,97,0.854,98,0.782,99,0.854,100,0.854,101,1.559,102,0.854,103,0.854,104,0.854,105,0.854,106,0.854,107,0.854,108,0.854,109,0.854,110,0.716,111,0.854,112,0.854,113,0.854,114,0.854,115,0.314,116,0.854,117,0.854,118,0.854,119,0.854,120,0.854,121,0.782,122,1.404,123,0.854,124,0.854,125,0.854,126,1.171,127,1.171,128,0.854,129,0.854,130,0.854,131,0.656,132,0.009,133,0.006]],["title/controllers/AppController.html",[134,2.16,135,2.683]],["body/controllers/AppController.html",[3,0.234,4,0.182,5,0.208,7,0.262,20,0.017,23,0.775,25,0.38,26,0.6,27,0.234,28,0.011,132,0.014,133,0.011,134,2.978,135,4.508,136,3.18,137,4.527,138,2.174,139,6.196,140,2.504,141,1.253,142,5.247,143,1.705,144,2.149,145,2.149,146,3.698,147,4.052,148,5.247,149,4.052,150,2.504,151,4.181,152,4.527,153,5.247,154,5.247,155,0.5,156,2.645,157,3.415,158,3.698,159,2.978,160,1.783,161,5.247]],["title/interfaces/AppLaunchAction.html",[0,0.21,46,1.083]],["body/interfaces/AppLaunchAction.html",[0,0.413,1,1.895,2,0.689,3,0.129,4,0.1,5,0.114,6,0.822,7,0.144,8,0.706,9,1.065,10,0.753,11,0.72,12,1.113,13,0.822,14,0.858,15,0.858,16,0.858,17,0.72,18,1.22,19,0.379,20,0.017,21,0.631,22,1.269,23,0.952,24,1.269,25,0.159,26,0.33,27,0.338,28,0.009,29,1.163,30,1.163,31,1.163,32,1.163,33,1.163,34,1.163,35,1.163,36,1.282,37,2.016,38,0.858,39,1.481,40,0.897,41,0.897,42,0.897,43,0.897,44,0.897,45,0.897,46,1.215,47,1.744,48,1.744,49,1.669,50,1.926,51,1.744,52,0.786,53,1.327,54,0.897,55,1.445,56,0.897,57,0.897,58,0.897,59,0.897,60,0.897,61,0.897,62,0.897,63,0.897,64,0.897,65,0.897,66,0.897,67,1.579,68,1.327,69,0.897,70,0.897,71,0.897,72,1.51,73,0.897,74,0.897,75,1.327,76,0.897,77,0.897,78,0.897,79,0.897,80,0.897,81,1.597,82,0.897,83,1.215,84,1.215,85,0.897,86,0.897,87,0.897,88,0.897,89,0.897,90,0.897,91,0.897,92,0.897,93,0.897,94,1.327,95,0.897,96,0.897,97,0.897,98,0.822,99,0.897,100,0.897,101,1.597,102,0.897,103,0.897,104,0.897,105,0.897,106,0.897,107,0.897,108,0.897,109,0.897,110,0.753,111,0.897,112,0.897,113,0.897,114,0.897,115,0.33,116,0.897,117,0.897,118,0.897,119,0.897,120,0.897,121,0.822,122,1.445,123,0.897,124,0.897,125,0.897,126,1.215,127,1.215,128,0.897,129,0.897,130,0.897,131,0.689,132,0.009,133,0.006]],["title/modules/AppModule.html",[162,1.918,163,2.683]],["body/modules/AppModule.html",[3,0.151,4,0.117,5,0.134,9,0.841,19,0.289,20,0.017,23,0.672,25,0.407,26,0.386,27,0.151,28,0.007,38,1.003,115,0.386,132,0.01,133,0.007,135,3.909,136,2.894,138,1.623,141,1.14,143,1.802,144,1.381,145,1.381,151,4.008,152,2.909,155,0.321,156,1.699,157,2.194,162,3.041,163,5.236,164,1.913,165,1.913,166,2.376,167,2.376,168,2.043,169,3.148,170,2.194,171,2.909,172,2.909,173,2.909,174,4.304,175,4.304,176,4.304,177,3.366,178,2.376,179,2.376,180,2.604,181,3.909,182,4.776,183,5.205,184,4.121,185,3.371,186,1.199,187,4.918,188,2.194,189,4.252,190,5.494,191,3.371,192,1.699,193,2.796,194,3.361,195,3.371,196,2.909,197,2.909,198,2.909,199,2.376,200,2.043,201,3.371,202,2.604,203,3.371,204,2.604,205,3.371,206,2.909,207,4.776,208,2.604,209,3.371,210,2.909,211,2.604,212,3.371,213,3.371,214,3.371,215,3.371,216,3.371,217,1.526,218,2.604,219,2.909,220,2.961,221,2.909,222,2.909,223,2.909,224,2.909,225,2.909,226,2.909,227,2.909,228,2.909,229,2.909,230,2.376,231,2.909,232,2.604,233,2.604,234,2.909,235,2.909,236,2.194,237,5.205,238,2.909,239,2.909,240,3.371,241,3.371,242,3.371,243,3.371,244,3.371,245,2.194,246,3.371,247,3.371,248,3.371,249,2.909,250,1.526,251,3.371,252,3.371,253,3.371,254,4.776,255,4.776,256,3.371,257,3.371,258,4.776,259,3.371,260,3.371,261,3.371,262,2.909,263,3.371,264,2.376,265,3.371,266,3.371,267,3.366,268,2.909,269,3.371,270,3.371,271,3.371,272,3.371,273,3.371,274,2.909,275,3.371,276,2.909,277,2.909]],["title/injectables/AppService.html",[151,2.307,278,1.237]],["body/injectables/AppService.html",[3,0.252,4,0.195,5,0.223,7,0.281,20,0.017,23,0.808,25,0.31,26,0.644,27,0.252,28,0.012,132,0.015,133,0.012,138,2.267,139,6.343,141,1.344,143,1.829,151,4.043,155,0.536,160,1.913,278,2.168,279,3.005,280,4.856,281,5.628,282,5.628,283,5.628]],["title/classes/BaseEntity.html",[155,0.362,284,2.94]],["body/classes/BaseEntity.html",[3,0.168,4,0.13,5,0.149,7,0.188,8,0.853,9,1.781,18,0.997,19,0.414,20,0.017,25,0.284,27,0.168,28,0.008,36,1.178,110,1.785,132,0.011,133,0.008,140,3.163,141,1.634,150,1.796,155,0.358,156,2.965,220,3.811,245,3.829,284,3.983,285,1.541,286,6.048,287,3.247,288,3.762,289,3.762,290,2.852,291,3.762,292,6.629,293,4.887,294,6.159,295,6.159,296,3.763,297,5.513,298,7.139,299,3.763,300,3.763,301,3.763,302,2.927,303,1.704,304,3.983,305,3.763,306,3.763,307,5.156,308,4.149,309,3.763,310,3.763,311,3.763,312,3.763,313,3.763,314,3.565,315,6.629,316,3.763,317,4.456,318,5.156,319,5.156,320,5.156,321,5.156,322,5.156,323,2.136,324,2.652,325,3.763,326,2.136,327,5.459]],["title/classes/BaseModel.html",[155,0.362,328,2.477]],["body/classes/BaseModel.html",[3,0.191,4,0.148,5,0.169,7,0.213,8,0.928,9,1.771,19,0.379,20,0.017,25,0.367,27,0.191,28,0.009,36,1.281,110,1.937,131,1.019,132,0.012,133,0.009,140,2.991,141,1.496,150,2.036,155,0.406,200,3.4,285,1.748,288,3.557,289,3.557,291,3.557,293,4.841,294,6.126,295,6.126,308,3.798,317,4.334,327,6.126,328,3.651,329,3.681,330,4.267,331,4.267,332,4.267,333,2.777,334,5.61,335,6.916,336,4.267,337,4.267,338,4.267,339,3.557,340,5.61,341,3.295,342,3.007,343,5.61,344,3.681,345,4.267,346,2.995,347,4.267,348,4.267,349,4.267,350,4.08,351,5.61,352,4.267,353,4.267]],["title/interfaces/Comment.html",[0,0.21,122,1.083]],["body/interfaces/Comment.html",[0,0.413,1,1.891,2,0.685,3,0.128,4,0.099,5,0.114,6,0.816,7,0.143,8,0.703,10,0.748,11,0.715,12,1.107,13,0.816,14,0.853,15,0.853,16,0.853,17,0.715,18,1.223,19,0.392,20,0.017,21,0.626,22,1.263,23,0.953,24,1.263,25,0.158,26,0.328,27,0.337,28,0.009,29,1.157,30,1.157,31,1.157,32,1.157,33,1.157,34,1.157,35,1.157,36,1.278,37,2.012,38,0.853,39,1.478,40,0.891,41,0.891,42,0.891,43,0.891,44,0.891,45,0.891,46,0.816,47,0.891,48,0.891,49,0.853,50,1.899,51,0.891,52,0.781,53,1.32,54,0.891,55,1.44,56,0.891,57,0.891,58,0.891,59,0.891,60,0.891,61,0.891,62,0.891,63,0.891,64,0.891,65,0.891,66,0.891,67,1.572,68,1.32,69,0.891,70,0.891,71,0.891,72,1.504,73,0.891,74,0.891,75,1.32,76,0.891,77,0.891,78,0.891,79,0.891,80,0.891,81,1.592,82,0.891,83,1.209,84,1.209,85,0.891,86,0.891,87,0.891,88,0.891,89,0.891,90,0.891,91,0.891,92,0.891,93,0.891,94,1.856,95,0.891,96,0.891,97,0.891,98,0.816,99,0.891,100,0.891,101,1.592,102,0.891,103,0.891,104,0.891,105,0.891,106,0.891,107,0.891,108,0.891,109,0.891,110,0.748,111,0.891,112,0.891,113,0.891,114,0.891,115,0.328,116,0.891,117,0.891,118,0.891,119,0.891,120,0.891,121,0.816,122,1.842,123,1.739,124,1.739,125,1.739,126,1.209,127,1.209,128,0.891,129,0.891,130,0.891,131,0.685,132,0.009,133,0.006]],["title/interfaces/Comments.html",[0,0.21,126,1.083]],["body/interfaces/Comments.html",[0,0.415,1,1.912,2,0.711,3,0.133,4,0.103,5,0.118,6,0.847,7,0.148,8,0.722,10,0.776,11,0.743,12,1.138,13,0.847,14,0.886,15,0.886,16,0.886,17,0.743,18,1.219,19,0.313,20,0.017,21,0.65,22,1.299,23,0.95,24,1.299,25,0.164,26,0.341,27,0.339,28,0.01,29,1.19,30,1.19,31,1.19,32,1.19,33,1.19,34,1.19,35,1.19,36,1.301,37,2.036,38,0.886,39,1.496,40,0.926,41,0.926,42,0.926,43,0.926,44,0.926,45,0.926,46,0.847,47,0.926,48,0.926,49,0.886,50,1.911,51,0.926,52,0.811,53,1.357,54,0.926,55,1.472,56,0.926,57,0.926,58,0.926,59,0.926,60,0.926,61,0.926,62,0.926,63,0.926,64,0.926,65,0.926,66,0.926,67,1.607,68,1.357,69,0.926,70,0.926,71,0.926,72,1.538,73,0.926,74,0.926,75,1.357,76,0.926,77,0.926,78,0.926,79,0.926,80,0.926,81,1.621,82,0.926,83,1.243,84,1.243,85,0.926,86,0.926,87,0.926,88,0.926,89,0.926,90,0.926,91,0.926,92,0.926,93,0.926,94,1.357,95,0.926,96,0.926,97,0.926,98,0.847,99,0.926,100,0.926,101,1.621,102,0.926,103,0.926,104,0.926,105,0.926,106,0.926,107,0.926,108,0.926,109,0.926,110,0.776,111,0.926,112,0.926,113,0.926,114,0.926,115,0.341,116,0.926,117,0.926,118,0.926,119,0.926,120,0.926,121,0.847,122,1.726,123,0.926,124,0.926,125,0.926,126,1.804,127,1.243,128,0.926,129,0.926,130,0.926,131,0.711,132,0.01,133,0.006]],["title/classes/CreateTagsDto.html",[155,0.362,354,2.307]],["body/classes/CreateTagsDto.html",[3,0.223,4,0.173,5,0.198,7,0.249,8,1.026,18,0.786,19,0.302,20,0.017,23,0.818,25,0.372,27,0.302,28,0.011,115,0.808,131,1.192,132,0.013,133,0.011,140,2.383,141,1.192,150,2.383,155,0.691,245,4.594,285,2.045,288,2.834,289,2.834,290,2.149,291,2.834,293,3.857,308,3.026,317,4.594,354,3.759,355,3.519,356,4.993,357,4.993,358,5.452,359,3.857,360,3.25,361,4.791,362,3.25,363,4.791,364,3.519,365,3.25,366,3.25,367,3.857,368,3.857,369,3.857,370,3.026,371,3.857,372,3.026]],["title/modules/CronModule.html",[162,1.918,174,2.477]],["body/modules/CronModule.html",[3,0.244,4,0.189,5,0.216,20,0.017,25,0.361,26,0.625,27,0.244,28,0.012,132,0.014,133,0.012,155,0.52,162,3.537,164,3.098,165,3.098,166,3.847,167,3.847,168,3.308,169,3.983,170,3.553,174,4.919,177,4.616,178,3.847,179,3.847,373,4.709,374,4.709,375,4.919,376,5.458,377,5.458]],["title/injectables/CronService.html",[278,1.237,375,2.477]],["body/injectables/CronService.html",[3,0.171,4,0.132,5,0.151,7,0.19,8,0.861,9,0.952,10,1.659,18,0.933,19,0.358,20,0.017,25,0.287,26,0.437,27,0.171,28,0.008,115,0.437,132,0.011,133,0.008,138,1.769,140,2.827,141,1.71,143,2.068,155,0.363,156,2.987,160,1.769,186,1.357,189,4.176,204,2.947,220,2.038,278,1.692,279,2.038,302,3.612,303,2.881,314,3.857,326,2.166,350,3.389,375,3.389,378,3.292,379,6.662,380,5.206,381,5.206,382,5.747,383,6.365,384,5.491,385,5.491,386,5.206,387,6.365,388,5.747,389,5.206,390,5.925,391,6.365,392,5.925,393,5.206,394,6.365,395,5.925,396,5.925,397,5.206,398,3.816,399,5.925,400,5.206,401,3.816,402,3.816,403,3.816,404,3.816,405,3.816,406,4.576,407,3.816,408,5.206,409,3.816,410,5.206,411,3.816,412,5.206,413,3.816,414,3.816,415,5.206,416,3.816,417,3.816,418,3.292,419,3.292,420,2.69,421,3.816]],["title/classes/CrudController.html",[155,0.362,422,2.94]],["body/classes/CrudController.html",[3,0.166,4,0.128,5,0.147,7,0.185,9,1.7,19,0.412,20,0.017,23,0.874,25,0.363,26,0.424,27,0.166,28,0.008,115,0.78,132,0.011,133,0.008,138,1.734,140,3.146,141,1.627,143,2.142,155,0.353,158,2.612,159,2.103,160,2.241,186,2.424,188,2.412,285,1.518,290,2.932,323,2.103,324,2.612,346,4.045,422,3.94,423,3.197,424,3.321,425,3.798,426,3.321,427,5.102,428,3.798,429,2.412,430,4.402,431,3.705,432,3.81,433,3.705,434,3.596,435,2.612,436,4.431,437,4.374,438,5.034,439,3.705,440,4.802,441,2.862,442,4.402,443,3.705,444,3.596,445,4.431,446,3.705,447,2.862,448,3.705,449,4.402,450,3.705,451,2.612,452,4.431,453,4.402,454,3.705,455,3.197,456,4.402,457,2.245,458,2.612,459,2.612,460,3.197,461,2.862,462,3.197,463,3.705,464,3.705,465,3.705,466,3.705,467,3.705,468,3.197,469,3.705,470,3.705,471,3.705,472,3.705,473,3.705]],["title/classes/CrudService.html",[155,0.362,434,2.683]],["body/classes/CrudService.html",[3,0.102,4,0.079,5,0.091,7,0.114,8,0.592,9,1.588,10,0.933,12,0.933,17,0.893,18,1.089,19,0.394,20,0.018,23,0.846,25,0.341,26,0.262,27,0.102,28,0.005,115,0.728,132,0.008,133,0.005,138,1.216,141,1.584,143,2.069,144,2.04,145,2.04,146,1.614,155,0.218,159,1.299,160,2.323,186,2.264,187,1.768,188,3.242,192,2.51,193,2.22,194,2.67,199,1.614,200,3.858,217,2.446,220,1.222,250,1.62,285,0.938,290,2.465,297,1.768,304,1.768,323,1.299,324,1.614,346,3.948,350,3.517,384,3.087,424,2.329,425,2.329,426,2.329,428,2.867,429,1.49,430,3.087,432,2.67,434,2.522,435,2.522,436,3.51,437,4.309,440,1.614,444,2.522,447,2.764,451,1.614,452,3.51,457,1.388,458,1.614,459,1.614,460,1.975,474,1.975,475,4.405,476,5.728,477,2.867,478,4.405,479,4.405,480,1.975,481,4.424,482,3.579,483,2.764,484,4.623,485,2.29,486,2.29,487,3.579,488,5.278,489,2.29,490,2.29,491,2.29,492,3.579,493,3.579,494,3.579,495,3.579,496,2.29,497,1.975,498,5.278,499,2.29,500,2.29,501,2.29,502,3.579,503,2.29,504,4.98,505,2.29,506,2.29,507,3.579,508,2.29,509,1.975,510,3.087,511,1.154,512,2.29,513,1.388,514,2.29,515,3.579,516,1.975,517,3.579,518,2.522,519,2.29,520,4.662,521,4.365,522,2.29,523,2.764,524,4.297,525,2.51,526,1.768,527,2.29,528,4.98,529,3.579,530,3.579,531,4.405,532,2.29,533,2.29,534,2.29,535,2.29,536,2.29,537,4.297,538,3.579,539,3.579,540,1.092,541,2.29,542,2.29,543,2.29,544,2.29,545,1.975,546,2.764,547,2.764,548,3.579,549,2.29,550,1.975,551,1.975,552,2.29,553,2.29,554,2.29,555,2.29,556,2.29]],["title/injectables/DBHelper.html",[278,1.237,557,2.94]],["body/injectables/DBHelper.html",[3,0.198,4,0.154,5,0.176,7,0.221,8,0.951,9,1.593,19,0.409,20,0.017,21,0.968,23,0.897,25,0.352,26,0.507,27,0.198,28,0.01,115,0.731,132,0.013,133,0.01,138,1.955,141,1.613,143,1.869,155,0.422,158,3.124,160,1.955,186,2.271,200,2.686,217,3.059,278,1.869,279,2.366,314,2.686,323,2.516,346,3.409,429,2.885,480,3.824,481,5.541,557,4.442,558,3.824,559,6.384,560,6.756,561,5.751,562,5.751,563,5.751,564,4.432,565,5.751,566,6.756,567,4.432,568,5.751,569,3.824,570,3.824,571,4.432,572,4.432,573,4.432,574,4.432,575,6.384,576,5.751,577,4.432,578,4.432,579,4.432,580,4.432,581,4.432,582,4.432,583,4.432,584,4.432]],["title/modules/DatabaseModule.html",[162,1.918,175,2.477]],["body/modules/DatabaseModule.html",[3,0.211,4,0.164,5,0.187,20,0.017,25,0.381,26,0.54,27,0.211,28,0.01,132,0.013,133,0.01,144,2.453,145,2.453,155,0.45,160,2.036,162,3.019,164,2.68,169,3.926,170,3.073,175,3.898,192,3.019,193,2.38,199,3.328,200,2.861,217,3.132,220,3.198,333,3.898,339,2.68,346,2.521,525,2.38,540,2.253,585,3.647,586,4.074,587,4.074,588,5.167,589,5.032,590,5.167,591,3.399,592,4.722,593,3.647,594,4.626,595,4.074,596,5.167,597,4.074,598,4.074,599,4.074,600,4.074,601,4.074,602,3.647,603,4.074,604,4.074,605,4.074,606,4.074,607,4.074,608,4.074]],["title/injectables/ExcludeNullUndefinedInterceptor.html",[278,1.237,609,2.94]],["body/injectables/ExcludeNullUndefinedInterceptor.html",[3,0.212,4,0.164,5,0.188,7,0.236,9,1.183,19,0.287,20,0.017,23,0.728,25,0.363,26,0.543,27,0.212,28,0.01,36,1.372,115,0.543,132,0.013,133,0.01,138,2.041,141,1.132,143,1.541,144,1.943,145,1.943,155,0.452,160,2.041,186,1.687,192,2.39,193,2.39,194,2.874,250,2.147,278,1.952,279,2.532,303,3.137,326,2.691,511,2.39,513,2.874,525,2.39,540,3.306,609,4.639,610,5.182,611,5.182,612,4.091,613,6.006,614,5.182,615,5.182,616,6.006,617,6.006,618,4.233,619,4.639,620,4.199,621,4.884,622,4.742,623,2.874,624,3.741,625,4.233,626,3.909,627,4.091]],["title/interfaces/Follower.html",[0,0.21,127,1.083]],["body/interfaces/Follower.html",[0,0.413,1,1.891,2,0.685,3,0.128,4,0.099,5,0.114,6,0.816,7,0.143,8,0.703,10,0.748,11,0.715,12,1.107,13,0.816,14,0.853,15,0.853,16,0.853,17,0.715,18,1.219,19,0.392,20,0.017,21,0.626,22,1.263,23,0.952,24,1.263,25,0.158,26,0.328,27,0.337,28,0.009,29,1.157,30,1.157,31,1.157,32,1.157,33,1.157,34,1.157,35,1.157,36,1.278,37,2.012,38,0.853,39,1.478,40,0.891,41,0.891,42,0.891,43,0.891,44,0.891,45,0.891,46,0.816,47,0.891,48,0.891,49,0.853,50,1.944,51,0.891,52,0.781,53,1.32,54,0.891,55,1.44,56,0.891,57,0.891,58,0.891,59,0.891,60,0.891,61,0.891,62,0.891,63,0.891,64,0.891,65,0.891,66,0.891,67,1.944,68,1.32,69,0.891,70,0.891,71,0.891,72,1.86,73,0.891,74,0.891,75,1.32,76,0.891,77,0.891,78,0.891,79,0.891,80,0.891,81,1.592,82,0.891,83,1.209,84,1.209,85,0.891,86,0.891,87,0.891,88,0.891,89,0.891,90,0.891,91,0.891,92,0.891,93,0.891,94,1.32,95,0.891,96,0.891,97,0.891,98,0.816,99,0.891,100,0.891,101,1.592,102,0.891,103,0.891,104,0.891,105,0.891,106,0.891,107,0.891,108,0.891,109,0.891,110,0.748,111,0.891,112,0.891,113,0.891,114,0.891,115,0.328,116,0.891,117,0.891,118,0.891,119,0.891,120,0.891,121,0.816,122,1.44,123,0.891,124,0.891,125,0.891,126,1.209,127,1.44,128,1.739,129,1.739,130,1.739,131,0.685,132,0.009,133,0.006]],["title/interfaces/Following.html",[0,0.21,55,1.083]],["body/interfaces/Following.html",[0,0.416,1,1.918,2,0.719,3,0.135,4,0.104,5,0.119,6,0.857,10,0.785,11,0.751,12,1.148,13,0.857,14,0.895,15,0.895,16,0.895,17,0.751,18,1.22,19,0.266,20,0.017,21,0.658,22,1.309,23,0.951,24,1.309,25,0.166,26,0.345,27,0.339,28,0.01,29,1.199,30,1.199,31,1.199,32,1.199,33,1.199,34,1.199,35,1.199,36,1.308,37,2.043,38,0.895,39,1.501,40,0.936,41,0.936,42,0.936,43,0.936,44,0.936,45,0.936,46,0.857,47,0.936,48,0.936,49,0.895,50,1.915,51,0.936,52,0.82,53,1.368,54,0.936,55,1.63,56,0.936,57,0.936,58,0.936,59,0.936,60,0.936,61,0.936,62,0.936,63,0.936,64,0.936,65,0.936,66,0.936,67,1.618,68,1.368,69,0.936,70,0.936,71,0.936,72,1.548,73,0.936,74,0.936,75,1.368,76,0.936,77,0.936,78,0.936,79,0.936,80,0.936,81,1.63,82,0.936,83,1.253,84,1.253,85,0.936,86,0.936,87,0.936,88,0.936,89,0.936,90,0.936,91,0.936,92,0.936,93,0.936,94,1.368,95,0.936,96,0.936,97,0.936,98,0.857,99,0.936,100,0.936,101,1.63,102,0.936,103,0.936,104,0.936,105,0.936,106,0.936,107,0.936,108,0.936,109,0.936,110,0.785,111,0.936,112,0.936,113,0.936,114,0.936,115,0.345,116,0.936,117,0.936,118,0.936,119,0.936,120,0.936,121,0.857,122,1.481,123,0.936,124,0.936,125,0.936,126,1.253,127,1.481,128,0.936,129,0.936,130,0.936,131,1.051,132,0.01,133,0.007]],["title/interfaces/GetAppLaunchData.html",[0,0.21,29,1.037]],["body/interfaces/GetAppLaunchData.html",[0,0.415,1,1.981,2,0.708,3,0.133,4,0.103,5,0.118,6,0.844,7,0.148,8,0.72,10,0.773,11,0.74,12,1.135,13,0.844,14,0.882,15,0.882,16,0.882,17,0.74,18,1.218,19,0.312,20,0.017,21,0.648,22,1.295,23,0.95,24,1.295,25,0.163,26,0.339,27,0.339,28,0.009,29,1.405,30,1.186,31,1.186,32,1.186,33,1.186,34,1.186,35,1.186,36,1.298,37,2.164,38,0.882,39,1.59,40,0.922,41,0.922,42,0.922,43,0.922,44,0.922,45,0.922,46,0.844,47,0.922,48,0.922,49,0.882,50,1.91,51,0.922,52,0.808,53,1.353,54,0.922,55,1.468,56,0.922,57,0.922,58,0.922,59,0.922,60,0.922,61,0.922,62,0.922,63,0.922,64,0.922,65,0.922,66,0.922,67,1.604,68,1.353,69,0.922,70,0.922,71,0.922,72,1.534,73,0.922,74,0.922,75,1.353,76,0.922,77,0.922,78,0.922,79,0.922,80,0.922,81,1.618,82,0.922,83,1.239,84,1.239,85,0.922,86,0.922,87,0.922,88,0.922,89,0.922,90,0.922,91,0.922,92,0.922,93,0.922,94,1.353,95,0.922,96,0.922,97,0.922,98,0.844,99,0.922,100,0.922,101,1.618,102,0.922,103,0.922,104,0.922,105,0.922,106,0.922,107,0.922,108,0.922,109,0.922,110,0.773,111,0.922,112,0.922,113,0.922,114,0.922,115,0.339,116,0.922,117,0.922,118,0.922,119,0.922,120,0.922,121,0.844,122,1.468,123,0.922,124,0.922,125,0.922,126,1.239,127,1.239,128,0.922,129,0.922,130,0.922,131,0.708,132,0.009,133,0.006]],["title/interfaces/GetComments.html",[0,0.21,32,1.037]],["body/interfaces/GetComments.html",[0,0.415,1,1.981,2,0.708,3,0.133,4,0.103,5,0.118,6,0.844,7,0.148,8,0.72,10,0.773,11,0.74,12,1.135,13,0.844,14,0.882,15,0.882,16,0.882,17,0.74,18,1.218,19,0.312,20,0.017,21,0.648,22,1.295,23,0.95,24,1.295,25,0.163,26,0.339,27,0.339,28,0.009,29,1.186,30,1.186,31,1.186,32,1.405,33,1.186,34,1.186,35,1.186,36,1.298,37,2.164,38,0.882,39,1.59,40,0.922,41,0.922,42,0.922,43,0.922,44,0.922,45,0.922,46,0.844,47,0.922,48,0.922,49,0.882,50,1.91,51,0.922,52,0.808,53,1.353,54,0.922,55,1.468,56,0.922,57,0.922,58,0.922,59,0.922,60,0.922,61,0.922,62,0.922,63,0.922,64,0.922,65,0.922,66,0.922,67,1.604,68,1.353,69,0.922,70,0.922,71,0.922,72,1.534,73,0.922,74,0.922,75,1.353,76,0.922,77,0.922,78,0.922,79,0.922,80,0.922,81,1.618,82,0.922,83,1.239,84,1.239,85,0.922,86,0.922,87,0.922,88,0.922,89,0.922,90,0.922,91,0.922,92,0.922,93,0.922,94,1.353,95,0.922,96,0.922,97,0.922,98,0.844,99,0.922,100,0.922,101,1.618,102,0.922,103,0.922,104,0.922,105,0.922,106,0.922,107,0.922,108,0.922,109,0.922,110,0.773,111,0.922,112,0.922,113,0.922,114,0.922,115,0.339,116,0.922,117,0.922,118,0.922,119,0.922,120,0.922,121,0.844,122,1.468,123,0.922,124,0.922,125,0.922,126,1.239,127,1.239,128,0.922,129,0.922,130,0.922,131,0.708,132,0.009,133,0.006]],["title/interfaces/GetFollowers.html",[0,0.21,34,1.037]],["body/interfaces/GetFollowers.html",[0,0.415,1,1.981,2,0.708,3,0.133,4,0.103,5,0.118,6,0.844,7,0.148,8,0.72,10,0.773,11,0.74,12,1.135,13,0.844,14,0.882,15,0.882,16,0.882,17,0.74,18,1.218,19,0.312,20,0.017,21,0.648,22,1.295,23,0.95,24,1.295,25,0.163,26,0.339,27,0.339,28,0.009,29,1.186,30,1.186,31,1.186,32,1.186,33,1.186,34,1.405,35,1.186,36,1.298,37,2.164,38,0.882,39,1.59,40,0.922,41,0.922,42,0.922,43,0.922,44,0.922,45,0.922,46,0.844,47,0.922,48,0.922,49,0.882,50,1.91,51,0.922,52,0.808,53,1.353,54,0.922,55,1.468,56,0.922,57,0.922,58,0.922,59,0.922,60,0.922,61,0.922,62,0.922,63,0.922,64,0.922,65,0.922,66,0.922,67,1.604,68,1.353,69,0.922,70,0.922,71,0.922,72,1.534,73,0.922,74,0.922,75,1.353,76,0.922,77,0.922,78,0.922,79,0.922,80,0.922,81,1.618,82,0.922,83,1.239,84,1.239,85,0.922,86,0.922,87,0.922,88,0.922,89,0.922,90,0.922,91,0.922,92,0.922,93,0.922,94,1.353,95,0.922,96,0.922,97,0.922,98,0.844,99,0.922,100,0.922,101,1.618,102,0.922,103,0.922,104,0.922,105,0.922,106,0.922,107,0.922,108,0.922,109,0.922,110,0.773,111,0.922,112,0.922,113,0.922,114,0.922,115,0.339,116,0.922,117,0.922,118,0.922,119,0.922,120,0.922,121,0.844,122,1.468,123,0.922,124,0.922,125,0.922,126,1.239,127,1.239,128,0.922,129,0.922,130,0.922,131,0.708,132,0.009,133,0.006]],["title/interfaces/GetFollowing.html",[0,0.21,35,1.037]],["body/interfaces/GetFollowing.html",[0,0.415,1,1.981,2,0.708,3,0.133,4,0.103,5,0.118,6,0.844,7,0.148,8,0.72,10,0.773,11,0.74,12,1.135,13,0.844,14,0.882,15,0.882,16,0.882,17,0.74,18,1.218,19,0.312,20,0.017,21,0.648,22,1.295,23,0.95,24,1.295,25,0.163,26,0.339,27,0.339,28,0.009,29,1.186,30,1.186,31,1.186,32,1.186,33,1.186,34,1.186,35,1.405,36,1.298,37,2.164,38,0.882,39,1.59,40,0.922,41,0.922,42,0.922,43,0.922,44,0.922,45,0.922,46,0.844,47,0.922,48,0.922,49,0.882,50,1.91,51,0.922,52,0.808,53,1.353,54,0.922,55,1.468,56,0.922,57,0.922,58,0.922,59,0.922,60,0.922,61,0.922,62,0.922,63,0.922,64,0.922,65,0.922,66,0.922,67,1.604,68,1.353,69,0.922,70,0.922,71,0.922,72,1.534,73,0.922,74,0.922,75,1.353,76,0.922,77,0.922,78,0.922,79,0.922,80,0.922,81,1.618,82,0.922,83,1.239,84,1.239,85,0.922,86,0.922,87,0.922,88,0.922,89,0.922,90,0.922,91,0.922,92,0.922,93,0.922,94,1.353,95,0.922,96,0.922,97,0.922,98,0.844,99,0.922,100,0.922,101,1.618,102,0.922,103,0.922,104,0.922,105,0.922,106,0.922,107,0.922,108,0.922,109,0.922,110,0.773,111,0.922,112,0.922,113,0.922,114,0.922,115,0.339,116,0.922,117,0.922,118,0.922,119,0.922,120,0.922,121,0.844,122,1.468,123,0.922,124,0.922,125,0.922,126,1.239,127,1.239,128,0.922,129,0.922,130,0.922,131,0.708,132,0.009,133,0.006]],["title/classes/GetManyDto.html",[155,0.362,628,2.94]],["body/classes/GetManyDto.html",[3,0.224,4,0.173,5,0.198,7,0.25,8,1.028,10,1.761,11,1.685,14,2.009,15,2.009,17,1.685,18,1.195,19,0.439,20,0.017,21,1.357,25,0.276,27,0.224,28,0.011,132,0.014,133,0.011,141,1.734,155,0.477,250,2.812,285,2.05,302,2.841,628,4.798,629,6.387,630,6.476,631,4.318,632,6.756,633,5.005,634,5.005,635,5.005,636,5.005,637,5.005,638,5.005,639,5.005]],["title/interfaces/GetRescueList.html",[0,0.21,33,1.037]],["body/interfaces/GetRescueList.html",[0,0.415,1,1.981,2,0.708,3,0.133,4,0.103,5,0.118,6,0.844,7,0.148,8,0.72,10,0.773,11,0.74,12,1.135,13,0.844,14,0.882,15,0.882,16,0.882,17,0.74,18,1.218,19,0.312,20,0.017,21,0.648,22,1.295,23,0.95,24,1.295,25,0.163,26,0.339,27,0.339,28,0.009,29,1.186,30,1.186,31,1.186,32,1.186,33,1.405,34,1.186,35,1.186,36,1.298,37,2.164,38,0.882,39,1.59,40,0.922,41,0.922,42,0.922,43,0.922,44,0.922,45,0.922,46,0.844,47,0.922,48,0.922,49,0.882,50,1.91,51,0.922,52,0.808,53,1.353,54,0.922,55,1.468,56,0.922,57,0.922,58,0.922,59,0.922,60,0.922,61,0.922,62,0.922,63,0.922,64,0.922,65,0.922,66,0.922,67,1.604,68,1.353,69,0.922,70,0.922,71,0.922,72,1.534,73,0.922,74,0.922,75,1.353,76,0.922,77,0.922,78,0.922,79,0.922,80,0.922,81,1.618,82,0.922,83,1.239,84,1.239,85,0.922,86,0.922,87,0.922,88,0.922,89,0.922,90,0.922,91,0.922,92,0.922,93,0.922,94,1.353,95,0.922,96,0.922,97,0.922,98,0.844,99,0.922,100,0.922,101,1.618,102,0.922,103,0.922,104,0.922,105,0.922,106,0.922,107,0.922,108,0.922,109,0.922,110,0.773,111,0.922,112,0.922,113,0.922,114,0.922,115,0.339,116,0.922,117,0.922,118,0.922,119,0.922,120,0.922,121,0.844,122,1.468,123,0.922,124,0.922,125,0.922,126,1.239,127,1.239,128,0.922,129,0.922,130,0.922,131,0.708,132,0.009,133,0.006]],["title/classes/GetTagsResponseDto.html",[155,0.362,372,2.307]],["body/classes/GetTagsResponseDto.html",[3,0.206,4,0.16,5,0.183,7,0.23,8,0.976,18,0.929,19,0.429,20,0.017,23,0.788,25,0.359,27,0.291,28,0.01,115,0.785,131,1.101,132,0.013,133,0.01,140,3.382,141,1.692,150,2.2,155,0.675,245,4.464,285,1.889,288,3.692,289,3.692,290,2.799,291,3.692,308,2.794,317,4.719,354,2.794,355,3.25,358,5.297,359,3.561,360,3.001,361,4.557,362,3.001,363,4.557,364,3.25,365,3.001,366,3.001,367,3.561,368,3.561,369,3.561,370,2.794,371,3.561,372,3.575,640,6.506,641,4.611,642,4.611,643,4.611,644,4.611,645,4.611]],["title/interfaces/GetUserPosts.html",[0,0.21,31,1.037]],["body/interfaces/GetUserPosts.html",[0,0.415,1,1.981,2,0.708,3,0.133,4,0.103,5,0.118,6,0.844,7,0.148,8,0.72,10,0.773,11,0.74,12,1.135,13,0.844,14,0.882,15,0.882,16,0.882,17,0.74,18,1.218,19,0.312,20,0.017,21,0.648,22,1.295,23,0.95,24,1.295,25,0.163,26,0.339,27,0.339,28,0.009,29,1.186,30,1.186,31,1.405,32,1.186,33,1.186,34,1.186,35,1.186,36,1.298,37,2.164,38,0.882,39,1.59,40,0.922,41,0.922,42,0.922,43,0.922,44,0.922,45,0.922,46,0.844,47,0.922,48,0.922,49,0.882,50,1.91,51,0.922,52,0.808,53,1.353,54,0.922,55,1.468,56,0.922,57,0.922,58,0.922,59,0.922,60,0.922,61,0.922,62,0.922,63,0.922,64,0.922,65,0.922,66,0.922,67,1.604,68,1.353,69,0.922,70,0.922,71,0.922,72,1.534,73,0.922,74,0.922,75,1.353,76,0.922,77,0.922,78,0.922,79,0.922,80,0.922,81,1.618,82,0.922,83,1.239,84,1.239,85,0.922,86,0.922,87,0.922,88,0.922,89,0.922,90,0.922,91,0.922,92,0.922,93,0.922,94,1.353,95,0.922,96,0.922,97,0.922,98,0.844,99,0.922,100,0.922,101,1.618,102,0.922,103,0.922,104,0.922,105,0.922,106,0.922,107,0.922,108,0.922,109,0.922,110,0.773,111,0.922,112,0.922,113,0.922,114,0.922,115,0.339,116,0.922,117,0.922,118,0.922,119,0.922,120,0.922,121,0.844,122,1.468,123,0.922,124,0.922,125,0.922,126,1.239,127,1.239,128,0.922,129,0.922,130,0.922,131,0.708,132,0.009,133,0.006]],["title/interfaces/GetUserProfile.html",[0,0.21,30,1.037]],["body/interfaces/GetUserProfile.html",[0,0.415,1,1.981,2,0.708,3,0.133,4,0.103,5,0.118,6,0.844,7,0.148,8,0.72,10,0.773,11,0.74,12,1.135,13,0.844,14,0.882,15,0.882,16,0.882,17,0.74,18,1.218,19,0.312,20,0.017,21,0.648,22,1.295,23,0.95,24,1.295,25,0.163,26,0.339,27,0.339,28,0.009,29,1.186,30,1.405,31,1.186,32,1.186,33,1.186,34,1.186,35,1.186,36,1.298,37,2.164,38,0.882,39,1.59,40,0.922,41,0.922,42,0.922,43,0.922,44,0.922,45,0.922,46,0.844,47,0.922,48,0.922,49,0.882,50,1.91,51,0.922,52,0.808,53,1.353,54,0.922,55,1.468,56,0.922,57,0.922,58,0.922,59,0.922,60,0.922,61,0.922,62,0.922,63,0.922,64,0.922,65,0.922,66,0.922,67,1.604,68,1.353,69,0.922,70,0.922,71,0.922,72,1.534,73,0.922,74,0.922,75,1.353,76,0.922,77,0.922,78,0.922,79,0.922,80,0.922,81,1.618,82,0.922,83,1.239,84,1.239,85,0.922,86,0.922,87,0.922,88,0.922,89,0.922,90,0.922,91,0.922,92,0.922,93,0.922,94,1.353,95,0.922,96,0.922,97,0.922,98,0.844,99,0.922,100,0.922,101,1.618,102,0.922,103,0.922,104,0.922,105,0.922,106,0.922,107,0.922,108,0.922,109,0.922,110,0.773,111,0.922,112,0.922,113,0.922,114,0.922,115,0.339,116,0.922,117,0.922,118,0.922,119,0.922,120,0.922,121,0.844,122,1.468,123,0.922,124,0.922,125,0.922,126,1.239,127,1.239,128,0.922,129,0.922,130,0.922,131,0.708,132,0.009,133,0.006]],["title/controllers/HealthController.html",[134,2.16,181,2.683]],["body/controllers/HealthController.html",[3,0.15,4,0.116,5,0.133,7,0.275,9,1.378,11,0.835,19,0.202,20,0.017,23,0.669,25,0.394,26,0.383,27,0.15,28,0.007,39,1.261,115,0.632,132,0.01,133,0.007,134,1.899,136,2.027,138,1.614,140,2.635,141,1.575,143,2.144,144,1.37,145,1.37,146,2.358,147,2.584,149,2.584,150,1.596,155,0.319,156,1.686,157,3.092,160,2.043,181,4.237,183,5.187,184,4.098,186,1.964,187,4.266,188,2.177,189,4.237,190,5.691,193,2.784,194,3.347,196,2.886,197,2.886,198,2.886,202,2.584,208,2.584,211,2.584,217,1.514,249,4.098,250,1.514,274,2.886,276,2.886,277,2.886,314,2.878,382,4.098,418,2.886,419,4.098,429,2.177,457,2.027,511,1.686,513,2.027,537,4.098,546,2.584,547,2.584,550,2.886,551,2.886,624,3.135,626,2.177,646,2.886,647,6.012,648,4.75,649,6.35,650,3.345,651,3.345,652,4.75,653,3.345,654,5.523,655,3.345,656,3.345,657,3.345,658,3.345,659,4.75,660,3.345,661,2.886,662,3.345,663,3.345,664,3.345,665,4.75,666,4.75,667,4.75,668,4.75,669,3.345,670,3.345,671,5.523,672,4.098,673,3.345,674,3.345,675,4.765,676,3.345,677,4.75,678,3.345,679,3.345,680,3.345,681,3.345,682,3.345,683,3.345,684,3.345,685,3.345,686,3.345,687,3.345,688,3.345,689,3.345,690,3.345,691,3.345,692,3.345,693,3.345,694,3.345,695,4.75,696,3.345,697,3.345,698,3.345,699,4.75,700,4.75,701,3.345,702,3.345,703,3.345,704,3.345,705,3.345,706,3.345,707,3.345,708,3.345]],["title/interfaces/ICrudService.html",[0,0.21,432,2.307]],["body/interfaces/ICrudService.html",[0,0.295,2,0.949,3,0.178,4,0.138,5,0.158,7,0.198,9,1.736,10,1.396,17,1.336,18,1.064,19,0.421,20,0.017,21,0.869,23,0.733,25,0.295,27,0.239,28,0.009,115,0.796,132,0.012,133,0.009,138,1.82,141,1.661,143,2.262,159,3.039,186,2.476,188,3.939,290,2.786,323,2.257,420,2.803,424,3.485,425,3.485,426,3.485,428,3.485,432,3.244,435,3.773,436,4.563,437,4.559,440,4.563,441,4.135,444,3.773,447,4.135,451,3.773,452,4.563,458,2.803,459,2.803,477,3.939,483,4.135,484,5.493,488,5,497,3.431,498,5.493,518,4.265,709,3.072,710,3.977,711,3.977,712,3.977,713,3.977,714,3.977,715,3.977,716,3.431,717,3.431,718,2.41,719,3.072,720,3.072,721,2.803]],["title/interfaces/IPagination.html",[0,0.21,718,2.307]],["body/interfaces/IPagination.html",[0,0.333,2,1.145,3,0.214,4,0.166,5,0.19,7,0.239,8,1,17,1.827,18,1.154,19,0.366,20,0.017,21,1.447,23,0.581,25,0.333,27,0.27,28,0.01,132,0.013,133,0.01,159,3.432,290,2.063,323,2.721,420,4.263,432,2.906,435,3.379,436,4.263,437,4.216,440,3.379,441,3.703,444,3.379,451,3.379,452,4.263,458,3.379,459,3.379,477,3.121,483,3.703,484,5.117,488,4.671,498,5.117,518,5.302,709,3.703,716,4.137,717,4.137,718,3.665,719,4.671,720,4.671,721,4.263]],["title/interfaces/IPagination-1.html",[0,0.175,314,1.926,718,1.926]],["body/interfaces/IPagination-1.html",[0,0.354,2,1.262,3,0.236,4,0.183,5,0.209,7,0.264,8,1.063,17,1.871,18,1.162,19,0.389,20,0.017,21,1.512,27,0.236,28,0.011,132,0.014,133,0.011,159,3.646,326,3,420,4.528,461,4.082,518,5.4,718,3.893,719,4.961,720,4.961,721,4.528,722,4.56,723,4.56]],["title/interfaces/ITryRequest.html",[0,0.21,724,2.94]],["body/interfaces/ITryRequest.html",[0,0.306,2,1.326,3,0.248,4,0.192,5,0.22,7,0.277,8,1.095,9,1.826,12,1.908,19,0.428,20,0.017,27,0.248,28,0.012,50,1.843,132,0.014,133,0.012,521,5.16,523,5.654,724,5.113,725,4.794,726,4.794]],["title/classes/PaginationParams.html",[155,0.362,445,2.683]],["body/classes/PaginationParams.html",[3,0.182,4,0.141,5,0.162,7,0.204,8,0.901,9,1.359,18,1.104,19,0.396,20,0.017,21,0.892,23,0.66,25,0.338,27,0.243,28,0.009,132,0.012,133,0.009,140,2.926,141,1.464,150,1.948,155,0.584,159,4.18,285,1.672,302,3.092,303,2.466,324,4.611,326,2.317,360,2.657,364,4.611,366,2.657,406,5.265,445,3.84,461,5.416,462,4.7,614,3.522,723,4.7,727,5.053,728,3.153,729,5.448,730,6.132,731,6.132,732,6.132,733,4.082,734,4.082,735,5.448,736,5.448,737,6.543,738,4.082,739,4.082,740,5.448,741,6.543,742,5.448,743,4.082,744,4.082,745,4.7,746,6.543,747,4.082,748,4.082,749,4.082,750,4.7,751,4.7,752,4.7,753,3.522,754,5.448,755,4.082,756,5.448,757,5.448,758,4.082,759,4.082]],["title/interfaces/PostType.html",[0,0.21,81,1.083]],["body/interfaces/PostType.html",[0,0.415,1,1.907,2,0.704,3,0.132,4,0.102,5,0.117,6,0.839,7,0.147,8,0.717,10,0.769,11,0.736,12,1.131,13,0.839,14,0.877,15,0.877,16,0.877,17,0.736,18,1.222,19,0.343,20,0.017,21,0.644,22,1.29,23,0.952,24,1.29,25,0.163,26,0.337,27,0.339,28,0.009,29,1.181,30,1.181,31,1.181,32,1.181,33,1.181,34,1.181,35,1.181,36,1.295,37,2.03,38,0.877,39,1.492,40,0.917,41,0.917,42,0.917,43,0.917,44,0.917,45,0.917,46,0.839,47,0.917,48,0.917,49,0.877,50,1.908,51,0.917,52,0.803,53,1.348,54,0.917,55,1.464,56,0.917,57,0.917,58,0.917,59,0.917,60,0.917,61,0.917,62,0.917,63,0.917,64,0.917,65,0.917,66,0.917,67,1.599,68,1.348,69,0.917,70,0.917,71,0.917,72,1.529,73,0.917,74,0.917,75,1.348,76,0.917,77,0.917,78,0.917,79,0.917,80,0.917,81,1.907,82,1.762,83,1.234,84,1.234,85,0.917,86,0.917,87,0.917,88,0.917,89,0.917,90,0.917,91,0.917,92,0.917,93,0.917,94,1.348,95,0.917,96,0.917,97,0.917,98,0.839,99,0.917,100,0.917,101,1.614,102,0.917,103,0.917,104,0.917,105,0.917,106,0.917,107,0.917,108,0.917,109,0.917,110,0.769,111,0.917,112,0.917,113,0.917,114,0.917,115,0.337,116,0.917,117,0.917,118,0.917,119,0.917,120,0.917,121,0.839,122,1.464,123,0.917,124,0.917,125,0.917,126,1.234,127,1.234,128,0.917,129,0.917,130,0.917,131,0.704,132,0.009,133,0.006]],["title/interfaces/PostedByUser.html",[0,0.21,83,1.083]],["body/interfaces/PostedByUser.html",[0,0.413,1,1.886,2,0.678,3,0.127,4,0.098,5,0.113,6,0.809,7,0.142,8,0.698,10,0.741,11,0.709,12,1.1,13,0.809,14,0.845,15,0.845,16,0.845,17,0.709,18,1.218,19,0.401,20,0.017,21,0.621,22,1.255,23,0.953,24,1.255,25,0.157,26,0.325,27,0.337,28,0.009,29,1.149,30,1.149,31,1.149,32,1.149,33,1.149,34,1.149,35,1.149,36,1.272,37,2.006,38,0.845,39,1.474,40,0.883,41,0.883,42,0.883,43,0.883,44,0.883,45,0.883,46,0.809,47,0.883,48,0.883,49,0.845,50,1.942,51,0.883,52,0.774,53,1.849,54,0.883,55,1.774,56,0.883,57,0.883,58,0.883,59,0.883,60,0.883,61,0.883,62,0.883,63,0.883,64,0.883,65,0.883,66,0.883,67,1.937,68,1.849,69,0.883,70,0.883,71,0.883,72,1.854,73,0.883,74,0.883,75,1.849,76,0.883,77,0.883,78,0.883,79,0.883,80,0.883,81,1.585,82,0.883,83,1.432,84,1.201,85,0.883,86,0.883,87,0.883,88,0.883,89,0.883,90,0.883,91,0.883,92,0.883,93,0.883,94,1.311,95,0.883,96,0.883,97,0.883,98,0.809,99,0.883,100,0.883,101,1.585,102,0.883,103,0.883,104,0.883,105,0.883,106,0.883,107,0.883,108,0.883,109,0.883,110,0.741,111,0.883,112,0.883,113,0.883,114,0.883,115,0.325,116,0.883,117,0.883,118,0.883,119,0.883,120,0.883,121,0.809,122,1.432,123,0.883,124,0.883,125,0.883,126,1.201,127,1.201,128,0.883,129,0.883,130,0.883,131,0.678,132,0.009,133,0.006]],["title/classes/QueryFailedFilter.html",[155,0.362,760,2.94]],["body/classes/QueryFailedFilter.html",[3,0.179,4,0.139,5,0.159,7,0.2,9,1.001,13,1.533,16,1.194,19,0.243,20,0.017,24,1.194,25,0.297,26,0.459,27,0.179,28,0.009,39,0.917,115,0.696,132,0.012,133,0.009,138,1.831,141,0.958,143,1.304,144,1.644,145,1.644,155,0.382,157,2.613,165,2.278,186,1.428,189,2.829,217,3.068,236,3.506,250,2.439,285,1.644,339,2.278,341,3.1,342,2.829,350,2.613,524,5.848,525,2.023,540,1.915,546,5.506,547,5.506,760,4.161,761,4.648,762,3.463,763,6.08,764,4.014,765,6.778,766,6.778,767,6.778,768,6.778,769,6.778,770,6.778,771,6.08,772,6.498,773,4.014,774,6.08,775,4.014,776,4.014,777,4.014,778,4.014,779,4.014,780,4.014,781,2.829,782,4.014,783,4.648,784,4.014,785,5.387,786,4.648,787,5.246,788,6.08,789,5.387,790,4.161,791,3.463,792,4.014,793,4.014,794,4.014]],["title/guards/RequestGuard.html",[795,2.683,796,2.94]],["body/guards/RequestGuard.html",[3,0.197,4,0.153,5,0.175,7,0.22,9,1.431,19,0.347,20,0.017,23,0.695,25,0.316,26,0.505,27,0.197,28,0.01,50,1.495,115,0.656,132,0.012,133,0.01,138,1.95,141,1.369,143,1.864,144,1.808,145,1.808,155,0.42,160,2.166,186,2.04,217,2.885,220,2.357,250,1.998,264,3.111,267,4.043,278,1.864,303,2.885,457,2.675,511,2.225,521,3.111,525,2.225,540,2.106,620,4.088,623,3.476,624,3.616,781,4.928,795,3.111,796,4.43,797,3.409,798,3.808,799,5.736,800,6.032,801,5.736,802,4.414,803,4.949,804,4.949,805,3.808,806,4.414,807,4.414,808,6.372,809,4.414,810,4.414,811,4.414,812,4.414,813,4.414,814,4.414,815,4.414,816,5.736,817,4.414,818,3.409,819,4.414,820,4.414]],["title/interfaces/RescueLists.html",[0,0.21,121,1.083]],["body/interfaces/RescueLists.html",[0,0.415,1,1.912,2,0.711,3,0.133,4,0.103,5,0.118,6,0.847,7,0.148,8,0.722,10,0.776,11,0.743,12,1.138,13,0.847,14,0.886,15,0.886,16,0.886,17,0.743,18,1.219,19,0.313,20,0.017,21,0.65,22,1.299,23,0.95,24,1.299,25,0.164,26,0.341,27,0.339,28,0.01,29,1.19,30,1.19,31,1.19,32,1.19,33,1.19,34,1.19,35,1.19,36,1.301,37,2.036,38,0.886,39,1.496,40,0.926,41,0.926,42,0.926,43,0.926,44,0.926,45,0.926,46,0.847,47,0.926,48,0.926,49,0.886,50,1.911,51,0.926,52,0.811,53,1.357,54,0.926,55,1.472,56,0.926,57,0.926,58,0.926,59,0.926,60,0.926,61,0.926,62,0.926,63,0.926,64,0.926,65,0.926,66,0.926,67,1.607,68,1.357,69,0.926,70,0.926,71,0.926,72,1.538,73,0.926,74,0.926,75,1.357,76,0.926,77,0.926,78,0.926,79,0.926,80,0.926,81,1.621,82,0.926,83,1.243,84,1.243,85,0.926,86,0.926,87,0.926,88,0.926,89,0.926,90,0.926,91,0.926,92,0.926,93,0.926,94,1.357,95,0.926,96,0.926,97,0.926,98,0.847,99,0.926,100,0.926,101,1.951,102,0.926,103,0.926,104,0.926,105,0.926,106,0.926,107,0.926,108,0.926,109,0.926,110,0.776,111,0.926,112,0.926,113,0.926,114,0.926,115,0.341,116,0.926,117,0.926,118,0.926,119,0.926,120,0.926,121,1.243,122,1.472,123,0.926,124,0.926,125,0.926,126,1.243,127,1.243,128,0.926,129,0.926,130,0.926,131,0.711,132,0.01,133,0.006]],["title/interfaces/Rescues.html",[0,0.21,101,1.083]],["body/interfaces/Rescues.html",[0,0.409,1,1.85,2,0.636,3,0.119,4,0.092,5,0.106,6,0.758,7,0.133,8,0.665,10,0.694,11,0.664,12,1.048,13,0.758,14,0.792,15,0.792,16,0.792,17,0.664,18,1.219,19,0.441,20,0.017,21,0.582,22,1.195,23,0.956,24,1.195,25,0.147,26,0.305,27,0.334,28,0.009,29,1.095,30,1.095,31,1.095,32,1.095,33,1.095,34,1.095,35,1.095,36,1.231,37,1.963,38,0.792,39,1.443,40,0.828,41,0.828,42,0.828,43,0.828,44,0.828,45,0.828,46,0.758,47,0.828,48,0.828,49,0.792,50,1.875,51,0.828,52,0.725,53,1.249,54,0.828,55,1.378,56,0.828,57,0.828,58,0.828,59,0.828,60,0.828,61,0.828,62,0.828,63,0.828,64,0.828,65,0.828,66,0.828,67,1.505,68,1.249,69,0.828,70,0.828,71,0.828,72,1.44,73,0.828,74,0.828,75,1.249,76,0.828,77,0.828,78,0.828,79,0.828,80,0.828,81,1.534,82,0.828,83,1.144,84,1.144,85,0.828,86,0.828,87,0.828,88,0.828,89,0.828,90,0.828,91,0.828,92,0.828,93,0.828,94,1.249,95,0.828,96,0.828,97,0.828,98,0.758,99,0.828,100,0.828,101,1.647,102,1.676,103,1.676,104,1.676,105,1.676,106,1.676,107,1.676,108,1.676,109,1.676,110,1.262,111,1.676,112,1.676,113,1.676,114,0.828,115,0.305,116,0.828,117,0.828,118,0.828,119,1.676,120,1.676,121,0.758,122,1.378,123,0.828,124,0.828,125,0.828,126,1.144,127,1.144,128,0.828,129,0.828,130,0.828,131,0.636,132,0.009,133,0.006,821,4.019]],["title/interfaces/Response.html",[0,0.21,39,0.869]],["body/interfaces/Response.html",[0,0.282,2,1.223,3,0.229,4,0.177,5,0.203,7,0.255,8,1.042,11,1.824,19,0.31,20,0.017,21,1.491,25,0.376,26,0.586,27,0.282,28,0.011,39,1.439,132,0.014,133,0.011,144,2.098,145,2.098,155,0.488,160,1.741,192,2.582,193,2.582,194,3.105,250,2.319,278,2.048,511,2.582,513,3.105,525,2.582,526,3.957,540,3.007,618,3.611,620,3.819,621,4.442,623,3.105,624,3.577,625,4.442,626,3.335,822,3.957,823,3.611,824,4.42]],["title/guards/ResponseGuard.html",[795,2.683,825,2.94]],["body/guards/ResponseGuard.html",[3,0.173,4,0.134,5,0.153,7,0.193,9,1.31,11,1.669,12,1.554,13,1.821,19,0.318,20,0.017,23,0.636,25,0.289,26,0.442,27,0.173,28,0.008,36,0.882,39,1.528,50,1.369,115,0.601,132,0.011,133,0.008,138,1.784,141,1.253,143,1.706,144,1.583,145,1.583,155,0.368,160,2.345,186,1.867,192,1.947,193,1.947,217,1.749,220,3.184,250,1.749,264,4.509,267,3.7,278,1.706,297,2.984,342,4.203,457,2.341,511,1.947,521,4.203,523,5.167,525,1.947,540,1.844,620,3.877,623,3.182,624,3.384,783,5.953,791,5.145,797,2.984,800,5.772,803,4.529,804,4.529,805,3.333,818,2.984,825,4.055,826,3.333,827,5.25,828,5.25,829,3.864,830,3.864,831,3.864,832,3.864,833,5.25,834,5.963,835,3.864,836,3.864,837,3.864,838,3.864,839,3.864,840,3.864,841,2.723,842,3.864,843,3.864,844,5.25,845,3.864,846,3.864,847,5.25,848,5.25,849,3.864,850,3.864,851,3.864,852,3.864,853,3.864]],["title/classes/Tag.html",[155,0.362,591,2.16]],["body/classes/Tag.html",[3,0.18,4,0.14,5,0.16,7,0.201,8,1.077,9,1.744,18,0.852,19,0.461,20,0.017,23,0.823,25,0.336,27,0.18,28,0.009,36,1.235,110,1.822,115,0.817,131,1.291,132,0.012,133,0.009,141,1.704,155,0.384,156,3.523,230,3.811,236,2.627,285,1.653,288,3.461,289,3.461,290,2.922,291,3.461,302,3.069,303,2.448,328,2.627,333,4.239,339,3.069,362,3.519,365,3.519,591,3.069,790,4.709,841,3.811,854,3.482,855,6.03,856,4.297,857,4.036,858,4.036,859,4.036,860,4.665,861,4.665,862,4.665,863,4.036,864,4.036,865,4.176,866,4.036,867,4.036,868,3.482,869,3.482,870,3.482,871,3.482,872,3.482,873,3.482,874,3.482,875,3.482,876,3.482,877,3.482,878,3.482,879,3.482,880,3.482]],["title/controllers/TagsController.html",[134,2.16,881,2.683]],["body/controllers/TagsController.html",[3,0.144,4,0.111,5,0.127,7,0.16,9,1.559,18,1.1,19,0.378,20,0.017,25,0.359,26,0.367,27,0.144,28,0.007,115,0.715,132,0.01,133,0.007,134,1.823,136,1.946,138,1.568,140,2.982,141,1.492,143,2.031,144,1.316,145,1.316,146,2.264,147,2.48,149,2.48,150,1.532,155,0.306,156,1.619,157,2.09,158,2.264,160,2.125,186,2.223,193,1.619,217,2.83,290,3.12,346,3.962,354,3.576,370,3.576,372,1.946,424,3.003,425,3.841,426,3.003,428,3.514,437,4.296,438,4.658,442,3.98,449,3.98,453,3.98,455,2.771,456,4.658,457,1.946,468,4.658,477,3.514,545,2.771,586,2.771,587,2.771,591,1.823,661,2.771,865,2.48,881,3.252,882,2.771,883,3.212,884,6.44,885,5.918,886,3.212,887,7.421,888,3.212,889,3.212,890,3.212,891,3.212,892,3.212,893,3.212,894,3.212,895,3.212,896,5.902,897,3.212,898,3.212,899,3.212,900,3.212,901,5.902,902,2.48,903,2.771,904,3.212,905,2.796,906,2.771,907,3.212,908,3.212,909,3.212,910,3.212,911,6.116,912,3.212,913,3.212,914,3.212,915,3.212,916,3.212,917,3.212]],["title/modules/TagsModule.html",[162,1.918,176,2.477]],["body/modules/TagsModule.html",[3,0.231,4,0.179,5,0.205,20,0.017,25,0.378,26,0.592,27,0.231,28,0.011,132,0.014,133,0.011,136,3.842,155,0.492,162,3.455,164,2.935,165,2.935,166,3.645,167,3.645,168,3.134,169,3.891,170,4.462,176,4.919,177,4.468,178,3.645,179,3.645,588,5.469,881,4.832,905,4.732,906,4.462,918,4.462,919,4.462,920,4.462,921,5.172,922,5.172]],["title/injectables/TagsService.html",[278,1.237,905,2.307]],["body/injectables/TagsService.html",[3,0.164,4,0.127,5,0.146,7,0.183,9,1.695,18,1.135,19,0.411,20,0.017,25,0.345,26,0.42,27,0.164,28,0.008,115,0.778,132,0.011,133,0.008,138,1.724,141,1.622,143,2.136,155,0.35,160,2.31,186,2.417,262,4.376,278,1.648,279,1.962,290,3.138,339,2.085,346,4.06,424,3.781,425,3.781,426,3.781,428,3.781,429,2.391,437,3.983,477,3.781,569,3.17,591,2.085,675,3.17,884,6.56,885,5.863,902,2.838,903,3.17,905,3.074,911,5.671,923,3.17,924,3.674,925,6.796,926,3.674,927,3.674,928,6.796,929,3.674,930,3.674,931,3.674,932,3.674,933,3.674,934,3.674,935,3.674,936,3.674,937,3.674,938,3.674,939,3.674,940,3.674,941,3.674,942,3.674,943,3.674,944,5.072,945,4.376,946,3.674,947,5.072,948,3.674,949,3.674,950,3.674,951,3.674]],["title/injectables/TimeoutInterceptor.html",[278,1.237,952,2.94]],["body/injectables/TimeoutInterceptor.html",[3,0.21,4,0.163,5,0.186,7,0.234,9,1.173,19,0.284,20,0.017,25,0.362,26,0.538,27,0.21,28,0.01,115,0.538,132,0.013,133,0.01,138,2.03,141,1.122,143,1.528,155,0.448,160,2.231,186,1.672,250,2.128,278,1.941,279,2.51,303,2.704,326,2.668,388,6.151,510,4.056,511,2.37,513,2.849,540,3.132,618,4.21,619,4.613,620,4.186,621,4.868,623,2.849,624,3.726,625,4.21,627,4.056,781,4.627,818,3.631,952,4.613,953,4.056,954,5.973,955,5.973,956,5.973,957,5.973,958,5.153,959,4.701,960,5.973,961,5.973,962,4.701,963,4.701,964,4.701,965,4.701,966,4.701,967,4.701,968,4.701,969,4.701,970,4.701]],["title/injectables/TransformInterceptor.html",[278,1.237,823,2.683]],["body/injectables/TransformInterceptor.html",[0,0.274,3,0.222,4,0.172,5,0.197,7,0.248,9,1.24,11,1.543,19,0.301,20,0.017,21,1.086,25,0.371,26,0.569,27,0.276,28,0.011,39,1.135,115,0.569,132,0.013,133,0.011,138,2.102,141,1.187,143,1.615,144,2.036,145,2.036,155,0.473,160,1.689,186,1.768,192,2.505,193,2.505,194,3.012,250,2.25,278,2.01,279,2.654,511,2.505,513,3.012,525,2.505,526,3.839,540,3.363,618,4.747,619,3.839,620,4.271,621,4.967,623,3.749,624,3.822,625,4.36,626,3.235,822,3.839,823,4.36,824,4.288,971,4.97]],["title/classes/UpdateTagsDto.html",[155,0.362,370,2.307]],["body/classes/UpdateTagsDto.html",[3,0.231,4,0.179,5,0.204,18,0.813,20,0.017,23,0.767,25,0.378,27,0.306,28,0.011,115,0.724,131,1.232,132,0.014,133,0.011,150,2.462,155,0.698,245,4.647,285,2.113,288,2.928,289,2.928,290,2.22,291,2.928,308,3.127,317,4.647,354,3.127,355,3.637,358,5.515,359,3.985,360,3.358,361,4.889,362,3.358,363,4.889,364,3.637,365,3.358,366,3.358,367,3.985,368,3.985,369,3.985,370,3.836,371,3.985,372,3.127]],["title/classes/User.html",[52,1.037,155,0.362]],["body/classes/User.html",[3,0.119,4,0.092,5,0.106,7,0.133,8,0.892,9,1.519,18,0.634,19,0.463,20,0.017,23,0.91,25,0.267,27,0.119,28,0.006,36,0.919,49,1.722,50,1.406,52,1.096,72,1.879,110,1.587,115,0.697,131,0.96,132,0.009,133,0.006,141,1.686,155,0.254,156,3.355,217,2.442,230,2.836,236,1.736,285,1.092,288,2.75,289,2.75,290,2.491,291,2.75,302,2.75,303,2.193,304,4.88,308,2.438,314,3.27,328,1.736,333,3.512,339,2.283,362,4.415,365,4.415,520,3.471,615,3.471,787,4.655,790,3.742,841,2.836,855,5.252,856,3.414,860,3.471,862,5.852,868,3.471,869,2.301,870,2.301,871,2.301,872,2.301,873,2.301,874,3.471,875,2.301,876,2.301,877,2.301,878,2.301,879,2.301,880,2.301,945,2.301,972,2.301,973,6.319,974,6.657,975,6.657,976,6.319,977,2.667,978,2.667,979,2.667,980,2.667,981,2.667,982,2.667,983,4.023,984,4.655,985,3.471,986,2.667,987,2.667,988,4.023,989,4.023,990,4.023,991,5.395,992,4.023,993,5.395,994,4.023,995,4.023,996,4.023,997,4.023,998,4.023,999,4.023,1000,4.023,1001,4.023,1002,4.023,1003,4.023,1004,3.471,1005,4.023,1006,4.023,1007,4.023,1008,4.023,1009,4.023,1010,4.023,1011,4.023,1012,2.667,1013,2.667,1014,3.471,1015,2.667,1016,2.667,1017,2.667,1018,2.667,1019,2.667,1020,2.667,1021,2.667,1022,2.667]],["title/interfaces/UserPost.html",[0,0.21,84,1.083]],["body/interfaces/UserPost.html",[0,0.408,1,1.839,2,0.623,3,0.117,4,0.09,5,0.103,6,0.742,7,0.13,8,0.655,10,0.68,11,0.651,12,1.032,13,0.742,14,0.776,15,0.776,16,0.776,17,0.651,18,1.217,19,0.437,20,0.017,21,0.57,22,1.177,23,0.954,24,1.177,25,0.144,26,0.299,27,0.333,28,0.009,29,1.078,30,1.078,31,1.078,32,1.078,33,1.078,34,1.078,35,1.078,36,1.541,37,1.949,38,0.776,39,1.432,40,0.811,41,0.811,42,0.811,43,0.811,44,0.811,45,0.811,46,0.742,47,0.811,48,0.811,49,0.776,50,1.918,51,0.811,52,0.711,53,1.23,54,0.811,55,1.36,56,0.811,57,0.811,58,0.811,59,0.811,60,0.811,61,0.811,62,0.811,63,0.811,64,0.811,65,0.811,66,0.811,67,1.486,68,1.23,69,0.811,70,0.811,71,0.811,72,1.422,73,0.811,74,0.811,75,1.23,76,0.811,77,0.811,78,0.811,79,0.811,80,0.811,81,1.883,82,0.811,83,1.518,84,1.36,85,1.658,86,1.658,87,1.658,88,1.658,89,1.658,90,1.658,91,1.658,92,1.658,93,1.658,94,1.783,95,1.658,96,1.658,97,1.658,98,0.742,99,0.811,100,0.811,101,1.518,102,0.811,103,0.811,104,0.811,105,0.811,106,0.811,107,0.811,108,0.811,109,0.811,110,0.68,111,0.811,112,0.811,113,0.811,114,0.811,115,0.299,116,0.811,117,0.811,118,0.811,119,0.811,120,0.811,121,0.742,122,1.36,123,0.811,124,0.811,125,0.811,126,1.126,127,1.126,128,0.811,129,0.811,130,0.811,131,0.623,132,0.009,133,0.006]],["title/interfaces/UserPosts.html",[0,0.21,98,1.083]],["body/interfaces/UserPosts.html",[0,0.415,1,1.907,2,0.704,3,0.132,4,0.102,5,0.117,6,0.839,7,0.147,8,0.717,10,0.769,11,0.736,12,1.131,13,0.839,14,0.877,15,0.877,16,0.877,17,0.736,18,1.218,19,0.343,20,0.017,21,0.644,22,1.29,23,0.95,24,1.29,25,0.163,26,0.337,27,0.339,28,0.009,29,1.181,30,1.181,31,1.181,32,1.181,33,1.181,34,1.181,35,1.181,36,1.295,37,2.03,38,0.877,39,1.492,40,0.917,41,0.917,42,0.917,43,0.917,44,0.917,45,0.917,46,0.839,47,0.917,48,0.917,49,0.877,50,1.932,51,0.917,52,0.803,53,1.348,54,0.917,55,1.464,56,0.917,57,0.917,58,0.917,59,0.917,60,0.917,61,0.917,62,0.917,63,0.917,64,0.917,65,0.917,66,0.917,67,1.599,68,1.348,69,0.917,70,0.917,71,0.917,72,1.529,73,0.917,74,0.917,75,1.348,76,0.917,77,0.917,78,0.917,79,0.917,80,0.917,81,1.614,82,0.917,83,1.234,84,1.614,85,0.917,86,0.917,87,0.917,88,0.917,89,0.917,90,0.917,91,0.917,92,0.917,93,0.917,94,1.348,95,0.917,96,0.917,97,0.917,98,1.234,99,1.762,100,1.762,101,1.614,102,0.917,103,0.917,104,0.917,105,0.917,106,0.917,107,0.917,108,0.917,109,0.917,110,0.769,111,0.917,112,0.917,113,0.917,114,0.917,115,0.337,116,0.917,117,0.917,118,0.917,119,0.917,120,0.917,121,0.839,122,1.464,123,0.917,124,0.917,125,0.917,126,1.234,127,1.234,128,0.917,129,0.917,130,0.917,131,0.704,132,0.009,133,0.006]],["title/coverage.html",[1023,4.014]],["body/coverage.html",[0,0.42,1,0.806,5,0.112,6,2.129,19,0.171,20,0.017,28,0.006,29,0.772,30,0.772,31,0.772,32,0.772,33,0.772,34,0.772,35,0.772,39,0.647,46,0.806,52,1.147,55,0.806,81,0.806,83,0.806,84,0.806,98,0.806,101,0.806,121,0.806,122,0.806,126,0.806,127,0.806,132,0.009,133,0.006,134,2.851,135,1.997,137,2.445,151,1.717,155,0.674,168,1.717,169,1.608,180,2.189,181,1.997,218,2.189,264,4.854,278,2.095,280,2.445,284,2.189,286,2.445,287,2.445,328,1.845,329,2.445,350,1.845,354,1.717,355,3.541,370,1.717,372,1.717,375,1.845,378,2.445,406,6.121,422,2.189,423,2.445,432,1.717,434,1.997,445,1.997,474,2.445,557,2.189,558,2.445,585,3.88,591,1.608,593,2.189,594,2.189,609,2.189,610,2.445,611,2.445,612,2.445,628,2.189,629,2.445,630,2.445,631,2.445,646,2.445,709,3.252,718,2.552,722,2.445,724,2.189,725,2.445,726,2.445,727,2.189,728,2.189,753,3.633,760,2.189,761,2.445,762,2.445,786,2.445,795,2.968,796,2.189,798,2.445,822,3.252,823,1.997,825,2.189,826,2.445,854,2.445,856,2.968,881,1.997,882,2.445,905,1.717,923,2.445,952,2.189,953,2.445,972,2.445,985,2.445,1004,2.445,1023,2.189,1024,2.834,1025,2.834,1026,6.624,1027,6.448,1028,7.447,1029,4.211,1030,6.227,1031,2.834,1032,2.834,1033,2.834,1034,4.211,1035,2.834,1036,2.834,1037,4.211,1038,5.943,1039,2.445,1040,2.445,1041,2.445,1042,2.445,1043,2.189,1044,2.834,1045,2.834,1046,3.88,1047,3.633,1048,3.633,1049,3.88,1050,2.834,1051,4.211,1052,2.445,1053,2.445,1054,2.445,1055,2.834,1056,6.767,1057,2.834,1058,2.834,1059,4.211,1060,4.211,1061,4.211,1062,4.798,1063,2.445,1064,2.445,1065,2.445,1066,2.834]],["title/dependencies.html",[165,2.598,1067,3.178]],["body/dependencies.html",[4,0.153,20,0.017,26,0.505,28,0.01,132,0.012,133,0.01,150,2.106,155,0.546,156,2.225,165,2.505,202,3.409,204,3.409,206,3.808,208,3.409,210,3.808,323,3.255,339,3.616,341,3.409,342,3.111,344,3.808,360,2.873,366,2.873,509,3.808,511,2.225,570,3.808,589,3.111,602,3.409,626,2.873,672,3.808,745,3.808,781,3.111,902,4.921,1043,4.43,1068,4.414,1069,6.372,1070,4.414,1071,4.414,1072,4.414,1073,4.414,1074,4.414,1075,4.414,1076,4.414,1077,5.736,1078,6.372,1079,4.414,1080,4.414,1081,5.736,1082,4.414,1083,4.414,1084,4.414,1085,4.414,1086,4.414,1087,6.372,1088,4.414,1089,5.736,1090,4.414,1091,4.414,1092,4.414,1093,4.414,1094,4.414,1095,4.414,1096,4.414,1097,4.414,1098,4.414,1099,4.414,1100,4.414,1101,4.414,1102,4.414,1103,4.414,1104,4.414,1105,4.414,1106,5.736,1107,4.414,1108,4.414,1109,4.414,1110,4.414,1111,4.414,1112,4.414,1113,4.414,1114,4.414,1115,4.414,1116,3.409,1117,4.414,1118,4.414,1119,4.414,1120,4.414,1121,4.414,1122,4.414]],["title/miscellaneous/enumerations.html",[1123,1.697,1124,3.95]],["body/miscellaneous/enumerations.html",[7,0.294,20,0.016,28,0.013,132,0.015,133,0.013,303,3.106,727,4.56,728,5.299,750,5.919,751,5.919,752,5.919,1123,3.152,1124,5.094,1125,5.904]],["title/miscellaneous/functions.html",[1123,1.697,1126,3.95]],["body/miscellaneous/functions.html",[7,0.238,9,1.892,20,0.017,28,0.01,115,0.868,132,0.013,133,0.01,143,2.148,168,4.007,186,2.698,267,4.66,303,2.161,589,5.049,1039,4.118,1040,5.203,1046,3.687,1047,5.992,1048,5.992,1049,3.687,1052,4.118,1053,5.203,1054,5.203,1062,4.118,1063,5.203,1064,5.203,1065,5.203,1123,2.549,1126,4.118,1127,6.946,1128,5.203,1129,5.203,1130,4.774,1131,4.774,1132,4.774,1133,5.704,1134,4.774,1135,4.774,1136,6.031,1137,6.031,1138,4.774,1139,4.774]],["title/index.html",[7,0.158,1140,3.178,1141,3.178]],["body/index.html",[4,0.17,20,0.017,28,0.011,132,0.013,133,0.011,192,2.471,211,3.787,232,3.787,233,4.737,268,5.774,326,2.783,385,6.354,481,3.787,958,4.23,1023,3.787,1116,3.787,1133,4.23,1142,4.903,1143,4.903,1144,6.133,1145,4.903,1146,4.903,1147,4.903,1148,4.903,1149,4.903,1150,4.903,1151,4.903,1152,4.903,1153,7.473,1154,4.903,1155,4.903,1156,4.903,1157,4.903,1158,6.133,1159,4.903,1160,4.903,1161,4.903,1162,6.133,1163,4.903,1164,4.903,1165,4.903,1166,6.133,1167,6.133,1168,4.903,1169,4.903,1170,4.903,1171,4.903,1172,4.903,1173,4.903,1174,4.903,1175,4.903,1176,4.903,1177,4.903,1178,4.903,1179,4.903,1180,4.903,1181,4.903,1182,4.903,1183,4.903,1184,4.903,1185,4.903,1186,4.903,1187,4.903,1188,4.903]],["title/modules.html",[164,2.949]],["body/modules.html",[20,0.015,28,0.013,132,0.015,133,0.013,163,4.127,164,3.324,174,3.812,175,3.812,176,3.812,721,4.127,1116,5.583,1189,7.228,1190,7.228,1191,7.446,1192,5.856]],["title/overview.html",[1193,4.483]],["body/overview.html",[2,1.214,20,0.017,28,0.011,132,0.014,133,0.011,136,3.083,151,4.124,162,2.564,163,5.439,164,2.887,165,2.887,166,3.585,167,3.585,168,3.083,169,2.887,170,3.311,171,4.389,172,4.389,173,4.389,174,4.75,175,4.429,176,4.838,177,4.423,178,3.585,179,3.585,279,2.716,285,2.084,373,4.389,374,4.389,375,4.429,516,4.389,797,3.929,861,4.389,905,4.564,918,4.389,919,4.389,920,4.389,984,4.389,1193,4.389,1194,5.087,1195,5.087,1196,5.087]],["title/miscellaneous/typealiases.html",[1123,1.697,1197,4.578]],["body/miscellaneous/typealiases.html",[6,1.627,7,0.285,12,1.49,19,0.346,20,0.017,22,2.002,23,0.693,28,0.016,29,1.557,30,1.557,31,1.557,32,1.557,33,1.557,34,1.557,35,1.557,36,1.306,132,0.015,133,0.012,1123,3.053,1198,5.717,1199,6.733]],["title/miscellaneous/variables.html",[1123,1.697,1200,3.95]],["body/miscellaneous/variables.html",[7,0.214,19,0.43,20,0.017,23,0.681,28,0.009,132,0.012,133,0.009,144,1.755,145,1.755,160,1.912,169,3.192,180,3.308,192,2.159,199,3.019,200,2.596,217,1.939,218,4.344,219,3.696,220,3.698,221,3.696,222,3.696,223,3.696,224,3.696,225,3.696,226,3.696,227,3.696,228,3.696,229,3.696,230,3.019,231,3.696,232,3.308,233,3.308,234,3.696,235,3.696,236,2.788,237,5.753,238,3.696,239,3.696,302,4.112,303,3.28,333,2.788,346,2.287,525,2.159,540,2.044,585,3.308,589,4.426,590,3.696,591,2.431,593,4.344,594,4.85,595,3.696,596,4.852,597,3.696,598,3.696,599,3.696,600,3.696,601,3.696,602,3.308,603,3.696,604,3.696,605,3.696,606,3.696,607,3.696,608,3.696,841,3.019,856,4.7,865,3.308,1014,3.696,1041,3.696,1042,4.852,1043,4.344,1046,3.308,1049,3.308,1123,2.287,1128,3.696,1129,3.696,1200,3.696,1201,4.283,1202,6.28,1203,4.283,1204,4.283]]],"invertedIndex":[["",{"_index":20,"title":{},"body":{"interfaces/APIResponse.html":{},"controllers/AppController.html":{},"interfaces/AppLaunchAction.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/BaseEntity.html":{},"classes/BaseModel.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"classes/CreateTagsDto.html":{},"modules/CronModule.html":{},"injectables/CronService.html":{},"classes/CrudController.html":{},"classes/CrudService.html":{},"injectables/DBHelper.html":{},"modules/DatabaseModule.html":{},"injectables/ExcludeNullUndefinedInterceptor.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"classes/GetManyDto.html":{},"interfaces/GetRescueList.html":{},"classes/GetTagsResponseDto.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"controllers/HealthController.html":{},"interfaces/ICrudService.html":{},"interfaces/IPagination.html":{},"interfaces/IPagination-1.html":{},"interfaces/ITryRequest.html":{},"classes/PaginationParams.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"classes/QueryFailedFilter.html":{},"guards/RequestGuard.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/Response.html":{},"guards/ResponseGuard.html":{},"classes/Tag.html":{},"controllers/TagsController.html":{},"modules/TagsModule.html":{},"injectables/TagsService.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateTagsDto.html":{},"classes/User.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":406,"title":{},"body":{"injectables/CronService.html":{},"classes/PaginationParams.html":{},"coverage.html":{}}}],["0.1.1",{"_index":1074,"title":{},"body":{"dependencies.html":{}}}],["0.1.13",{"_index":1112,"title":{},"body":{"dependencies.html":{}}}],["0.12.2",{"_index":1092,"title":{},"body":{"dependencies.html":{}}}],["0.2.29",{"_index":1122,"title":{},"body":{"dependencies.html":{}}}],["0.21.15",{"_index":1098,"title":{},"body":{"dependencies.html":{}}}],["0.3.1",{"_index":1091,"title":{},"body":{"dependencies.html":{}}}],["0.4.1",{"_index":1081,"title":{},"body":{"dependencies.html":{}}}],["0.5.19",{"_index":1117,"title":{},"body":{"dependencies.html":{}}}],["0.6.1",{"_index":1070,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":1028,"title":{},"body":{"coverage.html":{}}}],["0/14",{"_index":1051,"title":{},"body":{"coverage.html":{}}}],["0/15",{"_index":1058,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":1026,"title":{},"body":{"coverage.html":{}}}],["0/23",{"_index":1057,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":1056,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":1037,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":1029,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":1038,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":1030,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":1050,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":1055,"title":{},"body":{"coverage.html":{}}}],["01",{"_index":295,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseModel.html":{}}}],["01t12:00:00.000z",{"_index":327,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseModel.html":{}}}],["01t12:00:00.000z'})@createdatecolumn({select",{"_index":296,"title":{},"body":{"classes/BaseEntity.html":{}}}],["01t12:00:00.000z'})@deletedatecolumn({select",{"_index":300,"title":{},"body":{"classes/BaseEntity.html":{}}}],["01t12:00:00.000z'})@updatedatecolumn({select",{"_index":311,"title":{},"body":{"classes/BaseEntity.html":{}}}],["01t12:00:00.000z'})@versioncolumn({default",{"_index":313,"title":{},"body":{"classes/BaseEntity.html":{}}}],["0})@isoptional()@min(0)@transform(undefined",{"_index":738,"title":{},"body":{"classes/PaginationParams.html":{}}}],["1",{"_index":314,"title":{"interfaces/IPagination-1.html":{}},"body":{"classes/BaseEntity.html":{},"injectables/CronService.html":{},"injectables/DBHelper.html":{},"controllers/HealthController.html":{},"classes/User.html":{}}}],["1.0.0",{"_index":1108,"title":{},"body":{"dependencies.html":{}}}],["1.1.0",{"_index":1105,"title":{},"body":{"dependencies.html":{}}}],["1.1.2",{"_index":1104,"title":{},"body":{"dependencies.html":{}}}],["1/12",{"_index":1031,"title":{},"body":{"coverage.html":{}}}],["1/2",{"_index":1061,"title":{},"body":{"coverage.html":{}}}],["1/3",{"_index":1060,"title":{},"body":{"coverage.html":{}}}],["1/9",{"_index":1045,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":741,"title":{},"body":{"classes/PaginationParams.html":{}}}],["100",{"_index":1034,"title":{},"body":{"coverage.html":{}}}],["1024",{"_index":700,"title":{},"body":{"controllers/HealthController.html":{}}}],["10_000",{"_index":965,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["11",{"_index":1044,"title":{},"body":{"coverage.html":{}}}],["12",{"_index":516,"title":{},"body":{"classes/CrudService.html":{},"overview.html":{}}}],["17.1.1",{"_index":1068,"title":{},"body":{"dependencies.html":{}}}],["1})@primarygeneratedcolumn",{"_index":309,"title":{},"body":{"classes/BaseEntity.html":{}}}],["2",{"_index":861,"title":{},"body":{"classes/Tag.html":{},"overview.html":{}}}],["2.0.21",{"_index":1109,"title":{},"body":{"dependencies.html":{}}}],["2.1.4",{"_index":1082,"title":{},"body":{"dependencies.html":{}}}],["2.2.4",{"_index":1103,"title":{},"body":{"dependencies.html":{}}}],["2.29.1",{"_index":1100,"title":{},"body":{"dependencies.html":{}}}],["2.4.3",{"_index":1090,"title":{},"body":{"dependencies.html":{}}}],["2/3",{"_index":1033,"title":{},"body":{"coverage.html":{}}}],["200",{"_index":833,"title":{},"body":{"guards/ResponseGuard.html":{}}}],["2000",{"_index":294,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseModel.html":{}}}],["20922789888000",{"_index":408,"title":{},"body":{"injectables/CronService.html":{}}}],["25",{"_index":1196,"title":{},"body":{"overview.html":{}}}],["255",{"_index":862,"title":{},"body":{"classes/Tag.html":{},"classes/User.html":{}}}],["3",{"_index":984,"title":{},"body":{"classes/User.html":{},"overview.html":{}}}],["3.0.2",{"_index":1114,"title":{},"body":{"dependencies.html":{}}}],["3/3",{"_index":1036,"title":{},"body":{"coverage.html":{}}}],["33",{"_index":1059,"title":{},"body":{"coverage.html":{}}}],["4",{"_index":1194,"title":{},"body":{"overview.html":{}}}],["4.0.2",{"_index":1102,"title":{},"body":{"dependencies.html":{}}}],["4.1.5",{"_index":1121,"title":{},"body":{"dependencies.html":{}}}],["4.17.20",{"_index":1099,"title":{},"body":{"dependencies.html":{}}}],["4.2.0",{"_index":1097,"title":{},"body":{"dependencies.html":{}}}],["4.6.2",{"_index":1087,"title":{},"body":{"dependencies.html":{}}}],["4.7.5",{"_index":1083,"title":{},"body":{"dependencies.html":{}}}],["4/4",{"_index":1035,"title":{},"body":{"coverage.html":{}}}],["401",{"_index":837,"title":{},"body":{"guards/ResponseGuard.html":{}}}],["5.0.0",{"_index":1118,"title":{},"body":{"dependencies.html":{}}}],["5.2.3",{"_index":1095,"title":{},"body":{"dependencies.html":{}}}],["50",{"_index":753,"title":{},"body":{"classes/PaginationParams.html":{},"coverage.html":{}}}],["50000000",{"_index":412,"title":{},"body":{"injectables/CronService.html":{}}}],["50})@isoptional()@min(0)@max(50)@transform(undefined",{"_index":743,"title":{},"body":{"classes/PaginationParams.html":{}}}],["6.6.3",{"_index":1115,"title":{},"body":{"dependencies.html":{}}}],["60",{"_index":419,"title":{},"body":{"injectables/CronService.html":{},"controllers/HealthController.html":{}}}],["66",{"_index":1032,"title":{},"body":{"coverage.html":{}}}],["7",{"_index":1195,"title":{},"body":{"overview.html":{}}}],["7.0.1",{"_index":1084,"title":{},"body":{"dependencies.html":{}}}],["7.1.3",{"_index":1076,"title":{},"body":{"dependencies.html":{}}}],["7.1.5",{"_index":1086,"title":{},"body":{"dependencies.html":{}}}],["7.5.1",{"_index":1069,"title":{},"body":{"dependencies.html":{}}}],["7.6.5",{"_index":1080,"title":{},"body":{"dependencies.html":{}}}],["8",{"_index":985,"title":{},"body":{"classes/User.html":{},"coverage.html":{}}}],["8.2.0",{"_index":1089,"title":{},"body":{"dependencies.html":{}}}],["_",{"_index":569,"title":{},"body":{"injectables/DBHelper.html":{},"injectables/TagsService.html":{}}}],["_.difference(new_values",{"_index":580,"title":{},"body":{"injectables/DBHelper.html":{}}}],["_.difference(values",{"_index":578,"title":{},"body":{"injectables/DBHelper.html":{}}}],["abortearly",{"_index":223,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["above",{"_index":260,"title":{},"body":{"modules/AppModule.html":{}}}],["abstract",{"_index":324,"title":{},"body":{"classes/BaseEntity.html":{},"classes/CrudController.html":{},"classes/CrudService.html":{},"classes/PaginationParams.html":{}}}],["access,@typescript",{"_index":198,"title":{},"body":{"modules/AppModule.html":{},"controllers/HealthController.html":{}}}],["action",{"_index":48,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{}}}],["actionid",{"_index":47,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{}}}],["adcorporatelogourl",{"_index":95,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{}}}],["against",{"_index":880,"title":{},"body":{"classes/Tag.html":{},"classes/User.html":{}}}],["aliases",{"_index":1198,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["allowunknown",{"_index":222,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["amazing",{"_index":1173,"title":{},"body":{"index.html":{}}}],["animalimageurl",{"_index":103,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{}}}],["anyquerybuilder",{"_index":1018,"title":{},"body":{"classes/User.html":{}}}],["api",{"_index":38,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"modules/AppModule.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{}}}],["api:v1/rescue/getcomments?pageno=0&pagesize=10&postid=1230",{"_index":43,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{}}}],["api:v1/rescue/getrescuelist?pageno=0&pagesize=10&status=pending|inprogress|completed|nearest",{"_index":42,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{}}}],["api:v1/rescue/getuserfollowers?userid=1230",{"_index":44,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{}}}],["api:v1/rescue/getuserfollowing?userid=1230",{"_index":45,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{}}}],["api:v1/user/getuserposts?pageno=0&pagesize=25",{"_index":41,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{}}}],["api:v1/user/getuserprofile?userid=25",{"_index":40,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{}}}],["apierror",{"_index":22,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{},"miscellaneous/typealiases.html":{}}}],["apihideproperty",{"_index":358,"title":{},"body":{"classes/CreateTagsDto.html":{},"classes/GetTagsResponseDto.html":{},"classes/UpdateTagsDto.html":{}}}],["apihideproperty()@exclude",{"_index":640,"title":{},"body":{"classes/GetTagsResponseDto.html":{}}}],["apioperation",{"_index":898,"title":{},"body":{"controllers/TagsController.html":{}}}],["apiproperty",{"_index":317,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseModel.html":{},"classes/CreateTagsDto.html":{},"classes/GetTagsResponseDto.html":{},"classes/UpdateTagsDto.html":{}}}],["apiproperty({description",{"_index":306,"title":{},"body":{"classes/BaseEntity.html":{}}}],["apiproperty({example",{"_index":293,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseModel.html":{},"classes/CreateTagsDto.html":{}}}],["apipropertyoptional",{"_index":746,"title":{},"body":{"classes/PaginationParams.html":{}}}],["apipropertyoptional()@isoptional",{"_index":733,"title":{},"body":{"classes/PaginationParams.html":{}}}],["apipropertyoptional({type",{"_index":736,"title":{},"body":{"classes/PaginationParams.html":{}}}],["apiresponse",{"_index":1,"title":{"interfaces/APIResponse.html":{}},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{},"coverage.html":{}}}],["apitags",{"_index":149,"title":{},"body":{"controllers/AppController.html":{},"controllers/HealthController.html":{},"controllers/TagsController.html":{}}}],["apitags(appcontroller.name",{"_index":154,"title":{},"body":{"controllers/AppController.html":{}}}],["apitags(healthcontroller.name",{"_index":673,"title":{},"body":{"controllers/HealthController.html":{}}}],["apitags(tagscontroller.name",{"_index":908,"title":{},"body":{"controllers/TagsController.html":{}}}],["app",{"_index":1133,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["app.controller",{"_index":212,"title":{},"body":{"modules/AppModule.html":{}}}],["app.service",{"_index":152,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["appcontroller",{"_index":135,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["applaunchaction",{"_index":46,"title":{"interfaces/AppLaunchAction.html":{}},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{},"coverage.html":{}}}],["application",{"_index":251,"title":{},"body":{"modules/AppModule.html":{}}}],["applications",{"_index":1150,"title":{},"body":{"index.html":{}}}],["applicationshutdown",{"_index":276,"title":{},"body":{"modules/AppModule.html":{},"controllers/HealthController.html":{}}}],["appmodule",{"_index":163,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appservice",{"_index":151,"title":{"injectables/AppService.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"coverage.html":{},"overview.html":{}}}],["areyoufollowing",{"_index":129,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{}}}],["argumentshost",{"_index":772,"title":{},"body":{"classes/QueryFailedFilter.html":{}}}],["array",{"_index":832,"title":{},"body":{"guards/ResponseGuard.html":{}}}],["asc",{"_index":752,"title":{},"body":{"classes/PaginationParams.html":{},"miscellaneous/enumerations.html":{}}}],["assignment",{"_index":526,"title":{},"body":{"classes/CrudService.html":{},"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["assignment,@typescript",{"_index":195,"title":{},"body":{"modules/AppModule.html":{}}}],["assignment,no",{"_index":550,"title":{},"body":{"classes/CrudService.html":{},"controllers/HealthController.html":{}}}],["async",{"_index":346,"title":{},"body":{"classes/BaseModel.html":{},"classes/CrudController.html":{},"classes/CrudService.html":{},"injectables/DBHelper.html":{},"modules/DatabaseModule.html":{},"controllers/TagsController.html":{},"injectables/TagsService.html":{},"miscellaneous/variables.html":{}}}],["asynchronous",{"_index":266,"title":{},"body":{"modules/AppModule.html":{}}}],["author",{"_index":1181,"title":{},"body":{"index.html":{}}}],["authservice",{"_index":543,"title":{},"body":{"classes/CrudService.html":{}}}],["available",{"_index":721,"title":{},"body":{"interfaces/ICrudService.html":{},"interfaces/IPagination.html":{},"interfaces/IPagination-1.html":{},"modules.html":{}}}],["await",{"_index":200,"title":{},"body":{"modules/AppModule.html":{},"classes/BaseModel.html":{},"classes/CrudService.html":{},"injectables/DBHelper.html":{},"modules/DatabaseModule.html":{},"miscellaneous/variables.html":{}}}],["awaits",{"_index":265,"title":{},"body":{"modules/AppModule.html":{}}}],["b",{"_index":697,"title":{},"body":{"controllers/HealthController.html":{}}}],["backers",{"_index":1174,"title":{},"body":{"index.html":{}}}],["badge",{"_index":73,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{}}}],["badgedescription",{"_index":76,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{}}}],["badgeid",{"_index":74,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{}}}],["badgename",{"_index":75,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{}}}],["badrequestexception",{"_index":506,"title":{},"body":{"classes/CrudService.html":{}}}],["badrequestexception(err",{"_index":539,"title":{},"body":{"classes/CrudService.html":{}}}],["base.model",{"_index":869,"title":{},"body":{"classes/Tag.html":{},"classes/User.html":{}}}],["based",{"_index":873,"title":{},"body":{"classes/Tag.html":{},"classes/User.html":{}}}],["baseentity",{"_index":284,"title":{"classes/BaseEntity.html":{}},"body":{"classes/BaseEntity.html":{},"coverage.html":{}}}],["basemodel",{"_index":328,"title":{"classes/BaseModel.html":{}},"body":{"classes/BaseModel.html":{},"classes/Tag.html":{},"classes/User.html":{},"coverage.html":{}}}],["bcrypt",{"_index":508,"title":{},"body":{"classes/CrudService.html":{}}}],["bcrypt.hash(password",{"_index":541,"title":{},"body":{"classes/CrudService.html":{}}}],["bcryptjs",{"_index":509,"title":{},"body":{"classes/CrudService.html":{},"dependencies.html":{}}}],["before",{"_index":147,"title":{},"body":{"controllers/AppController.html":{},"controllers/HealthController.html":{},"controllers/TagsController.html":{}}}],["beforeapplicationshutdown",{"_index":257,"title":{},"body":{"modules/AppModule.html":{}}}],["beforeinsert(querycontext",{"_index":347,"title":{},"body":{"classes/BaseModel.html":{}}}],["beforeupdate(opt",{"_index":352,"title":{},"body":{"classes/BaseModel.html":{}}}],["bind",{"_index":803,"title":{},"body":{"guards/RequestGuard.html":{},"guards/ResponseGuard.html":{}}}],["bindrequesthelpers",{"_index":799,"title":{},"body":{"guards/RequestGuard.html":{}}}],["bindrequesthelpers(request",{"_index":801,"title":{},"body":{"guards/RequestGuard.html":{}}}],["bindresponsehelpers",{"_index":827,"title":{},"body":{"guards/ResponseGuard.html":{}}}],["bindresponsehelpers(response",{"_index":828,"title":{},"body":{"guards/ResponseGuard.html":{}}}],["body",{"_index":456,"title":{},"body":{"classes/CrudController.html":{},"controllers/TagsController.html":{}}}],["boolean",{"_index":50,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/ITryRequest.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"guards/RequestGuard.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"guards/ResponseGuard.html":{},"classes/User.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{}}}],["bootstrap",{"_index":168,"title":{},"body":{"modules/AppModule.html":{},"modules/CronModule.html":{},"modules/TagsModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["both",{"_index":998,"title":{},"body":{"classes/User.html":{}}}],["browse",{"_index":1191,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":1189,"title":{},"body":{"modules.html":{}}}],["builder/querypartialentity",{"_index":459,"title":{},"body":{"classes/CrudController.html":{},"classes/CrudService.html":{},"interfaces/ICrudService.html":{},"interfaces/IPagination.html":{}}}],["building",{"_index":1145,"title":{},"body":{"index.html":{}}}],["call",{"_index":254,"title":{},"body":{"modules/AppModule.html":{}}}],["call,@typescript",{"_index":196,"title":{},"body":{"modules/AppModule.html":{},"controllers/HealthController.html":{}}}],["called",{"_index":417,"title":{},"body":{"injectables/CronService.html":{}}}],["callhandler",{"_index":621,"title":{},"body":{"injectables/ExcludeNullUndefinedInterceptor.html":{},"interfaces/Response.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/TransformInterceptor.html":{}}}],["canactivate",{"_index":800,"title":{},"body":{"guards/RequestGuard.html":{},"guards/ResponseGuard.html":{}}}],["canactivate(context",{"_index":805,"title":{},"body":{"guards/RequestGuard.html":{},"guards/ResponseGuard.html":{}}}],["catch",{"_index":524,"title":{},"body":{"classes/CrudService.html":{},"classes/QueryFailedFilter.html":{}}}],["catch(exception",{"_index":764,"title":{},"body":{"classes/QueryFailedFilter.html":{}}}],["catcherror",{"_index":962,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["catcherror((e",{"_index":967,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["check",{"_index":647,"title":{},"body":{"controllers/HealthController.html":{}}}],["checked",{"_index":879,"title":{},"body":{"classes/Tag.html":{},"classes/User.html":{}}}],["checkviolationerror",{"_index":765,"title":{},"body":{"classes/QueryFailedFilter.html":{}}}],["class",{"_index":155,"title":{"classes/BaseEntity.html":{},"classes/BaseModel.html":{},"classes/CreateTagsDto.html":{},"classes/CrudController.html":{},"classes/CrudService.html":{},"classes/GetManyDto.html":{},"classes/GetTagsResponseDto.html":{},"classes/PaginationParams.html":{},"classes/QueryFailedFilter.html":{},"classes/Tag.html":{},"classes/UpdateTagsDto.html":{},"classes/User.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/BaseEntity.html":{},"classes/BaseModel.html":{},"classes/CreateTagsDto.html":{},"modules/CronModule.html":{},"injectables/CronService.html":{},"classes/CrudController.html":{},"classes/CrudService.html":{},"injectables/DBHelper.html":{},"modules/DatabaseModule.html":{},"injectables/ExcludeNullUndefinedInterceptor.html":{},"classes/GetManyDto.html":{},"classes/GetTagsResponseDto.html":{},"controllers/HealthController.html":{},"classes/PaginationParams.html":{},"classes/QueryFailedFilter.html":{},"guards/RequestGuard.html":{},"interfaces/Response.html":{},"guards/ResponseGuard.html":{},"classes/Tag.html":{},"controllers/TagsController.html":{},"modules/TagsModule.html":{},"injectables/TagsService.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateTagsDto.html":{},"classes/User.html":{},"coverage.html":{},"dependencies.html":{}}}],["classes",{"_index":285,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseModel.html":{},"classes/CreateTagsDto.html":{},"classes/CrudController.html":{},"classes/CrudService.html":{},"classes/GetManyDto.html":{},"classes/GetTagsResponseDto.html":{},"classes/PaginationParams.html":{},"classes/QueryFailedFilter.html":{},"classes/Tag.html":{},"classes/UpdateTagsDto.html":{},"classes/User.html":{},"overview.html":{}}}],["client",{"_index":601,"title":{},"body":{"modules/DatabaseModule.html":{},"miscellaneous/variables.html":{}}}],["cluster_appmodule",{"_index":171,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":173,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":172,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_cronmodule",{"_index":373,"title":{},"body":{"modules/CronModule.html":{},"overview.html":{}}}],["cluster_cronmodule_providers",{"_index":374,"title":{},"body":{"modules/CronModule.html":{},"overview.html":{}}}],["cluster_tagsmodule",{"_index":918,"title":{},"body":{"modules/TagsModule.html":{},"overview.html":{}}}],["cluster_tagsmodule_exports",{"_index":920,"title":{},"body":{"modules/TagsModule.html":{},"overview.html":{}}}],["cluster_tagsmodule_providers",{"_index":919,"title":{},"body":{"modules/TagsModule.html":{},"overview.html":{}}}],["code",{"_index":834,"title":{},"body":{"guards/ResponseGuard.html":{}}}],["collectosmetrics",{"_index":648,"title":{},"body":{"controllers/HealthController.html":{}}}],["collectosmetrics(metrics",{"_index":652,"title":{},"body":{"controllers/HealthController.html":{}}}],["column",{"_index":787,"title":{},"body":{"classes/QueryFailedFilter.html":{},"classes/User.html":{}}}],["columnnamemappers",{"_index":337,"title":{},"body":{"classes/BaseModel.html":{}}}],["columns",{"_index":788,"title":{},"body":{"classes/QueryFailedFilter.html":{}}}],["comment",{"_index":122,"title":{"interfaces/Comment.html":{}},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{},"coverage.html":{}}}],["commentedusename",{"_index":124,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{}}}],["commenteduserid",{"_index":125,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{}}}],["commentid",{"_index":123,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{}}}],["comments",{"_index":126,"title":{"interfaces/Comments.html":{}},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{},"coverage.html":{}}}],["commentscount",{"_index":86,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{}}}],["concat(toadd",{"_index":581,"title":{},"body":{"injectables/DBHelper.html":{}}}],["config",{"_index":677,"title":{},"body":{"controllers/HealthController.html":{}}}],["configmodule",{"_index":201,"title":{},"body":{"modules/AppModule.html":{}}}],["configmodule.forroot(configmoduleoptions",{"_index":240,"title":{},"body":{"modules/AppModule.html":{}}}],["configmoduleoptions",{"_index":218,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["configservice",{"_index":665,"title":{},"body":{"controllers/HealthController.html":{}}}],["connection",{"_index":604,"title":{},"body":{"modules/DatabaseModule.html":{},"miscellaneous/variables.html":{}}}],["console.error",{"_index":275,"title":{},"body":{"modules/AppModule.html":{}}}],["console.info(`moduleinit",{"_index":273,"title":{},"body":{"modules/AppModule.html":{}}}],["console.log",{"_index":708,"title":{},"body":{"controllers/HealthController.html":{}}}],["console.log(`moduleinit",{"_index":706,"title":{},"body":{"controllers/HealthController.html":{}}}],["const",{"_index":217,"title":{},"body":{"modules/AppModule.html":{},"classes/CrudService.html":{},"injectables/DBHelper.html":{},"modules/DatabaseModule.html":{},"controllers/HealthController.html":{},"classes/QueryFailedFilter.html":{},"guards/RequestGuard.html":{},"guards/ResponseGuard.html":{},"controllers/TagsController.html":{},"classes/User.html":{},"miscellaneous/variables.html":{}}}],["constraint",{"_index":789,"title":{},"body":{"classes/QueryFailedFilter.html":{}}}],["constraintviolationerror",{"_index":766,"title":{},"body":{"classes/QueryFailedFilter.html":{}}}],["constructor",{"_index":429,"title":{},"body":{"classes/CrudController.html":{},"classes/CrudService.html":{},"injectables/DBHelper.html":{},"controllers/HealthController.html":{},"injectables/TagsService.html":{}}}],["constructor(@inject(tag.name",{"_index":940,"title":{},"body":{"injectables/TagsService.html":{}}}],["constructor(crudservice",{"_index":431,"title":{},"body":{"classes/CrudController.html":{}}}],["constructor(modelclass",{"_index":924,"title":{},"body":{"injectables/TagsService.html":{}}}],["constructor(private",{"_index":158,"title":{},"body":{"controllers/AppController.html":{},"classes/CrudController.html":{},"injectables/DBHelper.html":{},"controllers/TagsController.html":{}}}],["constructor(protected",{"_index":514,"title":{},"body":{"classes/CrudService.html":{}}}],["constructor(repository",{"_index":480,"title":{},"body":{"classes/CrudService.html":{},"injectables/DBHelper.html":{}}}],["contact",{"_index":114,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{}}}],["context",{"_index":623,"title":{},"body":{"injectables/ExcludeNullUndefinedInterceptor.html":{},"guards/RequestGuard.html":{},"interfaces/Response.html":{},"guards/ResponseGuard.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/TransformInterceptor.html":{}}}],["continue",{"_index":269,"title":{},"body":{"modules/AppModule.html":{}}}],["controller",{"_index":134,"title":{"controllers/AppController.html":{},"controllers/HealthController.html":{},"controllers/TagsController.html":{}},"body":{"controllers/AppController.html":{},"controllers/HealthController.html":{},"controllers/TagsController.html":{},"coverage.html":{}}}],["controller(appcontroller.path",{"_index":153,"title":{},"body":{"controllers/AppController.html":{}}}],["controller(healthcontroller.path",{"_index":674,"title":{},"body":{"controllers/HealthController.html":{}}}],["controller(tagscontroller.path",{"_index":907,"title":{},"body":{"controllers/TagsController.html":{}}}],["controllers",{"_index":136,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/HealthController.html":{},"controllers/TagsController.html":{},"modules/TagsModule.html":{},"overview.html":{}}}],["convert",{"_index":696,"title":{},"body":{"controllers/HealthController.html":{}}}],["copied",{"_index":542,"title":{},"body":{"classes/CrudService.html":{}}}],["corporatedescription",{"_index":96,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{}}}],["corporatename",{"_index":97,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{}}}],["corresponding",{"_index":261,"title":{},"body":{"modules/AppModule.html":{}}}],["count",{"_index":10,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"injectables/CronService.html":{},"classes/CrudService.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"classes/GetManyDto.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/ICrudService.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{}}}],["count(filter",{"_index":483,"title":{},"body":{"classes/CrudService.html":{},"interfaces/ICrudService.html":{},"interfaces/IPagination.html":{}}}],["coverage",{"_index":1023,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["coverimage",{"_index":54,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{}}}],["create",{"_index":424,"title":{},"body":{"classes/CrudController.html":{},"classes/CrudService.html":{},"interfaces/ICrudService.html":{},"controllers/TagsController.html":{},"injectables/TagsService.html":{}}}],["create(@body",{"_index":466,"title":{},"body":{"classes/CrudController.html":{}}}],["create(@parsedrequest",{"_index":914,"title":{},"body":{"controllers/TagsController.html":{}}}],["create(entity",{"_index":435,"title":{},"body":{"classes/CrudController.html":{},"classes/CrudService.html":{},"interfaces/ICrudService.html":{},"interfaces/IPagination.html":{}}}],["create(r",{"_index":883,"title":{},"body":{"controllers/TagsController.html":{}}}],["create(undefined",{"_index":927,"title":{},"body":{"injectables/TagsService.html":{}}}],["created",{"_index":878,"title":{},"body":{"classes/Tag.html":{},"classes/User.html":{}}}],["createdat",{"_index":288,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseModel.html":{},"classes/CreateTagsDto.html":{},"classes/GetTagsResponseDto.html":{},"classes/Tag.html":{},"classes/UpdateTagsDto.html":{},"classes/User.html":{}}}],["createdatecolumn",{"_index":320,"title":{},"body":{"classes/BaseEntity.html":{}}}],["creates",{"_index":1002,"title":{},"body":{"classes/User.html":{}}}],["createtagsdto",{"_index":354,"title":{"classes/CreateTagsDto.html":{}},"body":{"classes/CreateTagsDto.html":{},"classes/GetTagsResponseDto.html":{},"controllers/TagsController.html":{},"classes/UpdateTagsDto.html":{},"coverage.html":{}}}],["criteria",{"_index":490,"title":{},"body":{"classes/CrudService.html":{}}}],["cron",{"_index":379,"title":{},"body":{"injectables/CronService.html":{}}}],["cron('60",{"_index":400,"title":{},"body":{"injectables/CronService.html":{}}}],["cron.service",{"_index":377,"title":{},"body":{"modules/CronModule.html":{}}}],["cron/cron.module",{"_index":213,"title":{},"body":{"modules/AppModule.html":{}}}],["cronmodule",{"_index":174,"title":{"modules/CronModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CronModule.html":{},"modules.html":{},"overview.html":{}}}],["cronmodules",{"_index":247,"title":{},"body":{"modules/AppModule.html":{}}}],["cronservice",{"_index":375,"title":{"injectables/CronService.html":{}},"body":{"modules/CronModule.html":{},"injectables/CronService.html":{},"coverage.html":{},"overview.html":{}}}],["cronservice.count",{"_index":415,"title":{},"body":{"injectables/CronService.html":{}}}],["crudcontroller",{"_index":422,"title":{"classes/CrudController.html":{}},"body":{"classes/CrudController.html":{},"coverage.html":{}}}],["crudrequest",{"_index":884,"title":{},"body":{"controllers/TagsController.html":{},"injectables/TagsService.html":{}}}],["crudrequestinterceptor",{"_index":899,"title":{},"body":{"controllers/TagsController.html":{}}}],["crudservice",{"_index":434,"title":{"classes/CrudService.html":{}},"body":{"classes/CrudController.html":{},"classes/CrudService.html":{},"coverage.html":{}}}],["ctx",{"_index":778,"title":{},"body":{"classes/QueryFailedFilter.html":{}}}],["ctx.getrequest",{"_index":782,"title":{},"body":{"classes/QueryFailedFilter.html":{}}}],["ctx.getresponse",{"_index":780,"title":{},"body":{"classes/QueryFailedFilter.html":{}}}],["current",{"_index":420,"title":{},"body":{"injectables/CronService.html":{},"interfaces/ICrudService.html":{},"interfaces/IPagination.html":{},"interfaces/IPagination-1.html":{}}}],["data",{"_index":11,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"classes/GetManyDto.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"controllers/HealthController.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/Response.html":{},"guards/ResponseGuard.html":{},"injectables/TransformInterceptor.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{}}}],["database",{"_index":236,"title":{},"body":{"modules/AppModule.html":{},"classes/QueryFailedFilter.html":{},"classes/Tag.html":{},"classes/User.html":{},"miscellaneous/variables.html":{}}}],["database/database.module",{"_index":214,"title":{},"body":{"modules/AppModule.html":{}}}],["database/models/tag.model",{"_index":903,"title":{},"body":{"controllers/TagsController.html":{},"injectables/TagsService.html":{}}}],["databasemodule",{"_index":175,"title":{"modules/DatabaseModule.html":{}},"body":{"modules/AppModule.html":{},"modules/DatabaseModule.html":{},"modules.html":{},"overview.html":{}}}],["dataerror",{"_index":767,"title":{},"body":{"classes/QueryFailedFilter.html":{}}}],["dataobj",{"_index":847,"title":{},"body":{"guards/ResponseGuard.html":{}}}],["datapoints",{"_index":684,"title":{},"body":{"controllers/HealthController.html":{}}}],["date",{"_index":110,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"classes/BaseEntity.html":{},"classes/BaseModel.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"classes/Tag.html":{},"classes/User.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{}}}],["date().toisostring",{"_index":794,"title":{},"body":{"classes/QueryFailedFilter.html":{}}}],["date.now",{"_index":704,"title":{},"body":{"controllers/HealthController.html":{}}}],["db",{"_index":341,"title":{},"body":{"classes/BaseModel.html":{},"classes/QueryFailedFilter.html":{},"dependencies.html":{}}}],["dberrors",{"_index":340,"title":{},"body":{"classes/BaseModel.html":{}}}],["dbhelper",{"_index":557,"title":{"injectables/DBHelper.html":{}},"body":{"injectables/DBHelper.html":{},"coverage.html":{}}}],["debug",{"_index":607,"title":{},"body":{"modules/DatabaseModule.html":{},"miscellaneous/variables.html":{}}}],["declarations",{"_index":167,"title":{},"body":{"modules/AppModule.html":{},"modules/CronModule.html":{},"modules/TagsModule.html":{},"overview.html":{}}}],["declare",{"_index":383,"title":{},"body":{"injectables/CronService.html":{}}}],["decorators",{"_index":140,"title":{},"body":{"controllers/AppController.html":{},"classes/BaseEntity.html":{},"classes/BaseModel.html":{},"classes/CreateTagsDto.html":{},"injectables/CronService.html":{},"classes/CrudController.html":{},"classes/GetTagsResponseDto.html":{},"controllers/HealthController.html":{},"classes/PaginationParams.html":{},"controllers/TagsController.html":{}}}],["deeppartial",{"_index":436,"title":{},"body":{"classes/CrudController.html":{},"classes/CrudService.html":{},"interfaces/ICrudService.html":{},"interfaces/IPagination.html":{}}}],["default",{"_index":302,"title":{},"body":{"classes/BaseEntity.html":{},"injectables/CronService.html":{},"classes/GetManyDto.html":{},"classes/PaginationParams.html":{},"classes/Tag.html":{},"classes/User.html":{},"miscellaneous/variables.html":{}}}],["default('development",{"_index":235,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["define",{"_index":148,"title":{},"body":{"controllers/AppController.html":{}}}],["define,@typescript",{"_index":661,"title":{},"body":{"controllers/HealthController.html":{},"controllers/TagsController.html":{}}}],["defined",{"_index":141,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/BaseEntity.html":{},"classes/BaseModel.html":{},"classes/CreateTagsDto.html":{},"injectables/CronService.html":{},"classes/CrudController.html":{},"classes/CrudService.html":{},"injectables/DBHelper.html":{},"injectables/ExcludeNullUndefinedInterceptor.html":{},"classes/GetManyDto.html":{},"classes/GetTagsResponseDto.html":{},"controllers/HealthController.html":{},"interfaces/ICrudService.html":{},"classes/PaginationParams.html":{},"classes/QueryFailedFilter.html":{},"guards/RequestGuard.html":{},"guards/ResponseGuard.html":{},"classes/Tag.html":{},"controllers/TagsController.html":{},"injectables/TagsService.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/TransformInterceptor.html":{},"classes/User.html":{}}}],["delete",{"_index":425,"title":{},"body":{"classes/CrudController.html":{},"classes/CrudService.html":{},"interfaces/ICrudService.html":{},"controllers/TagsController.html":{},"injectables/TagsService.html":{}}}],["delete(':id",{"_index":442,"title":{},"body":{"classes/CrudController.html":{},"controllers/TagsController.html":{}}}],["delete(@param('id",{"_index":472,"title":{},"body":{"classes/CrudController.html":{}}}],["delete(criteria",{"_index":487,"title":{},"body":{"classes/CrudService.html":{}}}],["delete(id",{"_index":441,"title":{},"body":{"classes/CrudController.html":{},"interfaces/ICrudService.html":{},"interfaces/IPagination.html":{}}}],["delete(r",{"_index":888,"title":{},"body":{"controllers/TagsController.html":{}}}],["delete(undefined",{"_index":930,"title":{},"body":{"injectables/TagsService.html":{}}}],["deletebyid(id",{"_index":950,"title":{},"body":{"injectables/TagsService.html":{}}}],["deletedat",{"_index":289,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseModel.html":{},"classes/CreateTagsDto.html":{},"classes/GetTagsResponseDto.html":{},"classes/Tag.html":{},"classes/UpdateTagsDto.html":{},"classes/User.html":{}}}],["deletedatecolumn",{"_index":321,"title":{},"body":{"classes/BaseEntity.html":{}}}],["deleteresult",{"_index":716,"title":{},"body":{"interfaces/ICrudService.html":{},"interfaces/IPagination.html":{}}}],["dependencies",{"_index":165,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/CronModule.html":{},"classes/QueryFailedFilter.html":{},"modules/TagsModule.html":{},"dependencies.html":{},"overview.html":{}}}],["deps",{"_index":248,"title":{},"body":{"modules/AppModule.html":{}}}],["desc",{"_index":751,"title":{},"body":{"classes/PaginationParams.html":{},"miscellaneous/enumerations.html":{}}}],["described",{"_index":259,"title":{},"body":{"modules/AppModule.html":{}}}],["describes",{"_index":729,"title":{},"body":{"classes/PaginationParams.html":{}}}],["description",{"_index":326,"title":{},"body":{"classes/BaseEntity.html":{},"injectables/CronService.html":{},"injectables/ExcludeNullUndefinedInterceptor.html":{},"interfaces/IPagination-1.html":{},"classes/PaginationParams.html":{},"injectables/TimeoutInterceptor.html":{},"index.html":{}}}],["development",{"_index":1155,"title":{},"body":{"index.html":{}}}],["disable",{"_index":145,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"classes/CrudService.html":{},"modules/DatabaseModule.html":{},"injectables/ExcludeNullUndefinedInterceptor.html":{},"controllers/HealthController.html":{},"classes/QueryFailedFilter.html":{},"guards/RequestGuard.html":{},"interfaces/Response.html":{},"guards/ResponseGuard.html":{},"controllers/TagsController.html":{},"injectables/TransformInterceptor.html":{},"miscellaneous/variables.html":{}}}],["displayname",{"_index":983,"title":{},"body":{"classes/User.html":{}}}],["distance",{"_index":104,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{}}}],["distanceaway",{"_index":105,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{}}}],["dns",{"_index":676,"title":{},"body":{"controllers/HealthController.html":{}}}],["dnshealthindicator",{"_index":666,"title":{},"body":{"controllers/HealthController.html":{}}}],["docs",{"_index":692,"title":{},"body":{"controllers/HealthController.html":{}}}],["documentation",{"_index":1024,"title":{},"body":{"coverage.html":{}}}],["don't",{"_index":1005,"title":{},"body":{"classes/User.html":{}}}],["dotenv",{"_index":1093,"title":{},"body":{"dependencies.html":{}}}],["down",{"_index":1047,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["down(knex",{"_index":1136,"title":{},"body":{"miscellaneous/functions.html":{}}}],["dto.ts",{"_index":631,"title":{},"body":{"classes/GetManyDto.html":{},"coverage.html":{}}}],["dto.ts:10",{"_index":636,"title":{},"body":{"classes/GetManyDto.html":{}}}],["dto.ts:12",{"_index":637,"title":{},"body":{"classes/GetManyDto.html":{}}}],["dto.ts:4",{"_index":633,"title":{},"body":{"classes/GetManyDto.html":{}}}],["dto.ts:6",{"_index":634,"title":{},"body":{"classes/GetManyDto.html":{}}}],["dto.ts:8",{"_index":635,"title":{},"body":{"classes/GetManyDto.html":{}}}],["dumb",{"_index":989,"title":{},"body":{"classes/User.html":{}}}],["e",{"_index":968,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["e.g",{"_index":492,"title":{},"body":{"classes/CrudService.html":{}}}],["e2e",{"_index":1163,"title":{},"body":{"index.html":{}}}],["each",{"_index":615,"title":{},"body":{"injectables/ExcludeNullUndefinedInterceptor.html":{},"classes/User.html":{}}}],["efficient",{"_index":1146,"title":{},"body":{"index.html":{}}}],["email",{"_index":973,"title":{},"body":{"classes/User.html":{}}}],["emergencytype",{"_index":106,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{}}}],["empty",{"_index":617,"title":{},"body":{"injectables/ExcludeNullUndefinedInterceptor.html":{}}}],["end",{"_index":964,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["entity",{"_index":440,"title":{},"body":{"classes/CrudController.html":{},"classes/CrudService.html":{},"interfaces/ICrudService.html":{},"interfaces/IPagination.html":{}}}],["entity.id",{"_index":494,"title":{},"body":{"classes/CrudService.html":{}}}],["entity.ts",{"_index":287,"title":{},"body":{"classes/BaseEntity.html":{},"coverage.html":{}}}],["entity.ts:13",{"_index":305,"title":{},"body":{"classes/BaseEntity.html":{}}}],["entity.ts:23",{"_index":310,"title":{},"body":{"classes/BaseEntity.html":{}}}],["entity.ts:31",{"_index":316,"title":{},"body":{"classes/BaseEntity.html":{}}}],["entity.ts:35",{"_index":299,"title":{},"body":{"classes/BaseEntity.html":{}}}],["entity.ts:39",{"_index":312,"title":{},"body":{"classes/BaseEntity.html":{}}}],["entity.ts:43",{"_index":301,"title":{},"body":{"classes/BaseEntity.html":{}}}],["entitynotfound",{"_index":476,"title":{},"body":{"classes/CrudService.html":{}}}],["enum",{"_index":749,"title":{},"body":{"classes/PaginationParams.html":{}}}],["enumerations",{"_index":1124,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["err",{"_index":537,"title":{},"body":{"classes/CrudService.html":{},"controllers/HealthController.html":{}}}],["error",{"_index":12,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"classes/CrudService.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/ITryRequest.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"guards/ResponseGuard.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{},"miscellaneous/typealiases.html":{}}}],["error(error",{"_index":836,"title":{},"body":{"guards/ResponseGuard.html":{}}}],["error.errors",{"_index":843,"title":{},"body":{"guards/ResponseGuard.html":{}}}],["error.message",{"_index":842,"title":{},"body":{"guards/ResponseGuard.html":{}}}],["errors",{"_index":342,"title":{},"body":{"classes/BaseModel.html":{},"classes/QueryFailedFilter.html":{},"guards/ResponseGuard.html":{},"dependencies.html":{}}}],["eslint",{"_index":144,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"classes/CrudService.html":{},"modules/DatabaseModule.html":{},"injectables/ExcludeNullUndefinedInterceptor.html":{},"controllers/HealthController.html":{},"classes/QueryFailedFilter.html":{},"guards/RequestGuard.html":{},"interfaces/Response.html":{},"guards/ResponseGuard.html":{},"controllers/TagsController.html":{},"injectables/TransformInterceptor.html":{},"miscellaneous/variables.html":{}}}],["eslint/no",{"_index":193,"title":{},"body":{"modules/AppModule.html":{},"classes/CrudService.html":{},"modules/DatabaseModule.html":{},"injectables/ExcludeNullUndefinedInterceptor.html":{},"controllers/HealthController.html":{},"interfaces/Response.html":{},"guards/ResponseGuard.html":{},"controllers/TagsController.html":{},"injectables/TransformInterceptor.html":{}}}],["eslint/require",{"_index":199,"title":{},"body":{"modules/AppModule.html":{},"classes/CrudService.html":{},"modules/DatabaseModule.html":{},"miscellaneous/variables.html":{}}}],["example",{"_index":308,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseModel.html":{},"classes/CreateTagsDto.html":{},"classes/GetTagsResponseDto.html":{},"classes/UpdateTagsDto.html":{},"classes/User.html":{}}}],["exception",{"_index":774,"title":{},"body":{"classes/QueryFailedFilter.html":{}}}],["exceptionfilter",{"_index":763,"title":{},"body":{"classes/QueryFailedFilter.html":{}}}],["exclude",{"_index":245,"title":{},"body":{"modules/AppModule.html":{},"classes/BaseEntity.html":{},"classes/CreateTagsDto.html":{},"classes/GetTagsResponseDto.html":{},"classes/UpdateTagsDto.html":{}}}],["excludenullundefinedinterceptor",{"_index":609,"title":{"injectables/ExcludeNullUndefinedInterceptor.html":{}},"body":{"injectables/ExcludeNullUndefinedInterceptor.html":{},"coverage.html":{}}}],["executioncontext",{"_index":620,"title":{},"body":{"injectables/ExcludeNullUndefinedInterceptor.html":{},"guards/RequestGuard.html":{},"interfaces/Response.html":{},"guards/ResponseGuard.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/TransformInterceptor.html":{}}}],["export",{"_index":27,"title":{},"body":{"interfaces/APIResponse.html":{},"controllers/AppController.html":{},"interfaces/AppLaunchAction.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/BaseEntity.html":{},"classes/BaseModel.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"classes/CreateTagsDto.html":{},"modules/CronModule.html":{},"injectables/CronService.html":{},"classes/CrudController.html":{},"classes/CrudService.html":{},"injectables/DBHelper.html":{},"modules/DatabaseModule.html":{},"injectables/ExcludeNullUndefinedInterceptor.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"classes/GetManyDto.html":{},"interfaces/GetRescueList.html":{},"classes/GetTagsResponseDto.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"controllers/HealthController.html":{},"interfaces/ICrudService.html":{},"interfaces/IPagination.html":{},"interfaces/IPagination-1.html":{},"interfaces/ITryRequest.html":{},"classes/PaginationParams.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"classes/QueryFailedFilter.html":{},"guards/RequestGuard.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/Response.html":{},"guards/ResponseGuard.html":{},"classes/Tag.html":{},"controllers/TagsController.html":{},"modules/TagsModule.html":{},"injectables/TagsService.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateTagsDto.html":{},"classes/User.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{}}}],["exports",{"_index":170,"title":{},"body":{"modules/AppModule.html":{},"modules/CronModule.html":{},"modules/DatabaseModule.html":{},"modules/TagsModule.html":{},"overview.html":{}}}],["express",{"_index":1078,"title":{},"body":{"dependencies.html":{}}}],["extend.ts",{"_index":1042,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["extendmoment(momentdefault",{"_index":1204,"title":{},"body":{"miscellaneous/variables.html":{}}}],["extends",{"_index":131,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"classes/BaseModel.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"classes/CreateTagsDto.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"classes/GetTagsResponseDto.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"classes/Tag.html":{},"classes/UpdateTagsDto.html":{},"classes/User.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{}}}],["extraneous",{"_index":777,"title":{},"body":{"classes/QueryFailedFilter.html":{}}}],["fact16",{"_index":390,"title":{},"body":{"injectables/CronService.html":{}}}],["factorial",{"_index":393,"title":{},"body":{"injectables/CronService.html":{}}}],["factorial(n",{"_index":397,"title":{},"body":{"injectables/CronService.html":{}}}],["failed.filter.ts",{"_index":762,"title":{},"body":{"classes/QueryFailedFilter.html":{},"coverage.html":{}}}],["failed.filter.ts:29",{"_index":773,"title":{},"body":{"classes/QueryFailedFilter.html":{}}}],["false",{"_index":297,"title":{},"body":{"classes/BaseEntity.html":{},"classes/CrudService.html":{},"guards/ResponseGuard.html":{}}}],["feed",{"_index":100,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{}}}],["fields",{"_index":999,"title":{},"body":{"classes/User.html":{}}}],["file",{"_index":5,"title":{},"body":{"interfaces/APIResponse.html":{},"controllers/AppController.html":{},"interfaces/AppLaunchAction.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/BaseEntity.html":{},"classes/BaseModel.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"classes/CreateTagsDto.html":{},"modules/CronModule.html":{},"injectables/CronService.html":{},"classes/CrudController.html":{},"classes/CrudService.html":{},"injectables/DBHelper.html":{},"modules/DatabaseModule.html":{},"injectables/ExcludeNullUndefinedInterceptor.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"classes/GetManyDto.html":{},"interfaces/GetRescueList.html":{},"classes/GetTagsResponseDto.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"controllers/HealthController.html":{},"interfaces/ICrudService.html":{},"interfaces/IPagination.html":{},"interfaces/IPagination-1.html":{},"interfaces/ITryRequest.html":{},"classes/PaginationParams.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"classes/QueryFailedFilter.html":{},"guards/RequestGuard.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/Response.html":{},"guards/ResponseGuard.html":{},"classes/Tag.html":{},"controllers/TagsController.html":{},"modules/TagsModule.html":{},"injectables/TagsService.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateTagsDto.html":{},"classes/User.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{},"coverage.html":{}}}],["filename",{"_index":605,"title":{},"body":{"modules/DatabaseModule.html":{},"miscellaneous/variables.html":{}}}],["filter",{"_index":447,"title":{},"body":{"classes/CrudController.html":{},"classes/CrudService.html":{},"interfaces/ICrudService.html":{}}}],["filter((value",{"_index":582,"title":{},"body":{"injectables/DBHelper.html":{}}}],["find",{"_index":560,"title":{},"body":{"injectables/DBHelper.html":{}}}],["find(find",{"_index":563,"title":{},"body":{"injectables/DBHelper.html":{}}}],["findall",{"_index":426,"title":{},"body":{"classes/CrudController.html":{},"classes/CrudService.html":{},"interfaces/ICrudService.html":{},"controllers/TagsController.html":{},"injectables/TagsService.html":{}}}],["findall(@parsedrequest",{"_index":910,"title":{},"body":{"controllers/TagsController.html":{}}}],["findall(filter",{"_index":444,"title":{},"body":{"classes/CrudController.html":{},"classes/CrudService.html":{},"interfaces/ICrudService.html":{},"interfaces/IPagination.html":{}}}],["findall(r",{"_index":890,"title":{},"body":{"controllers/TagsController.html":{}}}],["findall(undefined",{"_index":932,"title":{},"body":{"injectables/TagsService.html":{}}}],["findby",{"_index":559,"title":{},"body":{"injectables/DBHelper.html":{}}}],["findbyid",{"_index":427,"title":{},"body":{"classes/CrudController.html":{}}}],["findbyid(@param('id",{"_index":464,"title":{},"body":{"classes/CrudController.html":{}}}],["findbyid(id",{"_index":448,"title":{},"body":{"classes/CrudController.html":{}}}],["findconditions",{"_index":488,"title":{},"body":{"classes/CrudService.html":{},"interfaces/ICrudService.html":{},"interfaces/IPagination.html":{}}}],["findmanyoptions",{"_index":484,"title":{},"body":{"classes/CrudService.html":{},"interfaces/ICrudService.html":{},"interfaces/IPagination.html":{}}}],["findone",{"_index":477,"title":{},"body":{"classes/CrudService.html":{},"interfaces/ICrudService.html":{},"interfaces/IPagination.html":{},"controllers/TagsController.html":{},"injectables/TagsService.html":{}}}],["findone(id",{"_index":497,"title":{},"body":{"classes/CrudService.html":{},"interfaces/ICrudService.html":{}}}],["findone(r",{"_index":892,"title":{},"body":{"controllers/TagsController.html":{}}}],["findone(undefined",{"_index":934,"title":{},"body":{"injectables/TagsService.html":{}}}],["findonebyid(id).pipe(map(entity",{"_index":493,"title":{},"body":{"classes/CrudService.html":{}}}],["findoneoptions",{"_index":498,"title":{},"body":{"classes/CrudService.html":{},"interfaces/ICrudService.html":{},"interfaces/IPagination.html":{}}}],["findoneorfail",{"_index":478,"title":{},"body":{"classes/CrudService.html":{}}}],["findoneorfail(id",{"_index":500,"title":{},"body":{"classes/CrudService.html":{}}}],["first",{"_index":262,"title":{},"body":{"modules/AppModule.html":{},"injectables/TagsService.html":{}}}],["firstname",{"_index":974,"title":{},"body":{"classes/User.html":{}}}],["fixme",{"_index":470,"title":{},"body":{"classes/CrudController.html":{}}}],["follower",{"_index":127,"title":{"interfaces/Follower.html":{}},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{},"coverage.html":{}}}],["following",{"_index":55,"title":{"interfaces/Following.html":{}},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{},"coverage.html":{}}}],["foreignkeyviolationerror",{"_index":768,"title":{},"body":{"classes/QueryFailedFilter.html":{}}}],["found",{"_index":531,"title":{},"body":{"classes/CrudService.html":{}}}],["framework",{"_index":1144,"title":{},"body":{"index.html":{}}}],["fs",{"_index":670,"title":{},"body":{"controllers/HealthController.html":{}}}],["function",{"_index":264,"title":{},"body":{"modules/AppModule.html":{},"guards/RequestGuard.html":{},"guards/ResponseGuard.html":{},"coverage.html":{}}}],["functions",{"_index":1126,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["fuzzy",{"_index":990,"title":{},"body":{"classes/User.html":{}}}],["gender",{"_index":56,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{}}}],["generated",{"_index":872,"title":{},"body":{"classes/Tag.html":{},"classes/User.html":{}}}],["generic",{"_index":723,"title":{},"body":{"interfaces/IPagination-1.html":{},"classes/PaginationParams.html":{}}}],["get(':id",{"_index":449,"title":{},"body":{"classes/CrudController.html":{},"controllers/TagsController.html":{}}}],["get()@httpcode(200)@healthcheck",{"_index":650,"title":{},"body":{"controllers/HealthController.html":{}}}],["getapplaunchdata",{"_index":29,"title":{"interfaces/GetAppLaunchData.html":{}},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["getcomments",{"_index":32,"title":{"interfaces/GetComments.html":{}},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["getfollowers",{"_index":34,"title":{"interfaces/GetFollowers.html":{}},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["getfollowing",{"_index":35,"title":{"interfaces/GetFollowing.html":{}},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["gethello",{"_index":139,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["getmanydefaultresponse",{"_index":632,"title":{},"body":{"classes/GetManyDto.html":{}}}],["getmanydto",{"_index":628,"title":{"classes/GetManyDto.html":{}},"body":{"classes/GetManyDto.html":{},"coverage.html":{}}}],["getnotifications",{"_index":80,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{}}}],["getpasswordhash",{"_index":479,"title":{},"body":{"classes/CrudService.html":{}}}],["getpasswordhash(password",{"_index":502,"title":{},"body":{"classes/CrudService.html":{}}}],["getrescuelist",{"_index":33,"title":{"interfaces/GetRescueList.html":{}},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["gettagsresponsedto",{"_index":372,"title":{"classes/GetTagsResponseDto.html":{}},"body":{"classes/CreateTagsDto.html":{},"classes/GetTagsResponseDto.html":{},"controllers/TagsController.html":{},"classes/UpdateTagsDto.html":{},"coverage.html":{}}}],["getting",{"_index":1140,"title":{"index.html":{}},"body":{}}],["getuserposts",{"_index":31,"title":{"interfaces/GetUserPosts.html":{}},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["getuserprofile",{"_index":30,"title":{"interfaces/GetUserProfile.html":{}},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["global",{"_index":588,"title":{},"body":{"modules/DatabaseModule.html":{},"modules/TagsModule.html":{}}}],["graph",{"_index":1192,"title":{},"body":{"modules.html":{}}}],["grow",{"_index":1170,"title":{},"body":{"index.html":{}}}],["guard",{"_index":795,"title":{"guards/RequestGuard.html":{},"guards/ResponseGuard.html":{}},"body":{"guards/RequestGuard.html":{},"coverage.html":{}}}],["guards",{"_index":797,"title":{},"body":{"guards/RequestGuard.html":{},"guards/ResponseGuard.html":{},"overview.html":{}}}],["handlecron",{"_index":394,"title":{},"body":{"injectables/CronService.html":{}}}],["handleinterval",{"_index":395,"title":{},"body":{"injectables/CronService.html":{}}}],["handletimeout",{"_index":396,"title":{},"body":{"injectables/CronService.html":{}}}],["hapi/joi",{"_index":210,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["health",{"_index":249,"title":{},"body":{"modules/AppModule.html":{},"controllers/HealthController.html":{}}}],["health/health.controller",{"_index":215,"title":{},"body":{"modules/AppModule.html":{}}}],["healthcheck",{"_index":667,"title":{},"body":{"controllers/HealthController.html":{}}}],["healthcheckservice",{"_index":668,"title":{},"body":{"controllers/HealthController.html":{}}}],["healthcontroller",{"_index":181,"title":{"controllers/HealthController.html":{}},"body":{"modules/AppModule.html":{},"controllers/HealthController.html":{},"coverage.html":{}}}],["hello",{"_index":282,"title":{},"body":{"injectables/AppService.html":{}}}],["helmet",{"_index":1096,"title":{},"body":{"dependencies.html":{}}}],["helpers",{"_index":804,"title":{},"body":{"guards/RequestGuard.html":{},"guards/ResponseGuard.html":{}}}],["here",{"_index":1178,"title":{},"body":{"index.html":{}}}],["host",{"_index":771,"title":{},"body":{"classes/QueryFailedFilter.html":{}}}],["host.switchtohttp",{"_index":779,"title":{},"body":{"classes/QueryFailedFilter.html":{}}}],["httpcode",{"_index":662,"title":{},"body":{"controllers/HealthController.html":{}}}],["httpcode(200",{"_index":689,"title":{},"body":{"controllers/HealthController.html":{}}}],["httpexception",{"_index":775,"title":{},"body":{"classes/QueryFailedFilter.html":{}}}],["https://docs.nestjs.com",{"_index":693,"title":{},"body":{"controllers/HealthController.html":{}}}],["https://github.com/microsoft/typescript/issues/21592",{"_index":535,"title":{},"body":{"classes/CrudService.html":{}}}],["https://github.com/typeorm/typeorm/issues/1544",{"_index":471,"title":{},"body":{"classes/CrudController.html":{}}}],["https://nestjs.com",{"_index":1185,"title":{},"body":{"index.html":{}}}],["httpstatus",{"_index":24,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"classes/QueryFailedFilter.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{}}}],["httpstatus.precondition_failed",{"_index":784,"title":{},"body":{"classes/QueryFailedFilter.html":{}}}],["icrud.service",{"_index":460,"title":{},"body":{"classes/CrudController.html":{},"classes/CrudService.html":{}}}],["icrudservice",{"_index":432,"title":{"interfaces/ICrudService.html":{}},"body":{"classes/CrudController.html":{},"classes/CrudService.html":{},"interfaces/ICrudService.html":{},"interfaces/IPagination.html":{},"coverage.html":{}}}],["id",{"_index":290,"title":{},"body":{"classes/BaseEntity.html":{},"classes/CreateTagsDto.html":{},"classes/CrudController.html":{},"classes/CrudService.html":{},"classes/GetTagsResponseDto.html":{},"interfaces/ICrudService.html":{},"interfaces/IPagination.html":{},"classes/Tag.html":{},"controllers/TagsController.html":{},"injectables/TagsService.html":{},"classes/UpdateTagsDto.html":{},"classes/User.html":{}}}],["identifier",{"_index":1025,"title":{},"body":{"coverage.html":{}}}],["ignore",{"_index":547,"title":{},"body":{"classes/CrudService.html":{},"controllers/HealthController.html":{},"classes/QueryFailedFilter.html":{}}}],["implements",{"_index":250,"title":{},"body":{"modules/AppModule.html":{},"classes/CrudService.html":{},"injectables/ExcludeNullUndefinedInterceptor.html":{},"classes/GetManyDto.html":{},"controllers/HealthController.html":{},"classes/QueryFailedFilter.html":{},"guards/RequestGuard.html":{},"interfaces/Response.html":{},"guards/ResponseGuard.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/TransformInterceptor.html":{}}}],["import",{"_index":25,"title":{},"body":{"interfaces/APIResponse.html":{},"controllers/AppController.html":{},"interfaces/AppLaunchAction.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/BaseEntity.html":{},"classes/BaseModel.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"classes/CreateTagsDto.html":{},"modules/CronModule.html":{},"injectables/CronService.html":{},"classes/CrudController.html":{},"classes/CrudService.html":{},"injectables/DBHelper.html":{},"modules/DatabaseModule.html":{},"injectables/ExcludeNullUndefinedInterceptor.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"classes/GetManyDto.html":{},"interfaces/GetRescueList.html":{},"classes/GetTagsResponseDto.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"controllers/HealthController.html":{},"interfaces/ICrudService.html":{},"interfaces/IPagination.html":{},"classes/PaginationParams.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"classes/QueryFailedFilter.html":{},"guards/RequestGuard.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/Response.html":{},"guards/ResponseGuard.html":{},"classes/Tag.html":{},"controllers/TagsController.html":{},"modules/TagsModule.html":{},"injectables/TagsService.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateTagsDto.html":{},"classes/User.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{}}}],["import/no",{"_index":776,"title":{},"body":{"classes/QueryFailedFilter.html":{}}}],["imports",{"_index":182,"title":{},"body":{"modules/AppModule.html":{}}}],["in,no",{"_index":812,"title":{},"body":{"guards/RequestGuard.html":{}}}],["included",{"_index":719,"title":{},"body":{"interfaces/ICrudService.html":{},"interfaces/IPagination.html":{},"interfaces/IPagination-1.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"interfaces/APIResponse.html":{},"controllers/AppController.html":{},"interfaces/AppLaunchAction.html":{},"injectables/AppService.html":{},"classes/BaseEntity.html":{},"classes/BaseModel.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"classes/CreateTagsDto.html":{},"injectables/CronService.html":{},"classes/CrudController.html":{},"classes/CrudService.html":{},"injectables/DBHelper.html":{},"injectables/ExcludeNullUndefinedInterceptor.html":{},"interfaces/Follower.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"classes/GetManyDto.html":{},"interfaces/GetRescueList.html":{},"classes/GetTagsResponseDto.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"controllers/HealthController.html":{},"interfaces/ICrudService.html":{},"interfaces/IPagination.html":{},"interfaces/IPagination-1.html":{},"interfaces/ITryRequest.html":{},"classes/PaginationParams.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"classes/QueryFailedFilter.html":{},"guards/RequestGuard.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/Response.html":{},"guards/ResponseGuard.html":{},"classes/Tag.html":{},"controllers/TagsController.html":{},"injectables/TagsService.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/TransformInterceptor.html":{},"classes/User.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["index(@res",{"_index":678,"title":{},"body":{"controllers/HealthController.html":{}}}],["index(response",{"_index":655,"title":{},"body":{"controllers/HealthController.html":{}}}],["info",{"_index":3,"title":{},"body":{"interfaces/APIResponse.html":{},"controllers/AppController.html":{},"interfaces/AppLaunchAction.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/BaseEntity.html":{},"classes/BaseModel.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"classes/CreateTagsDto.html":{},"modules/CronModule.html":{},"injectables/CronService.html":{},"classes/CrudController.html":{},"classes/CrudService.html":{},"injectables/DBHelper.html":{},"modules/DatabaseModule.html":{},"injectables/ExcludeNullUndefinedInterceptor.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"classes/GetManyDto.html":{},"interfaces/GetRescueList.html":{},"classes/GetTagsResponseDto.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"controllers/HealthController.html":{},"interfaces/ICrudService.html":{},"interfaces/IPagination.html":{},"interfaces/IPagination-1.html":{},"interfaces/ITryRequest.html":{},"classes/PaginationParams.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"classes/QueryFailedFilter.html":{},"guards/RequestGuard.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/Response.html":{},"guards/ResponseGuard.html":{},"classes/Tag.html":{},"controllers/TagsController.html":{},"modules/TagsModule.html":{},"injectables/TagsService.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateTagsDto.html":{},"classes/User.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{}}}],["initialized",{"_index":274,"title":{},"body":{"modules/AppModule.html":{},"controllers/HealthController.html":{}}}],["inject",{"_index":938,"title":{},"body":{"injectables/TagsService.html":{}}}],["injectable",{"_index":278,"title":{"injectables/AppService.html":{},"injectables/CronService.html":{},"injectables/DBHelper.html":{},"injectables/ExcludeNullUndefinedInterceptor.html":{},"injectables/TagsService.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/TransformInterceptor.html":{}},"body":{"injectables/AppService.html":{},"injectables/CronService.html":{},"injectables/DBHelper.html":{},"injectables/ExcludeNullUndefinedInterceptor.html":{},"guards/RequestGuard.html":{},"interfaces/Response.html":{},"guards/ResponseGuard.html":{},"injectables/TagsService.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/TransformInterceptor.html":{},"coverage.html":{}}}],["injectables",{"_index":279,"title":{},"body":{"injectables/AppService.html":{},"injectables/CronService.html":{},"injectables/DBHelper.html":{},"injectables/ExcludeNullUndefinedInterceptor.html":{},"injectables/TagsService.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/TransformInterceptor.html":{},"overview.html":{}}}],["inputs",{"_index":808,"title":{},"body":{"guards/RequestGuard.html":{}}}],["inputs[key",{"_index":816,"title":{},"body":{"guards/RequestGuard.html":{}}}],["installation",{"_index":1152,"title":{},"body":{"index.html":{}}}],["installrunning",{"_index":1154,"title":{},"body":{"index.html":{}}}],["instance",{"_index":877,"title":{},"body":{"classes/Tag.html":{},"classes/User.html":{}}}],["instanceof",{"_index":818,"title":{},"body":{"guards/RequestGuard.html":{},"guards/ResponseGuard.html":{},"injectables/TimeoutInterceptor.html":{}}}],["integer",{"_index":860,"title":{},"body":{"classes/Tag.html":{},"classes/User.html":{}}}],["intercept",{"_index":618,"title":{},"body":{"injectables/ExcludeNullUndefinedInterceptor.html":{},"interfaces/Response.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/TransformInterceptor.html":{}}}],["intercept(context",{"_index":619,"title":{},"body":{"injectables/ExcludeNullUndefinedInterceptor.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/TransformInterceptor.html":{}}}],["interceptor",{"_index":954,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["interceptors",{"_index":613,"title":{},"body":{"injectables/ExcludeNullUndefinedInterceptor.html":{}}}],["interface",{"_index":0,"title":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/ICrudService.html":{},"interfaces/IPagination.html":{},"interfaces/IPagination-1.html":{},"interfaces/ITryRequest.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/Response.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{}},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/ICrudService.html":{},"interfaces/IPagination.html":{},"interfaces/IPagination-1.html":{},"interfaces/ITryRequest.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{},"coverage.html":{}}}],["interfaces",{"_index":2,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/ICrudService.html":{},"interfaces/IPagination.html":{},"interfaces/IPagination-1.html":{},"interfaces/ITryRequest.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/Response.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{},"overview.html":{}}}],["interval",{"_index":382,"title":{},"body":{"injectables/CronService.html":{},"controllers/HealthController.html":{}}}],["interval(100000",{"_index":402,"title":{},"body":{"injectables/CronService.html":{}}}],["interval(5000).pipe",{"_index":686,"title":{},"body":{"controllers/HealthController.html":{}}}],["ipagination",{"_index":718,"title":{"interfaces/IPagination.html":{},"interfaces/IPagination-1.html":{}},"body":{"interfaces/ICrudService.html":{},"interfaces/IPagination.html":{},"interfaces/IPagination-1.html":{},"coverage.html":{}}}],["isactive",{"_index":49,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"classes/User.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{}}}],["isglobal",{"_index":219,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["isnotempty",{"_index":363,"title":{},"body":{"classes/CreateTagsDto.html":{},"classes/GetTagsResponseDto.html":{},"classes/UpdateTagsDto.html":{}}}],["isoptional",{"_index":364,"title":{},"body":{"classes/CreateTagsDto.html":{},"classes/GetTagsResponseDto.html":{},"classes/PaginationParams.html":{},"classes/UpdateTagsDto.html":{}}}],["isownprofile",{"_index":57,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{}}}],["isrecent",{"_index":99,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{}}}],["isrescuer",{"_index":58,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{}}}],["isstring",{"_index":361,"title":{},"body":{"classes/CreateTagsDto.html":{},"classes/GetTagsResponseDto.html":{},"classes/UpdateTagsDto.html":{}}}],["isuserreactedtopost",{"_index":87,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{}}}],["items",{"_index":518,"title":{},"body":{"classes/CrudService.html":{},"interfaces/ICrudService.html":{},"interfaces/IPagination.html":{},"interfaces/IPagination-1.html":{}}}],["itryrequest",{"_index":724,"title":{"interfaces/ITryRequest.html":{}},"body":{"interfaces/ITryRequest.html":{},"coverage.html":{}}}],["jobs",{"_index":381,"title":{},"body":{"injectables/CronService.html":{}}}],["joi",{"_index":209,"title":{},"body":{"modules/AppModule.html":{}}}],["joi.number().default(3000",{"_index":227,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["joi.object",{"_index":225,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["joi.string",{"_index":229,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["joi.string().required",{"_index":237,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["join",{"_index":211,"title":{},"body":{"modules/AppModule.html":{},"controllers/HealthController.html":{},"index.html":{}}}],["join(__dirname",{"_index":243,"title":{},"body":{"modules/AppModule.html":{}}}],["json",{"_index":870,"title":{},"body":{"classes/Tag.html":{},"classes/User.html":{}}}],["jsonschema",{"_index":855,"title":{},"body":{"classes/Tag.html":{},"classes/User.html":{}}}],["kamil",{"_index":1182,"title":{},"body":{"index.html":{}}}],["keep",{"_index":683,"title":{},"body":{"controllers/HealthController.html":{}}}],["key",{"_index":815,"title":{},"body":{"guards/RequestGuard.html":{}}}],["keyof",{"_index":759,"title":{},"body":{"classes/PaginationParams.html":{}}}],["knex",{"_index":589,"title":{},"body":{"modules/DatabaseModule.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["knex.sqlite",{"_index":606,"title":{},"body":{"modules/DatabaseModule.html":{},"miscellaneous/variables.html":{}}}],["knexconnection",{"_index":599,"title":{},"body":{"modules/DatabaseModule.html":{},"miscellaneous/variables.html":{}}}],["knexsnakecasemappers",{"_index":590,"title":{},"body":{"modules/DatabaseModule.html":{},"miscellaneous/variables.html":{}}}],["lastname",{"_index":975,"title":{},"body":{"classes/User.html":{}}}],["latitude",{"_index":59,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{}}}],["legend",{"_index":166,"title":{},"body":{"modules/AppModule.html":{},"modules/CronModule.html":{},"modules/TagsModule.html":{},"overview.html":{}}}],["license",{"_index":1188,"title":{},"body":{"index.html":{}}}],["licensed",{"_index":1167,"title":{},"body":{"index.html":{}}}],["limit",{"_index":745,"title":{},"body":{"classes/PaginationParams.html":{},"dependencies.html":{}}}],["line",{"_index":525,"title":{},"body":{"classes/CrudService.html":{},"modules/DatabaseModule.html":{},"injectables/ExcludeNullUndefinedInterceptor.html":{},"classes/QueryFailedFilter.html":{},"guards/RequestGuard.html":{},"interfaces/Response.html":{},"guards/ResponseGuard.html":{},"injectables/TransformInterceptor.html":{},"miscellaneous/variables.html":{}}}],["link",{"_index":37,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{}}}],["listing",{"_index":720,"title":{},"body":{"interfaces/ICrudService.html":{},"interfaces/IPagination.html":{},"interfaces/IPagination-1.html":{}}}],["literal",{"_index":821,"title":{},"body":{"interfaces/Rescues.html":{}}}],["local",{"_index":1107,"title":{},"body":{"dependencies.html":{}}}],["lodash",{"_index":570,"title":{},"body":{"injectables/DBHelper.html":{},"dependencies.html":{}}}],["logger",{"_index":391,"title":{},"body":{"injectables/CronService.html":{}}}],["logger(cronservice.name",{"_index":410,"title":{},"body":{"injectables/CronService.html":{}}}],["logging",{"_index":238,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["longitude",{"_index":60,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{}}}],["many",{"_index":630,"title":{},"body":{"classes/GetManyDto.html":{},"coverage.html":{}}}],["map",{"_index":626,"title":{},"body":{"injectables/ExcludeNullUndefinedInterceptor.html":{},"controllers/HealthController.html":{},"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{},"dependencies.html":{}}}],["map((_",{"_index":687,"title":{},"body":{"controllers/HealthController.html":{}}}],["match",{"_index":991,"title":{},"body":{"classes/User.html":{}}}],["matching",{"_index":132,"title":{},"body":{"interfaces/APIResponse.html":{},"controllers/AppController.html":{},"interfaces/AppLaunchAction.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/BaseEntity.html":{},"classes/BaseModel.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"classes/CreateTagsDto.html":{},"modules/CronModule.html":{},"injectables/CronService.html":{},"classes/CrudController.html":{},"classes/CrudService.html":{},"injectables/DBHelper.html":{},"modules/DatabaseModule.html":{},"injectables/ExcludeNullUndefinedInterceptor.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"classes/GetManyDto.html":{},"interfaces/GetRescueList.html":{},"classes/GetTagsResponseDto.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"controllers/HealthController.html":{},"interfaces/ICrudService.html":{},"interfaces/IPagination.html":{},"interfaces/IPagination-1.html":{},"interfaces/ITryRequest.html":{},"classes/PaginationParams.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"classes/QueryFailedFilter.html":{},"guards/RequestGuard.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/Response.html":{},"guards/ResponseGuard.html":{},"classes/Tag.html":{},"controllers/TagsController.html":{},"modules/TagsModule.html":{},"injectables/TagsService.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateTagsDto.html":{},"classes/User.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["max",{"_index":747,"title":{},"body":{"classes/PaginationParams.html":{}}}],["max(50",{"_index":755,"title":{},"body":{"classes/PaginationParams.html":{}}}],["maximum",{"_index":742,"title":{},"body":{"classes/PaginationParams.html":{}}}],["maxlength",{"_index":365,"title":{},"body":{"classes/CreateTagsDto.html":{},"classes/GetTagsResponseDto.html":{},"classes/Tag.html":{},"classes/UpdateTagsDto.html":{},"classes/User.html":{}}}],["maxlength(36",{"_index":369,"title":{},"body":{"classes/CreateTagsDto.html":{},"classes/GetTagsResponseDto.html":{},"classes/UpdateTagsDto.html":{}}}],["mb",{"_index":698,"title":{},"body":{"controllers/HealthController.html":{}}}],["member",{"_index":197,"title":{},"body":{"modules/AppModule.html":{},"controllers/HealthController.html":{}}}],["memory",{"_index":685,"title":{},"body":{"controllers/HealthController.html":{}}}],["mergemap",{"_index":512,"title":{},"body":{"classes/CrudService.html":{}}}],["mergemap((signal",{"_index":555,"title":{},"body":{"classes/CrudService.html":{}}}],["message",{"_index":13,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"classes/QueryFailedFilter.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"guards/ResponseGuard.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{}}}],["messageevent",{"_index":663,"title":{},"body":{"controllers/HealthController.html":{}}}],["meta",{"_index":848,"title":{},"body":{"guards/ResponseGuard.html":{}}}],["metadata",{"_index":1111,"title":{},"body":{"dependencies.html":{}}}],["method",{"_index":384,"title":{},"body":{"injectables/CronService.html":{},"classes/CrudService.html":{}}}],["methods",{"_index":138,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"injectables/CronService.html":{},"classes/CrudController.html":{},"classes/CrudService.html":{},"injectables/DBHelper.html":{},"injectables/ExcludeNullUndefinedInterceptor.html":{},"controllers/HealthController.html":{},"interfaces/ICrudService.html":{},"classes/QueryFailedFilter.html":{},"guards/RequestGuard.html":{},"guards/ResponseGuard.html":{},"controllers/TagsController.html":{},"injectables/TagsService.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/TransformInterceptor.html":{}}}],["metrics",{"_index":654,"title":{},"body":{"controllers/HealthController.html":{}}}],["metrics.os",{"_index":705,"title":{},"body":{"controllers/HealthController.html":{}}}],["milliseconds",{"_index":966,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["min",{"_index":748,"title":{},"body":{"classes/PaginationParams.html":{}}}],["min(0",{"_index":754,"title":{},"body":{"classes/PaginationParams.html":{}}}],["minimum",{"_index":737,"title":{},"body":{"classes/PaginationParams.html":{}}}],["minlength",{"_index":362,"title":{},"body":{"classes/CreateTagsDto.html":{},"classes/GetTagsResponseDto.html":{},"classes/Tag.html":{},"classes/UpdateTagsDto.html":{},"classes/User.html":{}}}],["minlength(2",{"_index":368,"title":{},"body":{"classes/CreateTagsDto.html":{},"classes/GetTagsResponseDto.html":{},"classes/UpdateTagsDto.html":{}}}],["miscellaneous",{"_index":1123,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":1166,"title":{},"body":{"index.html":{}}}],["mixed",{"_index":1006,"title":{},"body":{"classes/User.html":{}}}],["mixin",{"_index":338,"title":{},"body":{"classes/BaseModel.html":{}}}],["mixin(model",{"_index":345,"title":{},"body":{"classes/BaseModel.html":{}}}],["mode",{"_index":1158,"title":{},"body":{"index.html":{}}}],["model",{"_index":333,"title":{},"body":{"classes/BaseModel.html":{},"modules/DatabaseModule.html":{},"classes/Tag.html":{},"classes/User.html":{},"miscellaneous/variables.html":{}}}],["model.knex(knex",{"_index":608,"title":{},"body":{"modules/DatabaseModule.html":{},"miscellaneous/variables.html":{}}}],["model.name",{"_index":597,"title":{},"body":{"modules/DatabaseModule.html":{},"miscellaneous/variables.html":{}}}],["modelclass",{"_index":925,"title":{},"body":{"injectables/TagsService.html":{}}}],["modeloptions",{"_index":334,"title":{},"body":{"classes/BaseModel.html":{}}}],["modelproviders",{"_index":594,"title":{},"body":{"modules/DatabaseModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["models",{"_index":593,"title":{},"body":{"modules/DatabaseModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["models.map((model",{"_index":595,"title":{},"body":{"modules/DatabaseModule.html":{},"miscellaneous/variables.html":{}}}],["models/tag.model",{"_index":592,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["modifier",{"_index":868,"title":{},"body":{"classes/Tag.html":{},"classes/User.html":{}}}],["modifiers",{"_index":976,"title":{},"body":{"classes/User.html":{}}}],["module",{"_index":162,"title":{"modules/AppModule.html":{},"modules/CronModule.html":{},"modules/DatabaseModule.html":{},"modules/TagsModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CronModule.html":{},"modules/DatabaseModule.html":{},"modules/TagsModule.html":{},"overview.html":{}}}],["modules",{"_index":164,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/CronModule.html":{},"modules/DatabaseModule.html":{},"modules/TagsModule.html":{},"modules.html":{},"overview.html":{}}}],["moment",{"_index":1043,"title":{},"body":{"coverage.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["more",{"_index":958,"title":{},"body":{"injectables/TimeoutInterceptor.html":{},"index.html":{}}}],["myśliwiec",{"_index":1183,"title":{},"body":{"index.html":{}}}],["n",{"_index":399,"title":{},"body":{"injectables/CronService.html":{}}}],["name",{"_index":115,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"modules/AppModule.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"classes/CreateTagsDto.html":{},"injectables/CronService.html":{},"classes/CrudController.html":{},"classes/CrudService.html":{},"injectables/DBHelper.html":{},"injectables/ExcludeNullUndefinedInterceptor.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"classes/GetTagsResponseDto.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"controllers/HealthController.html":{},"interfaces/ICrudService.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"classes/QueryFailedFilter.html":{},"guards/RequestGuard.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"guards/ResponseGuard.html":{},"classes/Tag.html":{},"controllers/TagsController.html":{},"injectables/TagsService.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateTagsDto.html":{},"classes/User.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{},"miscellaneous/functions.html":{}}}],["name.trim().split(/\\s",{"_index":1009,"title":{},"body":{"classes/User.html":{}}}],["namepart",{"_index":1008,"title":{},"body":{"classes/User.html":{}}}],["namepart.tolowercase",{"_index":1011,"title":{},"body":{"classes/User.html":{}}}],["nativeerror",{"_index":785,"title":{},"body":{"classes/QueryFailedFilter.html":{}}}],["nest",{"_index":268,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["nestframework",{"_index":1187,"title":{},"body":{"index.html":{}}}],["nestinterceptor",{"_index":625,"title":{},"body":{"injectables/ExcludeNullUndefinedInterceptor.html":{},"interfaces/Response.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/TransformInterceptor.html":{}}}],["nestjs/common",{"_index":26,"title":{},"body":{"interfaces/APIResponse.html":{},"controllers/AppController.html":{},"interfaces/AppLaunchAction.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"modules/CronModule.html":{},"injectables/CronService.html":{},"classes/CrudController.html":{},"classes/CrudService.html":{},"injectables/DBHelper.html":{},"modules/DatabaseModule.html":{},"injectables/ExcludeNullUndefinedInterceptor.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"controllers/HealthController.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"classes/QueryFailedFilter.html":{},"guards/RequestGuard.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/Response.html":{},"guards/ResponseGuard.html":{},"controllers/TagsController.html":{},"modules/TagsModule.html":{},"injectables/TagsService.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/TransformInterceptor.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{},"dependencies.html":{}}}],["nestjs/config",{"_index":202,"title":{},"body":{"modules/AppModule.html":{},"controllers/HealthController.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":1071,"title":{},"body":{"dependencies.html":{}}}],["nestjs/mapped",{"_index":1072,"title":{},"body":{"dependencies.html":{}}}],["nestjs/passport",{"_index":1075,"title":{},"body":{"dependencies.html":{}}}],["nestjs/platform",{"_index":1077,"title":{},"body":{"dependencies.html":{}}}],["nestjs/schedule",{"_index":204,"title":{},"body":{"modules/AppModule.html":{},"injectables/CronService.html":{},"dependencies.html":{}}}],["nestjs/serve",{"_index":206,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["nestjs/swagger",{"_index":150,"title":{},"body":{"controllers/AppController.html":{},"classes/BaseEntity.html":{},"classes/BaseModel.html":{},"classes/CreateTagsDto.html":{},"classes/GetTagsResponseDto.html":{},"controllers/HealthController.html":{},"classes/PaginationParams.html":{},"controllers/TagsController.html":{},"classes/UpdateTagsDto.html":{},"dependencies.html":{}}}],["nestjs/terminus",{"_index":208,"title":{},"body":{"modules/AppModule.html":{},"controllers/HealthController.html":{},"dependencies.html":{}}}],["nestjs/typeorm",{"_index":1085,"title":{},"body":{"dependencies.html":{}}}],["nestjsx/crud",{"_index":902,"title":{},"body":{"controllers/TagsController.html":{},"injectables/TagsService.html":{},"dependencies.html":{}}}],["nestjsx/crud/lib/interfaces/get",{"_index":638,"title":{},"body":{"classes/GetManyDto.html":{}}}],["new",{"_index":350,"title":{},"body":{"classes/BaseModel.html":{},"injectables/CronService.html":{},"classes/CrudService.html":{},"classes/QueryFailedFilter.html":{},"coverage.html":{}}}],["new_values",{"_index":566,"title":{},"body":{"injectables/DBHelper.html":{}}}],["next",{"_index":540,"title":{},"body":{"classes/CrudService.html":{},"modules/DatabaseModule.html":{},"injectables/ExcludeNullUndefinedInterceptor.html":{},"classes/QueryFailedFilter.html":{},"guards/RequestGuard.html":{},"interfaces/Response.html":{},"guards/ResponseGuard.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/TransformInterceptor.html":{},"miscellaneous/variables.html":{}}}],["next.handle().pipe",{"_index":627,"title":{},"body":{"injectables/ExcludeNullUndefinedInterceptor.html":{},"injectables/TimeoutInterceptor.html":{}}}],["next.handle().pipe(map((data",{"_index":824,"title":{},"body":{"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["nocontent",{"_index":844,"title":{},"body":{"guards/ResponseGuard.html":{}}}],["node.js",{"_index":1143,"title":{},"body":{"index.html":{}}}],["node_env",{"_index":228,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["notfoundexception",{"_index":507,"title":{},"body":{"classes/CrudService.html":{}}}],["notfoundexception(`the",{"_index":529,"title":{},"body":{"classes/CrudService.html":{}}}],["nothing",{"_index":871,"title":{},"body":{"classes/Tag.html":{},"classes/User.html":{}}}],["notnullviolationerror",{"_index":769,"title":{},"body":{"classes/QueryFailedFilter.html":{}}}],["npm",{"_index":1153,"title":{},"body":{"index.html":{}}}],["null",{"_index":36,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"classes/BaseEntity.html":{},"classes/BaseModel.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"injectables/ExcludeNullUndefinedInterceptor.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"guards/ResponseGuard.html":{},"classes/Tag.html":{},"classes/User.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{},"miscellaneous/typealiases.html":{}}}],["nullable",{"_index":298,"title":{},"body":{"classes/BaseEntity.html":{}}}],["number",{"_index":18,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"classes/BaseEntity.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"classes/CreateTagsDto.html":{},"injectables/CronService.html":{},"classes/CrudService.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"classes/GetManyDto.html":{},"interfaces/GetRescueList.html":{},"classes/GetTagsResponseDto.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/ICrudService.html":{},"interfaces/IPagination.html":{},"interfaces/IPagination-1.html":{},"classes/PaginationParams.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"classes/Tag.html":{},"controllers/TagsController.html":{},"injectables/TagsService.html":{},"classes/UpdateTagsDto.html":{},"classes/User.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{}}}],["numberoffollowers",{"_index":61,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{}}}],["numberoffollowing",{"_index":62,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{}}}],["numberofposts",{"_index":63,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{}}}],["numberofrescuescompleted",{"_index":64,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{}}}],["numberofrescuescreated",{"_index":65,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{}}}],["numberofrescuesinprogress",{"_index":66,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{}}}],["obj",{"_index":532,"title":{},"body":{"classes/CrudService.html":{}}}],["object",{"_index":841,"title":{},"body":{"guards/ResponseGuard.html":{},"classes/Tag.html":{},"classes/User.html":{},"miscellaneous/variables.html":{}}}],["objection",{"_index":339,"title":{},"body":{"classes/BaseModel.html":{},"modules/DatabaseModule.html":{},"classes/QueryFailedFilter.html":{},"classes/Tag.html":{},"injectables/TagsService.html":{},"classes/User.html":{},"dependencies.html":{}}}],["observable",{"_index":624,"title":{},"body":{"injectables/ExcludeNullUndefinedInterceptor.html":{},"controllers/HealthController.html":{},"guards/RequestGuard.html":{},"interfaces/Response.html":{},"guards/ResponseGuard.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/TransformInterceptor.html":{}}}],["observer",{"_index":955,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["occurrence",{"_index":616,"title":{},"body":{"injectables/ExcludeNullUndefinedInterceptor.html":{}}}],["of(signal",{"_index":556,"title":{},"body":{"classes/CrudService.html":{}}}],["offset",{"_index":740,"title":{},"body":{"classes/PaginationParams.html":{}}}],["ok",{"_index":421,"title":{},"body":{"injectables/CronService.html":{}}}],["onapplicationshutdown",{"_index":183,"title":{},"body":{"modules/AppModule.html":{},"controllers/HealthController.html":{}}}],["onapplicationshutdown(signal",{"_index":184,"title":{},"body":{"modules/AppModule.html":{},"controllers/HealthController.html":{}}}],["once",{"_index":389,"title":{},"body":{"injectables/CronService.html":{}}}],["onmoduledestroy",{"_index":256,"title":{},"body":{"modules/AppModule.html":{}}}],["onmoduleinit",{"_index":190,"title":{},"body":{"modules/AppModule.html":{},"controllers/HealthController.html":{}}}],["open",{"_index":1168,"title":{},"body":{"index.html":{}}}],["optional",{"_index":9,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"modules/AppModule.html":{},"classes/BaseEntity.html":{},"classes/BaseModel.html":{},"injectables/CronService.html":{},"classes/CrudController.html":{},"classes/CrudService.html":{},"injectables/DBHelper.html":{},"injectables/ExcludeNullUndefinedInterceptor.html":{},"controllers/HealthController.html":{},"interfaces/ICrudService.html":{},"interfaces/ITryRequest.html":{},"classes/PaginationParams.html":{},"classes/QueryFailedFilter.html":{},"guards/RequestGuard.html":{},"guards/ResponseGuard.html":{},"classes/Tag.html":{},"controllers/TagsController.html":{},"injectables/TagsService.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/TransformInterceptor.html":{},"classes/User.html":{},"miscellaneous/functions.html":{}}}],["options",{"_index":437,"title":{},"body":{"classes/CrudController.html":{},"classes/CrudService.html":{},"interfaces/ICrudService.html":{},"interfaces/IPagination.html":{},"controllers/TagsController.html":{},"injectables/TagsService.html":{}}}],["order",{"_index":730,"title":{},"body":{"classes/PaginationParams.html":{}}}],["orderby",{"_index":735,"title":{},"body":{"classes/PaginationParams.html":{}}}],["ordertype",{"_index":750,"title":{},"body":{"classes/PaginationParams.html":{},"miscellaneous/enumerations.html":{}}}],["os",{"_index":671,"title":{},"body":{"controllers/HealthController.html":{}}}],["os.loadavg",{"_index":702,"title":{},"body":{"controllers/HealthController.html":{}}}],["out",{"_index":179,"title":{},"body":{"modules/AppModule.html":{},"modules/CronModule.html":{},"modules/TagsModule.html":{},"overview.html":{}}}],["override.ts",{"_index":612,"title":{},"body":{"injectables/ExcludeNullUndefinedInterceptor.html":{},"coverage.html":{}}}],["override.ts:16",{"_index":622,"title":{},"body":{"injectables/ExcludeNullUndefinedInterceptor.html":{}}}],["overview",{"_index":1193,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["ownpage",{"_index":88,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{}}}],["p",{"_index":758,"title":{},"body":{"classes/PaginationParams.html":{}}}],["package",{"_index":1067,"title":{"dependencies.html":{}},"body":{}}],["page",{"_index":14,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"classes/GetManyDto.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{}}}],["pagecount",{"_index":15,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"classes/GetManyDto.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{}}}],["pagination",{"_index":461,"title":{},"body":{"classes/CrudController.html":{},"interfaces/IPagination-1.html":{},"classes/PaginationParams.html":{}}}],["paginationparams",{"_index":445,"title":{"classes/PaginationParams.html":{}},"body":{"classes/CrudController.html":{},"classes/PaginationParams.html":{},"coverage.html":{}}}],["param",{"_index":457,"title":{},"body":{"classes/CrudController.html":{},"classes/CrudService.html":{},"controllers/HealthController.html":{},"guards/RequestGuard.html":{},"guards/ResponseGuard.html":{},"controllers/TagsController.html":{}}}],["param('id",{"_index":468,"title":{},"body":{"classes/CrudController.html":{},"controllers/TagsController.html":{}}}],["parameter",{"_index":263,"title":{},"body":{"modules/AppModule.html":{}}}],["parameters",{"_index":186,"title":{},"body":{"modules/AppModule.html":{},"injectables/CronService.html":{},"classes/CrudController.html":{},"classes/CrudService.html":{},"injectables/DBHelper.html":{},"injectables/ExcludeNullUndefinedInterceptor.html":{},"controllers/HealthController.html":{},"interfaces/ICrudService.html":{},"classes/QueryFailedFilter.html":{},"guards/RequestGuard.html":{},"guards/ResponseGuard.html":{},"controllers/TagsController.html":{},"injectables/TagsService.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/TransformInterceptor.html":{},"miscellaneous/functions.html":{}}}],["params",{"_index":462,"title":{},"body":{"classes/CrudController.html":{},"classes/PaginationParams.html":{}}}],["params.ts",{"_index":728,"title":{},"body":{"classes/PaginationParams.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["params.ts:23",{"_index":744,"title":{},"body":{"classes/PaginationParams.html":{}}}],["params.ts:32",{"_index":739,"title":{},"body":{"classes/PaginationParams.html":{}}}],["params.ts:39",{"_index":734,"title":{},"body":{"classes/PaginationParams.html":{}}}],["parentheses",{"_index":1003,"title":{},"body":{"classes/User.html":{}}}],["parsed",{"_index":911,"title":{},"body":{"controllers/TagsController.html":{},"injectables/TagsService.html":{}}}],["parsedbody",{"_index":900,"title":{},"body":{"controllers/TagsController.html":{}}}],["parsedrequest",{"_index":901,"title":{},"body":{"controllers/TagsController.html":{}}}],["parseint(val",{"_index":757,"title":{},"body":{"classes/PaginationParams.html":{}}}],["parseintpipe",{"_index":896,"title":{},"body":{"controllers/TagsController.html":{}}}],["partial",{"_index":928,"title":{},"body":{"injectables/TagsService.html":{}}}],["partialentity",{"_index":504,"title":{},"body":{"classes/CrudService.html":{}}}],["partialentity.hash",{"_index":548,"title":{},"body":{"classes/CrudService.html":{}}}],["partially",{"_index":996,"title":{},"body":{"classes/User.html":{}}}],["partialtype",{"_index":359,"title":{},"body":{"classes/CreateTagsDto.html":{},"classes/GetTagsResponseDto.html":{},"classes/UpdateTagsDto.html":{}}}],["partialtype(createtagsdto",{"_index":371,"title":{},"body":{"classes/CreateTagsDto.html":{},"classes/GetTagsResponseDto.html":{},"classes/UpdateTagsDto.html":{}}}],["passport",{"_index":1106,"title":{},"body":{"dependencies.html":{}}}],["password",{"_index":304,"title":{},"body":{"classes/BaseEntity.html":{},"classes/CrudService.html":{},"classes/User.html":{}}}],["patch(props",{"_index":946,"title":{},"body":{"injectables/TagsService.html":{}}}],["path",{"_index":157,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/HealthController.html":{},"classes/QueryFailedFilter.html":{},"controllers/TagsController.html":{}}}],["pidusage",{"_index":672,"title":{},"body":{"controllers/HealthController.html":{},"dependencies.html":{}}}],["pidusage(process.pid",{"_index":694,"title":{},"body":{"controllers/HealthController.html":{}}}],["pieces",{"_index":993,"title":{},"body":{"classes/User.html":{}}}],["places",{"_index":1022,"title":{},"body":{"classes/User.html":{}}}],["please",{"_index":1176,"title":{},"body":{"index.html":{}}}],["port",{"_index":226,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["post",{"_index":438,"title":{},"body":{"classes/CrudController.html":{},"controllers/TagsController.html":{}}}],["postby",{"_index":89,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{}}}],["postedby",{"_index":107,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{}}}],["postedbyuser",{"_index":83,"title":{"interfaces/PostedByUser.html":{}},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{},"coverage.html":{}}}],["postedminago",{"_index":108,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{}}}],["postid",{"_index":85,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{}}}],["postimage",{"_index":90,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{}}}],["posttime",{"_index":91,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{}}}],["posttype",{"_index":81,"title":{"interfaces/PostType.html":{}},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{},"coverage.html":{}}}],["posttypeid",{"_index":82,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{}}}],["postvideo",{"_index":92,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{}}}],["primarygeneratedcolumn",{"_index":318,"title":{},"body":{"classes/BaseEntity.html":{}}}],["private",{"_index":675,"title":{},"body":{"controllers/HealthController.html":{},"injectables/TagsService.html":{}}}],["production",{"_index":232,"title":{},"body":{"modules/AppModule.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["profileid",{"_index":116,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{}}}],["profileimage",{"_index":67,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{}}}],["profileimageurl",{"_index":117,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{}}}],["progressive",{"_index":1142,"title":{},"body":{"index.html":{}}}],["project",{"_index":1169,"title":{},"body":{"index.html":{}}}],["promise",{"_index":267,"title":{},"body":{"modules/AppModule.html":{},"guards/RequestGuard.html":{},"guards/ResponseGuard.html":{},"miscellaneous/functions.html":{}}}],["properties",{"_index":8,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"classes/BaseEntity.html":{},"classes/BaseModel.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"classes/CreateTagsDto.html":{},"injectables/CronService.html":{},"classes/CrudService.html":{},"injectables/DBHelper.html":{},"interfaces/Follower.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"classes/GetManyDto.html":{},"interfaces/GetRescueList.html":{},"classes/GetTagsResponseDto.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/IPagination.html":{},"interfaces/IPagination-1.html":{},"interfaces/ITryRequest.html":{},"classes/PaginationParams.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/Response.html":{},"classes/Tag.html":{},"classes/User.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{}}}],["props",{"_index":885,"title":{},"body":{"controllers/TagsController.html":{},"injectables/TagsService.html":{}}}],["protected",{"_index":430,"title":{},"body":{"classes/CrudController.html":{},"classes/CrudService.html":{}}}],["provide",{"_index":596,"title":{},"body":{"modules/DatabaseModule.html":{},"miscellaneous/variables.html":{}}}],["providers",{"_index":169,"title":{},"body":{"modules/AppModule.html":{},"modules/CronModule.html":{},"modules/DatabaseModule.html":{},"modules/TagsModule.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["provision",{"_index":234,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["public",{"_index":325,"title":{},"body":{"classes/BaseEntity.html":{}}}],["put",{"_index":455,"title":{},"body":{"classes/CrudController.html":{},"controllers/TagsController.html":{}}}],["put(':id",{"_index":453,"title":{},"body":{"classes/CrudController.html":{},"controllers/TagsController.html":{}}}],["q.orwhereraw('lower",{"_index":1010,"title":{},"body":{"classes/User.html":{}}}],["query",{"_index":945,"title":{},"body":{"injectables/TagsService.html":{},"classes/User.html":{}}}],["query.where((q",{"_index":1007,"title":{},"body":{"classes/User.html":{}}}],["querycontext",{"_index":335,"title":{},"body":{"classes/BaseModel.html":{}}}],["querydeeppartialentity",{"_index":452,"title":{},"body":{"classes/CrudController.html":{},"classes/CrudService.html":{},"interfaces/ICrudService.html":{},"interfaces/IPagination.html":{}}}],["queryfailedfilter",{"_index":760,"title":{"classes/QueryFailedFilter.html":{}},"body":{"classes/QueryFailedFilter.html":{},"coverage.html":{}}}],["r",{"_index":887,"title":{},"body":{"controllers/TagsController.html":{}}}],["range",{"_index":1101,"title":{},"body":{"dependencies.html":{}}}],["rate",{"_index":1094,"title":{},"body":{"dependencies.html":{}}}],["reactionscount",{"_index":93,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{}}}],["read",{"_index":1177,"title":{},"body":{"index.html":{}}}],["readfilesync",{"_index":669,"title":{},"body":{"controllers/HealthController.html":{}}}],["readmewhy",{"_index":534,"title":{},"body":{"classes/CrudService.html":{}}}],["readonly",{"_index":159,"title":{},"body":{"controllers/AppController.html":{},"classes/CrudController.html":{},"classes/CrudService.html":{},"interfaces/ICrudService.html":{},"interfaces/IPagination.html":{},"interfaces/IPagination-1.html":{},"classes/PaginationParams.html":{}}}],["reassign",{"_index":551,"title":{},"body":{"classes/CrudService.html":{},"controllers/HealthController.html":{}}}],["receives",{"_index":252,"title":{},"body":{"modules/AppModule.html":{}}}],["record",{"_index":521,"title":{},"body":{"classes/CrudService.html":{},"interfaces/ITryRequest.html":{},"guards/RequestGuard.html":{},"guards/ResponseGuard.html":{}}}],["recuescompletionneeded",{"_index":77,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{}}}],["recurring",{"_index":386,"title":{},"body":{"injectables/CronService.html":{}}}],["redoc",{"_index":244,"title":{},"body":{"modules/AppModule.html":{}}}],["reflect",{"_index":1110,"title":{},"body":{"dependencies.html":{}}}],["registered",{"_index":255,"title":{},"body":{"modules/AppModule.html":{}}}],["regular",{"_index":380,"title":{},"body":{"injectables/CronService.html":{}}}],["rejected",{"_index":272,"title":{},"body":{"modules/AppModule.html":{}}}],["relation",{"_index":568,"title":{},"body":{"injectables/DBHelper.html":{}}}],["relations",{"_index":574,"title":{},"body":{"injectables/DBHelper.html":{}}}],["repository",{"_index":481,"title":{},"body":{"classes/CrudService.html":{},"injectables/DBHelper.html":{},"index.html":{}}}],["request",{"_index":781,"title":{},"body":{"classes/QueryFailedFilter.html":{},"guards/RequestGuard.html":{},"injectables/TimeoutInterceptor.html":{},"dependencies.html":{}}}],["request.all",{"_index":820,"title":{},"body":{"guards/RequestGuard.html":{}}}],["request.body",{"_index":810,"title":{},"body":{"guards/RequestGuard.html":{}}}],["request.params",{"_index":811,"title":{},"body":{"guards/RequestGuard.html":{}}}],["request.query",{"_index":809,"title":{},"body":{"guards/RequestGuard.html":{}}}],["request.ts",{"_index":726,"title":{},"body":{"interfaces/ITryRequest.html":{},"coverage.html":{}}}],["request.url",{"_index":792,"title":{},"body":{"classes/QueryFailedFilter.html":{}}}],["requested",{"_index":530,"title":{},"body":{"classes/CrudService.html":{}}}],["requestguard",{"_index":796,"title":{"guards/RequestGuard.html":{}},"body":{"guards/RequestGuard.html":{},"coverage.html":{}}}],["requesttimeoutexception",{"_index":960,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["required",{"_index":230,"title":{},"body":{"modules/AppModule.html":{},"classes/Tag.html":{},"classes/User.html":{},"miscellaneous/variables.html":{}}}],["res",{"_index":664,"title":{},"body":{"controllers/HealthController.html":{}}}],["rescuedate",{"_index":109,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{}}}],["rescuedpetname",{"_index":111,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{}}}],["rescueid",{"_index":102,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{}}}],["rescuelists",{"_index":121,"title":{"interfaces/RescueLists.html":{}},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{},"coverage.html":{}}}],["rescuelocality",{"_index":112,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{}}}],["rescuer",{"_index":68,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{}}}],["rescuers",{"_index":113,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{}}}],["rescues",{"_index":101,"title":{"interfaces/Rescues.html":{}},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{},"coverage.html":{}}}],["rescuestatus",{"_index":119,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{}}}],["reset",{"_index":178,"title":{},"body":{"modules/AppModule.html":{},"modules/CronModule.html":{},"modules/TagsModule.html":{},"overview.html":{}}}],["resolved",{"_index":271,"title":{},"body":{"modules/AppModule.html":{}}}],["response",{"_index":39,"title":{"interfaces/Response.html":{}},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"controllers/HealthController.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"classes/QueryFailedFilter.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/Response.html":{},"guards/ResponseGuard.html":{},"injectables/TransformInterceptor.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{},"coverage.html":{}}}],["response.error",{"_index":850,"title":{},"body":{"guards/ResponseGuard.html":{}}}],["response.interface",{"_index":639,"title":{},"body":{"classes/GetManyDto.html":{}}}],["response.nocontent",{"_index":851,"title":{},"body":{"guards/ResponseGuard.html":{}}}],["response.status(204).end",{"_index":845,"title":{},"body":{"guards/ResponseGuard.html":{}}}],["response.status(status).json",{"_index":791,"title":{},"body":{"classes/QueryFailedFilter.html":{},"guards/ResponseGuard.html":{}}}],["response.success",{"_index":849,"title":{},"body":{"guards/ResponseGuard.html":{}}}],["response.withmeta",{"_index":852,"title":{},"body":{"guards/ResponseGuard.html":{}}}],["responseguard",{"_index":825,"title":{"guards/ResponseGuard.html":{}},"body":{"guards/ResponseGuard.html":{},"coverage.html":{}}}],["restricted",{"_index":813,"title":{},"body":{"guards/RequestGuard.html":{}}}],["result",{"_index":28,"title":{},"body":{"interfaces/APIResponse.html":{},"controllers/AppController.html":{},"interfaces/AppLaunchAction.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/BaseEntity.html":{},"classes/BaseModel.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"classes/CreateTagsDto.html":{},"modules/CronModule.html":{},"injectables/CronService.html":{},"classes/CrudController.html":{},"classes/CrudService.html":{},"injectables/DBHelper.html":{},"modules/DatabaseModule.html":{},"injectables/ExcludeNullUndefinedInterceptor.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"classes/GetManyDto.html":{},"interfaces/GetRescueList.html":{},"classes/GetTagsResponseDto.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"controllers/HealthController.html":{},"interfaces/ICrudService.html":{},"interfaces/IPagination.html":{},"interfaces/IPagination-1.html":{},"interfaces/ITryRequest.html":{},"classes/PaginationParams.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"classes/QueryFailedFilter.html":{},"guards/RequestGuard.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/Response.html":{},"guards/ResponseGuard.html":{},"classes/Tag.html":{},"controllers/TagsController.html":{},"modules/TagsModule.html":{},"injectables/TagsService.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateTagsDto.html":{},"classes/User.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["results",{"_index":133,"title":{},"body":{"interfaces/APIResponse.html":{},"controllers/AppController.html":{},"interfaces/AppLaunchAction.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/BaseEntity.html":{},"classes/BaseModel.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"classes/CreateTagsDto.html":{},"modules/CronModule.html":{},"injectables/CronService.html":{},"classes/CrudController.html":{},"classes/CrudService.html":{},"injectables/DBHelper.html":{},"modules/DatabaseModule.html":{},"injectables/ExcludeNullUndefinedInterceptor.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"classes/GetManyDto.html":{},"interfaces/GetRescueList.html":{},"classes/GetTagsResponseDto.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"controllers/HealthController.html":{},"interfaces/ICrudService.html":{},"interfaces/IPagination.html":{},"interfaces/IPagination-1.html":{},"interfaces/ITryRequest.html":{},"classes/PaginationParams.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"classes/QueryFailedFilter.html":{},"guards/RequestGuard.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/Response.html":{},"guards/ResponseGuard.html":{},"classes/Tag.html":{},"controllers/TagsController.html":{},"modules/TagsModule.html":{},"injectables/TagsService.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateTagsDto.html":{},"classes/User.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["retention",{"_index":682,"title":{},"body":{"controllers/HealthController.html":{}}}],["return",{"_index":160,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/CronService.html":{},"classes/CrudController.html":{},"classes/CrudService.html":{},"injectables/DBHelper.html":{},"modules/DatabaseModule.html":{},"injectables/ExcludeNullUndefinedInterceptor.html":{},"controllers/HealthController.html":{},"guards/RequestGuard.html":{},"interfaces/Response.html":{},"guards/ResponseGuard.html":{},"controllers/TagsController.html":{},"injectables/TagsService.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/TransformInterceptor.html":{},"miscellaneous/variables.html":{}}}],["returning",{"_index":947,"title":{},"body":{"injectables/TagsService.html":{}}}],["returns",{"_index":143,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"injectables/CronService.html":{},"classes/CrudController.html":{},"classes/CrudService.html":{},"injectables/DBHelper.html":{},"injectables/ExcludeNullUndefinedInterceptor.html":{},"controllers/HealthController.html":{},"interfaces/ICrudService.html":{},"classes/QueryFailedFilter.html":{},"guards/RequestGuard.html":{},"guards/ResponseGuard.html":{},"controllers/TagsController.html":{},"injectables/TagsService.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/TransformInterceptor.html":{},"miscellaneous/functions.html":{}}}],["reusable",{"_index":1019,"title":{},"body":{"classes/User.html":{}}}],["rimraf",{"_index":1113,"title":{},"body":{"dependencies.html":{}}}],["rootpath",{"_index":242,"title":{},"body":{"modules/AppModule.html":{}}}],["row",{"_index":572,"title":{},"body":{"injectables/DBHelper.html":{}}}],["row[relation",{"_index":576,"title":{},"body":{"injectables/DBHelper.html":{}}}],["run",{"_index":385,"title":{},"body":{"injectables/CronService.html":{},"index.html":{}}}],["rxjs",{"_index":511,"title":{},"body":{"classes/CrudService.html":{},"injectables/ExcludeNullUndefinedInterceptor.html":{},"controllers/HealthController.html":{},"guards/RequestGuard.html":{},"interfaces/Response.html":{},"guards/ResponseGuard.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/TransformInterceptor.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":513,"title":{},"body":{"classes/CrudService.html":{},"injectables/ExcludeNullUndefinedInterceptor.html":{},"controllers/HealthController.html":{},"interfaces/Response.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/TransformInterceptor.html":{}}}],["saltrounds",{"_index":475,"title":{},"body":{"classes/CrudService.html":{}}}],["scalable",{"_index":1147,"title":{},"body":{"index.html":{}}}],["schedulemodule",{"_index":203,"title":{},"body":{"modules/AppModule.html":{}}}],["schedulemodule.forroot",{"_index":246,"title":{},"body":{"modules/AppModule.html":{}}}],["schema",{"_index":790,"title":{},"body":{"classes/QueryFailedFilter.html":{},"classes/Tag.html":{},"classes/User.html":{}}}],["searchbyname(query",{"_index":1000,"title":{},"body":{"classes/User.html":{}}}],["second",{"_index":418,"title":{},"body":{"injectables/CronService.html":{},"controllers/HealthController.html":{}}}],["seed",{"_index":1054,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["seed(knex",{"_index":1138,"title":{},"body":{"miscellaneous/functions.html":{}}}],["select",{"_index":315,"title":{},"body":{"classes/BaseEntity.html":{}}}],["semi",{"_index":988,"title":{},"body":{"classes/User.html":{}}}],["send(readfilesync(join(__dirname",{"_index":680,"title":{},"body":{"controllers/HealthController.html":{}}}],["sequence",{"_index":258,"title":{},"body":{"modules/AppModule.html":{}}}],["server",{"_index":1148,"title":{},"body":{"index.html":{}}}],["servestaticmodule",{"_index":205,"title":{},"body":{"modules/AppModule.html":{}}}],["servestaticmodule.forroot",{"_index":241,"title":{},"body":{"modules/AppModule.html":{}}}],["service",{"_index":545,"title":{},"body":{"classes/CrudService.html":{},"controllers/TagsController.html":{}}}],["setting",{"_index":78,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{}}}],["setupinfra",{"_index":1063,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["setupinfra(app",{"_index":1132,"title":{},"body":{"miscellaneous/functions.html":{}}}],["setupmiddlewares",{"_index":1064,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["setupmiddlewares(app",{"_index":1134,"title":{},"body":{"miscellaneous/functions.html":{}}}],["setupswaggerdocs",{"_index":1065,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["setupswaggerdocs(app",{"_index":1135,"title":{},"body":{"miscellaneous/functions.html":{}}}],["shadow",{"_index":835,"title":{},"body":{"guards/ResponseGuard.html":{}}}],["showmycontacts",{"_index":79,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{}}}],["showmynumber",{"_index":118,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{}}}],["showremoveoption",{"_index":130,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{}}}],["shutdown",{"_index":277,"title":{},"body":{"modules/AppModule.html":{},"controllers/HealthController.html":{}}}],["side",{"_index":1149,"title":{},"body":{"index.html":{}}}],["signal",{"_index":187,"title":{},"body":{"modules/AppModule.html":{},"classes/CrudService.html":{},"controllers/HealthController.html":{}}}],["simply",{"_index":1001,"title":{},"body":{"classes/User.html":{}}}],["skip",{"_index":731,"title":{},"body":{"classes/PaginationParams.html":{}}}],["snakecasemappers",{"_index":336,"title":{},"body":{"classes/BaseModel.html":{}}}],["snippets",{"_index":1020,"title":{},"body":{"classes/User.html":{}}}],["socket.io",{"_index":1079,"title":{},"body":{"dependencies.html":{}}}],["somehow",{"_index":544,"title":{},"body":{"classes/CrudService.html":{}}}],["something",{"_index":838,"title":{},"body":{"guards/ResponseGuard.html":{}}}],["source",{"_index":4,"title":{},"body":{"interfaces/APIResponse.html":{},"controllers/AppController.html":{},"interfaces/AppLaunchAction.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/BaseEntity.html":{},"classes/BaseModel.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"classes/CreateTagsDto.html":{},"modules/CronModule.html":{},"injectables/CronService.html":{},"classes/CrudController.html":{},"classes/CrudService.html":{},"injectables/DBHelper.html":{},"modules/DatabaseModule.html":{},"injectables/ExcludeNullUndefinedInterceptor.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"classes/GetManyDto.html":{},"interfaces/GetRescueList.html":{},"classes/GetTagsResponseDto.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"controllers/HealthController.html":{},"interfaces/ICrudService.html":{},"interfaces/IPagination.html":{},"interfaces/IPagination-1.html":{},"interfaces/ITryRequest.html":{},"classes/PaginationParams.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"classes/QueryFailedFilter.html":{},"guards/RequestGuard.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/Response.html":{},"guards/ResponseGuard.html":{},"classes/Tag.html":{},"controllers/TagsController.html":{},"modules/TagsModule.html":{},"injectables/TagsService.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateTagsDto.html":{},"classes/User.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{},"dependencies.html":{},"index.html":{}}}],["specified",{"_index":387,"title":{},"body":{"injectables/CronService.html":{}}}],["split",{"_index":992,"title":{},"body":{"classes/User.html":{}}}],["sponsors",{"_index":1172,"title":{},"body":{"index.html":{}}}],["sqlite3",{"_index":602,"title":{},"body":{"modules/DatabaseModule.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["src/.../01",{"_index":1130,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../20190609143930_createtag.ts",{"_index":1128,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/.../20190609143930_createuser.ts",{"_index":1129,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/.../app.module.ts",{"_index":1201,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../database.module.ts",{"_index":1202,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../domain.ts",{"_index":1199,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../main.ts",{"_index":1127,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../moment",{"_index":1203,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../pagination",{"_index":1125,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../tohexstring.ts",{"_index":1131,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/app.controller.ts",{"_index":137,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app.controller.ts:15",{"_index":142,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.module.ts",{"_index":180,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app.module.ts:63",{"_index":191,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.module.ts:67",{"_index":185,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.service.ts",{"_index":280,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["src/app.service.ts:5",{"_index":281,"title":{},"body":{"injectables/AppService.html":{}}}],["src/base/crud/crud.controller.ts",{"_index":423,"title":{},"body":{"classes/CrudController.html":{},"coverage.html":{}}}],["src/base/crud/crud.controller.ts:10",{"_index":433,"title":{},"body":{"classes/CrudController.html":{}}}],["src/base/crud/crud.controller.ts:14",{"_index":446,"title":{},"body":{"classes/CrudController.html":{}}}],["src/base/crud/crud.controller.ts:19",{"_index":450,"title":{},"body":{"classes/CrudController.html":{}}}],["src/base/crud/crud.controller.ts:24",{"_index":439,"title":{},"body":{"classes/CrudController.html":{}}}],["src/base/crud/crud.controller.ts:29",{"_index":454,"title":{},"body":{"classes/CrudController.html":{}}}],["src/base/crud/crud.controller.ts:38",{"_index":443,"title":{},"body":{"classes/CrudController.html":{}}}],["src/base/crud/crud.service.ts",{"_index":474,"title":{},"body":{"classes/CrudService.html":{},"coverage.html":{}}}],["src/base/crud/crud.service.ts:109",{"_index":491,"title":{},"body":{"classes/CrudService.html":{}}}],["src/base/crud/crud.service.ts:19",{"_index":482,"title":{},"body":{"classes/CrudService.html":{}}}],["src/base/crud/crud.service.ts:25",{"_index":485,"title":{},"body":{"classes/CrudService.html":{}}}],["src/base/crud/crud.service.ts:29",{"_index":496,"title":{},"body":{"classes/CrudService.html":{}}}],["src/base/crud/crud.service.ts:36",{"_index":501,"title":{},"body":{"classes/CrudService.html":{}}}],["src/base/crud/crud.service.ts:49",{"_index":499,"title":{},"body":{"classes/CrudService.html":{}}}],["src/base/crud/crud.service.ts:61",{"_index":486,"title":{},"body":{"classes/CrudService.html":{}}}],["src/base/crud/crud.service.ts:73",{"_index":503,"title":{},"body":{"classes/CrudService.html":{}}}],["src/base/crud/crud.service.ts:77",{"_index":505,"title":{},"body":{"classes/CrudService.html":{}}}],["src/base/crud/crud.service.ts:98",{"_index":489,"title":{},"body":{"classes/CrudService.html":{}}}],["src/base/crud/icrud.service.ts",{"_index":709,"title":{},"body":{"interfaces/ICrudService.html":{},"interfaces/IPagination.html":{},"coverage.html":{}}}],["src/base/crud/icrud.service.ts:24",{"_index":710,"title":{},"body":{"interfaces/ICrudService.html":{}}}],["src/base/crud/icrud.service.ts:26",{"_index":713,"title":{},"body":{"interfaces/ICrudService.html":{}}}],["src/base/crud/icrud.service.ts:28",{"_index":714,"title":{},"body":{"interfaces/ICrudService.html":{}}}],["src/base/crud/icrud.service.ts:33",{"_index":711,"title":{},"body":{"interfaces/ICrudService.html":{}}}],["src/base/crud/icrud.service.ts:35",{"_index":715,"title":{},"body":{"interfaces/ICrudService.html":{}}}],["src/base/crud/icrud.service.ts:37",{"_index":712,"title":{},"body":{"interfaces/ICrudService.html":{}}}],["src/base/crud/pagination",{"_index":727,"title":{},"body":{"classes/PaginationParams.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["src/base/crud/pagination.ts",{"_index":722,"title":{},"body":{"interfaces/IPagination-1.html":{},"coverage.html":{}}}],["src/base/crud/try",{"_index":725,"title":{},"body":{"interfaces/ITryRequest.html":{},"coverage.html":{}}}],["src/base/datum/base",{"_index":286,"title":{},"body":{"classes/BaseEntity.html":{},"coverage.html":{}}}],["src/base/datum/get",{"_index":629,"title":{},"body":{"classes/GetManyDto.html":{},"coverage.html":{}}}],["src/base/datum/tohexstring.ts",{"_index":1039,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/base/dbhelper.ts",{"_index":558,"title":{},"body":{"injectables/DBHelper.html":{},"coverage.html":{}}}],["src/base/dbhelper.ts:13",{"_index":564,"title":{},"body":{"injectables/DBHelper.html":{}}}],["src/base/dbhelper.ts:18",{"_index":567,"title":{},"body":{"injectables/DBHelper.html":{}}}],["src/base/dbhelper.ts:9",{"_index":562,"title":{},"body":{"injectables/DBHelper.html":{}}}],["src/base/moment",{"_index":1041,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/cron/cron.module.ts",{"_index":376,"title":{},"body":{"modules/CronModule.html":{}}}],["src/cron/cron.service.ts",{"_index":378,"title":{},"body":{"injectables/CronService.html":{},"coverage.html":{}}}],["src/cron/cron.service.ts:14",{"_index":407,"title":{},"body":{"injectables/CronService.html":{}}}],["src/cron/cron.service.ts:16",{"_index":411,"title":{},"body":{"injectables/CronService.html":{}}}],["src/cron/cron.service.ts:18",{"_index":413,"title":{},"body":{"injectables/CronService.html":{}}}],["src/cron/cron.service.ts:20",{"_index":409,"title":{},"body":{"injectables/CronService.html":{}}}],["src/cron/cron.service.ts:22",{"_index":398,"title":{},"body":{"injectables/CronService.html":{}}}],["src/cron/cron.service.ts:28",{"_index":401,"title":{},"body":{"injectables/CronService.html":{}}}],["src/cron/cron.service.ts:42",{"_index":403,"title":{},"body":{"injectables/CronService.html":{}}}],["src/cron/cron.service.ts:53",{"_index":405,"title":{},"body":{"injectables/CronService.html":{}}}],["src/database/database.module.ts",{"_index":585,"title":{},"body":{"modules/DatabaseModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/database/migrations/20190609143930_createtag.ts",{"_index":1046,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/database/migrations/20190609143930_createuser.ts",{"_index":1049,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/database/models/base.model.ts",{"_index":329,"title":{},"body":{"classes/BaseModel.html":{},"coverage.html":{}}}],["src/database/models/base.model.ts:16",{"_index":330,"title":{},"body":{"classes/BaseModel.html":{}}}],["src/database/models/base.model.ts:19",{"_index":332,"title":{},"body":{"classes/BaseModel.html":{}}}],["src/database/models/base.model.ts:22",{"_index":331,"title":{},"body":{"classes/BaseModel.html":{}}}],["src/database/models/tag.model.ts",{"_index":854,"title":{},"body":{"classes/Tag.html":{},"coverage.html":{}}}],["src/database/models/tag.model.ts:10",{"_index":859,"title":{},"body":{"classes/Tag.html":{}}}],["src/database/models/tag.model.ts:12",{"_index":857,"title":{},"body":{"classes/Tag.html":{}}}],["src/database/models/tag.model.ts:14",{"_index":867,"title":{},"body":{"classes/Tag.html":{}}}],["src/database/models/tag.model.ts:16",{"_index":858,"title":{},"body":{"classes/Tag.html":{}}}],["src/database/models/tag.model.ts:18",{"_index":864,"title":{},"body":{"classes/Tag.html":{}}}],["src/database/models/tag.model.ts:22",{"_index":863,"title":{},"body":{"classes/Tag.html":{}}}],["src/database/models/tag.model.ts:8",{"_index":866,"title":{},"body":{"classes/Tag.html":{}}}],["src/database/models/user.model.ts",{"_index":972,"title":{},"body":{"classes/User.html":{},"coverage.html":{}}}],["src/database/models/user.model.ts:10",{"_index":981,"title":{},"body":{"classes/User.html":{}}}],["src/database/models/user.model.ts:12",{"_index":977,"title":{},"body":{"classes/User.html":{}}}],["src/database/models/user.model.ts:14",{"_index":1016,"title":{},"body":{"classes/User.html":{}}}],["src/database/models/user.model.ts:16",{"_index":978,"title":{},"body":{"classes/User.html":{}}}],["src/database/models/user.model.ts:18",{"_index":1017,"title":{},"body":{"classes/User.html":{}}}],["src/database/models/user.model.ts:20",{"_index":979,"title":{},"body":{"classes/User.html":{}}}],["src/database/models/user.model.ts:22",{"_index":1013,"title":{},"body":{"classes/User.html":{}}}],["src/database/models/user.model.ts:24",{"_index":980,"title":{},"body":{"classes/User.html":{}}}],["src/database/models/user.model.ts:26",{"_index":987,"title":{},"body":{"classes/User.html":{}}}],["src/database/models/user.model.ts:28",{"_index":982,"title":{},"body":{"classes/User.html":{}}}],["src/database/models/user.model.ts:32",{"_index":986,"title":{},"body":{"classes/User.html":{}}}],["src/database/models/user.model.ts:47",{"_index":1012,"title":{},"body":{"classes/User.html":{}}}],["src/database/models/user.model.ts:8",{"_index":1015,"title":{},"body":{"classes/User.html":{}}}],["src/database/seeds/01",{"_index":1052,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/domain.ts",{"_index":6,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/health/health.controller.ts",{"_index":646,"title":{},"body":{"controllers/HealthController.html":{},"coverage.html":{}}}],["src/health/health.controller.ts:39",{"_index":656,"title":{},"body":{"controllers/HealthController.html":{}}}],["src/health/health.controller.ts:47",{"_index":660,"title":{},"body":{"controllers/HealthController.html":{}}}],["src/health/health.controller.ts:66",{"_index":651,"title":{},"body":{"controllers/HealthController.html":{}}}],["src/health/health.controller.ts:72",{"_index":653,"title":{},"body":{"controllers/HealthController.html":{}}}],["src/health/health.controller.ts:85",{"_index":658,"title":{},"body":{"controllers/HealthController.html":{}}}],["src/health/health.controller.ts:91",{"_index":657,"title":{},"body":{"controllers/HealthController.html":{}}}],["src/infra/filters/query",{"_index":761,"title":{},"body":{"classes/QueryFailedFilter.html":{},"coverage.html":{}}}],["src/infra/guards/req.ts",{"_index":798,"title":{},"body":{"guards/RequestGuard.html":{},"coverage.html":{}}}],["src/infra/guards/req.ts:21",{"_index":802,"title":{},"body":{"guards/RequestGuard.html":{}}}],["src/infra/guards/req.ts:8",{"_index":806,"title":{},"body":{"guards/RequestGuard.html":{}}}],["src/infra/guards/res.ts",{"_index":826,"title":{},"body":{"guards/ResponseGuard.html":{},"coverage.html":{}}}],["src/infra/guards/res.ts:21",{"_index":829,"title":{},"body":{"guards/ResponseGuard.html":{}}}],["src/infra/guards/res.ts:8",{"_index":830,"title":{},"body":{"guards/ResponseGuard.html":{}}}],["src/infra/interceptors/null",{"_index":610,"title":{},"body":{"injectables/ExcludeNullUndefinedInterceptor.html":{},"coverage.html":{}}}],["src/infra/interceptors/timeout.ts",{"_index":953,"title":{},"body":{"injectables/TimeoutInterceptor.html":{},"coverage.html":{}}}],["src/infra/interceptors/timeout.ts:17",{"_index":959,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["src/infra/interceptors/transform.ts",{"_index":822,"title":{},"body":{"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{},"coverage.html":{}}}],["src/infra/interceptors/transform.ts:17",{"_index":971,"title":{},"body":{"injectables/TransformInterceptor.html":{}}}],["src/main.ts",{"_index":1062,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/tags/tags.controller.ts",{"_index":882,"title":{},"body":{"controllers/TagsController.html":{},"coverage.html":{}}}],["src/tags/tags.controller.ts:34",{"_index":891,"title":{},"body":{"controllers/TagsController.html":{}}}],["src/tags/tags.controller.ts:41",{"_index":893,"title":{},"body":{"controllers/TagsController.html":{}}}],["src/tags/tags.controller.ts:51",{"_index":886,"title":{},"body":{"controllers/TagsController.html":{}}}],["src/tags/tags.controller.ts:58",{"_index":889,"title":{},"body":{"controllers/TagsController.html":{}}}],["src/tags/tags.controller.ts:68",{"_index":895,"title":{},"body":{"controllers/TagsController.html":{}}}],["src/tags/tags.dto.ts",{"_index":355,"title":{},"body":{"classes/CreateTagsDto.html":{},"classes/GetTagsResponseDto.html":{},"classes/UpdateTagsDto.html":{},"coverage.html":{}}}],["src/tags/tags.dto.ts:19",{"_index":357,"title":{},"body":{"classes/CreateTagsDto.html":{}}}],["src/tags/tags.dto.ts:26",{"_index":643,"title":{},"body":{"classes/GetTagsResponseDto.html":{}}}],["src/tags/tags.dto.ts:29",{"_index":644,"title":{},"body":{"classes/GetTagsResponseDto.html":{}}}],["src/tags/tags.dto.ts:33",{"_index":641,"title":{},"body":{"classes/GetTagsResponseDto.html":{}}}],["src/tags/tags.dto.ts:37",{"_index":645,"title":{},"body":{"classes/GetTagsResponseDto.html":{}}}],["src/tags/tags.dto.ts:41",{"_index":642,"title":{},"body":{"classes/GetTagsResponseDto.html":{}}}],["src/tags/tags.module.ts",{"_index":921,"title":{},"body":{"modules/TagsModule.html":{}}}],["src/tags/tags.service.ts",{"_index":923,"title":{},"body":{"injectables/TagsService.html":{},"coverage.html":{}}}],["src/tags/tags.service.ts:10",{"_index":926,"title":{},"body":{"injectables/TagsService.html":{}}}],["src/tags/tags.service.ts:13",{"_index":933,"title":{},"body":{"injectables/TagsService.html":{}}}],["src/tags/tags.service.ts:17",{"_index":935,"title":{},"body":{"injectables/TagsService.html":{}}}],["src/tags/tags.service.ts:21",{"_index":929,"title":{},"body":{"injectables/TagsService.html":{}}}],["src/tags/tags.service.ts:25",{"_index":937,"title":{},"body":{"injectables/TagsService.html":{}}}],["src/tags/tags.service.ts:38",{"_index":931,"title":{},"body":{"injectables/TagsService.html":{}}}],["sse",{"_index":649,"title":{},"body":{"controllers/HealthController.html":{}}}],["sse('sse",{"_index":659,"title":{},"body":{"controllers/HealthController.html":{}}}],["sse.html')).tostring",{"_index":681,"title":{},"body":{"controllers/HealthController.html":{}}}],["start",{"_index":1156,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":1159,"title":{},"body":{"index.html":{}}}],["start:prodtest",{"_index":1160,"title":{},"body":{"index.html":{}}}],["started",{"_index":1141,"title":{"index.html":{}},"body":{}}],["starter",{"_index":1151,"title":{},"body":{"index.html":{}}}],["stat",{"_index":695,"title":{},"body":{"controllers/HealthController.html":{}}}],["stat.load",{"_index":701,"title":{},"body":{"controllers/HealthController.html":{}}}],["stat.memory",{"_index":699,"title":{},"body":{"controllers/HealthController.html":{}}}],["stat.timestamp",{"_index":703,"title":{},"body":{"controllers/HealthController.html":{}}}],["statements",{"_index":1004,"title":{},"body":{"classes/User.html":{},"coverage.html":{}}}],["static",{"_index":156,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"classes/BaseEntity.html":{},"injectables/CronService.html":{},"controllers/HealthController.html":{},"classes/Tag.html":{},"controllers/TagsController.html":{},"classes/User.html":{},"dependencies.html":{}}}],["status",{"_index":783,"title":{},"body":{"classes/QueryFailedFilter.html":{},"guards/ResponseGuard.html":{}}}],["statuscode",{"_index":16,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"classes/QueryFailedFilter.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{}}}],["stay",{"_index":1179,"title":{},"body":{"index.html":{}}}],["stream",{"_index":495,"title":{},"body":{"classes/CrudService.html":{}}}],["stream$.pipe",{"_index":554,"title":{},"body":{"classes/CrudService.html":{}}}],["string",{"_index":23,"title":{},"body":{"interfaces/APIResponse.html":{},"controllers/AppController.html":{},"interfaces/AppLaunchAction.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"classes/CreateTagsDto.html":{},"classes/CrudController.html":{},"classes/CrudService.html":{},"injectables/DBHelper.html":{},"injectables/ExcludeNullUndefinedInterceptor.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"classes/GetTagsResponseDto.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"controllers/HealthController.html":{},"interfaces/ICrudService.html":{},"interfaces/IPagination.html":{},"classes/PaginationParams.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"guards/RequestGuard.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"guards/ResponseGuard.html":{},"classes/Tag.html":{},"classes/UpdateTagsDto.html":{},"classes/User.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["subject",{"_index":51,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{}}}],["success",{"_index":523,"title":{},"body":{"classes/CrudService.html":{},"interfaces/ITryRequest.html":{},"guards/ResponseGuard.html":{}}}],["super.$beforeinsert(querycontext",{"_index":348,"title":{},"body":{"classes/BaseModel.html":{}}}],["super.$beforeupdate(opt",{"_index":353,"title":{},"body":{"classes/BaseModel.html":{}}}],["support",{"_index":1116,"title":{},"body":{"dependencies.html":{},"index.html":{},"modules.html":{}}}],["svg",{"_index":1190,"title":{},"body":{"modules.html":{}}}],["swagger",{"_index":1119,"title":{},"body":{"dependencies.html":{}}}],["sync",{"_index":561,"title":{},"body":{"injectables/DBHelper.html":{}}}],["sync(relation",{"_index":565,"title":{},"body":{"injectables/DBHelper.html":{}}}],["synchronize",{"_index":239,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["syntax",{"_index":814,"title":{},"body":{"guards/RequestGuard.html":{}}}],["t",{"_index":21,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"injectables/DBHelper.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"classes/GetManyDto.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/ICrudService.html":{},"interfaces/IPagination.html":{},"interfaces/IPagination-1.html":{},"classes/PaginationParams.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{}}}],["table",{"_index":786,"title":{},"body":{"classes/QueryFailedFilter.html":{},"coverage.html":{}}}],["tablename",{"_index":856,"title":{},"body":{"classes/Tag.html":{},"classes/User.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1066,"title":{},"body":{"coverage.html":{}}}],["tag",{"_index":591,"title":{"classes/Tag.html":{}},"body":{"modules/DatabaseModule.html":{},"classes/Tag.html":{},"controllers/TagsController.html":{},"injectables/TagsService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["tag1",{"_index":367,"title":{},"body":{"classes/CreateTagsDto.html":{},"classes/GetTagsResponseDto.html":{},"classes/UpdateTagsDto.html":{}}}],["tag1'})@isstring()@isnotempty()@minlength(2)@maxlength(36",{"_index":356,"title":{},"body":{"classes/CreateTagsDto.html":{}}}],["tags",{"_index":865,"title":{},"body":{"classes/Tag.html":{},"controllers/TagsController.html":{},"miscellaneous/variables.html":{}}}],["tags.controller",{"_index":922,"title":{},"body":{"modules/TagsModule.html":{}}}],["tags.dto",{"_index":904,"title":{},"body":{"controllers/TagsController.html":{}}}],["tags.service",{"_index":906,"title":{},"body":{"controllers/TagsController.html":{},"modules/TagsModule.html":{}}}],["tags.ts",{"_index":1053,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["tags/tags.module",{"_index":216,"title":{},"body":{"modules/AppModule.html":{}}}],["tagscontroller",{"_index":881,"title":{"controllers/TagsController.html":{}},"body":{"controllers/TagsController.html":{},"modules/TagsModule.html":{},"coverage.html":{}}}],["tagsmodule",{"_index":176,"title":{"modules/TagsModule.html":{}},"body":{"modules/AppModule.html":{},"modules/TagsModule.html":{},"modules.html":{},"overview.html":{}}}],["tagsservice",{"_index":905,"title":{"injectables/TagsService.html":{}},"body":{"controllers/TagsController.html":{},"modules/TagsModule.html":{},"injectables/TagsService.html":{},"coverage.html":{},"overview.html":{}}}],["take",{"_index":732,"title":{},"body":{"classes/PaginationParams.html":{}}}],["takes",{"_index":957,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["terminate",{"_index":956,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["termination",{"_index":253,"title":{},"body":{"modules/AppModule.html":{}}}],["terminusmodule",{"_index":207,"title":{},"body":{"modules/AppModule.html":{}}}],["test",{"_index":233,"title":{},"body":{"modules/AppModule.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["test:covsupport",{"_index":1165,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":1164,"title":{},"body":{"index.html":{}}}],["tests",{"_index":1162,"title":{},"body":{"index.html":{}}}],["thanks",{"_index":1171,"title":{},"body":{"index.html":{}}}],["this.appservice.gethello",{"_index":161,"title":{},"body":{"controllers/AppController.html":{}}}],["this.bindrequesthelpers(context.switchtohttp().getrequest",{"_index":807,"title":{},"body":{"guards/RequestGuard.html":{}}}],["this.bindresponsehelpers(context.switchtohttp().getresponse",{"_index":831,"title":{},"body":{"guards/ResponseGuard.html":{}}}],["this.collectosmetrics(metrics",{"_index":688,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.config.get('node_env",{"_index":707,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.createdat",{"_index":349,"title":{},"body":{"classes/BaseModel.html":{}}}],["this.crudservice.create(entity",{"_index":467,"title":{},"body":{"classes/CrudController.html":{}}}],["this.crudservice.delete(id",{"_index":473,"title":{},"body":{"classes/CrudController.html":{}}}],["this.crudservice.findall(filter",{"_index":463,"title":{},"body":{"classes/CrudController.html":{}}}],["this.crudservice.findone(id",{"_index":465,"title":{},"body":{"classes/CrudController.html":{}}}],["this.crudservice.update(id",{"_index":469,"title":{},"body":{"classes/CrudController.html":{}}}],["this.dns.pingcheck('nestjs",{"_index":691,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.factorial(n",{"_index":414,"title":{},"body":{"injectables/CronService.html":{}}}],["this.findby",{"_index":571,"title":{},"body":{"injectables/DBHelper.html":{}}}],["this.getpasswordhash(partialentity.hash",{"_index":549,"title":{},"body":{"classes/CrudService.html":{}}}],["this.health.check",{"_index":690,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.logger.debug",{"_index":416,"title":{},"body":{"injectables/CronService.html":{}}}],["this.modelclass",{"_index":944,"title":{},"body":{"injectables/TagsService.html":{}}}],["this.modelclass.query",{"_index":941,"title":{},"body":{"injectables/TagsService.html":{}}}],["this.modelclass.query().findbyid(id",{"_index":942,"title":{},"body":{"injectables/TagsService.html":{}}}],["this.modelclass.query().insert(props).returning",{"_index":943,"title":{},"body":{"injectables/TagsService.html":{}}}],["this.repository.count(filter",{"_index":517,"title":{},"body":{"classes/CrudService.html":{}}}],["this.repository.create(entity",{"_index":533,"title":{},"body":{"classes/CrudService.html":{}}}],["this.repository.delete(criteria",{"_index":553,"title":{},"body":{"classes/CrudService.html":{}}}],["this.repository.find(filter",{"_index":519,"title":{},"body":{"classes/CrudService.html":{}}}],["this.repository.findone(id",{"_index":527,"title":{},"body":{"classes/CrudService.html":{}}}],["this.repository.findone(this.findby",{"_index":573,"title":{},"body":{"injectables/DBHelper.html":{}}}],["this.repository.findoneorfail(id",{"_index":522,"title":{},"body":{"classes/CrudService.html":{}}}],["this.repository.save(obj",{"_index":536,"title":{},"body":{"classes/CrudService.html":{}}}],["this.repository.save(row",{"_index":584,"title":{},"body":{"injectables/DBHelper.html":{}}}],["this.repository.update(id",{"_index":552,"title":{},"body":{"classes/CrudService.html":{}}}],["this.saltrounds",{"_index":515,"title":{},"body":{"classes/CrudService.html":{}}}],["this.service.create",{"_index":915,"title":{},"body":{"controllers/TagsController.html":{}}}],["this.service.delete",{"_index":916,"title":{},"body":{"controllers/TagsController.html":{}}}],["this.service.findall",{"_index":912,"title":{},"body":{"controllers/TagsController.html":{}}}],["this.service.findone",{"_index":913,"title":{},"body":{"controllers/TagsController.html":{}}}],["this.service.update",{"_index":917,"title":{},"body":{"controllers/TagsController.html":{}}}],["this.updatedat",{"_index":351,"title":{},"body":{"classes/BaseModel.html":{}}}],["those",{"_index":997,"title":{},"body":{"classes/User.html":{}}}],["throw",{"_index":528,"title":{},"body":{"classes/CrudService.html":{}}}],["throwerror",{"_index":510,"title":{},"body":{"classes/CrudService.html":{},"injectables/TimeoutInterceptor.html":{}}}],["throwerror(e",{"_index":970,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["throwerror(new",{"_index":969,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["timeago",{"_index":94,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{}}}],["timeout",{"_index":388,"title":{},"body":{"injectables/CronService.html":{},"injectables/TimeoutInterceptor.html":{}}}],["timeout(10000",{"_index":963,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["timeout(50000",{"_index":404,"title":{},"body":{"injectables/CronService.html":{}}}],["timeouterror",{"_index":961,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["timeoutinterceptor",{"_index":952,"title":{"injectables/TimeoutInterceptor.html":{}},"body":{"injectables/TimeoutInterceptor.html":{},"coverage.html":{}}}],["times",{"_index":392,"title":{},"body":{"injectables/CronService.html":{}}}],["timestamp",{"_index":793,"title":{},"body":{"classes/QueryFailedFilter.html":{}}}],["toadd",{"_index":579,"title":{},"body":{"injectables/DBHelper.html":{}}}],["tohexstring",{"_index":1040,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["tohexstring(value",{"_index":1139,"title":{},"body":{"miscellaneous/functions.html":{}}}],["toremove",{"_index":577,"title":{},"body":{"injectables/DBHelper.html":{}}}],["toremove.indexof(value",{"_index":583,"title":{},"body":{"injectables/DBHelper.html":{}}}],["total",{"_index":17,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"classes/CrudService.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"classes/GetManyDto.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/ICrudService.html":{},"interfaces/IPagination.html":{},"interfaces/IPagination-1.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{}}}],["touch",{"_index":1180,"title":{},"body":{"index.html":{}}}],["transacting(trx",{"_index":951,"title":{},"body":{"injectables/TagsService.html":{}}}],["transaction",{"_index":939,"title":{},"body":{"injectables/TagsService.html":{}}}],["transaction(this.modelclass",{"_index":948,"title":{},"body":{"injectables/TagsService.html":{}}}],["transform",{"_index":614,"title":{},"body":{"injectables/ExcludeNullUndefinedInterceptor.html":{},"classes/PaginationParams.html":{}}}],["transform((val",{"_index":756,"title":{},"body":{"classes/PaginationParams.html":{}}}],["transformer",{"_index":360,"title":{},"body":{"classes/CreateTagsDto.html":{},"classes/GetTagsResponseDto.html":{},"classes/PaginationParams.html":{},"classes/UpdateTagsDto.html":{},"dependencies.html":{}}}],["transforminterceptor",{"_index":823,"title":{"injectables/TransformInterceptor.html":{}},"body":{"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{},"coverage.html":{}}}],["true",{"_index":220,"title":{},"body":{"modules/AppModule.html":{},"classes/BaseEntity.html":{},"injectables/CronService.html":{},"classes/CrudService.html":{},"modules/DatabaseModule.html":{},"guards/RequestGuard.html":{},"guards/ResponseGuard.html":{},"miscellaneous/variables.html":{}}}],["trx",{"_index":949,"title":{},"body":{"injectables/TagsService.html":{}}}],["try",{"_index":520,"title":{},"body":{"classes/CrudService.html":{},"classes/User.html":{}}}],["ts",{"_index":546,"title":{},"body":{"classes/CrudService.html":{},"controllers/HealthController.html":{},"classes/QueryFailedFilter.html":{}}}],["twitter",{"_index":1186,"title":{},"body":{"index.html":{}}}],["type",{"_index":19,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"modules/AppModule.html":{},"classes/BaseEntity.html":{},"classes/BaseModel.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"classes/CreateTagsDto.html":{},"injectables/CronService.html":{},"classes/CrudController.html":{},"classes/CrudService.html":{},"injectables/DBHelper.html":{},"injectables/ExcludeNullUndefinedInterceptor.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"classes/GetManyDto.html":{},"interfaces/GetRescueList.html":{},"classes/GetTagsResponseDto.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"controllers/HealthController.html":{},"interfaces/ICrudService.html":{},"interfaces/IPagination.html":{},"interfaces/IPagination-1.html":{},"interfaces/ITryRequest.html":{},"classes/PaginationParams.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"classes/QueryFailedFilter.html":{},"guards/RequestGuard.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/Response.html":{},"guards/ResponseGuard.html":{},"classes/Tag.html":{},"controllers/TagsController.html":{},"injectables/TagsService.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/TransformInterceptor.html":{},"classes/User.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["type('text/html",{"_index":679,"title":{},"body":{"controllers/HealthController.html":{}}}],["typealiases",{"_index":1197,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typeof",{"_index":817,"title":{},"body":{"guards/RequestGuard.html":{}}}],["typeorm",{"_index":323,"title":{},"body":{"classes/BaseEntity.html":{},"classes/CrudController.html":{},"classes/CrudService.html":{},"injectables/DBHelper.html":{},"interfaces/ICrudService.html":{},"interfaces/IPagination.html":{},"dependencies.html":{}}}],["typeorm/query",{"_index":458,"title":{},"body":{"classes/CrudController.html":{},"classes/CrudService.html":{},"interfaces/ICrudService.html":{},"interfaces/IPagination.html":{}}}],["types",{"_index":1073,"title":{},"body":{"dependencies.html":{}}}],["types/dotenv",{"_index":1088,"title":{},"body":{"dependencies.html":{}}}],["typescript",{"_index":192,"title":{},"body":{"modules/AppModule.html":{},"classes/CrudService.html":{},"modules/DatabaseModule.html":{},"injectables/ExcludeNullUndefinedInterceptor.html":{},"interfaces/Response.html":{},"guards/ResponseGuard.html":{},"injectables/TransformInterceptor.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["ui",{"_index":1120,"title":{},"body":{"dependencies.html":{}}}],["undefined",{"_index":611,"title":{},"body":{"injectables/ExcludeNullUndefinedInterceptor.html":{},"coverage.html":{}}}],["unique",{"_index":307,"title":{},"body":{"classes/BaseEntity.html":{}}}],["uniqueviolationerror",{"_index":770,"title":{},"body":{"classes/QueryFailedFilter.html":{}}}],["unit",{"_index":1161,"title":{},"body":{"index.html":{}}}],["unsafe",{"_index":194,"title":{},"body":{"modules/AppModule.html":{},"classes/CrudService.html":{},"injectables/ExcludeNullUndefinedInterceptor.html":{},"controllers/HealthController.html":{},"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["until",{"_index":270,"title":{},"body":{"modules/AppModule.html":{}}}],["unused",{"_index":586,"title":{},"body":{"modules/DatabaseModule.html":{},"controllers/TagsController.html":{}}}],["up",{"_index":1048,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["up(knex",{"_index":1137,"title":{},"body":{"miscellaneous/functions.html":{}}}],["update",{"_index":428,"title":{},"body":{"classes/CrudController.html":{},"classes/CrudService.html":{},"interfaces/ICrudService.html":{},"controllers/TagsController.html":{},"injectables/TagsService.html":{}}}],["update(id",{"_index":451,"title":{},"body":{"classes/CrudController.html":{},"classes/CrudService.html":{},"interfaces/ICrudService.html":{},"interfaces/IPagination.html":{}}}],["update(r",{"_index":894,"title":{},"body":{"controllers/TagsController.html":{}}}],["update(undefined",{"_index":936,"title":{},"body":{"injectables/TagsService.html":{}}}],["updatedat",{"_index":291,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseModel.html":{},"classes/CreateTagsDto.html":{},"classes/GetTagsResponseDto.html":{},"classes/Tag.html":{},"classes/UpdateTagsDto.html":{},"classes/User.html":{}}}],["updatedatecolumn",{"_index":319,"title":{},"body":{"classes/BaseEntity.html":{}}}],["updateresult",{"_index":717,"title":{},"body":{"interfaces/ICrudService.html":{},"interfaces/IPagination.html":{}}}],["updatetagsdto",{"_index":370,"title":{"classes/UpdateTagsDto.html":{}},"body":{"classes/CreateTagsDto.html":{},"classes/GetTagsResponseDto.html":{},"controllers/TagsController.html":{},"classes/UpdateTagsDto.html":{},"coverage.html":{}}}],["use",{"_index":146,"title":{},"body":{"controllers/AppController.html":{},"classes/CrudService.html":{},"controllers/HealthController.html":{},"controllers/TagsController.html":{}}}],["used",{"_index":874,"title":{},"body":{"classes/Tag.html":{},"classes/User.html":{}}}],["usefactory",{"_index":600,"title":{},"body":{"modules/DatabaseModule.html":{},"miscellaneous/variables.html":{}}}],["useinterceptors",{"_index":897,"title":{},"body":{"controllers/TagsController.html":{}}}],["useinterceptors(crudrequestinterceptor",{"_index":909,"title":{},"body":{"controllers/TagsController.html":{}}}],["usenullasdefault",{"_index":603,"title":{},"body":{"modules/DatabaseModule.html":{},"miscellaneous/variables.html":{}}}],["user",{"_index":52,"title":{"classes/User.html":{}},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"classes/User.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{},"coverage.html":{}}}],["useraddress",{"_index":69,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{}}}],["usercontacts",{"_index":70,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{}}}],["useremail",{"_index":71,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{}}}],["userid",{"_index":128,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{}}}],["username",{"_index":72,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"classes/User.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{}}}],["userpost",{"_index":84,"title":{"interfaces/UserPost.html":{}},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{},"coverage.html":{}}}],["userposts",{"_index":98,"title":{"interfaces/UserPosts.html":{}},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{},"coverage.html":{}}}],["users",{"_index":1014,"title":{},"body":{"classes/User.html":{},"miscellaneous/variables.html":{}}}],["usesid",{"_index":53,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{}}}],["usevalue",{"_index":598,"title":{},"body":{"modules/DatabaseModule.html":{},"miscellaneous/variables.html":{}}}],["using",{"_index":994,"title":{},"body":{"classes/User.html":{}}}],["valid('development",{"_index":231,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["validation",{"_index":875,"title":{},"body":{"classes/Tag.html":{},"classes/User.html":{}}}],["validationoptions",{"_index":221,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["validationschema",{"_index":224,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["validator",{"_index":366,"title":{},"body":{"classes/CreateTagsDto.html":{},"classes/GetTagsResponseDto.html":{},"classes/PaginationParams.html":{},"classes/UpdateTagsDto.html":{},"dependencies.html":{}}}],["value",{"_index":303,"title":{},"body":{"classes/BaseEntity.html":{},"injectables/CronService.html":{},"injectables/ExcludeNullUndefinedInterceptor.html":{},"classes/PaginationParams.html":{},"guards/RequestGuard.html":{},"classes/Tag.html":{},"injectables/TimeoutInterceptor.html":{},"classes/User.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["value.trim",{"_index":819,"title":{},"body":{"guards/RequestGuard.html":{}}}],["values",{"_index":575,"title":{},"body":{"injectables/DBHelper.html":{}}}],["variable",{"_index":1027,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":1200,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["various",{"_index":1021,"title":{},"body":{"classes/User.html":{}}}],["vars",{"_index":587,"title":{},"body":{"modules/DatabaseModule.html":{},"controllers/TagsController.html":{}}}],["version",{"_index":292,"title":{},"body":{"classes/BaseEntity.html":{}}}],["versioncolumn",{"_index":322,"title":{},"body":{"classes/BaseEntity.html":{}}}],["viewscont",{"_index":120,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{}}}],["visibility",{"_index":344,"title":{},"body":{"classes/BaseModel.html":{},"dependencies.html":{}}}],["visibilityplugin",{"_index":343,"title":{},"body":{"classes/BaseModel.html":{}}}],["void",{"_index":189,"title":{},"body":{"modules/AppModule.html":{},"injectables/CronService.html":{},"controllers/HealthController.html":{},"classes/QueryFailedFilter.html":{}}}],["watch",{"_index":1157,"title":{},"body":{"index.html":{}}}],["website",{"_index":1184,"title":{},"body":{"index.html":{}}}],["went",{"_index":839,"title":{},"body":{"guards/ResponseGuard.html":{}}}],["whenever",{"_index":876,"title":{},"body":{"classes/Tag.html":{},"classes/User.html":{}}}],["whitespace",{"_index":995,"title":{},"body":{"classes/User.html":{}}}],["withmeta",{"_index":853,"title":{},"body":{"guards/ResponseGuard.html":{}}}],["withmeta(data",{"_index":846,"title":{},"body":{"guards/ResponseGuard.html":{}}}],["world",{"_index":283,"title":{},"body":{"injectables/AppService.html":{}}}],["writeerror",{"_index":538,"title":{},"body":{"classes/CrudService.html":{}}}],["wrong",{"_index":840,"title":{},"body":{"guards/ResponseGuard.html":{}}}],["yes",{"_index":188,"title":{},"body":{"modules/AppModule.html":{},"classes/CrudController.html":{},"classes/CrudService.html":{},"controllers/HealthController.html":{},"interfaces/ICrudService.html":{}}}],["you'd",{"_index":1175,"title":{},"body":{"index.html":{}}}],["zoom",{"_index":177,"title":{},"body":{"modules/AppModule.html":{},"modules/CronModule.html":{},"modules/TagsModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"interfaces/APIResponse.html":{"url":"interfaces/APIResponse.html","title":"interface - APIResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  APIResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/domain.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        count\n                                \n                                \n                                        data\n                                \n                                \n                                        error\n                                \n                                \n                                        message\n                                \n                                \n                                            Optional\n                                        page\n                                \n                                \n                                            Optional\n                                        pageCount\n                                \n                                \n                                        statusCode\n                                \n                                \n                                            Optional\n                                        total\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        count\n                                    \n                                \n                                \n                                    \n                                        count:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                    \n                                \n                                \n                                    \n                                        data:     T\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     T\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        error\n                                    \n                                \n                                \n                                    \n                                        error:         APIError\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         APIError\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        message\n                                    \n                                \n                                \n                                    \n                                        message:     string | string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        page\n                                    \n                                \n                                \n                                    \n                                        page:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pageCount\n                                    \n                                \n                                \n                                    \n                                        pageCount:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        statusCode\n                                    \n                                \n                                \n                                    \n                                        statusCode:     HttpStatus\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     HttpStatus\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        total\n                                    \n                                \n                                \n                                    \n                                        total:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { HttpStatus } from '@nestjs/common'\n\nexport type Result =\n    | GetAppLaunchData\n    | GetUserProfile\n    | GetUserPosts\n    | GetComments\n    | GetRescueList\n    | GetFollowers\n    | GetFollowing\n\nexport type APIError = Error | string | null\n\nexport interface APIResponse {\n    data: T\n    error: APIError\n    message: string | string[]\n    statusCode: HttpStatus\n\n    count?: number\n    page?: number\n    pageCount?: number\n    total?: number\n}\n\nexport interface GetAppLaunchData {\n    link: 'api:/'\n    response: APIResponse\n}\n\nexport interface GetUserProfile {\n    link: 'api:v1/user/getUserProfile?userId=25'\n    response: APIResponse\n}\n\nexport interface GetUserPosts {\n    link: 'api:v1/user/getUserPosts?pageNo=0&pageSize=25'\n    response: APIResponse\n}\n\nexport interface GetRescueList {\n    link: 'api:v1/rescue/getRescueList?pageNo=0&pageSize=10&status=pending|inProgress|completed|nearest'\n    response: APIResponse\n}\n\nexport interface GetComments {\n    link: 'api:v1/rescue/getComments?pageNo=0&pageSize=10&postId=1230'\n    response: APIResponse\n}\n\nexport interface GetFollowers {\n    link: 'api:v1/rescue/getUserFollowers?userId=1230'\n    response: APIResponse\n}\n\nexport interface GetFollowing {\n    link: 'api:v1/rescue/getUserFollowing?userId=1230'\n    response: APIResponse\n}\n\nexport interface AppLaunchAction {\n    actionId: number\n    action: string\n    isActive: boolean\n    subject?: string\n}\n\nexport interface User {\n    usesId: number\n\n    coverImage: string\n    following: boolean\n    gender: string\n    isOwnProfile: number\n    isRescuer: boolean\n    latitude: number\n    longitude: number\n    numberOfFollowers: number\n    numberOfFollowing: number\n    numberOfPosts: number\n    numberOfRescuesCompleted: number\n    numberOfRescuesCreated: number\n    numberOfRescuesInProgress: number\n    profileImage: string\n    rescuer: boolean\n    userAddress: string\n    userContacts: string\n    userEmail: string\n    userName: string\n    badge: {\n        badgeId: number\n        badgeName: string\n        badgeDescription: string\n        recuesCompletionNeeded: number\n    }\n    setting: {\n        showMyContacts: boolean\n        getNotifications: boolean\n    }\n}\n\nexport interface PostType {\n    postTypeId: number\n    postType: string\n}\n\nexport interface PostedByUser {\n    usesId: number\n    badgeName: string\n    following: boolean\n    profileImage: string\n    rescuer: boolean\n    userName: string\n}\n\nexport interface UserPost {\n    postId: number\n    commentsCount: number\n    isUserReactedToPost: boolean\n    ownPage: boolean\n    postBy: PostedByUser\n    postImage: string\n    postTime: string\n    postType: PostType\n    postVideo: string\n    reactionsCount: number\n    timeAgo: string\n\n    adCorporateLogoUrl: string | null\n    corporateDescription: string | null\n    corporateName: string | null\n}\n\nexport interface UserPosts {\n    isRecent: boolean\n    feed: UserPost[]\n}\n\nexport interface Rescues {\n    rescueId: number\n    animalImageUrl: string\n    distance: number\n    distanceAway: string\n    emergencyType: string\n    postedBy: string\n    postedMinAgo: string\n    rescueDate: Date\n    rescuedPetName: string\n    rescueLocality: string\n    rescuers: {\n        contact: number\n        name: string\n        profileId: number\n        profileImageUrl: string\n        rescues: boolean\n        showMyNumber: boolean\n    }\n    rescueStatus: string\n    viewsCont: number\n}\n\nexport interface RescueLists {\n    rescues: Rescues[]\n}\n\nexport interface Comment {\n    commentId: number\n    comment: string\n    commentedUseName: string\n    commentedUserId: number\n    timeAgo: string\n}\n\nexport interface Comments {\n    comments: Comment[]\n}\n\nexport interface Follower {\n    userId: number\n    userName: string\n    profileImage: string\n    areYouFollowing: boolean\n    showRemoveOption: boolean\n}\n\nexport interface Following extends Follower {}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getHello\n                        \n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/app.controller.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        /* eslint-disable no-use-before-define */\nimport { Controller, Get } from '@nestjs/common'\nimport { ApiTags } from '@nestjs/swagger'\n\nimport { AppService } from './app.service'\n\n@Controller(AppController.path)\n@ApiTags(AppController.name)\nexport class AppController {\n    static path = '/'\n\n    constructor(private readonly appService: AppService) {}\n\n    @Get()\n    getHello(): string {\n        return this.appService.getHello()\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AppLaunchAction.html":{"url":"interfaces/AppLaunchAction.html","title":"interface - AppLaunchAction","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  AppLaunchAction\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/domain.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        action\n                                \n                                \n                                        actionId\n                                \n                                \n                                        isActive\n                                \n                                \n                                            Optional\n                                        subject\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        action\n                                    \n                                \n                                \n                                    \n                                        action:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        actionId\n                                    \n                                \n                                \n                                    \n                                        actionId:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isActive\n                                    \n                                \n                                \n                                    \n                                        isActive:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        subject\n                                    \n                                \n                                \n                                    \n                                        subject:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { HttpStatus } from '@nestjs/common'\n\nexport type Result =\n    | GetAppLaunchData\n    | GetUserProfile\n    | GetUserPosts\n    | GetComments\n    | GetRescueList\n    | GetFollowers\n    | GetFollowing\n\nexport type APIError = Error | string | null\n\nexport interface APIResponse {\n    data: T\n    error: APIError\n    message: string | string[]\n    statusCode: HttpStatus\n\n    count?: number\n    page?: number\n    pageCount?: number\n    total?: number\n}\n\nexport interface GetAppLaunchData {\n    link: 'api:/'\n    response: APIResponse\n}\n\nexport interface GetUserProfile {\n    link: 'api:v1/user/getUserProfile?userId=25'\n    response: APIResponse\n}\n\nexport interface GetUserPosts {\n    link: 'api:v1/user/getUserPosts?pageNo=0&pageSize=25'\n    response: APIResponse\n}\n\nexport interface GetRescueList {\n    link: 'api:v1/rescue/getRescueList?pageNo=0&pageSize=10&status=pending|inProgress|completed|nearest'\n    response: APIResponse\n}\n\nexport interface GetComments {\n    link: 'api:v1/rescue/getComments?pageNo=0&pageSize=10&postId=1230'\n    response: APIResponse\n}\n\nexport interface GetFollowers {\n    link: 'api:v1/rescue/getUserFollowers?userId=1230'\n    response: APIResponse\n}\n\nexport interface GetFollowing {\n    link: 'api:v1/rescue/getUserFollowing?userId=1230'\n    response: APIResponse\n}\n\nexport interface AppLaunchAction {\n    actionId: number\n    action: string\n    isActive: boolean\n    subject?: string\n}\n\nexport interface User {\n    usesId: number\n\n    coverImage: string\n    following: boolean\n    gender: string\n    isOwnProfile: number\n    isRescuer: boolean\n    latitude: number\n    longitude: number\n    numberOfFollowers: number\n    numberOfFollowing: number\n    numberOfPosts: number\n    numberOfRescuesCompleted: number\n    numberOfRescuesCreated: number\n    numberOfRescuesInProgress: number\n    profileImage: string\n    rescuer: boolean\n    userAddress: string\n    userContacts: string\n    userEmail: string\n    userName: string\n    badge: {\n        badgeId: number\n        badgeName: string\n        badgeDescription: string\n        recuesCompletionNeeded: number\n    }\n    setting: {\n        showMyContacts: boolean\n        getNotifications: boolean\n    }\n}\n\nexport interface PostType {\n    postTypeId: number\n    postType: string\n}\n\nexport interface PostedByUser {\n    usesId: number\n    badgeName: string\n    following: boolean\n    profileImage: string\n    rescuer: boolean\n    userName: string\n}\n\nexport interface UserPost {\n    postId: number\n    commentsCount: number\n    isUserReactedToPost: boolean\n    ownPage: boolean\n    postBy: PostedByUser\n    postImage: string\n    postTime: string\n    postType: PostType\n    postVideo: string\n    reactionsCount: number\n    timeAgo: string\n\n    adCorporateLogoUrl: string | null\n    corporateDescription: string | null\n    corporateName: string | null\n}\n\nexport interface UserPosts {\n    isRecent: boolean\n    feed: UserPost[]\n}\n\nexport interface Rescues {\n    rescueId: number\n    animalImageUrl: string\n    distance: number\n    distanceAway: string\n    emergencyType: string\n    postedBy: string\n    postedMinAgo: string\n    rescueDate: Date\n    rescuedPetName: string\n    rescueLocality: string\n    rescuers: {\n        contact: number\n        name: string\n        profileId: number\n        profileImageUrl: string\n        rescues: boolean\n        showMyNumber: boolean\n    }\n    rescueStatus: string\n    viewsCont: number\n}\n\nexport interface RescueLists {\n    rescues: Rescues[]\n}\n\nexport interface Comment {\n    commentId: number\n    comment: string\n    commentedUseName: string\n    commentedUserId: number\n    timeAgo: string\n}\n\nexport interface Comments {\n    comments: Comment[]\n}\n\nexport interface Follower {\n    userId: number\n    userName: string\n    profileImage: string\n    areYouFollowing: boolean\n    showRemoveOption: boolean\n}\n\nexport interface Following extends Follower {}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AppModule_imports\n\n\n\n\nCronModule\n\nCronModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nCronModule->AppModule\n\n\n\n\n\nDatabaseModule\n\nDatabaseModule\n\nAppModule -->\n\nDatabaseModule->AppModule\n\n\n\n\n\nTagsModule\n\nTagsModule\n\nAppModule -->\n\nTagsModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                        \n                            HealthController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            CronModule\n                        \n                        \n                            DatabaseModule\n                        \n                        \n                            TagsModule\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onApplicationShutdown\n                        \n                        \n                    \n                \n            \n            \n                \nonApplicationShutdown(signal?: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app.module.ts:67\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    signal\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onModuleInit\n                        \n                        \n                    \n                \n            \n            \n                \nonModuleInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app.module.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        /* eslint-disable @typescript-eslint/no-unsafe-assignment,@typescript-eslint/no-unsafe-call,@typescript-eslint/no-unsafe-member-access,@typescript-eslint/require-await */\nimport { Module, OnApplicationShutdown, OnModuleInit } from '@nestjs/common'\nimport { ConfigModule } from '@nestjs/config'\nimport { ScheduleModule } from '@nestjs/schedule'\nimport { ServeStaticModule } from '@nestjs/serve-static'\nimport { TerminusModule } from '@nestjs/terminus'\n\nimport * as Joi from '@hapi/joi'\nimport { join } from 'path'\n\nimport { AppController } from './app.controller'\nimport { AppService } from './app.service'\nimport { CronModule } from './cron/cron.module'\nimport { DatabaseModule } from './database/database.module'\nimport { HealthController } from './health/health.controller'\nimport { TagsModule } from './tags/tags.module'\n\nconst ConfigModuleOptions = {\n    isGlobal: true,\n    validationOptions: {\n        allowUnknown: true,\n        abortEarly: true,\n    },\n    validationSchema: Joi.object({\n        PORT: Joi.number().default(3000),\n        NODE_ENV: Joi.string()\n            .required()\n            .valid('development', 'production', 'test', 'provision')\n            .default('development'),\n\n        database: Joi.string().required(),\n        type: Joi.string().required(),\n        logging: Joi.string().required(),\n        synchronize: Joi.string().required(),\n    }),\n}\n\n@Module({\n    controllers: [AppController, HealthController],\n    imports: [\n        ConfigModule.forRoot(ConfigModuleOptions),\n        ServeStaticModule.forRoot({\n            rootPath: join(__dirname, '..', 'redoc'),\n            exclude: ['/api*'],\n        }),\n        DatabaseModule,\n        ScheduleModule.forRoot(), // CronModules deps\n        CronModule,\n        TerminusModule, // Health module\n        TagsModule,\n    ],\n    providers: [AppService],\n})\nexport class AppModule implements OnModuleInit, OnApplicationShutdown {\n    /*\n     * When the application receives a termination signal it will call any registered\n     * onModuleDestroy(), beforeApplicationShutdown(), then onApplicationShutdown() methods\n     * (in the sequence described above) with the corresponding signal as the first parameter.\n     * If a registered function awaits an asynchronous call (returns a promise), Nest will not\n     * continue in the sequence until the promise is resolved or rejected.\n     */\n\n    onModuleInit(): void {\n        console.info(`ModuleInit - AppModule has been initialized.`)\n    }\n\n    onApplicationShutdown(signal?: string): void {\n        console.error(\n            `ApplicationShutdown - AppModule has been shutdown with ${signal} signal`,\n        )\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getHello\n                        \n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n            \n                \n                    Defined in src/app.service.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common'\n\n@Injectable()\nexport class AppService {\n    getHello(): string {\n        return 'Hello World!'\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BaseEntity.html":{"url":"classes/BaseEntity.html","title":"class - BaseEntity","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BaseEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/base/datum/base-entity.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                createdAt\n                            \n                            \n                                    Optional\n                                deletedAt\n                            \n                            \n                                    Static\n                                exclude\n                            \n                            \n                                id\n                            \n                            \n                                    Optional\n                                updatedAt\n                            \n                            \n                                    Optional\n                                version\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({example: '2000-01-01T12:00:00.000Z'})@CreateDateColumn({select: false, nullable: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/base/datum/base-entity.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            deletedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Date | null\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({example: '2000-01-01T12:00:00.000Z'})@DeleteDateColumn({select: false, nullable: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/base/datum/base-entity.ts:43\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            exclude\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n        'password',\n        'version',\n        'createdAt',\n        'updatedAt',\n        'deletedAt',\n    ]\n                        \n                    \n                        \n                            \n                                    Defined in src/base/datum/base-entity.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'Unique ID', example: 1})@PrimaryGeneratedColumn()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/base/datum/base-entity.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({example: '2000-01-01T12:00:00.000Z'})@UpdateDateColumn({select: false, nullable: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/base/datum/base-entity.ts:39\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            version\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({example: '2000-01-01T12:00:00.000Z'})@VersionColumn({default: 1, select: false, nullable: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/base/datum/base-entity.ts:31\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger'\n\nimport {\n    PrimaryGeneratedColumn,\n    UpdateDateColumn,\n    CreateDateColumn,\n    DeleteDateColumn,\n    VersionColumn,\n} from 'typeorm'\n\nexport abstract class BaseEntity {\n    public static exclude = [\n        'password',\n        'version',\n        'createdAt',\n        'updatedAt',\n        'deletedAt',\n    ]\n\n    @ApiProperty({ description: 'Unique ID', example: 1 })\n    @PrimaryGeneratedColumn()\n    id: number\n\n    @ApiProperty({ example: '2000-01-01T12:00:00.000Z' })\n    @VersionColumn({\n        default: 1,\n        select: false,\n        nullable: true,\n    })\n    version?: number\n\n    @ApiProperty({ example: '2000-01-01T12:00:00.000Z' })\n    @CreateDateColumn({ select: false, nullable: true })\n    createdAt?: Date\n\n    @ApiProperty({ example: '2000-01-01T12:00:00.000Z' })\n    @UpdateDateColumn({ select: false, nullable: true })\n    updatedAt?: Date\n\n    @ApiProperty({ example: '2000-01-01T12:00:00.000Z' })\n    @DeleteDateColumn({ select: false, nullable: true })\n    deletedAt?: Date | null\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BaseModel.html":{"url":"classes/BaseModel.html","title":"class - BaseModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BaseModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/database/models/base.model.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                createdAt\n                            \n                            \n                                    Optional\n                                deletedAt\n                            \n                            \n                                    Optional\n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({example: '2000-01-01T12:00:00.000Z'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/database/models/base.model.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            deletedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Date | null\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({example: '2000-01-01T12:00:00.000Z'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/database/models/base.model.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({example: '2000-01-01T12:00:00.000Z'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/database/models/base.model.ts:19\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger'\n\nimport {\n    Model,\n    ModelOptions,\n    QueryContext,\n    snakeCaseMappers,\n    ColumnNameMappers,\n    mixin,\n} from 'objection'\nimport { DBErrors } from 'objection-db-errors'\nimport visibilityPlugin from 'objection-visibility'\n\nexport class BaseModel extends mixin(Model, [visibilityPlugin, DBErrors]) {\n    @ApiProperty({ example: '2000-01-01T12:00:00.000Z' })\n    createdAt?: Date\n\n    @ApiProperty({ example: '2000-01-01T12:00:00.000Z' })\n    updatedAt?: Date\n\n    @ApiProperty({ example: '2000-01-01T12:00:00.000Z' })\n    deletedAt?: Date | null\n\n    // async $beforeInsert(queryContext: QueryContext) {\n    //     await super.$beforeInsert(queryContext)\n    //\n    //     this.createdAt = new Date()\n    //     this.updatedAt = new Date()\n    // }\n    //\n    // async $beforeUpdate(opt: ModelOptions, queryContext: QueryContext) {\n    //     await super.$beforeUpdate(opt, queryContext)\n    //\n    //     this.updatedAt = new Date()\n    // }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Comment.html":{"url":"interfaces/Comment.html","title":"interface - Comment","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Comment\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/domain.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        comment\n                                \n                                \n                                        commentedUseName\n                                \n                                \n                                        commentedUserId\n                                \n                                \n                                        commentId\n                                \n                                \n                                        timeAgo\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        comment\n                                    \n                                \n                                \n                                    \n                                        comment:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        commentedUseName\n                                    \n                                \n                                \n                                    \n                                        commentedUseName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        commentedUserId\n                                    \n                                \n                                \n                                    \n                                        commentedUserId:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        commentId\n                                    \n                                \n                                \n                                    \n                                        commentId:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        timeAgo\n                                    \n                                \n                                \n                                    \n                                        timeAgo:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { HttpStatus } from '@nestjs/common'\n\nexport type Result =\n    | GetAppLaunchData\n    | GetUserProfile\n    | GetUserPosts\n    | GetComments\n    | GetRescueList\n    | GetFollowers\n    | GetFollowing\n\nexport type APIError = Error | string | null\n\nexport interface APIResponse {\n    data: T\n    error: APIError\n    message: string | string[]\n    statusCode: HttpStatus\n\n    count?: number\n    page?: number\n    pageCount?: number\n    total?: number\n}\n\nexport interface GetAppLaunchData {\n    link: 'api:/'\n    response: APIResponse\n}\n\nexport interface GetUserProfile {\n    link: 'api:v1/user/getUserProfile?userId=25'\n    response: APIResponse\n}\n\nexport interface GetUserPosts {\n    link: 'api:v1/user/getUserPosts?pageNo=0&pageSize=25'\n    response: APIResponse\n}\n\nexport interface GetRescueList {\n    link: 'api:v1/rescue/getRescueList?pageNo=0&pageSize=10&status=pending|inProgress|completed|nearest'\n    response: APIResponse\n}\n\nexport interface GetComments {\n    link: 'api:v1/rescue/getComments?pageNo=0&pageSize=10&postId=1230'\n    response: APIResponse\n}\n\nexport interface GetFollowers {\n    link: 'api:v1/rescue/getUserFollowers?userId=1230'\n    response: APIResponse\n}\n\nexport interface GetFollowing {\n    link: 'api:v1/rescue/getUserFollowing?userId=1230'\n    response: APIResponse\n}\n\nexport interface AppLaunchAction {\n    actionId: number\n    action: string\n    isActive: boolean\n    subject?: string\n}\n\nexport interface User {\n    usesId: number\n\n    coverImage: string\n    following: boolean\n    gender: string\n    isOwnProfile: number\n    isRescuer: boolean\n    latitude: number\n    longitude: number\n    numberOfFollowers: number\n    numberOfFollowing: number\n    numberOfPosts: number\n    numberOfRescuesCompleted: number\n    numberOfRescuesCreated: number\n    numberOfRescuesInProgress: number\n    profileImage: string\n    rescuer: boolean\n    userAddress: string\n    userContacts: string\n    userEmail: string\n    userName: string\n    badge: {\n        badgeId: number\n        badgeName: string\n        badgeDescription: string\n        recuesCompletionNeeded: number\n    }\n    setting: {\n        showMyContacts: boolean\n        getNotifications: boolean\n    }\n}\n\nexport interface PostType {\n    postTypeId: number\n    postType: string\n}\n\nexport interface PostedByUser {\n    usesId: number\n    badgeName: string\n    following: boolean\n    profileImage: string\n    rescuer: boolean\n    userName: string\n}\n\nexport interface UserPost {\n    postId: number\n    commentsCount: number\n    isUserReactedToPost: boolean\n    ownPage: boolean\n    postBy: PostedByUser\n    postImage: string\n    postTime: string\n    postType: PostType\n    postVideo: string\n    reactionsCount: number\n    timeAgo: string\n\n    adCorporateLogoUrl: string | null\n    corporateDescription: string | null\n    corporateName: string | null\n}\n\nexport interface UserPosts {\n    isRecent: boolean\n    feed: UserPost[]\n}\n\nexport interface Rescues {\n    rescueId: number\n    animalImageUrl: string\n    distance: number\n    distanceAway: string\n    emergencyType: string\n    postedBy: string\n    postedMinAgo: string\n    rescueDate: Date\n    rescuedPetName: string\n    rescueLocality: string\n    rescuers: {\n        contact: number\n        name: string\n        profileId: number\n        profileImageUrl: string\n        rescues: boolean\n        showMyNumber: boolean\n    }\n    rescueStatus: string\n    viewsCont: number\n}\n\nexport interface RescueLists {\n    rescues: Rescues[]\n}\n\nexport interface Comment {\n    commentId: number\n    comment: string\n    commentedUseName: string\n    commentedUserId: number\n    timeAgo: string\n}\n\nexport interface Comments {\n    comments: Comment[]\n}\n\nexport interface Follower {\n    userId: number\n    userName: string\n    profileImage: string\n    areYouFollowing: boolean\n    showRemoveOption: boolean\n}\n\nexport interface Following extends Follower {}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Comments.html":{"url":"interfaces/Comments.html","title":"interface - Comments","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Comments\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/domain.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        comments\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        comments\n                                    \n                                \n                                \n                                    \n                                        comments:         Comment[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Comment[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { HttpStatus } from '@nestjs/common'\n\nexport type Result =\n    | GetAppLaunchData\n    | GetUserProfile\n    | GetUserPosts\n    | GetComments\n    | GetRescueList\n    | GetFollowers\n    | GetFollowing\n\nexport type APIError = Error | string | null\n\nexport interface APIResponse {\n    data: T\n    error: APIError\n    message: string | string[]\n    statusCode: HttpStatus\n\n    count?: number\n    page?: number\n    pageCount?: number\n    total?: number\n}\n\nexport interface GetAppLaunchData {\n    link: 'api:/'\n    response: APIResponse\n}\n\nexport interface GetUserProfile {\n    link: 'api:v1/user/getUserProfile?userId=25'\n    response: APIResponse\n}\n\nexport interface GetUserPosts {\n    link: 'api:v1/user/getUserPosts?pageNo=0&pageSize=25'\n    response: APIResponse\n}\n\nexport interface GetRescueList {\n    link: 'api:v1/rescue/getRescueList?pageNo=0&pageSize=10&status=pending|inProgress|completed|nearest'\n    response: APIResponse\n}\n\nexport interface GetComments {\n    link: 'api:v1/rescue/getComments?pageNo=0&pageSize=10&postId=1230'\n    response: APIResponse\n}\n\nexport interface GetFollowers {\n    link: 'api:v1/rescue/getUserFollowers?userId=1230'\n    response: APIResponse\n}\n\nexport interface GetFollowing {\n    link: 'api:v1/rescue/getUserFollowing?userId=1230'\n    response: APIResponse\n}\n\nexport interface AppLaunchAction {\n    actionId: number\n    action: string\n    isActive: boolean\n    subject?: string\n}\n\nexport interface User {\n    usesId: number\n\n    coverImage: string\n    following: boolean\n    gender: string\n    isOwnProfile: number\n    isRescuer: boolean\n    latitude: number\n    longitude: number\n    numberOfFollowers: number\n    numberOfFollowing: number\n    numberOfPosts: number\n    numberOfRescuesCompleted: number\n    numberOfRescuesCreated: number\n    numberOfRescuesInProgress: number\n    profileImage: string\n    rescuer: boolean\n    userAddress: string\n    userContacts: string\n    userEmail: string\n    userName: string\n    badge: {\n        badgeId: number\n        badgeName: string\n        badgeDescription: string\n        recuesCompletionNeeded: number\n    }\n    setting: {\n        showMyContacts: boolean\n        getNotifications: boolean\n    }\n}\n\nexport interface PostType {\n    postTypeId: number\n    postType: string\n}\n\nexport interface PostedByUser {\n    usesId: number\n    badgeName: string\n    following: boolean\n    profileImage: string\n    rescuer: boolean\n    userName: string\n}\n\nexport interface UserPost {\n    postId: number\n    commentsCount: number\n    isUserReactedToPost: boolean\n    ownPage: boolean\n    postBy: PostedByUser\n    postImage: string\n    postTime: string\n    postType: PostType\n    postVideo: string\n    reactionsCount: number\n    timeAgo: string\n\n    adCorporateLogoUrl: string | null\n    corporateDescription: string | null\n    corporateName: string | null\n}\n\nexport interface UserPosts {\n    isRecent: boolean\n    feed: UserPost[]\n}\n\nexport interface Rescues {\n    rescueId: number\n    animalImageUrl: string\n    distance: number\n    distanceAway: string\n    emergencyType: string\n    postedBy: string\n    postedMinAgo: string\n    rescueDate: Date\n    rescuedPetName: string\n    rescueLocality: string\n    rescuers: {\n        contact: number\n        name: string\n        profileId: number\n        profileImageUrl: string\n        rescues: boolean\n        showMyNumber: boolean\n    }\n    rescueStatus: string\n    viewsCont: number\n}\n\nexport interface RescueLists {\n    rescues: Rescues[]\n}\n\nexport interface Comment {\n    commentId: number\n    comment: string\n    commentedUseName: string\n    commentedUserId: number\n    timeAgo: string\n}\n\nexport interface Comments {\n    comments: Comment[]\n}\n\nexport interface Follower {\n    userId: number\n    userName: string\n    profileImage: string\n    areYouFollowing: boolean\n    showRemoveOption: boolean\n}\n\nexport interface Following extends Follower {}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateTagsDto.html":{"url":"classes/CreateTagsDto.html","title":"class - CreateTagsDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateTagsDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/tags/tags.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({example: 'tag1'})@IsString()@IsNotEmpty()@MinLength(2)@MaxLength(36)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/tags/tags.dto.ts:19\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiHideProperty, ApiProperty, PartialType } from '@nestjs/swagger'\n\nimport { Exclude } from 'class-transformer'\nimport {\n    IsString,\n    MinLength,\n    IsNotEmpty,\n    IsOptional,\n    MaxLength,\n} from 'class-validator'\n\nexport class CreateTagsDto {\n    @ApiProperty({ example: 'tag1' })\n    @IsString()\n    @IsNotEmpty()\n    @MinLength(2)\n    @MaxLength(36)\n    name: string\n}\n\nexport class UpdateTagsDto extends PartialType(CreateTagsDto) {}\n\nexport class GetTagsResponseDto {\n    @ApiProperty()\n    id: number\n\n    @ApiProperty()\n    name: string\n\n    @ApiHideProperty()\n    @Exclude()\n    createdAt: any\n\n    @ApiHideProperty()\n    @Exclude()\n    updatedAt: any\n\n    @ApiHideProperty()\n    @Exclude()\n    deletedAt: any\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CronModule.html":{"url":"modules/CronModule.html","title":"module - CronModule","body":"\n                   \n\n\n\n\n    Modules\n    CronModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_CronModule\n\n\n\ncluster_CronModule_providers\n\n\n\n\nCronService\n\nCronService\n\n\n\nCronModule\n\nCronModule\n\nCronModule -->\n\nCronService->CronModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/cron/cron.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            CronService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common'\n\nimport { CronService } from './cron.service'\n\n@Module({\n    providers: [CronService],\n})\nexport class CronModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CronService.html":{"url":"injectables/CronService.html","title":"injectable - CronService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  CronService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/cron/cron.service.ts\n        \n\n            \n                Description\n            \n            \n                @Cron are regular cron jobs\n@Interval To declare that a method should run at a (recurring) specified interval\n@Timeout To declare that a method should run (once) at a specified timeout\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                count\n                            \n                            \n                                fact16\n                            \n                            \n                                logger\n                            \n                            \n                                times\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                factorial\n                            \n                            \n                                handleCron\n                            \n                            \n                                handleInterval\n                            \n                            \n                                handleTimeout\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            factorial\n                        \n                        \n                    \n                \n            \n            \n                \nfactorial(n)\n                \n            \n\n\n            \n                \n                    Defined in src/cron/cron.service.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    n\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            handleCron\n                        \n                        \n                    \n                \n            \n            \n                \nhandleCron()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Cron('60 * * * * *')\n                \n            \n\n            \n                \n                    Defined in src/cron/cron.service.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            handleInterval\n                        \n                        \n                    \n                \n            \n            \n                \nhandleInterval()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Interval(100000)\n                \n            \n\n            \n                \n                    Defined in src/cron/cron.service.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            handleTimeout\n                        \n                        \n                    \n                \n            \n            \n                \nhandleTimeout()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Timeout(50000)\n                \n            \n\n            \n                \n                    Defined in src/cron/cron.service.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            count\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in src/cron/cron.service.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            fact16\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 20922789888000\n                        \n                    \n                        \n                            \n                                    Defined in src/cron/cron.service.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            logger\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Logger(CronService.name)\n                        \n                    \n                        \n                            \n                                    Defined in src/cron/cron.service.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            times\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 50000000\n                        \n                    \n                        \n                            \n                                    Defined in src/cron/cron.service.ts:18\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable, Logger } from '@nestjs/common'\nimport { Cron, Interval, Timeout } from '@nestjs/schedule'\n\n/**\n * `@Cron` are regular cron jobs\n *\n * `@Interval` To declare that a method should run at a (recurring) specified interval\n *\n * `@Timeout` To declare that a method should run (once) at a specified timeout\n */\n@Injectable()\nexport class CronService {\n    static count = 0\n\n    logger = new Logger(CronService.name)\n\n    times = 50000000\n\n    fact16 = 20922789888000\n\n    factorial(n) {\n        if (n === 1) return 1\n        return n * this.factorial(n - 1)\n    }\n\n    @Cron('60 * * * * *')\n    handleCron() {\n        CronService.count += 1\n        this.logger.debug(\n            `Called when the second is 60, current count is ${CronService.count}`,\n        )\n\n        let ok = true\n        for (let i = 0; i \n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CrudController.html":{"url":"classes/CrudController.html","title":"class - CrudController","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CrudController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/base/crud/crud.controller.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                delete\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findById\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Protected\n                        constructor(crudService: ICrudService)\n                    \n                \n                        \n                            \n                                Defined in src/base/crud/crud.controller.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        crudService\n                                                  \n                                                        \n                                                                        ICrudService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            create\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    create(entity: DeepPartial, ...options: any[])\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n            \n                \n                    Defined in src/base/crud/crud.controller.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entity\n                                    \n                                            DeepPartial\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                            any[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            delete\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(id: string, ...options: any[])\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n            \n                \n                    Defined in src/base/crud/crud.controller.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                            any[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findAll\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll(filter?: PaginationParams)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/base/crud/crud.controller.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                                PaginationParams\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findById\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findById(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n            \n                \n                    Defined in src/base/crud/crud.controller.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            update\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: string, entity: QueryDeepPartialEntity, ...options: any[])\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Put(':id')\n                \n            \n\n            \n                \n                    Defined in src/base/crud/crud.controller.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    entity\n                                    \n                                            QueryDeepPartialEntity\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                            any[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Get, Post, Put, Delete, Body, Param } from '@nestjs/common'\n\nimport { DeepPartial } from 'typeorm'\nimport { QueryDeepPartialEntity } from 'typeorm/query-builder/QueryPartialEntity'\n\nimport { ICrudService } from './icrud.service'\nimport { PaginationParams } from './pagination-params'\n\nexport abstract class CrudController {\n    protected constructor(private readonly crudService: ICrudService) {}\n\n    @Get()\n    async findAll(filter?: PaginationParams) {\n        return this.crudService.findAll(filter)\n    }\n\n    @Get(':id')\n    async findById(@Param('id') id: string) {\n        return this.crudService.findOne(id)\n    }\n\n    @Post()\n    async create(@Body() entity: DeepPartial, ...options: any[]) {\n        return this.crudService.create(entity)\n    }\n\n    @Put(':id')\n    async update(\n        @Param('id') id: string,\n        @Body() entity: QueryDeepPartialEntity,\n        ...options: any[]\n    ) {\n        return this.crudService.update(id, entity) // FIXME: https://github.com/typeorm/typeorm/issues/1544\n    }\n\n    @Delete(':id')\n    async delete(@Param('id') id: string, ...options: any[]) {\n        return this.crudService.delete(id)\n    }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CrudService.html":{"url":"classes/CrudService.html","title":"class - CrudService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CrudService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/base/crud/crud.service.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            ICrudService\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                saltRounds\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                count\n                            \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                delete\n                            \n                            \n                                entityNotFound\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                findOneOrFail\n                            \n                            \n                                    Async\n                                getPasswordHash\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Protected\n                        constructor(repository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/base/crud/crud.service.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        repository\n                                                  \n                                                        \n                                                                    Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            saltRounds\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/base/crud/crud.service.ts:19\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            count\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    count(filter?: FindManyOptions)\n                \n            \n\n\n            \n                \n                    Defined in src/base/crud/crud.service.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                            FindManyOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            create\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    create(entity: DeepPartial, ...options: any[])\n                \n            \n\n\n            \n                \n                    Defined in src/base/crud/crud.service.ts:61\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entity\n                                    \n                                            DeepPartial\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                            any[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            delete\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(criteria: string | number | FindConditions, ...options: any[])\n                \n            \n\n\n            \n                \n                    Defined in src/base/crud/crud.service.ts:98\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    criteria\n                                    \n                                            string | number | FindConditions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                            any[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            entityNotFound\n                        \n                        \n                    \n                \n            \n            \n                \nentityNotFound()\n                \n            \n\n\n            \n                \n                    Defined in src/base/crud/crud.service.ts:109\n                \n            \n\n\n            \n                \n                    e.g., findOneById(id).pipe(map(entity => entity.id), entityNotFound())\n\n\n                    \n                        Returns :     (stream$: any) => any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findAll\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll(filter?: FindManyOptions)\n                \n            \n\n\n            \n                \n                    Defined in src/base/crud/crud.service.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                            FindManyOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findOne\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(id: string | number | FindOneOptions | FindConditions, options?: FindOneOptions)\n                \n            \n\n\n            \n                \n                    Defined in src/base/crud/crud.service.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                            string | number | FindOneOptions | FindConditions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                            FindOneOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findOneOrFail\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findOneOrFail(id: string | number | FindOneOptions | FindConditions, options?: FindOneOptions)\n                \n            \n\n\n            \n                \n                    Defined in src/base/crud/crud.service.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                            string | number | FindOneOptions | FindConditions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                            FindOneOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getPasswordHash\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getPasswordHash(password: string)\n                \n            \n\n\n            \n                \n                    Defined in src/base/crud/crud.service.ts:73\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            update\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: string | number | FindConditions, partialEntity: QueryDeepPartialEntity, ...options: any[])\n                \n            \n\n\n            \n                \n                    Defined in src/base/crud/crud.service.ts:77\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                            string | number | FindConditions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    partialEntity\n                                    \n                                            QueryDeepPartialEntity\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                            any[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { BadRequestException, NotFoundException } from '@nestjs/common'\n\nimport * as bcrypt from 'bcryptjs'\nimport { of, throwError } from 'rxjs'\nimport { mergeMap } from 'rxjs/operators'\nimport {\n    DeepPartial,\n    FindConditions,\n    FindManyOptions,\n    FindOneOptions,\n    Repository,\n} from 'typeorm'\nimport { QueryDeepPartialEntity } from 'typeorm/query-builder/QueryPartialEntity'\n\nimport { ICrudService } from './icrud.service'\n\nexport abstract class CrudService implements ICrudService {\n    saltRounds: number\n\n    protected constructor(protected readonly repository: Repository) {\n        this.saltRounds = 12\n    }\n\n    async count(filter?: FindManyOptions) {\n        return this.repository.count(filter)\n    }\n\n    async findAll(filter?: FindManyOptions) {\n        const total = await this.repository.count(filter)\n        const items = await this.repository.find(filter)\n\n        return { items, total }\n    }\n\n    async findOneOrFail(\n        id: string | number | FindOneOptions | FindConditions,\n        options?: FindOneOptions,\n    ) {\n        try {\n            const record = await this.repository.findOneOrFail(id as any, options)\n\n            return { success: true, record }\n        } catch (error) {\n            return { success: false, error } // eslint-disable-line @typescript-eslint/no-unsafe-assignment\n        }\n    }\n\n    async findOne(\n        id: string | number | FindOneOptions | FindConditions,\n        options?: FindOneOptions,\n    ) {\n        const record = await this.repository.findOne(id as any, options)\n\n        if (!record)\n            throw new NotFoundException(`The requested record was not found`)\n\n        return record\n    }\n\n    async create(entity: DeepPartial, ...options: any[]) {\n        const obj = this.repository.create(entity)\n\n        // READMEWHY: https://github.com/Microsoft/TypeScript/issues/21592\n        try {\n            return await this.repository.save(obj as any) // eslint-disable-line @typescript-eslint/no-unsafe-return\n        } catch (err /*: WriteError */) {\n            throw new BadRequestException(err)\n        }\n    }\n\n    // eslint-disable-next-line @typescript-eslint/require-await\n    async getPasswordHash(password: string) {\n        return bcrypt.hash(password, this.saltRounds)\n    }\n\n    async update(\n        id: string | number | FindConditions,\n        partialEntity: QueryDeepPartialEntity,\n        ...options: any[]\n    ) {\n        try {\n            // method getPasswordHash is copied from AuthService\n            // try if can import somehow the service and use its method\n\n            // @ts-ignore\n            if (partialEntity.hash) {\n                // @ts-ignore\n                partialEntity.hash = await this.getPasswordHash(partialEntity.hash) // eslint-disable-line @typescript-eslint/no-unsafe-assignment,no-param-reassign\n            }\n\n            return await this.repository.update(id, partialEntity)\n        } catch (err /*: WriteError */) {\n            throw new BadRequestException(err)\n        }\n    }\n\n    async delete(criteria: string | number | FindConditions, ...options: any[]) {\n        try {\n            return await this.repository.delete(criteria)\n        } catch (err) {\n            throw new NotFoundException(`The record was not found`, err)\n        }\n    }\n\n    /**\n     * e.g., findOneById(id).pipe(map(entity => entity.id), entityNotFound())\n     */\n    entityNotFound() {\n        return (stream$) =>\n            stream$.pipe(\n                mergeMap((signal) => {\n                    if (!signal) {\n                        return throwError(\n                            new NotFoundException(\n                                `The requested record was not found`,\n                            ),\n                        )\n                    }\n\n                    return of(signal)\n                }),\n            )\n    }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DBHelper.html":{"url":"injectables/DBHelper.html","title":"injectable - DBHelper","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  DBHelper\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/base/DBHelper.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                findBy\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                find\n                            \n                            \n                                    Async\n                                sync\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(repository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/base/DBHelper.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        repository\n                                                  \n                                                        \n                                                                    Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            find\n                        \n                        \n                    \n                \n            \n            \n                \nfind(find: string)\n                \n            \n\n\n            \n                \n                    Defined in src/base/DBHelper.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    find\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     this\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            sync\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    sync(relation: string, new_values: any[])\n                \n            \n\n\n            \n                \n                    Defined in src/base/DBHelper.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    relation\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    new_values\n                                    \n                                            any[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            findBy\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/base/DBHelper.ts:9\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common'\n\nimport _ from 'lodash'\nimport { Repository } from 'typeorm'\n\n@Injectable()\nexport class DBHelper {\n    findBy: string\n\n    constructor(private repository: Repository) {}\n\n    find(find: string) {\n        this.findBy = find\n        return this\n    }\n\n    async sync(relation: string, new_values: any[]) {\n        const row: T = await this.repository.findOne(this.findBy, {\n            relations: [relation],\n        })\n        const values: any[] = row[relation]\n\n        const toRemove = _.difference(values, new_values)\n        const toAdd = _.difference(new_values, values)\n\n        row[relation] = values\n            .concat(toAdd)\n            .filter((value) => toRemove.indexOf(value) === -1)\n\n        return this.repository.save(row)\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/DatabaseModule.html":{"url":"modules/DatabaseModule.html","title":"module - DatabaseModule","body":"\n                   \n\n\n\n\n    Modules\n    DatabaseModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/database/database.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        /* eslint-disable @typescript-eslint/no-unused-vars */\nimport { Global, Module } from '@nestjs/common'\n\nimport * as Knex from 'knex'\nimport { knexSnakeCaseMappers, Model } from 'objection'\n\nimport { Tag } from './models/tag.model'\n\nconst models = [Tag]\n\nconst modelProviders = models.map((model) => {\n    return {\n        provide: model.name,\n        useValue: model,\n    }\n})\n\nconst providers = [\n    ...modelProviders,\n    {\n        provide: 'KnexConnection',\n        // eslint-disable-next-line @typescript-eslint/require-await\n        useFactory: async () => {\n            const knex = Knex({\n                client: 'sqlite3',\n                useNullAsDefault: true,\n                connection: {\n                    filename: './knex.sqlite',\n                },\n                debug: true,\n                // ...knexSnakeCaseMappers(),\n            })\n\n            Model.knex(knex)\n            return knex\n        },\n    },\n]\n\n@Global()\n@Module({\n    providers: [...providers],\n    exports: [...providers],\n})\nexport class DatabaseModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ExcludeNullUndefinedInterceptor.html":{"url":"injectables/ExcludeNullUndefinedInterceptor.html","title":"injectable - ExcludeNullUndefinedInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ExcludeNullUndefinedInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/infra/interceptors/null-undefined-override.ts\n        \n\n            \n                Description\n            \n            \n                Interceptors to transform each occurrence of a null value to an empty string ''\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            intercept\n                        \n                        \n                    \n                \n            \n            \n                \nintercept(context: ExecutionContext, next: CallHandler)\n                \n            \n\n\n            \n                \n                    Defined in src/infra/interceptors/null-undefined-override.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                            CallHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n    Injectable,\n    NestInterceptor,\n    ExecutionContext,\n    CallHandler,\n} from '@nestjs/common'\n\nimport { Observable } from 'rxjs'\nimport { map } from 'rxjs/operators'\n\n/**\n * Interceptors to transform each occurrence of a null value to an empty string ''\n */\n@Injectable()\nexport class ExcludeNullUndefinedInterceptor implements NestInterceptor {\n    intercept(context: ExecutionContext, next: CallHandler): Observable {\n        return next.handle().pipe(\n            map(\n                // eslint-disable-next-line @typescript-eslint/no-unsafe-return\n                (value) => value ?? '',\n            ),\n        )\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Follower.html":{"url":"interfaces/Follower.html","title":"interface - Follower","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Follower\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/domain.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        areYouFollowing\n                                \n                                \n                                        profileImage\n                                \n                                \n                                        showRemoveOption\n                                \n                                \n                                        userId\n                                \n                                \n                                        userName\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        areYouFollowing\n                                    \n                                \n                                \n                                    \n                                        areYouFollowing:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        profileImage\n                                    \n                                \n                                \n                                    \n                                        profileImage:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        showRemoveOption\n                                    \n                                \n                                \n                                    \n                                        showRemoveOption:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        userId\n                                    \n                                \n                                \n                                    \n                                        userId:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        userName\n                                    \n                                \n                                \n                                    \n                                        userName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { HttpStatus } from '@nestjs/common'\n\nexport type Result =\n    | GetAppLaunchData\n    | GetUserProfile\n    | GetUserPosts\n    | GetComments\n    | GetRescueList\n    | GetFollowers\n    | GetFollowing\n\nexport type APIError = Error | string | null\n\nexport interface APIResponse {\n    data: T\n    error: APIError\n    message: string | string[]\n    statusCode: HttpStatus\n\n    count?: number\n    page?: number\n    pageCount?: number\n    total?: number\n}\n\nexport interface GetAppLaunchData {\n    link: 'api:/'\n    response: APIResponse\n}\n\nexport interface GetUserProfile {\n    link: 'api:v1/user/getUserProfile?userId=25'\n    response: APIResponse\n}\n\nexport interface GetUserPosts {\n    link: 'api:v1/user/getUserPosts?pageNo=0&pageSize=25'\n    response: APIResponse\n}\n\nexport interface GetRescueList {\n    link: 'api:v1/rescue/getRescueList?pageNo=0&pageSize=10&status=pending|inProgress|completed|nearest'\n    response: APIResponse\n}\n\nexport interface GetComments {\n    link: 'api:v1/rescue/getComments?pageNo=0&pageSize=10&postId=1230'\n    response: APIResponse\n}\n\nexport interface GetFollowers {\n    link: 'api:v1/rescue/getUserFollowers?userId=1230'\n    response: APIResponse\n}\n\nexport interface GetFollowing {\n    link: 'api:v1/rescue/getUserFollowing?userId=1230'\n    response: APIResponse\n}\n\nexport interface AppLaunchAction {\n    actionId: number\n    action: string\n    isActive: boolean\n    subject?: string\n}\n\nexport interface User {\n    usesId: number\n\n    coverImage: string\n    following: boolean\n    gender: string\n    isOwnProfile: number\n    isRescuer: boolean\n    latitude: number\n    longitude: number\n    numberOfFollowers: number\n    numberOfFollowing: number\n    numberOfPosts: number\n    numberOfRescuesCompleted: number\n    numberOfRescuesCreated: number\n    numberOfRescuesInProgress: number\n    profileImage: string\n    rescuer: boolean\n    userAddress: string\n    userContacts: string\n    userEmail: string\n    userName: string\n    badge: {\n        badgeId: number\n        badgeName: string\n        badgeDescription: string\n        recuesCompletionNeeded: number\n    }\n    setting: {\n        showMyContacts: boolean\n        getNotifications: boolean\n    }\n}\n\nexport interface PostType {\n    postTypeId: number\n    postType: string\n}\n\nexport interface PostedByUser {\n    usesId: number\n    badgeName: string\n    following: boolean\n    profileImage: string\n    rescuer: boolean\n    userName: string\n}\n\nexport interface UserPost {\n    postId: number\n    commentsCount: number\n    isUserReactedToPost: boolean\n    ownPage: boolean\n    postBy: PostedByUser\n    postImage: string\n    postTime: string\n    postType: PostType\n    postVideo: string\n    reactionsCount: number\n    timeAgo: string\n\n    adCorporateLogoUrl: string | null\n    corporateDescription: string | null\n    corporateName: string | null\n}\n\nexport interface UserPosts {\n    isRecent: boolean\n    feed: UserPost[]\n}\n\nexport interface Rescues {\n    rescueId: number\n    animalImageUrl: string\n    distance: number\n    distanceAway: string\n    emergencyType: string\n    postedBy: string\n    postedMinAgo: string\n    rescueDate: Date\n    rescuedPetName: string\n    rescueLocality: string\n    rescuers: {\n        contact: number\n        name: string\n        profileId: number\n        profileImageUrl: string\n        rescues: boolean\n        showMyNumber: boolean\n    }\n    rescueStatus: string\n    viewsCont: number\n}\n\nexport interface RescueLists {\n    rescues: Rescues[]\n}\n\nexport interface Comment {\n    commentId: number\n    comment: string\n    commentedUseName: string\n    commentedUserId: number\n    timeAgo: string\n}\n\nexport interface Comments {\n    comments: Comment[]\n}\n\nexport interface Follower {\n    userId: number\n    userName: string\n    profileImage: string\n    areYouFollowing: boolean\n    showRemoveOption: boolean\n}\n\nexport interface Following extends Follower {}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Following.html":{"url":"interfaces/Following.html","title":"interface - Following","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Following\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/domain.ts\n        \n\n\n            \n                Extends\n            \n            \n                        Follower\n            \n\n\n\n\n    \n\n\n    \n        import { HttpStatus } from '@nestjs/common'\n\nexport type Result =\n    | GetAppLaunchData\n    | GetUserProfile\n    | GetUserPosts\n    | GetComments\n    | GetRescueList\n    | GetFollowers\n    | GetFollowing\n\nexport type APIError = Error | string | null\n\nexport interface APIResponse {\n    data: T\n    error: APIError\n    message: string | string[]\n    statusCode: HttpStatus\n\n    count?: number\n    page?: number\n    pageCount?: number\n    total?: number\n}\n\nexport interface GetAppLaunchData {\n    link: 'api:/'\n    response: APIResponse\n}\n\nexport interface GetUserProfile {\n    link: 'api:v1/user/getUserProfile?userId=25'\n    response: APIResponse\n}\n\nexport interface GetUserPosts {\n    link: 'api:v1/user/getUserPosts?pageNo=0&pageSize=25'\n    response: APIResponse\n}\n\nexport interface GetRescueList {\n    link: 'api:v1/rescue/getRescueList?pageNo=0&pageSize=10&status=pending|inProgress|completed|nearest'\n    response: APIResponse\n}\n\nexport interface GetComments {\n    link: 'api:v1/rescue/getComments?pageNo=0&pageSize=10&postId=1230'\n    response: APIResponse\n}\n\nexport interface GetFollowers {\n    link: 'api:v1/rescue/getUserFollowers?userId=1230'\n    response: APIResponse\n}\n\nexport interface GetFollowing {\n    link: 'api:v1/rescue/getUserFollowing?userId=1230'\n    response: APIResponse\n}\n\nexport interface AppLaunchAction {\n    actionId: number\n    action: string\n    isActive: boolean\n    subject?: string\n}\n\nexport interface User {\n    usesId: number\n\n    coverImage: string\n    following: boolean\n    gender: string\n    isOwnProfile: number\n    isRescuer: boolean\n    latitude: number\n    longitude: number\n    numberOfFollowers: number\n    numberOfFollowing: number\n    numberOfPosts: number\n    numberOfRescuesCompleted: number\n    numberOfRescuesCreated: number\n    numberOfRescuesInProgress: number\n    profileImage: string\n    rescuer: boolean\n    userAddress: string\n    userContacts: string\n    userEmail: string\n    userName: string\n    badge: {\n        badgeId: number\n        badgeName: string\n        badgeDescription: string\n        recuesCompletionNeeded: number\n    }\n    setting: {\n        showMyContacts: boolean\n        getNotifications: boolean\n    }\n}\n\nexport interface PostType {\n    postTypeId: number\n    postType: string\n}\n\nexport interface PostedByUser {\n    usesId: number\n    badgeName: string\n    following: boolean\n    profileImage: string\n    rescuer: boolean\n    userName: string\n}\n\nexport interface UserPost {\n    postId: number\n    commentsCount: number\n    isUserReactedToPost: boolean\n    ownPage: boolean\n    postBy: PostedByUser\n    postImage: string\n    postTime: string\n    postType: PostType\n    postVideo: string\n    reactionsCount: number\n    timeAgo: string\n\n    adCorporateLogoUrl: string | null\n    corporateDescription: string | null\n    corporateName: string | null\n}\n\nexport interface UserPosts {\n    isRecent: boolean\n    feed: UserPost[]\n}\n\nexport interface Rescues {\n    rescueId: number\n    animalImageUrl: string\n    distance: number\n    distanceAway: string\n    emergencyType: string\n    postedBy: string\n    postedMinAgo: string\n    rescueDate: Date\n    rescuedPetName: string\n    rescueLocality: string\n    rescuers: {\n        contact: number\n        name: string\n        profileId: number\n        profileImageUrl: string\n        rescues: boolean\n        showMyNumber: boolean\n    }\n    rescueStatus: string\n    viewsCont: number\n}\n\nexport interface RescueLists {\n    rescues: Rescues[]\n}\n\nexport interface Comment {\n    commentId: number\n    comment: string\n    commentedUseName: string\n    commentedUserId: number\n    timeAgo: string\n}\n\nexport interface Comments {\n    comments: Comment[]\n}\n\nexport interface Follower {\n    userId: number\n    userName: string\n    profileImage: string\n    areYouFollowing: boolean\n    showRemoveOption: boolean\n}\n\nexport interface Following extends Follower {}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/GetAppLaunchData.html":{"url":"interfaces/GetAppLaunchData.html","title":"interface - GetAppLaunchData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  GetAppLaunchData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/domain.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        link\n                                \n                                \n                                        response\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        link\n                                    \n                                \n                                \n                                    \n                                        link:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        response\n                                    \n                                \n                                \n                                    \n                                        response:     APIResponse\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     APIResponse\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { HttpStatus } from '@nestjs/common'\n\nexport type Result =\n    | GetAppLaunchData\n    | GetUserProfile\n    | GetUserPosts\n    | GetComments\n    | GetRescueList\n    | GetFollowers\n    | GetFollowing\n\nexport type APIError = Error | string | null\n\nexport interface APIResponse {\n    data: T\n    error: APIError\n    message: string | string[]\n    statusCode: HttpStatus\n\n    count?: number\n    page?: number\n    pageCount?: number\n    total?: number\n}\n\nexport interface GetAppLaunchData {\n    link: 'api:/'\n    response: APIResponse\n}\n\nexport interface GetUserProfile {\n    link: 'api:v1/user/getUserProfile?userId=25'\n    response: APIResponse\n}\n\nexport interface GetUserPosts {\n    link: 'api:v1/user/getUserPosts?pageNo=0&pageSize=25'\n    response: APIResponse\n}\n\nexport interface GetRescueList {\n    link: 'api:v1/rescue/getRescueList?pageNo=0&pageSize=10&status=pending|inProgress|completed|nearest'\n    response: APIResponse\n}\n\nexport interface GetComments {\n    link: 'api:v1/rescue/getComments?pageNo=0&pageSize=10&postId=1230'\n    response: APIResponse\n}\n\nexport interface GetFollowers {\n    link: 'api:v1/rescue/getUserFollowers?userId=1230'\n    response: APIResponse\n}\n\nexport interface GetFollowing {\n    link: 'api:v1/rescue/getUserFollowing?userId=1230'\n    response: APIResponse\n}\n\nexport interface AppLaunchAction {\n    actionId: number\n    action: string\n    isActive: boolean\n    subject?: string\n}\n\nexport interface User {\n    usesId: number\n\n    coverImage: string\n    following: boolean\n    gender: string\n    isOwnProfile: number\n    isRescuer: boolean\n    latitude: number\n    longitude: number\n    numberOfFollowers: number\n    numberOfFollowing: number\n    numberOfPosts: number\n    numberOfRescuesCompleted: number\n    numberOfRescuesCreated: number\n    numberOfRescuesInProgress: number\n    profileImage: string\n    rescuer: boolean\n    userAddress: string\n    userContacts: string\n    userEmail: string\n    userName: string\n    badge: {\n        badgeId: number\n        badgeName: string\n        badgeDescription: string\n        recuesCompletionNeeded: number\n    }\n    setting: {\n        showMyContacts: boolean\n        getNotifications: boolean\n    }\n}\n\nexport interface PostType {\n    postTypeId: number\n    postType: string\n}\n\nexport interface PostedByUser {\n    usesId: number\n    badgeName: string\n    following: boolean\n    profileImage: string\n    rescuer: boolean\n    userName: string\n}\n\nexport interface UserPost {\n    postId: number\n    commentsCount: number\n    isUserReactedToPost: boolean\n    ownPage: boolean\n    postBy: PostedByUser\n    postImage: string\n    postTime: string\n    postType: PostType\n    postVideo: string\n    reactionsCount: number\n    timeAgo: string\n\n    adCorporateLogoUrl: string | null\n    corporateDescription: string | null\n    corporateName: string | null\n}\n\nexport interface UserPosts {\n    isRecent: boolean\n    feed: UserPost[]\n}\n\nexport interface Rescues {\n    rescueId: number\n    animalImageUrl: string\n    distance: number\n    distanceAway: string\n    emergencyType: string\n    postedBy: string\n    postedMinAgo: string\n    rescueDate: Date\n    rescuedPetName: string\n    rescueLocality: string\n    rescuers: {\n        contact: number\n        name: string\n        profileId: number\n        profileImageUrl: string\n        rescues: boolean\n        showMyNumber: boolean\n    }\n    rescueStatus: string\n    viewsCont: number\n}\n\nexport interface RescueLists {\n    rescues: Rescues[]\n}\n\nexport interface Comment {\n    commentId: number\n    comment: string\n    commentedUseName: string\n    commentedUserId: number\n    timeAgo: string\n}\n\nexport interface Comments {\n    comments: Comment[]\n}\n\nexport interface Follower {\n    userId: number\n    userName: string\n    profileImage: string\n    areYouFollowing: boolean\n    showRemoveOption: boolean\n}\n\nexport interface Following extends Follower {}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/GetComments.html":{"url":"interfaces/GetComments.html","title":"interface - GetComments","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  GetComments\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/domain.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        link\n                                \n                                \n                                        response\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        link\n                                    \n                                \n                                \n                                    \n                                        link:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        response\n                                    \n                                \n                                \n                                    \n                                        response:     APIResponse\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     APIResponse\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { HttpStatus } from '@nestjs/common'\n\nexport type Result =\n    | GetAppLaunchData\n    | GetUserProfile\n    | GetUserPosts\n    | GetComments\n    | GetRescueList\n    | GetFollowers\n    | GetFollowing\n\nexport type APIError = Error | string | null\n\nexport interface APIResponse {\n    data: T\n    error: APIError\n    message: string | string[]\n    statusCode: HttpStatus\n\n    count?: number\n    page?: number\n    pageCount?: number\n    total?: number\n}\n\nexport interface GetAppLaunchData {\n    link: 'api:/'\n    response: APIResponse\n}\n\nexport interface GetUserProfile {\n    link: 'api:v1/user/getUserProfile?userId=25'\n    response: APIResponse\n}\n\nexport interface GetUserPosts {\n    link: 'api:v1/user/getUserPosts?pageNo=0&pageSize=25'\n    response: APIResponse\n}\n\nexport interface GetRescueList {\n    link: 'api:v1/rescue/getRescueList?pageNo=0&pageSize=10&status=pending|inProgress|completed|nearest'\n    response: APIResponse\n}\n\nexport interface GetComments {\n    link: 'api:v1/rescue/getComments?pageNo=0&pageSize=10&postId=1230'\n    response: APIResponse\n}\n\nexport interface GetFollowers {\n    link: 'api:v1/rescue/getUserFollowers?userId=1230'\n    response: APIResponse\n}\n\nexport interface GetFollowing {\n    link: 'api:v1/rescue/getUserFollowing?userId=1230'\n    response: APIResponse\n}\n\nexport interface AppLaunchAction {\n    actionId: number\n    action: string\n    isActive: boolean\n    subject?: string\n}\n\nexport interface User {\n    usesId: number\n\n    coverImage: string\n    following: boolean\n    gender: string\n    isOwnProfile: number\n    isRescuer: boolean\n    latitude: number\n    longitude: number\n    numberOfFollowers: number\n    numberOfFollowing: number\n    numberOfPosts: number\n    numberOfRescuesCompleted: number\n    numberOfRescuesCreated: number\n    numberOfRescuesInProgress: number\n    profileImage: string\n    rescuer: boolean\n    userAddress: string\n    userContacts: string\n    userEmail: string\n    userName: string\n    badge: {\n        badgeId: number\n        badgeName: string\n        badgeDescription: string\n        recuesCompletionNeeded: number\n    }\n    setting: {\n        showMyContacts: boolean\n        getNotifications: boolean\n    }\n}\n\nexport interface PostType {\n    postTypeId: number\n    postType: string\n}\n\nexport interface PostedByUser {\n    usesId: number\n    badgeName: string\n    following: boolean\n    profileImage: string\n    rescuer: boolean\n    userName: string\n}\n\nexport interface UserPost {\n    postId: number\n    commentsCount: number\n    isUserReactedToPost: boolean\n    ownPage: boolean\n    postBy: PostedByUser\n    postImage: string\n    postTime: string\n    postType: PostType\n    postVideo: string\n    reactionsCount: number\n    timeAgo: string\n\n    adCorporateLogoUrl: string | null\n    corporateDescription: string | null\n    corporateName: string | null\n}\n\nexport interface UserPosts {\n    isRecent: boolean\n    feed: UserPost[]\n}\n\nexport interface Rescues {\n    rescueId: number\n    animalImageUrl: string\n    distance: number\n    distanceAway: string\n    emergencyType: string\n    postedBy: string\n    postedMinAgo: string\n    rescueDate: Date\n    rescuedPetName: string\n    rescueLocality: string\n    rescuers: {\n        contact: number\n        name: string\n        profileId: number\n        profileImageUrl: string\n        rescues: boolean\n        showMyNumber: boolean\n    }\n    rescueStatus: string\n    viewsCont: number\n}\n\nexport interface RescueLists {\n    rescues: Rescues[]\n}\n\nexport interface Comment {\n    commentId: number\n    comment: string\n    commentedUseName: string\n    commentedUserId: number\n    timeAgo: string\n}\n\nexport interface Comments {\n    comments: Comment[]\n}\n\nexport interface Follower {\n    userId: number\n    userName: string\n    profileImage: string\n    areYouFollowing: boolean\n    showRemoveOption: boolean\n}\n\nexport interface Following extends Follower {}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/GetFollowers.html":{"url":"interfaces/GetFollowers.html","title":"interface - GetFollowers","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  GetFollowers\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/domain.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        link\n                                \n                                \n                                        response\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        link\n                                    \n                                \n                                \n                                    \n                                        link:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        response\n                                    \n                                \n                                \n                                    \n                                        response:     APIResponse\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     APIResponse\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { HttpStatus } from '@nestjs/common'\n\nexport type Result =\n    | GetAppLaunchData\n    | GetUserProfile\n    | GetUserPosts\n    | GetComments\n    | GetRescueList\n    | GetFollowers\n    | GetFollowing\n\nexport type APIError = Error | string | null\n\nexport interface APIResponse {\n    data: T\n    error: APIError\n    message: string | string[]\n    statusCode: HttpStatus\n\n    count?: number\n    page?: number\n    pageCount?: number\n    total?: number\n}\n\nexport interface GetAppLaunchData {\n    link: 'api:/'\n    response: APIResponse\n}\n\nexport interface GetUserProfile {\n    link: 'api:v1/user/getUserProfile?userId=25'\n    response: APIResponse\n}\n\nexport interface GetUserPosts {\n    link: 'api:v1/user/getUserPosts?pageNo=0&pageSize=25'\n    response: APIResponse\n}\n\nexport interface GetRescueList {\n    link: 'api:v1/rescue/getRescueList?pageNo=0&pageSize=10&status=pending|inProgress|completed|nearest'\n    response: APIResponse\n}\n\nexport interface GetComments {\n    link: 'api:v1/rescue/getComments?pageNo=0&pageSize=10&postId=1230'\n    response: APIResponse\n}\n\nexport interface GetFollowers {\n    link: 'api:v1/rescue/getUserFollowers?userId=1230'\n    response: APIResponse\n}\n\nexport interface GetFollowing {\n    link: 'api:v1/rescue/getUserFollowing?userId=1230'\n    response: APIResponse\n}\n\nexport interface AppLaunchAction {\n    actionId: number\n    action: string\n    isActive: boolean\n    subject?: string\n}\n\nexport interface User {\n    usesId: number\n\n    coverImage: string\n    following: boolean\n    gender: string\n    isOwnProfile: number\n    isRescuer: boolean\n    latitude: number\n    longitude: number\n    numberOfFollowers: number\n    numberOfFollowing: number\n    numberOfPosts: number\n    numberOfRescuesCompleted: number\n    numberOfRescuesCreated: number\n    numberOfRescuesInProgress: number\n    profileImage: string\n    rescuer: boolean\n    userAddress: string\n    userContacts: string\n    userEmail: string\n    userName: string\n    badge: {\n        badgeId: number\n        badgeName: string\n        badgeDescription: string\n        recuesCompletionNeeded: number\n    }\n    setting: {\n        showMyContacts: boolean\n        getNotifications: boolean\n    }\n}\n\nexport interface PostType {\n    postTypeId: number\n    postType: string\n}\n\nexport interface PostedByUser {\n    usesId: number\n    badgeName: string\n    following: boolean\n    profileImage: string\n    rescuer: boolean\n    userName: string\n}\n\nexport interface UserPost {\n    postId: number\n    commentsCount: number\n    isUserReactedToPost: boolean\n    ownPage: boolean\n    postBy: PostedByUser\n    postImage: string\n    postTime: string\n    postType: PostType\n    postVideo: string\n    reactionsCount: number\n    timeAgo: string\n\n    adCorporateLogoUrl: string | null\n    corporateDescription: string | null\n    corporateName: string | null\n}\n\nexport interface UserPosts {\n    isRecent: boolean\n    feed: UserPost[]\n}\n\nexport interface Rescues {\n    rescueId: number\n    animalImageUrl: string\n    distance: number\n    distanceAway: string\n    emergencyType: string\n    postedBy: string\n    postedMinAgo: string\n    rescueDate: Date\n    rescuedPetName: string\n    rescueLocality: string\n    rescuers: {\n        contact: number\n        name: string\n        profileId: number\n        profileImageUrl: string\n        rescues: boolean\n        showMyNumber: boolean\n    }\n    rescueStatus: string\n    viewsCont: number\n}\n\nexport interface RescueLists {\n    rescues: Rescues[]\n}\n\nexport interface Comment {\n    commentId: number\n    comment: string\n    commentedUseName: string\n    commentedUserId: number\n    timeAgo: string\n}\n\nexport interface Comments {\n    comments: Comment[]\n}\n\nexport interface Follower {\n    userId: number\n    userName: string\n    profileImage: string\n    areYouFollowing: boolean\n    showRemoveOption: boolean\n}\n\nexport interface Following extends Follower {}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/GetFollowing.html":{"url":"interfaces/GetFollowing.html","title":"interface - GetFollowing","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  GetFollowing\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/domain.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        link\n                                \n                                \n                                        response\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        link\n                                    \n                                \n                                \n                                    \n                                        link:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        response\n                                    \n                                \n                                \n                                    \n                                        response:     APIResponse\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     APIResponse\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { HttpStatus } from '@nestjs/common'\n\nexport type Result =\n    | GetAppLaunchData\n    | GetUserProfile\n    | GetUserPosts\n    | GetComments\n    | GetRescueList\n    | GetFollowers\n    | GetFollowing\n\nexport type APIError = Error | string | null\n\nexport interface APIResponse {\n    data: T\n    error: APIError\n    message: string | string[]\n    statusCode: HttpStatus\n\n    count?: number\n    page?: number\n    pageCount?: number\n    total?: number\n}\n\nexport interface GetAppLaunchData {\n    link: 'api:/'\n    response: APIResponse\n}\n\nexport interface GetUserProfile {\n    link: 'api:v1/user/getUserProfile?userId=25'\n    response: APIResponse\n}\n\nexport interface GetUserPosts {\n    link: 'api:v1/user/getUserPosts?pageNo=0&pageSize=25'\n    response: APIResponse\n}\n\nexport interface GetRescueList {\n    link: 'api:v1/rescue/getRescueList?pageNo=0&pageSize=10&status=pending|inProgress|completed|nearest'\n    response: APIResponse\n}\n\nexport interface GetComments {\n    link: 'api:v1/rescue/getComments?pageNo=0&pageSize=10&postId=1230'\n    response: APIResponse\n}\n\nexport interface GetFollowers {\n    link: 'api:v1/rescue/getUserFollowers?userId=1230'\n    response: APIResponse\n}\n\nexport interface GetFollowing {\n    link: 'api:v1/rescue/getUserFollowing?userId=1230'\n    response: APIResponse\n}\n\nexport interface AppLaunchAction {\n    actionId: number\n    action: string\n    isActive: boolean\n    subject?: string\n}\n\nexport interface User {\n    usesId: number\n\n    coverImage: string\n    following: boolean\n    gender: string\n    isOwnProfile: number\n    isRescuer: boolean\n    latitude: number\n    longitude: number\n    numberOfFollowers: number\n    numberOfFollowing: number\n    numberOfPosts: number\n    numberOfRescuesCompleted: number\n    numberOfRescuesCreated: number\n    numberOfRescuesInProgress: number\n    profileImage: string\n    rescuer: boolean\n    userAddress: string\n    userContacts: string\n    userEmail: string\n    userName: string\n    badge: {\n        badgeId: number\n        badgeName: string\n        badgeDescription: string\n        recuesCompletionNeeded: number\n    }\n    setting: {\n        showMyContacts: boolean\n        getNotifications: boolean\n    }\n}\n\nexport interface PostType {\n    postTypeId: number\n    postType: string\n}\n\nexport interface PostedByUser {\n    usesId: number\n    badgeName: string\n    following: boolean\n    profileImage: string\n    rescuer: boolean\n    userName: string\n}\n\nexport interface UserPost {\n    postId: number\n    commentsCount: number\n    isUserReactedToPost: boolean\n    ownPage: boolean\n    postBy: PostedByUser\n    postImage: string\n    postTime: string\n    postType: PostType\n    postVideo: string\n    reactionsCount: number\n    timeAgo: string\n\n    adCorporateLogoUrl: string | null\n    corporateDescription: string | null\n    corporateName: string | null\n}\n\nexport interface UserPosts {\n    isRecent: boolean\n    feed: UserPost[]\n}\n\nexport interface Rescues {\n    rescueId: number\n    animalImageUrl: string\n    distance: number\n    distanceAway: string\n    emergencyType: string\n    postedBy: string\n    postedMinAgo: string\n    rescueDate: Date\n    rescuedPetName: string\n    rescueLocality: string\n    rescuers: {\n        contact: number\n        name: string\n        profileId: number\n        profileImageUrl: string\n        rescues: boolean\n        showMyNumber: boolean\n    }\n    rescueStatus: string\n    viewsCont: number\n}\n\nexport interface RescueLists {\n    rescues: Rescues[]\n}\n\nexport interface Comment {\n    commentId: number\n    comment: string\n    commentedUseName: string\n    commentedUserId: number\n    timeAgo: string\n}\n\nexport interface Comments {\n    comments: Comment[]\n}\n\nexport interface Follower {\n    userId: number\n    userName: string\n    profileImage: string\n    areYouFollowing: boolean\n    showRemoveOption: boolean\n}\n\nexport interface Following extends Follower {}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetManyDto.html":{"url":"classes/GetManyDto.html","title":"class - GetManyDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetManyDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/base/datum/get-many-dto.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            GetManyDefaultResponse\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                count\n                            \n                            \n                                data\n                            \n                            \n                                page\n                            \n                            \n                                pageCount\n                            \n                            \n                                total\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            count\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/base/datum/get-many-dto.ts:4\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            data\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     T[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/base/datum/get-many-dto.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            page\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/base/datum/get-many-dto.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            pageCount\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/base/datum/get-many-dto.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            total\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/base/datum/get-many-dto.ts:12\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { GetManyDefaultResponse } from '@nestjsx/crud/lib/interfaces/get-many-default-response.interface'\n\nexport class GetManyDto implements GetManyDefaultResponse {\n    count: number\n\n    data: T[]\n\n    page: number\n\n    pageCount: number\n\n    total: number\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/GetRescueList.html":{"url":"interfaces/GetRescueList.html","title":"interface - GetRescueList","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  GetRescueList\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/domain.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        link\n                                \n                                \n                                        response\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        link\n                                    \n                                \n                                \n                                    \n                                        link:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        response\n                                    \n                                \n                                \n                                    \n                                        response:     APIResponse\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     APIResponse\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { HttpStatus } from '@nestjs/common'\n\nexport type Result =\n    | GetAppLaunchData\n    | GetUserProfile\n    | GetUserPosts\n    | GetComments\n    | GetRescueList\n    | GetFollowers\n    | GetFollowing\n\nexport type APIError = Error | string | null\n\nexport interface APIResponse {\n    data: T\n    error: APIError\n    message: string | string[]\n    statusCode: HttpStatus\n\n    count?: number\n    page?: number\n    pageCount?: number\n    total?: number\n}\n\nexport interface GetAppLaunchData {\n    link: 'api:/'\n    response: APIResponse\n}\n\nexport interface GetUserProfile {\n    link: 'api:v1/user/getUserProfile?userId=25'\n    response: APIResponse\n}\n\nexport interface GetUserPosts {\n    link: 'api:v1/user/getUserPosts?pageNo=0&pageSize=25'\n    response: APIResponse\n}\n\nexport interface GetRescueList {\n    link: 'api:v1/rescue/getRescueList?pageNo=0&pageSize=10&status=pending|inProgress|completed|nearest'\n    response: APIResponse\n}\n\nexport interface GetComments {\n    link: 'api:v1/rescue/getComments?pageNo=0&pageSize=10&postId=1230'\n    response: APIResponse\n}\n\nexport interface GetFollowers {\n    link: 'api:v1/rescue/getUserFollowers?userId=1230'\n    response: APIResponse\n}\n\nexport interface GetFollowing {\n    link: 'api:v1/rescue/getUserFollowing?userId=1230'\n    response: APIResponse\n}\n\nexport interface AppLaunchAction {\n    actionId: number\n    action: string\n    isActive: boolean\n    subject?: string\n}\n\nexport interface User {\n    usesId: number\n\n    coverImage: string\n    following: boolean\n    gender: string\n    isOwnProfile: number\n    isRescuer: boolean\n    latitude: number\n    longitude: number\n    numberOfFollowers: number\n    numberOfFollowing: number\n    numberOfPosts: number\n    numberOfRescuesCompleted: number\n    numberOfRescuesCreated: number\n    numberOfRescuesInProgress: number\n    profileImage: string\n    rescuer: boolean\n    userAddress: string\n    userContacts: string\n    userEmail: string\n    userName: string\n    badge: {\n        badgeId: number\n        badgeName: string\n        badgeDescription: string\n        recuesCompletionNeeded: number\n    }\n    setting: {\n        showMyContacts: boolean\n        getNotifications: boolean\n    }\n}\n\nexport interface PostType {\n    postTypeId: number\n    postType: string\n}\n\nexport interface PostedByUser {\n    usesId: number\n    badgeName: string\n    following: boolean\n    profileImage: string\n    rescuer: boolean\n    userName: string\n}\n\nexport interface UserPost {\n    postId: number\n    commentsCount: number\n    isUserReactedToPost: boolean\n    ownPage: boolean\n    postBy: PostedByUser\n    postImage: string\n    postTime: string\n    postType: PostType\n    postVideo: string\n    reactionsCount: number\n    timeAgo: string\n\n    adCorporateLogoUrl: string | null\n    corporateDescription: string | null\n    corporateName: string | null\n}\n\nexport interface UserPosts {\n    isRecent: boolean\n    feed: UserPost[]\n}\n\nexport interface Rescues {\n    rescueId: number\n    animalImageUrl: string\n    distance: number\n    distanceAway: string\n    emergencyType: string\n    postedBy: string\n    postedMinAgo: string\n    rescueDate: Date\n    rescuedPetName: string\n    rescueLocality: string\n    rescuers: {\n        contact: number\n        name: string\n        profileId: number\n        profileImageUrl: string\n        rescues: boolean\n        showMyNumber: boolean\n    }\n    rescueStatus: string\n    viewsCont: number\n}\n\nexport interface RescueLists {\n    rescues: Rescues[]\n}\n\nexport interface Comment {\n    commentId: number\n    comment: string\n    commentedUseName: string\n    commentedUserId: number\n    timeAgo: string\n}\n\nexport interface Comments {\n    comments: Comment[]\n}\n\nexport interface Follower {\n    userId: number\n    userName: string\n    profileImage: string\n    areYouFollowing: boolean\n    showRemoveOption: boolean\n}\n\nexport interface Following extends Follower {}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetTagsResponseDto.html":{"url":"classes/GetTagsResponseDto.html","title":"class - GetTagsResponseDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetTagsResponseDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/tags/tags.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                createdAt\n                            \n                            \n                                deletedAt\n                            \n                            \n                                id\n                            \n                            \n                                name\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiHideProperty()@Exclude()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/tags/tags.dto.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            deletedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiHideProperty()@Exclude()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/tags/tags.dto.ts:41\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/tags/tags.dto.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/tags/tags.dto.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiHideProperty()@Exclude()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/tags/tags.dto.ts:37\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiHideProperty, ApiProperty, PartialType } from '@nestjs/swagger'\n\nimport { Exclude } from 'class-transformer'\nimport {\n    IsString,\n    MinLength,\n    IsNotEmpty,\n    IsOptional,\n    MaxLength,\n} from 'class-validator'\n\nexport class CreateTagsDto {\n    @ApiProperty({ example: 'tag1' })\n    @IsString()\n    @IsNotEmpty()\n    @MinLength(2)\n    @MaxLength(36)\n    name: string\n}\n\nexport class UpdateTagsDto extends PartialType(CreateTagsDto) {}\n\nexport class GetTagsResponseDto {\n    @ApiProperty()\n    id: number\n\n    @ApiProperty()\n    name: string\n\n    @ApiHideProperty()\n    @Exclude()\n    createdAt: any\n\n    @ApiHideProperty()\n    @Exclude()\n    updatedAt: any\n\n    @ApiHideProperty()\n    @Exclude()\n    deletedAt: any\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/GetUserPosts.html":{"url":"interfaces/GetUserPosts.html","title":"interface - GetUserPosts","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  GetUserPosts\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/domain.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        link\n                                \n                                \n                                        response\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        link\n                                    \n                                \n                                \n                                    \n                                        link:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        response\n                                    \n                                \n                                \n                                    \n                                        response:         APIResponse\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         APIResponse\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { HttpStatus } from '@nestjs/common'\n\nexport type Result =\n    | GetAppLaunchData\n    | GetUserProfile\n    | GetUserPosts\n    | GetComments\n    | GetRescueList\n    | GetFollowers\n    | GetFollowing\n\nexport type APIError = Error | string | null\n\nexport interface APIResponse {\n    data: T\n    error: APIError\n    message: string | string[]\n    statusCode: HttpStatus\n\n    count?: number\n    page?: number\n    pageCount?: number\n    total?: number\n}\n\nexport interface GetAppLaunchData {\n    link: 'api:/'\n    response: APIResponse\n}\n\nexport interface GetUserProfile {\n    link: 'api:v1/user/getUserProfile?userId=25'\n    response: APIResponse\n}\n\nexport interface GetUserPosts {\n    link: 'api:v1/user/getUserPosts?pageNo=0&pageSize=25'\n    response: APIResponse\n}\n\nexport interface GetRescueList {\n    link: 'api:v1/rescue/getRescueList?pageNo=0&pageSize=10&status=pending|inProgress|completed|nearest'\n    response: APIResponse\n}\n\nexport interface GetComments {\n    link: 'api:v1/rescue/getComments?pageNo=0&pageSize=10&postId=1230'\n    response: APIResponse\n}\n\nexport interface GetFollowers {\n    link: 'api:v1/rescue/getUserFollowers?userId=1230'\n    response: APIResponse\n}\n\nexport interface GetFollowing {\n    link: 'api:v1/rescue/getUserFollowing?userId=1230'\n    response: APIResponse\n}\n\nexport interface AppLaunchAction {\n    actionId: number\n    action: string\n    isActive: boolean\n    subject?: string\n}\n\nexport interface User {\n    usesId: number\n\n    coverImage: string\n    following: boolean\n    gender: string\n    isOwnProfile: number\n    isRescuer: boolean\n    latitude: number\n    longitude: number\n    numberOfFollowers: number\n    numberOfFollowing: number\n    numberOfPosts: number\n    numberOfRescuesCompleted: number\n    numberOfRescuesCreated: number\n    numberOfRescuesInProgress: number\n    profileImage: string\n    rescuer: boolean\n    userAddress: string\n    userContacts: string\n    userEmail: string\n    userName: string\n    badge: {\n        badgeId: number\n        badgeName: string\n        badgeDescription: string\n        recuesCompletionNeeded: number\n    }\n    setting: {\n        showMyContacts: boolean\n        getNotifications: boolean\n    }\n}\n\nexport interface PostType {\n    postTypeId: number\n    postType: string\n}\n\nexport interface PostedByUser {\n    usesId: number\n    badgeName: string\n    following: boolean\n    profileImage: string\n    rescuer: boolean\n    userName: string\n}\n\nexport interface UserPost {\n    postId: number\n    commentsCount: number\n    isUserReactedToPost: boolean\n    ownPage: boolean\n    postBy: PostedByUser\n    postImage: string\n    postTime: string\n    postType: PostType\n    postVideo: string\n    reactionsCount: number\n    timeAgo: string\n\n    adCorporateLogoUrl: string | null\n    corporateDescription: string | null\n    corporateName: string | null\n}\n\nexport interface UserPosts {\n    isRecent: boolean\n    feed: UserPost[]\n}\n\nexport interface Rescues {\n    rescueId: number\n    animalImageUrl: string\n    distance: number\n    distanceAway: string\n    emergencyType: string\n    postedBy: string\n    postedMinAgo: string\n    rescueDate: Date\n    rescuedPetName: string\n    rescueLocality: string\n    rescuers: {\n        contact: number\n        name: string\n        profileId: number\n        profileImageUrl: string\n        rescues: boolean\n        showMyNumber: boolean\n    }\n    rescueStatus: string\n    viewsCont: number\n}\n\nexport interface RescueLists {\n    rescues: Rescues[]\n}\n\nexport interface Comment {\n    commentId: number\n    comment: string\n    commentedUseName: string\n    commentedUserId: number\n    timeAgo: string\n}\n\nexport interface Comments {\n    comments: Comment[]\n}\n\nexport interface Follower {\n    userId: number\n    userName: string\n    profileImage: string\n    areYouFollowing: boolean\n    showRemoveOption: boolean\n}\n\nexport interface Following extends Follower {}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/GetUserProfile.html":{"url":"interfaces/GetUserProfile.html","title":"interface - GetUserProfile","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  GetUserProfile\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/domain.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        link\n                                \n                                \n                                        response\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        link\n                                    \n                                \n                                \n                                    \n                                        link:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        response\n                                    \n                                \n                                \n                                    \n                                        response:         APIResponse\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         APIResponse\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { HttpStatus } from '@nestjs/common'\n\nexport type Result =\n    | GetAppLaunchData\n    | GetUserProfile\n    | GetUserPosts\n    | GetComments\n    | GetRescueList\n    | GetFollowers\n    | GetFollowing\n\nexport type APIError = Error | string | null\n\nexport interface APIResponse {\n    data: T\n    error: APIError\n    message: string | string[]\n    statusCode: HttpStatus\n\n    count?: number\n    page?: number\n    pageCount?: number\n    total?: number\n}\n\nexport interface GetAppLaunchData {\n    link: 'api:/'\n    response: APIResponse\n}\n\nexport interface GetUserProfile {\n    link: 'api:v1/user/getUserProfile?userId=25'\n    response: APIResponse\n}\n\nexport interface GetUserPosts {\n    link: 'api:v1/user/getUserPosts?pageNo=0&pageSize=25'\n    response: APIResponse\n}\n\nexport interface GetRescueList {\n    link: 'api:v1/rescue/getRescueList?pageNo=0&pageSize=10&status=pending|inProgress|completed|nearest'\n    response: APIResponse\n}\n\nexport interface GetComments {\n    link: 'api:v1/rescue/getComments?pageNo=0&pageSize=10&postId=1230'\n    response: APIResponse\n}\n\nexport interface GetFollowers {\n    link: 'api:v1/rescue/getUserFollowers?userId=1230'\n    response: APIResponse\n}\n\nexport interface GetFollowing {\n    link: 'api:v1/rescue/getUserFollowing?userId=1230'\n    response: APIResponse\n}\n\nexport interface AppLaunchAction {\n    actionId: number\n    action: string\n    isActive: boolean\n    subject?: string\n}\n\nexport interface User {\n    usesId: number\n\n    coverImage: string\n    following: boolean\n    gender: string\n    isOwnProfile: number\n    isRescuer: boolean\n    latitude: number\n    longitude: number\n    numberOfFollowers: number\n    numberOfFollowing: number\n    numberOfPosts: number\n    numberOfRescuesCompleted: number\n    numberOfRescuesCreated: number\n    numberOfRescuesInProgress: number\n    profileImage: string\n    rescuer: boolean\n    userAddress: string\n    userContacts: string\n    userEmail: string\n    userName: string\n    badge: {\n        badgeId: number\n        badgeName: string\n        badgeDescription: string\n        recuesCompletionNeeded: number\n    }\n    setting: {\n        showMyContacts: boolean\n        getNotifications: boolean\n    }\n}\n\nexport interface PostType {\n    postTypeId: number\n    postType: string\n}\n\nexport interface PostedByUser {\n    usesId: number\n    badgeName: string\n    following: boolean\n    profileImage: string\n    rescuer: boolean\n    userName: string\n}\n\nexport interface UserPost {\n    postId: number\n    commentsCount: number\n    isUserReactedToPost: boolean\n    ownPage: boolean\n    postBy: PostedByUser\n    postImage: string\n    postTime: string\n    postType: PostType\n    postVideo: string\n    reactionsCount: number\n    timeAgo: string\n\n    adCorporateLogoUrl: string | null\n    corporateDescription: string | null\n    corporateName: string | null\n}\n\nexport interface UserPosts {\n    isRecent: boolean\n    feed: UserPost[]\n}\n\nexport interface Rescues {\n    rescueId: number\n    animalImageUrl: string\n    distance: number\n    distanceAway: string\n    emergencyType: string\n    postedBy: string\n    postedMinAgo: string\n    rescueDate: Date\n    rescuedPetName: string\n    rescueLocality: string\n    rescuers: {\n        contact: number\n        name: string\n        profileId: number\n        profileImageUrl: string\n        rescues: boolean\n        showMyNumber: boolean\n    }\n    rescueStatus: string\n    viewsCont: number\n}\n\nexport interface RescueLists {\n    rescues: Rescues[]\n}\n\nexport interface Comment {\n    commentId: number\n    comment: string\n    commentedUseName: string\n    commentedUserId: number\n    timeAgo: string\n}\n\nexport interface Comments {\n    comments: Comment[]\n}\n\nexport interface Follower {\n    userId: number\n    userName: string\n    profileImage: string\n    areYouFollowing: boolean\n    showRemoveOption: boolean\n}\n\nexport interface Following extends Follower {}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/HealthController.html":{"url":"controllers/HealthController.html","title":"controller - HealthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  HealthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/health/health.controller.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                check\n                            \n                            \n                                collectOsMetrics\n                            \n                            \n                                index\n                            \n                            \n                                onApplicationShutdown\n                            \n                            \n                                onModuleInit\n                            \n                            \n                                sse\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            check\n                        \n                        \n                    \n                \n            \n            \n                \ncheck()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@HttpCode(200)@HealthCheck()\n                \n            \n\n            \n                \n                    Defined in src/health/health.controller.ts:66\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            collectOsMetrics\n                        \n                        \n                    \n                \n            \n            \n                \ncollectOsMetrics(metrics)\n                \n            \n\n\n            \n                \n                    Defined in src/health/health.controller.ts:72\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    metrics\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            index\n                        \n                        \n                    \n                \n            \n            \n                \nindex(response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/health/health.controller.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    response\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onApplicationShutdown\n                        \n                        \n                    \n                \n            \n            \n                \nonApplicationShutdown(signal?: string)\n                \n            \n\n\n            \n                \n                    Defined in src/health/health.controller.ts:91\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    signal\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onModuleInit\n                        \n                        \n                    \n                \n            \n            \n                \nonModuleInit()\n                \n            \n\n\n            \n                \n                    Defined in src/health/health.controller.ts:85\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            sse\n                        \n                        \n                    \n                \n            \n            \n                \nsse()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Sse('sse')\n                \n            \n\n            \n                \n                    Defined in src/health/health.controller.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        /* eslint-disable no-use-before-define,@typescript-eslint/no-unsafe-call,@typescript-eslint/no-unsafe-member-access,@typescript-eslint/no-unsafe-assignment,no-param-reassign */\nimport {\n    Controller,\n    Get,\n    HttpCode,\n    OnApplicationShutdown,\n    OnModuleInit,\n    MessageEvent,\n    Res,\n    Sse,\n} from '@nestjs/common'\nimport { ConfigService } from '@nestjs/config'\nimport { ApiTags } from '@nestjs/swagger'\nimport {\n    DNSHealthIndicator,\n    HealthCheck,\n    HealthCheckService,\n} from '@nestjs/terminus'\n\nimport { readFileSync } from 'fs'\nimport * as os from 'os'\nimport { join } from 'path'\nimport * as pidusage from 'pidusage'\nimport { interval, Observable } from 'rxjs'\nimport { map } from 'rxjs/operators'\n\n@ApiTags(HealthController.name)\n@Controller(HealthController.path)\nexport class HealthController implements OnModuleInit, OnApplicationShutdown {\n    static path = 'health'\n\n    constructor(\n        private health: HealthCheckService,\n        private dns: DNSHealthIndicator,\n        private config: ConfigService,\n    ) {}\n\n    @Get()\n    index(@Res() response) {\n        response\n            // @ts-ignore\n            .type('text/html')\n            .send(readFileSync(join(__dirname, 'sse.html')).toString())\n    }\n\n    @Sse('sse')\n    sse(): Observable {\n        const metrics = {\n            os: {},\n            interval: 1, // Every 1 second\n            retention: 60, // Keep 60 datapoints in memory\n        }\n\n        return interval(5000).pipe(\n            map((_) => {\n                this.collectOsMetrics(metrics)\n\n                return { data: metrics }\n            }),\n        )\n    }\n\n    @Get()\n    @HttpCode(200)\n    @HealthCheck()\n    check() {\n        return this.health.check([\n            () => this.dns.pingCheck('nestjs-docs', 'https://docs.nestjs.com'),\n        ])\n    }\n\n    collectOsMetrics(metrics) {\n        pidusage(process.pid, (err, stat) => {\n            if (err) return\n\n            // Convert from B to MB\n            stat.memory = stat.memory / 1024 / 1024\n            stat.load = os.loadavg()\n            stat.timestamp = Date.now()\n\n            metrics.os = stat\n        })\n    }\n\n    onModuleInit() {\n        console.log(`ModuleInit - HealthController has been initialized.`, {\n            config: this.config.get('NODE_ENV'),\n        })\n    }\n\n    onApplicationShutdown(signal?: string) {\n        console.log(\n            `ApplicationShutdown - HealthController has been shutdown with ${signal} signal`,\n        )\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ICrudService.html":{"url":"interfaces/ICrudService.html","title":"interface - ICrudService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ICrudService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/base/crud/icrud.service.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    count\n                                \n                                \n                                    create\n                                \n                                \n                                    delete\n                                \n                                \n                                    findAll\n                                \n                                \n                                    findOne\n                                \n                                \n                                    update\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            count\n                        \n                        \n                    \n                \n            \n            \n                \ncount(filter?: FindManyOptions)\n                \n            \n\n\n            \n                \n                    Defined in src/base/crud/icrud.service.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                            FindManyOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            create\n                        \n                        \n                    \n                \n            \n            \n                \ncreate(entity: DeepPartial, ...options: any[])\n                \n            \n\n\n            \n                \n                    Defined in src/base/crud/icrud.service.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entity\n                                    \n                                            DeepPartial\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                            any[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            delete\n                        \n                        \n                    \n                \n            \n            \n                \ndelete(id: any, ...options: any[])\n                \n            \n\n\n            \n                \n                    Defined in src/base/crud/icrud.service.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                            any[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            findAll\n                        \n                        \n                    \n                \n            \n            \n                \nfindAll(filter?: FindManyOptions)\n                \n            \n\n\n            \n                \n                    Defined in src/base/crud/icrud.service.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                            FindManyOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            findOne\n                        \n                        \n                    \n                \n            \n            \n                \nfindOne(id: string | number | FindOneOptions | FindConditions, options?: FindOneOptions)\n                \n            \n\n\n            \n                \n                    Defined in src/base/crud/icrud.service.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                            string | number | FindOneOptions | FindConditions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                            FindOneOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            update\n                        \n                        \n                    \n                \n            \n            \n                \nupdate(id: any, entity: QueryDeepPartialEntity, ...options: any[])\n                \n            \n\n\n            \n                \n                    Defined in src/base/crud/icrud.service.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    entity\n                                    \n                                            QueryDeepPartialEntity\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                            any[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n    DeepPartial,\n    DeleteResult,\n    FindConditions,\n    FindManyOptions,\n    FindOneOptions,\n    UpdateResult,\n} from 'typeorm'\nimport { QueryDeepPartialEntity } from 'typeorm/query-builder/QueryPartialEntity'\n\nexport interface IPagination {\n    /**\n     * Items included in the current listing\n     */\n    readonly items: T[]\n\n    /**\n     * Total number of available items\n     */\n    readonly total: number\n}\n\nexport interface ICrudService {\n    count(filter?: FindManyOptions)\n\n    findAll(filter?: FindManyOptions)\n\n    findOne(\n        id: string | number | FindOneOptions | FindConditions,\n        options?: FindOneOptions,\n    )\n\n    create(entity: DeepPartial, ...options: any[])\n\n    update(id: any, entity: QueryDeepPartialEntity, ...options: any[])\n\n    delete(id: any, ...options: any[])\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IPagination.html":{"url":"interfaces/IPagination.html","title":"interface - IPagination","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IPagination\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/base/crud/icrud.service.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        items\n                                \n                                \n                                        total\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        items\n                                    \n                                \n                                \n                                    \n                                        items:     T[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     T[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Items included in the current listing\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        total\n                                    \n                                \n                                \n                                    \n                                        total:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Total number of available items\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import {\n    DeepPartial,\n    DeleteResult,\n    FindConditions,\n    FindManyOptions,\n    FindOneOptions,\n    UpdateResult,\n} from 'typeorm'\nimport { QueryDeepPartialEntity } from 'typeorm/query-builder/QueryPartialEntity'\n\nexport interface IPagination {\n    /**\n     * Items included in the current listing\n     */\n    readonly items: T[]\n\n    /**\n     * Total number of available items\n     */\n    readonly total: number\n}\n\nexport interface ICrudService {\n    count(filter?: FindManyOptions)\n\n    findAll(filter?: FindManyOptions)\n\n    findOne(\n        id: string | number | FindOneOptions | FindConditions,\n        options?: FindOneOptions,\n    )\n\n    create(entity: DeepPartial, ...options: any[])\n\n    update(id: any, entity: QueryDeepPartialEntity, ...options: any[])\n\n    delete(id: any, ...options: any[])\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IPagination-1.html":{"url":"interfaces/IPagination-1.html","title":"interface - IPagination-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IPagination\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/base/crud/pagination.ts\n        \n\n            \n                Description\n            \n            \n                Generic pagination interface\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        items\n                                \n                                \n                                        total\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        items\n                                    \n                                \n                                \n                                    \n                                        items:     T[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     T[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Items included in the current listing\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        total\n                                    \n                                \n                                \n                                    \n                                        total:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Total number of available items\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface IPagination {\n    /**\n     * Items included in the current listing\n     */\n    readonly items: T[]\n\n    /**\n     * Total number of available items\n     */\n    readonly total: number\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ITryRequest.html":{"url":"interfaces/ITryRequest.html","title":"interface - ITryRequest","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ITryRequest\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/base/crud/try-request.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        error\n                                \n                                \n                                            Optional\n                                        record\n                                \n                                \n                                        success\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        error\n                                    \n                                \n                                \n                                    \n                                        error:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        record\n                                    \n                                \n                                \n                                    \n                                        record:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        success\n                                    \n                                \n                                \n                                    \n                                        success:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface ITryRequest {\n    success: boolean\n    record?: any\n    error?: any\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PaginationParams.html":{"url":"classes/PaginationParams.html","title":"class - PaginationParams","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PaginationParams\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/base/crud/pagination-params.ts\n        \n\n            \n                Description\n            \n            \n                Describes generic pagination params\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Abstract\n                                    Readonly\n                                    Optional\n                                order\n                            \n                            \n                                    Readonly\n                                skip\n                            \n                            \n                                    Readonly\n                                take\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Abstract\n                                Readonly\n                                Optional\n                            order\n                            \n                        \n                    \n                \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiPropertyOptional()@IsOptional()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/base/crud/pagination-params.ts:39\n                            \n                        \n\n                \n                    \n                        OrderBy\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            skip\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiPropertyOptional({type: Number, minimum: 0})@IsOptional()@Min(0)@Transform(undefined)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/base/crud/pagination-params.ts:32\n                            \n                        \n\n                \n                    \n                        Pagination offset\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            take\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 10\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiPropertyOptional({type: Number, minimum: 0, maximum: 50})@IsOptional()@Min(0)@Max(50)@Transform(undefined)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/base/crud/pagination-params.ts:23\n                            \n                        \n\n                \n                    \n                        Pagination limit\n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiPropertyOptional } from '@nestjs/swagger'\n\nimport { Transform } from 'class-transformer'\nimport { IsOptional, Max, Min } from 'class-validator'\n\nexport enum OrderType {\n    DESC = 'DESC',\n    ASC = 'ASC',\n}\n\n/**\n * Describes generic pagination params\n */\nexport abstract class PaginationParams {\n    /**\n     * Pagination limit\n     */\n    @ApiPropertyOptional({ type: Number, minimum: 0, maximum: 50 })\n    @IsOptional()\n    @Min(0)\n    @Max(50)\n    @Transform((val: string) => parseInt(val, 10))\n    readonly take = 10\n\n    /**\n     * Pagination offset\n     */\n    @ApiPropertyOptional({ type: Number, minimum: 0 })\n    @IsOptional()\n    @Min(0)\n    @Transform((val: string) => parseInt(val, 10))\n    readonly skip = 0\n\n    /**\n     * OrderBy\n     */\n    @ApiPropertyOptional()\n    @IsOptional()\n    abstract readonly order?: { [P in keyof T]?: OrderType }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PostType.html":{"url":"interfaces/PostType.html","title":"interface - PostType","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  PostType\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/domain.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        postType\n                                \n                                \n                                        postTypeId\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        postType\n                                    \n                                \n                                \n                                    \n                                        postType:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        postTypeId\n                                    \n                                \n                                \n                                    \n                                        postTypeId:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { HttpStatus } from '@nestjs/common'\n\nexport type Result =\n    | GetAppLaunchData\n    | GetUserProfile\n    | GetUserPosts\n    | GetComments\n    | GetRescueList\n    | GetFollowers\n    | GetFollowing\n\nexport type APIError = Error | string | null\n\nexport interface APIResponse {\n    data: T\n    error: APIError\n    message: string | string[]\n    statusCode: HttpStatus\n\n    count?: number\n    page?: number\n    pageCount?: number\n    total?: number\n}\n\nexport interface GetAppLaunchData {\n    link: 'api:/'\n    response: APIResponse\n}\n\nexport interface GetUserProfile {\n    link: 'api:v1/user/getUserProfile?userId=25'\n    response: APIResponse\n}\n\nexport interface GetUserPosts {\n    link: 'api:v1/user/getUserPosts?pageNo=0&pageSize=25'\n    response: APIResponse\n}\n\nexport interface GetRescueList {\n    link: 'api:v1/rescue/getRescueList?pageNo=0&pageSize=10&status=pending|inProgress|completed|nearest'\n    response: APIResponse\n}\n\nexport interface GetComments {\n    link: 'api:v1/rescue/getComments?pageNo=0&pageSize=10&postId=1230'\n    response: APIResponse\n}\n\nexport interface GetFollowers {\n    link: 'api:v1/rescue/getUserFollowers?userId=1230'\n    response: APIResponse\n}\n\nexport interface GetFollowing {\n    link: 'api:v1/rescue/getUserFollowing?userId=1230'\n    response: APIResponse\n}\n\nexport interface AppLaunchAction {\n    actionId: number\n    action: string\n    isActive: boolean\n    subject?: string\n}\n\nexport interface User {\n    usesId: number\n\n    coverImage: string\n    following: boolean\n    gender: string\n    isOwnProfile: number\n    isRescuer: boolean\n    latitude: number\n    longitude: number\n    numberOfFollowers: number\n    numberOfFollowing: number\n    numberOfPosts: number\n    numberOfRescuesCompleted: number\n    numberOfRescuesCreated: number\n    numberOfRescuesInProgress: number\n    profileImage: string\n    rescuer: boolean\n    userAddress: string\n    userContacts: string\n    userEmail: string\n    userName: string\n    badge: {\n        badgeId: number\n        badgeName: string\n        badgeDescription: string\n        recuesCompletionNeeded: number\n    }\n    setting: {\n        showMyContacts: boolean\n        getNotifications: boolean\n    }\n}\n\nexport interface PostType {\n    postTypeId: number\n    postType: string\n}\n\nexport interface PostedByUser {\n    usesId: number\n    badgeName: string\n    following: boolean\n    profileImage: string\n    rescuer: boolean\n    userName: string\n}\n\nexport interface UserPost {\n    postId: number\n    commentsCount: number\n    isUserReactedToPost: boolean\n    ownPage: boolean\n    postBy: PostedByUser\n    postImage: string\n    postTime: string\n    postType: PostType\n    postVideo: string\n    reactionsCount: number\n    timeAgo: string\n\n    adCorporateLogoUrl: string | null\n    corporateDescription: string | null\n    corporateName: string | null\n}\n\nexport interface UserPosts {\n    isRecent: boolean\n    feed: UserPost[]\n}\n\nexport interface Rescues {\n    rescueId: number\n    animalImageUrl: string\n    distance: number\n    distanceAway: string\n    emergencyType: string\n    postedBy: string\n    postedMinAgo: string\n    rescueDate: Date\n    rescuedPetName: string\n    rescueLocality: string\n    rescuers: {\n        contact: number\n        name: string\n        profileId: number\n        profileImageUrl: string\n        rescues: boolean\n        showMyNumber: boolean\n    }\n    rescueStatus: string\n    viewsCont: number\n}\n\nexport interface RescueLists {\n    rescues: Rescues[]\n}\n\nexport interface Comment {\n    commentId: number\n    comment: string\n    commentedUseName: string\n    commentedUserId: number\n    timeAgo: string\n}\n\nexport interface Comments {\n    comments: Comment[]\n}\n\nexport interface Follower {\n    userId: number\n    userName: string\n    profileImage: string\n    areYouFollowing: boolean\n    showRemoveOption: boolean\n}\n\nexport interface Following extends Follower {}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PostedByUser.html":{"url":"interfaces/PostedByUser.html","title":"interface - PostedByUser","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  PostedByUser\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/domain.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        badgeName\n                                \n                                \n                                        following\n                                \n                                \n                                        profileImage\n                                \n                                \n                                        rescuer\n                                \n                                \n                                        userName\n                                \n                                \n                                        usesId\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        badgeName\n                                    \n                                \n                                \n                                    \n                                        badgeName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        following\n                                    \n                                \n                                \n                                    \n                                        following:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        profileImage\n                                    \n                                \n                                \n                                    \n                                        profileImage:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        rescuer\n                                    \n                                \n                                \n                                    \n                                        rescuer:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        userName\n                                    \n                                \n                                \n                                    \n                                        userName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        usesId\n                                    \n                                \n                                \n                                    \n                                        usesId:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { HttpStatus } from '@nestjs/common'\n\nexport type Result =\n    | GetAppLaunchData\n    | GetUserProfile\n    | GetUserPosts\n    | GetComments\n    | GetRescueList\n    | GetFollowers\n    | GetFollowing\n\nexport type APIError = Error | string | null\n\nexport interface APIResponse {\n    data: T\n    error: APIError\n    message: string | string[]\n    statusCode: HttpStatus\n\n    count?: number\n    page?: number\n    pageCount?: number\n    total?: number\n}\n\nexport interface GetAppLaunchData {\n    link: 'api:/'\n    response: APIResponse\n}\n\nexport interface GetUserProfile {\n    link: 'api:v1/user/getUserProfile?userId=25'\n    response: APIResponse\n}\n\nexport interface GetUserPosts {\n    link: 'api:v1/user/getUserPosts?pageNo=0&pageSize=25'\n    response: APIResponse\n}\n\nexport interface GetRescueList {\n    link: 'api:v1/rescue/getRescueList?pageNo=0&pageSize=10&status=pending|inProgress|completed|nearest'\n    response: APIResponse\n}\n\nexport interface GetComments {\n    link: 'api:v1/rescue/getComments?pageNo=0&pageSize=10&postId=1230'\n    response: APIResponse\n}\n\nexport interface GetFollowers {\n    link: 'api:v1/rescue/getUserFollowers?userId=1230'\n    response: APIResponse\n}\n\nexport interface GetFollowing {\n    link: 'api:v1/rescue/getUserFollowing?userId=1230'\n    response: APIResponse\n}\n\nexport interface AppLaunchAction {\n    actionId: number\n    action: string\n    isActive: boolean\n    subject?: string\n}\n\nexport interface User {\n    usesId: number\n\n    coverImage: string\n    following: boolean\n    gender: string\n    isOwnProfile: number\n    isRescuer: boolean\n    latitude: number\n    longitude: number\n    numberOfFollowers: number\n    numberOfFollowing: number\n    numberOfPosts: number\n    numberOfRescuesCompleted: number\n    numberOfRescuesCreated: number\n    numberOfRescuesInProgress: number\n    profileImage: string\n    rescuer: boolean\n    userAddress: string\n    userContacts: string\n    userEmail: string\n    userName: string\n    badge: {\n        badgeId: number\n        badgeName: string\n        badgeDescription: string\n        recuesCompletionNeeded: number\n    }\n    setting: {\n        showMyContacts: boolean\n        getNotifications: boolean\n    }\n}\n\nexport interface PostType {\n    postTypeId: number\n    postType: string\n}\n\nexport interface PostedByUser {\n    usesId: number\n    badgeName: string\n    following: boolean\n    profileImage: string\n    rescuer: boolean\n    userName: string\n}\n\nexport interface UserPost {\n    postId: number\n    commentsCount: number\n    isUserReactedToPost: boolean\n    ownPage: boolean\n    postBy: PostedByUser\n    postImage: string\n    postTime: string\n    postType: PostType\n    postVideo: string\n    reactionsCount: number\n    timeAgo: string\n\n    adCorporateLogoUrl: string | null\n    corporateDescription: string | null\n    corporateName: string | null\n}\n\nexport interface UserPosts {\n    isRecent: boolean\n    feed: UserPost[]\n}\n\nexport interface Rescues {\n    rescueId: number\n    animalImageUrl: string\n    distance: number\n    distanceAway: string\n    emergencyType: string\n    postedBy: string\n    postedMinAgo: string\n    rescueDate: Date\n    rescuedPetName: string\n    rescueLocality: string\n    rescuers: {\n        contact: number\n        name: string\n        profileId: number\n        profileImageUrl: string\n        rescues: boolean\n        showMyNumber: boolean\n    }\n    rescueStatus: string\n    viewsCont: number\n}\n\nexport interface RescueLists {\n    rescues: Rescues[]\n}\n\nexport interface Comment {\n    commentId: number\n    comment: string\n    commentedUseName: string\n    commentedUserId: number\n    timeAgo: string\n}\n\nexport interface Comments {\n    comments: Comment[]\n}\n\nexport interface Follower {\n    userId: number\n    userName: string\n    profileImage: string\n    areYouFollowing: boolean\n    showRemoveOption: boolean\n}\n\nexport interface Following extends Follower {}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/QueryFailedFilter.html":{"url":"classes/QueryFailedFilter.html","title":"class - QueryFailedFilter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  QueryFailedFilter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/infra/filters/query-failed.filter.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        ExceptionFilter\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                catch\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            catch\n                        \n                        \n                    \n                \n            \n            \n                \ncatch(exception: CheckViolationError | ConstraintViolationError | DataError | ForeignKeyViolationError | NotNullViolationError | UniqueViolationError, host: ArgumentsHost)\n                \n            \n\n\n            \n                \n                    Defined in src/infra/filters/query-failed.filter.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    exception\n                                    \n                                            CheckViolationError | ConstraintViolationError | DataError | ForeignKeyViolationError | NotNullViolationError | UniqueViolationError\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    host\n                                    \n                                            ArgumentsHost\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n    ArgumentsHost,\n    Catch,\n    ExceptionFilter,\n    HttpException,\n    HttpStatus,\n} from '@nestjs/common'\n\n// eslint-disable-next-line import/no-extraneous-dependencies\nimport {\n    UniqueViolationError,\n    NotNullViolationError,\n    ForeignKeyViolationError,\n    ConstraintViolationError,\n    CheckViolationError,\n    DataError,\n} from 'objection-db-errors'\n\n@Catch(\n    CheckViolationError,\n    ConstraintViolationError,\n    DataError,\n    ForeignKeyViolationError,\n    NotNullViolationError,\n    UniqueViolationError,\n)\nexport class QueryFailedFilter implements ExceptionFilter {\n    catch(\n        exception:\n            | CheckViolationError\n            | ConstraintViolationError\n            | DataError\n            | ForeignKeyViolationError\n            | NotNullViolationError\n            | UniqueViolationError,\n        host: ArgumentsHost,\n    ) {\n        const ctx = host.switchToHttp()\n        const response = ctx.getResponse()\n        const request = ctx.getRequest()\n        const status = HttpStatus.PRECONDITION_FAILED\n\n        const {\n            message,\n            nativeError,\n            name, // @ts-ignore\n            table, // @ts-ignore\n            column, // @ts-ignore\n            columns, // @ts-ignore\n            database, // @ts-ignore\n            constraint, // @ts-ignore\n            schema,\n        } = exception\n\n        // @ts-ignore\n        response.status(status).json({\n            statusCode: status,\n            message,\n            nativeError,\n            name,\n            table,\n            columns: column ? [column] : columns,\n            database,\n            constraint,\n            schema,\n\n            path: request.url,\n            // timestamp: new Date().toISOString(),\n        })\n    }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/RequestGuard.html":{"url":"guards/RequestGuard.html","title":"guard - RequestGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    RequestGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/infra/guards/req.ts\n            \n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                bindRequestHelpers\n                            \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            bindRequestHelpers\n                        \n                        \n                    \n                \n            \n            \n                \nbindRequestHelpers(request: any)\n                \n            \n\n\n            \n                \n                    Defined in src/infra/guards/req.ts:21\n                \n            \n\n\n            \n                \n                    Bind Request Helpers\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            canActivate\n                        \n                        \n                    \n                \n            \n            \n                \ncanActivate(context: ExecutionContext)\n                \n            \n\n\n            \n                \n                    Defined in src/infra/guards/req.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     boolean | Promise | Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable, CanActivate, ExecutionContext } from '@nestjs/common'\n\nimport { Observable } from 'rxjs'\n\n@Injectable()\nexport class RequestGuard implements CanActivate {\n    canActivate(\n        context: ExecutionContext,\n    ): boolean | Promise | Observable {\n        this.bindRequestHelpers(context.switchToHttp().getRequest())\n\n        return true\n    }\n\n    /**\n     * Bind Request Helpers\n     *\n     * @param request\n     */\n    bindRequestHelpers(request: any): any {\n        function all(): Record {\n            const inputs = { ...request.query, ...request.body, ...request.params }\n\n            // eslint-disable-next-line guard-for-in,no-restricted-syntax\n            for (const key in inputs) {\n                const value = inputs[key]\n                if (typeof value === 'string' || value instanceof String) {\n                    inputs[key] = value.trim()\n                }\n            }\n\n            return inputs\n        }\n\n        request.all = all\n        return request\n    }\n}\n\n        \n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/RescueLists.html":{"url":"interfaces/RescueLists.html","title":"interface - RescueLists","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  RescueLists\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/domain.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        rescues\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        rescues\n                                    \n                                \n                                \n                                    \n                                        rescues:         Rescues[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Rescues[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { HttpStatus } from '@nestjs/common'\n\nexport type Result =\n    | GetAppLaunchData\n    | GetUserProfile\n    | GetUserPosts\n    | GetComments\n    | GetRescueList\n    | GetFollowers\n    | GetFollowing\n\nexport type APIError = Error | string | null\n\nexport interface APIResponse {\n    data: T\n    error: APIError\n    message: string | string[]\n    statusCode: HttpStatus\n\n    count?: number\n    page?: number\n    pageCount?: number\n    total?: number\n}\n\nexport interface GetAppLaunchData {\n    link: 'api:/'\n    response: APIResponse\n}\n\nexport interface GetUserProfile {\n    link: 'api:v1/user/getUserProfile?userId=25'\n    response: APIResponse\n}\n\nexport interface GetUserPosts {\n    link: 'api:v1/user/getUserPosts?pageNo=0&pageSize=25'\n    response: APIResponse\n}\n\nexport interface GetRescueList {\n    link: 'api:v1/rescue/getRescueList?pageNo=0&pageSize=10&status=pending|inProgress|completed|nearest'\n    response: APIResponse\n}\n\nexport interface GetComments {\n    link: 'api:v1/rescue/getComments?pageNo=0&pageSize=10&postId=1230'\n    response: APIResponse\n}\n\nexport interface GetFollowers {\n    link: 'api:v1/rescue/getUserFollowers?userId=1230'\n    response: APIResponse\n}\n\nexport interface GetFollowing {\n    link: 'api:v1/rescue/getUserFollowing?userId=1230'\n    response: APIResponse\n}\n\nexport interface AppLaunchAction {\n    actionId: number\n    action: string\n    isActive: boolean\n    subject?: string\n}\n\nexport interface User {\n    usesId: number\n\n    coverImage: string\n    following: boolean\n    gender: string\n    isOwnProfile: number\n    isRescuer: boolean\n    latitude: number\n    longitude: number\n    numberOfFollowers: number\n    numberOfFollowing: number\n    numberOfPosts: number\n    numberOfRescuesCompleted: number\n    numberOfRescuesCreated: number\n    numberOfRescuesInProgress: number\n    profileImage: string\n    rescuer: boolean\n    userAddress: string\n    userContacts: string\n    userEmail: string\n    userName: string\n    badge: {\n        badgeId: number\n        badgeName: string\n        badgeDescription: string\n        recuesCompletionNeeded: number\n    }\n    setting: {\n        showMyContacts: boolean\n        getNotifications: boolean\n    }\n}\n\nexport interface PostType {\n    postTypeId: number\n    postType: string\n}\n\nexport interface PostedByUser {\n    usesId: number\n    badgeName: string\n    following: boolean\n    profileImage: string\n    rescuer: boolean\n    userName: string\n}\n\nexport interface UserPost {\n    postId: number\n    commentsCount: number\n    isUserReactedToPost: boolean\n    ownPage: boolean\n    postBy: PostedByUser\n    postImage: string\n    postTime: string\n    postType: PostType\n    postVideo: string\n    reactionsCount: number\n    timeAgo: string\n\n    adCorporateLogoUrl: string | null\n    corporateDescription: string | null\n    corporateName: string | null\n}\n\nexport interface UserPosts {\n    isRecent: boolean\n    feed: UserPost[]\n}\n\nexport interface Rescues {\n    rescueId: number\n    animalImageUrl: string\n    distance: number\n    distanceAway: string\n    emergencyType: string\n    postedBy: string\n    postedMinAgo: string\n    rescueDate: Date\n    rescuedPetName: string\n    rescueLocality: string\n    rescuers: {\n        contact: number\n        name: string\n        profileId: number\n        profileImageUrl: string\n        rescues: boolean\n        showMyNumber: boolean\n    }\n    rescueStatus: string\n    viewsCont: number\n}\n\nexport interface RescueLists {\n    rescues: Rescues[]\n}\n\nexport interface Comment {\n    commentId: number\n    comment: string\n    commentedUseName: string\n    commentedUserId: number\n    timeAgo: string\n}\n\nexport interface Comments {\n    comments: Comment[]\n}\n\nexport interface Follower {\n    userId: number\n    userName: string\n    profileImage: string\n    areYouFollowing: boolean\n    showRemoveOption: boolean\n}\n\nexport interface Following extends Follower {}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Rescues.html":{"url":"interfaces/Rescues.html","title":"interface - Rescues","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Rescues\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/domain.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        animalImageUrl\n                                \n                                \n                                        distance\n                                \n                                \n                                        distanceAway\n                                \n                                \n                                        emergencyType\n                                \n                                \n                                        postedBy\n                                \n                                \n                                        postedMinAgo\n                                \n                                \n                                        rescueDate\n                                \n                                \n                                        rescuedPetName\n                                \n                                \n                                        rescueId\n                                \n                                \n                                        rescueLocality\n                                \n                                \n                                        rescuers\n                                \n                                \n                                        rescueStatus\n                                \n                                \n                                        viewsCont\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        animalImageUrl\n                                    \n                                \n                                \n                                    \n                                        animalImageUrl:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        distance\n                                    \n                                \n                                \n                                    \n                                        distance:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        distanceAway\n                                    \n                                \n                                \n                                    \n                                        distanceAway:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        emergencyType\n                                    \n                                \n                                \n                                    \n                                        emergencyType:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        postedBy\n                                    \n                                \n                                \n                                    \n                                        postedBy:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        postedMinAgo\n                                    \n                                \n                                \n                                    \n                                        postedMinAgo:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        rescueDate\n                                    \n                                \n                                \n                                    \n                                        rescueDate:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        rescuedPetName\n                                    \n                                \n                                \n                                    \n                                        rescuedPetName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        rescueId\n                                    \n                                \n                                \n                                    \n                                        rescueId:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        rescueLocality\n                                    \n                                \n                                \n                                    \n                                        rescueLocality:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        rescuers\n                                    \n                                \n                                \n                                    \n                                        rescuers:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        rescueStatus\n                                    \n                                \n                                \n                                    \n                                        rescueStatus:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        viewsCont\n                                    \n                                \n                                \n                                    \n                                        viewsCont:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { HttpStatus } from '@nestjs/common'\n\nexport type Result =\n    | GetAppLaunchData\n    | GetUserProfile\n    | GetUserPosts\n    | GetComments\n    | GetRescueList\n    | GetFollowers\n    | GetFollowing\n\nexport type APIError = Error | string | null\n\nexport interface APIResponse {\n    data: T\n    error: APIError\n    message: string | string[]\n    statusCode: HttpStatus\n\n    count?: number\n    page?: number\n    pageCount?: number\n    total?: number\n}\n\nexport interface GetAppLaunchData {\n    link: 'api:/'\n    response: APIResponse\n}\n\nexport interface GetUserProfile {\n    link: 'api:v1/user/getUserProfile?userId=25'\n    response: APIResponse\n}\n\nexport interface GetUserPosts {\n    link: 'api:v1/user/getUserPosts?pageNo=0&pageSize=25'\n    response: APIResponse\n}\n\nexport interface GetRescueList {\n    link: 'api:v1/rescue/getRescueList?pageNo=0&pageSize=10&status=pending|inProgress|completed|nearest'\n    response: APIResponse\n}\n\nexport interface GetComments {\n    link: 'api:v1/rescue/getComments?pageNo=0&pageSize=10&postId=1230'\n    response: APIResponse\n}\n\nexport interface GetFollowers {\n    link: 'api:v1/rescue/getUserFollowers?userId=1230'\n    response: APIResponse\n}\n\nexport interface GetFollowing {\n    link: 'api:v1/rescue/getUserFollowing?userId=1230'\n    response: APIResponse\n}\n\nexport interface AppLaunchAction {\n    actionId: number\n    action: string\n    isActive: boolean\n    subject?: string\n}\n\nexport interface User {\n    usesId: number\n\n    coverImage: string\n    following: boolean\n    gender: string\n    isOwnProfile: number\n    isRescuer: boolean\n    latitude: number\n    longitude: number\n    numberOfFollowers: number\n    numberOfFollowing: number\n    numberOfPosts: number\n    numberOfRescuesCompleted: number\n    numberOfRescuesCreated: number\n    numberOfRescuesInProgress: number\n    profileImage: string\n    rescuer: boolean\n    userAddress: string\n    userContacts: string\n    userEmail: string\n    userName: string\n    badge: {\n        badgeId: number\n        badgeName: string\n        badgeDescription: string\n        recuesCompletionNeeded: number\n    }\n    setting: {\n        showMyContacts: boolean\n        getNotifications: boolean\n    }\n}\n\nexport interface PostType {\n    postTypeId: number\n    postType: string\n}\n\nexport interface PostedByUser {\n    usesId: number\n    badgeName: string\n    following: boolean\n    profileImage: string\n    rescuer: boolean\n    userName: string\n}\n\nexport interface UserPost {\n    postId: number\n    commentsCount: number\n    isUserReactedToPost: boolean\n    ownPage: boolean\n    postBy: PostedByUser\n    postImage: string\n    postTime: string\n    postType: PostType\n    postVideo: string\n    reactionsCount: number\n    timeAgo: string\n\n    adCorporateLogoUrl: string | null\n    corporateDescription: string | null\n    corporateName: string | null\n}\n\nexport interface UserPosts {\n    isRecent: boolean\n    feed: UserPost[]\n}\n\nexport interface Rescues {\n    rescueId: number\n    animalImageUrl: string\n    distance: number\n    distanceAway: string\n    emergencyType: string\n    postedBy: string\n    postedMinAgo: string\n    rescueDate: Date\n    rescuedPetName: string\n    rescueLocality: string\n    rescuers: {\n        contact: number\n        name: string\n        profileId: number\n        profileImageUrl: string\n        rescues: boolean\n        showMyNumber: boolean\n    }\n    rescueStatus: string\n    viewsCont: number\n}\n\nexport interface RescueLists {\n    rescues: Rescues[]\n}\n\nexport interface Comment {\n    commentId: number\n    comment: string\n    commentedUseName: string\n    commentedUserId: number\n    timeAgo: string\n}\n\nexport interface Comments {\n    comments: Comment[]\n}\n\nexport interface Follower {\n    userId: number\n    userName: string\n    profileImage: string\n    areYouFollowing: boolean\n    showRemoveOption: boolean\n}\n\nexport interface Following extends Follower {}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Response.html":{"url":"interfaces/Response.html","title":"interface - Response","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Response\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/infra/interceptors/transform.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        data\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                    \n                                \n                                \n                                    \n                                        data:     T\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     T\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {\n    Injectable,\n    NestInterceptor,\n    ExecutionContext,\n    CallHandler,\n} from '@nestjs/common'\n\nimport { Observable } from 'rxjs'\nimport { map } from 'rxjs/operators'\n\nexport interface Response {\n    data: T\n}\n\n@Injectable()\nexport class TransformInterceptor implements NestInterceptor> {\n    intercept(\n        context: ExecutionContext,\n        next: CallHandler,\n    ): Observable> {\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n        return next.handle().pipe(map((data) => ({ data })))\n    }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/ResponseGuard.html":{"url":"guards/ResponseGuard.html","title":"guard - ResponseGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    ResponseGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/infra/guards/res.ts\n            \n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                bindResponseHelpers\n                            \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            bindResponseHelpers\n                        \n                        \n                    \n                \n            \n            \n                \nbindResponseHelpers(response: any)\n                \n            \n\n\n            \n                \n                    Defined in src/infra/guards/res.ts:21\n                \n            \n\n\n            \n                \n                    Bind Response Helpers\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    response\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            canActivate\n                        \n                        \n                    \n                \n            \n            \n                \ncanActivate(context: ExecutionContext)\n                \n            \n\n\n            \n                \n                    Defined in src/infra/guards/res.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     boolean | Promise | Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable, CanActivate, ExecutionContext } from '@nestjs/common'\n\nimport { Observable } from 'rxjs'\n\n@Injectable()\nexport class ResponseGuard implements CanActivate {\n    canActivate(\n        context: ExecutionContext,\n    ): boolean | Promise | Observable {\n        this.bindResponseHelpers(context.switchToHttp().getResponse())\n\n        return true\n    }\n\n    /**\n     * Bind Response Helpers\n     *\n     * @param response\n     */\n    bindResponseHelpers(response: any): any {\n        function success(\n            data: Record | Array | string,\n            status = 200,\n        ) {\n            return response.status(status).json({\n                success: true,\n                code: status,\n                data,\n            })\n        }\n\n        // eslint-disable-next-line @typescript-eslint/no-shadow\n        function error(error: Record | string, status = 401) {\n            let message = 'Something went wrong!'\n            let errors = null\n            if (error instanceof Object) {\n                message = error.message\n                errors = error.errors\n            } else {\n                message = error\n            }\n\n            return response.status(status).json({\n                success: false,\n                code: status,\n                message,\n                errors,\n            })\n        }\n\n        function noContent() {\n            return response.status(204).end()\n        }\n\n        function withMeta(data: Record, status = 200) {\n            const { data: dataObj, ...meta } = data\n\n            return response.status(status).json({\n                success: true,\n                code: status,\n                data: dataObj,\n                meta,\n            })\n        }\n\n        response.success = success\n        response.error = error\n        response.noContent = noContent\n        response.withMeta = withMeta\n\n        return response\n    }\n}\n\n        \n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Tag.html":{"url":"classes/Tag.html","title":"class - Tag","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Tag\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/database/models/tag.model.ts\n        \n\n\n            \n                Extends\n            \n            \n                    Model\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                createdAt\n                            \n                            \n                                    Optional\n                                deletedAt\n                            \n                            \n                                id\n                            \n                            \n                                    Static\n                                jsonSchema\n                            \n                            \n                                name\n                            \n                            \n                                    Static\n                                tableName\n                            \n                            \n                                    Optional\n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/database/models/tag.model.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            deletedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Date | null\n\n                        \n                    \n                        \n                            \n                                    Defined in src/database/models/tag.model.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/database/models/tag.model.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            jsonSchema\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     JSONSchema\n\n                        \n                    \n                    \n                        \n                            Default value : {\n        type: 'object',\n        required: ['name'],\n        properties: {\n            id: { type: 'integer' },\n            name: { type: 'string', minLength: 2, maxLength: 255 },\n        },\n    }\n                        \n                    \n                        \n                            \n                                    Defined in src/database/models/tag.model.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/database/models/tag.model.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            tableName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'tags'\n                        \n                    \n                        \n                            \n                                    Defined in src/database/models/tag.model.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/database/models/tag.model.ts:14\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Model } from 'objection'\nimport type { JSONSchema, Modifier } from 'objection'\n\nimport { BaseModel } from './base.model'\n\nexport class Tag extends Model {\n    static tableName = 'tags'\n\n    id!: number\n\n    createdAt?: Date\n\n    updatedAt?: Date\n\n    deletedAt?: Date | null\n\n    name: string\n\n    // JSON schema is not the database schema! Nothing is generated based on this.\n    // This is only used for validation. Whenever a model instance is created it is checked against this schema.\n    static jsonSchema: JSONSchema = {\n        type: 'object',\n        required: ['name'],\n        properties: {\n            id: { type: 'integer' },\n            name: { type: 'string', minLength: 2, maxLength: 255 },\n        },\n    }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/TagsController.html":{"url":"controllers/TagsController.html","title":"controller - TagsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  TagsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/tags/tags.controller.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                delete\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            create\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    create(r: CrudRequest, props: CreateTagsDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n            \n                \n                    Defined in src/tags/tags.controller.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    r\n                                    \n                                            CrudRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    props\n                                    \n                                                CreateTagsDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            delete\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(r: CrudRequest, id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n            \n                \n                    Defined in src/tags/tags.controller.ts:58\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    r\n                                    \n                                            CrudRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findAll\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll(r: CrudRequest)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/tags/tags.controller.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    r\n                                    \n                                            CrudRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findOne\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(r: CrudRequest, id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n            \n                \n                    Defined in src/tags/tags.controller.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    r\n                                    \n                                            CrudRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            update\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    update(r: CrudRequest, id: number, props: UpdateTagsDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Put(':id')\n                \n            \n\n            \n                \n                    Defined in src/tags/tags.controller.ts:68\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    r\n                                    \n                                            CrudRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    props\n                                    \n                                                UpdateTagsDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        /* eslint-disable no-use-before-define,@typescript-eslint/no-unused-vars */\nimport {\n    Body,\n    Controller,\n    Delete,\n    Get,\n    Param,\n    ParseIntPipe,\n    Post,\n    Put,\n    UseInterceptors,\n} from '@nestjs/common'\nimport { ApiOperation, ApiTags } from '@nestjs/swagger'\nimport {\n    CrudRequest,\n    CrudRequestInterceptor,\n    ParsedBody,\n    ParsedRequest,\n} from '@nestjsx/crud'\n\nimport { Tag } from '../database/models/tag.model'\nimport { CreateTagsDto, UpdateTagsDto, GetTagsResponseDto } from './tags.dto'\nimport { TagsService } from './tags.service'\n\n@Controller(TagsController.path)\n@ApiTags(TagsController.name)\n@UseInterceptors(CrudRequestInterceptor)\nexport class TagsController {\n    static path = 'tags'\n\n    constructor(private service: TagsService) {}\n\n    @Get()\n    async findAll(@ParsedRequest() r: CrudRequest) {\n        const { parsed, options } = r\n\n        return this.service.findAll({ parsed, options })\n    }\n\n    @Get(':id')\n    async findOne(\n        @ParsedRequest() r: CrudRequest,\n        @Param('id', ParseIntPipe) id: number,\n    ) {\n        const { parsed, options } = r\n\n        return this.service.findOne({ parsed, options }, id)\n    }\n\n    @Post()\n    async create(@ParsedRequest() r: CrudRequest, @Body() props: CreateTagsDto) {\n        const { parsed, options } = r\n\n        return this.service.create({ parsed, options }, props)\n    }\n\n    @Delete(':id')\n    async delete(\n        @ParsedRequest() r: CrudRequest,\n        @Param('id', ParseIntPipe) id: number,\n    ) {\n        const { parsed, options } = r\n\n        return this.service.delete({ parsed, options }, id)\n    }\n\n    @Put(':id')\n    async update(\n        @ParsedRequest() r: CrudRequest,\n        @Param('id', ParseIntPipe) id: number,\n        @Body() props: UpdateTagsDto,\n    ) {\n        const { parsed, options } = r\n\n        return this.service.update({ parsed, options }, id, props)\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TagsModule.html":{"url":"modules/TagsModule.html","title":"module - TagsModule","body":"\n                   \n\n\n\n\n    Modules\n    TagsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TagsModule\n\n\n\ncluster_TagsModule_providers\n\n\n\ncluster_TagsModule_exports\n\n\n\n\nTagsService \n\nTagsService \n\n\n\nTagsModule\n\nTagsModule\n\nTagsService  -->\n\nTagsModule->TagsService \n\n\n\n\n\nTagsService\n\nTagsService\n\nTagsModule -->\n\nTagsService->TagsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/tags/tags.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            TagsService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            TagsController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            TagsService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Global, Module } from '@nestjs/common'\n\nimport { TagsController } from './tags.controller'\nimport { TagsService } from './tags.service'\n\n@Global()\n@Module({\n    controllers: [TagsController],\n    providers: [TagsService],\n    exports: [TagsService],\n})\nexport class TagsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TagsService.html":{"url":"injectables/TagsService.html","title":"injectable - TagsService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  TagsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/tags/tags.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                delete\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(modelClass: ModelClass)\n                    \n                \n                        \n                            \n                                Defined in src/tags/tags.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        modelClass\n                                                  \n                                                        \n                                                                        ModelClass\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            create\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    create(undefined: CrudRequest, props: Partial)\n                \n            \n\n\n            \n                \n                    Defined in src/tags/tags.service.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                            CrudRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    props\n                                    \n                                                Partial\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            delete\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(undefined: CrudRequest, id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/tags/tags.service.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                            CrudRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findAll\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll(undefined: CrudRequest)\n                \n            \n\n\n            \n                \n                    Defined in src/tags/tags.service.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                            CrudRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findOne\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(undefined: CrudRequest, id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/tags/tags.service.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                            CrudRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            update\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    update(undefined: CrudRequest, id: number, props: Partial)\n                \n            \n\n\n            \n                \n                    Defined in src/tags/tags.service.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                            CrudRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    props\n                                    \n                                                Partial\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Inject, Injectable } from '@nestjs/common'\nimport { CrudRequest } from '@nestjsx/crud'\n\nimport { ModelClass, transaction } from 'objection'\n\nimport { Tag } from '../database/models/tag.model'\n\n@Injectable()\nexport class TagsService {\n    constructor(@Inject(Tag.name) private modelClass: ModelClass) {}\n\n    async findAll({ parsed, options }: CrudRequest) {\n        return this.modelClass.query()\n    }\n\n    async findOne({ parsed, options }: CrudRequest, id: number) {\n        return this.modelClass.query().findById(id)\n    }\n\n    async create({ parsed, options }: CrudRequest, props: Partial) {\n        return this.modelClass.query().insert(props).returning('*')\n    }\n\n    async update(\n        { parsed, options }: CrudRequest,\n        id: number,\n        props: Partial,\n    ) {\n        return this.modelClass\n            .query()\n            .patch(props)\n            .where({ id })\n            .returning('*')\n            .first()\n    }\n\n    async delete({ parsed, options }: CrudRequest, id: number) {\n        return transaction(this.modelClass, async (_, trx) => {\n            return this.modelClass\n                .query()\n                .deleteById(id)\n                .returning('*')\n                .first()\n                .transacting(trx)\n        })\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TimeoutInterceptor.html":{"url":"injectables/TimeoutInterceptor.html","title":"injectable - TimeoutInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  TimeoutInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/infra/interceptors/timeout.ts\n        \n\n            \n                Description\n            \n            \n                Timeout interceptor is Observer which terminate request if it takes more than timeout value\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            intercept\n                        \n                        \n                    \n                \n            \n            \n                \nintercept(context: ExecutionContext, next: CallHandler)\n                \n            \n\n\n            \n                \n                    Defined in src/infra/interceptors/timeout.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                            CallHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n    Injectable,\n    NestInterceptor,\n    ExecutionContext,\n    CallHandler,\n    RequestTimeoutException,\n} from '@nestjs/common'\n\nimport { Observable, throwError, TimeoutError } from 'rxjs'\nimport { catchError, timeout } from 'rxjs/operators'\n\n/**\n * Timeout interceptor is Observer which terminate request if it takes more than timeout value\n */\n@Injectable()\nexport class TimeoutInterceptor implements NestInterceptor {\n    intercept(context: ExecutionContext, next: CallHandler): Observable {\n        return next.handle().pipe(\n            timeout(10000), // end request after 10_000 milliseconds\n\n            catchError((e) => {\n                if (e instanceof TimeoutError) {\n                    return throwError(new RequestTimeoutException())\n                }\n\n                return throwError(e)\n            }),\n        )\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TransformInterceptor.html":{"url":"injectables/TransformInterceptor.html","title":"injectable - TransformInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  TransformInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/infra/interceptors/transform.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            intercept\n                        \n                        \n                    \n                \n            \n            \n                \nintercept(context: ExecutionContext, next: CallHandler)\n                \n            \n\n\n            \n                \n                    Defined in src/infra/interceptors/transform.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                            CallHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n    Injectable,\n    NestInterceptor,\n    ExecutionContext,\n    CallHandler,\n} from '@nestjs/common'\n\nimport { Observable } from 'rxjs'\nimport { map } from 'rxjs/operators'\n\nexport interface Response {\n    data: T\n}\n\n@Injectable()\nexport class TransformInterceptor implements NestInterceptor> {\n    intercept(\n        context: ExecutionContext,\n        next: CallHandler,\n    ): Observable> {\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n        return next.handle().pipe(map((data) => ({ data })))\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateTagsDto.html":{"url":"classes/UpdateTagsDto.html","title":"class - UpdateTagsDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateTagsDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/tags/tags.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiHideProperty, ApiProperty, PartialType } from '@nestjs/swagger'\n\nimport { Exclude } from 'class-transformer'\nimport {\n    IsString,\n    MinLength,\n    IsNotEmpty,\n    IsOptional,\n    MaxLength,\n} from 'class-validator'\n\nexport class CreateTagsDto {\n    @ApiProperty({ example: 'tag1' })\n    @IsString()\n    @IsNotEmpty()\n    @MinLength(2)\n    @MaxLength(36)\n    name: string\n}\n\nexport class UpdateTagsDto extends PartialType(CreateTagsDto) {}\n\nexport class GetTagsResponseDto {\n    @ApiProperty()\n    id: number\n\n    @ApiProperty()\n    name: string\n\n    @ApiHideProperty()\n    @Exclude()\n    createdAt: any\n\n    @ApiHideProperty()\n    @Exclude()\n    updatedAt: any\n\n    @ApiHideProperty()\n    @Exclude()\n    deletedAt: any\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/User.html":{"url":"classes/User.html","title":"class - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/database/models/user.model.ts\n        \n\n\n            \n                Extends\n            \n            \n                    Model\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                createdAt\n                            \n                            \n                                    Optional\n                                deletedAt\n                            \n                            \n                                email\n                            \n                            \n                                firstName\n                            \n                            \n                                id\n                            \n                            \n                                isActive\n                            \n                            \n                                    Static\n                                jsonSchema\n                            \n                            \n                                lastName\n                            \n                            \n                                    Static\n                                modifiers\n                            \n                            \n                                password\n                            \n                            \n                                    Static\n                                tableName\n                            \n                            \n                                    Optional\n                                updatedAt\n                            \n                            \n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/database/models/user.model.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            deletedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Date | null\n\n                        \n                    \n                        \n                            \n                                    Defined in src/database/models/user.model.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            email\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/database/models/user.model.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            firstName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/database/models/user.model.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/database/models/user.model.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isActive\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/database/models/user.model.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            jsonSchema\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     JSONSchema\n\n                        \n                    \n                    \n                        \n                            Default value : {\n        type: 'object',\n        required: ['username', 'email', 'displayName', 'password'],\n        properties: {\n            id: { type: 'integer' },\n            username: { type: 'string', minLength: 3, maxLength: 255 },\n            email: { type: 'string', minLength: 3, maxLength: 255 },\n            password: { type: 'string', minLength: 8, maxLength: 255 },\n            firstName: { type: 'string', minLength: 1, maxLength: 255 },\n            lastName: { type: 'string', minLength: 1, maxLength: 255 },\n            isActive: { type: 'boolean' },\n        },\n    }\n                        \n                    \n                        \n                            \n                                    Defined in src/database/models/user.model.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            lastName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/database/models/user.model.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            modifiers\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Modifiers\n\n                        \n                    \n                    \n                        \n                            Default value : {\n        // Our example modifier is a a semi-dumb fuzzy name match. We split the name into pieces using whitespace\n        // and then try to partially match each of those pieces to both the `firstName` and the `lastName` fields.\n\n        searchByName(query, name: string) {\n            // This `where` simply creates parentheses so that other `where` statements don't get mixed with the these.\n\n            query.where((q) => {\n                for (const namePart of name.trim().split(/\\s+/)) {\n                    for (const column of ['firstName', 'lastName']) {\n                        q.orWhereRaw('lower(??) like ?', [\n                            column,\n                            `${namePart.toLowerCase()}%`,\n                        ])\n                    }\n                }\n            })\n        },\n    }\n                        \n                    \n                        \n                            \n                                    Defined in src/database/models/user.model.ts:47\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            password\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/database/models/user.model.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            tableName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'users'\n                        \n                    \n                        \n                            \n                                    Defined in src/database/models/user.model.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/database/models/user.model.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            username\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/database/models/user.model.ts:18\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Model } from 'objection'\nimport type { JSONSchema, Modifiers, AnyQueryBuilder } from 'objection'\n\nimport { BaseModel } from './base.model'\n\nexport class User extends Model {\n    static tableName = 'users'\n\n    id!: number\n\n    createdAt?: Date\n\n    updatedAt?: Date\n\n    deletedAt?: Date | null\n\n    username: string\n\n    email: string\n\n    password: string\n\n    firstName: string\n\n    lastName: string\n\n    isActive: boolean\n\n    // JSON schema is not the database schema! Nothing is generated based on this.\n    // This is only used for validation. Whenever a model instance is created it is checked against this schema.\n    static jsonSchema: JSONSchema = {\n        type: 'object',\n        required: ['username', 'email', 'displayName', 'password'],\n        properties: {\n            id: { type: 'integer' },\n            username: { type: 'string', minLength: 3, maxLength: 255 },\n            email: { type: 'string', minLength: 3, maxLength: 255 },\n            password: { type: 'string', minLength: 8, maxLength: 255 },\n            firstName: { type: 'string', minLength: 1, maxLength: 255 },\n            lastName: { type: 'string', minLength: 1, maxLength: 255 },\n            isActive: { type: 'boolean' },\n        },\n    }\n\n    // Modifiers are reusable query snippets that can be used in various places.\n    static modifiers: Modifiers = {\n        // Our example modifier is a a semi-dumb fuzzy name match. We split the name into pieces using whitespace\n        // and then try to partially match each of those pieces to both the `firstName` and the `lastName` fields.\n\n        searchByName(query, name: string) {\n            // This `where` simply creates parentheses so that other `where` statements don't get mixed with the these.\n\n            query.where((q) => {\n                for (const namePart of name.trim().split(/\\s+/)) {\n                    for (const column of ['firstName', 'lastName']) {\n                        q.orWhereRaw('lower(??) like ?', [\n                            column,\n                            `${namePart.toLowerCase()}%`,\n                        ])\n                    }\n                }\n            })\n        },\n    }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UserPost.html":{"url":"interfaces/UserPost.html","title":"interface - UserPost","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  UserPost\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/domain.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        adCorporateLogoUrl\n                                \n                                \n                                        commentsCount\n                                \n                                \n                                        corporateDescription\n                                \n                                \n                                        corporateName\n                                \n                                \n                                        isUserReactedToPost\n                                \n                                \n                                        ownPage\n                                \n                                \n                                        postBy\n                                \n                                \n                                        postId\n                                \n                                \n                                        postImage\n                                \n                                \n                                        postTime\n                                \n                                \n                                        postType\n                                \n                                \n                                        postVideo\n                                \n                                \n                                        reactionsCount\n                                \n                                \n                                        timeAgo\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        adCorporateLogoUrl\n                                    \n                                \n                                \n                                    \n                                        adCorporateLogoUrl:     string | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        commentsCount\n                                    \n                                \n                                \n                                    \n                                        commentsCount:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        corporateDescription\n                                    \n                                \n                                \n                                    \n                                        corporateDescription:     string | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        corporateName\n                                    \n                                \n                                \n                                    \n                                        corporateName:     string | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isUserReactedToPost\n                                    \n                                \n                                \n                                    \n                                        isUserReactedToPost:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ownPage\n                                    \n                                \n                                \n                                    \n                                        ownPage:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        postBy\n                                    \n                                \n                                \n                                    \n                                        postBy:         PostedByUser\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         PostedByUser\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        postId\n                                    \n                                \n                                \n                                    \n                                        postId:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        postImage\n                                    \n                                \n                                \n                                    \n                                        postImage:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        postTime\n                                    \n                                \n                                \n                                    \n                                        postTime:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        postType\n                                    \n                                \n                                \n                                    \n                                        postType:         PostType\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         PostType\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        postVideo\n                                    \n                                \n                                \n                                    \n                                        postVideo:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        reactionsCount\n                                    \n                                \n                                \n                                    \n                                        reactionsCount:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        timeAgo\n                                    \n                                \n                                \n                                    \n                                        timeAgo:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { HttpStatus } from '@nestjs/common'\n\nexport type Result =\n    | GetAppLaunchData\n    | GetUserProfile\n    | GetUserPosts\n    | GetComments\n    | GetRescueList\n    | GetFollowers\n    | GetFollowing\n\nexport type APIError = Error | string | null\n\nexport interface APIResponse {\n    data: T\n    error: APIError\n    message: string | string[]\n    statusCode: HttpStatus\n\n    count?: number\n    page?: number\n    pageCount?: number\n    total?: number\n}\n\nexport interface GetAppLaunchData {\n    link: 'api:/'\n    response: APIResponse\n}\n\nexport interface GetUserProfile {\n    link: 'api:v1/user/getUserProfile?userId=25'\n    response: APIResponse\n}\n\nexport interface GetUserPosts {\n    link: 'api:v1/user/getUserPosts?pageNo=0&pageSize=25'\n    response: APIResponse\n}\n\nexport interface GetRescueList {\n    link: 'api:v1/rescue/getRescueList?pageNo=0&pageSize=10&status=pending|inProgress|completed|nearest'\n    response: APIResponse\n}\n\nexport interface GetComments {\n    link: 'api:v1/rescue/getComments?pageNo=0&pageSize=10&postId=1230'\n    response: APIResponse\n}\n\nexport interface GetFollowers {\n    link: 'api:v1/rescue/getUserFollowers?userId=1230'\n    response: APIResponse\n}\n\nexport interface GetFollowing {\n    link: 'api:v1/rescue/getUserFollowing?userId=1230'\n    response: APIResponse\n}\n\nexport interface AppLaunchAction {\n    actionId: number\n    action: string\n    isActive: boolean\n    subject?: string\n}\n\nexport interface User {\n    usesId: number\n\n    coverImage: string\n    following: boolean\n    gender: string\n    isOwnProfile: number\n    isRescuer: boolean\n    latitude: number\n    longitude: number\n    numberOfFollowers: number\n    numberOfFollowing: number\n    numberOfPosts: number\n    numberOfRescuesCompleted: number\n    numberOfRescuesCreated: number\n    numberOfRescuesInProgress: number\n    profileImage: string\n    rescuer: boolean\n    userAddress: string\n    userContacts: string\n    userEmail: string\n    userName: string\n    badge: {\n        badgeId: number\n        badgeName: string\n        badgeDescription: string\n        recuesCompletionNeeded: number\n    }\n    setting: {\n        showMyContacts: boolean\n        getNotifications: boolean\n    }\n}\n\nexport interface PostType {\n    postTypeId: number\n    postType: string\n}\n\nexport interface PostedByUser {\n    usesId: number\n    badgeName: string\n    following: boolean\n    profileImage: string\n    rescuer: boolean\n    userName: string\n}\n\nexport interface UserPost {\n    postId: number\n    commentsCount: number\n    isUserReactedToPost: boolean\n    ownPage: boolean\n    postBy: PostedByUser\n    postImage: string\n    postTime: string\n    postType: PostType\n    postVideo: string\n    reactionsCount: number\n    timeAgo: string\n\n    adCorporateLogoUrl: string | null\n    corporateDescription: string | null\n    corporateName: string | null\n}\n\nexport interface UserPosts {\n    isRecent: boolean\n    feed: UserPost[]\n}\n\nexport interface Rescues {\n    rescueId: number\n    animalImageUrl: string\n    distance: number\n    distanceAway: string\n    emergencyType: string\n    postedBy: string\n    postedMinAgo: string\n    rescueDate: Date\n    rescuedPetName: string\n    rescueLocality: string\n    rescuers: {\n        contact: number\n        name: string\n        profileId: number\n        profileImageUrl: string\n        rescues: boolean\n        showMyNumber: boolean\n    }\n    rescueStatus: string\n    viewsCont: number\n}\n\nexport interface RescueLists {\n    rescues: Rescues[]\n}\n\nexport interface Comment {\n    commentId: number\n    comment: string\n    commentedUseName: string\n    commentedUserId: number\n    timeAgo: string\n}\n\nexport interface Comments {\n    comments: Comment[]\n}\n\nexport interface Follower {\n    userId: number\n    userName: string\n    profileImage: string\n    areYouFollowing: boolean\n    showRemoveOption: boolean\n}\n\nexport interface Following extends Follower {}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UserPosts.html":{"url":"interfaces/UserPosts.html","title":"interface - UserPosts","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  UserPosts\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/domain.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        feed\n                                \n                                \n                                        isRecent\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        feed\n                                    \n                                \n                                \n                                    \n                                        feed:         UserPost[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         UserPost[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isRecent\n                                    \n                                \n                                \n                                    \n                                        isRecent:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { HttpStatus } from '@nestjs/common'\n\nexport type Result =\n    | GetAppLaunchData\n    | GetUserProfile\n    | GetUserPosts\n    | GetComments\n    | GetRescueList\n    | GetFollowers\n    | GetFollowing\n\nexport type APIError = Error | string | null\n\nexport interface APIResponse {\n    data: T\n    error: APIError\n    message: string | string[]\n    statusCode: HttpStatus\n\n    count?: number\n    page?: number\n    pageCount?: number\n    total?: number\n}\n\nexport interface GetAppLaunchData {\n    link: 'api:/'\n    response: APIResponse\n}\n\nexport interface GetUserProfile {\n    link: 'api:v1/user/getUserProfile?userId=25'\n    response: APIResponse\n}\n\nexport interface GetUserPosts {\n    link: 'api:v1/user/getUserPosts?pageNo=0&pageSize=25'\n    response: APIResponse\n}\n\nexport interface GetRescueList {\n    link: 'api:v1/rescue/getRescueList?pageNo=0&pageSize=10&status=pending|inProgress|completed|nearest'\n    response: APIResponse\n}\n\nexport interface GetComments {\n    link: 'api:v1/rescue/getComments?pageNo=0&pageSize=10&postId=1230'\n    response: APIResponse\n}\n\nexport interface GetFollowers {\n    link: 'api:v1/rescue/getUserFollowers?userId=1230'\n    response: APIResponse\n}\n\nexport interface GetFollowing {\n    link: 'api:v1/rescue/getUserFollowing?userId=1230'\n    response: APIResponse\n}\n\nexport interface AppLaunchAction {\n    actionId: number\n    action: string\n    isActive: boolean\n    subject?: string\n}\n\nexport interface User {\n    usesId: number\n\n    coverImage: string\n    following: boolean\n    gender: string\n    isOwnProfile: number\n    isRescuer: boolean\n    latitude: number\n    longitude: number\n    numberOfFollowers: number\n    numberOfFollowing: number\n    numberOfPosts: number\n    numberOfRescuesCompleted: number\n    numberOfRescuesCreated: number\n    numberOfRescuesInProgress: number\n    profileImage: string\n    rescuer: boolean\n    userAddress: string\n    userContacts: string\n    userEmail: string\n    userName: string\n    badge: {\n        badgeId: number\n        badgeName: string\n        badgeDescription: string\n        recuesCompletionNeeded: number\n    }\n    setting: {\n        showMyContacts: boolean\n        getNotifications: boolean\n    }\n}\n\nexport interface PostType {\n    postTypeId: number\n    postType: string\n}\n\nexport interface PostedByUser {\n    usesId: number\n    badgeName: string\n    following: boolean\n    profileImage: string\n    rescuer: boolean\n    userName: string\n}\n\nexport interface UserPost {\n    postId: number\n    commentsCount: number\n    isUserReactedToPost: boolean\n    ownPage: boolean\n    postBy: PostedByUser\n    postImage: string\n    postTime: string\n    postType: PostType\n    postVideo: string\n    reactionsCount: number\n    timeAgo: string\n\n    adCorporateLogoUrl: string | null\n    corporateDescription: string | null\n    corporateName: string | null\n}\n\nexport interface UserPosts {\n    isRecent: boolean\n    feed: UserPost[]\n}\n\nexport interface Rescues {\n    rescueId: number\n    animalImageUrl: string\n    distance: number\n    distanceAway: string\n    emergencyType: string\n    postedBy: string\n    postedMinAgo: string\n    rescueDate: Date\n    rescuedPetName: string\n    rescueLocality: string\n    rescuers: {\n        contact: number\n        name: string\n        profileId: number\n        profileImageUrl: string\n        rescues: boolean\n        showMyNumber: boolean\n    }\n    rescueStatus: string\n    viewsCont: number\n}\n\nexport interface RescueLists {\n    rescues: Rescues[]\n}\n\nexport interface Comment {\n    commentId: number\n    comment: string\n    commentedUseName: string\n    commentedUserId: number\n    timeAgo: string\n}\n\nexport interface Comments {\n    comments: Comment[]\n}\n\nexport interface Follower {\n    userId: number\n    userName: string\n    profileImage: string\n    areYouFollowing: boolean\n    showRemoveOption: boolean\n}\n\nexport interface Following extends Follower {}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app.controller.ts\n            \n            controller\n            AppController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app.module.ts\n            \n            variable\n            ConfigModuleOptions\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app.service.ts\n            \n            injectable\n            AppService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/base/DBHelper.ts\n            \n            injectable\n            DBHelper\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/base/crud/crud.controller.ts\n            \n            class\n            CrudController\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/base/crud/crud.service.ts\n            \n            class\n            CrudService\n            \n                8 %\n                (1/12)\n            \n        \n        \n            \n                \n                src/base/crud/icrud.service.ts\n            \n            interface\n            ICrudService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/base/crud/icrud.service.ts\n            \n            interface\n            IPagination\n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                src/base/crud/pagination-params.ts\n            \n            class\n            PaginationParams\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/base/crud/pagination.ts\n            \n            interface\n            IPagination\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/base/crud/try-request.ts\n            \n            interface\n            ITryRequest\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/base/datum/base-entity.ts\n            \n            class\n            BaseEntity\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/base/datum/get-many-dto.ts\n            \n            class\n            GetManyDto\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/base/datum/toHexString.ts\n            \n            function\n            toHexString\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/base/moment-extend.ts\n            \n            variable\n            moment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/cron/cron.service.ts\n            \n            injectable\n            CronService\n            \n                11 %\n                (1/9)\n            \n        \n        \n            \n                \n                src/database/database.module.ts\n            \n            variable\n            modelProviders\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/database/database.module.ts\n            \n            variable\n            models\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/database/database.module.ts\n            \n            variable\n            providers\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/database/migrations/20190609143930_CreateTag.ts\n            \n            function\n            down\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/database/migrations/20190609143930_CreateTag.ts\n            \n            function\n            up\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/database/migrations/20190609143930_CreateTag.ts\n            \n            variable\n            tableName\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/database/migrations/20190609143930_CreateUser.ts\n            \n            function\n            down\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/database/migrations/20190609143930_CreateUser.ts\n            \n            function\n            up\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/database/migrations/20190609143930_CreateUser.ts\n            \n            variable\n            tableName\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/database/models/base.model.ts\n            \n            class\n            BaseModel\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/database/models/tag.model.ts\n            \n            class\n            Tag\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/database/models/user.model.ts\n            \n            class\n            User\n            \n                0 %\n                (0/14)\n            \n        \n        \n            \n                \n                src/database/seeds/02-Tag.ts\n            \n            function\n            seed\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/domain.ts\n            \n            interface\n            APIResponse\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/domain.ts\n            \n            interface\n            AppLaunchAction\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/domain.ts\n            \n            interface\n            Comment\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/domain.ts\n            \n            interface\n            Comments\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/domain.ts\n            \n            interface\n            Follower\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/domain.ts\n            \n            interface\n            Following\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/domain.ts\n            \n            interface\n            GetAppLaunchData\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/domain.ts\n            \n            interface\n            GetComments\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/domain.ts\n            \n            interface\n            GetFollowers\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/domain.ts\n            \n            interface\n            GetFollowing\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/domain.ts\n            \n            interface\n            GetRescueList\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/domain.ts\n            \n            interface\n            GetUserPosts\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/domain.ts\n            \n            interface\n            GetUserProfile\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/domain.ts\n            \n            interface\n            PostedByUser\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/domain.ts\n            \n            interface\n            PostType\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/domain.ts\n            \n            interface\n            RescueLists\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/domain.ts\n            \n            interface\n            Rescues\n            \n                0 %\n                (0/14)\n            \n        \n        \n            \n                \n                src/domain.ts\n            \n            interface\n            User\n            \n                0 %\n                (0/23)\n            \n        \n        \n            \n                \n                src/domain.ts\n            \n            interface\n            UserPost\n            \n                0 %\n                (0/15)\n            \n        \n        \n            \n                \n                src/domain.ts\n            \n            interface\n            UserPosts\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/health/health.controller.ts\n            \n            controller\n            HealthController\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/infra/filters/query-failed.filter.ts\n            \n            class\n            QueryFailedFilter\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/infra/guards/req.ts\n            \n            guard\n            RequestGuard\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/infra/guards/res.ts\n            \n            guard\n            ResponseGuard\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/infra/interceptors/null-undefined-override.ts\n            \n            injectable\n            ExcludeNullUndefinedInterceptor\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                src/infra/interceptors/timeout.ts\n            \n            injectable\n            TimeoutInterceptor\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                src/infra/interceptors/transform.ts\n            \n            injectable\n            TransformInterceptor\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/infra/interceptors/transform.ts\n            \n            interface\n            Response\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            setupInfra\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            setupMiddlewares\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            setupSwaggerDocs\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/tags/tags.controller.ts\n            \n            controller\n            TagsController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/tags/tags.dto.ts\n            \n            class\n            CreateTagsDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/tags/tags.dto.ts\n            \n            class\n            GetTagsResponseDto\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/tags/tags.dto.ts\n            \n            class\n            UpdateTagsDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/tags/tags.service.ts\n            \n            injectable\n            TagsService\n            \n                0 %\n                (0/7)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @hapi/joi : ^17.1.1\n        \n            @nestjs/common : ^7.5.1\n        \n            @nestjs/config : ^0.6.1\n        \n            @nestjs/core : ^7.5.1\n        \n            @nestjs/mapped-types : ^0.1.1\n        \n            @nestjs/passport : ^7.1.3\n        \n            @nestjs/platform-express : ^7.5.1\n        \n            @nestjs/platform-socket.io : ^7.6.5\n        \n            @nestjs/schedule : ^0.4.1\n        \n            @nestjs/serve-static : ^2.1.4\n        \n            @nestjs/swagger : ^4.7.5\n        \n            @nestjs/terminus : ^7.0.1\n        \n            @nestjs/typeorm : ^7.1.5\n        \n            @nestjsx/crud : ^4.6.2\n        \n            @nestjsx/crud-request : ^4.6.2\n        \n            @nestjsx/crud-typeorm : ^4.6.2\n        \n            @types/dotenv : ^8.2.0\n        \n            bcryptjs : ^2.4.3\n        \n            class-transformer : ^0.3.1\n        \n            class-validator : ^0.12.2\n        \n            dotenv : ^8.2.0\n        \n            express-rate-limit : ^5.2.3\n        \n            helmet : ^4.2.0\n        \n            knex : ^0.21.15\n        \n            lodash : ^4.17.20\n        \n            moment : ^2.29.1\n        \n            moment-range : ^4.0.2\n        \n            objection : ^2.2.4\n        \n            objection-db-errors : ^1.1.2\n        \n            objection-visibility : ^1.1.0\n        \n            passport : ^0.4.1\n        \n            passport-local : ^1.0.0\n        \n            pidusage : ^2.0.21\n        \n            reflect-metadata : ^0.1.13\n        \n            rimraf : ^3.0.2\n        \n            rxjs : ^6.6.3\n        \n            source-map-support : ^0.5.19\n        \n            sqlite3 : ^5.0.0\n        \n            swagger-ui-express : ^4.1.5\n        \n            typeorm : ^0.2.29\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            OrderType   (src/.../pagination-params.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/base/crud/pagination-params.ts\n    \n        \n            \n                \n                    \n                        \n                        OrderType\n                    \n                \n                        \n                            \n                                 DESC\n                            \n                        \n                        \n                            \n                                Value : DESC\n                            \n                        \n                        \n                            \n                                 ASC\n                            \n                        \n                        \n                            \n                                Value : ASC\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                        \n                            down   (src/.../20190609143930_CreateTag.ts)\n                        \n                        \n                            down   (src/.../20190609143930_CreateUser.ts)\n                        \n                        \n                            seed   (src/.../02-Tag.ts)\n                        \n                        \n                            setupInfra   (src/.../main.ts)\n                        \n                        \n                            setupMiddlewares   (src/.../main.ts)\n                        \n                        \n                            setupSwaggerDocs   (src/.../main.ts)\n                        \n                        \n                            toHexString   (src/.../toHexString.ts)\n                        \n                        \n                            up   (src/.../20190609143930_CreateTag.ts)\n                        \n                        \n                            up   (src/.../20190609143930_CreateUser.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            bootstrap\n                        \n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setupInfra\n                        \n                        \n                    \n                \n            \n            \n                \nsetupInfra(app)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    app\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setupMiddlewares\n                        \n                        \n                    \n                \n            \n            \n                \nsetupMiddlewares(app)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    app\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setupSwaggerDocs\n                        \n                        \n                    \n                \n            \n            \n                \nsetupSwaggerDocs(app)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    app\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    src/database/migrations/20190609143930_CreateTag.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            down\n                        \n                        \n                    \n                \n            \n            \n                \ndown(knex)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    knex\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            up\n                        \n                        \n                    \n                \n            \n            \n                \nup(knex)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    knex\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    src/database/migrations/20190609143930_CreateUser.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            down\n                        \n                        \n                    \n                \n            \n            \n                \ndown(knex)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    knex\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            up\n                        \n                        \n                    \n                \n            \n            \n                \nup(knex)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    knex\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    src/database/seeds/02-Tag.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            seed\n                        \n                        \n                    \n                \n            \n            \n                \nseed(knex)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    knex\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    src/base/datum/toHexString.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            toHexString\n                        \n                        \n                    \n                \n            \n            \n                \ntoHexString(value)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n  A progressive Node.js framework for building efficient and scalable server-side applications.\n    \n\n\n\n\n\n\n\n\n  \n    \n  \n\n  \n\nDescription\nNest framework TypeScript starter repository.\nInstallation\n$ npm installRunning the app\n# development\n$ npm run start\n\n# watch mode\n$ npm run start:dev\n\n# production mode\n$ npm run start:prodTest\n# unit tests\n$ npm run test\n\n# e2e tests\n$ npm run test:e2e\n\n# test coverage\n$ npm run test:covSupport\nNest is an MIT-licensed open source project. It can grow thanks to the sponsors and support by the amazing backers. If you'd like to join them, please read more here.\nStay in touch\n\nAuthor - Kamil Myśliwiec\nWebsite - https://nestjs.com\nTwitter - @nestframework\n\nLicense\nNest is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CronModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        DatabaseModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TagsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_CronModule\n\n\n\ncluster_CronModule_providers\n\n\n\ncluster_TagsModule\n\n\n\ncluster_TagsModule_exports\n\n\n\ncluster_TagsModule_providers\n\n\n\n\nCronModule\n\nCronModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nCronModule->AppModule\n\n\n\n\n\nDatabaseModule\n\nDatabaseModule\n\nAppModule -->\n\nDatabaseModule->AppModule\n\n\n\n\n\nTagsModule\n\nTagsModule\n\nAppModule -->\n\nTagsModule->AppModule\n\n\n\n\n\nTagsService \n\nTagsService \n\nTagsService  -->\n\nTagsModule->TagsService \n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nCronService\n\nCronService\n\nCronModule -->\n\nCronService->CronModule\n\n\n\n\n\nTagsService\n\nTagsService\n\nTagsModule -->\n\nTagsService->TagsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        4 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    3 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    7 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    12 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    2 Guards\n                \n            \n        \n        \n            \n                \n                    \n                    25 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            APIError   (src/.../domain.ts)\n                        \n                        \n                            Result   (src/.../domain.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/domain.ts\n    \n    \n        \n            \n                \n                    \n                    APIError\n                \n            \n            \n                \n                        Error | string | null\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Result\n                \n            \n            \n                \n                            GetAppLaunchData | GetUserProfile | GetUserPosts | GetComments | GetRescueList | GetFollowers | GetFollowing\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ConfigModuleOptions   (src/.../app.module.ts)\n                        \n                        \n                            modelProviders   (src/.../database.module.ts)\n                        \n                        \n                            models   (src/.../database.module.ts)\n                        \n                        \n                            moment   (src/.../moment-extend.ts)\n                        \n                        \n                            providers   (src/.../database.module.ts)\n                        \n                        \n                            tableName   (src/.../20190609143930_CreateTag.ts)\n                        \n                        \n                            tableName   (src/.../20190609143930_CreateUser.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app.module.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            ConfigModuleOptions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    isGlobal: true,\n    validationOptions: {\n        allowUnknown: true,\n        abortEarly: true,\n    },\n    validationSchema: Joi.object({\n        PORT: Joi.number().default(3000),\n        NODE_ENV: Joi.string()\n            .required()\n            .valid('development', 'production', 'test', 'provision')\n            .default('development'),\n\n        database: Joi.string().required(),\n        type: Joi.string().required(),\n        logging: Joi.string().required(),\n        synchronize: Joi.string().required(),\n    }),\n}\n                        \n                    \n\n\n            \n        \n\n    src/database/database.module.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            modelProviders\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : models.map((model) => {\n    return {\n        provide: model.name,\n        useValue: model,\n    }\n})\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            models\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [Tag]\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            providers\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n    ...modelProviders,\n    {\n        provide: 'KnexConnection',\n        // eslint-disable-next-line @typescript-eslint/require-await\n        useFactory: async () => {\n            const knex = Knex({\n                client: 'sqlite3',\n                useNullAsDefault: true,\n                connection: {\n                    filename: './knex.sqlite',\n                },\n                debug: true,\n                // ...knexSnakeCaseMappers(),\n            })\n\n            Model.knex(knex)\n            return knex\n        },\n    },\n]\n                        \n                    \n\n\n            \n        \n\n    src/base/moment-extend.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            moment\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : extendMoment(momentDefault)\n                        \n                    \n\n\n            \n        \n\n    src/database/migrations/20190609143930_CreateTag.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            tableName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'tags'\n                        \n                    \n\n\n            \n        \n\n    src/database/migrations/20190609143930_CreateUser.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            tableName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'users'\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
