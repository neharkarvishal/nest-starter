var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/controllers/AppController.html",[0,0.915,1,1.449]],["body/controllers/AppController.html",[0,1.268,1,2.008,2,1.1,3,0.582,4,0.484,5,0.484,6,2.131,7,0.484,8,1.475,9,3.448,10,1.28,11,0.059,12,2.683,13,2.131,14,0.81,15,2.683,16,1.1,17,1.268,18,1.497,19,1.497,20,2.131,21,2.372,22,2.131,23,2.683,24,2.86,25,2.008,26,2.131,27,2.131,28,1.045,29,2.131,30,1.497,31,0.81,32,2.86,33,1.768,34,1.28,35,1.665,36,2.131,37,2.683,38,0.582,39,0.311,40,1.768,41,1.1,42,2.131,43,2.131,44,1.28,45,2.683,46,0.03,47,0.041,48,0.03]],["title/modules/AppModule.html",[49,1.239,50,1.449]],["body/modules/AppModule.html",[1,1.6,2,0.95,3,0.319,4,0.265,5,0.265,8,0.602,11,0.059,14,0.7,16,0.95,17,1.01,18,0.82,19,0.82,21,1.89,22,2.278,25,0.82,28,1.105,30,1.975,31,0.444,35,1.542,36,1.168,38,0.319,39,0.17,40,0.969,41,0.602,46,0.017,47,0.026,48,0.017,49,1.553,50,2.398,51,0.701,52,0.701,53,0.969,54,0.969,55,0.701,56,1.89,57,0.969,58,1.168,59,1.168,60,1.168,61,1.795,62,1.527,63,0.969,64,0.969,65,0.969,66,1.6,67,2.317,68,2.278,69,1.84,70,1.47,71,0.701,72,0.596,73,0.596,74,0.701,75,2.278,76,1.168,77,2.145,78,1.47,79,1.47,80,1.47,81,1.47,82,1.47,83,1.47,84,1.47,85,0.969,86,2.317,87,0.969,88,1.47,89,1.168,90,2.317,91,1.47,92,1.168,93,1.168,94,1.168,95,1.168,96,1.47,97,1.47,98,1.47,99,2.585,100,0.969,101,1.168,102,2.595,103,1.168,104,1.168,105,1.168,106,1.168,107,1.168,108,1.168,109,1.168,110,1.168,111,1.168,112,1.168,113,0.969,114,0.969,115,1.168,116,1.168,117,0.969,118,1.168,119,1.168,120,1.168,121,1.168,122,0.969,123,1.168,124,1.168,125,1.84,126,1.168,127,1.168,128,1.168,129,1.168,130,1.168,131,1.84,132,1.168,133,1.168,134,1.168,135,1.168,136,1.168,137,1.168,138,1.168,139,0.969,140,1.168,141,1.168,142,1.168,143,1.168,144,1.168,145,1.47,146,1.47,147,1.168,148,1.47,149,0.969,150,1.47,151,1.47,152,1.47,153,1.168,154,1.47,155,1.168,156,1.168]],["title/injectables/AppService.html",[35,1.064,157,1.239]],["body/injectables/AppService.html",[3,0.707,4,0.587,5,0.587,7,0.587,8,1.674,9,3.714,11,0.058,14,0.984,16,1.336,17,1.439,28,0.838,30,1.818,31,0.984,35,1.674,38,0.707,39,0.377,44,1.555,46,0.037,47,0.046,48,0.037,157,1.948,158,2.147,159,2.589,160,3.258,161,3.258,162,3.258]],["title/classes/Cat.html",[39,0.301,163,1.239]],["body/classes/Cat.html",[3,0.537,4,0.446,5,0.446,7,0.446,10,1.626,11,0.058,14,1.177,17,1.479,28,0.876,34,1.181,38,0.537,39,0.287,46,0.028,47,0.039,48,0.028,72,1.132,73,1.002,149,2.246,163,2.266,164,1.631,165,1.967,166,2.174,167,1.901,168,2.901,169,2.901,170,1.626,171,3.408,172,2.707,173,2.767,174,2.475,175,3.408,176,3.408,177,2.475,178,2.475,179,3.897,180,2.475,181,3.897,182,2.475]],["title/controllers/CatsController.html",[0,0.915,183,1.449]],["body/controllers/CatsController.html",[0,0.583,2,0.678,3,0.359,4,0.298,5,0.298,7,0.298,8,1.041,10,1.475,11,0.058,13,2.755,14,0.933,16,1.267,18,0.923,19,0.923,28,0.962,29,1.314,31,0.499,32,2.972,33,1.09,34,0.789,38,0.359,39,0.191,40,1.09,41,0.678,42,3.267,43,2.017,44,1.212,46,0.019,47,0.029,48,0.019,71,1.212,72,0.653,73,1.016,74,1.212,102,1.673,122,1.673,163,2.025,170,1.475,173,2.466,183,1.417,184,1.314,185,1.314,186,3.371,187,3.137,188,2.755,189,2.755,190,2.017,191,1.654,192,2.203,193,1.654,194,1.654,195,2.539,196,1.654,197,2.539,198,1.654,199,1.654,200,1.654,201,2.539,202,2.539,203,3.468,204,1.654,205,2.285,206,1.314,207,1.654,208,1.654,209,2.539,210,1.654,211,2.456,212,1.654,213,1.654,214,2.539,215,1.654,216,3.468,217,1.267,218,1.654,219,1.09,220,1.654,221,1.314,222,1.654,223,1.654,224,3.091,225,1.654,226,1.654,227,1.654,228,1.654,229,1.654,230,1.654,231,1.654,232,1.654,233,1.654]],["title/modules/CatsModule.html",[49,1.239,61,1.239]],["body/modules/CatsModule.html",[2,1.568,3,0.638,4,0.531,5,0.531,11,0.057,28,1.093,31,0.889,38,0.638,39,0.341,46,0.033,47,0.043,48,0.033,49,2.028,51,1.404,52,1.404,53,1.939,54,1.939,55,1.404,56,2.802,57,1.939,61,2.282,62,2.521,63,1.939,64,1.939,183,2.372,217,1.961,234,2.338,235,2.338,236,2.943,237,2.943,238,2.943]],["title/injectables/CatsService.html",[157,1.239,217,1.064]],["body/injectables/CatsService.html",[3,0.493,4,0.41,5,0.41,7,0.41,8,1.316,11,0.059,14,1.221,16,1.526,28,0.826,31,0.686,38,0.493,39,0.263,41,1.526,44,1.776,46,0.026,47,0.036,48,0.026,71,1.531,72,0.826,73,0.957,74,1.531,77,1.497,157,1.531,158,1.497,163,2.172,167,1.791,170,1.776,186,3.213,187,3.518,188,2.55,189,3.213,190,2.55,205,2.666,206,2.55,211,1.805,217,1.316,221,1.805,239,1.805,240,2.957,241,3.21,242,2.272,243,2.272,244,2.272,245,1.805,246,1.805,247,2.272,248,2.272,249,2.272,250,2.272,251,2.272,252,2.272,253,2.272]],["title/classes/CreateCatDto.html",[39,0.301,192,1.449]],["body/classes/CreateCatDto.html",[3,0.59,4,0.49,5,0.49,7,0.49,10,1.951,11,0.057,14,1.235,17,1.538,28,0.699,38,0.59,39,0.42,41,2.015,46,0.031,47,0.041,48,0.031,72,1.052,73,1.052,164,1.792,167,2.026,168,2.695,169,2.695,170,1.733,192,2.026,219,2.876,254,2.16,255,4.089,256,2.719,257,4.548,258,2.719,259,2.719,260,2.16]],["title/controllers/HealthController.html",[0,0.915,66,1.449]],["body/controllers/HealthController.html",[0,0.656,2,0.763,3,0.404,4,0.336,5,0.336,7,0.336,8,1.362,10,0.888,11,0.059,14,1.003,16,1.51,17,1.17,18,1.038,19,1.038,21,1.227,24,2.206,25,1.549,26,1.479,27,1.479,28,0.947,30,2.306,31,0.562,33,1.227,34,0.888,38,0.404,39,0.215,44,0.888,46,0.021,47,0.031,48,0.021,66,2.055,68,3.13,69,2.206,71,0.888,72,0.479,73,0.479,74,0.888,75,3.13,76,1.479,77,2.427,85,1.227,87,1.227,147,2.206,149,1.227,153,1.479,155,1.479,156,1.479,185,1.479,205,1.83,240,2.639,261,1.479,262,3.683,263,1.861,264,1.861,265,1.861,266,1.861,267,2.777,268,2.777,269,2.777,270,2.777,271,1.861,272,1.861,273,1.861,274,1.861,275,2.777,276,1.861,277,1.861,278,1.861,279,1.861,280,1.861,281,1.861,282,1.861,283,2.777,284,2.777,285,1.861,286,1.861,287,2.777,288,1.861,289,1.861,290,1.861,291,1.861,292,1.861,293,1.479,294,1.861,295,1.861,296,1.479,297,1.861,298,1.861,299,1.861,300,1.861,301,1.861,302,1.861,303,1.861]],["title/interfaces/ICat.html",[166,1.449,304,1.449]],["body/interfaces/ICat.html",[3,0.678,4,0.563,5,0.563,7,0.563,11,0.056,17,1.712,38,0.678,41,1.793,46,0.035,47,0.045,48,0.035,72,1.184,73,1.125,166,2.218,167,2.218,168,3.034,169,3.034,170,2.087,304,1.743,305,3.124,306,2.482]],["title/coverage.html",[307,2.32]],["body/coverage.html",[0,1.394,1,1.422,5,0.459,6,2.024,11,0.058,35,1.044,39,0.402,46,0.029,47,0.039,48,0.029,55,1.216,65,2.607,66,1.422,73,0.655,100,1.679,117,1.679,139,1.679,157,1.658,159,2.024,163,1.216,165,2.024,166,1.422,183,1.422,184,2.024,192,1.422,217,1.044,219,1.679,239,2.024,254,2.024,261,2.024,293,2.761,304,1.422,306,2.024,307,1.679,308,2.548,309,2.548,310,2.548,311,4.99,312,3.476,313,3.956,314,4.448,315,4.25,316,2.548,317,2.548,318,2.548,319,2.761,320,2.024,321,2.548,322,2.548,323,2.548]],["title/dependencies.html",[52,1.487,324,2.18]],["body/dependencies.html",[11,0.059,31,0.76,34,1.201,39,0.399,46,0.029,47,0.039,48,0.029,52,1.201,85,1.658,87,1.658,89,1.999,92,1.999,93,2.738,94,1.999,95,1.999,260,1.999,325,2.516,326,3.931,327,2.516,328,2.516,329,2.516,330,2.516,331,2.516,332,3.931,333,2.516,334,2.516,335,2.516,336,2.516,337,2.516,338,2.516,339,3.446,340,2.516,341,2.516,342,2.516,343,2.516,344,2.516,345,2.516,346,2.516,347,2.516,348,2.516,349,2.516,350,3.446,351,2.516,352,2.516,353,2.516,354,2.516,355,2.516,356,2.516,357,2.516,358,2.516,359,2.516,360,2.516,361,2.516,362,2.516,363,2.516,364,2.516,365,2.516,366,2.516,367,2.516,368,2.516,369,2.516]],["title/miscellaneous/functions.html",[370,1.216,371,2.476]],["body/miscellaneous/functions.html",[7,0.654,11,0.053,46,0.041,47,0.049,48,0.041,55,2.231,71,1.731,72,0.933,74,1.731,319,2.882,320,3.465,370,2.024,371,2.882,372,4.361,373,3.628,374,2.882]],["title/index.html",[7,0.393,375,2.18,376,2.18]],["body/index.html",[4,0.452,11,0.057,20,1.991,46,0.028,47,0.039,48,0.028,113,1.652,114,2.265,173,1.652,296,3.116,307,1.652,374,1.991,377,2.506,378,2.506,379,3.437,380,2.506,381,2.506,382,2.506,383,2.506,384,2.506,385,2.506,386,2.506,387,2.506,388,2.506,389,4.677,390,2.506,391,2.506,392,4.567,393,2.506,394,2.506,395,3.437,396,2.506,397,2.506,398,2.506,399,3.437,400,2.506,401,2.506,402,2.506,403,3.437,404,3.437,405,2.506,406,2.506,407,2.506,408,2.506,409,2.506,410,1.991,411,2.506,412,2.506,413,2.506,414,2.506,415,2.506,416,2.506,417,2.506,418,2.506,419,2.506,420,2.506,421,2.506,422,2.506,423,2.506,424,2.506,425,2.506,426,2.506,427,2.506,428,2.506]],["title/modules.html",[51,1.68]],["body/modules.html",[11,0.051,46,0.043,47,0.051,48,0.043,50,2.099,51,1.795,61,1.795,410,3.541,429,4.457,430,4.457,431,4.457]],["title/overview.html",[432,2.797]],["body/overview.html",[2,1.261,11,0.054,35,1.78,46,0.035,47,0.045,48,0.035,49,1.468,50,2.7,51,1.468,52,1.468,53,2.028,54,2.028,55,1.468,56,2.028,57,2.028,58,2.444,59,2.444,60,2.444,61,2.258,62,2.595,63,2.028,64,2.028,158,2.028,164,2.028,172,2.444,217,1.78,234,2.444,235,2.444,304,1.717,432,2.444,433,4.342,434,3.077]],["title/miscellaneous/variables.html",[370,1.216,435,2.476]],["body/miscellaneous/variables.html",[7,0.437,11,0.059,25,1.353,46,0.028,47,0.038,48,0.028,65,1.599,72,0.624,73,1.071,99,1.927,100,2.215,101,1.927,102,3.056,103,1.927,104,1.927,105,1.927,106,1.927,107,1.927,108,1.927,109,1.927,110,1.927,111,1.927,112,1.927,113,1.599,114,1.599,115,1.927,116,1.927,117,2.215,118,1.927,119,1.927,120,1.927,121,1.927,122,1.599,123,1.927,124,1.927,125,2.67,126,1.927,127,1.927,128,1.927,129,1.927,130,1.927,131,2.67,132,1.927,133,1.927,134,1.927,135,1.927,136,1.927,137,1.927,138,1.927,139,2.215,140,1.927,141,1.927,142,1.927,143,1.927,144,1.927,245,3.063,246,3.063,370,1.353,435,1.927,436,3.856,437,3.856]]],"invertedIndex":[["",{"_index":11,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Cat.html":{},"controllers/CatsController.html":{},"modules/CatsModule.html":{},"injectables/CatsService.html":{},"classes/CreateCatDto.html":{},"controllers/HealthController.html":{},"interfaces/ICat.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":311,"title":{},"body":{"coverage.html":{}}}],["0.1.13",{"_index":358,"title":{},"body":{"dependencies.html":{}}}],["0.12.2",{"_index":338,"title":{},"body":{"dependencies.html":{}}}],["0.2.29",{"_index":369,"title":{},"body":{"dependencies.html":{}}}],["0.3.1",{"_index":337,"title":{},"body":{"dependencies.html":{}}}],["0.4.1",{"_index":351,"title":{},"body":{"dependencies.html":{}}}],["0.6.1",{"_index":327,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":314,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":312,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":315,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":316,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":172,"title":{},"body":{"classes/Cat.html":{},"overview.html":{}}}],["1.0.0",{"_index":353,"title":{},"body":{"dependencies.html":{}}}],["1.3.0",{"_index":349,"title":{},"body":{"dependencies.html":{}}}],["1/4",{"_index":318,"title":{},"body":{"coverage.html":{}}}],["17.1.1",{"_index":325,"title":{},"body":{"dependencies.html":{}}}],["17.3.0",{"_index":348,"title":{},"body":{"dependencies.html":{}}}],["2",{"_index":433,"title":{},"body":{"overview.html":{}}}],["25",{"_index":317,"title":{},"body":{"coverage.html":{}}}],["3",{"_index":434,"title":{},"body":{"overview.html":{}}}],["3.0.2",{"_index":360,"title":{},"body":{"dependencies.html":{}}}],["4.1.5",{"_index":367,"title":{},"body":{"dependencies.html":{}}}],["4.2.0",{"_index":347,"title":{},"body":{"dependencies.html":{}}}],["4.3.0",{"_index":355,"title":{},"body":{"dependencies.html":{}}}],["4.7.5",{"_index":333,"title":{},"body":{"dependencies.html":{}}}],["5.0.0",{"_index":364,"title":{},"body":{"dependencies.html":{}}}],["5.1.0",{"_index":342,"title":{},"body":{"dependencies.html":{}}}],["5.2.3",{"_index":345,"title":{},"body":{"dependencies.html":{}}}],["6.6.3",{"_index":362,"title":{},"body":{"dependencies.html":{}}}],["7.0.1",{"_index":334,"title":{},"body":{"dependencies.html":{}}}],["7.1.3",{"_index":330,"title":{},"body":{"dependencies.html":{}}}],["7.1.5",{"_index":335,"title":{},"body":{"dependencies.html":{}}}],["7.5.1",{"_index":326,"title":{},"body":{"dependencies.html":{}}}],["8.2.0",{"_index":340,"title":{},"body":{"dependencies.html":{}}}],["abortearly",{"_index":105,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["above",{"_index":289,"title":{},"body":{"controllers/HealthController.html":{}}}],["access",{"_index":83,"title":{},"body":{"modules/AppModule.html":{}}}],["age",{"_index":168,"title":{},"body":{"classes/Cat.html":{},"classes/CreateCatDto.html":{},"interfaces/ICat.html":{}}}],["allowunknown",{"_index":104,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["amazing",{"_index":411,"title":{},"body":{"index.html":{}}}],["apibearerauth",{"_index":215,"title":{},"body":{"controllers/CatsController.html":{}}}],["apioperation",{"_index":216,"title":{},"body":{"controllers/CatsController.html":{}}}],["apiproperty",{"_index":179,"title":{},"body":{"classes/Cat.html":{}}}],["apiproperty({example",{"_index":171,"title":{},"body":{"classes/Cat.html":{}}}],["apiresponse",{"_index":32,"title":{},"body":{"controllers/AppController.html":{},"controllers/CatsController.html":{}}}],["apitags",{"_index":33,"title":{},"body":{"controllers/AppController.html":{},"controllers/CatsController.html":{},"controllers/HealthController.html":{}}}],["apitags(appcontroller.name",{"_index":37,"title":{},"body":{"controllers/AppController.html":{}}}],["apitags(catscontroller.name",{"_index":222,"title":{},"body":{"controllers/CatsController.html":{}}}],["apitags(healthcontroller.name",{"_index":271,"title":{},"body":{"controllers/HealthController.html":{}}}],["app",{"_index":374,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["app.controller",{"_index":98,"title":{},"body":{"modules/AppModule.html":{}}}],["app.service",{"_index":36,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["appcontroller",{"_index":1,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["application",{"_index":280,"title":{},"body":{"controllers/HealthController.html":{}}}],["applications",{"_index":385,"title":{},"body":{"index.html":{}}}],["applicationshutdown",{"_index":155,"title":{},"body":{"modules/AppModule.html":{},"controllers/HealthController.html":{}}}],["appmodule",{"_index":50,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appservice",{"_index":35,"title":{"injectables/AppService.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"coverage.html":{},"overview.html":{}}}],["array",{"_index":201,"title":{},"body":{"controllers/CatsController.html":{}}}],["assignment,@typescript",{"_index":80,"title":{},"body":{"modules/AppModule.html":{}}}],["assignment,no",{"_index":23,"title":{},"body":{"controllers/AppController.html":{}}}],["async",{"_index":187,"title":{},"body":{"controllers/CatsController.html":{},"injectables/CatsService.html":{}}}],["asynchronous",{"_index":295,"title":{},"body":{"controllers/HealthController.html":{}}}],["author",{"_index":421,"title":{},"body":{"index.html":{}}}],["awaits",{"_index":294,"title":{},"body":{"controllers/HealthController.html":{}}}],["backers",{"_index":412,"title":{},"body":{"index.html":{}}}],["before",{"_index":25,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/HealthController.html":{},"miscellaneous/variables.html":{}}}],["beforeapplicationshutdown",{"_index":286,"title":{},"body":{"controllers/HealthController.html":{}}}],["body",{"_index":212,"title":{},"body":{"controllers/CatsController.html":{}}}],["bootstrap",{"_index":55,"title":{},"body":{"modules/AppModule.html":{},"modules/CatsModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["breed",{"_index":169,"title":{},"body":{"classes/Cat.html":{},"classes/CreateCatDto.html":{},"interfaces/ICat.html":{}}}],["browse",{"_index":431,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":429,"title":{},"body":{"modules.html":{}}}],["building",{"_index":380,"title":{},"body":{"index.html":{}}}],["call",{"_index":283,"title":{},"body":{"controllers/HealthController.html":{}}}],["call,@typescript",{"_index":81,"title":{},"body":{"modules/AppModule.html":{}}}],["cat",{"_index":163,"title":{"classes/Cat.html":{}},"body":{"classes/Cat.html":{},"controllers/CatsController.html":{},"injectables/CatsService.html":{},"coverage.html":{}}}],["cat'})@apiresponse({status",{"_index":194,"title":{},"body":{"controllers/CatsController.html":{}}}],["cat.dto",{"_index":220,"title":{},"body":{"controllers/CatsController.html":{}}}],["cat.dto.ts",{"_index":254,"title":{},"body":{"classes/CreateCatDto.html":{},"coverage.html":{}}}],["cat.dto.ts:11",{"_index":258,"title":{},"body":{"classes/CreateCatDto.html":{}}}],["cat.dto.ts:5",{"_index":259,"title":{},"body":{"classes/CreateCatDto.html":{}}}],["cat.dto.ts:8",{"_index":256,"title":{},"body":{"classes/CreateCatDto.html":{}}}],["cats",{"_index":186,"title":{},"body":{"controllers/CatsController.html":{},"injectables/CatsService.html":{}}}],["cats'})@apiresponse({description",{"_index":200,"title":{},"body":{"controllers/CatsController.html":{}}}],["cats.controller",{"_index":237,"title":{},"body":{"modules/CatsModule.html":{}}}],["cats.service",{"_index":238,"title":{},"body":{"modules/CatsModule.html":{}}}],["catscontroller",{"_index":183,"title":{"controllers/CatsController.html":{}},"body":{"controllers/CatsController.html":{},"modules/CatsModule.html":{},"coverage.html":{}}}],["catsmodule",{"_index":61,"title":{"modules/CatsModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CatsModule.html":{},"modules.html":{},"overview.html":{}}}],["catsservice",{"_index":217,"title":{"injectables/CatsService.html":{}},"body":{"controllers/CatsController.html":{},"modules/CatsModule.html":{},"injectables/CatsService.html":{},"coverage.html":{},"overview.html":{}}}],["check",{"_index":262,"title":{},"body":{"controllers/HealthController.html":{}}}],["class",{"_index":39,"title":{"classes/Cat.html":{},"classes/CreateCatDto.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Cat.html":{},"controllers/CatsController.html":{},"modules/CatsModule.html":{},"injectables/CatsService.html":{},"classes/CreateCatDto.html":{},"controllers/HealthController.html":{},"coverage.html":{},"dependencies.html":{}}}],["classes",{"_index":164,"title":{},"body":{"classes/Cat.html":{},"classes/CreateCatDto.html":{},"overview.html":{}}}],["cluster_appmodule",{"_index":58,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":59,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":60,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_catsmodule",{"_index":234,"title":{},"body":{"modules/CatsModule.html":{},"overview.html":{}}}],["cluster_catsmodule_providers",{"_index":235,"title":{},"body":{"modules/CatsModule.html":{},"overview.html":{}}}],["colorize",{"_index":120,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["config",{"_index":275,"title":{},"body":{"controllers/HealthController.html":{}}}],["configmodule",{"_index":84,"title":{},"body":{"modules/AppModule.html":{}}}],["configmodule.forroot(configmoduleoptions",{"_index":145,"title":{},"body":{"modules/AppModule.html":{}}}],["configmoduleoptions",{"_index":100,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["configservice",{"_index":267,"title":{},"body":{"controllers/HealthController.html":{}}}],["console,@typescript",{"_index":79,"title":{},"body":{"modules/AppModule.html":{}}}],["console.log",{"_index":303,"title":{},"body":{"controllers/HealthController.html":{}}}],["console.log(`moduleinit",{"_index":301,"title":{},"body":{"controllers/HealthController.html":{}}}],["const",{"_index":99,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["constructor",{"_index":273,"title":{},"body":{"controllers/HealthController.html":{}}}],["constructor(private",{"_index":40,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/CatsController.html":{}}}],["continue",{"_index":297,"title":{},"body":{"controllers/HealthController.html":{}}}],["controller",{"_index":0,"title":{"controllers/AppController.html":{},"controllers/CatsController.html":{},"controllers/HealthController.html":{}},"body":{"controllers/AppController.html":{},"controllers/CatsController.html":{},"controllers/HealthController.html":{},"coverage.html":{}}}],["controller('cats",{"_index":223,"title":{},"body":{"controllers/CatsController.html":{}}}],["controller('health",{"_index":272,"title":{},"body":{"controllers/HealthController.html":{}}}],["controllers",{"_index":2,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/CatsController.html":{},"modules/CatsModule.html":{},"controllers/HealthController.html":{},"overview.html":{}}}],["coon",{"_index":176,"title":{},"body":{"classes/Cat.html":{}}}],["corresponding",{"_index":290,"title":{},"body":{"controllers/HealthController.html":{}}}],["coverage",{"_index":307,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["create",{"_index":188,"title":{},"body":{"controllers/CatsController.html":{},"injectables/CatsService.html":{}}}],["create(@body",{"_index":228,"title":{},"body":{"controllers/CatsController.html":{}}}],["create(cat",{"_index":241,"title":{},"body":{"injectables/CatsService.html":{}}}],["create(createcatdto",{"_index":191,"title":{},"body":{"controllers/CatsController.html":{}}}],["createcatdto",{"_index":192,"title":{"classes/CreateCatDto.html":{}},"body":{"controllers/CatsController.html":{},"classes/CreateCatDto.html":{},"coverage.html":{}}}],["created",{"_index":195,"title":{},"body":{"controllers/CatsController.html":{}}}],["createswagger",{"_index":320,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["createswagger(app",{"_index":373,"title":{},"body":{"miscellaneous/functions.html":{}}}],["database",{"_index":141,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["database.sqlite",{"_index":142,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["date",{"_index":127,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["declarations",{"_index":54,"title":{},"body":{"modules/AppModule.html":{},"modules/CatsModule.html":{},"overview.html":{}}}],["decorators",{"_index":10,"title":{},"body":{"controllers/AppController.html":{},"classes/Cat.html":{},"controllers/CatsController.html":{},"classes/CreateCatDto.html":{},"controllers/HealthController.html":{}}}],["default",{"_index":245,"title":{},"body":{"injectables/CatsService.html":{},"miscellaneous/variables.html":{}}}],["default('development",{"_index":116,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["define",{"_index":27,"title":{},"body":{"controllers/AppController.html":{},"controllers/HealthController.html":{}}}],["define,@typescript",{"_index":26,"title":{},"body":{"controllers/AppController.html":{},"controllers/HealthController.html":{}}}],["defined",{"_index":14,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Cat.html":{},"controllers/CatsController.html":{},"injectables/CatsService.html":{},"classes/CreateCatDto.html":{},"controllers/HealthController.html":{}}}],["dependencies",{"_index":52,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/CatsModule.html":{},"dependencies.html":{},"overview.html":{}}}],["described",{"_index":288,"title":{},"body":{"controllers/HealthController.html":{}}}],["description",{"_index":173,"title":{},"body":{"classes/Cat.html":{},"controllers/CatsController.html":{},"index.html":{}}}],["development",{"_index":391,"title":{},"body":{"index.html":{}}}],["disable",{"_index":19,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/CatsController.html":{},"controllers/HealthController.html":{}}}],["display",{"_index":123,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["dns",{"_index":274,"title":{},"body":{"controllers/HealthController.html":{}}}],["dnshealthindicator",{"_index":268,"title":{},"body":{"controllers/HealthController.html":{}}}],["docs",{"_index":278,"title":{},"body":{"controllers/HealthController.html":{}}}],["documentation",{"_index":308,"title":{},"body":{"coverage.html":{}}}],["dotenv",{"_index":339,"title":{},"body":{"dependencies.html":{}}}],["e2e",{"_index":400,"title":{},"body":{"index.html":{}}}],["efficient",{"_index":381,"title":{},"body":{"index.html":{}}}],["entities",{"_index":202,"title":{},"body":{"controllers/CatsController.html":{}}}],["entity",{"_index":209,"title":{},"body":{"controllers/CatsController.html":{}}}],["err",{"_index":136,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["error",{"_index":137,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["error('no",{"_index":253,"title":{},"body":{"injectables/CatsService.html":{}}}],["errorlikeobjectkeys",{"_index":135,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["errors",{"_index":138,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["eslint",{"_index":18,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/CatsController.html":{},"controllers/HealthController.html":{}}}],["eslint/no",{"_index":21,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/HealthController.html":{}}}],["example",{"_index":181,"title":{},"body":{"classes/Cat.html":{}}}],["expand",{"_index":341,"title":{},"body":{"dependencies.html":{}}}],["export",{"_index":38,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Cat.html":{},"controllers/CatsController.html":{},"modules/CatsModule.html":{},"injectables/CatsService.html":{},"classes/CreateCatDto.html":{},"controllers/HealthController.html":{},"interfaces/ICat.html":{}}}],["exports",{"_index":57,"title":{},"body":{"modules/AppModule.html":{},"modules/CatsModule.html":{},"overview.html":{}}}],["express",{"_index":332,"title":{},"body":{"dependencies.html":{}}}],["false",{"_index":122,"title":{},"body":{"modules/AppModule.html":{},"controllers/CatsController.html":{},"miscellaneous/variables.html":{}}}],["file",{"_index":5,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Cat.html":{},"controllers/CatsController.html":{},"modules/CatsModule.html":{},"injectables/CatsService.html":{},"classes/CreateCatDto.html":{},"controllers/HealthController.html":{},"interfaces/ICat.html":{},"coverage.html":{}}}],["findall",{"_index":189,"title":{},"body":{"controllers/CatsController.html":{},"injectables/CatsService.html":{}}}],["findone",{"_index":190,"title":{},"body":{"controllers/CatsController.html":{},"injectables/CatsService.html":{}}}],["findone(@param('id",{"_index":232,"title":{},"body":{"controllers/CatsController.html":{}}}],["findone(id",{"_index":206,"title":{},"body":{"controllers/CatsController.html":{},"injectables/CatsService.html":{}}}],["first",{"_index":291,"title":{},"body":{"controllers/HealthController.html":{}}}],["forbidden",{"_index":197,"title":{},"body":{"controllers/CatsController.html":{}}}],["framework",{"_index":379,"title":{},"body":{"index.html":{}}}],["function",{"_index":293,"title":{},"body":{"controllers/HealthController.html":{},"coverage.html":{}}}],["functions",{"_index":371,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["get(':id",{"_index":231,"title":{},"body":{"controllers/CatsController.html":{}}}],["get(':id')@apioperation({summary",{"_index":207,"title":{},"body":{"controllers/CatsController.html":{}}}],["get()@apioperation({summary",{"_index":199,"title":{},"body":{"controllers/CatsController.html":{}}}],["get()@apiresponse({status",{"_index":12,"title":{},"body":{"controllers/AppController.html":{}}}],["get()@healthcheck",{"_index":263,"title":{},"body":{"controllers/HealthController.html":{}}}],["gethello",{"_index":9,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["getting",{"_index":375,"title":{"index.html":{}},"body":{}}],["grow",{"_index":407,"title":{},"body":{"index.html":{}}}],["hapi/joi",{"_index":95,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["health",{"_index":147,"title":{},"body":{"modules/AppModule.html":{},"controllers/HealthController.html":{}}}],["health/health.controller",{"_index":97,"title":{},"body":{"modules/AppModule.html":{}}}],["healthcheck",{"_index":269,"title":{},"body":{"controllers/HealthController.html":{}}}],["healthcheckservice",{"_index":270,"title":{},"body":{"controllers/HealthController.html":{}}}],["healthcontroller",{"_index":66,"title":{"controllers/HealthController.html":{}},"body":{"modules/AppModule.html":{},"controllers/HealthController.html":{},"coverage.html":{}}}],["hello",{"_index":161,"title":{},"body":{"injectables/AppService.html":{}}}],["helmet",{"_index":346,"title":{},"body":{"dependencies.html":{}}}],["here",{"_index":418,"title":{},"body":{"index.html":{}}}],["https://docs.nestjs.com",{"_index":279,"title":{},"body":{"controllers/HealthController.html":{}}}],["https://nestjs.com",{"_index":425,"title":{},"body":{"index.html":{}}}],["httpstatus",{"_index":29,"title":{},"body":{"controllers/AppController.html":{},"controllers/CatsController.html":{}}}],["httpstatus.created",{"_index":225,"title":{},"body":{"controllers/CatsController.html":{}}}],["httpstatus.forbidden",{"_index":227,"title":{},"body":{"controllers/CatsController.html":{}}}],["httpstatus.ok",{"_index":43,"title":{},"body":{"controllers/AppController.html":{},"controllers/CatsController.html":{}}}],["icat",{"_index":166,"title":{"interfaces/ICat.html":{}},"body":{"classes/Cat.html":{},"interfaces/ICat.html":{},"coverage.html":{}}}],["id",{"_index":211,"title":{},"body":{"controllers/CatsController.html":{},"injectables/CatsService.html":{}}}],["id'})@apiresponse({description",{"_index":208,"title":{},"body":{"controllers/CatsController.html":{}}}],["identifier",{"_index":309,"title":{},"body":{"coverage.html":{}}}],["ignore",{"_index":133,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["implements",{"_index":149,"title":{},"body":{"modules/AppModule.html":{},"classes/Cat.html":{},"controllers/HealthController.html":{}}}],["import",{"_index":28,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Cat.html":{},"controllers/CatsController.html":{},"modules/CatsModule.html":{},"injectables/CatsService.html":{},"classes/CreateCatDto.html":{},"controllers/HealthController.html":{}}}],["imports",{"_index":67,"title":{},"body":{"modules/AppModule.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/Cat.html":{},"controllers/CatsController.html":{},"injectables/CatsService.html":{},"classes/CreateCatDto.html":{},"controllers/HealthController.html":{},"interfaces/ICat.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Cat.html":{},"controllers/CatsController.html":{},"modules/CatsModule.html":{},"injectables/CatsService.html":{},"classes/CreateCatDto.html":{},"controllers/HealthController.html":{},"interfaces/ICat.html":{}}}],["initialized",{"_index":153,"title":{},"body":{"modules/AppModule.html":{},"controllers/HealthController.html":{}}}],["injectable",{"_index":157,"title":{"injectables/AppService.html":{},"injectables/CatsService.html":{}},"body":{"injectables/AppService.html":{},"injectables/CatsService.html":{},"coverage.html":{}}}],["injectables",{"_index":158,"title":{},"body":{"injectables/AppService.html":{},"injectables/CatsService.html":{},"overview.html":{}}}],["installation",{"_index":388,"title":{},"body":{"index.html":{}}}],["installrunning",{"_index":390,"title":{},"body":{"index.html":{}}}],["interface",{"_index":304,"title":{"interfaces/ICat.html":{}},"body":{"interfaces/ICat.html":{},"coverage.html":{},"overview.html":{}}}],["interfaces",{"_index":305,"title":{},"body":{"interfaces/ICat.html":{}}}],["isarray",{"_index":203,"title":{},"body":{"controllers/CatsController.html":{}}}],["isglobal",{"_index":101,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["isint",{"_index":255,"title":{},"body":{"classes/CreateCatDto.html":{}}}],["isstring",{"_index":257,"title":{},"body":{"classes/CreateCatDto.html":{}}}],["joi",{"_index":94,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["joi.number().default(3000",{"_index":109,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["joi.object",{"_index":107,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["joi.string",{"_index":111,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["join",{"_index":414,"title":{},"body":{"index.html":{}}}],["kamil",{"_index":422,"title":{},"body":{"index.html":{}}}],["kitty",{"_index":182,"title":{},"body":{"classes/Cat.html":{}}}],["legend",{"_index":53,"title":{},"body":{"modules/AppModule.html":{},"modules/CatsModule.html":{},"overview.html":{}}}],["level",{"_index":125,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["levelfirst",{"_index":121,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["license",{"_index":428,"title":{},"body":{"index.html":{}}}],["licensed",{"_index":404,"title":{},"body":{"index.html":{}}}],["limit",{"_index":344,"title":{},"body":{"dependencies.html":{}}}],["local",{"_index":352,"title":{},"body":{"dependencies.html":{}}}],["log",{"_index":124,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["logged",{"_index":126,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["logger",{"_index":150,"title":{},"body":{"modules/AppModule.html":{}}}],["logger.setcontext(appmodule.name",{"_index":151,"title":{},"body":{"modules/AppModule.html":{}}}],["loggermodule",{"_index":91,"title":{},"body":{"modules/AppModule.html":{}}}],["loggermodule.forroot(loggermoduleoptions",{"_index":146,"title":{},"body":{"modules/AppModule.html":{}}}],["loggermoduleoptions",{"_index":117,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["logging",{"_index":144,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["maine",{"_index":175,"title":{},"body":{"classes/Cat.html":{}}}],["matching",{"_index":47,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Cat.html":{},"controllers/CatsController.html":{},"modules/CatsModule.html":{},"injectables/CatsService.html":{},"classes/CreateCatDto.html":{},"controllers/HealthController.html":{},"interfaces/ICat.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["member",{"_index":82,"title":{},"body":{"modules/AppModule.html":{}}}],["messageformat",{"_index":130,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["metadata",{"_index":357,"title":{},"body":{"dependencies.html":{}}}],["methods",{"_index":8,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/CatsController.html":{},"injectables/CatsService.html":{},"controllers/HealthController.html":{}}}],["miscellaneous",{"_index":370,"title":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":403,"title":{},"body":{"index.html":{}}}],["mode",{"_index":395,"title":{},"body":{"index.html":{}}}],["module",{"_index":49,"title":{"modules/AppModule.html":{},"modules/CatsModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CatsModule.html":{},"overview.html":{}}}],["modules",{"_index":51,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/CatsModule.html":{},"modules.html":{},"overview.html":{}}}],["more",{"_index":417,"title":{},"body":{"index.html":{}}}],["msg",{"_index":131,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["myśliwiec",{"_index":423,"title":{},"body":{"index.html":{}}}],["name",{"_index":72,"title":{},"body":{"modules/AppModule.html":{},"classes/Cat.html":{},"controllers/CatsController.html":{},"injectables/CatsService.html":{},"classes/CreateCatDto.html":{},"controllers/HealthController.html":{},"interfaces/ICat.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["nest",{"_index":296,"title":{},"body":{"controllers/HealthController.html":{},"index.html":{}}}],["nestframework",{"_index":427,"title":{},"body":{"index.html":{}}}],["nestjs",{"_index":92,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["nestjs/common",{"_index":31,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/CatsController.html":{},"modules/CatsModule.html":{},"injectables/CatsService.html":{},"controllers/HealthController.html":{},"dependencies.html":{}}}],["nestjs/config",{"_index":85,"title":{},"body":{"modules/AppModule.html":{},"controllers/HealthController.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":328,"title":{},"body":{"dependencies.html":{}}}],["nestjs/passport",{"_index":329,"title":{},"body":{"dependencies.html":{}}}],["nestjs/platform",{"_index":331,"title":{},"body":{"dependencies.html":{}}}],["nestjs/swagger",{"_index":34,"title":{},"body":{"controllers/AppController.html":{},"classes/Cat.html":{},"controllers/CatsController.html":{},"controllers/HealthController.html":{},"dependencies.html":{}}}],["nestjs/terminus",{"_index":87,"title":{},"body":{"modules/AppModule.html":{},"controllers/HealthController.html":{},"dependencies.html":{}}}],["nestjs/typeorm",{"_index":89,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["new",{"_index":321,"title":{},"body":{"coverage.html":{}}}],["node.js",{"_index":378,"title":{},"body":{"index.html":{}}}],["node_env",{"_index":110,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["npm",{"_index":389,"title":{},"body":{"index.html":{}}}],["number",{"_index":170,"title":{},"body":{"classes/Cat.html":{},"controllers/CatsController.html":{},"injectables/CatsService.html":{},"classes/CreateCatDto.html":{},"interfaces/ICat.html":{}}}],["object",{"_index":437,"title":{},"body":{"miscellaneous/variables.html":{}}}],["onapplicationshutdown",{"_index":68,"title":{},"body":{"modules/AppModule.html":{},"controllers/HealthController.html":{}}}],["onapplicationshutdown(signal",{"_index":69,"title":{},"body":{"modules/AppModule.html":{},"controllers/HealthController.html":{}}}],["onmoduledestroy",{"_index":285,"title":{},"body":{"controllers/HealthController.html":{}}}],["onmoduleinit",{"_index":30,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/HealthController.html":{}}}],["open",{"_index":405,"title":{},"body":{"index.html":{}}}],["optional",{"_index":74,"title":{},"body":{"modules/AppModule.html":{},"controllers/CatsController.html":{},"injectables/CatsService.html":{},"controllers/HealthController.html":{},"miscellaneous/functions.html":{}}}],["out",{"_index":64,"title":{},"body":{"modules/AppModule.html":{},"modules/CatsModule.html":{},"overview.html":{}}}],["overview",{"_index":432,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":324,"title":{"dependencies.html":{}},"body":{}}],["param",{"_index":213,"title":{},"body":{"controllers/CatsController.html":{}}}],["parameter",{"_index":292,"title":{},"body":{"controllers/HealthController.html":{}}}],["parameters",{"_index":71,"title":{},"body":{"modules/AppModule.html":{},"controllers/CatsController.html":{},"injectables/CatsService.html":{},"controllers/HealthController.html":{},"miscellaneous/functions.html":{}}}],["passport",{"_index":350,"title":{},"body":{"dependencies.html":{}}}],["pid",{"_index":132,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["pid,hostname",{"_index":134,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["pino",{"_index":93,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["pinohttp",{"_index":118,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["pinologger",{"_index":90,"title":{},"body":{"modules/AppModule.html":{}}}],["please",{"_index":415,"title":{},"body":{"index.html":{}}}],["port",{"_index":108,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["post",{"_index":214,"title":{},"body":{"controllers/CatsController.html":{}}}],["post()@apioperation({summary",{"_index":193,"title":{},"body":{"controllers/CatsController.html":{}}}],["prefix",{"_index":185,"title":{},"body":{"controllers/CatsController.html":{},"controllers/HealthController.html":{}}}],["pretty",{"_index":354,"title":{},"body":{"dependencies.html":{}}}],["prettyprint",{"_index":119,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["private",{"_index":240,"title":{},"body":{"injectables/CatsService.html":{},"controllers/HealthController.html":{}}}],["production",{"_index":113,"title":{},"body":{"modules/AppModule.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["progressive",{"_index":377,"title":{},"body":{"index.html":{}}}],["project",{"_index":406,"title":{},"body":{"index.html":{}}}],["promise",{"_index":205,"title":{},"body":{"controllers/CatsController.html":{},"injectables/CatsService.html":{},"controllers/HealthController.html":{}}}],["promise.reject(new",{"_index":252,"title":{},"body":{"injectables/CatsService.html":{}}}],["properties",{"_index":167,"title":{},"body":{"classes/Cat.html":{},"injectables/CatsService.html":{},"classes/CreateCatDto.html":{},"interfaces/ICat.html":{}}}],["providers",{"_index":56,"title":{},"body":{"modules/AppModule.html":{},"modules/CatsModule.html":{},"overview.html":{}}}],["provision",{"_index":115,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["rate",{"_index":343,"title":{},"body":{"dependencies.html":{}}}],["read",{"_index":416,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":41,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/CatsController.html":{},"injectables/CatsService.html":{},"classes/CreateCatDto.html":{},"interfaces/ICat.html":{}}}],["receives",{"_index":281,"title":{},"body":{"controllers/HealthController.html":{}}}],["reflect",{"_index":356,"title":{},"body":{"dependencies.html":{}}}],["registered",{"_index":284,"title":{},"body":{"controllers/HealthController.html":{}}}],["rejected",{"_index":300,"title":{},"body":{"controllers/HealthController.html":{}}}],["repository",{"_index":387,"title":{},"body":{"index.html":{}}}],["reset",{"_index":63,"title":{},"body":{"modules/AppModule.html":{},"modules/CatsModule.html":{},"overview.html":{}}}],["resolved",{"_index":299,"title":{},"body":{"controllers/HealthController.html":{}}}],["result",{"_index":46,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Cat.html":{},"controllers/CatsController.html":{},"modules/CatsModule.html":{},"injectables/CatsService.html":{},"classes/CreateCatDto.html":{},"controllers/HealthController.html":{},"interfaces/ICat.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["results",{"_index":48,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Cat.html":{},"controllers/CatsController.html":{},"modules/CatsModule.html":{},"injectables/CatsService.html":{},"classes/CreateCatDto.html":{},"controllers/HealthController.html":{},"interfaces/ICat.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":44,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/CatsController.html":{},"injectables/CatsService.html":{},"controllers/HealthController.html":{}}}],["returns",{"_index":16,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/CatsController.html":{},"injectables/CatsService.html":{},"controllers/HealthController.html":{}}}],["rimraf",{"_index":359,"title":{},"body":{"dependencies.html":{}}}],["run",{"_index":392,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":361,"title":{},"body":{"dependencies.html":{}}}],["scalable",{"_index":382,"title":{},"body":{"index.html":{}}}],["sequence",{"_index":287,"title":{},"body":{"controllers/HealthController.html":{}}}],["server",{"_index":383,"title":{},"body":{"index.html":{}}}],["shutdown",{"_index":156,"title":{},"body":{"modules/AppModule.html":{},"controllers/HealthController.html":{}}}],["side",{"_index":384,"title":{},"body":{"index.html":{}}}],["signal",{"_index":75,"title":{},"body":{"modules/AppModule.html":{},"controllers/HealthController.html":{}}}],["source",{"_index":4,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Cat.html":{},"controllers/CatsController.html":{},"modules/CatsModule.html":{},"injectables/CatsService.html":{},"classes/CreateCatDto.html":{},"controllers/HealthController.html":{},"interfaces/ICat.html":{},"index.html":{}}}],["sponsors",{"_index":409,"title":{},"body":{"index.html":{}}}],["sqlite",{"_index":140,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["sqlite3",{"_index":363,"title":{},"body":{"dependencies.html":{}}}],["src/.../app.module.ts",{"_index":436,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../main.ts",{"_index":372,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/app/app.controller.ts",{"_index":6,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app/app.controller.ts:14",{"_index":15,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app/app.module.ts",{"_index":65,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/app.module.ts:66",{"_index":78,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/app.module.ts:70",{"_index":70,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/app.service.ts",{"_index":159,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["src/app/app.service.ts:5",{"_index":160,"title":{},"body":{"injectables/AppService.html":{}}}],["src/cats/cats.controller.ts",{"_index":184,"title":{},"body":{"controllers/CatsController.html":{},"coverage.html":{}}}],["src/cats/cats.controller.ts:24",{"_index":198,"title":{},"body":{"controllers/CatsController.html":{}}}],["src/cats/cats.controller.ts:36",{"_index":204,"title":{},"body":{"controllers/CatsController.html":{}}}],["src/cats/cats.controller.ts:48",{"_index":210,"title":{},"body":{"controllers/CatsController.html":{}}}],["src/cats/cats.module",{"_index":96,"title":{},"body":{"modules/AppModule.html":{}}}],["src/cats/cats.module.ts",{"_index":236,"title":{},"body":{"modules/CatsModule.html":{}}}],["src/cats/cats.service",{"_index":218,"title":{},"body":{"controllers/CatsController.html":{}}}],["src/cats/cats.service.ts",{"_index":239,"title":{},"body":{"injectables/CatsService.html":{},"coverage.html":{}}}],["src/cats/cats.service.ts:13",{"_index":243,"title":{},"body":{"injectables/CatsService.html":{}}}],["src/cats/cats.service.ts:17",{"_index":244,"title":{},"body":{"injectables/CatsService.html":{}}}],["src/cats/cats.service.ts:7",{"_index":247,"title":{},"body":{"injectables/CatsService.html":{}}}],["src/cats/cats.service.ts:9",{"_index":242,"title":{},"body":{"injectables/CatsService.html":{}}}],["src/cats/dto/create",{"_index":219,"title":{},"body":{"controllers/CatsController.html":{},"classes/CreateCatDto.html":{},"coverage.html":{}}}],["src/cats/entities/cat.entity",{"_index":221,"title":{},"body":{"controllers/CatsController.html":{},"injectables/CatsService.html":{}}}],["src/cats/entities/cat.entity.ts",{"_index":165,"title":{},"body":{"classes/Cat.html":{},"coverage.html":{}}}],["src/cats/entities/cat.entity.ts:10",{"_index":178,"title":{},"body":{"classes/Cat.html":{}}}],["src/cats/entities/cat.entity.ts:13",{"_index":174,"title":{},"body":{"classes/Cat.html":{}}}],["src/cats/entities/cat.entity.ts:19",{"_index":177,"title":{},"body":{"classes/Cat.html":{}}}],["src/cats/interfaces/cat.interface",{"_index":180,"title":{},"body":{"classes/Cat.html":{}}}],["src/cats/interfaces/cat.interface.ts",{"_index":306,"title":{},"body":{"interfaces/ICat.html":{},"coverage.html":{}}}],["src/health/health.controller.ts",{"_index":261,"title":{},"body":{"controllers/HealthController.html":{},"coverage.html":{}}}],["src/health/health.controller.ts:18",{"_index":264,"title":{},"body":{"controllers/HealthController.html":{}}}],["src/health/health.controller.ts:32",{"_index":266,"title":{},"body":{"controllers/HealthController.html":{}}}],["src/health/health.controller.ts:38",{"_index":265,"title":{},"body":{"controllers/HealthController.html":{}}}],["src/main.ts",{"_index":319,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["start",{"_index":393,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":396,"title":{},"body":{"index.html":{}}}],["start:prodtest",{"_index":397,"title":{},"body":{"index.html":{}}}],["started",{"_index":376,"title":{"index.html":{}},"body":{}}],["starter",{"_index":386,"title":{},"body":{"index.html":{}}}],["statements",{"_index":310,"title":{},"body":{"coverage.html":{}}}],["status",{"_index":42,"title":{},"body":{"controllers/AppController.html":{},"controllers/CatsController.html":{}}}],["stay",{"_index":419,"title":{},"body":{"index.html":{}}}],["string",{"_index":17,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Cat.html":{},"classes/CreateCatDto.html":{},"controllers/HealthController.html":{},"interfaces/ICat.html":{}}}],["successfully",{"_index":226,"title":{},"body":{"controllers/CatsController.html":{}}}],["successfully'})@apiresponse({description",{"_index":196,"title":{},"body":{"controllers/CatsController.html":{}}}],["summary",{"_index":224,"title":{},"body":{"controllers/CatsController.html":{}}}],["support",{"_index":410,"title":{},"body":{"index.html":{},"modules.html":{}}}],["svg",{"_index":430,"title":{},"body":{"modules.html":{}}}],["swagger",{"_index":365,"title":{},"body":{"dependencies.html":{}}}],["synchronize",{"_index":143,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["table",{"_index":323,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":322,"title":{},"body":{"coverage.html":{}}}],["termination",{"_index":282,"title":{},"body":{"controllers/HealthController.html":{}}}],["terminusmodule",{"_index":86,"title":{},"body":{"modules/AppModule.html":{}}}],["test",{"_index":114,"title":{},"body":{"modules/AppModule.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["test:covsupport",{"_index":402,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":401,"title":{},"body":{"index.html":{}}}],["tests",{"_index":399,"title":{},"body":{"index.html":{}}}],["thanks",{"_index":408,"title":{},"body":{"index.html":{}}}],["this.appservice.gethello",{"_index":45,"title":{},"body":{"controllers/AppController.html":{}}}],["this.cats",{"_index":249,"title":{},"body":{"injectables/CatsService.html":{}}}],["this.cats.push(cat",{"_index":248,"title":{},"body":{"injectables/CatsService.html":{}}}],["this.cats[id",{"_index":251,"title":{},"body":{"injectables/CatsService.html":{}}}],["this.catsservice.create(createcatdto",{"_index":229,"title":{},"body":{"controllers/CatsController.html":{}}}],["this.catsservice.findall",{"_index":230,"title":{},"body":{"controllers/CatsController.html":{}}}],["this.catsservice.findone(id",{"_index":233,"title":{},"body":{"controllers/CatsController.html":{}}}],["this.config.get('node_env",{"_index":302,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.dns.pingcheck('nestjs",{"_index":277,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.health.check",{"_index":276,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.logger.fatal",{"_index":154,"title":{},"body":{"modules/AppModule.html":{}}}],["this.logger.info(`moduleinit",{"_index":152,"title":{},"body":{"modules/AppModule.html":{}}}],["this?.cats[id",{"_index":250,"title":{},"body":{"injectables/CatsService.html":{}}}],["time",{"_index":128,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["touch",{"_index":420,"title":{},"body":{"index.html":{}}}],["transformer",{"_index":336,"title":{},"body":{"dependencies.html":{}}}],["translatetime",{"_index":129,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["true",{"_index":102,"title":{},"body":{"modules/AppModule.html":{},"controllers/CatsController.html":{},"miscellaneous/variables.html":{}}}],["twitter",{"_index":426,"title":{},"body":{"index.html":{}}}],["type",{"_index":73,"title":{},"body":{"modules/AppModule.html":{},"classes/Cat.html":{},"controllers/CatsController.html":{},"injectables/CatsService.html":{},"classes/CreateCatDto.html":{},"controllers/HealthController.html":{},"interfaces/ICat.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["typeorm",{"_index":368,"title":{},"body":{"dependencies.html":{}}}],["typeormmodule",{"_index":88,"title":{},"body":{"modules/AppModule.html":{}}}],["typeormmodule.forroot(typeormmoduleoptions",{"_index":148,"title":{},"body":{"modules/AppModule.html":{}}}],["typeormmoduleoptions",{"_index":139,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["typescript",{"_index":20,"title":{},"body":{"controllers/AppController.html":{},"index.html":{}}}],["ui",{"_index":366,"title":{},"body":{"dependencies.html":{}}}],["undefined",{"_index":13,"title":{},"body":{"controllers/AppController.html":{},"controllers/CatsController.html":{}}}],["unit",{"_index":398,"title":{},"body":{"index.html":{}}}],["unsafe",{"_index":22,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["until",{"_index":298,"title":{},"body":{"controllers/HealthController.html":{}}}],["use",{"_index":24,"title":{},"body":{"controllers/AppController.html":{},"controllers/HealthController.html":{}}}],["valid('development",{"_index":112,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["validationoptions",{"_index":103,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["validationschema",{"_index":106,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["validator",{"_index":260,"title":{},"body":{"classes/CreateCatDto.html":{},"dependencies.html":{}}}],["value",{"_index":246,"title":{},"body":{"injectables/CatsService.html":{},"miscellaneous/variables.html":{}}}],["variable",{"_index":313,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":435,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["void",{"_index":77,"title":{},"body":{"modules/AppModule.html":{},"injectables/CatsService.html":{},"controllers/HealthController.html":{}}}],["watch",{"_index":394,"title":{},"body":{"index.html":{}}}],["website",{"_index":424,"title":{},"body":{"index.html":{}}}],["world",{"_index":162,"title":{},"body":{"injectables/AppService.html":{}}}],["yes",{"_index":76,"title":{},"body":{"modules/AppModule.html":{},"controllers/HealthController.html":{}}}],["you'd",{"_index":413,"title":{},"body":{"index.html":{}}}],["zoom",{"_index":62,"title":{},"body":{"modules/AppModule.html":{},"modules/CatsModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/app.controller.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getHello\n                        \n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@ApiResponse({status: undefined})\n                \n            \n\n            \n                \n                    Defined in src/app/app.controller.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        /* eslint-disable @typescript-eslint/no-unsafe-assignment,no-use-before-define,@typescript-eslint/no-use-before-define */\nimport { Controller, Get, HttpStatus, OnModuleInit } from '@nestjs/common'\nimport { ApiResponse, ApiTags } from '@nestjs/swagger'\n\nimport { AppService } from './app.service'\n\n@ApiTags(AppController.name)\n@Controller()\nexport class AppController {\n    constructor(private readonly appService: AppService) {}\n\n    @Get()\n    @ApiResponse({ status: HttpStatus.OK })\n    getHello(): string {\n        return this.appService.getHello()\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\n\nCatsModule\n\nCatsModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nCatsModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                        \n                            HealthController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            CatsModule\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onApplicationShutdown\n                        \n                        \n                    \n                \n            \n            \n                \nonApplicationShutdown(signal?: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.module.ts:70\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    signal\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onModuleInit\n                        \n                        \n                    \n                \n            \n            \n                \nonModuleInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.module.ts:66\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        /* eslint-disable no-console,@typescript-eslint/no-unsafe-assignment,@typescript-eslint/no-unsafe-call,@typescript-eslint/no-unsafe-member-access */\nimport { Module, OnModuleInit, OnApplicationShutdown } from '@nestjs/common'\nimport { ConfigModule } from '@nestjs/config'\nimport { TerminusModule } from '@nestjs/terminus'\nimport { TypeOrmModule } from '@nestjs/typeorm'\n\nimport { PinoLogger, LoggerModule } from 'nestjs-pino'\n\nimport * as Joi from '@hapi/joi'\nimport { CatsModule } from 'src/cats/cats.module'\n\nimport { HealthController } from '../health/health.controller'\nimport { AppController } from './app.controller'\nimport { AppService } from './app.service'\n\nconst ConfigModuleOptions = {\n    isGlobal: true,\n    validationOptions: {\n        allowUnknown: true,\n        abortEarly: true,\n    },\n    validationSchema: Joi.object({\n        PORT: Joi.number().default(3000),\n        NODE_ENV: Joi.string()\n            .valid('development', 'production', 'test', 'provision')\n            .default('development'),\n    }),\n}\n\nconst LoggerModuleOptions = {\n    pinoHttp: {\n        prettyPrint: {\n            colorize: true,\n            levelFirst: false, // Display the log level name before the logged date and time\n            translateTime: true,\n            messageFormat: '{msg}', // 'pid', 'msg', 'level'\n            ignore: 'pid,hostname',\n            errorLikeObjectKeys: ['err', 'error', 'errors'],\n        },\n    },\n}\n\nconst TypeOrmModuleOptions = {\n    type: 'sqlite' as const,\n    database: 'database.sqlite',\n    synchronize: true,\n    logging: true,\n}\n\n@Module({\n    imports: [\n        ConfigModule.forRoot(ConfigModuleOptions),\n        LoggerModule.forRoot(LoggerModuleOptions),\n        TerminusModule, // Health module\n        TypeOrmModule.forRoot(TypeOrmModuleOptions),\n        CatsModule,\n    ],\n    controllers: [AppController, HealthController],\n    providers: [AppService],\n})\nexport class AppModule implements OnModuleInit, OnApplicationShutdown {\n    constructor(private readonly logger: PinoLogger) {\n        logger.setContext(AppModule.name)\n    }\n\n    onModuleInit(): void {\n        this.logger.info(`ModuleInit - AppModule has been initialized.`)\n    }\n\n    onApplicationShutdown(signal?: string): void {\n        this.logger.fatal(\n            `ApplicationShutdown - AppModule has been shutdown with ${signal} signal`,\n        )\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/app.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getHello\n                        \n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.service.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, OnModuleInit } from '@nestjs/common'\n\n@Injectable()\nexport class AppService {\n    getHello(): string {\n        return 'Hello World!'\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Cat.html":{"url":"classes/Cat.html","title":"class - Cat","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Cat\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/cats/entities/cat.entity.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            ICat\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                age\n                            \n                            \n                                breed\n                            \n                            \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            age\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({example: 1, description: 'The age of the Cat'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/cats/entities/cat.entity.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            breed\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({example: 'Maine Coon', description: 'The breed of the Cat'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/cats/entities/cat.entity.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/cats/entities/cat.entity.ts:10\n                            \n                        \n\n                \n                    \n                        The name of the Cat\n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger'\n\nimport { ICat } from 'src/cats/interfaces/cat.interface'\n\nexport class Cat implements ICat {\n    /**\n     * The name of the Cat\n     * @example Kitty\n     */\n    name: string\n\n    @ApiProperty({ example: 1, description: 'The age of the Cat' })\n    age: number\n\n    @ApiProperty({\n        example: 'Maine Coon',\n        description: 'The breed of the Cat',\n    })\n    breed: string\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/CatsController.html":{"url":"controllers/CatsController.html","title":"controller - CatsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  CatsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/cats/cats.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                cats\n            \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                findOne\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            create\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    create(createCatDto: CreateCatDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@ApiOperation({summary: 'Create cat'})@ApiResponse({status: undefined, description: 'Created Cat Successfully'})@ApiResponse({description: 'Forbidden', status: undefined})\n                \n            \n\n            \n                \n                    Defined in src/cats/cats.controller.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createCatDto\n                                    \n                                                CreateCatDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findAll\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@ApiOperation({summary: 'Get all Cats'})@ApiResponse({description: 'Array of all Cats Entities', isArray: true, status: undefined, type: Cat})\n                \n            \n\n            \n                \n                    Defined in src/cats/cats.controller.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            findOne\n                        \n                        \n                    \n                \n            \n            \n                \nfindOne(id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')@ApiOperation({summary: 'Get a Cats by id'})@ApiResponse({description: 'Entity of a Cats', isArray: false, status: undefined, type: Cat})\n                \n            \n\n            \n                \n                    Defined in src/cats/cats.controller.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        /* eslint-disable */\nimport { Body, Controller, Get, Param, Post, HttpStatus } from '@nestjs/common'\nimport { ApiBearerAuth, ApiOperation, ApiResponse, ApiTags } from '@nestjs/swagger'\n\nimport { CatsService } from 'src/cats/cats.service'\nimport { CreateCatDto } from 'src/cats/dto/create-cat.dto'\nimport { Cat } from 'src/cats/entities/cat.entity'\n\n@ApiTags(CatsController.name)\n@Controller('cats')\nexport class CatsController {\n    constructor(private readonly catsService: CatsService) {}\n\n    @Post()\n    @ApiOperation({ summary: 'Create cat' })\n    @ApiResponse({\n        status: HttpStatus.CREATED,\n        description: 'Created Cat Successfully',\n    })\n    @ApiResponse({\n        description: 'Forbidden',\n        status: HttpStatus.FORBIDDEN,\n    })\n    async create(@Body() createCatDto: CreateCatDto) {\n        this.catsService.create(createCatDto)\n    }\n\n    @Get()\n    @ApiOperation({ summary: 'Get all Cats' })\n    @ApiResponse({\n        description: 'Array of all Cats Entities',\n        isArray: true,\n        status: HttpStatus.OK,\n        type: Cat,\n    })\n    async findAll(): Promise {\n        return this.catsService.findAll()\n    }\n\n    @Get(':id')\n    @ApiOperation({ summary: 'Get a Cats by id' })\n    @ApiResponse({\n        description: 'Entity of a Cats',\n        isArray: false,\n        status: HttpStatus.OK,\n        type: Cat,\n    })\n    findOne(@Param('id') id: number): Promise {\n        return this.catsService.findOne(id)\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CatsModule.html":{"url":"modules/CatsModule.html","title":"module - CatsModule","body":"\n                   \n\n\n\n\n    Modules\n    CatsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_CatsModule\n\n\n\ncluster_CatsModule_providers\n\n\n\n\nCatsService\n\nCatsService\n\n\n\nCatsModule\n\nCatsModule\n\nCatsModule -->\n\nCatsService->CatsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/cats/cats.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            CatsService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            CatsController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common'\n\nimport { CatsController } from './cats.controller'\nimport { CatsService } from './cats.service'\n\n@Module({\n    controllers: [CatsController],\n    providers: [CatsService],\n})\nexport class CatsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CatsService.html":{"url":"injectables/CatsService.html","title":"injectable - CatsService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  CatsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/cats/cats.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                cats\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findOne\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            create\n                        \n                        \n                    \n                \n            \n            \n                \ncreate(cat: Cat)\n                \n            \n\n\n            \n                \n                    Defined in src/cats/cats.service.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    cat\n                                    \n                                                Cat\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findAll\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll()\n                \n            \n\n\n            \n                \n                    Defined in src/cats/cats.service.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findOne\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/cats/cats.service.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            cats\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Cat[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/cats/cats.service.ts:7\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common'\n\nimport { Cat } from 'src/cats/entities/cat.entity'\n\n@Injectable()\nexport class CatsService {\n    private readonly cats: Cat[] = []\n\n    create(cat: Cat) {\n        this.cats.push(cat)\n    }\n\n    async findAll(): Promise {\n        return this.cats\n    }\n\n    async findOne(id: number): Promise {\n        if (this?.cats[id]) return this.cats[id]\n\n        return Promise.reject(new Error('No Cats'))\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateCatDto.html":{"url":"classes/CreateCatDto.html","title":"class - CreateCatDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateCatDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/cats/dto/create-cat.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                age\n                            \n                            \n                                    Readonly\n                                breed\n                            \n                            \n                                    Readonly\n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            age\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsInt()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/cats/dto/create-cat.dto.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            breed\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsString()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/cats/dto/create-cat.dto.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsString()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/cats/dto/create-cat.dto.ts:5\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsInt, IsString } from 'class-validator'\n\nexport class CreateCatDto {\n    @IsString()\n    readonly name: string\n\n    @IsInt()\n    readonly age: number\n\n    @IsString()\n    readonly breed: string\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/HealthController.html":{"url":"controllers/HealthController.html","title":"controller - HealthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  HealthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/health/health.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                health\n            \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                check\n                            \n                            \n                                onApplicationShutdown\n                            \n                            \n                                onModuleInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            check\n                        \n                        \n                    \n                \n            \n            \n                \ncheck()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@HealthCheck()\n                \n            \n\n            \n                \n                    Defined in src/health/health.controller.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onApplicationShutdown\n                        \n                        \n                    \n                \n            \n            \n                \nonApplicationShutdown(signal?: string)\n                \n            \n\n\n            \n                \n                    Defined in src/health/health.controller.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    signal\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onModuleInit\n                        \n                        \n                    \n                \n            \n            \n                \nonModuleInit()\n                \n            \n\n\n            \n                \n                    Defined in src/health/health.controller.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        /* eslint-disable no-use-before-define,@typescript-eslint/no-use-before-define */\nimport { Controller, Get, OnApplicationShutdown, OnModuleInit } from '@nestjs/common'\nimport { ConfigService } from '@nestjs/config'\nimport { ApiTags } from '@nestjs/swagger'\nimport { DNSHealthIndicator, HealthCheck, HealthCheckService } from '@nestjs/terminus'\n\n@ApiTags(HealthController.name)\n@Controller('health')\nexport class HealthController implements OnModuleInit, OnApplicationShutdown {\n    constructor(\n        private health: HealthCheckService,\n        private dns: DNSHealthIndicator,\n        private config: ConfigService,\n    ) {}\n\n    @Get()\n    @HealthCheck()\n    check() {\n        return this.health.check([\n            () => this.dns.pingCheck('nestjs-docs', 'https://docs.nestjs.com'),\n        ])\n    }\n\n    /*\n     * When the application receives a termination signal it will call any registered\n     * onModuleDestroy(), beforeApplicationShutdown(), then onApplicationShutdown() methods\n     * (in the sequence described above) with the corresponding signal as the first parameter.\n     * If a registered function awaits an asynchronous call (returns a promise), Nest will not\n     * continue in the sequence until the promise is resolved or rejected.\n     */\n\n    onModuleInit(): void {\n        console.log(`ModuleInit - HealthController has been initialized.`, {\n            config: this.config.get('NODE_ENV'),\n        })\n    }\n\n    onApplicationShutdown(signal?: string): void {\n        console.log(\n            `ApplicationShutdown - HealthController has been shutdown with ${signal} signal`,\n        )\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ICat.html":{"url":"interfaces/ICat.html","title":"interface - ICat","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ICat\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/cats/interfaces/cat.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        age\n                                \n                                \n                                        breed\n                                \n                                \n                                        name\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        age\n                                    \n                                \n                                \n                                    \n                                        age:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        breed\n                                    \n                                \n                                \n                                    \n                                        breed:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface ICat {\n    readonly name: string\n    readonly age: number\n    readonly breed: string\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/app.controller.ts\n            \n            controller\n            AppController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/app.module.ts\n            \n            variable\n            ConfigModuleOptions\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/app.module.ts\n            \n            variable\n            LoggerModuleOptions\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/app.module.ts\n            \n            variable\n            TypeOrmModuleOptions\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/app.service.ts\n            \n            injectable\n            AppService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/cats/cats.controller.ts\n            \n            controller\n            CatsController\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/cats/cats.service.ts\n            \n            injectable\n            CatsService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/cats/dto/create-cat.dto.ts\n            \n            class\n            CreateCatDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/cats/entities/cat.entity.ts\n            \n            class\n            Cat\n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                src/cats/interfaces/cat.interface.ts\n            \n            interface\n            ICat\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/health/health.controller.ts\n            \n            controller\n            HealthController\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            createSwagger\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @hapi/joi : ^17.1.1\n        \n            @nestjs/common : ^7.5.1\n        \n            @nestjs/config : ^0.6.1\n        \n            @nestjs/core : ^7.5.1\n        \n            @nestjs/passport : ^7.1.3\n        \n            @nestjs/platform-express : ^7.5.1\n        \n            @nestjs/swagger : ^4.7.5\n        \n            @nestjs/terminus : ^7.0.1\n        \n            @nestjs/typeorm : ^7.1.5\n        \n            class-transformer : ^0.3.1\n        \n            class-validator : ^0.12.2\n        \n            dotenv : ^8.2.0\n        \n            dotenv-expand : ^5.1.0\n        \n            express-rate-limit : ^5.2.3\n        \n            helmet : ^4.2.0\n        \n            joi : ^17.3.0\n        \n            nestjs-pino : ^1.3.0\n        \n            passport : ^0.4.1\n        \n            passport-local : ^1.0.0\n        \n            pino-pretty : ^4.3.0\n        \n            reflect-metadata : ^0.1.13\n        \n            rimraf : ^3.0.2\n        \n            rxjs : ^6.6.3\n        \n            sqlite3 : ^5.0.0\n        \n            swagger-ui-express : ^4.1.5\n        \n            typeorm : ^0.2.29\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                        \n                            createSwagger   (src/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            bootstrap\n                        \n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createSwagger\n                        \n                        \n                    \n                \n            \n            \n                \ncreateSwagger(app)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    app\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n  A progressive Node.js framework for building efficient and scalable server-side applications.\n    \n\n\n\n\n\n\n\n\n  \n    \n  \n\n  \n\nDescription\nNest framework TypeScript starter repository.\nInstallation\n$ npm installRunning the app\n# development\n$ npm run start\n\n# watch mode\n$ npm run start:dev\n\n# production mode\n$ npm run start:prodTest\n# unit tests\n$ npm run test\n\n# e2e tests\n$ npm run test:e2e\n\n# test coverage\n$ npm run test:covSupport\nNest is an MIT-licensed open source project. It can grow thanks to the sponsors and support by the amazing backers. If you'd like to join them, please read more here.\nStay in touch\n\nAuthor - Kamil Myśliwiec\nWebsite - https://nestjs.com\nTwitter - @nestframework\n\nLicense\nNest is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CatsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_CatsModule\n\n\n\ncluster_CatsModule_providers\n\n\n\n\nCatsModule\n\nCatsModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nCatsModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nCatsService\n\nCatsService\n\nCatsModule -->\n\nCatsService->CatsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        2 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    3 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    2 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    2 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    1 Interface\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ConfigModuleOptions   (src/.../app.module.ts)\n                        \n                        \n                            LoggerModuleOptions   (src/.../app.module.ts)\n                        \n                        \n                            TypeOrmModuleOptions   (src/.../app.module.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/app.module.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            ConfigModuleOptions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    isGlobal: true,\n    validationOptions: {\n        allowUnknown: true,\n        abortEarly: true,\n    },\n    validationSchema: Joi.object({\n        PORT: Joi.number().default(3000),\n        NODE_ENV: Joi.string()\n            .valid('development', 'production', 'test', 'provision')\n            .default('development'),\n    }),\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            LoggerModuleOptions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    pinoHttp: {\n        prettyPrint: {\n            colorize: true,\n            levelFirst: false, // Display the log level name before the logged date and time\n            translateTime: true,\n            messageFormat: '{msg}', // 'pid', 'msg', 'level'\n            ignore: 'pid,hostname',\n            errorLikeObjectKeys: ['err', 'error', 'errors'],\n        },\n    },\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            TypeOrmModuleOptions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    type: 'sqlite' as const,\n    database: 'database.sqlite',\n    synchronize: true,\n    logging: true,\n}\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
