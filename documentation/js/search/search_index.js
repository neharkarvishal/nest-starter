var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/interfaces/APIResponse.html",[0,0.099,1,1.204]],["body/interfaces/APIResponse.html",[0,0.196,1,2.142,2,0.679,3,0.11,4,0.086,5,0.098,6,0.891,7,0.149,8,0.643,9,1.534,10,1.624,11,1.337,12,1.737,13,1.689,14,1.757,15,1.828,16,1.757,17,1.503,18,1.364,19,0.3,20,0.015,21,1.255,22,1.828,23,1.102,24,1.757,25,0.136,26,0.359,27,0.295,28,0.008,29,1.276,30,1.276,31,1.276,32,1.276,33,1.276,34,1.276,35,1.276,36,1.337,37,2.208,38,0.965,39,1.678,40,0.965,41,0.965,42,0.965,43,0.965,44,0.965,45,0.965,46,0.891,47,0.965,48,0.927,49,0.824,50,1.753,51,0.965,52,0.653,53,1.437,54,0.965,55,1.586,56,0.965,57,0.965,58,0.965,59,0.965,60,0.965,61,0.965,62,0.965,63,0.965,64,0.965,65,0.965,66,0.965,67,1.717,68,1.437,69,0.965,70,0.965,71,0.965,72,1.466,73,0.965,74,0.965,75,1.437,76,0.965,77,0.965,78,0.965,79,0.965,80,0.965,81,1.757,82,0.965,83,1.327,84,1.327,85,0.965,86,0.965,87,0.965,88,0.965,89,0.965,90,0.965,91,0.965,92,0.965,93,0.965,94,1.437,95,0.965,96,0.965,97,0.965,98,0.891,99,0.965,100,0.965,101,1.757,102,0.965,103,0.965,104,0.965,105,0.965,106,0.965,107,0.965,108,0.965,109,0.965,110,0.857,111,0.965,112,0.965,113,0.965,114,0.965,115,0.277,116,0.965,117,0.965,118,0.965,119,0.965,120,0.965,121,0.891,122,1.586,123,0.965,124,0.965,125,0.965,126,1.327,127,1.327,128,0.965,129,0.965,130,0.965,131,0.627,132,0.008,133,0.005]],["title/controllers/AppController.html",[134,2.037,135,2.8]],["body/controllers/AppController.html",[3,0.212,4,0.165,5,0.188,7,0.286,20,0.015,23,0.76,25,0.314,26,0.691,27,0.212,28,0.01,132,0.013,133,0.01,134,2.902,135,4.804,136,3.064,137,4.842,138,1.91,139,7.492,140,2.625,141,1.306,142,5.585,143,1.526,144,2.288,145,2.288,146,3.697,147,3.988,148,5.585,149,3.988,150,2.015,151,5.585,152,5.585,153,0.391,154,2.015,155,3.454,156,1.715,157,5.585,158,5.585]],["title/interfaces/AppLaunchAction.html",[0,0.099,46,1.204]],["body/interfaces/AppLaunchAction.html",[0,0.197,1,2.125,2,0.712,3,0.116,4,0.09,5,0.103,6,0.936,7,0.156,8,0.667,9,1.007,10,0.865,11,0.712,12,1.272,13,0.9,14,0.936,15,0.973,16,0.936,17,0.8,18,1.357,19,0.276,20,0.015,21,0.741,22,1.431,23,1.106,24,1.376,25,0.142,26,0.377,27,0.297,28,0.008,29,1.323,30,1.323,31,1.323,32,1.323,33,1.323,34,1.323,35,1.323,36,1.369,37,2.243,38,1.013,39,1.705,40,1.013,41,1.013,42,1.013,43,1.013,44,1.013,45,1.013,46,1.376,47,1.947,48,1.871,49,1.663,50,1.79,51,1.947,52,0.685,53,1.49,54,1.013,55,1.631,56,1.013,57,1.013,58,1.013,59,1.013,60,1.013,61,1.013,62,1.013,63,1.013,64,1.013,65,1.013,66,1.013,67,1.766,68,1.49,69,1.013,70,1.013,71,1.013,72,1.509,73,1.013,74,1.013,75,1.49,76,1.013,77,1.013,78,1.013,79,1.013,80,1.013,81,1.799,82,1.013,83,1.376,84,1.376,85,1.013,86,1.013,87,1.013,88,1.013,89,1.013,90,1.013,91,1.013,92,1.013,93,1.013,94,1.49,95,1.013,96,1.013,97,1.013,98,0.936,99,1.013,100,1.013,101,1.799,102,1.013,103,1.013,104,1.013,105,1.013,106,1.013,107,1.013,108,1.013,109,1.013,110,0.9,111,1.013,112,1.013,113,1.013,114,1.013,115,0.291,116,1.013,117,1.013,118,1.013,119,1.013,120,1.013,121,0.936,122,1.631,123,1.013,124,1.013,125,1.013,126,1.376,127,1.376,128,1.013,129,1.013,130,1.013,131,0.659,132,0.008,133,0.006]],["title/modules/AppModule.html",[159,1.843,160,2.8]],["body/modules/AppModule.html",[3,0.139,4,0.108,5,0.123,9,0.822,19,0.216,20,0.015,23,0.8,25,0.353,26,0.453,27,0.139,28,0.007,115,0.349,132,0.01,133,0.007,135,4.201,136,2.802,138,1.45,141,1.194,143,1.607,144,1.498,145,1.498,153,0.256,159,2.992,160,5.521,161,2.007,162,2.126,163,2.421,164,2.421,165,2.126,166,2.802,167,2.262,168,3.172,169,3.172,170,4.592,171,4.592,172,4.592,173,4.592,174,3.38,175,2.421,176,2.421,177,2.851,178,4.201,179,5.106,180,5.521,181,4.428,182,3.658,183,1.039,184,5.221,185,2.421,186,4.215,187,5.808,188,3.658,189,1.806,190,2.765,191,3.228,192,3.658,193,2.851,194,2.851,195,2.851,196,2.612,197,2.007,198,3.658,199,2.851,200,3.658,201,2.851,202,5.106,203,2.851,204,3.658,205,3.172,206,3.658,207,3.658,208,3.658,209,3.658,210,3.658,211,3.658,212,1.319,213,2.851,214,3.172,215,2.519,216,3.172,217,3.172,218,3.172,219,3.172,220,3.172,221,3.172,222,3.172,223,3.172,224,3.172,225,1.806,226,3.172,227,2.851,228,2.851,229,3.172,230,3.172,231,1.64,232,5.521,233,3.172,234,3.172,235,3.658,236,3.658,237,3.658,238,3.658,239,3.172,240,1.08,241,3.658,242,3.658,243,3.658,244,4.428,245,5.106,246,3.658,247,3.658,248,5.106,249,3.658,250,3.658,251,3.658,252,3.172,253,3.658,254,2.421,255,3.658,256,3.658,257,3.38,258,3.172,259,3.658,260,3.658,261,3.658,262,3.658,263,3.658,264,3.172,265,3.658,266,3.172,267,3.172]],["title/classes/BaseEntity.html",[153,0.274,268,3.056]],["body/classes/BaseEntity.html",[3,0.15,4,0.116,5,0.133,7,0.202,8,0.802,9,1.664,18,1.115,19,0.3,20,0.015,25,0.251,27,0.15,28,0.007,36,1.259,110,2.098,132,0.01,133,0.007,140,3.235,141,1.661,150,1.424,153,0.276,154,2.209,215,3.169,268,4.197,269,1.485,270,6.303,271,3.424,272,6.884,273,6.884,274,6.125,275,2.289,276,6.884,277,6.884,278,6.578,279,7.399,280,7.399,281,3.949,282,5.768,283,7.399,284,3.949,285,3.949,286,3.949,287,2.954,288,1.691,289,2.798,290,3.949,291,3.949,292,5.383,293,4.702,294,3.949,295,3.949,296,3.949,297,3.949,298,3.949,299,3.024,300,6.884,301,3.949,302,3.339,303,5.383,304,5.383,305,5.383,306,5.383,307,5.383,308,2.295,309,2.82,310,3.949,311,2.167,312,6.578]],["title/classes/BaseModel.html",[153,0.274,313,1.757]],["body/classes/BaseModel.html",[0,0.097,3,0.146,4,0.113,5,0.129,7,0.196,8,0.786,9,1.357,11,0.898,18,1.023,19,0.305,20,0.015,25,0.318,27,0.2,28,0.01,36,1.235,110,1.782,115,0.366,131,0.83,132,0.01,133,0.007,138,1.5,141,1.719,143,1.049,150,1.385,153,0.268,154,2.541,156,1.622,183,1.09,197,3.311,212,1.385,240,1.559,269,1.443,275,2.162,287,3.311,288,2.585,289,2.744,302,1.804,313,2.367,314,2.992,315,4.31,316,5.03,317,5.03,318,4.642,319,3.995,320,4.31,321,5.03,322,2.792,323,4.116,324,3.838,325,3.838,326,3.77,327,3.838,328,3.838,329,3.961,330,3.838,331,3.838,332,3.838,333,3.77,334,4.642,335,3.566,336,2.261,337,3.838,338,2.992,339,2.992,340,3.328,341,3.328,342,1.644,343,4.578,344,5.909,345,2.177,346,4.578,347,2.741,348,2.541,349,4.578,350,2.992,351,2.741,352,3.328,353,2.374,354,2.541,355,2.897,356,3.328,357,3.328,358,2.374,359,3.328,360,2.992,361,3.328,362,3.328,363,3.328,364,3.328,365,3.328,366,4.578,367,2.897,368,3.77,369,4.578,370,3.328,371,3.328,372,3.328]],["title/interfaces/Comment.html",[0,0.099,122,1.204]],["body/interfaces/Comment.html",[0,0.197,1,2.121,2,0.708,3,0.115,4,0.089,5,0.102,6,0.93,7,0.155,8,0.664,10,0.86,11,0.708,12,1.266,13,0.894,14,0.93,15,0.967,16,0.93,17,0.795,18,1.361,19,0.285,20,0.015,21,0.736,22,1.424,23,1.107,24,1.369,25,0.141,26,0.375,27,0.297,28,0.008,29,1.316,30,1.316,31,1.316,32,1.316,33,1.316,34,1.316,35,1.316,36,1.365,37,2.238,38,1.007,39,1.701,40,1.007,41,1.007,42,1.007,43,1.007,44,1.007,45,1.007,46,0.93,47,1.007,48,0.967,49,0.86,50,1.766,51,1.007,52,0.681,53,1.482,54,1.007,55,1.625,56,1.007,57,1.007,58,1.007,59,1.007,60,1.007,61,1.007,62,1.007,63,1.007,64,1.007,65,1.007,66,1.007,67,1.76,68,1.482,69,1.007,70,1.007,71,1.007,72,1.503,73,1.007,74,1.007,75,1.482,76,1.007,77,1.007,78,1.007,79,1.007,80,1.007,81,1.793,82,1.007,83,1.369,84,1.369,85,1.007,86,1.007,87,1.007,88,1.007,89,1.007,90,1.007,91,1.007,92,1.007,93,1.007,94,2.069,95,1.007,96,1.007,97,1.007,98,0.93,99,1.007,100,1.007,101,1.793,102,1.007,103,1.007,104,1.007,105,1.007,106,1.007,107,1.007,108,1.007,109,1.007,110,0.894,111,1.007,112,1.007,113,1.007,114,1.007,115,0.289,116,1.007,117,1.007,118,1.007,119,1.007,120,1.007,121,0.93,122,2.067,123,1.941,124,1.941,125,1.941,126,1.369,127,1.369,128,1.007,129,1.007,130,1.007,131,0.654,132,0.008,133,0.006]],["title/interfaces/Comments.html",[0,0.099,126,1.204]],["body/interfaces/Comments.html",[0,0.198,1,2.144,2,0.734,3,0.119,4,0.093,5,0.106,6,0.965,7,0.161,8,0.682,10,0.892,11,0.734,12,1.301,13,0.928,14,0.965,15,1.004,16,0.965,17,0.825,18,1.356,19,0.229,20,0.015,21,0.764,22,1.464,23,1.103,24,1.407,25,0.147,26,0.389,27,0.298,28,0.009,29,1.353,30,1.353,31,1.353,32,1.353,33,1.353,34,1.353,35,1.353,36,1.389,37,2.264,38,1.044,39,1.721,40,1.044,41,1.044,42,1.044,43,1.044,44,1.044,45,1.044,46,0.965,47,1.044,48,1.004,49,0.892,50,1.777,51,1.044,52,0.706,53,1.523,54,1.044,55,1.66,56,1.044,57,1.044,58,1.044,59,1.044,60,1.044,61,1.044,62,1.044,63,1.044,64,1.044,65,1.044,66,1.044,67,1.798,68,1.523,69,1.044,70,1.044,71,1.044,72,1.535,73,1.044,74,1.044,75,1.523,76,1.044,77,1.044,78,1.044,79,1.044,80,1.044,81,1.825,82,1.044,83,1.407,84,1.407,85,1.044,86,1.044,87,1.044,88,1.044,89,1.044,90,1.044,91,1.044,92,1.044,93,1.044,94,1.523,95,1.044,96,1.044,97,1.044,98,0.965,99,1.044,100,1.044,101,1.825,102,1.044,103,1.044,104,1.044,105,1.044,106,1.044,107,1.044,108,1.044,109,1.044,110,0.928,111,1.044,112,1.044,113,1.044,114,1.044,115,0.3,116,1.044,117,1.044,118,1.044,119,1.044,120,1.044,121,0.965,122,1.94,123,1.044,124,1.044,125,1.044,126,2.026,127,1.407,128,1.044,129,1.044,130,1.044,131,0.679,132,0.009,133,0.006]],["title/classes/CreateTagsDto.html",[153,0.274,373,2.279]],["body/classes/CreateTagsDto.html",[0,0.117,3,0.175,4,0.136,5,0.155,7,0.236,8,0.985,19,0.306,20,0.015,23,0.986,25,0.338,27,0.251,28,0.009,115,0.721,131,1.29,132,0.011,133,0.009,140,2.168,141,1.079,150,1.664,153,0.489,154,2.153,225,2.277,231,2.068,240,1.954,269,1.735,275,1.534,302,3.11,313,2.676,336,1.975,342,1.975,345,1.664,373,3.469,374,3.053,375,4.328,376,4,377,4.613,378,3.275,379,2.531,380,2.397,381,2.277,382,2.947,383,3.275,384,3.275,385,3.275,386,2.277,387,3.631,388,2.531,389,2.277,390,2.277,391,2.853,392,2.531,393,3.439,394,2.531,395,2.531,396,2.531,397,2.531,398,2.531,399,2.531,400,2.531,401,2.531,402,2.531,403,2.531,404,2.531,405,3.053,406,2.531,407,2.531,408,2.531,409,2.681,410,3.294]],["title/classes/CreateUserDto.html",[153,0.274,411,2.279]],["body/classes/CreateUserDto.html",[0,0.08,3,0.12,4,0.093,5,0.106,7,0.162,8,0.807,19,0.324,20,0.015,23,1.085,25,0.296,27,0.206,28,0.006,49,1.877,50,1.48,52,0.71,72,1.937,115,0.518,131,0.994,132,0.009,133,0.006,140,3.205,141,1.595,150,1.139,153,0.417,154,1.956,212,1.659,215,1.352,225,1.559,231,1.416,240,1.601,269,1.187,275,1.05,289,3.544,293,2.09,299,2.27,302,3.285,313,2.061,336,1.352,342,1.352,345,1.139,353,1.953,355,1.732,376,2.738,378,2.523,379,1.732,380,1.641,381,1.559,382,3.262,383,3.473,384,3.625,385,3.625,386,1.559,387,2.975,388,1.732,390,1.559,392,1.732,393,2.818,394,1.732,395,1.732,396,1.732,397,2.523,398,1.732,399,1.732,400,1.732,401,1.732,402,1.732,403,1.732,404,1.732,406,3.473,407,3.268,408,1.732,411,2.672,412,2.09,413,3.684,414,4.991,415,4.991,416,4.991,417,3.872,418,3.158,419,3.158,420,4.598,421,3.158,422,3.158,423,3.158,424,3.158,425,3.158,426,3.158,427,3.158,428,3.158,429,3.158,430,3.044,431,3.284,432,3.284,433,4.254,434,1.953,435,1.484,436,3.284,437,2.255,438,2.09,439,2.255,440,2.255,441,2.255,442,2.255,443,2.255,444,2.255,445,2.255,446,2.255,447,3.284,448,2.255,449,3.284,450,2.255,451,2.255,452,2.09,453,2.255,454,2.09,455,2.255,456,2.255,457,2.255,458,2.255,459,2.255,460,2.255,461,2.09,462,2.255,463,2.255,464,2.255,465,2.255,466,2.255,467,3.044,468,2.255,469,2.255,470,2.255,471,1.835,472,2.255]],["title/modules/CronModule.html",[159,1.843,170,2.595]],["body/modules/CronModule.html",[3,0.215,4,0.167,5,0.191,20,0.015,25,0.317,26,0.701,27,0.215,28,0.011,132,0.013,133,0.011,153,0.396,159,3.414,161,3.109,162,3.293,163,3.751,164,3.751,165,3.293,166,3.985,167,3.504,170,5.172,174,4.491,175,3.751,176,3.751,473,4.913,474,4.913,475,5.172,476,5.666,477,5.666]],["title/injectables/CronService.html",[475,2.595,478,1.358]],["body/injectables/CronService.html",[3,0.152,4,0.118,5,0.135,7,0.205,8,0.809,9,0.9,10,1.879,18,1.045,19,0.261,20,0.015,25,0.254,26,0.496,27,0.152,28,0.007,115,0.382,132,0.01,133,0.007,138,1.543,140,2.899,141,1.736,143,1.807,153,0.28,154,2.225,156,1.669,183,1.137,186,4.083,201,3.121,215,1.714,287,3.63,288,2.833,299,3.266,311,2.196,367,2.981,475,3.597,478,1.881,479,2.196,480,3.471,481,6.916,482,5.434,483,5.434,484,5.997,485,6.616,486,5.736,487,5.736,488,5.434,489,6.616,490,5.997,491,5.434,492,6.168,493,6.616,494,6.168,495,5.434,496,6.616,497,6.168,498,6.168,499,5.434,500,4.003,501,6.168,502,5.434,503,4.003,504,4.003,505,4.003,506,4.003,507,4.003,508,4.405,509,4.003,510,5.434,511,4.003,512,5.434,513,4.003,514,5.434,515,4.003,516,4.003,517,5.434,518,4.003,519,4.003,520,3.471,521,3.471,522,2.859,523,4.003]],["title/classes/CrudController.html",[153,0.274,524,3.056]],["body/classes/CrudController.html",[3,0.148,4,0.115,5,0.131,7,0.199,9,1.59,19,0.299,20,0.015,23,1.017,25,0.32,26,0.482,27,0.148,28,0.007,115,0.675,132,0.01,133,0.007,138,1.513,140,3.218,141,1.653,143,1.871,153,0.272,156,2.103,183,2.008,185,2.575,269,1.463,275,2.352,308,2.261,309,2.778,322,3.212,335,4.103,354,2.575,358,2.406,435,1.828,524,4.153,525,3.373,526,3.097,527,3.758,528,3.097,529,5.328,530,3.532,531,2.406,532,4.62,533,3.89,534,4.043,535,3.89,536,3.805,537,2.778,538,4.668,539,4.737,540,3.89,541,5.05,542,2.575,543,4.153,544,3.89,545,3.805,546,4.668,547,3.89,548,3.89,549,4.153,550,3.89,551,2.134,552,4.668,553,4.153,554,3.89,555,3.032,556,4.153,557,2.134,558,2.778,559,2.778,560,3.373,561,3.373,562,2.778,563,3.89,564,3.89,565,3.89,566,3.032,567,3.89,568,3.032,569,3.89,570,3.89,571,3.89,572,3.373,573,3.89]],["title/classes/CrudService.html",[153,0.274,536,2.8]],["body/classes/CrudService.html",[3,0.092,4,0.072,5,0.082,7,0.124,8,0.561,9,1.49,10,1.071,12,1.071,17,0.99,18,1.217,19,0.286,20,0.016,23,0.987,25,0.301,26,0.3,27,0.092,28,0.005,115,0.633,132,0.007,133,0.005,138,1.071,141,1.612,143,1.81,144,2.136,145,2.136,146,1.605,153,0.17,156,2.18,183,1.882,184,1.891,185,3.451,189,2.574,190,2.173,191,2.537,196,1.732,197,3.635,212,2.037,215,1.039,240,1.113,269,0.912,275,1.988,282,1.891,289,1.26,308,1.41,309,1.732,322,3.138,335,4.047,354,2.495,367,3.098,435,1.14,452,3.738,486,3.268,526,2.191,527,2.331,528,2.191,530,2.687,531,1.5,532,3.268,534,2.859,536,2.692,537,2.692,538,3.724,541,1.732,545,2.692,551,1.331,552,3.724,557,1.331,558,1.732,559,1.732,560,2.103,574,2.103,575,4.624,576,5.978,577,2.687,578,4.624,579,4.624,580,2.103,581,4.66,582,3.769,583,2.938,584,4.863,585,2.425,586,2.425,587,3.769,588,5.533,589,2.425,590,2.425,591,2.425,592,3.769,593,3.769,594,3.769,595,3.769,596,2.425,597,1.5,598,5.533,599,2.425,600,2.425,601,2.425,602,3.769,603,2.425,604,5.214,605,2.425,606,2.425,607,3.769,608,2.425,609,2.103,610,3.268,611,1.26,612,2.425,613,1.5,614,2.425,615,3.769,616,2.425,617,3.769,618,2.692,619,2.425,620,4.606,621,2.425,622,2.938,623,4.065,624,2.71,625,1.732,626,2.425,627,5.214,628,3.769,629,3.769,630,4.624,631,2.425,632,2.425,633,2.425,634,2.425,635,2.425,636,4.521,637,3.769,638,3.769,639,1.197,640,2.425,641,2.425,642,2.425,643,2.425,644,1.891,645,2.938,646,2.938,647,3.769,648,2.425,649,2.103,650,1.891,651,2.425,652,2.425,653,2.425,654,2.425,655,2.425]],["title/classes/CustomQueryBuilder.html",[153,0.274,329,2.279]],["body/classes/CustomQueryBuilder.html",[3,0.125,4,0.097,5,0.111,7,0.169,8,0.706,9,1.066,11,0.771,14,2.06,17,0.866,18,1.22,19,0.292,20,0.015,25,0.221,27,0.18,28,0.01,36,0.771,50,1.109,115,0.453,131,1.025,132,0.009,133,0.006,138,1.347,141,1.653,143,1.66,144,2.831,145,2.831,156,2.06,183,1.347,189,3,190,3.247,191,3.791,193,2.569,194,3.697,195,3.697,197,3.791,212,2.192,215,1.412,254,4.262,257,3.139,269,1.239,288,2.872,299,2.341,319,3.678,322,3.064,329,4.186,336,2.031,342,1.412,345,1.189,355,1.808,358,2.038,381,1.627,508,2.354,557,3.334,624,3.591,625,3.387,639,1.627,650,3.697,656,2.569,657,5.556,658,5.556,659,5.556,660,5.556,661,4.743,662,6.077,663,6.077,664,4.743,665,3.296,666,3.296,667,3.296,668,3.296,669,4.743,670,6.077,671,3.296,672,3.296,673,3.296,674,3.296,675,4.743,676,7.202,677,3.296,678,3.296,679,2.569,680,3.697,681,2.858,682,2.858,683,2.569,684,2.858,685,3.296,686,3.296,687,2.858,688,3.296,689,3.296,690,3.296,691,3.296,692,3.296,693,3.296,694,3.296,695,3.296,696,3.296,697,3.296,698,3.296,699,4.818,700,6.077,701,3.296,702,3.296,703,3.296,704,3.296,705,3.296,706,3.296,707,3.296,708,3.296]],["title/injectables/DBHelper.html",[478,1.358,709,3.056]],["body/injectables/DBHelper.html",[3,0.176,4,0.137,5,0.156,7,0.237,8,0.891,9,1.491,19,0.296,20,0.015,21,1.126,23,1.043,25,0.31,26,0.573,27,0.176,28,0.009,115,0.633,132,0.011,133,0.009,138,1.7,141,1.639,143,1.635,153,0.324,156,1.838,183,1.883,197,2.541,212,2.528,299,2.286,308,2.692,322,2.716,360,4.665,478,2.072,479,2.541,531,2.864,562,3.307,580,4.016,581,5.793,679,3.61,709,4.665,710,4.016,711,6.63,712,6.077,713,5.984,714,5.984,715,5.984,716,4.631,717,5.984,718,7.008,719,4.631,720,4.016,721,4.631,722,4.631,723,4.631,724,4.631,725,6.63,726,5.984,727,4.631,728,4.631,729,4.631,730,4.631,731,4.631,732,4.631,733,4.631,734,4.631]],["title/modules/DatabaseModule.html",[159,1.843,171,2.595]],["body/modules/DatabaseModule.html",[3,0.185,4,0.143,5,0.164,20,0.015,25,0.344,26,0.602,27,0.185,28,0.009,52,1.388,132,0.012,133,0.009,144,2.529,145,2.529,153,0.34,156,1.897,159,2.902,161,2.668,166,3.916,167,3.007,171,4.087,189,3.048,190,2.285,196,3.473,197,2.668,212,2.574,215,2.644,322,1.992,342,2.644,345,1.754,389,3.048,624,2.527,639,2.401,735,3.791,736,4.216,737,4.216,738,6.174,739,5.261,740,5.354,741,4.863,742,4.863,743,3.791,744,4.813,745,4.216,746,5.354,747,4.216,748,4.216,749,4.216,750,4.216,751,4.216,752,3.791,753,4.216,754,4.216,755,4.216,756,4.216,757,4.216,758,4.216]],["title/injectables/ExcludeNullUndefinedInterceptor.html",[478,1.358,759,3.056]],["body/injectables/ExcludeNullUndefinedInterceptor.html",[3,0.188,4,0.146,5,0.167,7,0.253,9,1.112,19,0.209,20,0.015,23,0.849,25,0.319,26,0.612,27,0.188,28,0.009,36,1.459,115,0.472,132,0.012,133,0.009,138,1.772,141,1.156,143,1.351,144,2.026,145,2.026,153,0.346,156,1.917,183,1.405,189,2.441,190,2.324,191,2.713,240,1.461,288,3.075,311,2.713,454,4.131,478,2.161,479,2.713,611,2.57,613,3.058,624,2.57,639,3.545,683,4.865,759,4.865,760,5.411,761,5.411,762,4.288,763,6.24,764,5.411,765,6.24,766,4.456,767,4.865,768,4.441,769,5.128,770,4.945,771,3.058,772,3.974,773,4.456,774,4.131,775,4.288]],["title/interfaces/Follower.html",[0,0.099,127,1.204]],["body/interfaces/Follower.html",[0,0.197,1,2.121,2,0.708,3,0.115,4,0.089,5,0.102,6,0.93,7,0.155,8,0.664,10,0.86,11,0.708,12,1.266,13,0.894,14,0.93,15,0.967,16,0.93,17,0.795,18,1.357,19,0.285,20,0.015,21,0.736,22,1.424,23,1.105,24,1.369,25,0.141,26,0.375,27,0.297,28,0.008,29,1.316,30,1.316,31,1.316,32,1.316,33,1.316,34,1.316,35,1.316,36,1.365,37,2.238,38,1.007,39,1.701,40,1.007,41,1.007,42,1.007,43,1.007,44,1.007,45,1.007,46,0.93,47,1.007,48,0.967,49,0.86,50,1.806,51,1.007,52,0.681,53,1.482,54,1.007,55,1.625,56,1.007,57,1.007,58,1.007,59,1.007,60,1.007,61,1.007,62,1.007,63,1.007,64,1.007,65,1.007,66,1.007,67,2.165,68,1.482,69,1.007,70,1.007,71,1.007,72,1.849,73,1.007,74,1.007,75,1.482,76,1.007,77,1.007,78,1.007,79,1.007,80,1.007,81,1.793,82,1.007,83,1.369,84,1.369,85,1.007,86,1.007,87,1.007,88,1.007,89,1.007,90,1.007,91,1.007,92,1.007,93,1.007,94,1.482,95,1.007,96,1.007,97,1.007,98,0.93,99,1.007,100,1.007,101,1.793,102,1.007,103,1.007,104,1.007,105,1.007,106,1.007,107,1.007,108,1.007,109,1.007,110,0.894,111,1.007,112,1.007,113,1.007,114,1.007,115,0.289,116,1.007,117,1.007,118,1.007,119,1.007,120,1.007,121,0.93,122,1.625,123,1.007,124,1.007,125,1.007,126,1.369,127,1.625,128,1.941,129,1.941,130,1.941,131,0.654,132,0.008,133,0.006]],["title/interfaces/Following.html",[0,0.099,55,1.204]],["body/interfaces/Following.html",[0,0.198,1,2.15,2,0.742,3,0.12,4,0.094,5,0.107,6,0.975,10,0.902,11,0.742,12,1.311,13,0.938,14,0.975,15,1.015,16,0.975,17,0.834,18,1.357,19,0.195,20,0.015,21,0.772,22,1.475,23,1.104,24,1.418,25,0.148,26,0.393,27,0.298,28,0.009,29,1.363,30,1.363,31,1.363,32,1.363,33,1.363,34,1.363,35,1.363,36,1.396,37,2.272,38,1.056,39,1.727,40,1.056,41,1.056,42,1.056,43,1.056,44,1.056,45,1.056,46,0.975,47,1.056,48,1.015,49,0.902,50,1.78,51,1.056,52,0.714,53,1.535,54,1.056,55,1.834,56,1.056,57,1.056,58,1.056,59,1.056,60,1.056,61,1.056,62,1.056,63,1.056,64,1.056,65,1.056,66,1.056,67,1.809,68,1.535,69,1.056,70,1.056,71,1.056,72,1.545,73,1.056,74,1.056,75,1.535,76,1.056,77,1.056,78,1.056,79,1.056,80,1.056,81,1.834,82,1.056,83,1.418,84,1.418,85,1.056,86,1.056,87,1.056,88,1.056,89,1.056,90,1.056,91,1.056,92,1.056,93,1.056,94,1.535,95,1.056,96,1.056,97,1.056,98,0.975,99,1.056,100,1.056,101,1.834,102,1.056,103,1.056,104,1.056,105,1.056,106,1.056,107,1.056,108,1.056,109,1.056,110,0.938,111,1.056,112,1.056,113,1.056,114,1.056,115,0.303,116,1.056,117,1.056,118,1.056,119,1.056,120,1.056,121,0.975,122,1.671,123,1.056,124,1.056,125,1.056,126,1.418,127,1.671,128,1.056,129,1.056,130,1.056,131,0.998,132,0.009,133,0.006]],["title/interfaces/GetAppLaunchData.html",[0,0.099,29,1.158]],["body/interfaces/GetAppLaunchData.html",[0,0.198,1,2.219,2,0.731,3,0.119,4,0.092,5,0.105,6,0.961,7,0.16,8,0.68,10,0.888,11,0.731,12,1.297,13,0.924,14,0.961,15,1,16,0.961,17,0.822,18,1.356,19,0.228,20,0.015,21,0.76,22,1.459,23,1.103,24,1.403,25,0.146,26,0.387,27,0.298,28,0.009,29,1.593,30,1.349,31,1.349,32,1.349,33,1.349,34,1.349,35,1.349,36,1.387,37,2.403,38,1.04,39,1.826,40,1.04,41,1.04,42,1.04,43,1.04,44,1.04,45,1.04,46,0.961,47,1.04,48,1,49,0.888,50,1.775,51,1.04,52,0.703,53,1.519,54,1.04,55,1.657,56,1.04,57,1.04,58,1.04,59,1.04,60,1.04,61,1.04,62,1.04,63,1.04,64,1.04,65,1.04,66,1.04,67,1.794,68,1.519,69,1.04,70,1.04,71,1.04,72,1.532,73,1.04,74,1.04,75,1.519,76,1.04,77,1.04,78,1.04,79,1.04,80,1.04,81,1.822,82,1.04,83,1.403,84,1.403,85,1.04,86,1.04,87,1.04,88,1.04,89,1.04,90,1.04,91,1.04,92,1.04,93,1.04,94,1.519,95,1.04,96,1.04,97,1.04,98,0.961,99,1.04,100,1.04,101,1.822,102,1.04,103,1.04,104,1.04,105,1.04,106,1.04,107,1.04,108,1.04,109,1.04,110,0.924,111,1.04,112,1.04,113,1.04,114,1.04,115,0.299,116,1.04,117,1.04,118,1.04,119,1.04,120,1.04,121,0.961,122,1.657,123,1.04,124,1.04,125,1.04,126,1.403,127,1.403,128,1.04,129,1.04,130,1.04,131,0.676,132,0.009,133,0.006]],["title/interfaces/GetComments.html",[0,0.099,32,1.158]],["body/interfaces/GetComments.html",[0,0.198,1,2.219,2,0.731,3,0.119,4,0.092,5,0.105,6,0.961,7,0.16,8,0.68,10,0.888,11,0.731,12,1.297,13,0.924,14,0.961,15,1,16,0.961,17,0.822,18,1.356,19,0.228,20,0.015,21,0.76,22,1.459,23,1.103,24,1.403,25,0.146,26,0.387,27,0.298,28,0.009,29,1.349,30,1.349,31,1.349,32,1.593,33,1.349,34,1.349,35,1.349,36,1.387,37,2.403,38,1.04,39,1.826,40,1.04,41,1.04,42,1.04,43,1.04,44,1.04,45,1.04,46,0.961,47,1.04,48,1,49,0.888,50,1.775,51,1.04,52,0.703,53,1.519,54,1.04,55,1.657,56,1.04,57,1.04,58,1.04,59,1.04,60,1.04,61,1.04,62,1.04,63,1.04,64,1.04,65,1.04,66,1.04,67,1.794,68,1.519,69,1.04,70,1.04,71,1.04,72,1.532,73,1.04,74,1.04,75,1.519,76,1.04,77,1.04,78,1.04,79,1.04,80,1.04,81,1.822,82,1.04,83,1.403,84,1.403,85,1.04,86,1.04,87,1.04,88,1.04,89,1.04,90,1.04,91,1.04,92,1.04,93,1.04,94,1.519,95,1.04,96,1.04,97,1.04,98,0.961,99,1.04,100,1.04,101,1.822,102,1.04,103,1.04,104,1.04,105,1.04,106,1.04,107,1.04,108,1.04,109,1.04,110,0.924,111,1.04,112,1.04,113,1.04,114,1.04,115,0.299,116,1.04,117,1.04,118,1.04,119,1.04,120,1.04,121,0.961,122,1.657,123,1.04,124,1.04,125,1.04,126,1.403,127,1.403,128,1.04,129,1.04,130,1.04,131,0.676,132,0.009,133,0.006]],["title/interfaces/GetFollowers.html",[0,0.099,34,1.158]],["body/interfaces/GetFollowers.html",[0,0.198,1,2.219,2,0.731,3,0.119,4,0.092,5,0.105,6,0.961,7,0.16,8,0.68,10,0.888,11,0.731,12,1.297,13,0.924,14,0.961,15,1,16,0.961,17,0.822,18,1.356,19,0.228,20,0.015,21,0.76,22,1.459,23,1.103,24,1.403,25,0.146,26,0.387,27,0.298,28,0.009,29,1.349,30,1.349,31,1.349,32,1.349,33,1.349,34,1.593,35,1.349,36,1.387,37,2.403,38,1.04,39,1.826,40,1.04,41,1.04,42,1.04,43,1.04,44,1.04,45,1.04,46,0.961,47,1.04,48,1,49,0.888,50,1.775,51,1.04,52,0.703,53,1.519,54,1.04,55,1.657,56,1.04,57,1.04,58,1.04,59,1.04,60,1.04,61,1.04,62,1.04,63,1.04,64,1.04,65,1.04,66,1.04,67,1.794,68,1.519,69,1.04,70,1.04,71,1.04,72,1.532,73,1.04,74,1.04,75,1.519,76,1.04,77,1.04,78,1.04,79,1.04,80,1.04,81,1.822,82,1.04,83,1.403,84,1.403,85,1.04,86,1.04,87,1.04,88,1.04,89,1.04,90,1.04,91,1.04,92,1.04,93,1.04,94,1.519,95,1.04,96,1.04,97,1.04,98,0.961,99,1.04,100,1.04,101,1.822,102,1.04,103,1.04,104,1.04,105,1.04,106,1.04,107,1.04,108,1.04,109,1.04,110,0.924,111,1.04,112,1.04,113,1.04,114,1.04,115,0.299,116,1.04,117,1.04,118,1.04,119,1.04,120,1.04,121,0.961,122,1.657,123,1.04,124,1.04,125,1.04,126,1.403,127,1.403,128,1.04,129,1.04,130,1.04,131,0.676,132,0.009,133,0.006]],["title/interfaces/GetFollowing.html",[0,0.099,35,1.158]],["body/interfaces/GetFollowing.html",[0,0.198,1,2.219,2,0.731,3,0.119,4,0.092,5,0.105,6,0.961,7,0.16,8,0.68,10,0.888,11,0.731,12,1.297,13,0.924,14,0.961,15,1,16,0.961,17,0.822,18,1.356,19,0.228,20,0.015,21,0.76,22,1.459,23,1.103,24,1.403,25,0.146,26,0.387,27,0.298,28,0.009,29,1.349,30,1.349,31,1.349,32,1.349,33,1.349,34,1.349,35,1.593,36,1.387,37,2.403,38,1.04,39,1.826,40,1.04,41,1.04,42,1.04,43,1.04,44,1.04,45,1.04,46,0.961,47,1.04,48,1,49,0.888,50,1.775,51,1.04,52,0.703,53,1.519,54,1.04,55,1.657,56,1.04,57,1.04,58,1.04,59,1.04,60,1.04,61,1.04,62,1.04,63,1.04,64,1.04,65,1.04,66,1.04,67,1.794,68,1.519,69,1.04,70,1.04,71,1.04,72,1.532,73,1.04,74,1.04,75,1.519,76,1.04,77,1.04,78,1.04,79,1.04,80,1.04,81,1.822,82,1.04,83,1.403,84,1.403,85,1.04,86,1.04,87,1.04,88,1.04,89,1.04,90,1.04,91,1.04,92,1.04,93,1.04,94,1.519,95,1.04,96,1.04,97,1.04,98,0.961,99,1.04,100,1.04,101,1.822,102,1.04,103,1.04,104,1.04,105,1.04,106,1.04,107,1.04,108,1.04,109,1.04,110,0.924,111,1.04,112,1.04,113,1.04,114,1.04,115,0.299,116,1.04,117,1.04,118,1.04,119,1.04,120,1.04,121,0.961,122,1.657,123,1.04,124,1.04,125,1.04,126,1.403,127,1.403,128,1.04,129,1.04,130,1.04,131,0.676,132,0.009,133,0.006]],["title/classes/GetManyDto.html",[153,0.274,776,3.056]],["body/classes/GetManyDto.html",[3,0.198,4,0.154,5,0.176,7,0.267,8,0.96,10,1.989,11,1.637,14,2.151,15,2.237,17,1.84,18,1.329,19,0.318,20,0.015,21,1.567,25,0.243,27,0.198,28,0.01,132,0.012,133,0.01,141,1.758,153,0.364,240,1.904,269,1.959,287,2.859,776,5.026,777,6.642,778,6.732,779,4.518,780,7.002,781,5.21,782,5.21,783,5.21,784,5.21,785,5.21,786,5.21,787,5.21]],["title/interfaces/GetRescueList.html",[0,0.099,33,1.158]],["body/interfaces/GetRescueList.html",[0,0.198,1,2.219,2,0.731,3,0.119,4,0.092,5,0.105,6,0.961,7,0.16,8,0.68,10,0.888,11,0.731,12,1.297,13,0.924,14,0.961,15,1,16,0.961,17,0.822,18,1.356,19,0.228,20,0.015,21,0.76,22,1.459,23,1.103,24,1.403,25,0.146,26,0.387,27,0.298,28,0.009,29,1.349,30,1.349,31,1.349,32,1.349,33,1.593,34,1.349,35,1.349,36,1.387,37,2.403,38,1.04,39,1.826,40,1.04,41,1.04,42,1.04,43,1.04,44,1.04,45,1.04,46,0.961,47,1.04,48,1,49,0.888,50,1.775,51,1.04,52,0.703,53,1.519,54,1.04,55,1.657,56,1.04,57,1.04,58,1.04,59,1.04,60,1.04,61,1.04,62,1.04,63,1.04,64,1.04,65,1.04,66,1.04,67,1.794,68,1.519,69,1.04,70,1.04,71,1.04,72,1.532,73,1.04,74,1.04,75,1.519,76,1.04,77,1.04,78,1.04,79,1.04,80,1.04,81,1.822,82,1.04,83,1.403,84,1.403,85,1.04,86,1.04,87,1.04,88,1.04,89,1.04,90,1.04,91,1.04,92,1.04,93,1.04,94,1.519,95,1.04,96,1.04,97,1.04,98,0.961,99,1.04,100,1.04,101,1.822,102,1.04,103,1.04,104,1.04,105,1.04,106,1.04,107,1.04,108,1.04,109,1.04,110,0.924,111,1.04,112,1.04,113,1.04,114,1.04,115,0.299,116,1.04,117,1.04,118,1.04,119,1.04,120,1.04,121,0.961,122,1.657,123,1.04,124,1.04,125,1.04,126,1.403,127,1.403,128,1.04,129,1.04,130,1.04,131,0.676,132,0.009,133,0.006]],["title/interfaces/GetUserPosts.html",[0,0.099,31,1.158]],["body/interfaces/GetUserPosts.html",[0,0.198,1,2.219,2,0.731,3,0.119,4,0.092,5,0.105,6,0.961,7,0.16,8,0.68,10,0.888,11,0.731,12,1.297,13,0.924,14,0.961,15,1,16,0.961,17,0.822,18,1.356,19,0.228,20,0.015,21,0.76,22,1.459,23,1.103,24,1.403,25,0.146,26,0.387,27,0.298,28,0.009,29,1.349,30,1.349,31,1.593,32,1.349,33,1.349,34,1.349,35,1.349,36,1.387,37,2.403,38,1.04,39,1.826,40,1.04,41,1.04,42,1.04,43,1.04,44,1.04,45,1.04,46,0.961,47,1.04,48,1,49,0.888,50,1.775,51,1.04,52,0.703,53,1.519,54,1.04,55,1.657,56,1.04,57,1.04,58,1.04,59,1.04,60,1.04,61,1.04,62,1.04,63,1.04,64,1.04,65,1.04,66,1.04,67,1.794,68,1.519,69,1.04,70,1.04,71,1.04,72,1.532,73,1.04,74,1.04,75,1.519,76,1.04,77,1.04,78,1.04,79,1.04,80,1.04,81,1.822,82,1.04,83,1.403,84,1.403,85,1.04,86,1.04,87,1.04,88,1.04,89,1.04,90,1.04,91,1.04,92,1.04,93,1.04,94,1.519,95,1.04,96,1.04,97,1.04,98,0.961,99,1.04,100,1.04,101,1.822,102,1.04,103,1.04,104,1.04,105,1.04,106,1.04,107,1.04,108,1.04,109,1.04,110,0.924,111,1.04,112,1.04,113,1.04,114,1.04,115,0.299,116,1.04,117,1.04,118,1.04,119,1.04,120,1.04,121,0.961,122,1.657,123,1.04,124,1.04,125,1.04,126,1.403,127,1.403,128,1.04,129,1.04,130,1.04,131,0.676,132,0.009,133,0.006]],["title/interfaces/GetUserProfile.html",[0,0.099,30,1.158]],["body/interfaces/GetUserProfile.html",[0,0.198,1,2.219,2,0.731,3,0.119,4,0.092,5,0.105,6,0.961,7,0.16,8,0.68,10,0.888,11,0.731,12,1.297,13,0.924,14,0.961,15,1,16,0.961,17,0.822,18,1.356,19,0.228,20,0.015,21,0.76,22,1.459,23,1.103,24,1.403,25,0.146,26,0.387,27,0.298,28,0.009,29,1.349,30,1.593,31,1.349,32,1.349,33,1.349,34,1.349,35,1.349,36,1.387,37,2.403,38,1.04,39,1.826,40,1.04,41,1.04,42,1.04,43,1.04,44,1.04,45,1.04,46,0.961,47,1.04,48,1,49,0.888,50,1.775,51,1.04,52,0.703,53,1.519,54,1.04,55,1.657,56,1.04,57,1.04,58,1.04,59,1.04,60,1.04,61,1.04,62,1.04,63,1.04,64,1.04,65,1.04,66,1.04,67,1.794,68,1.519,69,1.04,70,1.04,71,1.04,72,1.532,73,1.04,74,1.04,75,1.519,76,1.04,77,1.04,78,1.04,79,1.04,80,1.04,81,1.822,82,1.04,83,1.403,84,1.403,85,1.04,86,1.04,87,1.04,88,1.04,89,1.04,90,1.04,91,1.04,92,1.04,93,1.04,94,1.519,95,1.04,96,1.04,97,1.04,98,0.961,99,1.04,100,1.04,101,1.822,102,1.04,103,1.04,104,1.04,105,1.04,106,1.04,107,1.04,108,1.04,109,1.04,110,0.924,111,1.04,112,1.04,113,1.04,114,1.04,115,0.299,116,1.04,117,1.04,118,1.04,119,1.04,120,1.04,121,0.961,122,1.657,123,1.04,124,1.04,125,1.04,126,1.403,127,1.403,128,1.04,129,1.04,130,1.04,131,0.676,132,0.009,133,0.006]],["title/controllers/HealthController.html",[134,2.037,178,2.8]],["body/controllers/HealthController.html",[3,0.141,4,0.11,5,0.126,7,0.191,9,1.163,11,0.872,19,0.158,20,0.015,23,0.808,25,0.341,26,0.461,27,0.141,28,0.007,115,0.494,132,0.01,133,0.007,134,1.937,136,2.045,138,1.47,140,2.432,141,1.577,143,1.842,144,1.527,145,1.527,146,2.468,147,2.662,149,2.662,150,1.345,153,0.261,154,1.345,155,2.306,156,1.972,178,4.585,180,5.566,181,4.487,183,1.47,184,4.633,185,2.468,186,3.934,187,6.052,190,2.793,191,3.261,193,2.906,194,2.906,195,2.906,199,2.906,203,2.906,212,1.345,239,4.487,240,1.101,264,3.232,266,3.232,267,3.232,299,2.554,484,4.487,520,3.232,521,4.487,531,2.306,557,2.045,611,1.937,613,2.306,636,4.487,649,3.232,650,2.906,680,5.004,772,3.454,774,2.468,788,3.232,789,5.174,790,6.744,791,3.728,792,3.728,793,5.174,794,3.728,795,5.943,796,3.728,797,3.728,798,5.174,799,3.728,800,2.906,801,3.728,802,3.728,803,5.174,804,5.174,805,5.174,806,5.174,807,5.943,808,4.487,809,3.728,810,3.728,811,4.633,812,3.728,813,5.174,814,3.728,815,3.728,816,3.728,817,3.728,818,3.728,819,3.728,820,3.728,821,3.728,822,3.728,823,3.728,824,3.728,825,3.728,826,3.728,827,5.174,828,3.728,829,3.728,830,3.728,831,5.174,832,5.174,833,3.728,834,3.728,835,3.728,836,3.728,837,3.728,838,3.728,839,3.728,840,3.728]],["title/interfaces/IBaseModel.html",[0,0.099,315,2.8]],["body/interfaces/IBaseModel.html",[0,0.11,2,1.011,3,0.164,4,0.127,5,0.146,7,0.221,8,0.852,9,1.286,11,1.011,18,1.156,19,0.289,20,0.015,25,0.331,27,0.217,28,0.011,36,1.011,110,1.893,131,0.934,132,0.011,133,0.008,150,1.559,153,0.302,154,2.063,156,1.757,197,3.517,212,1.559,240,1.276,275,2.36,289,2.246,302,2.031,313,1.938,314,3.369,315,4.579,316,5.208,317,5.208,318,4.085,319,2.861,320,3.087,321,5.208,322,2.626,326,3.087,329,3.726,333,3.087,334,4.085,335,3.138,339,3.369,340,3.748,341,3.748,342,1.851,343,4.96,344,6.154,345,2.313,346,4.96,347,3.087,348,2.861,349,4.96,350,3.369,351,3.087,352,3.748,353,2.673,354,2.861,355,3.138,356,3.748,357,3.748,358,2.673,359,3.748,360,3.369,361,3.748,362,3.748,363,3.748,364,3.748,365,3.748,366,4.96,367,3.138,368,4.085,369,4.96,370,3.748,371,3.748,372,3.748]],["title/interfaces/ICrudService.html",[0,0.099,534,2.425]],["body/interfaces/ICrudService.html",[0,0.142,2,0.975,3,0.158,4,0.123,5,0.14,7,0.213,9,1.623,10,1.586,17,1.467,18,1.188,19,0.305,20,0.015,21,1.013,23,0.856,25,0.261,27,0.212,28,0.008,115,0.689,132,0.01,133,0.008,138,1.586,141,1.688,143,1.972,183,2.05,185,4.167,275,2.237,308,2.422,335,4.272,354,3.696,435,2.624,522,2.976,526,3.245,527,3.453,528,3.245,530,3.245,534,3.453,537,3.987,538,4.803,541,4.803,542,3.696,545,3.987,551,3.063,552,4.803,558,2.976,559,2.976,577,3.659,583,4.352,584,5.746,588,5.242,597,2.577,598,5.746,618,4.496,841,3.249,842,4.168,843,4.168,844,4.168,845,4.168,846,4.168,847,4.168,848,3.614,849,3.614,850,2.577,851,3.249,852,3.249,853,2.976]],["title/interfaces/IPagination.html",[0,0.099,850,2.425]],["body/interfaces/IPagination.html",[0,0.159,2,1.169,3,0.19,4,0.147,5,0.168,7,0.256,8,0.935,17,1.992,18,1.285,19,0.266,20,0.015,21,1.67,23,0.68,25,0.293,27,0.238,28,0.009,132,0.012,133,0.009,275,1.662,308,2.905,335,3.955,435,2.953,522,4.487,534,3.091,537,3.569,538,4.487,541,3.569,542,3.308,545,3.569,551,2.742,552,4.487,558,3.569,559,3.569,577,2.905,583,3.896,584,5.356,588,4.897,598,5.356,618,5.557,841,3.896,848,4.334,849,4.334,850,3.885,851,4.897,852,4.897,853,4.487]],["title/interfaces/IPagination-1.html",[0,0.083,299,1.615,850,2.023]],["body/interfaces/IPagination-1.html",[0,0.169,2,1.284,3,0.208,4,0.162,5,0.185,7,0.281,8,0.991,17,2.038,18,1.293,19,0.282,20,0.015,21,1.742,27,0.208,28,0.01,132,0.012,133,0.01,311,3.014,358,3.397,435,3.13,522,4.756,618,5.656,850,4.118,851,5.191,852,5.191,853,4.756,854,4.763,855,4.763]],["title/interfaces/ITag.html",[0,0.099,375,2.425]],["body/interfaces/ITag.html",[0,0.118,2,1.089,3,0.177,4,0.137,5,0.157,7,0.238,8,0.99,19,0.307,20,0.015,23,1.013,25,0.34,27,0.252,28,0.009,115,0.733,131,1.299,132,0.011,133,0.009,150,1.681,153,0.491,154,2.167,225,2.3,231,2.088,240,1.774,275,1.549,302,3.125,313,2.693,336,1.995,342,1.995,345,1.681,373,2.708,374,3.084,375,4.344,378,3.296,379,2.556,380,2.421,381,2.3,382,2.966,383,3.296,384,3.296,385,3.296,386,2.3,387,3.648,388,2.556,389,2.3,390,2.3,391,2.881,392,2.556,393,3.455,394,2.556,395,2.556,396,2.556,397,2.556,398,2.556,399,2.556,400,2.556,401,2.556,402,2.556,403,2.556,404,2.556,405,3.084,406,2.556,407,2.556,408,2.556,409,2.708,410,3.327]],["title/interfaces/ITryRequest.html",[0,0.099,856,3.056]],["body/interfaces/ITryRequest.html",[0,0.146,2,1.348,3,0.219,4,0.17,5,0.194,7,0.295,8,1.021,9,1.702,12,2.15,19,0.309,20,0.015,27,0.219,28,0.011,50,1.711,132,0.013,133,0.011,620,5.407,622,5.902,856,5.344,857,4.998,858,4.998]],["title/interfaces/IUser.html",[0,0.099,413,2.425]],["body/interfaces/IUser.html",[0,0.083,2,0.77,3,0.125,4,0.097,5,0.111,7,0.168,8,0.827,19,0.324,20,0.015,23,1.096,25,0.301,27,0.211,28,0.006,49,1.962,50,1.567,52,0.74,72,2.008,115,0.53,131,1.024,132,0.009,133,0.006,150,1.187,153,0.425,154,2.003,212,1.709,215,1.41,225,1.625,231,1.475,240,1.399,275,1.095,289,3.673,293,2.179,299,2.339,302,3.322,313,2.124,336,1.41,342,1.41,345,1.187,353,2.036,355,1.806,378,2.6,379,1.806,380,1.71,381,1.625,382,3.309,383,3.531,384,3.677,385,3.677,386,1.625,387,3.046,388,1.806,390,1.625,392,1.806,393,2.885,394,1.806,395,1.806,396,1.806,397,2.6,398,1.806,399,1.806,400,1.806,401,1.806,402,1.806,403,1.806,404,1.806,406,3.531,407,3.332,408,1.806,411,1.913,412,2.179,413,3.756,414,5.142,415,5.142,416,5.142,417,2.35,430,3.136,431,3.384,432,3.384,433,4.337,434,2.036,435,1.547,436,3.384,437,2.35,438,2.179,439,2.35,440,2.35,441,2.35,442,2.35,443,2.35,444,2.35,445,2.35,446,2.35,447,3.384,448,2.35,449,3.384,450,2.35,451,2.35,452,2.179,453,2.35,454,2.179,455,2.35,456,2.35,457,2.35,458,2.35,459,2.35,460,2.35,461,2.179,462,2.35,463,2.35,464,2.35,465,2.35,466,2.35,467,3.136,468,2.35,469,2.35,470,2.35,471,1.913,472,2.35]],["title/classes/PaginationParams.html",[153,0.274,546,2.8]],["body/classes/PaginationParams.html",[3,0.162,4,0.126,5,0.144,7,0.219,8,0.845,9,1.277,18,1.232,19,0.287,20,0.015,21,1.039,23,0.772,25,0.298,27,0.216,28,0.008,132,0.011,133,0.008,140,2.997,141,1.491,150,1.542,153,0.446,269,1.607,287,3.115,288,2.432,309,4.852,311,2.345,339,5.296,358,4.496,386,2.11,430,4.497,435,3.584,508,5.05,546,4.055,561,4.924,699,4.924,764,3.706,855,4.924,859,5.296,860,3.332,861,5.678,862,6.376,863,6.376,864,6.376,865,4.275,866,4.275,867,5.678,868,5.678,869,6.794,870,4.275,871,4.275,872,6.794,873,5.678,874,4.275,875,4.275,876,4.924,877,3.706,878,4.275,879,4.275,880,4.275,881,4.924,882,4.924,883,4.924,884,3.706,885,5.678,886,4.275,887,5.678,888,5.678,889,4.275,890,4.275]],["title/interfaces/PostType.html",[0,0.099,81,1.204]],["body/interfaces/PostType.html",[0,0.197,1,2.138,2,0.728,3,0.118,4,0.092,5,0.105,6,0.956,7,0.159,8,0.677,10,0.884,11,0.728,12,1.292,13,0.919,14,0.956,15,0.994,16,0.956,17,0.818,18,1.36,19,0.25,20,0.015,21,0.756,22,1.454,23,1.105,24,1.397,25,0.145,26,0.385,27,0.298,28,0.008,29,1.343,30,1.343,31,1.343,32,1.343,33,1.343,34,1.343,35,1.343,36,1.383,37,2.258,38,1.035,39,1.716,40,1.035,41,1.035,42,1.035,43,1.035,44,1.035,45,1.035,46,0.956,47,1.035,48,0.994,49,0.884,50,1.774,51,1.035,52,0.7,53,1.513,54,1.035,55,1.652,56,1.035,57,1.035,58,1.035,59,1.035,60,1.035,61,1.035,62,1.035,63,1.035,64,1.035,65,1.035,66,1.035,67,1.788,68,1.513,69,1.035,70,1.035,71,1.035,72,1.527,73,1.035,74,1.035,75,1.513,76,1.035,77,1.035,78,1.035,79,1.035,80,1.035,81,2.138,82,1.967,83,1.397,84,1.397,85,1.035,86,1.035,87,1.035,88,1.035,89,1.035,90,1.035,91,1.035,92,1.035,93,1.035,94,1.513,95,1.035,96,1.035,97,1.035,98,0.956,99,1.035,100,1.035,101,1.817,102,1.035,103,1.035,104,1.035,105,1.035,106,1.035,107,1.035,108,1.035,109,1.035,110,0.919,111,1.035,112,1.035,113,1.035,114,1.035,115,0.297,116,1.035,117,1.035,118,1.035,119,1.035,120,1.035,121,0.956,122,1.652,123,1.035,124,1.035,125,1.035,126,1.397,127,1.397,128,1.035,129,1.035,130,1.035,131,0.673,132,0.008,133,0.006]],["title/interfaces/PostedByUser.html",[0,0.099,83,1.204]],["body/interfaces/PostedByUser.html",[0,0.197,1,2.116,2,0.701,3,0.114,4,0.088,5,0.101,6,0.921,7,0.154,8,0.659,10,0.852,11,0.701,12,1.258,13,0.886,14,0.921,15,0.958,16,0.921,17,0.788,18,1.356,19,0.291,20,0.015,21,0.729,22,1.415,23,1.106,24,1.36,25,0.14,26,0.371,27,0.296,28,0.008,29,1.308,30,1.308,31,1.308,32,1.308,33,1.308,34,1.308,35,1.308,36,1.359,37,2.232,38,0.997,39,1.696,40,0.997,41,0.997,42,0.997,43,0.997,44,0.997,45,0.997,46,0.921,47,0.997,48,0.958,49,0.852,50,1.804,51,0.997,52,0.674,53,2.062,54,0.997,55,1.993,56,0.997,57,0.997,58,0.997,59,0.997,60,0.997,61,0.997,62,0.997,63,0.997,64,0.997,65,0.997,66,0.997,67,2.158,68,2.062,69,0.997,70,0.997,71,0.997,72,1.843,73,0.997,74,0.997,75,2.062,76,0.997,77,0.997,78,0.997,79,0.997,80,0.997,81,1.785,82,0.997,83,1.617,84,1.36,85,0.997,86,0.997,87,0.997,88,0.997,89,0.997,90,0.997,91,0.997,92,0.997,93,0.997,94,1.473,95,0.997,96,0.997,97,0.997,98,0.921,99,0.997,100,0.997,101,1.785,102,0.997,103,0.997,104,0.997,105,0.997,106,0.997,107,0.997,108,0.997,109,0.997,110,0.886,111,0.997,112,0.997,113,0.997,114,0.997,115,0.286,116,0.997,117,0.997,118,0.997,119,0.997,120,0.997,121,0.921,122,1.617,123,0.997,124,0.997,125,0.997,126,1.36,127,1.36,128,0.997,129,0.997,130,0.997,131,0.648,132,0.008,133,0.006]],["title/classes/QueryFailedFilter.html",[153,0.274,891,3.056]],["body/classes/QueryFailedFilter.html",[3,0.162,4,0.126,5,0.144,7,0.219,9,0.961,13,1.677,16,1.313,19,0.181,20,0.015,24,1.313,25,0.265,26,0.529,27,0.162,28,0.008,39,1.08,115,0.609,132,0.011,133,0.008,138,1.613,141,1,143,1.168,153,0.299,155,2.644,183,1.214,186,2.829,212,2.551,231,2.545,240,1.677,269,1.607,345,1.542,347,3.053,348,2.829,367,2.345,368,3.053,393,2.951,467,4.221,623,5.513,645,5.783,646,5.783,891,4.426,892,4.924,893,3.332,894,5.529,895,3.706,896,7.072,897,7.072,898,7.072,899,7.072,900,7.072,901,7.072,902,5.529,903,5.891,904,4.275,905,5.529,906,3.706,907,3.706,908,3.706,909,2.829,910,3.706,911,4.426,912,3.706,913,5.678,914,4.924,915,6.376,916,5.678,917,3.332,918,3.706,919,3.706]],["title/guards/RequestGuard.html",[920,2.8,921,3.056]],["body/guards/RequestGuard.html",[3,0.175,4,0.136,5,0.155,7,0.236,9,1.342,19,0.252,20,0.015,23,0.812,25,0.279,26,0.571,27,0.175,28,0.009,50,1.396,115,0.57,132,0.011,133,0.009,138,1.695,141,1.396,143,1.631,144,1.89,145,1.89,153,0.323,156,2.033,183,1.695,212,2.387,215,1.975,240,1.362,254,3.053,257,3.951,288,2.834,351,4.263,478,2.067,557,2.531,611,2.397,620,3.294,624,2.397,639,2.277,682,4,768,4.328,771,3.691,772,3.846,909,4.797,920,3.294,921,4.653,922,3.596,923,4,924,5.969,925,6.284,926,5.969,927,4.613,928,5.176,929,4,930,4.613,931,4.613,932,6.617,933,4.613,934,4.613,935,4.613,936,4.613,937,4.613,938,4.613,939,4.613,940,5.969,941,3.596,942,4.613,943,4.613]],["title/interfaces/RescueLists.html",[0,0.099,121,1.204]],["body/interfaces/RescueLists.html",[0,0.198,1,2.144,2,0.734,3,0.119,4,0.093,5,0.106,6,0.965,7,0.161,8,0.682,10,0.892,11,0.734,12,1.301,13,0.928,14,0.965,15,1.004,16,0.965,17,0.825,18,1.356,19,0.229,20,0.015,21,0.764,22,1.464,23,1.103,24,1.407,25,0.147,26,0.389,27,0.298,28,0.009,29,1.353,30,1.353,31,1.353,32,1.353,33,1.353,34,1.353,35,1.353,36,1.389,37,2.264,38,1.044,39,1.721,40,1.044,41,1.044,42,1.044,43,1.044,44,1.044,45,1.044,46,0.965,47,1.044,48,1.004,49,0.892,50,1.777,51,1.044,52,0.706,53,1.523,54,1.044,55,1.66,56,1.044,57,1.044,58,1.044,59,1.044,60,1.044,61,1.044,62,1.044,63,1.044,64,1.044,65,1.044,66,1.044,67,1.798,68,1.523,69,1.044,70,1.044,71,1.044,72,1.535,73,1.044,74,1.044,75,1.523,76,1.044,77,1.044,78,1.044,79,1.044,80,1.044,81,1.825,82,1.044,83,1.407,84,1.407,85,1.044,86,1.044,87,1.044,88,1.044,89,1.044,90,1.044,91,1.044,92,1.044,93,1.044,94,1.523,95,1.044,96,1.044,97,1.044,98,0.965,99,1.044,100,1.044,101,2.186,102,1.044,103,1.044,104,1.044,105,1.044,106,1.044,107,1.044,108,1.044,109,1.044,110,0.928,111,1.044,112,1.044,113,1.044,114,1.044,115,0.3,116,1.044,117,1.044,118,1.044,119,1.044,120,1.044,121,1.407,122,1.66,123,1.044,124,1.044,125,1.044,126,1.407,127,1.407,128,1.044,129,1.044,130,1.044,131,0.679,132,0.009,133,0.006]],["title/interfaces/Rescues.html",[0,0.099,101,1.204]],["body/interfaces/Rescues.html",[0,0.195,1,2.077,2,0.658,3,0.107,4,0.083,5,0.095,6,0.865,7,0.144,8,0.629,10,0.799,11,0.658,12,1.2,13,0.831,14,0.865,15,0.899,16,0.865,17,0.74,18,1.357,19,0.32,20,0.015,21,0.684,22,1.35,23,1.11,24,1.297,25,0.131,26,0.348,27,0.294,28,0.008,29,1.247,30,1.247,31,1.247,32,1.247,33,1.247,34,1.247,35,1.247,36,1.317,37,2.186,38,0.936,39,1.661,40,0.936,41,0.936,42,0.936,43,0.936,44,0.936,45,0.936,46,0.865,47,0.936,48,0.899,49,0.799,50,1.744,51,0.936,52,0.633,53,1.405,54,0.936,55,1.557,56,0.936,57,0.936,58,0.936,59,0.936,60,0.936,61,0.936,62,0.936,63,0.936,64,0.936,65,0.936,66,0.936,67,1.686,68,1.405,69,0.936,70,0.936,71,0.936,72,1.44,73,0.936,74,0.936,75,1.405,76,0.936,77,0.936,78,0.936,79,0.936,80,0.936,81,1.73,82,0.936,83,1.297,84,1.297,85,0.936,86,0.936,87,0.936,88,0.936,89,0.936,90,0.936,91,0.936,92,0.936,93,0.936,94,1.405,95,0.936,96,0.936,97,0.936,98,0.865,99,0.936,100,0.936,101,1.854,102,1.873,103,1.873,104,1.873,105,1.873,106,1.873,107,1.873,108,1.873,109,1.873,110,1.497,111,1.873,112,1.873,113,1.873,114,0.936,115,0.269,116,0.936,117,0.936,118,0.936,119,1.873,120,1.873,121,0.865,122,1.557,123,0.936,124,0.936,125,0.936,126,1.297,127,1.297,128,0.936,129,0.936,130,0.936,131,0.608,132,0.008,133,0.005,944,4.223]],["title/interfaces/Response.html",[0,0.099,39,0.991]],["body/interfaces/Response.html",[0,0.135,2,1.246,3,0.202,4,0.157,5,0.18,7,0.273,8,0.973,11,1.769,19,0.225,20,0.015,21,1.719,25,0.33,26,0.66,27,0.248,28,0.01,39,1.652,132,0.012,133,0.01,144,2.183,145,2.183,153,0.373,156,1.637,189,2.631,190,2.505,191,2.924,240,1.574,478,2.264,611,2.77,613,3.296,624,2.77,625,3.806,639,3.227,766,3.806,768,4.043,769,4.669,771,3.296,772,3.8,773,4.669,774,3.528,945,4.155,946,3.806,947,4.621]],["title/guards/ResponseGuard.html",[920,2.8,948,3.056]],["body/guards/ResponseGuard.html",[3,0.154,4,0.119,5,0.136,7,0.207,9,1.232,11,1.624,12,1.763,13,1.964,19,0.232,20,0.015,23,0.745,25,0.256,26,0.502,27,0.154,28,0.008,36,0.947,39,1.755,50,1.281,115,0.523,132,0.01,133,0.008,138,1.556,141,1.281,143,1.497,144,1.66,145,1.66,153,0.283,156,2.199,183,1.556,189,2,190,1.904,212,1.462,215,2.658,240,1.197,254,4.401,257,3.626,282,3.159,336,1.735,348,4.108,351,3.912,478,1.897,557,2.223,611,2.106,620,4.432,622,5.414,624,2.106,639,2,768,4.112,771,3.388,772,3.607,911,5.58,917,4.838,922,3.159,925,6.022,928,4.75,929,3.513,941,3.159,948,4.27,949,3.513,950,5.478,951,5.478,952,4.052,953,4.052,954,4.052,955,4.052,956,5.478,957,6.207,958,4.052,959,4.052,960,4.052,961,4.052,962,4.052,963,4.052,964,4.052,965,4.052,966,5.478,967,4.052,968,4.052,969,5.478,970,5.478,971,4.052,972,4.052,973,4.052,974,4.052,975,4.052]],["title/classes/Tag.html",[153,0.274,389,1.935]],["body/classes/Tag.html",[0,0.089,3,0.134,4,0.104,5,0.119,7,0.18,8,0.933,9,1.297,18,0.597,19,0.33,20,0.015,23,0.959,25,0.309,27,0.219,28,0.007,36,0.824,115,0.708,131,1.247,132,0.009,133,0.007,138,1.413,140,1.657,141,1.754,143,0.963,150,1.272,153,0.438,154,2.676,183,1.001,225,2.456,231,1.58,240,1.703,269,1.326,275,2.083,287,3.625,288,2.829,289,1.832,302,2.944,313,3.363,316,4.118,317,4.118,318,3.553,319,3.293,320,3.553,321,4.118,322,2.038,323,3.879,326,2.517,329,2.892,333,2.517,334,3.553,335,2.73,336,2.683,338,2.748,342,1.51,345,1.272,373,2.049,374,2.333,375,3.874,378,2.73,379,1.934,380,1.832,381,1.74,382,2.456,383,2.73,384,3.164,385,3.164,386,1.74,387,3.762,388,1.934,389,2.456,390,2.847,391,3.077,392,1.934,393,2.997,394,1.934,395,1.934,396,1.934,397,1.934,398,1.934,399,1.934,400,1.934,401,1.934,402,1.934,403,1.934,404,2.73,405,3.293,406,2.73,407,1.934,408,1.934,409,2.049,410,2.517,976,3.525,977,3.525,978,3.525,979,6.24,980,3.057,981,3.057,982,3.057,983,3.057,984,3.057,985,3.057,986,3.057,987,3.057]],["title/controllers/TagsController.html",[134,2.037,988,2.8]],["body/controllers/TagsController.html",[3,0.154,4,0.119,5,0.136,7,0.207,9,1.494,18,1.278,19,0.281,20,0.015,25,0.31,26,0.501,27,0.154,28,0.008,115,0.634,132,0.01,133,0.008,134,2.102,136,2.219,138,1.554,140,3.262,141,1.623,143,1.896,144,1.657,145,1.657,146,2.677,147,2.889,149,2.889,150,1.459,153,0.283,154,1.459,155,2.501,156,2.132,183,1.887,190,1.901,275,2.379,322,3.229,373,3.861,389,2.701,391,2.501,409,3.861,526,3.18,527,3.835,528,3.861,530,3.604,539,4.834,542,2.677,543,4.265,549,4.265,551,2.219,553,4.265,555,3.153,556,4.265,557,2.219,562,2.889,566,3.153,568,3.153,572,3.507,577,3.18,597,2.501,644,3.153,736,3.507,737,3.507,800,3.153,988,3.908,989,3.507,990,3.507,991,4.045,992,4.045,993,4.045,994,4.045,995,6.644,996,4.045,997,5.761,998,3.507,999,3.384,1000,3.507,1001,4.045,1002,4.045,1003,3.507,1004,3.507,1005,3.507,1006,4.045,1007,4.045,1008,3.507]],["title/modules/TagsModule.html",[159,1.843,172,2.595]],["body/modules/TagsModule.html",[3,0.205,4,0.159,5,0.182,20,0.015,25,0.332,26,0.669,27,0.205,28,0.01,132,0.012,133,0.01,136,3.617,153,0.378,159,3.344,161,2.965,162,3.141,163,3.577,164,3.577,165,3.141,166,3.904,167,4.401,172,5.179,174,4.364,175,3.577,176,3.577,988,5.081,999,4.994,1000,4.685,1009,4.685,1010,4.685,1011,4.685,1012,5.404,1013,5.404]],["title/injectables/TagsService.html",[478,1.358,999,2.425]],["body/injectables/TagsService.html",[3,0.163,4,0.127,5,0.145,7,0.22,9,1.592,18,1.293,19,0.288,20,0.015,25,0.298,26,0.531,27,0.163,28,0.008,115,0.676,132,0.011,133,0.008,138,1.617,141,1.702,143,1.934,153,0.3,156,2.235,183,2.011,252,3.72,275,2.263,322,3.265,345,1.548,355,2.354,389,3.665,478,1.971,479,2.354,526,3.308,527,3.52,528,3.954,530,3.308,531,2.653,542,3.768,551,3.123,577,3.308,597,3.52,720,3.72,811,3.344,990,4.936,998,3.72,999,3.52,1014,3.72,1015,4.29,1016,5.899,1017,4.29,1018,4.29,1019,4.29,1020,4.29,1021,4.29,1022,4.29,1023,3.72,1024,4.29,1025,4.29,1026,4.29,1027,4.29,1028,4.29,1029,4.29,1030,4.29,1031,4.29,1032,4.29,1033,4.29,1034,4.29,1035,4.29,1036,4.29]],["title/injectables/TimeoutInterceptor.html",[478,1.358,1037,3.056]],["body/injectables/TimeoutInterceptor.html",[3,0.186,4,0.145,5,0.165,7,0.251,9,1.103,19,0.207,20,0.015,25,0.318,26,0.607,27,0.186,28,0.009,115,0.468,132,0.012,133,0.009,138,1.763,141,1.147,143,1.34,153,0.343,156,2.092,183,1.393,240,1.448,288,2.658,311,2.69,478,2.149,479,2.69,490,6.403,610,4.252,611,2.548,613,3.033,639,3.362,766,4.433,767,4.839,768,4.427,769,5.112,771,3.033,772,3.958,773,4.433,775,4.252,909,4.508,941,3.823,1037,4.839,1038,4.252,1039,6.207,1040,6.207,1041,6.207,1042,6.207,1043,5.382,1044,4.904,1045,6.207,1046,6.207,1047,4.904,1048,4.904,1049,4.904,1050,4.904,1051,4.904,1052,4.904,1053,4.904,1054,4.904,1055,4.904]],["title/injectables/TransformInterceptor.html",[478,1.358,946,2.8]],["body/injectables/TransformInterceptor.html",[0,0.131,3,0.196,4,0.153,5,0.174,7,0.265,9,1.164,11,1.501,19,0.219,20,0.015,21,1.258,25,0.326,26,0.641,27,0.244,28,0.01,39,1.308,115,0.494,132,0.012,133,0.01,138,1.824,141,1.21,143,1.414,144,2.12,145,2.12,153,0.362,156,1.59,183,1.47,189,2.555,190,2.433,191,2.84,240,1.529,478,2.223,479,2.84,611,2.69,613,3.201,624,2.69,625,3.696,639,3.603,766,4.985,767,4.035,768,4.514,769,5.212,771,3.971,772,4.057,773,4.585,774,3.426,945,4.035,946,4.585,947,4.488,1056,5.176]],["title/classes/UpdateTagsDto.html",[153,0.274,409,2.279]],["body/classes/UpdateTagsDto.html",[0,0.121,3,0.18,4,0.14,5,0.16,8,0.708,19,0.299,20,0.015,23,0.963,25,0.342,27,0.255,28,0.009,115,0.698,131,1.316,132,0.011,133,0.009,150,1.715,153,0.495,154,2.195,225,2.347,231,2.131,240,1.797,269,1.788,275,1.581,302,3.155,313,2.728,336,2.036,342,2.036,345,1.715,373,2.763,374,3.147,375,4.151,378,3.339,379,2.608,380,2.471,381,2.347,382,3.004,383,3.339,384,3.339,385,3.339,386,2.347,387,3.683,388,2.608,389,2.347,390,2.347,391,2.94,392,2.608,393,3.489,394,2.608,395,2.608,396,2.608,397,2.608,398,2.608,399,2.608,400,2.608,401,2.608,402,2.608,403,2.608,404,2.608,405,3.147,406,2.608,407,2.608,408,2.608,409,3.537,410,3.395]],["title/classes/UpdateUserDto.html",[153,0.274,471,2.279]],["body/classes/UpdateUserDto.html",[0,0.089,3,0.133,4,0.104,5,0.118,8,0.523,19,0.309,20,0.015,23,1.081,25,0.308,27,0.218,28,0.007,49,1.777,50,1.463,52,0.79,72,1.874,115,0.55,131,1.073,132,0.009,133,0.007,150,1.268,153,0.438,154,2.077,212,1.791,215,1.505,225,1.735,231,1.576,240,1.466,269,1.322,275,1.169,289,3.43,293,2.326,299,2.451,302,3.38,313,2.226,336,1.505,342,1.505,345,1.268,353,2.174,355,1.928,378,2.724,379,1.928,380,1.826,381,1.735,382,3.381,383,3.621,384,3.758,385,3.758,386,1.735,387,3.159,388,1.928,390,1.735,392,1.928,393,2.992,394,1.928,395,1.928,396,1.928,397,2.724,398,1.928,399,1.928,400,1.928,401,1.928,402,1.928,403,1.928,404,1.928,406,3.621,407,3.432,408,1.928,411,2.043,412,2.326,413,3.56,414,4.892,415,4.892,416,4.892,417,2.51,430,3.286,431,3.546,432,3.546,433,4.468,434,2.174,435,1.652,436,3.546,437,2.51,438,2.326,439,2.51,440,2.51,441,2.51,442,2.51,443,2.51,444,2.51,445,2.51,446,2.51,447,3.546,448,2.51,449,3.546,450,2.51,451,2.51,452,2.326,453,2.51,454,2.326,455,2.51,456,2.51,457,2.51,458,2.51,459,2.51,460,2.51,461,2.326,462,2.51,463,2.51,464,2.51,465,2.51,466,2.51,467,3.286,468,2.51,469,2.51,470,2.51,471,2.886,472,2.51]],["title/classes/User.html",[52,0.882,153,0.274]],["body/classes/User.html",[0,0.06,3,0.09,4,0.07,5,0.08,7,0.121,8,0.766,9,1.024,18,0.401,19,0.332,20,0.015,23,1.069,25,0.261,27,0.173,28,0.004,36,0.554,49,1.757,50,1.384,52,0.832,72,1.868,115,0.591,131,0.985,132,0.007,133,0.004,138,1.051,141,1.717,143,0.647,150,0.854,153,0.36,154,2.547,183,0.673,212,1.857,215,1.585,225,1.827,231,1.062,240,1.345,269,0.891,275,1.712,287,3.248,288,2.535,289,3.496,293,2.45,299,2.541,302,3.008,313,3.072,316,3.252,317,3.252,318,2.643,319,2.45,320,2.643,321,3.252,322,1.516,323,2.885,326,1.692,329,2.151,333,1.692,334,2.643,335,2.03,336,2.205,338,1.846,342,1.014,345,0.854,353,2.289,355,1.3,378,2.03,379,1.3,380,1.231,381,1.169,382,2.922,383,3.064,384,3.76,385,3.76,386,1.169,387,3.248,388,1.3,390,2.248,392,1.3,393,2.367,394,1.3,395,1.3,396,1.3,397,2.03,398,1.3,399,1.3,400,1.3,401,1.3,402,1.3,403,1.3,404,2.03,406,3.69,407,2.824,408,1.3,411,1.377,412,1.568,413,3.184,414,4.895,415,4.895,416,4.895,417,1.692,430,2.45,431,2.643,432,2.643,433,4.417,434,2.289,435,1.739,436,3.676,437,2.643,438,2.45,439,1.692,440,1.692,441,1.692,442,1.692,443,2.643,444,2.643,445,2.643,446,2.643,447,3.676,448,2.643,449,3.676,450,2.643,451,2.643,452,2.45,453,2.643,454,2.45,455,2.643,456,2.643,457,2.643,458,2.643,459,2.643,460,2.643,461,2.45,462,2.643,463,2.643,464,2.643,465,2.643,466,2.643,467,3.408,468,2.643,469,2.643,470,1.692,471,1.377,472,1.692,979,5.549,980,2.054,981,2.054,982,2.054,983,2.054,984,2.054,985,2.054,986,2.054,987,2.054,1057,2.369,1058,2.369,1059,2.369,1060,2.369,1061,2.369,1062,2.369,1063,2.369,1064,2.369,1065,2.369]],["title/interfaces/UserPost.html",[0,0.099,84,1.204]],["body/interfaces/UserPost.html",[0,0.194,1,2.064,2,0.645,3,0.105,4,0.081,5,0.093,6,0.847,7,0.141,8,0.619,10,0.783,11,0.645,12,1.181,13,0.815,14,0.847,15,0.881,16,0.847,17,0.725,18,1.355,19,0.317,20,0.015,21,0.671,22,1.329,23,1.108,24,1.278,25,0.129,26,0.341,27,0.293,28,0.008,29,1.228,30,1.228,31,1.228,32,1.228,33,1.228,34,1.228,35,1.228,36,1.638,37,2.171,38,0.917,39,1.65,40,0.917,41,0.917,42,0.917,43,0.917,44,0.917,45,0.917,46,0.847,47,0.917,48,0.881,49,0.783,50,1.783,51,0.917,52,0.62,53,1.383,54,0.917,55,1.538,56,0.917,57,0.917,58,0.917,59,0.917,60,0.917,61,0.917,62,0.917,63,0.917,64,0.917,65,0.917,66,0.917,67,1.665,68,1.383,69,0.917,70,0.917,71,0.917,72,1.422,73,0.917,74,0.917,75,1.383,76,0.917,77,0.917,78,0.917,79,0.917,80,0.917,81,2.112,82,0.917,83,1.713,84,1.538,85,1.854,86,1.854,87,1.854,88,1.854,89,1.854,90,1.854,91,1.854,92,1.854,93,1.854,94,1.99,95,1.854,96,1.854,97,1.854,98,0.847,99,0.917,100,0.917,101,1.713,102,0.917,103,0.917,104,0.917,105,0.917,106,0.917,107,0.917,108,0.917,109,0.917,110,0.815,111,0.917,112,0.917,113,0.917,114,0.917,115,0.263,116,0.917,117,0.917,118,0.917,119,0.917,120,0.917,121,0.847,122,1.538,123,0.917,124,0.917,125,0.917,126,1.278,127,1.278,128,0.917,129,0.917,130,0.917,131,0.596,132,0.008,133,0.005]],["title/interfaces/UserPosts.html",[0,0.099,98,1.204]],["body/interfaces/UserPosts.html",[0,0.197,1,2.138,2,0.728,3,0.118,4,0.092,5,0.105,6,0.956,7,0.159,8,0.677,10,0.884,11,0.728,12,1.292,13,0.919,14,0.956,15,0.994,16,0.956,17,0.818,18,1.355,19,0.25,20,0.015,21,0.756,22,1.454,23,1.103,24,1.397,25,0.145,26,0.385,27,0.298,28,0.008,29,1.343,30,1.343,31,1.343,32,1.343,33,1.343,34,1.343,35,1.343,36,1.383,37,2.258,38,1.035,39,1.716,40,1.035,41,1.035,42,1.035,43,1.035,44,1.035,45,1.035,46,0.956,47,1.035,48,0.994,49,0.884,50,1.796,51,1.035,52,0.7,53,1.513,54,1.035,55,1.652,56,1.035,57,1.035,58,1.035,59,1.035,60,1.035,61,1.035,62,1.035,63,1.035,64,1.035,65,1.035,66,1.035,67,1.788,68,1.513,69,1.035,70,1.035,71,1.035,72,1.527,73,1.035,74,1.035,75,1.513,76,1.035,77,1.035,78,1.035,79,1.035,80,1.035,81,1.817,82,1.035,83,1.397,84,1.817,85,1.035,86,1.035,87,1.035,88,1.035,89,1.035,90,1.035,91,1.035,92,1.035,93,1.035,94,1.513,95,1.035,96,1.035,97,1.035,98,1.397,99,1.967,100,1.967,101,1.817,102,1.035,103,1.035,104,1.035,105,1.035,106,1.035,107,1.035,108,1.035,109,1.035,110,0.919,111,1.035,112,1.035,113,1.035,114,1.035,115,0.297,116,1.035,117,1.035,118,1.035,119,1.035,120,1.035,121,0.956,122,1.652,123,1.035,124,1.035,125,1.035,126,1.397,127,1.397,128,1.035,129,1.035,130,1.035,131,0.673,132,0.008,133,0.006]],["title/controllers/UsersController.html",[134,2.037,1066,2.8]],["body/controllers/UsersController.html",[3,0.133,4,0.103,5,0.118,7,0.179,9,1.404,18,1.238,19,0.264,20,0.015,25,0.292,26,0.433,27,0.133,28,0.007,52,1.538,115,0.596,132,0.009,133,0.007,134,1.818,136,1.92,138,1.406,140,3.096,141,1.54,143,1.8,144,1.433,145,1.433,146,2.316,147,2.499,149,2.499,150,1.262,153,0.245,154,1.262,155,2.164,156,2.024,183,1.773,190,1.644,191,1.92,231,1.568,244,3.034,275,2.569,311,4.063,322,3.165,367,2.715,411,3.629,434,4.803,435,1.644,471,3.629,526,3.975,527,4.074,528,3.629,530,4.087,539,3.858,543,2.727,549,2.727,551,1.92,553,2.727,555,2.727,556,3.858,557,1.92,562,2.499,566,2.727,568,2.727,577,2.877,597,2.164,644,2.727,800,2.727,997,5.414,1003,3.034,1004,3.034,1005,3.034,1008,3.034,1066,3.534,1067,3.034,1068,4.291,1069,3.034,1070,6.588,1071,4.949,1072,3.499,1073,3.499,1074,3.499,1075,3.499,1076,7.562,1077,3.499,1078,3.499,1079,3.034,1080,3.499,1081,3.499,1082,6.244,1083,3.499,1084,3.499,1085,6.84,1086,3.034,1087,3.061,1088,3.034,1089,3.499,1090,3.499,1091,6.588,1092,3.499,1093,3.499,1094,3.499]],["title/modules/UsersModule.html",[159,1.843,173,2.595]],["body/modules/UsersModule.html",[3,0.205,4,0.159,5,0.182,20,0.015,25,0.332,26,0.669,27,0.205,28,0.01,132,0.012,133,0.01,136,3.617,153,0.378,159,3.344,161,2.965,162,3.141,163,3.577,164,3.577,165,3.141,166,3.904,167,4.401,173,5.179,174,4.364,175,3.577,176,3.577,1066,5.081,1087,4.994,1088,4.685,1095,4.685,1096,4.685,1097,4.685,1098,5.404,1099,5.404]],["title/injectables/UsersService.html",[478,1.358,1087,2.425]],["body/injectables/UsersService.html",[3,0.166,4,0.129,5,0.147,7,0.223,9,1.601,18,1.297,19,0.29,20,0.015,25,0.301,26,0.54,27,0.166,28,0.008,48,1.394,52,1.722,115,0.68,132,0.011,133,0.008,138,1.635,141,1.71,143,1.945,153,0.305,156,2.187,183,2.022,275,2.278,322,3.26,345,1.574,478,1.993,479,2.393,526,3.345,528,3.98,530,3.345,531,2.698,551,3.158,577,3.345,597,3.559,811,3.401,1016,5.938,1023,3.783,1068,4.99,1069,4.99,1079,4.99,1086,3.783,1087,3.559,1100,3.783,1101,4.363,1102,4.363,1103,4.363,1104,4.363,1105,4.363,1106,4.363,1107,4.363,1108,4.363,1109,4.363,1110,4.363,1111,4.363,1112,4.363,1113,4.363,1114,4.363,1115,4.363]],["title/classes/ValidationFailedFilter.html",[153,0.274,1116,3.056]],["body/classes/ValidationFailedFilter.html",[3,0.188,4,0.146,5,0.167,7,0.253,9,1.112,11,1.459,13,1.843,16,1.917,19,0.289,20,0.015,24,1.519,25,0.291,26,0.612,27,0.188,28,0.009,39,1.25,115,0.472,132,0.012,133,0.009,138,1.772,141,1.156,143,1.351,153,0.346,155,3.058,183,1.405,186,3.273,212,2.671,240,1.843,269,1.86,345,1.784,367,2.713,368,3.532,623,5.33,645,3.855,646,3.855,893,3.855,894,5.929,895,5.411,902,5.929,903,6.226,905,5.411,906,4.288,907,4.288,908,4.288,909,3.273,910,4.288,911,4.865,912,4.288,917,3.855,918,4.288,919,4.288,1116,4.865,1117,5.411,1118,7.181,1119,4.945,1120,4.945,1121,6.24,1122,4.945,1123,4.945]],["title/coverage.html",[1124,4.176]],["body/coverage.html",[0,0.2,1,0.845,5,0.093,6,2.353,19,0.116,20,0.015,28,0.005,29,0.813,30,0.813,31,0.813,32,0.813,33,0.813,34,0.813,35,0.813,39,0.695,46,0.845,52,0.934,55,0.845,81,0.845,83,0.845,84,0.845,98,0.845,101,0.845,121,0.845,122,0.845,126,0.845,127,0.845,132,0.008,133,0.005,134,2.894,135,1.965,137,2.386,153,0.52,165,1.599,166,1.51,177,2.145,178,1.965,213,2.145,254,4.875,268,2.145,270,2.386,271,2.386,313,1.233,314,3.237,315,1.965,329,1.599,367,1.51,373,1.599,374,3.686,375,1.702,382,1.358,389,1.358,390,2.05,409,1.599,411,1.599,412,3.686,413,1.702,438,1.821,461,1.821,471,1.599,475,1.821,478,2.259,480,2.386,508,5.851,524,2.145,525,2.386,534,1.702,536,1.965,546,1.965,574,2.386,656,4.341,709,2.145,710,2.386,735,3.898,743,2.145,744,2.145,759,2.145,760,2.386,761,2.386,762,2.386,776,2.145,777,2.386,778,2.386,779,2.386,788,2.386,841,3.237,850,2.568,854,2.386,856,2.145,857,2.386,858,2.386,859,2.145,860,2.145,884,3.6,891,2.145,892,2.386,893,3.237,914,2.386,920,2.965,921,2.145,923,2.386,945,3.237,946,1.965,948,2.145,949,2.386,988,1.965,989,2.386,999,1.702,1014,2.386,1037,2.145,1038,2.386,1066,1.965,1067,2.386,1087,1.702,1100,2.386,1116,2.145,1117,2.386,1124,2.145,1125,2.752,1126,2.752,1127,6.872,1128,6.523,1129,7.695,1130,5,1131,6.523,1132,2.752,1133,2.752,1134,2.752,1135,5.977,1136,2.752,1137,2.752,1138,2.752,1139,6.284,1140,2.386,1141,2.386,1142,2.386,1143,2.386,1144,2.145,1145,2.752,1146,2.752,1147,3.898,1148,3.6,1149,3.6,1150,3.898,1151,5,1152,2.386,1153,5,1154,2.386,1155,2.386,1156,2.386,1157,3.6,1158,2.386,1159,2.386,1160,6.872,1161,2.752,1162,2.752,1163,2.752,1164,4.152,1165,4.152,1166,4.152,1167,4.829,1168,2.386,1169,2.386,1170,2.386,1171,2.752,1172,2.752,1173,2.752,1174,2.752]],["title/dependencies.html",[162,2.742,1175,3.271]],["body/dependencies.html",[4,0.135,20,0.015,26,0.567,28,0.009,132,0.011,133,0.009,150,1.651,153,0.415,154,1.651,162,2.66,199,3.568,201,3.568,203,3.568,205,3.968,308,3.452,345,2.517,347,3.268,348,3.029,350,3.568,380,2.378,381,2.259,386,2.259,609,3.968,611,2.378,679,3.568,712,3.968,739,3.268,752,3.568,774,3.029,808,3.968,876,3.968,877,3.968,909,3.029,1144,4.629,1176,4.577,1177,6.593,1178,4.577,1179,4.577,1180,4.577,1181,4.577,1182,4.577,1183,5.939,1184,6.593,1185,4.577,1186,4.577,1187,5.939,1188,4.577,1189,4.577,1190,4.577,1191,4.577,1192,4.577,1193,4.577,1194,6.593,1195,6.593,1196,4.577,1197,5.939,1198,4.577,1199,4.577,1200,4.577,1201,4.577,1202,4.577,1203,4.577,1204,4.577,1205,4.577,1206,4.577,1207,4.577,1208,4.577,1209,4.577,1210,4.577,1211,4.577,1212,4.577,1213,4.577,1214,4.577,1215,5.939,1216,4.577,1217,4.577,1218,4.577,1219,4.577,1220,4.577,1221,4.577,1222,4.577,1223,4.577,1224,4.577,1225,3.568,1226,4.577,1227,4.577,1228,4.577,1229,4.577,1230,4.577,1231,4.577]],["title/miscellaneous/enumerations.html",[1232,1.795,1233,4.09]],["body/miscellaneous/enumerations.html",[7,0.313,20,0.014,28,0.011,132,0.013,133,0.011,288,3.038,859,4.764,860,5.53,881,6.152,882,6.152,883,6.152,1232,3.353,1233,5.299,1234,6.112]],["title/miscellaneous/functions.html",[1232,1.795,1235,4.09]],["body/miscellaneous/functions.html",[7,0.224,9,1.774,19,0.29,20,0.015,28,0.008,50,1.507,115,0.753,132,0.011,133,0.008,143,2.038,165,3.747,183,2.24,257,4.537,288,3.194,336,1.872,382,2.845,656,3.407,680,5.025,681,3.79,683,4.492,684,3.79,739,5.224,1140,3.79,1141,4.997,1147,3.407,1148,5.943,1149,5.943,1150,3.407,1152,4.997,1154,4.997,1155,3.79,1156,4.997,1157,5.943,1158,3.79,1159,4.997,1167,3.79,1168,4.997,1169,4.997,1170,4.997,1232,2.398,1235,3.79,1236,6.854,1237,4.997,1238,4.997,1239,6.447,1240,4.371,1241,4.371,1242,4.371,1243,4.371,1244,5.59,1245,4.371,1246,4.371,1247,5.762,1248,5.762,1249,4.371,1250,5.762,1251,4.371]],["title/index.html",[7,0.167,1252,3.271,1253,3.271]],["body/index.html",[4,0.151,20,0.015,28,0.01,132,0.012,133,0.01,189,2.521,227,3.982,228,4.964,258,6.017,311,2.802,487,6.609,581,3.982,1043,4.429,1124,3.982,1225,3.982,1244,4.429,1254,5.108,1255,5.108,1256,6.368,1257,5.108,1258,5.108,1259,5.108,1260,5.108,1261,5.108,1262,5.108,1263,5.108,1264,5.108,1265,7.731,1266,5.108,1267,5.108,1268,5.108,1269,5.108,1270,6.368,1271,5.108,1272,5.108,1273,5.108,1274,6.368,1275,5.108,1276,5.108,1277,5.108,1278,6.368,1279,6.368,1280,5.108,1281,5.108,1282,5.108,1283,5.108,1284,5.108,1285,5.108,1286,5.108,1287,5.108,1288,5.108,1289,5.108,1290,5.108,1291,5.108,1292,5.108,1293,5.108,1294,5.108,1295,5.108,1296,5.108,1297,5.108,1298,5.108,1299,5.108,1300,5.108,1301,5.108]],["title/modules.html",[161,2.939]],["body/modules.html",[20,0.013,28,0.011,132,0.013,133,0.011,160,4.275,161,3.284,170,3.962,171,3.962,172,3.962,173,3.962,853,4.275,1225,5.975,1302,7.665,1303,7.665,1304,7.81,1305,5.986]],["title/overview.html",[1306,4.645]],["body/overview.html",[2,1.2,20,0.015,28,0.01,132,0.012,133,0.01,136,2.815,159,2.411,160,5.67,161,2.815,162,2.982,163,3.396,164,3.396,165,2.982,166,2.815,167,3.173,168,4.448,169,4.448,170,4.954,171,4.602,172,5.051,173,5.051,174,4.227,175,3.396,176,3.396,269,1.929,405,3.396,473,4.448,474,4.448,475,4.602,479,2.815,687,4.448,922,3.999,999,4.786,1009,4.448,1010,4.448,1011,4.448,1087,4.786,1095,4.448,1096,4.448,1097,4.448,1306,4.448,1307,5.13,1308,5.13,1309,5.13,1310,5.13]],["title/miscellaneous/typealiases.html",[1232,1.795,1311,4.717]],["body/miscellaneous/typealiases.html",[6,1.82,7,0.303,12,1.683,19,0.251,20,0.015,22,2.227,23,0.806,28,0.014,29,1.75,30,1.75,31,1.75,32,1.75,33,1.75,34,1.75,35,1.75,36,1.385,132,0.013,133,0.011,1232,3.251,1312,5.925,1313,6.968]],["title/miscellaneous/variables.html",[1232,1.795,1314,4.09]],["body/miscellaneous/variables.html",[7,0.229,19,0.311,20,0.015,23,0.796,28,0.008,52,1.005,132,0.011,133,0.008,144,1.832,145,1.832,156,1.797,166,3.209,177,3.485,189,2.207,196,3.193,197,2.453,212,1.613,213,4.56,214,3.877,215,3.073,216,3.877,217,3.877,218,3.877,219,3.877,220,3.877,221,3.877,222,3.877,223,3.877,224,3.877,225,2.207,226,3.877,227,3.485,228,3.485,229,3.877,230,3.877,231,2.004,232,5.996,233,3.877,234,3.877,287,4.115,288,3.212,322,1.832,336,1.915,342,1.915,389,2.207,390,3.413,391,2.765,434,2.765,624,2.324,639,2.207,735,3.485,739,4.655,740,3.877,743,4.56,744,5.082,745,3.877,746,5.072,747,3.877,748,3.877,749,3.877,750,3.877,751,3.877,752,3.485,753,3.877,754,3.877,755,3.877,756,3.877,757,3.877,758,3.877,1142,3.877,1143,5.072,1144,4.56,1147,3.485,1150,3.485,1232,2.453,1237,3.877,1238,3.877,1314,3.877,1315,4.471,1316,6.519,1317,4.471,1318,4.471]]],"invertedIndex":[["",{"_index":20,"title":{},"body":{"interfaces/APIResponse.html":{},"controllers/AppController.html":{},"interfaces/AppLaunchAction.html":{},"modules/AppModule.html":{},"classes/BaseEntity.html":{},"classes/BaseModel.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"classes/CreateTagsDto.html":{},"classes/CreateUserDto.html":{},"modules/CronModule.html":{},"injectables/CronService.html":{},"classes/CrudController.html":{},"classes/CrudService.html":{},"classes/CustomQueryBuilder.html":{},"injectables/DBHelper.html":{},"modules/DatabaseModule.html":{},"injectables/ExcludeNullUndefinedInterceptor.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"classes/GetManyDto.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"controllers/HealthController.html":{},"interfaces/IBaseModel.html":{},"interfaces/ICrudService.html":{},"interfaces/IPagination.html":{},"interfaces/IPagination-1.html":{},"interfaces/ITag.html":{},"interfaces/ITryRequest.html":{},"interfaces/IUser.html":{},"classes/PaginationParams.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"classes/QueryFailedFilter.html":{},"guards/RequestGuard.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/Response.html":{},"guards/ResponseGuard.html":{},"classes/Tag.html":{},"controllers/TagsController.html":{},"modules/TagsModule.html":{},"injectables/TagsService.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateTagsDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"classes/ValidationFailedFilter.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":508,"title":{},"body":{"injectables/CronService.html":{},"classes/CustomQueryBuilder.html":{},"classes/PaginationParams.html":{},"coverage.html":{}}}],["0.1.1",{"_index":1180,"title":{},"body":{"dependencies.html":{}}}],["0.1.13",{"_index":1221,"title":{},"body":{"dependencies.html":{}}}],["0.12.2",{"_index":1200,"title":{},"body":{"dependencies.html":{}}}],["0.2.29",{"_index":1231,"title":{},"body":{"dependencies.html":{}}}],["0.21.15",{"_index":1206,"title":{},"body":{"dependencies.html":{}}}],["0.3.1",{"_index":1199,"title":{},"body":{"dependencies.html":{}}}],["0.4.1",{"_index":1187,"title":{},"body":{"dependencies.html":{}}}],["0.5.19",{"_index":1226,"title":{},"body":{"dependencies.html":{}}}],["0.6.1",{"_index":1178,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":1129,"title":{},"body":{"coverage.html":{}}}],["0/12",{"_index":1171,"title":{},"body":{"coverage.html":{}}}],["0/14",{"_index":1161,"title":{},"body":{"coverage.html":{}}}],["0/15",{"_index":1163,"title":{},"body":{"coverage.html":{}}}],["0/18",{"_index":1173,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":1127,"title":{},"body":{"coverage.html":{}}}],["0/23",{"_index":1162,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":1160,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":1138,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":1130,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":1139,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":1131,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":1172,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":1151,"title":{},"body":{"coverage.html":{}}}],["01",{"_index":280,"title":{},"body":{"classes/BaseEntity.html":{}}}],["01t12:00:00.000z",{"_index":312,"title":{},"body":{"classes/BaseEntity.html":{}}}],["01t12:00:00.000z'})@createdatecolumn({select",{"_index":281,"title":{},"body":{"classes/BaseEntity.html":{}}}],["01t12:00:00.000z'})@deletedatecolumn({select",{"_index":285,"title":{},"body":{"classes/BaseEntity.html":{}}}],["01t12:00:00.000z'})@updatedatecolumn({select",{"_index":296,"title":{},"body":{"classes/BaseEntity.html":{}}}],["01t12:00:00.000z'})@versioncolumn({default",{"_index":298,"title":{},"body":{"classes/BaseEntity.html":{}}}],["0})@isoptional()@min(0)@transform(undefined",{"_index":870,"title":{},"body":{"classes/PaginationParams.html":{}}}],["1",{"_index":299,"title":{"interfaces/IPagination-1.html":{}},"body":{"classes/BaseEntity.html":{},"classes/CreateUserDto.html":{},"injectables/CronService.html":{},"classes/CustomQueryBuilder.html":{},"injectables/DBHelper.html":{},"controllers/HealthController.html":{},"interfaces/IUser.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{}}}],["1.0.0",{"_index":1217,"title":{},"body":{"dependencies.html":{}}}],["1.1.0",{"_index":1214,"title":{},"body":{"dependencies.html":{}}}],["1.1.2",{"_index":1212,"title":{},"body":{"dependencies.html":{}}}],["1/1",{"_index":1153,"title":{},"body":{"coverage.html":{}}}],["1/12",{"_index":1132,"title":{},"body":{"coverage.html":{}}}],["1/2",{"_index":1166,"title":{},"body":{"coverage.html":{}}}],["1/3",{"_index":1165,"title":{},"body":{"coverage.html":{}}}],["1/9",{"_index":1146,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":872,"title":{},"body":{"classes/PaginationParams.html":{}}}],["100",{"_index":1135,"title":{},"body":{"coverage.html":{}}}],["1024",{"_index":832,"title":{},"body":{"controllers/HealthController.html":{}}}],["10_000",{"_index":1050,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["11",{"_index":1145,"title":{},"body":{"coverage.html":{}}}],["12",{"_index":616,"title":{},"body":{"classes/CrudService.html":{}}}],["15",{"_index":687,"title":{},"body":{"classes/CustomQueryBuilder.html":{},"overview.html":{}}}],["17.1.1",{"_index":1176,"title":{},"body":{"dependencies.html":{}}}],["1})@primarygeneratedcolumn",{"_index":294,"title":{},"body":{"classes/BaseEntity.html":{}}}],["2",{"_index":405,"title":{},"body":{"classes/CreateTagsDto.html":{},"interfaces/ITag.html":{},"classes/Tag.html":{},"classes/UpdateTagsDto.html":{},"overview.html":{}}}],["2.0.21",{"_index":1218,"title":{},"body":{"dependencies.html":{}}}],["2.1.4",{"_index":1189,"title":{},"body":{"dependencies.html":{}}}],["2.2.6",{"_index":1211,"title":{},"body":{"dependencies.html":{}}}],["2.29.1",{"_index":1208,"title":{},"body":{"dependencies.html":{}}}],["2.4.3",{"_index":1198,"title":{},"body":{"dependencies.html":{}}}],["2/3",{"_index":1134,"title":{},"body":{"coverage.html":{}}}],["200",{"_index":956,"title":{},"body":{"guards/ResponseGuard.html":{}}}],["2000",{"_index":279,"title":{},"body":{"classes/BaseEntity.html":{}}}],["20922789888000",{"_index":510,"title":{},"body":{"injectables/CronService.html":{}}}],["255",{"_index":406,"title":{},"body":{"classes/CreateTagsDto.html":{},"classes/CreateUserDto.html":{},"interfaces/ITag.html":{},"interfaces/IUser.html":{},"classes/Tag.html":{},"classes/UpdateTagsDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{}}}],["28",{"_index":1310,"title":{},"body":{"overview.html":{}}}],["3",{"_index":436,"title":{},"body":{"classes/CreateUserDto.html":{},"interfaces/IUser.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{}}}],["3.0.1",{"_index":1213,"title":{},"body":{"dependencies.html":{}}}],["3.0.2",{"_index":1223,"title":{},"body":{"dependencies.html":{}}}],["3/3",{"_index":1137,"title":{},"body":{"coverage.html":{}}}],["33",{"_index":1164,"title":{},"body":{"coverage.html":{}}}],["4",{"_index":1308,"title":{},"body":{"overview.html":{}}}],["4.0.2",{"_index":1210,"title":{},"body":{"dependencies.html":{}}}],["4.1.5",{"_index":1230,"title":{},"body":{"dependencies.html":{}}}],["4.17.20",{"_index":1207,"title":{},"body":{"dependencies.html":{}}}],["4.2.0",{"_index":1205,"title":{},"body":{"dependencies.html":{}}}],["4.6.2",{"_index":1195,"title":{},"body":{"dependencies.html":{}}}],["4.7.5",{"_index":1190,"title":{},"body":{"dependencies.html":{}}}],["4/4",{"_index":1136,"title":{},"body":{"coverage.html":{}}}],["401",{"_index":960,"title":{},"body":{"guards/ResponseGuard.html":{}}}],["5",{"_index":1307,"title":{},"body":{"overview.html":{}}}],["5.0.0",{"_index":1227,"title":{},"body":{"dependencies.html":{}}}],["5.2.3",{"_index":1203,"title":{},"body":{"dependencies.html":{}}}],["50",{"_index":884,"title":{},"body":{"classes/PaginationParams.html":{},"coverage.html":{}}}],["50000000",{"_index":514,"title":{},"body":{"injectables/CronService.html":{}}}],["50})@isoptional()@min(0)@max(50)@transform(undefined",{"_index":874,"title":{},"body":{"classes/PaginationParams.html":{}}}],["6.6.3",{"_index":1224,"title":{},"body":{"dependencies.html":{}}}],["60",{"_index":521,"title":{},"body":{"injectables/CronService.html":{},"controllers/HealthController.html":{}}}],["66",{"_index":1133,"title":{},"body":{"coverage.html":{}}}],["7",{"_index":1309,"title":{},"body":{"overview.html":{}}}],["7.0.1",{"_index":1191,"title":{},"body":{"dependencies.html":{}}}],["7.1.3",{"_index":1182,"title":{},"body":{"dependencies.html":{}}}],["7.1.5",{"_index":1193,"title":{},"body":{"dependencies.html":{}}}],["7.5.1",{"_index":1177,"title":{},"body":{"dependencies.html":{}}}],["7.6.5",{"_index":1186,"title":{},"body":{"dependencies.html":{}}}],["8",{"_index":438,"title":{},"body":{"classes/CreateUserDto.html":{},"interfaces/IUser.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"coverage.html":{}}}],["8.2.0",{"_index":1197,"title":{},"body":{"dependencies.html":{}}}],["_",{"_index":720,"title":{},"body":{"injectables/DBHelper.html":{},"injectables/TagsService.html":{}}}],["_.difference(new_values",{"_index":730,"title":{},"body":{"injectables/DBHelper.html":{}}}],["_.difference(values",{"_index":728,"title":{},"body":{"injectables/DBHelper.html":{}}}],["abortearly",{"_index":218,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["above",{"_index":250,"title":{},"body":{"modules/AppModule.html":{}}}],["abstract",{"_index":309,"title":{},"body":{"classes/BaseEntity.html":{},"classes/CrudController.html":{},"classes/CrudService.html":{},"classes/PaginationParams.html":{}}}],["access,@typescript",{"_index":195,"title":{},"body":{"modules/AppModule.html":{},"classes/CustomQueryBuilder.html":{},"controllers/HealthController.html":{}}}],["action",{"_index":48,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{},"injectables/UsersService.html":{}}}],["actionid",{"_index":47,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{}}}],["adcorporatelogourl",{"_index":95,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{}}}],["against",{"_index":403,"title":{},"body":{"classes/CreateTagsDto.html":{},"classes/CreateUserDto.html":{},"interfaces/ITag.html":{},"interfaces/IUser.html":{},"classes/Tag.html":{},"classes/UpdateTagsDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{}}}],["aliases",{"_index":1312,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["allowunknown",{"_index":217,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["amazing",{"_index":1285,"title":{},"body":{"index.html":{}}}],["animalimageurl",{"_index":103,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{}}}],["api",{"_index":38,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{}}}],["api:v1/rescue/getcomments?pageno=0&pagesize=10&postid=1230",{"_index":43,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{}}}],["api:v1/rescue/getrescuelist?pageno=0&pagesize=10&status=pending|inprogress|completed|nearest",{"_index":42,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{}}}],["api:v1/rescue/getuserfollowers?userid=1230",{"_index":44,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{}}}],["api:v1/rescue/getuserfollowing?userid=1230",{"_index":45,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{}}}],["api:v1/user/getuserposts?pageno=0&pagesize=25",{"_index":41,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{}}}],["api:v1/user/getuserprofile?userid=25",{"_index":40,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{}}}],["apierror",{"_index":22,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{},"miscellaneous/typealiases.html":{}}}],["apioperation",{"_index":1085,"title":{},"body":{"controllers/UsersController.html":{}}}],["apioperation({summary",{"_index":1070,"title":{},"body":{"controllers/UsersController.html":{}}}],["apiproperty",{"_index":302,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseModel.html":{},"classes/CreateTagsDto.html":{},"classes/CreateUserDto.html":{},"interfaces/IBaseModel.html":{},"interfaces/ITag.html":{},"interfaces/IUser.html":{},"classes/Tag.html":{},"classes/UpdateTagsDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{}}}],["apiproperty()@isboolean",{"_index":422,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["apiproperty()@isemail()@isnotempty()@minlength(2",{"_index":418,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["apiproperty()@isoptional",{"_index":425,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["apiproperty()@isstring()@isnotempty()@minlength(2",{"_index":420,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["apiproperty()@isstring()@isnotempty()@minlength(2)@maxlength(36",{"_index":376,"title":{},"body":{"classes/CreateTagsDto.html":{},"classes/CreateUserDto.html":{}}}],["apiproperty()@isstring()@isnotempty()@minlength(8",{"_index":427,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["apiproperty({description",{"_index":291,"title":{},"body":{"classes/BaseEntity.html":{}}}],["apiproperty({example",{"_index":278,"title":{},"body":{"classes/BaseEntity.html":{}}}],["apipropertyoptional",{"_index":339,"title":{},"body":{"classes/BaseModel.html":{},"interfaces/IBaseModel.html":{},"classes/PaginationParams.html":{}}}],["apipropertyoptional()@isoptional",{"_index":865,"title":{},"body":{"classes/PaginationParams.html":{}}}],["apipropertyoptional({type",{"_index":868,"title":{},"body":{"classes/PaginationParams.html":{}}}],["apiresponse",{"_index":1,"title":{"interfaces/APIResponse.html":{}},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{},"coverage.html":{}}}],["apitags",{"_index":149,"title":{},"body":{"controllers/AppController.html":{},"controllers/HealthController.html":{},"controllers/TagsController.html":{},"controllers/UsersController.html":{}}}],["apitags(appcontroller.name",{"_index":152,"title":{},"body":{"controllers/AppController.html":{}}}],["apitags(healthcontroller.name",{"_index":809,"title":{},"body":{"controllers/HealthController.html":{}}}],["apitags(tagscontroller.name",{"_index":1002,"title":{},"body":{"controllers/TagsController.html":{}}}],["apitags(userscontroller.name",{"_index":1090,"title":{},"body":{"controllers/UsersController.html":{}}}],["app",{"_index":1244,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["app.controller",{"_index":206,"title":{},"body":{"modules/AppModule.html":{}}}],["appcontroller",{"_index":135,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["applaunchaction",{"_index":46,"title":{"interfaces/AppLaunchAction.html":{}},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{},"coverage.html":{}}}],["application",{"_index":241,"title":{},"body":{"modules/AppModule.html":{}}}],["applications",{"_index":1262,"title":{},"body":{"index.html":{}}}],["applicationshutdown",{"_index":266,"title":{},"body":{"modules/AppModule.html":{},"controllers/HealthController.html":{}}}],["appmodule",{"_index":160,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["areyoufollowing",{"_index":129,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{}}}],["argumentshost",{"_index":903,"title":{},"body":{"classes/QueryFailedFilter.html":{},"classes/ValidationFailedFilter.html":{}}}],["array",{"_index":955,"title":{},"body":{"guards/ResponseGuard.html":{}}}],["array.isarray(value",{"_index":685,"title":{},"body":{"classes/CustomQueryBuilder.html":{}}}],["arrayquerybuildertype",{"_index":657,"title":{},"body":{"classes/CustomQueryBuilder.html":{}}}],["asc",{"_index":883,"title":{},"body":{"classes/PaginationParams.html":{},"miscellaneous/enumerations.html":{}}}],["assignment",{"_index":625,"title":{},"body":{"classes/CrudService.html":{},"classes/CustomQueryBuilder.html":{},"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["assignment,@typescript",{"_index":192,"title":{},"body":{"modules/AppModule.html":{}}}],["assignment,no",{"_index":649,"title":{},"body":{"classes/CrudService.html":{},"controllers/HealthController.html":{}}}],["async",{"_index":322,"title":{},"body":{"classes/BaseModel.html":{},"classes/CrudController.html":{},"classes/CrudService.html":{},"classes/CustomQueryBuilder.html":{},"injectables/DBHelper.html":{},"modules/DatabaseModule.html":{},"interfaces/IBaseModel.html":{},"classes/Tag.html":{},"controllers/TagsController.html":{},"injectables/TagsService.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["asynchronous",{"_index":256,"title":{},"body":{"modules/AppModule.html":{}}}],["author",{"_index":1294,"title":{},"body":{"index.html":{}}}],["authservice",{"_index":642,"title":{},"body":{"classes/CrudService.html":{}}}],["available",{"_index":853,"title":{},"body":{"interfaces/ICrudService.html":{},"interfaces/IPagination.html":{},"interfaces/IPagination-1.html":{},"modules.html":{}}}],["await",{"_index":197,"title":{},"body":{"modules/AppModule.html":{},"classes/BaseModel.html":{},"classes/CrudService.html":{},"classes/CustomQueryBuilder.html":{},"injectables/DBHelper.html":{},"modules/DatabaseModule.html":{},"interfaces/IBaseModel.html":{},"miscellaneous/variables.html":{}}}],["awaits",{"_index":255,"title":{},"body":{"modules/AppModule.html":{}}}],["b",{"_index":829,"title":{},"body":{"controllers/HealthController.html":{}}}],["backers",{"_index":1286,"title":{},"body":{"index.html":{}}}],["badge",{"_index":73,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{}}}],["badgedescription",{"_index":76,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{}}}],["badgeid",{"_index":74,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{}}}],["badgename",{"_index":75,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{}}}],["badrequestexception",{"_index":606,"title":{},"body":{"classes/CrudService.html":{}}}],["badrequestexception(err",{"_index":638,"title":{},"body":{"classes/CrudService.html":{}}}],["based",{"_index":396,"title":{},"body":{"classes/CreateTagsDto.html":{},"classes/CreateUserDto.html":{},"interfaces/ITag.html":{},"interfaces/IUser.html":{},"classes/Tag.html":{},"classes/UpdateTagsDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{}}}],["baseentity",{"_index":268,"title":{"classes/BaseEntity.html":{}},"body":{"classes/BaseEntity.html":{},"coverage.html":{}}}],["basemodel",{"_index":313,"title":{"classes/BaseModel.html":{}},"body":{"classes/BaseModel.html":{},"classes/CreateTagsDto.html":{},"classes/CreateUserDto.html":{},"interfaces/IBaseModel.html":{},"interfaces/ITag.html":{},"interfaces/IUser.html":{},"classes/Tag.html":{},"classes/UpdateTagsDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"coverage.html":{}}}],["basemodel:27",{"_index":982,"title":{},"body":{"classes/Tag.html":{},"classes/User.html":{}}}],["basemodel:29",{"_index":985,"title":{},"body":{"classes/Tag.html":{},"classes/User.html":{}}}],["basemodel:31",{"_index":984,"title":{},"body":{"classes/Tag.html":{},"classes/User.html":{}}}],["basemodel:33",{"_index":983,"title":{},"body":{"classes/Tag.html":{},"classes/User.html":{}}}],["basemodel:35",{"_index":980,"title":{},"body":{"classes/Tag.html":{},"classes/User.html":{}}}],["basemodel:37",{"_index":986,"title":{},"body":{"classes/Tag.html":{},"classes/User.html":{}}}],["basemodel:39",{"_index":981,"title":{},"body":{"classes/Tag.html":{},"classes/User.html":{}}}],["basemodel:42",{"_index":987,"title":{},"body":{"classes/Tag.html":{},"classes/User.html":{}}}],["bcrypt",{"_index":608,"title":{},"body":{"classes/CrudService.html":{}}}],["bcrypt.hash(password",{"_index":640,"title":{},"body":{"classes/CrudService.html":{}}}],["bcryptjs",{"_index":609,"title":{},"body":{"classes/CrudService.html":{},"dependencies.html":{}}}],["before",{"_index":147,"title":{},"body":{"controllers/AppController.html":{},"controllers/HealthController.html":{},"controllers/TagsController.html":{},"controllers/UsersController.html":{}}}],["beforeapplicationshutdown",{"_index":247,"title":{},"body":{"modules/AppModule.html":{}}}],["beforeinsert(querycontext",{"_index":370,"title":{},"body":{"classes/BaseModel.html":{},"interfaces/IBaseModel.html":{}}}],["beforeupdate(opt",{"_index":364,"title":{},"body":{"classes/BaseModel.html":{},"interfaces/IBaseModel.html":{}}}],["bind",{"_index":928,"title":{},"body":{"guards/RequestGuard.html":{},"guards/ResponseGuard.html":{}}}],["bindrequesthelpers",{"_index":924,"title":{},"body":{"guards/RequestGuard.html":{}}}],["bindrequesthelpers(request",{"_index":926,"title":{},"body":{"guards/RequestGuard.html":{}}}],["bindresponsehelpers",{"_index":950,"title":{},"body":{"guards/ResponseGuard.html":{}}}],["bindresponsehelpers(response",{"_index":951,"title":{},"body":{"guards/ResponseGuard.html":{}}}],["body",{"_index":556,"title":{},"body":{"classes/CrudController.html":{},"controllers/TagsController.html":{},"controllers/UsersController.html":{}}}],["boolean",{"_index":50,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"classes/CreateUserDto.html":{},"classes/CustomQueryBuilder.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/ITryRequest.html":{},"interfaces/IUser.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"guards/RequestGuard.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"guards/ResponseGuard.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{},"miscellaneous/functions.html":{}}}],["bootstrap",{"_index":165,"title":{},"body":{"modules/AppModule.html":{},"modules/CronModule.html":{},"modules/TagsModule.html":{},"modules/UsersModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["both",{"_index":456,"title":{},"body":{"classes/CreateUserDto.html":{},"interfaces/IUser.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{}}}],["browse",{"_index":1304,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":1302,"title":{},"body":{"modules.html":{}}}],["builder",{"_index":357,"title":{},"body":{"classes/BaseModel.html":{},"interfaces/IBaseModel.html":{}}}],["builder/querypartialentity",{"_index":559,"title":{},"body":{"classes/CrudController.html":{},"classes/CrudService.html":{},"interfaces/ICrudService.html":{},"interfaces/IPagination.html":{}}}],["building",{"_index":1257,"title":{},"body":{"index.html":{}}}],["c",{"_index":695,"title":{},"body":{"classes/CustomQueryBuilder.html":{}}}],["call",{"_index":244,"title":{},"body":{"modules/AppModule.html":{},"controllers/UsersController.html":{}}}],["call,@typescript",{"_index":193,"title":{},"body":{"modules/AppModule.html":{},"classes/CustomQueryBuilder.html":{},"controllers/HealthController.html":{}}}],["call,no",{"_index":704,"title":{},"body":{"classes/CustomQueryBuilder.html":{}}}],["called",{"_index":519,"title":{},"body":{"injectables/CronService.html":{}}}],["callhandler",{"_index":769,"title":{},"body":{"injectables/ExcludeNullUndefinedInterceptor.html":{},"interfaces/Response.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/TransformInterceptor.html":{}}}],["canactivate",{"_index":925,"title":{},"body":{"guards/RequestGuard.html":{},"guards/ResponseGuard.html":{}}}],["canactivate(context",{"_index":929,"title":{},"body":{"guards/RequestGuard.html":{},"guards/ResponseGuard.html":{}}}],["catch",{"_index":623,"title":{},"body":{"classes/CrudService.html":{},"classes/QueryFailedFilter.html":{},"classes/ValidationFailedFilter.html":{}}}],["catch(exception",{"_index":895,"title":{},"body":{"classes/QueryFailedFilter.html":{},"classes/ValidationFailedFilter.html":{}}}],["catch(validationerror",{"_index":1120,"title":{},"body":{"classes/ValidationFailedFilter.html":{}}}],["catcherror",{"_index":1047,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["catcherror((e",{"_index":1052,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["cb",{"_index":672,"title":{},"body":{"classes/CustomQueryBuilder.html":{}}}],["cb(records",{"_index":707,"title":{},"body":{"classes/CustomQueryBuilder.html":{}}}],["check",{"_index":680,"title":{},"body":{"classes/CustomQueryBuilder.html":{},"controllers/HealthController.html":{},"miscellaneous/functions.html":{}}}],["checked",{"_index":402,"title":{},"body":{"classes/CreateTagsDto.html":{},"classes/CreateUserDto.html":{},"interfaces/ITag.html":{},"interfaces/IUser.html":{},"classes/Tag.html":{},"classes/UpdateTagsDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{}}}],["checkviolationerror",{"_index":896,"title":{},"body":{"classes/QueryFailedFilter.html":{}}}],["chunk",{"_index":661,"title":{},"body":{"classes/CustomQueryBuilder.html":{}}}],["chunk(cb",{"_index":669,"title":{},"body":{"classes/CustomQueryBuilder.html":{}}}],["class",{"_index":153,"title":{"classes/BaseEntity.html":{},"classes/BaseModel.html":{},"classes/CreateTagsDto.html":{},"classes/CreateUserDto.html":{},"classes/CrudController.html":{},"classes/CrudService.html":{},"classes/CustomQueryBuilder.html":{},"classes/GetManyDto.html":{},"classes/PaginationParams.html":{},"classes/QueryFailedFilter.html":{},"classes/Tag.html":{},"classes/UpdateTagsDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"classes/ValidationFailedFilter.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"classes/BaseEntity.html":{},"classes/BaseModel.html":{},"classes/CreateTagsDto.html":{},"classes/CreateUserDto.html":{},"modules/CronModule.html":{},"injectables/CronService.html":{},"classes/CrudController.html":{},"classes/CrudService.html":{},"injectables/DBHelper.html":{},"modules/DatabaseModule.html":{},"injectables/ExcludeNullUndefinedInterceptor.html":{},"classes/GetManyDto.html":{},"controllers/HealthController.html":{},"interfaces/IBaseModel.html":{},"interfaces/ITag.html":{},"interfaces/IUser.html":{},"classes/PaginationParams.html":{},"classes/QueryFailedFilter.html":{},"guards/RequestGuard.html":{},"interfaces/Response.html":{},"guards/ResponseGuard.html":{},"classes/Tag.html":{},"controllers/TagsController.html":{},"modules/TagsModule.html":{},"injectables/TagsService.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateTagsDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"classes/ValidationFailedFilter.html":{},"coverage.html":{},"dependencies.html":{}}}],["classes",{"_index":269,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseModel.html":{},"classes/CreateTagsDto.html":{},"classes/CreateUserDto.html":{},"classes/CrudController.html":{},"classes/CrudService.html":{},"classes/CustomQueryBuilder.html":{},"classes/GetManyDto.html":{},"classes/PaginationParams.html":{},"classes/QueryFailedFilter.html":{},"classes/Tag.html":{},"classes/UpdateTagsDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"classes/ValidationFailedFilter.html":{},"overview.html":{}}}],["client",{"_index":751,"title":{},"body":{"modules/DatabaseModule.html":{},"miscellaneous/variables.html":{}}}],["clonedeep",{"_index":678,"title":{},"body":{"classes/CustomQueryBuilder.html":{}}}],["clonedeep(this",{"_index":701,"title":{},"body":{"classes/CustomQueryBuilder.html":{}}}],["cluster_appmodule",{"_index":168,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":169,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_cronmodule",{"_index":473,"title":{},"body":{"modules/CronModule.html":{},"overview.html":{}}}],["cluster_cronmodule_providers",{"_index":474,"title":{},"body":{"modules/CronModule.html":{},"overview.html":{}}}],["cluster_tagsmodule",{"_index":1009,"title":{},"body":{"modules/TagsModule.html":{},"overview.html":{}}}],["cluster_tagsmodule_exports",{"_index":1011,"title":{},"body":{"modules/TagsModule.html":{},"overview.html":{}}}],["cluster_tagsmodule_providers",{"_index":1010,"title":{},"body":{"modules/TagsModule.html":{},"overview.html":{}}}],["cluster_usersmodule",{"_index":1095,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["cluster_usersmodule_exports",{"_index":1096,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["cluster_usersmodule_providers",{"_index":1097,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["code",{"_index":957,"title":{},"body":{"guards/ResponseGuard.html":{}}}],["collectosmetrics",{"_index":789,"title":{},"body":{"controllers/HealthController.html":{}}}],["collectosmetrics(metrics",{"_index":793,"title":{},"body":{"controllers/HealthController.html":{}}}],["column",{"_index":467,"title":{},"body":{"classes/CreateUserDto.html":{},"interfaces/IUser.html":{},"classes/QueryFailedFilter.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{}}}],["columns",{"_index":915,"title":{},"body":{"classes/QueryFailedFilter.html":{}}}],["comment",{"_index":122,"title":{"interfaces/Comment.html":{}},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{},"coverage.html":{}}}],["commentedusename",{"_index":124,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{}}}],["commenteduserid",{"_index":125,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{}}}],["commentid",{"_index":123,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{}}}],["comments",{"_index":126,"title":{"interfaces/Comments.html":{}},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{},"coverage.html":{}}}],["commentscount",{"_index":86,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{}}}],["concat(toadd",{"_index":731,"title":{},"body":{"injectables/DBHelper.html":{}}}],["config",{"_index":813,"title":{},"body":{"controllers/HealthController.html":{}}}],["configmodule",{"_index":198,"title":{},"body":{"modules/AppModule.html":{}}}],["configmodule.forroot(configmoduleoptions",{"_index":235,"title":{},"body":{"modules/AppModule.html":{}}}],["configmoduleoptions",{"_index":213,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["configservice",{"_index":803,"title":{},"body":{"controllers/HealthController.html":{}}}],["connection",{"_index":754,"title":{},"body":{"modules/DatabaseModule.html":{},"miscellaneous/variables.html":{}}}],["console.error",{"_index":265,"title":{},"body":{"modules/AppModule.html":{}}}],["console.info(`moduleinit",{"_index":263,"title":{},"body":{"modules/AppModule.html":{}}}],["console.log",{"_index":840,"title":{},"body":{"controllers/HealthController.html":{}}}],["console.log(`moduleinit",{"_index":838,"title":{},"body":{"controllers/HealthController.html":{}}}],["const",{"_index":212,"title":{},"body":{"modules/AppModule.html":{},"classes/BaseModel.html":{},"classes/CreateUserDto.html":{},"classes/CrudService.html":{},"classes/CustomQueryBuilder.html":{},"injectables/DBHelper.html":{},"modules/DatabaseModule.html":{},"controllers/HealthController.html":{},"interfaces/IBaseModel.html":{},"interfaces/IUser.html":{},"classes/QueryFailedFilter.html":{},"guards/RequestGuard.html":{},"guards/ResponseGuard.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"classes/ValidationFailedFilter.html":{},"miscellaneous/variables.html":{}}}],["constraint",{"_index":916,"title":{},"body":{"classes/QueryFailedFilter.html":{}}}],["constraintviolationerror",{"_index":897,"title":{},"body":{"classes/QueryFailedFilter.html":{}}}],["constructor",{"_index":531,"title":{},"body":{"classes/CrudController.html":{},"classes/CrudService.html":{},"injectables/DBHelper.html":{},"controllers/HealthController.html":{},"injectables/TagsService.html":{},"injectables/UsersService.html":{}}}],["constructor(@inject(tag.name",{"_index":1025,"title":{},"body":{"injectables/TagsService.html":{}}}],["constructor(@inject(user.name",{"_index":1108,"title":{},"body":{"injectables/UsersService.html":{}}}],["constructor(crudservice",{"_index":533,"title":{},"body":{"classes/CrudController.html":{}}}],["constructor(private",{"_index":562,"title":{},"body":{"classes/CrudController.html":{},"injectables/DBHelper.html":{},"controllers/TagsController.html":{},"controllers/UsersController.html":{}}}],["constructor(protected",{"_index":614,"title":{},"body":{"classes/CrudService.html":{}}}],["constructor(repository",{"_index":580,"title":{},"body":{"classes/CrudService.html":{},"injectables/DBHelper.html":{}}}],["constructor(tag",{"_index":1015,"title":{},"body":{"injectables/TagsService.html":{}}}],["constructor(user",{"_index":1101,"title":{},"body":{"injectables/UsersService.html":{}}}],["contact",{"_index":114,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{}}}],["context",{"_index":771,"title":{},"body":{"injectables/ExcludeNullUndefinedInterceptor.html":{},"guards/RequestGuard.html":{},"interfaces/Response.html":{},"guards/ResponseGuard.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/TransformInterceptor.html":{}}}],["continue",{"_index":259,"title":{},"body":{"modules/AppModule.html":{}}}],["controller",{"_index":134,"title":{"controllers/AppController.html":{},"controllers/HealthController.html":{},"controllers/TagsController.html":{},"controllers/UsersController.html":{}},"body":{"controllers/AppController.html":{},"controllers/HealthController.html":{},"controllers/TagsController.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["controller(appcontroller.path",{"_index":151,"title":{},"body":{"controllers/AppController.html":{}}}],["controller(healthcontroller.path",{"_index":810,"title":{},"body":{"controllers/HealthController.html":{}}}],["controller(tagscontroller.path",{"_index":1001,"title":{},"body":{"controllers/TagsController.html":{}}}],["controller(userscontroller.path",{"_index":1089,"title":{},"body":{"controllers/UsersController.html":{}}}],["controllers",{"_index":136,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/HealthController.html":{},"controllers/TagsController.html":{},"modules/TagsModule.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["convert",{"_index":828,"title":{},"body":{"controllers/HealthController.html":{}}}],["copied",{"_index":641,"title":{},"body":{"classes/CrudService.html":{}}}],["corporatedescription",{"_index":96,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{}}}],["corporatename",{"_index":97,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{}}}],["corresponding",{"_index":251,"title":{},"body":{"modules/AppModule.html":{}}}],["count",{"_index":10,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"injectables/CronService.html":{},"classes/CrudService.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"classes/GetManyDto.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/ICrudService.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{}}}],["count(filter",{"_index":583,"title":{},"body":{"classes/CrudService.html":{},"interfaces/ICrudService.html":{},"interfaces/IPagination.html":{}}}],["coverage",{"_index":1124,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["coverimage",{"_index":54,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{}}}],["create",{"_index":526,"title":{},"body":{"classes/CrudController.html":{},"classes/CrudService.html":{},"interfaces/ICrudService.html":{},"controllers/TagsController.html":{},"injectables/TagsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["create(@body",{"_index":566,"title":{},"body":{"classes/CrudController.html":{},"controllers/TagsController.html":{},"controllers/UsersController.html":{}}}],["create(entity",{"_index":537,"title":{},"body":{"classes/CrudController.html":{},"classes/CrudService.html":{},"interfaces/ICrudService.html":{},"interfaces/IPagination.html":{}}}],["create(tag",{"_index":990,"title":{},"body":{"controllers/TagsController.html":{},"injectables/TagsService.html":{}}}],["create(user",{"_index":1069,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["created",{"_index":401,"title":{},"body":{"classes/CreateTagsDto.html":{},"classes/CreateUserDto.html":{},"interfaces/ITag.html":{},"interfaces/IUser.html":{},"classes/Tag.html":{},"classes/UpdateTagsDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{}}}],["created_at",{"_index":316,"title":{},"body":{"classes/BaseModel.html":{},"interfaces/IBaseModel.html":{},"classes/Tag.html":{},"classes/User.html":{}}}],["createdat",{"_index":272,"title":{},"body":{"classes/BaseEntity.html":{}}}],["createdatecolumn",{"_index":305,"title":{},"body":{"classes/BaseEntity.html":{}}}],["creates",{"_index":459,"title":{},"body":{"classes/CreateUserDto.html":{},"interfaces/IUser.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{}}}],["createtagsdto",{"_index":373,"title":{"classes/CreateTagsDto.html":{}},"body":{"classes/CreateTagsDto.html":{},"interfaces/ITag.html":{},"classes/Tag.html":{},"controllers/TagsController.html":{},"classes/UpdateTagsDto.html":{},"coverage.html":{}}}],["createuserdto",{"_index":411,"title":{"classes/CreateUserDto.html":{}},"body":{"classes/CreateUserDto.html":{},"interfaces/IUser.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["criteria",{"_index":590,"title":{},"body":{"classes/CrudService.html":{}}}],["cron",{"_index":481,"title":{},"body":{"injectables/CronService.html":{}}}],["cron('60",{"_index":502,"title":{},"body":{"injectables/CronService.html":{}}}],["cron.service",{"_index":477,"title":{},"body":{"modules/CronModule.html":{}}}],["cron/cron.module",{"_index":207,"title":{},"body":{"modules/AppModule.html":{}}}],["cronmodule",{"_index":170,"title":{"modules/CronModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CronModule.html":{},"modules.html":{},"overview.html":{}}}],["cronmodules",{"_index":237,"title":{},"body":{"modules/AppModule.html":{}}}],["cronservice",{"_index":475,"title":{"injectables/CronService.html":{}},"body":{"modules/CronModule.html":{},"injectables/CronService.html":{},"coverage.html":{},"overview.html":{}}}],["cronservice.count",{"_index":517,"title":{},"body":{"injectables/CronService.html":{}}}],["crudcontroller",{"_index":524,"title":{"classes/CrudController.html":{}},"body":{"classes/CrudController.html":{},"coverage.html":{}}}],["crudservice",{"_index":536,"title":{"classes/CrudService.html":{}},"body":{"classes/CrudController.html":{},"classes/CrudService.html":{},"coverage.html":{}}}],["ctx",{"_index":906,"title":{},"body":{"classes/QueryFailedFilter.html":{},"classes/ValidationFailedFilter.html":{}}}],["ctx.getrequest",{"_index":910,"title":{},"body":{"classes/QueryFailedFilter.html":{},"classes/ValidationFailedFilter.html":{}}}],["ctx.getresponse",{"_index":908,"title":{},"body":{"classes/QueryFailedFilter.html":{},"classes/ValidationFailedFilter.html":{}}}],["current",{"_index":522,"title":{},"body":{"injectables/CronService.html":{},"interfaces/ICrudService.html":{},"interfaces/IPagination.html":{},"interfaces/IPagination-1.html":{}}}],["currentpage",{"_index":689,"title":{},"body":{"classes/CustomQueryBuilder.html":{}}}],["custom",{"_index":356,"title":{},"body":{"classes/BaseModel.html":{},"interfaces/IBaseModel.html":{}}}],["customquerybuilder",{"_index":329,"title":{"classes/CustomQueryBuilder.html":{}},"body":{"classes/BaseModel.html":{},"classes/CustomQueryBuilder.html":{},"interfaces/IBaseModel.html":{},"classes/Tag.html":{},"classes/User.html":{},"coverage.html":{}}}],["data",{"_index":11,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"classes/BaseModel.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"classes/CustomQueryBuilder.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"classes/GetManyDto.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"controllers/HealthController.html":{},"interfaces/IBaseModel.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/Response.html":{},"guards/ResponseGuard.html":{},"injectables/TransformInterceptor.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{},"classes/ValidationFailedFilter.html":{}}}],["database",{"_index":231,"title":{},"body":{"modules/AppModule.html":{},"classes/CreateTagsDto.html":{},"classes/CreateUserDto.html":{},"interfaces/ITag.html":{},"interfaces/IUser.html":{},"classes/QueryFailedFilter.html":{},"classes/Tag.html":{},"classes/UpdateTagsDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"miscellaneous/variables.html":{}}}],["database'})@post",{"_index":1072,"title":{},"body":{"controllers/UsersController.html":{}}}],["database/database.module",{"_index":208,"title":{},"body":{"modules/AppModule.html":{}}}],["database/models/base.model",{"_index":388,"title":{},"body":{"classes/CreateTagsDto.html":{},"classes/CreateUserDto.html":{},"interfaces/ITag.html":{},"interfaces/IUser.html":{},"classes/Tag.html":{},"classes/UpdateTagsDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{}}}],["databasemodule",{"_index":171,"title":{"modules/DatabaseModule.html":{}},"body":{"modules/AppModule.html":{},"modules/DatabaseModule.html":{},"modules.html":{},"overview.html":{}}}],["dataerror",{"_index":898,"title":{},"body":{"classes/QueryFailedFilter.html":{}}}],["dataobj",{"_index":969,"title":{},"body":{"guards/ResponseGuard.html":{}}}],["datapoints",{"_index":816,"title":{},"body":{"controllers/HealthController.html":{}}}],["date",{"_index":110,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"classes/BaseEntity.html":{},"classes/BaseModel.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/IBaseModel.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{}}}],["date().toisostring",{"_index":368,"title":{},"body":{"classes/BaseModel.html":{},"interfaces/IBaseModel.html":{},"classes/QueryFailedFilter.html":{},"classes/ValidationFailedFilter.html":{}}}],["date.now",{"_index":836,"title":{},"body":{"controllers/HealthController.html":{}}}],["db",{"_index":347,"title":{},"body":{"classes/BaseModel.html":{},"interfaces/IBaseModel.html":{},"classes/QueryFailedFilter.html":{},"dependencies.html":{}}}],["dberrors",{"_index":346,"title":{},"body":{"classes/BaseModel.html":{},"interfaces/IBaseModel.html":{}}}],["dbhelper",{"_index":709,"title":{"injectables/DBHelper.html":{}},"body":{"injectables/DBHelper.html":{},"coverage.html":{}}}],["debug",{"_index":757,"title":{},"body":{"modules/DatabaseModule.html":{},"miscellaneous/variables.html":{}}}],["declarations",{"_index":164,"title":{},"body":{"modules/AppModule.html":{},"modules/CronModule.html":{},"modules/TagsModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["declare",{"_index":485,"title":{},"body":{"injectables/CronService.html":{}}}],["decorators",{"_index":140,"title":{},"body":{"controllers/AppController.html":{},"classes/BaseEntity.html":{},"classes/CreateTagsDto.html":{},"classes/CreateUserDto.html":{},"injectables/CronService.html":{},"classes/CrudController.html":{},"controllers/HealthController.html":{},"classes/PaginationParams.html":{},"classes/Tag.html":{},"controllers/TagsController.html":{},"controllers/UsersController.html":{}}}],["deeppartial",{"_index":538,"title":{},"body":{"classes/CrudController.html":{},"classes/CrudService.html":{},"interfaces/ICrudService.html":{},"interfaces/IPagination.html":{}}}],["default",{"_index":287,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseModel.html":{},"injectables/CronService.html":{},"classes/GetManyDto.html":{},"classes/PaginationParams.html":{},"classes/Tag.html":{},"classes/User.html":{},"miscellaneous/variables.html":{}}}],["default('development",{"_index":230,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["define",{"_index":148,"title":{},"body":{"controllers/AppController.html":{}}}],["define,@typescript",{"_index":800,"title":{},"body":{"controllers/HealthController.html":{},"controllers/TagsController.html":{},"controllers/UsersController.html":{}}}],["defined",{"_index":141,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"classes/BaseEntity.html":{},"classes/BaseModel.html":{},"classes/CreateTagsDto.html":{},"classes/CreateUserDto.html":{},"injectables/CronService.html":{},"classes/CrudController.html":{},"classes/CrudService.html":{},"classes/CustomQueryBuilder.html":{},"injectables/DBHelper.html":{},"injectables/ExcludeNullUndefinedInterceptor.html":{},"classes/GetManyDto.html":{},"controllers/HealthController.html":{},"interfaces/ICrudService.html":{},"classes/PaginationParams.html":{},"classes/QueryFailedFilter.html":{},"guards/RequestGuard.html":{},"guards/ResponseGuard.html":{},"classes/Tag.html":{},"controllers/TagsController.html":{},"injectables/TagsService.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/TransformInterceptor.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"classes/ValidationFailedFilter.html":{}}}],["delete",{"_index":527,"title":{},"body":{"classes/CrudController.html":{},"classes/CrudService.html":{},"interfaces/ICrudService.html":{},"controllers/TagsController.html":{},"injectables/TagsService.html":{},"controllers/UsersController.html":{}}}],["delete(':id",{"_index":543,"title":{},"body":{"classes/CrudController.html":{},"controllers/TagsController.html":{},"controllers/UsersController.html":{}}}],["delete(@param('id",{"_index":572,"title":{},"body":{"classes/CrudController.html":{},"controllers/TagsController.html":{}}}],["delete(criteria",{"_index":587,"title":{},"body":{"classes/CrudService.html":{}}}],["delete(id",{"_index":542,"title":{},"body":{"classes/CrudController.html":{},"interfaces/ICrudService.html":{},"interfaces/IPagination.html":{},"controllers/TagsController.html":{},"injectables/TagsService.html":{}}}],["deletebyid(id",{"_index":1034,"title":{},"body":{"injectables/TagsService.html":{}}}],["deleted_at",{"_index":317,"title":{},"body":{"classes/BaseModel.html":{},"interfaces/IBaseModel.html":{},"classes/Tag.html":{},"classes/User.html":{}}}],["deletedat",{"_index":273,"title":{},"body":{"classes/BaseEntity.html":{}}}],["deletedatecolumn",{"_index":306,"title":{},"body":{"classes/BaseEntity.html":{}}}],["deleteresult",{"_index":848,"title":{},"body":{"interfaces/ICrudService.html":{},"interfaces/IPagination.html":{}}}],["dependencies",{"_index":162,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/CronModule.html":{},"modules/TagsModule.html":{},"modules/UsersModule.html":{},"dependencies.html":{},"overview.html":{}}}],["deps",{"_index":238,"title":{},"body":{"modules/AppModule.html":{}}}],["desc",{"_index":882,"title":{},"body":{"classes/PaginationParams.html":{},"miscellaneous/enumerations.html":{}}}],["described",{"_index":249,"title":{},"body":{"modules/AppModule.html":{}}}],["describes",{"_index":861,"title":{},"body":{"classes/PaginationParams.html":{}}}],["description",{"_index":311,"title":{},"body":{"classes/BaseEntity.html":{},"injectables/CronService.html":{},"injectables/ExcludeNullUndefinedInterceptor.html":{},"interfaces/IPagination-1.html":{},"classes/PaginationParams.html":{},"injectables/TimeoutInterceptor.html":{},"controllers/UsersController.html":{},"index.html":{}}}],["development",{"_index":1267,"title":{},"body":{"index.html":{}}}],["disable",{"_index":145,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"classes/CrudService.html":{},"classes/CustomQueryBuilder.html":{},"modules/DatabaseModule.html":{},"injectables/ExcludeNullUndefinedInterceptor.html":{},"controllers/HealthController.html":{},"guards/RequestGuard.html":{},"interfaces/Response.html":{},"guards/ResponseGuard.html":{},"controllers/TagsController.html":{},"injectables/TransformInterceptor.html":{},"controllers/UsersController.html":{},"miscellaneous/variables.html":{}}}],["distance",{"_index":104,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{}}}],["distanceaway",{"_index":105,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{}}}],["dns",{"_index":812,"title":{},"body":{"controllers/HealthController.html":{}}}],["dnshealthindicator",{"_index":804,"title":{},"body":{"controllers/HealthController.html":{}}}],["docs",{"_index":824,"title":{},"body":{"controllers/HealthController.html":{}}}],["documentation",{"_index":1125,"title":{},"body":{"coverage.html":{}}}],["don't",{"_index":462,"title":{},"body":{"classes/CreateUserDto.html":{},"interfaces/IUser.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{}}}],["dotenv",{"_index":1201,"title":{},"body":{"dependencies.html":{}}}],["down",{"_index":1148,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["down(knex",{"_index":1247,"title":{},"body":{"miscellaneous/functions.html":{}}}],["dto.ts",{"_index":779,"title":{},"body":{"classes/GetManyDto.html":{},"coverage.html":{}}}],["dto.ts:10",{"_index":784,"title":{},"body":{"classes/GetManyDto.html":{}}}],["dto.ts:12",{"_index":785,"title":{},"body":{"classes/GetManyDto.html":{}}}],["dto.ts:4",{"_index":781,"title":{},"body":{"classes/GetManyDto.html":{}}}],["dto.ts:6",{"_index":782,"title":{},"body":{"classes/GetManyDto.html":{}}}],["dto.ts:8",{"_index":783,"title":{},"body":{"classes/GetManyDto.html":{}}}],["dumb",{"_index":445,"title":{},"body":{"classes/CreateUserDto.html":{},"interfaces/IUser.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{}}}],["e",{"_index":1053,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["e.g",{"_index":592,"title":{},"body":{"classes/CrudService.html":{}}}],["e2e",{"_index":1275,"title":{},"body":{"index.html":{}}}],["each",{"_index":454,"title":{},"body":{"classes/CreateUserDto.html":{},"injectables/ExcludeNullUndefinedInterceptor.html":{},"interfaces/IUser.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{}}}],["efficient",{"_index":1258,"title":{},"body":{"index.html":{}}}],["email",{"_index":414,"title":{},"body":{"classes/CreateUserDto.html":{},"interfaces/IUser.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{}}}],["emergencytype",{"_index":106,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{}}}],["empty",{"_index":683,"title":{},"body":{"classes/CustomQueryBuilder.html":{},"injectables/ExcludeNullUndefinedInterceptor.html":{},"miscellaneous/functions.html":{}}}],["end",{"_index":1049,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["entity",{"_index":541,"title":{},"body":{"classes/CrudController.html":{},"classes/CrudService.html":{},"interfaces/ICrudService.html":{},"interfaces/IPagination.html":{}}}],["entity.id",{"_index":594,"title":{},"body":{"classes/CrudService.html":{}}}],["entity.ts",{"_index":271,"title":{},"body":{"classes/BaseEntity.html":{},"coverage.html":{}}}],["entity.ts:13",{"_index":290,"title":{},"body":{"classes/BaseEntity.html":{}}}],["entity.ts:23",{"_index":295,"title":{},"body":{"classes/BaseEntity.html":{}}}],["entity.ts:31",{"_index":301,"title":{},"body":{"classes/BaseEntity.html":{}}}],["entity.ts:35",{"_index":284,"title":{},"body":{"classes/BaseEntity.html":{}}}],["entity.ts:39",{"_index":297,"title":{},"body":{"classes/BaseEntity.html":{}}}],["entity.ts:43",{"_index":286,"title":{},"body":{"classes/BaseEntity.html":{}}}],["entitynotfound",{"_index":576,"title":{},"body":{"classes/CrudService.html":{}}}],["enum",{"_index":880,"title":{},"body":{"classes/PaginationParams.html":{}}}],["enumerations",{"_index":1233,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["err",{"_index":636,"title":{},"body":{"classes/CrudService.html":{},"controllers/HealthController.html":{}}}],["error",{"_index":12,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"classes/CrudService.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/ITryRequest.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"guards/ResponseGuard.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{},"miscellaneous/typealiases.html":{}}}],["error(error",{"_index":959,"title":{},"body":{"guards/ResponseGuard.html":{}}}],["error.errors",{"_index":965,"title":{},"body":{"guards/ResponseGuard.html":{}}}],["error.message",{"_index":964,"title":{},"body":{"guards/ResponseGuard.html":{}}}],["errorhash",{"_index":1122,"title":{},"body":{"classes/ValidationFailedFilter.html":{}}}],["errors",{"_index":348,"title":{},"body":{"classes/BaseModel.html":{},"interfaces/IBaseModel.html":{},"classes/QueryFailedFilter.html":{},"guards/ResponseGuard.html":{},"dependencies.html":{}}}],["eslint",{"_index":144,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"classes/CrudService.html":{},"classes/CustomQueryBuilder.html":{},"modules/DatabaseModule.html":{},"injectables/ExcludeNullUndefinedInterceptor.html":{},"controllers/HealthController.html":{},"guards/RequestGuard.html":{},"interfaces/Response.html":{},"guards/ResponseGuard.html":{},"controllers/TagsController.html":{},"injectables/TransformInterceptor.html":{},"controllers/UsersController.html":{},"miscellaneous/variables.html":{}}}],["eslint/ban",{"_index":698,"title":{},"body":{"classes/CustomQueryBuilder.html":{}}}],["eslint/no",{"_index":190,"title":{},"body":{"modules/AppModule.html":{},"classes/CrudService.html":{},"classes/CustomQueryBuilder.html":{},"modules/DatabaseModule.html":{},"injectables/ExcludeNullUndefinedInterceptor.html":{},"controllers/HealthController.html":{},"interfaces/Response.html":{},"guards/ResponseGuard.html":{},"controllers/TagsController.html":{},"injectables/TransformInterceptor.html":{},"controllers/UsersController.html":{}}}],["eslint/require",{"_index":196,"title":{},"body":{"modules/AppModule.html":{},"classes/CrudService.html":{},"modules/DatabaseModule.html":{},"miscellaneous/variables.html":{}}}],["example",{"_index":293,"title":{},"body":{"classes/BaseEntity.html":{},"classes/CreateUserDto.html":{},"interfaces/IUser.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{}}}],["exception",{"_index":905,"title":{},"body":{"classes/QueryFailedFilter.html":{},"classes/ValidationFailedFilter.html":{}}}],["exceptionfilter",{"_index":894,"title":{},"body":{"classes/QueryFailedFilter.html":{},"classes/ValidationFailedFilter.html":{}}}],["exclude",{"_index":274,"title":{},"body":{"classes/BaseEntity.html":{}}}],["excludenullundefinedinterceptor",{"_index":759,"title":{"injectables/ExcludeNullUndefinedInterceptor.html":{}},"body":{"injectables/ExcludeNullUndefinedInterceptor.html":{},"coverage.html":{}}}],["executioncontext",{"_index":768,"title":{},"body":{"injectables/ExcludeNullUndefinedInterceptor.html":{},"guards/RequestGuard.html":{},"interfaces/Response.html":{},"guards/ResponseGuard.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/TransformInterceptor.html":{}}}],["exists",{"_index":662,"title":{},"body":{"classes/CustomQueryBuilder.html":{}}}],["export",{"_index":27,"title":{},"body":{"interfaces/APIResponse.html":{},"controllers/AppController.html":{},"interfaces/AppLaunchAction.html":{},"modules/AppModule.html":{},"classes/BaseEntity.html":{},"classes/BaseModel.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"classes/CreateTagsDto.html":{},"classes/CreateUserDto.html":{},"modules/CronModule.html":{},"injectables/CronService.html":{},"classes/CrudController.html":{},"classes/CrudService.html":{},"classes/CustomQueryBuilder.html":{},"injectables/DBHelper.html":{},"modules/DatabaseModule.html":{},"injectables/ExcludeNullUndefinedInterceptor.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"classes/GetManyDto.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"controllers/HealthController.html":{},"interfaces/IBaseModel.html":{},"interfaces/ICrudService.html":{},"interfaces/IPagination.html":{},"interfaces/IPagination-1.html":{},"interfaces/ITag.html":{},"interfaces/ITryRequest.html":{},"interfaces/IUser.html":{},"classes/PaginationParams.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"classes/QueryFailedFilter.html":{},"guards/RequestGuard.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/Response.html":{},"guards/ResponseGuard.html":{},"classes/Tag.html":{},"controllers/TagsController.html":{},"modules/TagsModule.html":{},"injectables/TagsService.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateTagsDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"classes/ValidationFailedFilter.html":{}}}],["exports",{"_index":167,"title":{},"body":{"modules/AppModule.html":{},"modules/CronModule.html":{},"modules/DatabaseModule.html":{},"modules/TagsModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["express",{"_index":1184,"title":{},"body":{"dependencies.html":{}}}],["expression",{"_index":338,"title":{},"body":{"classes/BaseModel.html":{},"classes/Tag.html":{},"classes/User.html":{}}}],["extend.ts",{"_index":1143,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["extendmoment(momentdefault",{"_index":1318,"title":{},"body":{"miscellaneous/variables.html":{}}}],["extends",{"_index":131,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"classes/BaseModel.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"classes/CreateTagsDto.html":{},"classes/CreateUserDto.html":{},"classes/CustomQueryBuilder.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/IBaseModel.html":{},"interfaces/ITag.html":{},"interfaces/IUser.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"classes/Tag.html":{},"classes/UpdateTagsDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{}}}],["fact16",{"_index":492,"title":{},"body":{"injectables/CronService.html":{}}}],["factorial",{"_index":495,"title":{},"body":{"injectables/CronService.html":{}}}],["factorial(n",{"_index":499,"title":{},"body":{"injectables/CronService.html":{}}}],["failed.filter.ts",{"_index":893,"title":{},"body":{"classes/QueryFailedFilter.html":{},"classes/ValidationFailedFilter.html":{},"coverage.html":{}}}],["failed.filter.ts:22",{"_index":904,"title":{},"body":{"classes/QueryFailedFilter.html":{}}}],["failed.filter.ts:8",{"_index":1119,"title":{},"body":{"classes/ValidationFailedFilter.html":{}}}],["false",{"_index":282,"title":{},"body":{"classes/BaseEntity.html":{},"classes/CrudService.html":{},"guards/ResponseGuard.html":{}}}],["feed",{"_index":100,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{}}}],["fetch",{"_index":359,"title":{},"body":{"classes/BaseModel.html":{},"interfaces/IBaseModel.html":{}}}],["fetchrelation",{"_index":323,"title":{},"body":{"classes/BaseModel.html":{},"classes/Tag.html":{},"classes/User.html":{}}}],["fetchrelation(expression",{"_index":333,"title":{},"body":{"classes/BaseModel.html":{},"interfaces/IBaseModel.html":{},"classes/Tag.html":{},"classes/User.html":{}}}],["fields",{"_index":353,"title":{},"body":{"classes/BaseModel.html":{},"classes/CreateUserDto.html":{},"interfaces/IBaseModel.html":{},"interfaces/IUser.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{}}}],["file",{"_index":5,"title":{},"body":{"interfaces/APIResponse.html":{},"controllers/AppController.html":{},"interfaces/AppLaunchAction.html":{},"modules/AppModule.html":{},"classes/BaseEntity.html":{},"classes/BaseModel.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"classes/CreateTagsDto.html":{},"classes/CreateUserDto.html":{},"modules/CronModule.html":{},"injectables/CronService.html":{},"classes/CrudController.html":{},"classes/CrudService.html":{},"classes/CustomQueryBuilder.html":{},"injectables/DBHelper.html":{},"modules/DatabaseModule.html":{},"injectables/ExcludeNullUndefinedInterceptor.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"classes/GetManyDto.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"controllers/HealthController.html":{},"interfaces/IBaseModel.html":{},"interfaces/ICrudService.html":{},"interfaces/IPagination.html":{},"interfaces/IPagination-1.html":{},"interfaces/ITag.html":{},"interfaces/ITryRequest.html":{},"interfaces/IUser.html":{},"classes/PaginationParams.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"classes/QueryFailedFilter.html":{},"guards/RequestGuard.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/Response.html":{},"guards/ResponseGuard.html":{},"classes/Tag.html":{},"controllers/TagsController.html":{},"modules/TagsModule.html":{},"injectables/TagsService.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateTagsDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"classes/ValidationFailedFilter.html":{},"coverage.html":{}}}],["filename",{"_index":755,"title":{},"body":{"modules/DatabaseModule.html":{},"miscellaneous/variables.html":{}}}],["filter",{"_index":354,"title":{},"body":{"classes/BaseModel.html":{},"classes/CrudController.html":{},"classes/CrudService.html":{},"interfaces/IBaseModel.html":{},"interfaces/ICrudService.html":{}}}],["filter((value",{"_index":732,"title":{},"body":{"injectables/DBHelper.html":{}}}],["find",{"_index":712,"title":{},"body":{"injectables/DBHelper.html":{},"dependencies.html":{}}}],["find(find",{"_index":715,"title":{},"body":{"injectables/DBHelper.html":{}}}],["findall",{"_index":528,"title":{},"body":{"classes/CrudController.html":{},"classes/CrudService.html":{},"interfaces/ICrudService.html":{},"controllers/TagsController.html":{},"injectables/TagsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["findall(filter",{"_index":545,"title":{},"body":{"classes/CrudController.html":{},"classes/CrudService.html":{},"interfaces/ICrudService.html":{},"interfaces/IPagination.html":{}}}],["findby",{"_index":711,"title":{},"body":{"injectables/DBHelper.html":{}}}],["findbyid",{"_index":529,"title":{},"body":{"classes/CrudController.html":{}}}],["findbyid(@param('id",{"_index":564,"title":{},"body":{"classes/CrudController.html":{}}}],["findbyid(id",{"_index":548,"title":{},"body":{"classes/CrudController.html":{}}}],["findconditions",{"_index":588,"title":{},"body":{"classes/CrudService.html":{},"interfaces/ICrudService.html":{},"interfaces/IPagination.html":{}}}],["findmanyoptions",{"_index":584,"title":{},"body":{"classes/CrudService.html":{},"interfaces/ICrudService.html":{},"interfaces/IPagination.html":{}}}],["findone",{"_index":577,"title":{},"body":{"classes/CrudService.html":{},"interfaces/ICrudService.html":{},"interfaces/IPagination.html":{},"controllers/TagsController.html":{},"injectables/TagsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["findone(@param('id",{"_index":1004,"title":{},"body":{"controllers/TagsController.html":{},"controllers/UsersController.html":{}}}],["findone(id",{"_index":597,"title":{},"body":{"classes/CrudService.html":{},"interfaces/ICrudService.html":{},"controllers/TagsController.html":{},"injectables/TagsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["findonebyid(id).pipe(map(entity",{"_index":593,"title":{},"body":{"classes/CrudService.html":{}}}],["findoneoptions",{"_index":598,"title":{},"body":{"classes/CrudService.html":{},"interfaces/ICrudService.html":{},"interfaces/IPagination.html":{}}}],["findoneorfail",{"_index":578,"title":{},"body":{"classes/CrudService.html":{}}}],["findoneorfail(id",{"_index":600,"title":{},"body":{"classes/CrudService.html":{}}}],["first",{"_index":252,"title":{},"body":{"modules/AppModule.html":{},"injectables/TagsService.html":{}}}],["firstname",{"_index":415,"title":{},"body":{"classes/CreateUserDto.html":{},"interfaces/IUser.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{}}}],["fixme",{"_index":570,"title":{},"body":{"classes/CrudController.html":{}}}],["fn",{"_index":340,"title":{},"body":{"classes/BaseModel.html":{},"interfaces/IBaseModel.html":{}}}],["fn.now",{"_index":369,"title":{},"body":{"classes/BaseModel.html":{},"interfaces/IBaseModel.html":{}}}],["follower",{"_index":127,"title":{"interfaces/Follower.html":{}},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{},"coverage.html":{}}}],["following",{"_index":55,"title":{"interfaces/Following.html":{}},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{},"coverage.html":{}}}],["foreignkeyviolationerror",{"_index":899,"title":{},"body":{"classes/QueryFailedFilter.html":{}}}],["format",{"_index":437,"title":{},"body":{"classes/CreateUserDto.html":{},"interfaces/IUser.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{}}}],["found",{"_index":630,"title":{},"body":{"classes/CrudService.html":{}}}],["framework",{"_index":1256,"title":{},"body":{"index.html":{}}}],["function",{"_index":254,"title":{},"body":{"modules/AppModule.html":{},"classes/CustomQueryBuilder.html":{},"guards/RequestGuard.html":{},"guards/ResponseGuard.html":{},"coverage.html":{}}}],["functions",{"_index":1235,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["fuzzy",{"_index":446,"title":{},"body":{"classes/CreateUserDto.html":{},"interfaces/IUser.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{}}}],["gender",{"_index":56,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{}}}],["generated",{"_index":395,"title":{},"body":{"classes/CreateTagsDto.html":{},"classes/CreateUserDto.html":{},"interfaces/ITag.html":{},"interfaces/IUser.html":{},"classes/Tag.html":{},"classes/UpdateTagsDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{}}}],["generic",{"_index":855,"title":{},"body":{"interfaces/IPagination-1.html":{},"classes/PaginationParams.html":{}}}],["get(':id",{"_index":549,"title":{},"body":{"classes/CrudController.html":{},"controllers/TagsController.html":{},"controllers/UsersController.html":{}}}],["get()@httpcode(200)@healthcheck",{"_index":791,"title":{},"body":{"controllers/HealthController.html":{}}}],["getapplaunchdata",{"_index":29,"title":{"interfaces/GetAppLaunchData.html":{}},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["getcomments",{"_index":32,"title":{"interfaces/GetComments.html":{}},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["getfollowers",{"_index":34,"title":{"interfaces/GetFollowers.html":{}},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["getfollowing",{"_index":35,"title":{"interfaces/GetFollowing.html":{}},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["gethello",{"_index":139,"title":{},"body":{"controllers/AppController.html":{}}}],["getmanydefaultresponse",{"_index":780,"title":{},"body":{"classes/GetManyDto.html":{}}}],["getmanydto",{"_index":776,"title":{"classes/GetManyDto.html":{}},"body":{"classes/GetManyDto.html":{},"coverage.html":{}}}],["getnotifications",{"_index":80,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{}}}],["getpasswordhash",{"_index":579,"title":{},"body":{"classes/CrudService.html":{}}}],["getpasswordhash(password",{"_index":602,"title":{},"body":{"classes/CrudService.html":{}}}],["getrescuelist",{"_index":33,"title":{"interfaces/GetRescueList.html":{}},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["getting",{"_index":1252,"title":{"index.html":{}},"body":{}}],["getuserposts",{"_index":31,"title":{"interfaces/GetUserPosts.html":{}},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["getuserprofile",{"_index":30,"title":{"interfaces/GetUserProfile.html":{}},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["global",{"_index":738,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["graph",{"_index":1305,"title":{},"body":{"modules.html":{}}}],["grow",{"_index":1282,"title":{},"body":{"index.html":{}}}],["guard",{"_index":920,"title":{"guards/RequestGuard.html":{},"guards/ResponseGuard.html":{}},"body":{"guards/RequestGuard.html":{},"coverage.html":{}}}],["guards",{"_index":922,"title":{},"body":{"guards/RequestGuard.html":{},"guards/ResponseGuard.html":{},"overview.html":{}}}],["handlecron",{"_index":496,"title":{},"body":{"injectables/CronService.html":{}}}],["handleinterval",{"_index":497,"title":{},"body":{"injectables/CronService.html":{}}}],["handletimeout",{"_index":498,"title":{},"body":{"injectables/CronService.html":{}}}],["hapi/joi",{"_index":205,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["hasmore",{"_index":700,"title":{},"body":{"classes/CustomQueryBuilder.html":{}}}],["health",{"_index":239,"title":{},"body":{"modules/AppModule.html":{},"controllers/HealthController.html":{}}}],["health/health.controller",{"_index":209,"title":{},"body":{"modules/AppModule.html":{}}}],["healthcheck",{"_index":805,"title":{},"body":{"controllers/HealthController.html":{}}}],["healthcheckservice",{"_index":806,"title":{},"body":{"controllers/HealthController.html":{}}}],["healthcontroller",{"_index":178,"title":{"controllers/HealthController.html":{}},"body":{"modules/AppModule.html":{},"controllers/HealthController.html":{},"coverage.html":{}}}],["hello",{"_index":157,"title":{},"body":{"controllers/AppController.html":{}}}],["helmet",{"_index":1204,"title":{},"body":{"dependencies.html":{}}}],["helpers",{"_index":351,"title":{},"body":{"classes/BaseModel.html":{},"interfaces/IBaseModel.html":{},"guards/RequestGuard.html":{},"guards/ResponseGuard.html":{}}}],["here",{"_index":1291,"title":{},"body":{"index.html":{}}}],["hidden",{"_index":318,"title":{},"body":{"classes/BaseModel.html":{},"interfaces/IBaseModel.html":{},"classes/Tag.html":{},"classes/User.html":{}}}],["host",{"_index":902,"title":{},"body":{"classes/QueryFailedFilter.html":{},"classes/ValidationFailedFilter.html":{}}}],["host.switchtohttp",{"_index":907,"title":{},"body":{"classes/QueryFailedFilter.html":{},"classes/ValidationFailedFilter.html":{}}}],["httpcode",{"_index":801,"title":{},"body":{"controllers/HealthController.html":{}}}],["httpcode(200",{"_index":821,"title":{},"body":{"controllers/HealthController.html":{}}}],["https://docs.nestjs.com",{"_index":825,"title":{},"body":{"controllers/HealthController.html":{}}}],["https://github.com/microsoft/typescript/issues/21592",{"_index":634,"title":{},"body":{"classes/CrudService.html":{}}}],["https://github.com/typeorm/typeorm/issues/1544",{"_index":571,"title":{},"body":{"classes/CrudController.html":{}}}],["https://nestjs.com",{"_index":1298,"title":{},"body":{"index.html":{}}}],["httpstatus",{"_index":24,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"classes/QueryFailedFilter.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{},"classes/ValidationFailedFilter.html":{}}}],["httpstatus.precondition_failed",{"_index":912,"title":{},"body":{"classes/QueryFailedFilter.html":{},"classes/ValidationFailedFilter.html":{}}}],["ibasemodel",{"_index":315,"title":{"interfaces/IBaseModel.html":{}},"body":{"classes/BaseModel.html":{},"interfaces/IBaseModel.html":{},"coverage.html":{}}}],["icrud.service",{"_index":560,"title":{},"body":{"classes/CrudController.html":{},"classes/CrudService.html":{}}}],["icrudservice",{"_index":534,"title":{"interfaces/ICrudService.html":{}},"body":{"classes/CrudController.html":{},"classes/CrudService.html":{},"interfaces/ICrudService.html":{},"interfaces/IPagination.html":{},"coverage.html":{}}}],["id",{"_index":275,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseModel.html":{},"classes/CreateTagsDto.html":{},"classes/CreateUserDto.html":{},"classes/CrudController.html":{},"classes/CrudService.html":{},"interfaces/IBaseModel.html":{},"interfaces/ICrudService.html":{},"interfaces/IPagination.html":{},"interfaces/ITag.html":{},"interfaces/IUser.html":{},"classes/Tag.html":{},"controllers/TagsController.html":{},"injectables/TagsService.html":{},"classes/UpdateTagsDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["id'})@delete(':id",{"_index":1080,"title":{},"body":{"controllers/UsersController.html":{}}}],["id'})@get(':id",{"_index":1077,"title":{},"body":{"controllers/UsersController.html":{}}}],["id'})@put(':id",{"_index":1083,"title":{},"body":{"controllers/UsersController.html":{}}}],["identifier",{"_index":1126,"title":{},"body":{"coverage.html":{}}}],["ignore",{"_index":646,"title":{},"body":{"classes/CrudService.html":{},"classes/QueryFailedFilter.html":{},"classes/ValidationFailedFilter.html":{}}}],["implements",{"_index":240,"title":{},"body":{"modules/AppModule.html":{},"classes/BaseModel.html":{},"classes/CreateTagsDto.html":{},"classes/CreateUserDto.html":{},"classes/CrudService.html":{},"injectables/ExcludeNullUndefinedInterceptor.html":{},"classes/GetManyDto.html":{},"controllers/HealthController.html":{},"interfaces/IBaseModel.html":{},"interfaces/ITag.html":{},"interfaces/IUser.html":{},"classes/QueryFailedFilter.html":{},"guards/RequestGuard.html":{},"interfaces/Response.html":{},"guards/ResponseGuard.html":{},"classes/Tag.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateTagsDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"classes/ValidationFailedFilter.html":{}}}],["import",{"_index":25,"title":{},"body":{"interfaces/APIResponse.html":{},"controllers/AppController.html":{},"interfaces/AppLaunchAction.html":{},"modules/AppModule.html":{},"classes/BaseEntity.html":{},"classes/BaseModel.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"classes/CreateTagsDto.html":{},"classes/CreateUserDto.html":{},"modules/CronModule.html":{},"injectables/CronService.html":{},"classes/CrudController.html":{},"classes/CrudService.html":{},"classes/CustomQueryBuilder.html":{},"injectables/DBHelper.html":{},"modules/DatabaseModule.html":{},"injectables/ExcludeNullUndefinedInterceptor.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"classes/GetManyDto.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"controllers/HealthController.html":{},"interfaces/IBaseModel.html":{},"interfaces/ICrudService.html":{},"interfaces/IPagination.html":{},"interfaces/ITag.html":{},"interfaces/IUser.html":{},"classes/PaginationParams.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"classes/QueryFailedFilter.html":{},"guards/RequestGuard.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/Response.html":{},"guards/ResponseGuard.html":{},"classes/Tag.html":{},"controllers/TagsController.html":{},"modules/TagsModule.html":{},"injectables/TagsService.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateTagsDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"classes/ValidationFailedFilter.html":{}}}],["imports",{"_index":179,"title":{},"body":{"modules/AppModule.html":{}}}],["in,no",{"_index":936,"title":{},"body":{"guards/RequestGuard.html":{}}}],["included",{"_index":851,"title":{},"body":{"interfaces/ICrudService.html":{},"interfaces/IPagination.html":{},"interfaces/IPagination-1.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"interfaces/APIResponse.html":{},"controllers/AppController.html":{},"interfaces/AppLaunchAction.html":{},"classes/BaseEntity.html":{},"classes/BaseModel.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"classes/CreateTagsDto.html":{},"classes/CreateUserDto.html":{},"injectables/CronService.html":{},"classes/CrudController.html":{},"classes/CrudService.html":{},"classes/CustomQueryBuilder.html":{},"injectables/DBHelper.html":{},"injectables/ExcludeNullUndefinedInterceptor.html":{},"interfaces/Follower.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"classes/GetManyDto.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"controllers/HealthController.html":{},"interfaces/IBaseModel.html":{},"interfaces/ICrudService.html":{},"interfaces/IPagination.html":{},"interfaces/IPagination-1.html":{},"interfaces/ITag.html":{},"interfaces/ITryRequest.html":{},"interfaces/IUser.html":{},"classes/PaginationParams.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"classes/QueryFailedFilter.html":{},"guards/RequestGuard.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/Response.html":{},"guards/ResponseGuard.html":{},"classes/Tag.html":{},"controllers/TagsController.html":{},"injectables/TagsService.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/TransformInterceptor.html":{},"classes/User.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"classes/ValidationFailedFilter.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"interfaces/APIResponse.html":{},"controllers/AppController.html":{},"interfaces/AppLaunchAction.html":{},"modules/AppModule.html":{},"classes/BaseEntity.html":{},"classes/BaseModel.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"classes/CreateTagsDto.html":{},"classes/CreateUserDto.html":{},"modules/CronModule.html":{},"injectables/CronService.html":{},"classes/CrudController.html":{},"classes/CrudService.html":{},"classes/CustomQueryBuilder.html":{},"injectables/DBHelper.html":{},"modules/DatabaseModule.html":{},"injectables/ExcludeNullUndefinedInterceptor.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"classes/GetManyDto.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"controllers/HealthController.html":{},"interfaces/IBaseModel.html":{},"interfaces/ICrudService.html":{},"interfaces/IPagination.html":{},"interfaces/IPagination-1.html":{},"interfaces/ITag.html":{},"interfaces/ITryRequest.html":{},"interfaces/IUser.html":{},"classes/PaginationParams.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"classes/QueryFailedFilter.html":{},"guards/RequestGuard.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/Response.html":{},"guards/ResponseGuard.html":{},"classes/Tag.html":{},"controllers/TagsController.html":{},"modules/TagsModule.html":{},"injectables/TagsService.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateTagsDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"classes/ValidationFailedFilter.html":{}}}],["inherited",{"_index":979,"title":{},"body":{"classes/Tag.html":{},"classes/User.html":{}}}],["initialized",{"_index":264,"title":{},"body":{"modules/AppModule.html":{},"controllers/HealthController.html":{}}}],["inject",{"_index":1023,"title":{},"body":{"injectables/TagsService.html":{},"injectables/UsersService.html":{}}}],["injectable",{"_index":478,"title":{"injectables/CronService.html":{},"injectables/DBHelper.html":{},"injectables/ExcludeNullUndefinedInterceptor.html":{},"injectables/TagsService.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/TransformInterceptor.html":{},"injectables/UsersService.html":{}},"body":{"injectables/CronService.html":{},"injectables/DBHelper.html":{},"injectables/ExcludeNullUndefinedInterceptor.html":{},"guards/RequestGuard.html":{},"interfaces/Response.html":{},"guards/ResponseGuard.html":{},"injectables/TagsService.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/TransformInterceptor.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["injectables",{"_index":479,"title":{},"body":{"injectables/CronService.html":{},"injectables/DBHelper.html":{},"injectables/ExcludeNullUndefinedInterceptor.html":{},"injectables/TagsService.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/TransformInterceptor.html":{},"injectables/UsersService.html":{},"overview.html":{}}}],["inputs",{"_index":932,"title":{},"body":{"guards/RequestGuard.html":{}}}],["inputs[key",{"_index":940,"title":{},"body":{"guards/RequestGuard.html":{}}}],["installation",{"_index":1264,"title":{},"body":{"index.html":{}}}],["installrunning",{"_index":1266,"title":{},"body":{"index.html":{}}}],["instance",{"_index":400,"title":{},"body":{"classes/CreateTagsDto.html":{},"classes/CreateUserDto.html":{},"interfaces/ITag.html":{},"interfaces/IUser.html":{},"classes/Tag.html":{},"classes/UpdateTagsDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{}}}],["instanceof",{"_index":941,"title":{},"body":{"guards/RequestGuard.html":{},"guards/ResponseGuard.html":{},"injectables/TimeoutInterceptor.html":{}}}],["integer",{"_index":404,"title":{},"body":{"classes/CreateTagsDto.html":{},"classes/CreateUserDto.html":{},"interfaces/ITag.html":{},"interfaces/IUser.html":{},"classes/Tag.html":{},"classes/UpdateTagsDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{}}}],["intercept",{"_index":766,"title":{},"body":{"injectables/ExcludeNullUndefinedInterceptor.html":{},"interfaces/Response.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/TransformInterceptor.html":{}}}],["intercept(context",{"_index":767,"title":{},"body":{"injectables/ExcludeNullUndefinedInterceptor.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/TransformInterceptor.html":{}}}],["interceptor",{"_index":1039,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["interceptors",{"_index":763,"title":{},"body":{"injectables/ExcludeNullUndefinedInterceptor.html":{}}}],["interface",{"_index":0,"title":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/IBaseModel.html":{},"interfaces/ICrudService.html":{},"interfaces/IPagination.html":{},"interfaces/IPagination-1.html":{},"interfaces/ITag.html":{},"interfaces/ITryRequest.html":{},"interfaces/IUser.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/Response.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{}},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"classes/BaseModel.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"classes/CreateTagsDto.html":{},"classes/CreateUserDto.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/IBaseModel.html":{},"interfaces/ICrudService.html":{},"interfaces/IPagination.html":{},"interfaces/IPagination-1.html":{},"interfaces/ITag.html":{},"interfaces/ITryRequest.html":{},"interfaces/IUser.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/Response.html":{},"classes/Tag.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateTagsDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{},"coverage.html":{}}}],["interfaces",{"_index":2,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/IBaseModel.html":{},"interfaces/ICrudService.html":{},"interfaces/IPagination.html":{},"interfaces/IPagination-1.html":{},"interfaces/ITag.html":{},"interfaces/ITryRequest.html":{},"interfaces/IUser.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/Response.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{},"overview.html":{}}}],["interval",{"_index":484,"title":{},"body":{"injectables/CronService.html":{},"controllers/HealthController.html":{}}}],["interval(100000",{"_index":504,"title":{},"body":{"injectables/CronService.html":{}}}],["interval(5000).pipe",{"_index":818,"title":{},"body":{"controllers/HealthController.html":{}}}],["ipagination",{"_index":850,"title":{"interfaces/IPagination.html":{},"interfaces/IPagination-1.html":{}},"body":{"interfaces/ICrudService.html":{},"interfaces/IPagination.html":{},"interfaces/IPagination-1.html":{},"coverage.html":{}}}],["isactive",{"_index":49,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"classes/CreateUserDto.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/IUser.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{}}}],["isboolean",{"_index":432,"title":{},"body":{"classes/CreateUserDto.html":{},"interfaces/IUser.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{}}}],["isemail",{"_index":431,"title":{},"body":{"classes/CreateUserDto.html":{},"interfaces/IUser.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{}}}],["isempty",{"_index":1152,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["isempty(value",{"_index":684,"title":{},"body":{"classes/CustomQueryBuilder.html":{},"miscellaneous/functions.html":{}}}],["isglobal",{"_index":214,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["isnotempty",{"_index":382,"title":{},"body":{"classes/CreateTagsDto.html":{},"classes/CreateUserDto.html":{},"interfaces/ITag.html":{},"interfaces/IUser.html":{},"classes/Tag.html":{},"classes/UpdateTagsDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["isnotempty(records",{"_index":706,"title":{},"body":{"classes/CustomQueryBuilder.html":{}}}],["isnotempty(value",{"_index":1249,"title":{},"body":{"miscellaneous/functions.html":{}}}],["isobject",{"_index":1154,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["isobject(value",{"_index":681,"title":{},"body":{"classes/CustomQueryBuilder.html":{},"miscellaneous/functions.html":{}}}],["isoptional",{"_index":430,"title":{},"body":{"classes/CreateUserDto.html":{},"interfaces/IUser.html":{},"classes/PaginationParams.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{}}}],["isownprofile",{"_index":57,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{}}}],["isrecent",{"_index":99,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{}}}],["isrescuer",{"_index":58,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{}}}],["isstring",{"_index":383,"title":{},"body":{"classes/CreateTagsDto.html":{},"classes/CreateUserDto.html":{},"interfaces/ITag.html":{},"interfaces/IUser.html":{},"classes/Tag.html":{},"classes/UpdateTagsDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{}}}],["isuserreactedtopost",{"_index":87,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{}}}],["itag",{"_index":375,"title":{"interfaces/ITag.html":{}},"body":{"classes/CreateTagsDto.html":{},"interfaces/ITag.html":{},"classes/Tag.html":{},"classes/UpdateTagsDto.html":{},"coverage.html":{}}}],["items",{"_index":618,"title":{},"body":{"classes/CrudService.html":{},"interfaces/ICrudService.html":{},"interfaces/IPagination.html":{},"interfaces/IPagination-1.html":{}}}],["itryrequest",{"_index":856,"title":{"interfaces/ITryRequest.html":{}},"body":{"interfaces/ITryRequest.html":{},"coverage.html":{}}}],["iuser",{"_index":413,"title":{"interfaces/IUser.html":{}},"body":{"classes/CreateUserDto.html":{},"interfaces/IUser.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"coverage.html":{}}}],["jobs",{"_index":483,"title":{},"body":{"injectables/CronService.html":{}}}],["joi",{"_index":204,"title":{},"body":{"modules/AppModule.html":{}}}],["joi.number().default(3000",{"_index":222,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["joi.object",{"_index":220,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["joi.string",{"_index":224,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["joi.string().required",{"_index":232,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["join",{"_index":1288,"title":{},"body":{"index.html":{}}}],["json",{"_index":392,"title":{},"body":{"classes/CreateTagsDto.html":{},"classes/CreateUserDto.html":{},"interfaces/ITag.html":{},"interfaces/IUser.html":{},"classes/Tag.html":{},"classes/UpdateTagsDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{}}}],["jsonschema",{"_index":387,"title":{},"body":{"classes/CreateTagsDto.html":{},"classes/CreateUserDto.html":{},"interfaces/ITag.html":{},"interfaces/IUser.html":{},"classes/Tag.html":{},"classes/UpdateTagsDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{}}}],["kamil",{"_index":1295,"title":{},"body":{"index.html":{}}}],["keep",{"_index":815,"title":{},"body":{"controllers/HealthController.html":{}}}],["key",{"_index":939,"title":{},"body":{"guards/RequestGuard.html":{}}}],["keyof",{"_index":890,"title":{},"body":{"classes/PaginationParams.html":{}}}],["knex",{"_index":739,"title":{},"body":{"modules/DatabaseModule.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["knex.sqlite",{"_index":756,"title":{},"body":{"modules/DatabaseModule.html":{},"miscellaneous/variables.html":{}}}],["knexconnection",{"_index":749,"title":{},"body":{"modules/DatabaseModule.html":{},"miscellaneous/variables.html":{}}}],["knexsnakecasemappers",{"_index":740,"title":{},"body":{"modules/DatabaseModule.html":{},"miscellaneous/variables.html":{}}}],["lastname",{"_index":416,"title":{},"body":{"classes/CreateUserDto.html":{},"interfaces/IUser.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{}}}],["latitude",{"_index":59,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{}}}],["legend",{"_index":163,"title":{},"body":{"modules/AppModule.html":{},"modules/CronModule.html":{},"modules/TagsModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["license",{"_index":1301,"title":{},"body":{"index.html":{}}}],["licensed",{"_index":1279,"title":{},"body":{"index.html":{}}}],["limit",{"_index":876,"title":{},"body":{"classes/PaginationParams.html":{},"dependencies.html":{}}}],["line",{"_index":624,"title":{},"body":{"classes/CrudService.html":{},"classes/CustomQueryBuilder.html":{},"modules/DatabaseModule.html":{},"injectables/ExcludeNullUndefinedInterceptor.html":{},"guards/RequestGuard.html":{},"interfaces/Response.html":{},"guards/ResponseGuard.html":{},"injectables/TransformInterceptor.html":{},"miscellaneous/variables.html":{}}}],["link",{"_index":37,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{}}}],["listing",{"_index":852,"title":{},"body":{"interfaces/ICrudService.html":{},"interfaces/IPagination.html":{},"interfaces/IPagination-1.html":{}}}],["literal",{"_index":944,"title":{},"body":{"interfaces/Rescues.html":{}}}],["local",{"_index":1216,"title":{},"body":{"dependencies.html":{}}}],["lodash",{"_index":679,"title":{},"body":{"classes/CustomQueryBuilder.html":{},"injectables/DBHelper.html":{},"dependencies.html":{}}}],["logger",{"_index":493,"title":{},"body":{"injectables/CronService.html":{}}}],["logger(cronservice.name",{"_index":512,"title":{},"body":{"injectables/CronService.html":{}}}],["logging",{"_index":233,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["longitude",{"_index":60,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{}}}],["loop",{"_index":708,"title":{},"body":{"classes/CustomQueryBuilder.html":{}}}],["loop,@typescript",{"_index":705,"title":{},"body":{"classes/CustomQueryBuilder.html":{}}}],["many",{"_index":778,"title":{},"body":{"classes/GetManyDto.html":{},"coverage.html":{}}}],["map",{"_index":774,"title":{},"body":{"injectables/ExcludeNullUndefinedInterceptor.html":{},"controllers/HealthController.html":{},"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{},"dependencies.html":{}}}],["map((_",{"_index":819,"title":{},"body":{"controllers/HealthController.html":{}}}],["mappedpartialtype",{"_index":379,"title":{},"body":{"classes/CreateTagsDto.html":{},"classes/CreateUserDto.html":{},"interfaces/ITag.html":{},"interfaces/IUser.html":{},"classes/Tag.html":{},"classes/UpdateTagsDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{}}}],["mapping",{"_index":361,"title":{},"body":{"classes/BaseModel.html":{},"interfaces/IBaseModel.html":{}}}],["match",{"_index":447,"title":{},"body":{"classes/CreateUserDto.html":{},"interfaces/IUser.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{}}}],["matching",{"_index":132,"title":{},"body":{"interfaces/APIResponse.html":{},"controllers/AppController.html":{},"interfaces/AppLaunchAction.html":{},"modules/AppModule.html":{},"classes/BaseEntity.html":{},"classes/BaseModel.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"classes/CreateTagsDto.html":{},"classes/CreateUserDto.html":{},"modules/CronModule.html":{},"injectables/CronService.html":{},"classes/CrudController.html":{},"classes/CrudService.html":{},"classes/CustomQueryBuilder.html":{},"injectables/DBHelper.html":{},"modules/DatabaseModule.html":{},"injectables/ExcludeNullUndefinedInterceptor.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"classes/GetManyDto.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"controllers/HealthController.html":{},"interfaces/IBaseModel.html":{},"interfaces/ICrudService.html":{},"interfaces/IPagination.html":{},"interfaces/IPagination-1.html":{},"interfaces/ITag.html":{},"interfaces/ITryRequest.html":{},"interfaces/IUser.html":{},"classes/PaginationParams.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"classes/QueryFailedFilter.html":{},"guards/RequestGuard.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/Response.html":{},"guards/ResponseGuard.html":{},"classes/Tag.html":{},"controllers/TagsController.html":{},"modules/TagsModule.html":{},"injectables/TagsService.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateTagsDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"classes/ValidationFailedFilter.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["math.ceil(result.total",{"_index":691,"title":{},"body":{"classes/CustomQueryBuilder.html":{}}}],["max",{"_index":878,"title":{},"body":{"classes/PaginationParams.html":{}}}],["max(50",{"_index":886,"title":{},"body":{"classes/PaginationParams.html":{}}}],["maximum",{"_index":873,"title":{},"body":{"classes/PaginationParams.html":{}}}],["maxlength",{"_index":384,"title":{},"body":{"classes/CreateTagsDto.html":{},"classes/CreateUserDto.html":{},"interfaces/ITag.html":{},"interfaces/IUser.html":{},"classes/Tag.html":{},"classes/UpdateTagsDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{}}}],["maxlength(36",{"_index":408,"title":{},"body":{"classes/CreateTagsDto.html":{},"classes/CreateUserDto.html":{},"interfaces/ITag.html":{},"interfaces/IUser.html":{},"classes/Tag.html":{},"classes/UpdateTagsDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{}}}],["mb",{"_index":830,"title":{},"body":{"controllers/HealthController.html":{}}}],["member",{"_index":194,"title":{},"body":{"modules/AppModule.html":{},"classes/CustomQueryBuilder.html":{},"controllers/HealthController.html":{}}}],["memory",{"_index":817,"title":{},"body":{"controllers/HealthController.html":{}}}],["mergemap",{"_index":612,"title":{},"body":{"classes/CrudService.html":{}}}],["mergemap((signal",{"_index":654,"title":{},"body":{"classes/CrudService.html":{}}}],["message",{"_index":13,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"classes/QueryFailedFilter.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"guards/ResponseGuard.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{},"classes/ValidationFailedFilter.html":{}}}],["messageevent",{"_index":802,"title":{},"body":{"controllers/HealthController.html":{}}}],["meta",{"_index":970,"title":{},"body":{"guards/ResponseGuard.html":{}}}],["metadata",{"_index":1220,"title":{},"body":{"dependencies.html":{}}}],["method",{"_index":486,"title":{},"body":{"injectables/CronService.html":{},"classes/CrudService.html":{}}}],["methods",{"_index":138,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"classes/BaseModel.html":{},"injectables/CronService.html":{},"classes/CrudController.html":{},"classes/CrudService.html":{},"classes/CustomQueryBuilder.html":{},"injectables/DBHelper.html":{},"injectables/ExcludeNullUndefinedInterceptor.html":{},"controllers/HealthController.html":{},"interfaces/ICrudService.html":{},"classes/QueryFailedFilter.html":{},"guards/RequestGuard.html":{},"guards/ResponseGuard.html":{},"classes/Tag.html":{},"controllers/TagsController.html":{},"injectables/TagsService.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/TransformInterceptor.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"classes/ValidationFailedFilter.html":{}}}],["metrics",{"_index":795,"title":{},"body":{"controllers/HealthController.html":{}}}],["metrics.os",{"_index":837,"title":{},"body":{"controllers/HealthController.html":{}}}],["middlename",{"_index":417,"title":{},"body":{"classes/CreateUserDto.html":{},"interfaces/IUser.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{}}}],["milliseconds",{"_index":1051,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["min",{"_index":879,"title":{},"body":{"classes/PaginationParams.html":{}}}],["min(0",{"_index":885,"title":{},"body":{"classes/PaginationParams.html":{}}}],["minimum",{"_index":869,"title":{},"body":{"classes/PaginationParams.html":{}}}],["minlength",{"_index":385,"title":{},"body":{"classes/CreateTagsDto.html":{},"classes/CreateUserDto.html":{},"interfaces/ITag.html":{},"interfaces/IUser.html":{},"classes/Tag.html":{},"classes/UpdateTagsDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{}}}],["minlength(2",{"_index":407,"title":{},"body":{"classes/CreateTagsDto.html":{},"classes/CreateUserDto.html":{},"interfaces/ITag.html":{},"interfaces/IUser.html":{},"classes/Tag.html":{},"classes/UpdateTagsDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{}}}],["minlength(8",{"_index":470,"title":{},"body":{"classes/CreateUserDto.html":{},"interfaces/IUser.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{}}}],["miscellaneous",{"_index":1232,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":1278,"title":{},"body":{"index.html":{}}}],["mixed",{"_index":463,"title":{},"body":{"classes/CreateUserDto.html":{},"interfaces/IUser.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{}}}],["mixin",{"_index":341,"title":{},"body":{"classes/BaseModel.html":{},"interfaces/IBaseModel.html":{}}}],["mixin(model",{"_index":352,"title":{},"body":{"classes/BaseModel.html":{},"interfaces/IBaseModel.html":{}}}],["mode",{"_index":1270,"title":{},"body":{"index.html":{}}}],["model",{"_index":342,"title":{},"body":{"classes/BaseModel.html":{},"classes/CreateTagsDto.html":{},"classes/CreateUserDto.html":{},"classes/CustomQueryBuilder.html":{},"modules/DatabaseModule.html":{},"interfaces/IBaseModel.html":{},"interfaces/ITag.html":{},"interfaces/IUser.html":{},"classes/Tag.html":{},"classes/UpdateTagsDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"miscellaneous/variables.html":{}}}],["model.knex(knex",{"_index":758,"title":{},"body":{"modules/DatabaseModule.html":{},"miscellaneous/variables.html":{}}}],["model.name",{"_index":747,"title":{},"body":{"modules/DatabaseModule.html":{},"miscellaneous/variables.html":{}}}],["modelclass",{"_index":1016,"title":{},"body":{"injectables/TagsService.html":{},"injectables/UsersService.html":{}}}],["modeloptions",{"_index":343,"title":{},"body":{"classes/BaseModel.html":{},"interfaces/IBaseModel.html":{}}}],["modelproviders",{"_index":744,"title":{},"body":{"modules/DatabaseModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["models",{"_index":743,"title":{},"body":{"modules/DatabaseModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["models.map((model",{"_index":745,"title":{},"body":{"modules/DatabaseModule.html":{},"miscellaneous/variables.html":{}}}],["modifier",{"_index":443,"title":{},"body":{"classes/CreateUserDto.html":{},"interfaces/IUser.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{}}}],["modifiers",{"_index":433,"title":{},"body":{"classes/CreateUserDto.html":{},"interfaces/IUser.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{}}}],["module",{"_index":159,"title":{"modules/AppModule.html":{},"modules/CronModule.html":{},"modules/DatabaseModule.html":{},"modules/TagsModule.html":{},"modules/UsersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CronModule.html":{},"modules/DatabaseModule.html":{},"modules/TagsModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["modules",{"_index":161,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/CronModule.html":{},"modules/DatabaseModule.html":{},"modules/TagsModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["moment",{"_index":1144,"title":{},"body":{"coverage.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["more",{"_index":1043,"title":{},"body":{"injectables/TimeoutInterceptor.html":{},"index.html":{}}}],["myśliwiec",{"_index":1296,"title":{},"body":{"index.html":{}}}],["n",{"_index":501,"title":{},"body":{"injectables/CronService.html":{}}}],["name",{"_index":115,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"modules/AppModule.html":{},"classes/BaseModel.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"classes/CreateTagsDto.html":{},"classes/CreateUserDto.html":{},"injectables/CronService.html":{},"classes/CrudController.html":{},"classes/CrudService.html":{},"classes/CustomQueryBuilder.html":{},"injectables/DBHelper.html":{},"injectables/ExcludeNullUndefinedInterceptor.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"controllers/HealthController.html":{},"interfaces/ICrudService.html":{},"interfaces/ITag.html":{},"interfaces/IUser.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"classes/QueryFailedFilter.html":{},"guards/RequestGuard.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"guards/ResponseGuard.html":{},"classes/Tag.html":{},"controllers/TagsController.html":{},"injectables/TagsService.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateTagsDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"classes/ValidationFailedFilter.html":{},"miscellaneous/functions.html":{}}}],["name.trim().split(/\\s",{"_index":466,"title":{},"body":{"classes/CreateUserDto.html":{},"interfaces/IUser.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{}}}],["namepart",{"_index":465,"title":{},"body":{"classes/CreateUserDto.html":{},"interfaces/IUser.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{}}}],["namepart.tolowercase",{"_index":469,"title":{},"body":{"classes/CreateUserDto.html":{},"interfaces/IUser.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{}}}],["nativeerror",{"_index":913,"title":{},"body":{"classes/QueryFailedFilter.html":{}}}],["nest",{"_index":258,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["nestframework",{"_index":1300,"title":{},"body":{"index.html":{}}}],["nestinterceptor",{"_index":773,"title":{},"body":{"injectables/ExcludeNullUndefinedInterceptor.html":{},"interfaces/Response.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/TransformInterceptor.html":{}}}],["nestjs/common",{"_index":26,"title":{},"body":{"interfaces/APIResponse.html":{},"controllers/AppController.html":{},"interfaces/AppLaunchAction.html":{},"modules/AppModule.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"modules/CronModule.html":{},"injectables/CronService.html":{},"classes/CrudController.html":{},"classes/CrudService.html":{},"injectables/DBHelper.html":{},"modules/DatabaseModule.html":{},"injectables/ExcludeNullUndefinedInterceptor.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"controllers/HealthController.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"classes/QueryFailedFilter.html":{},"guards/RequestGuard.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/Response.html":{},"guards/ResponseGuard.html":{},"controllers/TagsController.html":{},"modules/TagsModule.html":{},"injectables/TagsService.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/TransformInterceptor.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"classes/ValidationFailedFilter.html":{},"dependencies.html":{}}}],["nestjs/config",{"_index":199,"title":{},"body":{"modules/AppModule.html":{},"controllers/HealthController.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":1179,"title":{},"body":{"dependencies.html":{}}}],["nestjs/mapped",{"_index":380,"title":{},"body":{"classes/CreateTagsDto.html":{},"classes/CreateUserDto.html":{},"interfaces/ITag.html":{},"interfaces/IUser.html":{},"classes/Tag.html":{},"classes/UpdateTagsDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"dependencies.html":{}}}],["nestjs/passport",{"_index":1181,"title":{},"body":{"dependencies.html":{}}}],["nestjs/platform",{"_index":1183,"title":{},"body":{"dependencies.html":{}}}],["nestjs/schedule",{"_index":201,"title":{},"body":{"modules/AppModule.html":{},"injectables/CronService.html":{},"dependencies.html":{}}}],["nestjs/serve",{"_index":1188,"title":{},"body":{"dependencies.html":{}}}],["nestjs/swagger",{"_index":150,"title":{},"body":{"controllers/AppController.html":{},"classes/BaseEntity.html":{},"classes/BaseModel.html":{},"classes/CreateTagsDto.html":{},"classes/CreateUserDto.html":{},"controllers/HealthController.html":{},"interfaces/IBaseModel.html":{},"interfaces/ITag.html":{},"interfaces/IUser.html":{},"classes/PaginationParams.html":{},"classes/Tag.html":{},"controllers/TagsController.html":{},"classes/UpdateTagsDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"dependencies.html":{}}}],["nestjs/terminus",{"_index":203,"title":{},"body":{"modules/AppModule.html":{},"controllers/HealthController.html":{},"dependencies.html":{}}}],["nestjs/typeorm",{"_index":1192,"title":{},"body":{"dependencies.html":{}}}],["nestjsx/crud",{"_index":1194,"title":{},"body":{"dependencies.html":{}}}],["nestjsx/crud/lib/interfaces/get",{"_index":786,"title":{},"body":{"classes/GetManyDto.html":{}}}],["new",{"_index":367,"title":{},"body":{"classes/BaseModel.html":{},"injectables/CronService.html":{},"classes/CrudService.html":{},"interfaces/IBaseModel.html":{},"classes/QueryFailedFilter.html":{},"controllers/UsersController.html":{},"classes/ValidationFailedFilter.html":{},"coverage.html":{}}}],["new_values",{"_index":718,"title":{},"body":{"injectables/DBHelper.html":{}}}],["next",{"_index":639,"title":{},"body":{"classes/CrudService.html":{},"classes/CustomQueryBuilder.html":{},"modules/DatabaseModule.html":{},"injectables/ExcludeNullUndefinedInterceptor.html":{},"guards/RequestGuard.html":{},"interfaces/Response.html":{},"guards/ResponseGuard.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/TransformInterceptor.html":{},"miscellaneous/variables.html":{}}}],["next.handle().pipe",{"_index":775,"title":{},"body":{"injectables/ExcludeNullUndefinedInterceptor.html":{},"injectables/TimeoutInterceptor.html":{}}}],["next.handle().pipe(map((data",{"_index":947,"title":{},"body":{"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["nocontent",{"_index":966,"title":{},"body":{"guards/ResponseGuard.html":{}}}],["node.js",{"_index":1255,"title":{},"body":{"index.html":{}}}],["node_env",{"_index":223,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["notfoundexception",{"_index":607,"title":{},"body":{"classes/CrudService.html":{}}}],["notfoundexception(`the",{"_index":628,"title":{},"body":{"classes/CrudService.html":{}}}],["nothing",{"_index":394,"title":{},"body":{"classes/CreateTagsDto.html":{},"classes/CreateUserDto.html":{},"interfaces/ITag.html":{},"interfaces/IUser.html":{},"classes/Tag.html":{},"classes/UpdateTagsDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{}}}],["notnullviolationerror",{"_index":900,"title":{},"body":{"classes/QueryFailedFilter.html":{}}}],["npm",{"_index":1265,"title":{},"body":{"index.html":{}}}],["null",{"_index":36,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"classes/BaseEntity.html":{},"classes/BaseModel.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"classes/CustomQueryBuilder.html":{},"injectables/ExcludeNullUndefinedInterceptor.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/IBaseModel.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"guards/ResponseGuard.html":{},"classes/Tag.html":{},"classes/User.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{},"miscellaneous/typealiases.html":{}}}],["nullable",{"_index":283,"title":{},"body":{"classes/BaseEntity.html":{}}}],["number",{"_index":18,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"classes/BaseEntity.html":{},"classes/BaseModel.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"injectables/CronService.html":{},"classes/CrudService.html":{},"classes/CustomQueryBuilder.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"classes/GetManyDto.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/IBaseModel.html":{},"interfaces/ICrudService.html":{},"interfaces/IPagination.html":{},"interfaces/IPagination-1.html":{},"classes/PaginationParams.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"classes/Tag.html":{},"controllers/TagsController.html":{},"injectables/TagsService.html":{},"classes/User.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["numberoffollowers",{"_index":61,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{}}}],["numberoffollowing",{"_index":62,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{}}}],["numberofposts",{"_index":63,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{}}}],["numberofrescuescompleted",{"_index":64,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{}}}],["numberofrescuescreated",{"_index":65,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{}}}],["numberofrescuesinprogress",{"_index":66,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{}}}],["numberquerybuildertype",{"_index":658,"title":{},"body":{"classes/CustomQueryBuilder.html":{}}}],["obj",{"_index":631,"title":{},"body":{"classes/CrudService.html":{}}}],["object",{"_index":336,"title":{},"body":{"classes/BaseModel.html":{},"classes/CreateTagsDto.html":{},"classes/CreateUserDto.html":{},"classes/CustomQueryBuilder.html":{},"interfaces/ITag.html":{},"interfaces/IUser.html":{},"guards/ResponseGuard.html":{},"classes/Tag.html":{},"classes/UpdateTagsDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["objection",{"_index":345,"title":{},"body":{"classes/BaseModel.html":{},"classes/CreateTagsDto.html":{},"classes/CreateUserDto.html":{},"classes/CustomQueryBuilder.html":{},"modules/DatabaseModule.html":{},"interfaces/IBaseModel.html":{},"interfaces/ITag.html":{},"interfaces/IUser.html":{},"classes/QueryFailedFilter.html":{},"classes/Tag.html":{},"injectables/TagsService.html":{},"classes/UpdateTagsDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"injectables/UsersService.html":{},"classes/ValidationFailedFilter.html":{},"dependencies.html":{}}}],["observable",{"_index":772,"title":{},"body":{"injectables/ExcludeNullUndefinedInterceptor.html":{},"controllers/HealthController.html":{},"guards/RequestGuard.html":{},"interfaces/Response.html":{},"guards/ResponseGuard.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/TransformInterceptor.html":{}}}],["observer",{"_index":1040,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["occurrence",{"_index":765,"title":{},"body":{"injectables/ExcludeNullUndefinedInterceptor.html":{}}}],["of(signal",{"_index":655,"title":{},"body":{"classes/CrudService.html":{}}}],["offset",{"_index":699,"title":{},"body":{"classes/CustomQueryBuilder.html":{},"classes/PaginationParams.html":{}}}],["ok",{"_index":523,"title":{},"body":{"injectables/CronService.html":{}}}],["onapplicationshutdown",{"_index":180,"title":{},"body":{"modules/AppModule.html":{},"controllers/HealthController.html":{}}}],["onapplicationshutdown(signal",{"_index":181,"title":{},"body":{"modules/AppModule.html":{},"controllers/HealthController.html":{}}}],["once",{"_index":491,"title":{},"body":{"injectables/CronService.html":{}}}],["one",{"_index":1076,"title":{},"body":{"controllers/UsersController.html":{}}}],["onlycount",{"_index":663,"title":{},"body":{"classes/CustomQueryBuilder.html":{}}}],["onmoduledestroy",{"_index":246,"title":{},"body":{"modules/AppModule.html":{}}}],["onmoduleinit",{"_index":187,"title":{},"body":{"modules/AppModule.html":{},"controllers/HealthController.html":{}}}],["open",{"_index":1280,"title":{},"body":{"index.html":{}}}],["optional",{"_index":9,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"modules/AppModule.html":{},"classes/BaseEntity.html":{},"classes/BaseModel.html":{},"injectables/CronService.html":{},"classes/CrudController.html":{},"classes/CrudService.html":{},"classes/CustomQueryBuilder.html":{},"injectables/DBHelper.html":{},"injectables/ExcludeNullUndefinedInterceptor.html":{},"controllers/HealthController.html":{},"interfaces/IBaseModel.html":{},"interfaces/ICrudService.html":{},"interfaces/ITryRequest.html":{},"classes/PaginationParams.html":{},"classes/QueryFailedFilter.html":{},"guards/RequestGuard.html":{},"guards/ResponseGuard.html":{},"classes/Tag.html":{},"controllers/TagsController.html":{},"injectables/TagsService.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/TransformInterceptor.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"classes/ValidationFailedFilter.html":{},"miscellaneous/functions.html":{}}}],["options",{"_index":335,"title":{},"body":{"classes/BaseModel.html":{},"classes/CrudController.html":{},"classes/CrudService.html":{},"interfaces/IBaseModel.html":{},"interfaces/ICrudService.html":{},"interfaces/IPagination.html":{},"classes/Tag.html":{},"classes/User.html":{}}}],["order",{"_index":862,"title":{},"body":{"classes/PaginationParams.html":{}}}],["orderby",{"_index":867,"title":{},"body":{"classes/PaginationParams.html":{}}}],["ordertype",{"_index":881,"title":{},"body":{"classes/PaginationParams.html":{},"miscellaneous/enumerations.html":{}}}],["os",{"_index":807,"title":{},"body":{"controllers/HealthController.html":{}}}],["os.loadavg",{"_index":834,"title":{},"body":{"controllers/HealthController.html":{}}}],["out",{"_index":176,"title":{},"body":{"modules/AppModule.html":{},"modules/CronModule.html":{},"modules/TagsModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["override.ts",{"_index":762,"title":{},"body":{"injectables/ExcludeNullUndefinedInterceptor.html":{},"coverage.html":{}}}],["override.ts:16",{"_index":770,"title":{},"body":{"injectables/ExcludeNullUndefinedInterceptor.html":{}}}],["overview",{"_index":1306,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["ownpage",{"_index":88,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{}}}],["p",{"_index":889,"title":{},"body":{"classes/PaginationParams.html":{}}}],["package",{"_index":1175,"title":{"dependencies.html":{}},"body":{}}],["page",{"_index":14,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"classes/CustomQueryBuilder.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"classes/GetManyDto.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{}}}],["pagecount",{"_index":15,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"classes/GetManyDto.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{}}}],["pagequerybuildertype",{"_index":659,"title":{},"body":{"classes/CustomQueryBuilder.html":{}}}],["paginate",{"_index":664,"title":{},"body":{"classes/CustomQueryBuilder.html":{}}}],["paginate(page",{"_index":675,"title":{},"body":{"classes/CustomQueryBuilder.html":{}}}],["pagination",{"_index":358,"title":{},"body":{"classes/BaseModel.html":{},"classes/CrudController.html":{},"classes/CustomQueryBuilder.html":{},"interfaces/IBaseModel.html":{},"interfaces/IPagination-1.html":{},"classes/PaginationParams.html":{}}}],["paginationparams",{"_index":546,"title":{"classes/PaginationParams.html":{}},"body":{"classes/CrudController.html":{},"classes/PaginationParams.html":{},"coverage.html":{}}}],["param",{"_index":557,"title":{},"body":{"classes/CrudController.html":{},"classes/CrudService.html":{},"classes/CustomQueryBuilder.html":{},"controllers/HealthController.html":{},"guards/RequestGuard.html":{},"guards/ResponseGuard.html":{},"controllers/TagsController.html":{},"controllers/UsersController.html":{}}}],["param('id",{"_index":568,"title":{},"body":{"classes/CrudController.html":{},"controllers/TagsController.html":{},"controllers/UsersController.html":{}}}],["parameter",{"_index":253,"title":{},"body":{"modules/AppModule.html":{}}}],["parameters",{"_index":183,"title":{},"body":{"modules/AppModule.html":{},"classes/BaseModel.html":{},"injectables/CronService.html":{},"classes/CrudController.html":{},"classes/CrudService.html":{},"classes/CustomQueryBuilder.html":{},"injectables/DBHelper.html":{},"injectables/ExcludeNullUndefinedInterceptor.html":{},"controllers/HealthController.html":{},"interfaces/ICrudService.html":{},"classes/QueryFailedFilter.html":{},"guards/RequestGuard.html":{},"guards/ResponseGuard.html":{},"classes/Tag.html":{},"controllers/TagsController.html":{},"injectables/TagsService.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/TransformInterceptor.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"classes/ValidationFailedFilter.html":{},"miscellaneous/functions.html":{}}}],["params",{"_index":561,"title":{},"body":{"classes/CrudController.html":{},"classes/PaginationParams.html":{}}}],["params.ts",{"_index":860,"title":{},"body":{"classes/PaginationParams.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["params.ts:23",{"_index":875,"title":{},"body":{"classes/PaginationParams.html":{}}}],["params.ts:32",{"_index":871,"title":{},"body":{"classes/PaginationParams.html":{}}}],["params.ts:39",{"_index":866,"title":{},"body":{"classes/PaginationParams.html":{}}}],["parentheses",{"_index":460,"title":{},"body":{"classes/CreateUserDto.html":{},"interfaces/IUser.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{}}}],["parseint(val",{"_index":888,"title":{},"body":{"classes/PaginationParams.html":{}}}],["parseintpipe",{"_index":997,"title":{},"body":{"controllers/TagsController.html":{},"controllers/UsersController.html":{}}}],["partialentity",{"_index":604,"title":{},"body":{"classes/CrudService.html":{}}}],["partialentity.hash",{"_index":647,"title":{},"body":{"classes/CrudService.html":{}}}],["partially",{"_index":453,"title":{},"body":{"classes/CreateUserDto.html":{},"interfaces/IUser.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{}}}],["partialtype",{"_index":378,"title":{},"body":{"classes/CreateTagsDto.html":{},"classes/CreateUserDto.html":{},"interfaces/ITag.html":{},"interfaces/IUser.html":{},"classes/Tag.html":{},"classes/UpdateTagsDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{}}}],["partialtype(createtagsdto",{"_index":410,"title":{},"body":{"classes/CreateTagsDto.html":{},"interfaces/ITag.html":{},"classes/Tag.html":{},"classes/UpdateTagsDto.html":{}}}],["partialtype(createuserdto",{"_index":472,"title":{},"body":{"classes/CreateUserDto.html":{},"interfaces/IUser.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{}}}],["passport",{"_index":1215,"title":{},"body":{"dependencies.html":{}}}],["password",{"_index":289,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseModel.html":{},"classes/CreateUserDto.html":{},"classes/CrudService.html":{},"interfaces/IBaseModel.html":{},"interfaces/IUser.html":{},"classes/Tag.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{}}}],["path",{"_index":155,"title":{},"body":{"controllers/AppController.html":{},"controllers/HealthController.html":{},"classes/QueryFailedFilter.html":{},"controllers/TagsController.html":{},"controllers/UsersController.html":{},"classes/ValidationFailedFilter.html":{}}}],["perpage",{"_index":676,"title":{},"body":{"classes/CustomQueryBuilder.html":{}}}],["pidusage",{"_index":808,"title":{},"body":{"controllers/HealthController.html":{},"dependencies.html":{}}}],["pidusage(process.pid",{"_index":826,"title":{},"body":{"controllers/HealthController.html":{}}}],["pieces",{"_index":449,"title":{},"body":{"classes/CreateUserDto.html":{},"interfaces/IUser.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{}}}],["places",{"_index":442,"title":{},"body":{"classes/CreateUserDto.html":{},"interfaces/IUser.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{}}}],["please",{"_index":1289,"title":{},"body":{"index.html":{}}}],["port",{"_index":221,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["post",{"_index":539,"title":{},"body":{"classes/CrudController.html":{},"controllers/TagsController.html":{},"controllers/UsersController.html":{}}}],["postby",{"_index":89,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{}}}],["postedby",{"_index":107,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{}}}],["postedbyuser",{"_index":83,"title":{"interfaces/PostedByUser.html":{}},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{},"coverage.html":{}}}],["postedminago",{"_index":108,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{}}}],["postid",{"_index":85,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{}}}],["postimage",{"_index":90,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{}}}],["posttime",{"_index":91,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{}}}],["posttype",{"_index":81,"title":{"interfaces/PostType.html":{}},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{},"coverage.html":{}}}],["posttypeid",{"_index":82,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{}}}],["postvideo",{"_index":92,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{}}}],["primarygeneratedcolumn",{"_index":303,"title":{},"body":{"classes/BaseEntity.html":{}}}],["private",{"_index":811,"title":{},"body":{"controllers/HealthController.html":{},"injectables/TagsService.html":{},"injectables/UsersService.html":{}}}],["production",{"_index":227,"title":{},"body":{"modules/AppModule.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["profileid",{"_index":116,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{}}}],["profileimage",{"_index":67,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{}}}],["profileimageurl",{"_index":117,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{}}}],["progressive",{"_index":1254,"title":{},"body":{"index.html":{}}}],["project",{"_index":1281,"title":{},"body":{"index.html":{}}}],["promise",{"_index":257,"title":{},"body":{"modules/AppModule.html":{},"classes/CustomQueryBuilder.html":{},"guards/RequestGuard.html":{},"guards/ResponseGuard.html":{},"miscellaneous/functions.html":{}}}],["promise.resolve(`this",{"_index":1114,"title":{},"body":{"injectables/UsersService.html":{}}}],["properties",{"_index":8,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"classes/BaseEntity.html":{},"classes/BaseModel.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"classes/CreateTagsDto.html":{},"classes/CreateUserDto.html":{},"injectables/CronService.html":{},"classes/CrudService.html":{},"classes/CustomQueryBuilder.html":{},"injectables/DBHelper.html":{},"interfaces/Follower.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"classes/GetManyDto.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/IBaseModel.html":{},"interfaces/IPagination.html":{},"interfaces/IPagination-1.html":{},"interfaces/ITag.html":{},"interfaces/ITryRequest.html":{},"interfaces/IUser.html":{},"classes/PaginationParams.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/Response.html":{},"classes/Tag.html":{},"classes/UpdateTagsDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{}}}],["protected",{"_index":532,"title":{},"body":{"classes/CrudController.html":{},"classes/CrudService.html":{}}}],["provide",{"_index":746,"title":{},"body":{"modules/DatabaseModule.html":{},"miscellaneous/variables.html":{}}}],["providers",{"_index":166,"title":{},"body":{"modules/AppModule.html":{},"modules/CronModule.html":{},"modules/DatabaseModule.html":{},"modules/TagsModule.html":{},"modules/UsersModule.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["provision",{"_index":229,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["public",{"_index":310,"title":{},"body":{"classes/BaseEntity.html":{}}}],["put",{"_index":555,"title":{},"body":{"classes/CrudController.html":{},"controllers/TagsController.html":{},"controllers/UsersController.html":{}}}],["put(':id",{"_index":553,"title":{},"body":{"classes/CrudController.html":{},"controllers/TagsController.html":{},"controllers/UsersController.html":{}}}],["q.orwhereraw('lower",{"_index":468,"title":{},"body":{"classes/CreateUserDto.html":{},"interfaces/IUser.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{}}}],["query",{"_index":355,"title":{},"body":{"classes/BaseModel.html":{},"classes/CreateUserDto.html":{},"classes/CustomQueryBuilder.html":{},"interfaces/IBaseModel.html":{},"interfaces/IUser.html":{},"injectables/TagsService.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{}}}],["query.offset(offset).limit(size",{"_index":703,"title":{},"body":{"classes/CustomQueryBuilder.html":{}}}],["query.where((q",{"_index":464,"title":{},"body":{"classes/CreateUserDto.html":{},"interfaces/IUser.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{}}}],["querybuilder",{"_index":319,"title":{},"body":{"classes/BaseModel.html":{},"classes/CustomQueryBuilder.html":{},"interfaces/IBaseModel.html":{},"classes/Tag.html":{},"classes/User.html":{}}}],["querybuildertype",{"_index":320,"title":{},"body":{"classes/BaseModel.html":{},"interfaces/IBaseModel.html":{},"classes/Tag.html":{},"classes/User.html":{}}}],["querycontext",{"_index":344,"title":{},"body":{"classes/BaseModel.html":{},"interfaces/IBaseModel.html":{}}}],["querydeeppartialentity",{"_index":552,"title":{},"body":{"classes/CrudController.html":{},"classes/CrudService.html":{},"interfaces/ICrudService.html":{},"interfaces/IPagination.html":{}}}],["queryfailedfilter",{"_index":891,"title":{"classes/QueryFailedFilter.html":{}},"body":{"classes/QueryFailedFilter.html":{},"coverage.html":{}}}],["range",{"_index":1209,"title":{},"body":{"dependencies.html":{}}}],["rate",{"_index":1202,"title":{},"body":{"dependencies.html":{}}}],["reactionscount",{"_index":93,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{}}}],["read",{"_index":1290,"title":{},"body":{"index.html":{}}}],["readmewhy",{"_index":633,"title":{},"body":{"classes/CrudService.html":{}}}],["readonly",{"_index":435,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/CrudController.html":{},"classes/CrudService.html":{},"interfaces/ICrudService.html":{},"interfaces/IPagination.html":{},"interfaces/IPagination-1.html":{},"interfaces/IUser.html":{},"classes/PaginationParams.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{}}}],["reassign",{"_index":650,"title":{},"body":{"classes/CrudService.html":{},"classes/CustomQueryBuilder.html":{},"controllers/HealthController.html":{}}}],["receives",{"_index":242,"title":{},"body":{"modules/AppModule.html":{}}}],["record",{"_index":620,"title":{},"body":{"classes/CrudService.html":{},"interfaces/ITryRequest.html":{},"guards/RequestGuard.html":{},"guards/ResponseGuard.html":{}}}],["records",{"_index":702,"title":{},"body":{"classes/CustomQueryBuilder.html":{}}}],["recuescompletionneeded",{"_index":77,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{}}}],["recurring",{"_index":488,"title":{},"body":{"injectables/CronService.html":{}}}],["reflect",{"_index":1219,"title":{},"body":{"dependencies.html":{}}}],["registered",{"_index":245,"title":{},"body":{"modules/AppModule.html":{}}}],["regular",{"_index":482,"title":{},"body":{"injectables/CronService.html":{}}}],["rejected",{"_index":262,"title":{},"body":{"modules/AppModule.html":{}}}],["relation",{"_index":360,"title":{},"body":{"classes/BaseModel.html":{},"injectables/DBHelper.html":{},"interfaces/IBaseModel.html":{}}}],["relationexpression",{"_index":334,"title":{},"body":{"classes/BaseModel.html":{},"interfaces/IBaseModel.html":{},"classes/Tag.html":{},"classes/User.html":{}}}],["relations",{"_index":724,"title":{},"body":{"injectables/DBHelper.html":{}}}],["remove",{"_index":1068,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["remove(@param('id",{"_index":1093,"title":{},"body":{"controllers/UsersController.html":{}}}],["remove(id",{"_index":1079,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["removes",{"_index":1115,"title":{},"body":{"injectables/UsersService.html":{}}}],["repository",{"_index":581,"title":{},"body":{"classes/CrudService.html":{},"injectables/DBHelper.html":{},"index.html":{}}}],["request",{"_index":909,"title":{},"body":{"classes/QueryFailedFilter.html":{},"guards/RequestGuard.html":{},"injectables/TimeoutInterceptor.html":{},"classes/ValidationFailedFilter.html":{},"dependencies.html":{}}}],["request.all",{"_index":943,"title":{},"body":{"guards/RequestGuard.html":{}}}],["request.body",{"_index":934,"title":{},"body":{"guards/RequestGuard.html":{}}}],["request.params",{"_index":935,"title":{},"body":{"guards/RequestGuard.html":{}}}],["request.query",{"_index":933,"title":{},"body":{"guards/RequestGuard.html":{}}}],["request.ts",{"_index":858,"title":{},"body":{"interfaces/ITryRequest.html":{},"coverage.html":{}}}],["request.url",{"_index":918,"title":{},"body":{"classes/QueryFailedFilter.html":{},"classes/ValidationFailedFilter.html":{}}}],["requested",{"_index":629,"title":{},"body":{"classes/CrudService.html":{}}}],["requestguard",{"_index":921,"title":{"guards/RequestGuard.html":{}},"body":{"guards/RequestGuard.html":{},"coverage.html":{}}}],["requesttimeoutexception",{"_index":1045,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["required",{"_index":225,"title":{},"body":{"modules/AppModule.html":{},"classes/CreateTagsDto.html":{},"classes/CreateUserDto.html":{},"interfaces/ITag.html":{},"interfaces/IUser.html":{},"classes/Tag.html":{},"classes/UpdateTagsDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"miscellaneous/variables.html":{}}}],["rescuedate",{"_index":109,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{}}}],["rescuedpetname",{"_index":111,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{}}}],["rescueid",{"_index":102,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{}}}],["rescuelists",{"_index":121,"title":{"interfaces/RescueLists.html":{}},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{},"coverage.html":{}}}],["rescuelocality",{"_index":112,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{}}}],["rescuer",{"_index":68,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{}}}],["rescuers",{"_index":113,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{}}}],["rescues",{"_index":101,"title":{"interfaces/Rescues.html":{}},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{},"coverage.html":{}}}],["rescuestatus",{"_index":119,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{}}}],["reset",{"_index":175,"title":{},"body":{"modules/AppModule.html":{},"modules/CronModule.html":{},"modules/TagsModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["resolved",{"_index":261,"title":{},"body":{"modules/AppModule.html":{}}}],["response",{"_index":39,"title":{"interfaces/Response.html":{}},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"classes/QueryFailedFilter.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/Response.html":{},"guards/ResponseGuard.html":{},"injectables/TransformInterceptor.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{},"classes/ValidationFailedFilter.html":{},"coverage.html":{}}}],["response.error",{"_index":972,"title":{},"body":{"guards/ResponseGuard.html":{}}}],["response.interface",{"_index":787,"title":{},"body":{"classes/GetManyDto.html":{}}}],["response.nocontent",{"_index":973,"title":{},"body":{"guards/ResponseGuard.html":{}}}],["response.status(204).end",{"_index":967,"title":{},"body":{"guards/ResponseGuard.html":{}}}],["response.status(status).json",{"_index":917,"title":{},"body":{"classes/QueryFailedFilter.html":{},"guards/ResponseGuard.html":{},"classes/ValidationFailedFilter.html":{}}}],["response.success",{"_index":971,"title":{},"body":{"guards/ResponseGuard.html":{}}}],["response.withmeta",{"_index":974,"title":{},"body":{"guards/ResponseGuard.html":{}}}],["responseguard",{"_index":948,"title":{"guards/ResponseGuard.html":{}},"body":{"guards/ResponseGuard.html":{},"coverage.html":{}}}],["restricted",{"_index":937,"title":{},"body":{"guards/RequestGuard.html":{}}}],["result",{"_index":28,"title":{},"body":{"interfaces/APIResponse.html":{},"controllers/AppController.html":{},"interfaces/AppLaunchAction.html":{},"modules/AppModule.html":{},"classes/BaseEntity.html":{},"classes/BaseModel.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"classes/CreateTagsDto.html":{},"classes/CreateUserDto.html":{},"modules/CronModule.html":{},"injectables/CronService.html":{},"classes/CrudController.html":{},"classes/CrudService.html":{},"classes/CustomQueryBuilder.html":{},"injectables/DBHelper.html":{},"modules/DatabaseModule.html":{},"injectables/ExcludeNullUndefinedInterceptor.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"classes/GetManyDto.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"controllers/HealthController.html":{},"interfaces/IBaseModel.html":{},"interfaces/ICrudService.html":{},"interfaces/IPagination.html":{},"interfaces/IPagination-1.html":{},"interfaces/ITag.html":{},"interfaces/ITryRequest.html":{},"interfaces/IUser.html":{},"classes/PaginationParams.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"classes/QueryFailedFilter.html":{},"guards/RequestGuard.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/Response.html":{},"guards/ResponseGuard.html":{},"classes/Tag.html":{},"controllers/TagsController.html":{},"modules/TagsModule.html":{},"injectables/TagsService.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateTagsDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"classes/ValidationFailedFilter.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["result.results",{"_index":693,"title":{},"body":{"classes/CustomQueryBuilder.html":{}}}],["result.total",{"_index":692,"title":{},"body":{"classes/CustomQueryBuilder.html":{}}}],["result[0].c",{"_index":696,"title":{},"body":{"classes/CustomQueryBuilder.html":{}}}],["results",{"_index":133,"title":{},"body":{"interfaces/APIResponse.html":{},"controllers/AppController.html":{},"interfaces/AppLaunchAction.html":{},"modules/AppModule.html":{},"classes/BaseEntity.html":{},"classes/BaseModel.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"classes/CreateTagsDto.html":{},"classes/CreateUserDto.html":{},"modules/CronModule.html":{},"injectables/CronService.html":{},"classes/CrudController.html":{},"classes/CrudService.html":{},"classes/CustomQueryBuilder.html":{},"injectables/DBHelper.html":{},"modules/DatabaseModule.html":{},"injectables/ExcludeNullUndefinedInterceptor.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"classes/GetManyDto.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"controllers/HealthController.html":{},"interfaces/IBaseModel.html":{},"interfaces/ICrudService.html":{},"interfaces/IPagination.html":{},"interfaces/IPagination-1.html":{},"interfaces/ITag.html":{},"interfaces/ITryRequest.html":{},"interfaces/IUser.html":{},"classes/PaginationParams.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"classes/QueryFailedFilter.html":{},"guards/RequestGuard.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/Response.html":{},"guards/ResponseGuard.html":{},"classes/Tag.html":{},"controllers/TagsController.html":{},"modules/TagsModule.html":{},"injectables/TagsService.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateTagsDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"classes/ValidationFailedFilter.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["retention",{"_index":814,"title":{},"body":{"controllers/HealthController.html":{}}}],["return",{"_index":156,"title":{},"body":{"controllers/AppController.html":{},"classes/BaseModel.html":{},"injectables/CronService.html":{},"classes/CrudController.html":{},"classes/CrudService.html":{},"classes/CustomQueryBuilder.html":{},"injectables/DBHelper.html":{},"modules/DatabaseModule.html":{},"injectables/ExcludeNullUndefinedInterceptor.html":{},"controllers/HealthController.html":{},"interfaces/IBaseModel.html":{},"guards/RequestGuard.html":{},"interfaces/Response.html":{},"guards/ResponseGuard.html":{},"controllers/TagsController.html":{},"injectables/TagsService.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/TransformInterceptor.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["returning",{"_index":1035,"title":{},"body":{"injectables/TagsService.html":{}}}],["returning('*').first",{"_index":1030,"title":{},"body":{"injectables/TagsService.html":{}}}],["returns",{"_index":143,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"classes/BaseModel.html":{},"injectables/CronService.html":{},"classes/CrudController.html":{},"classes/CrudService.html":{},"classes/CustomQueryBuilder.html":{},"injectables/DBHelper.html":{},"injectables/ExcludeNullUndefinedInterceptor.html":{},"controllers/HealthController.html":{},"interfaces/ICrudService.html":{},"classes/QueryFailedFilter.html":{},"guards/RequestGuard.html":{},"guards/ResponseGuard.html":{},"classes/Tag.html":{},"controllers/TagsController.html":{},"injectables/TagsService.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/TransformInterceptor.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"classes/ValidationFailedFilter.html":{},"miscellaneous/functions.html":{}}}],["reusable",{"_index":439,"title":{},"body":{"classes/CreateUserDto.html":{},"interfaces/IUser.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{}}}],["rimraf",{"_index":1222,"title":{},"body":{"dependencies.html":{}}}],["row",{"_index":722,"title":{},"body":{"injectables/DBHelper.html":{}}}],["row[relation",{"_index":726,"title":{},"body":{"injectables/DBHelper.html":{}}}],["run",{"_index":487,"title":{},"body":{"injectables/CronService.html":{},"index.html":{}}}],["rxjs",{"_index":611,"title":{},"body":{"classes/CrudService.html":{},"injectables/ExcludeNullUndefinedInterceptor.html":{},"controllers/HealthController.html":{},"guards/RequestGuard.html":{},"interfaces/Response.html":{},"guards/ResponseGuard.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/TransformInterceptor.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":613,"title":{},"body":{"classes/CrudService.html":{},"injectables/ExcludeNullUndefinedInterceptor.html":{},"controllers/HealthController.html":{},"interfaces/Response.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/TransformInterceptor.html":{}}}],["salt",{"_index":326,"title":{},"body":{"classes/BaseModel.html":{},"interfaces/IBaseModel.html":{},"classes/Tag.html":{},"classes/User.html":{}}}],["saltrounds",{"_index":575,"title":{},"body":{"classes/CrudService.html":{}}}],["scalable",{"_index":1259,"title":{},"body":{"index.html":{}}}],["schedulemodule",{"_index":200,"title":{},"body":{"modules/AppModule.html":{}}}],["schedulemodule.forroot",{"_index":236,"title":{},"body":{"modules/AppModule.html":{}}}],["schema",{"_index":393,"title":{},"body":{"classes/CreateTagsDto.html":{},"classes/CreateUserDto.html":{},"interfaces/ITag.html":{},"interfaces/IUser.html":{},"classes/QueryFailedFilter.html":{},"classes/Tag.html":{},"classes/UpdateTagsDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{}}}],["searchbyname(query",{"_index":457,"title":{},"body":{"classes/CreateUserDto.html":{},"interfaces/IUser.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{}}}],["second",{"_index":520,"title":{},"body":{"injectables/CronService.html":{},"controllers/HealthController.html":{}}}],["seed",{"_index":1157,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["seed(knex",{"_index":1250,"title":{},"body":{"miscellaneous/functions.html":{}}}],["select",{"_index":300,"title":{},"body":{"classes/BaseEntity.html":{}}}],["semi",{"_index":444,"title":{},"body":{"classes/CreateUserDto.html":{},"interfaces/IUser.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{}}}],["sequence",{"_index":248,"title":{},"body":{"modules/AppModule.html":{}}}],["server",{"_index":1260,"title":{},"body":{"index.html":{}}}],["service",{"_index":644,"title":{},"body":{"classes/CrudService.html":{},"controllers/TagsController.html":{},"controllers/UsersController.html":{}}}],["setting",{"_index":78,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{}}}],["setupinfra",{"_index":1168,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["setupinfra(app",{"_index":1243,"title":{},"body":{"miscellaneous/functions.html":{}}}],["setupmiddlewares",{"_index":1169,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["setupmiddlewares(app",{"_index":1245,"title":{},"body":{"miscellaneous/functions.html":{}}}],["setupswaggerdocs",{"_index":1170,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["setupswaggerdocs(app",{"_index":1246,"title":{},"body":{"miscellaneous/functions.html":{}}}],["shadow",{"_index":958,"title":{},"body":{"guards/ResponseGuard.html":{}}}],["showmycontacts",{"_index":79,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{}}}],["showmynumber",{"_index":118,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{}}}],["showremoveoption",{"_index":130,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{}}}],["shutdown",{"_index":267,"title":{},"body":{"modules/AppModule.html":{},"controllers/HealthController.html":{}}}],["side",{"_index":1261,"title":{},"body":{"index.html":{}}}],["signal",{"_index":184,"title":{},"body":{"modules/AppModule.html":{},"classes/CrudService.html":{},"controllers/HealthController.html":{}}}],["simply",{"_index":458,"title":{},"body":{"classes/CreateUserDto.html":{},"interfaces/IUser.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{}}}],["singlequerybuildertype",{"_index":660,"title":{},"body":{"classes/CustomQueryBuilder.html":{}}}],["size",{"_index":670,"title":{},"body":{"classes/CustomQueryBuilder.html":{}}}],["skip",{"_index":863,"title":{},"body":{"classes/PaginationParams.html":{}}}],["snippets",{"_index":440,"title":{},"body":{"classes/CreateUserDto.html":{},"interfaces/IUser.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{}}}],["socket.io",{"_index":1185,"title":{},"body":{"dependencies.html":{}}}],["somehow",{"_index":643,"title":{},"body":{"classes/CrudService.html":{}}}],["something",{"_index":961,"title":{},"body":{"guards/ResponseGuard.html":{}}}],["source",{"_index":4,"title":{},"body":{"interfaces/APIResponse.html":{},"controllers/AppController.html":{},"interfaces/AppLaunchAction.html":{},"modules/AppModule.html":{},"classes/BaseEntity.html":{},"classes/BaseModel.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"classes/CreateTagsDto.html":{},"classes/CreateUserDto.html":{},"modules/CronModule.html":{},"injectables/CronService.html":{},"classes/CrudController.html":{},"classes/CrudService.html":{},"classes/CustomQueryBuilder.html":{},"injectables/DBHelper.html":{},"modules/DatabaseModule.html":{},"injectables/ExcludeNullUndefinedInterceptor.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"classes/GetManyDto.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"controllers/HealthController.html":{},"interfaces/IBaseModel.html":{},"interfaces/ICrudService.html":{},"interfaces/IPagination.html":{},"interfaces/IPagination-1.html":{},"interfaces/ITag.html":{},"interfaces/ITryRequest.html":{},"interfaces/IUser.html":{},"classes/PaginationParams.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"classes/QueryFailedFilter.html":{},"guards/RequestGuard.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/Response.html":{},"guards/ResponseGuard.html":{},"classes/Tag.html":{},"controllers/TagsController.html":{},"modules/TagsModule.html":{},"injectables/TagsService.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateTagsDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"classes/ValidationFailedFilter.html":{},"dependencies.html":{},"index.html":{}}}],["specified",{"_index":489,"title":{},"body":{"injectables/CronService.html":{}}}],["split",{"_index":448,"title":{},"body":{"classes/CreateUserDto.html":{},"interfaces/IUser.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{}}}],["sponsors",{"_index":1284,"title":{},"body":{"index.html":{}}}],["sqlite3",{"_index":752,"title":{},"body":{"modules/DatabaseModule.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["src/.../01",{"_index":1240,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../02",{"_index":1241,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../20190609143930_createtag.ts",{"_index":1237,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/.../20190609143930_createuser.ts",{"_index":1238,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/.../app.module.ts",{"_index":1315,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../database.module.ts",{"_index":1316,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../domain.ts",{"_index":1313,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../helpers.ts",{"_index":1239,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../main.ts",{"_index":1236,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../moment",{"_index":1317,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../pagination",{"_index":1234,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../tohexstring.ts",{"_index":1242,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/app.controller.ts",{"_index":137,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app.controller.ts:10",{"_index":142,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.module.ts",{"_index":177,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app.module.ts:58",{"_index":188,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.module.ts:62",{"_index":182,"title":{},"body":{"modules/AppModule.html":{}}}],["src/base/crud/crud.controller.ts",{"_index":525,"title":{},"body":{"classes/CrudController.html":{},"coverage.html":{}}}],["src/base/crud/crud.controller.ts:10",{"_index":535,"title":{},"body":{"classes/CrudController.html":{}}}],["src/base/crud/crud.controller.ts:14",{"_index":547,"title":{},"body":{"classes/CrudController.html":{}}}],["src/base/crud/crud.controller.ts:19",{"_index":550,"title":{},"body":{"classes/CrudController.html":{}}}],["src/base/crud/crud.controller.ts:24",{"_index":540,"title":{},"body":{"classes/CrudController.html":{}}}],["src/base/crud/crud.controller.ts:29",{"_index":554,"title":{},"body":{"classes/CrudController.html":{}}}],["src/base/crud/crud.controller.ts:38",{"_index":544,"title":{},"body":{"classes/CrudController.html":{}}}],["src/base/crud/crud.service.ts",{"_index":574,"title":{},"body":{"classes/CrudService.html":{},"coverage.html":{}}}],["src/base/crud/crud.service.ts:109",{"_index":591,"title":{},"body":{"classes/CrudService.html":{}}}],["src/base/crud/crud.service.ts:19",{"_index":582,"title":{},"body":{"classes/CrudService.html":{}}}],["src/base/crud/crud.service.ts:25",{"_index":585,"title":{},"body":{"classes/CrudService.html":{}}}],["src/base/crud/crud.service.ts:29",{"_index":596,"title":{},"body":{"classes/CrudService.html":{}}}],["src/base/crud/crud.service.ts:36",{"_index":601,"title":{},"body":{"classes/CrudService.html":{}}}],["src/base/crud/crud.service.ts:49",{"_index":599,"title":{},"body":{"classes/CrudService.html":{}}}],["src/base/crud/crud.service.ts:61",{"_index":586,"title":{},"body":{"classes/CrudService.html":{}}}],["src/base/crud/crud.service.ts:73",{"_index":603,"title":{},"body":{"classes/CrudService.html":{}}}],["src/base/crud/crud.service.ts:77",{"_index":605,"title":{},"body":{"classes/CrudService.html":{}}}],["src/base/crud/crud.service.ts:98",{"_index":589,"title":{},"body":{"classes/CrudService.html":{}}}],["src/base/crud/icrud.service.ts",{"_index":841,"title":{},"body":{"interfaces/ICrudService.html":{},"interfaces/IPagination.html":{},"coverage.html":{}}}],["src/base/crud/icrud.service.ts:24",{"_index":842,"title":{},"body":{"interfaces/ICrudService.html":{}}}],["src/base/crud/icrud.service.ts:26",{"_index":845,"title":{},"body":{"interfaces/ICrudService.html":{}}}],["src/base/crud/icrud.service.ts:28",{"_index":846,"title":{},"body":{"interfaces/ICrudService.html":{}}}],["src/base/crud/icrud.service.ts:33",{"_index":843,"title":{},"body":{"interfaces/ICrudService.html":{}}}],["src/base/crud/icrud.service.ts:35",{"_index":847,"title":{},"body":{"interfaces/ICrudService.html":{}}}],["src/base/crud/icrud.service.ts:37",{"_index":844,"title":{},"body":{"interfaces/ICrudService.html":{}}}],["src/base/crud/pagination",{"_index":859,"title":{},"body":{"classes/PaginationParams.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["src/base/crud/pagination.ts",{"_index":854,"title":{},"body":{"interfaces/IPagination-1.html":{},"coverage.html":{}}}],["src/base/crud/try",{"_index":857,"title":{},"body":{"interfaces/ITryRequest.html":{},"coverage.html":{}}}],["src/base/datum/base",{"_index":270,"title":{},"body":{"classes/BaseEntity.html":{},"coverage.html":{}}}],["src/base/datum/get",{"_index":777,"title":{},"body":{"classes/GetManyDto.html":{},"coverage.html":{}}}],["src/base/datum/tohexstring.ts",{"_index":1140,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/base/dbhelper.ts",{"_index":710,"title":{},"body":{"injectables/DBHelper.html":{},"coverage.html":{}}}],["src/base/dbhelper.ts:13",{"_index":716,"title":{},"body":{"injectables/DBHelper.html":{}}}],["src/base/dbhelper.ts:18",{"_index":719,"title":{},"body":{"injectables/DBHelper.html":{}}}],["src/base/dbhelper.ts:9",{"_index":714,"title":{},"body":{"injectables/DBHelper.html":{}}}],["src/base/moment",{"_index":1142,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/cron/cron.module.ts",{"_index":476,"title":{},"body":{"modules/CronModule.html":{}}}],["src/cron/cron.service.ts",{"_index":480,"title":{},"body":{"injectables/CronService.html":{},"coverage.html":{}}}],["src/cron/cron.service.ts:14",{"_index":509,"title":{},"body":{"injectables/CronService.html":{}}}],["src/cron/cron.service.ts:16",{"_index":513,"title":{},"body":{"injectables/CronService.html":{}}}],["src/cron/cron.service.ts:18",{"_index":515,"title":{},"body":{"injectables/CronService.html":{}}}],["src/cron/cron.service.ts:20",{"_index":511,"title":{},"body":{"injectables/CronService.html":{}}}],["src/cron/cron.service.ts:22",{"_index":500,"title":{},"body":{"injectables/CronService.html":{}}}],["src/cron/cron.service.ts:28",{"_index":503,"title":{},"body":{"injectables/CronService.html":{}}}],["src/cron/cron.service.ts:42",{"_index":505,"title":{},"body":{"injectables/CronService.html":{}}}],["src/cron/cron.service.ts:53",{"_index":507,"title":{},"body":{"injectables/CronService.html":{}}}],["src/database/database.module.ts",{"_index":735,"title":{},"body":{"modules/DatabaseModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/database/migrations/20190609143930_createtag.ts",{"_index":1147,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/database/migrations/20190609143930_createuser.ts",{"_index":1150,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/database/models/base.model.ts",{"_index":314,"title":{},"body":{"classes/BaseModel.html":{},"interfaces/IBaseModel.html":{},"coverage.html":{}}}],["src/database/models/base.model.ts:27",{"_index":327,"title":{},"body":{"classes/BaseModel.html":{}}}],["src/database/models/base.model.ts:29",{"_index":331,"title":{},"body":{"classes/BaseModel.html":{}}}],["src/database/models/base.model.ts:31",{"_index":330,"title":{},"body":{"classes/BaseModel.html":{}}}],["src/database/models/base.model.ts:33",{"_index":328,"title":{},"body":{"classes/BaseModel.html":{}}}],["src/database/models/base.model.ts:35",{"_index":324,"title":{},"body":{"classes/BaseModel.html":{}}}],["src/database/models/base.model.ts:37",{"_index":332,"title":{},"body":{"classes/BaseModel.html":{}}}],["src/database/models/base.model.ts:39",{"_index":325,"title":{},"body":{"classes/BaseModel.html":{}}}],["src/database/models/base.model.ts:42",{"_index":337,"title":{},"body":{"classes/BaseModel.html":{}}}],["src/database/models/helpers.ts",{"_index":656,"title":{},"body":{"classes/CustomQueryBuilder.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/database/models/helpers.ts:37",{"_index":665,"title":{},"body":{"classes/CustomQueryBuilder.html":{}}}],["src/database/models/helpers.ts:39",{"_index":668,"title":{},"body":{"classes/CustomQueryBuilder.html":{}}}],["src/database/models/helpers.ts:41",{"_index":666,"title":{},"body":{"classes/CustomQueryBuilder.html":{}}}],["src/database/models/helpers.ts:43",{"_index":667,"title":{},"body":{"classes/CustomQueryBuilder.html":{}}}],["src/database/models/helpers.ts:45",{"_index":677,"title":{},"body":{"classes/CustomQueryBuilder.html":{}}}],["src/database/models/helpers.ts:61",{"_index":674,"title":{},"body":{"classes/CustomQueryBuilder.html":{}}}],["src/database/models/helpers.ts:66",{"_index":673,"title":{},"body":{"classes/CustomQueryBuilder.html":{}}}],["src/database/models/helpers.ts:71",{"_index":671,"title":{},"body":{"classes/CustomQueryBuilder.html":{}}}],["src/database/seeds/01",{"_index":1155,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/database/seeds/02",{"_index":1158,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/domain.ts",{"_index":6,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/health/health.controller.ts",{"_index":788,"title":{},"body":{"controllers/HealthController.html":{},"coverage.html":{}}}],["src/health/health.controller.ts:36",{"_index":799,"title":{},"body":{"controllers/HealthController.html":{}}}],["src/health/health.controller.ts:55",{"_index":792,"title":{},"body":{"controllers/HealthController.html":{}}}],["src/health/health.controller.ts:61",{"_index":794,"title":{},"body":{"controllers/HealthController.html":{}}}],["src/health/health.controller.ts:74",{"_index":797,"title":{},"body":{"controllers/HealthController.html":{}}}],["src/health/health.controller.ts:80",{"_index":796,"title":{},"body":{"controllers/HealthController.html":{}}}],["src/infra/filters/query",{"_index":892,"title":{},"body":{"classes/QueryFailedFilter.html":{},"coverage.html":{}}}],["src/infra/filters/validation",{"_index":1117,"title":{},"body":{"classes/ValidationFailedFilter.html":{},"coverage.html":{}}}],["src/infra/guards/req.ts",{"_index":923,"title":{},"body":{"guards/RequestGuard.html":{},"coverage.html":{}}}],["src/infra/guards/req.ts:21",{"_index":927,"title":{},"body":{"guards/RequestGuard.html":{}}}],["src/infra/guards/req.ts:8",{"_index":930,"title":{},"body":{"guards/RequestGuard.html":{}}}],["src/infra/guards/res.ts",{"_index":949,"title":{},"body":{"guards/ResponseGuard.html":{},"coverage.html":{}}}],["src/infra/guards/res.ts:21",{"_index":952,"title":{},"body":{"guards/ResponseGuard.html":{}}}],["src/infra/guards/res.ts:8",{"_index":953,"title":{},"body":{"guards/ResponseGuard.html":{}}}],["src/infra/interceptors/null",{"_index":760,"title":{},"body":{"injectables/ExcludeNullUndefinedInterceptor.html":{},"coverage.html":{}}}],["src/infra/interceptors/timeout.ts",{"_index":1038,"title":{},"body":{"injectables/TimeoutInterceptor.html":{},"coverage.html":{}}}],["src/infra/interceptors/timeout.ts:17",{"_index":1044,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["src/infra/interceptors/transform.ts",{"_index":945,"title":{},"body":{"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{},"coverage.html":{}}}],["src/infra/interceptors/transform.ts:17",{"_index":1056,"title":{},"body":{"injectables/TransformInterceptor.html":{}}}],["src/main.ts",{"_index":1167,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/tags/tag.model.ts",{"_index":374,"title":{},"body":{"classes/CreateTagsDto.html":{},"interfaces/ITag.html":{},"classes/Tag.html":{},"classes/UpdateTagsDto.html":{},"coverage.html":{}}}],["src/tags/tag.model.ts:14",{"_index":978,"title":{},"body":{"classes/Tag.html":{}}}],["src/tags/tag.model.ts:16",{"_index":977,"title":{},"body":{"classes/Tag.html":{}}}],["src/tags/tag.model.ts:20",{"_index":976,"title":{},"body":{"classes/Tag.html":{}}}],["src/tags/tag.model.ts:36",{"_index":377,"title":{},"body":{"classes/CreateTagsDto.html":{}}}],["src/tags/tags.controller.ts",{"_index":989,"title":{},"body":{"controllers/TagsController.html":{},"coverage.html":{}}}],["src/tags/tags.controller.ts:25",{"_index":993,"title":{},"body":{"controllers/TagsController.html":{}}}],["src/tags/tags.controller.ts:30",{"_index":994,"title":{},"body":{"controllers/TagsController.html":{}}}],["src/tags/tags.controller.ts:35",{"_index":991,"title":{},"body":{"controllers/TagsController.html":{}}}],["src/tags/tags.controller.ts:40",{"_index":992,"title":{},"body":{"controllers/TagsController.html":{}}}],["src/tags/tags.controller.ts:45",{"_index":996,"title":{},"body":{"controllers/TagsController.html":{}}}],["src/tags/tags.module.ts",{"_index":1012,"title":{},"body":{"modules/TagsModule.html":{}}}],["src/tags/tags.service.ts",{"_index":1014,"title":{},"body":{"injectables/TagsService.html":{},"coverage.html":{}}}],["src/tags/tags.service.ts:12",{"_index":1020,"title":{},"body":{"injectables/TagsService.html":{}}}],["src/tags/tags.service.ts:16",{"_index":1021,"title":{},"body":{"injectables/TagsService.html":{}}}],["src/tags/tags.service.ts:20",{"_index":1018,"title":{},"body":{"injectables/TagsService.html":{}}}],["src/tags/tags.service.ts:24",{"_index":1022,"title":{},"body":{"injectables/TagsService.html":{}}}],["src/tags/tags.service.ts:28",{"_index":1019,"title":{},"body":{"injectables/TagsService.html":{}}}],["src/tags/tags.service.ts:9",{"_index":1017,"title":{},"body":{"injectables/TagsService.html":{}}}],["src/users/user.model.ts",{"_index":412,"title":{},"body":{"classes/CreateUserDto.html":{},"interfaces/IUser.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"coverage.html":{}}}],["src/users/user.model.ts:103",{"_index":428,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["src/users/user.model.ts:109",{"_index":421,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["src/users/user.model.ts:113",{"_index":426,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["src/users/user.model.ts:119",{"_index":424,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["src/users/user.model.ts:123",{"_index":423,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["src/users/user.model.ts:28",{"_index":1064,"title":{},"body":{"classes/User.html":{}}}],["src/users/user.model.ts:30",{"_index":1065,"title":{},"body":{"classes/User.html":{}}}],["src/users/user.model.ts:32",{"_index":1057,"title":{},"body":{"classes/User.html":{}}}],["src/users/user.model.ts:34",{"_index":1058,"title":{},"body":{"classes/User.html":{}}}],["src/users/user.model.ts:36",{"_index":1061,"title":{},"body":{"classes/User.html":{}}}],["src/users/user.model.ts:38",{"_index":1059,"title":{},"body":{"classes/User.html":{}}}],["src/users/user.model.ts:40",{"_index":1063,"title":{},"body":{"classes/User.html":{}}}],["src/users/user.model.ts:44",{"_index":1060,"title":{},"body":{"classes/User.html":{}}}],["src/users/user.model.ts:64",{"_index":1062,"title":{},"body":{"classes/User.html":{}}}],["src/users/user.model.ts:91",{"_index":429,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["src/users/user.model.ts:97",{"_index":419,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["src/users/users.controller.ts",{"_index":1067,"title":{},"body":{"controllers/UsersController.html":{},"coverage.html":{}}}],["src/users/users.controller.ts:29",{"_index":1073,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:38",{"_index":1075,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:47",{"_index":1078,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:56",{"_index":1084,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:68",{"_index":1081,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.module.ts",{"_index":1098,"title":{},"body":{"modules/UsersModule.html":{}}}],["src/users/users.service.ts",{"_index":1100,"title":{},"body":{"injectables/UsersService.html":{},"coverage.html":{}}}],["src/users/users.service.ts:11",{"_index":1103,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:15",{"_index":1104,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:19",{"_index":1105,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:23",{"_index":1107,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:27",{"_index":1106,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:8",{"_index":1102,"title":{},"body":{"injectables/UsersService.html":{}}}],["sse",{"_index":790,"title":{},"body":{"controllers/HealthController.html":{}}}],["sse('sse",{"_index":798,"title":{},"body":{"controllers/HealthController.html":{}}}],["start",{"_index":1268,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":1271,"title":{},"body":{"index.html":{}}}],["start:prodtest",{"_index":1272,"title":{},"body":{"index.html":{}}}],["started",{"_index":1253,"title":{"index.html":{}},"body":{}}],["starter",{"_index":1263,"title":{},"body":{"index.html":{}}}],["stat",{"_index":827,"title":{},"body":{"controllers/HealthController.html":{}}}],["stat.load",{"_index":833,"title":{},"body":{"controllers/HealthController.html":{}}}],["stat.memory",{"_index":831,"title":{},"body":{"controllers/HealthController.html":{}}}],["stat.timestamp",{"_index":835,"title":{},"body":{"controllers/HealthController.html":{}}}],["statements",{"_index":461,"title":{},"body":{"classes/CreateUserDto.html":{},"interfaces/IUser.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"coverage.html":{}}}],["static",{"_index":154,"title":{},"body":{"controllers/AppController.html":{},"classes/BaseEntity.html":{},"classes/BaseModel.html":{},"classes/CreateTagsDto.html":{},"classes/CreateUserDto.html":{},"injectables/CronService.html":{},"controllers/HealthController.html":{},"interfaces/IBaseModel.html":{},"interfaces/ITag.html":{},"interfaces/IUser.html":{},"classes/Tag.html":{},"controllers/TagsController.html":{},"classes/UpdateTagsDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"dependencies.html":{}}}],["status",{"_index":911,"title":{},"body":{"classes/QueryFailedFilter.html":{},"guards/ResponseGuard.html":{},"classes/ValidationFailedFilter.html":{}}}],["statuscode",{"_index":16,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"classes/QueryFailedFilter.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{},"classes/ValidationFailedFilter.html":{}}}],["stay",{"_index":1292,"title":{},"body":{"index.html":{}}}],["store",{"_index":1071,"title":{},"body":{"controllers/UsersController.html":{}}}],["stream",{"_index":595,"title":{},"body":{"classes/CrudService.html":{}}}],["stream$.pipe",{"_index":653,"title":{},"body":{"classes/CrudService.html":{}}}],["string",{"_index":23,"title":{},"body":{"interfaces/APIResponse.html":{},"controllers/AppController.html":{},"interfaces/AppLaunchAction.html":{},"modules/AppModule.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"classes/CreateTagsDto.html":{},"classes/CreateUserDto.html":{},"classes/CrudController.html":{},"classes/CrudService.html":{},"injectables/DBHelper.html":{},"injectables/ExcludeNullUndefinedInterceptor.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"controllers/HealthController.html":{},"interfaces/ICrudService.html":{},"interfaces/IPagination.html":{},"interfaces/ITag.html":{},"interfaces/IUser.html":{},"classes/PaginationParams.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"guards/RequestGuard.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"guards/ResponseGuard.html":{},"classes/Tag.html":{},"classes/UpdateTagsDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["subject",{"_index":51,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{}}}],["success",{"_index":622,"title":{},"body":{"classes/CrudService.html":{},"interfaces/ITryRequest.html":{},"guards/ResponseGuard.html":{}}}],["summary",{"_index":1091,"title":{},"body":{"controllers/UsersController.html":{}}}],["super.$beforeinsert(querycontext",{"_index":371,"title":{},"body":{"classes/BaseModel.html":{},"interfaces/IBaseModel.html":{}}}],["super.$beforeupdate(opt",{"_index":365,"title":{},"body":{"classes/BaseModel.html":{},"interfaces/IBaseModel.html":{}}}],["support",{"_index":1225,"title":{},"body":{"dependencies.html":{},"index.html":{},"modules.html":{}}}],["svg",{"_index":1303,"title":{},"body":{"modules.html":{}}}],["swagger",{"_index":1228,"title":{},"body":{"dependencies.html":{}}}],["sync",{"_index":713,"title":{},"body":{"injectables/DBHelper.html":{}}}],["sync(relation",{"_index":717,"title":{},"body":{"injectables/DBHelper.html":{}}}],["synchronize",{"_index":234,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["syntax",{"_index":938,"title":{},"body":{"guards/RequestGuard.html":{}}}],["t",{"_index":21,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"injectables/DBHelper.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"classes/GetManyDto.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/ICrudService.html":{},"interfaces/IPagination.html":{},"interfaces/IPagination-1.html":{},"classes/PaginationParams.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{}}}],["table",{"_index":914,"title":{},"body":{"classes/QueryFailedFilter.html":{},"coverage.html":{}}}],["tablename",{"_index":390,"title":{},"body":{"classes/CreateTagsDto.html":{},"classes/CreateUserDto.html":{},"interfaces/ITag.html":{},"interfaces/IUser.html":{},"classes/Tag.html":{},"classes/UpdateTagsDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1174,"title":{},"body":{"coverage.html":{}}}],["tag",{"_index":389,"title":{"classes/Tag.html":{}},"body":{"classes/CreateTagsDto.html":{},"modules/DatabaseModule.html":{},"interfaces/ITag.html":{},"classes/Tag.html":{},"controllers/TagsController.html":{},"injectables/TagsService.html":{},"classes/UpdateTagsDto.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["tag.model",{"_index":998,"title":{},"body":{"controllers/TagsController.html":{},"injectables/TagsService.html":{}}}],["tag.ts",{"_index":1159,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["tags",{"_index":391,"title":{},"body":{"classes/CreateTagsDto.html":{},"interfaces/ITag.html":{},"classes/Tag.html":{},"controllers/TagsController.html":{},"classes/UpdateTagsDto.html":{},"miscellaneous/variables.html":{}}}],["tags.controller",{"_index":1013,"title":{},"body":{"modules/TagsModule.html":{}}}],["tags.service",{"_index":1000,"title":{},"body":{"controllers/TagsController.html":{},"modules/TagsModule.html":{}}}],["tags/tag.model",{"_index":742,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["tags/tags.module",{"_index":210,"title":{},"body":{"modules/AppModule.html":{}}}],["tagscontroller",{"_index":988,"title":{"controllers/TagsController.html":{}},"body":{"controllers/TagsController.html":{},"modules/TagsModule.html":{},"coverage.html":{}}}],["tagsmodule",{"_index":172,"title":{"modules/TagsModule.html":{}},"body":{"modules/AppModule.html":{},"modules/TagsModule.html":{},"modules.html":{},"overview.html":{}}}],["tagsservice",{"_index":999,"title":{"injectables/TagsService.html":{}},"body":{"controllers/TagsController.html":{},"modules/TagsModule.html":{},"injectables/TagsService.html":{},"coverage.html":{},"overview.html":{}}}],["take",{"_index":864,"title":{},"body":{"classes/PaginationParams.html":{}}}],["takes",{"_index":1042,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["terminate",{"_index":1041,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["termination",{"_index":243,"title":{},"body":{"modules/AppModule.html":{}}}],["terminusmodule",{"_index":202,"title":{},"body":{"modules/AppModule.html":{}}}],["test",{"_index":228,"title":{},"body":{"modules/AppModule.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["test:covsupport",{"_index":1277,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":1276,"title":{},"body":{"index.html":{}}}],["tests",{"_index":1274,"title":{},"body":{"index.html":{}}}],["thanks",{"_index":1283,"title":{},"body":{"index.html":{}}}],["this.$fetchgraph(expression",{"_index":363,"title":{},"body":{"classes/BaseModel.html":{},"interfaces/IBaseModel.html":{}}}],["this.bindrequesthelpers(context.switchtohttp().getrequest",{"_index":931,"title":{},"body":{"guards/RequestGuard.html":{}}}],["this.bindresponsehelpers(context.switchtohttp().getresponse",{"_index":954,"title":{},"body":{"guards/ResponseGuard.html":{}}}],["this.collectosmetrics(metrics",{"_index":820,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.config.get('node_env",{"_index":839,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.count",{"_index":694,"title":{},"body":{"classes/CustomQueryBuilder.html":{}}}],["this.created_at",{"_index":372,"title":{},"body":{"classes/BaseModel.html":{},"interfaces/IBaseModel.html":{}}}],["this.crudservice.create(entity",{"_index":567,"title":{},"body":{"classes/CrudController.html":{}}}],["this.crudservice.delete(id",{"_index":573,"title":{},"body":{"classes/CrudController.html":{}}}],["this.crudservice.findall(filter",{"_index":563,"title":{},"body":{"classes/CrudController.html":{}}}],["this.crudservice.findone(id",{"_index":565,"title":{},"body":{"classes/CrudController.html":{}}}],["this.crudservice.update(id",{"_index":569,"title":{},"body":{"classes/CrudController.html":{}}}],["this.dns.pingcheck('nestjs",{"_index":823,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.factorial(n",{"_index":516,"title":{},"body":{"injectables/CronService.html":{}}}],["this.findby",{"_index":721,"title":{},"body":{"injectables/DBHelper.html":{}}}],["this.getpasswordhash(partialentity.hash",{"_index":648,"title":{},"body":{"classes/CrudService.html":{}}}],["this.health.check",{"_index":822,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.logger.debug",{"_index":518,"title":{},"body":{"injectables/CronService.html":{}}}],["this.onlycount",{"_index":697,"title":{},"body":{"classes/CustomQueryBuilder.html":{}}}],["this.page(page",{"_index":688,"title":{},"body":{"classes/CustomQueryBuilder.html":{}}}],["this.repository.count(filter",{"_index":617,"title":{},"body":{"classes/CrudService.html":{}}}],["this.repository.create(entity",{"_index":632,"title":{},"body":{"classes/CrudService.html":{}}}],["this.repository.delete(criteria",{"_index":652,"title":{},"body":{"classes/CrudService.html":{}}}],["this.repository.find(filter",{"_index":619,"title":{},"body":{"classes/CrudService.html":{}}}],["this.repository.findone(id",{"_index":626,"title":{},"body":{"classes/CrudService.html":{}}}],["this.repository.findone(this.findby",{"_index":723,"title":{},"body":{"injectables/DBHelper.html":{}}}],["this.repository.findoneorfail(id",{"_index":621,"title":{},"body":{"classes/CrudService.html":{}}}],["this.repository.save(obj",{"_index":635,"title":{},"body":{"classes/CrudService.html":{}}}],["this.repository.save(row",{"_index":734,"title":{},"body":{"injectables/DBHelper.html":{}}}],["this.repository.update(id",{"_index":651,"title":{},"body":{"classes/CrudService.html":{}}}],["this.saltrounds",{"_index":615,"title":{},"body":{"classes/CrudService.html":{}}}],["this.service.create(tag",{"_index":1006,"title":{},"body":{"controllers/TagsController.html":{}}}],["this.service.create(user",{"_index":1092,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.service.delete(id",{"_index":1007,"title":{},"body":{"controllers/TagsController.html":{}}}],["this.service.findall",{"_index":1003,"title":{},"body":{"controllers/TagsController.html":{},"controllers/UsersController.html":{}}}],["this.service.findone(id",{"_index":1005,"title":{},"body":{"controllers/TagsController.html":{},"controllers/UsersController.html":{}}}],["this.service.remove(id",{"_index":1094,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.service.update(id",{"_index":1008,"title":{},"body":{"controllers/TagsController.html":{},"controllers/UsersController.html":{}}}],["this.tag",{"_index":1033,"title":{},"body":{"injectables/TagsService.html":{}}}],["this.tag.query",{"_index":1026,"title":{},"body":{"injectables/TagsService.html":{}}}],["this.tag.query().findbyid(id",{"_index":1027,"title":{},"body":{"injectables/TagsService.html":{}}}],["this.tag.query().insert(tag).returning",{"_index":1028,"title":{},"body":{"injectables/TagsService.html":{}}}],["this.tag.query().patch(tag).where",{"_index":1029,"title":{},"body":{"injectables/TagsService.html":{}}}],["this.updated_at",{"_index":366,"title":{},"body":{"classes/BaseModel.html":{},"interfaces/IBaseModel.html":{}}}],["this.user.query",{"_index":1110,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.user.query().findbyid(id).first",{"_index":1111,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.user.query().insertandfetch(user",{"_index":1109,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.user.query().patchandfetchbyid(id",{"_index":1113,"title":{},"body":{"injectables/UsersService.html":{}}}],["this[expression.tostring",{"_index":362,"title":{},"body":{"classes/BaseModel.html":{},"interfaces/IBaseModel.html":{}}}],["those",{"_index":455,"title":{},"body":{"classes/CreateUserDto.html":{},"interfaces/IUser.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{}}}],["throw",{"_index":627,"title":{},"body":{"classes/CrudService.html":{}}}],["throwerror",{"_index":610,"title":{},"body":{"classes/CrudService.html":{},"injectables/TimeoutInterceptor.html":{}}}],["throwerror(e",{"_index":1055,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["throwerror(new",{"_index":1054,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["throwifnotfound",{"_index":1112,"title":{},"body":{"injectables/UsersService.html":{}}}],["timeago",{"_index":94,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{}}}],["timeout",{"_index":490,"title":{},"body":{"injectables/CronService.html":{},"injectables/TimeoutInterceptor.html":{}}}],["timeout(10000",{"_index":1048,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["timeout(50000",{"_index":506,"title":{},"body":{"injectables/CronService.html":{}}}],["timeouterror",{"_index":1046,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["timeoutinterceptor",{"_index":1037,"title":{"injectables/TimeoutInterceptor.html":{}},"body":{"injectables/TimeoutInterceptor.html":{},"coverage.html":{}}}],["times",{"_index":494,"title":{},"body":{"injectables/CronService.html":{}}}],["timestamp",{"_index":919,"title":{},"body":{"classes/QueryFailedFilter.html":{},"classes/ValidationFailedFilter.html":{}}}],["toadd",{"_index":729,"title":{},"body":{"injectables/DBHelper.html":{}}}],["tohexstring",{"_index":1141,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["tohexstring(value",{"_index":1251,"title":{},"body":{"miscellaneous/functions.html":{}}}],["toremove",{"_index":727,"title":{},"body":{"injectables/DBHelper.html":{}}}],["toremove.indexof(value",{"_index":733,"title":{},"body":{"injectables/DBHelper.html":{}}}],["total",{"_index":17,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"classes/CrudService.html":{},"classes/CustomQueryBuilder.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"classes/GetManyDto.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/ICrudService.html":{},"interfaces/IPagination.html":{},"interfaces/IPagination-1.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{}}}],["totalpages",{"_index":690,"title":{},"body":{"classes/CustomQueryBuilder.html":{}}}],["touch",{"_index":1293,"title":{},"body":{"index.html":{}}}],["transacting(trx",{"_index":1036,"title":{},"body":{"injectables/TagsService.html":{}}}],["transaction",{"_index":1024,"title":{},"body":{"injectables/TagsService.html":{}}}],["transaction(this.tag",{"_index":1031,"title":{},"body":{"injectables/TagsService.html":{}}}],["transform",{"_index":764,"title":{},"body":{"injectables/ExcludeNullUndefinedInterceptor.html":{},"classes/PaginationParams.html":{}}}],["transform((val",{"_index":887,"title":{},"body":{"classes/PaginationParams.html":{}}}],["transformer",{"_index":877,"title":{},"body":{"classes/PaginationParams.html":{},"dependencies.html":{}}}],["transforminterceptor",{"_index":946,"title":{"injectables/TransformInterceptor.html":{}},"body":{"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{},"coverage.html":{}}}],["true",{"_index":215,"title":{},"body":{"modules/AppModule.html":{},"classes/BaseEntity.html":{},"classes/CreateUserDto.html":{},"injectables/CronService.html":{},"classes/CrudService.html":{},"classes/CustomQueryBuilder.html":{},"modules/DatabaseModule.html":{},"interfaces/IUser.html":{},"guards/RequestGuard.html":{},"guards/ResponseGuard.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"miscellaneous/variables.html":{}}}],["trx",{"_index":1032,"title":{},"body":{"injectables/TagsService.html":{}}}],["try",{"_index":452,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/CrudService.html":{},"interfaces/IUser.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{}}}],["ts",{"_index":645,"title":{},"body":{"classes/CrudService.html":{},"classes/QueryFailedFilter.html":{},"classes/ValidationFailedFilter.html":{}}}],["twitter",{"_index":1299,"title":{},"body":{"index.html":{}}}],["type",{"_index":19,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"modules/AppModule.html":{},"classes/BaseEntity.html":{},"classes/BaseModel.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"classes/CreateTagsDto.html":{},"classes/CreateUserDto.html":{},"injectables/CronService.html":{},"classes/CrudController.html":{},"classes/CrudService.html":{},"classes/CustomQueryBuilder.html":{},"injectables/DBHelper.html":{},"injectables/ExcludeNullUndefinedInterceptor.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"classes/GetManyDto.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"controllers/HealthController.html":{},"interfaces/IBaseModel.html":{},"interfaces/ICrudService.html":{},"interfaces/IPagination.html":{},"interfaces/IPagination-1.html":{},"interfaces/ITag.html":{},"interfaces/ITryRequest.html":{},"interfaces/IUser.html":{},"classes/PaginationParams.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"classes/QueryFailedFilter.html":{},"guards/RequestGuard.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/Response.html":{},"guards/ResponseGuard.html":{},"classes/Tag.html":{},"controllers/TagsController.html":{},"injectables/TagsService.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateTagsDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"classes/ValidationFailedFilter.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealiases",{"_index":1311,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typeof",{"_index":682,"title":{},"body":{"classes/CustomQueryBuilder.html":{},"guards/RequestGuard.html":{}}}],["typeorm",{"_index":308,"title":{},"body":{"classes/BaseEntity.html":{},"classes/CrudController.html":{},"classes/CrudService.html":{},"injectables/DBHelper.html":{},"interfaces/ICrudService.html":{},"interfaces/IPagination.html":{},"dependencies.html":{}}}],["typeorm/query",{"_index":558,"title":{},"body":{"classes/CrudController.html":{},"classes/CrudService.html":{},"interfaces/ICrudService.html":{},"interfaces/IPagination.html":{}}}],["types",{"_index":381,"title":{},"body":{"classes/CreateTagsDto.html":{},"classes/CreateUserDto.html":{},"classes/CustomQueryBuilder.html":{},"interfaces/ITag.html":{},"interfaces/IUser.html":{},"classes/Tag.html":{},"classes/UpdateTagsDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"dependencies.html":{}}}],["types/dotenv",{"_index":1196,"title":{},"body":{"dependencies.html":{}}}],["typescript",{"_index":189,"title":{},"body":{"modules/AppModule.html":{},"classes/CrudService.html":{},"classes/CustomQueryBuilder.html":{},"modules/DatabaseModule.html":{},"injectables/ExcludeNullUndefinedInterceptor.html":{},"interfaces/Response.html":{},"guards/ResponseGuard.html":{},"injectables/TransformInterceptor.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["ui",{"_index":1229,"title":{},"body":{"dependencies.html":{}}}],["undefined",{"_index":761,"title":{},"body":{"injectables/ExcludeNullUndefinedInterceptor.html":{},"coverage.html":{}}}],["unique",{"_index":292,"title":{},"body":{"classes/BaseEntity.html":{}}}],["uniqueviolationerror",{"_index":901,"title":{},"body":{"classes/QueryFailedFilter.html":{}}}],["unit",{"_index":1273,"title":{},"body":{"index.html":{}}}],["unsafe",{"_index":191,"title":{},"body":{"modules/AppModule.html":{},"classes/CrudService.html":{},"classes/CustomQueryBuilder.html":{},"injectables/ExcludeNullUndefinedInterceptor.html":{},"controllers/HealthController.html":{},"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{},"controllers/UsersController.html":{}}}],["until",{"_index":260,"title":{},"body":{"modules/AppModule.html":{}}}],["unused",{"_index":736,"title":{},"body":{"modules/DatabaseModule.html":{},"controllers/TagsController.html":{}}}],["up",{"_index":1149,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["up(knex",{"_index":1248,"title":{},"body":{"miscellaneous/functions.html":{}}}],["update",{"_index":530,"title":{},"body":{"classes/CrudController.html":{},"classes/CrudService.html":{},"interfaces/ICrudService.html":{},"controllers/TagsController.html":{},"injectables/TagsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["update(id",{"_index":551,"title":{},"body":{"classes/CrudController.html":{},"classes/CrudService.html":{},"interfaces/ICrudService.html":{},"interfaces/IPagination.html":{},"controllers/TagsController.html":{},"injectables/TagsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["updated_at",{"_index":321,"title":{},"body":{"classes/BaseModel.html":{},"interfaces/IBaseModel.html":{},"classes/Tag.html":{},"classes/User.html":{}}}],["updatedat",{"_index":276,"title":{},"body":{"classes/BaseEntity.html":{}}}],["updatedatecolumn",{"_index":304,"title":{},"body":{"classes/BaseEntity.html":{}}}],["updatedtag",{"_index":995,"title":{},"body":{"controllers/TagsController.html":{}}}],["updateduser",{"_index":1082,"title":{},"body":{"controllers/UsersController.html":{}}}],["updateresult",{"_index":849,"title":{},"body":{"interfaces/ICrudService.html":{},"interfaces/IPagination.html":{}}}],["updatetagsdto",{"_index":409,"title":{"classes/UpdateTagsDto.html":{}},"body":{"classes/CreateTagsDto.html":{},"interfaces/ITag.html":{},"classes/Tag.html":{},"controllers/TagsController.html":{},"classes/UpdateTagsDto.html":{},"coverage.html":{}}}],["updateuserdto",{"_index":471,"title":{"classes/UpdateUserDto.html":{}},"body":{"classes/CreateUserDto.html":{},"interfaces/IUser.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["use",{"_index":146,"title":{},"body":{"controllers/AppController.html":{},"classes/CrudService.html":{},"controllers/HealthController.html":{},"controllers/TagsController.html":{},"controllers/UsersController.html":{}}}],["used",{"_index":397,"title":{},"body":{"classes/CreateTagsDto.html":{},"classes/CreateUserDto.html":{},"interfaces/ITag.html":{},"interfaces/IUser.html":{},"classes/Tag.html":{},"classes/UpdateTagsDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{}}}],["usefactory",{"_index":750,"title":{},"body":{"modules/DatabaseModule.html":{},"miscellaneous/variables.html":{}}}],["usenullasdefault",{"_index":753,"title":{},"body":{"modules/DatabaseModule.html":{},"miscellaneous/variables.html":{}}}],["user",{"_index":52,"title":{"classes/User.html":{}},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"classes/CreateUserDto.html":{},"modules/DatabaseModule.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/IUser.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["user.model",{"_index":1086,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["user.ts",{"_index":1156,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["useraddress",{"_index":69,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{}}}],["usercontacts",{"_index":70,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{}}}],["useremail",{"_index":71,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{}}}],["userid",{"_index":128,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{}}}],["username",{"_index":72,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"classes/CreateUserDto.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/IUser.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{}}}],["userpost",{"_index":84,"title":{"interfaces/UserPost.html":{}},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{},"coverage.html":{}}}],["userposts",{"_index":98,"title":{"interfaces/UserPosts.html":{}},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{},"coverage.html":{}}}],["users",{"_index":434,"title":{},"body":{"classes/CreateUserDto.html":{},"interfaces/IUser.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"miscellaneous/variables.html":{}}}],["users'})@get",{"_index":1074,"title":{},"body":{"controllers/UsersController.html":{}}}],["users.controller",{"_index":1099,"title":{},"body":{"modules/UsersModule.html":{}}}],["users.service",{"_index":1088,"title":{},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{}}}],["users/user.model",{"_index":741,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["users/users.module",{"_index":211,"title":{},"body":{"modules/AppModule.html":{}}}],["userscontroller",{"_index":1066,"title":{"controllers/UsersController.html":{}},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{},"coverage.html":{}}}],["usersmodule",{"_index":173,"title":{"modules/UsersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["usersservice",{"_index":1087,"title":{"injectables/UsersService.html":{}},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"overview.html":{}}}],["usesid",{"_index":53,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{}}}],["usevalue",{"_index":748,"title":{},"body":{"modules/DatabaseModule.html":{},"miscellaneous/variables.html":{}}}],["using",{"_index":450,"title":{},"body":{"classes/CreateUserDto.html":{},"interfaces/IUser.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{}}}],["valid('development",{"_index":226,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["validation",{"_index":398,"title":{},"body":{"classes/CreateTagsDto.html":{},"classes/CreateUserDto.html":{},"interfaces/ITag.html":{},"interfaces/IUser.html":{},"classes/Tag.html":{},"classes/UpdateTagsDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{}}}],["validationerror",{"_index":1118,"title":{},"body":{"classes/ValidationFailedFilter.html":{}}}],["validationerrorcode",{"_index":1121,"title":{},"body":{"classes/ValidationFailedFilter.html":{}}}],["validationerrortype",{"_index":1123,"title":{},"body":{"classes/ValidationFailedFilter.html":{}}}],["validationfailedfilter",{"_index":1116,"title":{"classes/ValidationFailedFilter.html":{}},"body":{"classes/ValidationFailedFilter.html":{},"coverage.html":{}}}],["validationoptions",{"_index":216,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["validationschema",{"_index":219,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["validator",{"_index":386,"title":{},"body":{"classes/CreateTagsDto.html":{},"classes/CreateUserDto.html":{},"interfaces/ITag.html":{},"interfaces/IUser.html":{},"classes/PaginationParams.html":{},"classes/Tag.html":{},"classes/UpdateTagsDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"dependencies.html":{}}}],["value",{"_index":288,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseModel.html":{},"injectables/CronService.html":{},"classes/CustomQueryBuilder.html":{},"injectables/ExcludeNullUndefinedInterceptor.html":{},"classes/PaginationParams.html":{},"guards/RequestGuard.html":{},"classes/Tag.html":{},"injectables/TimeoutInterceptor.html":{},"classes/User.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["value.length",{"_index":686,"title":{},"body":{"classes/CustomQueryBuilder.html":{}}}],["value.trim",{"_index":942,"title":{},"body":{"guards/RequestGuard.html":{}}}],["values",{"_index":725,"title":{},"body":{"injectables/DBHelper.html":{}}}],["variable",{"_index":1128,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":1314,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["various",{"_index":441,"title":{},"body":{"classes/CreateUserDto.html":{},"interfaces/IUser.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{}}}],["vars",{"_index":737,"title":{},"body":{"modules/DatabaseModule.html":{},"controllers/TagsController.html":{}}}],["version",{"_index":277,"title":{},"body":{"classes/BaseEntity.html":{}}}],["versioncolumn",{"_index":307,"title":{},"body":{"classes/BaseEntity.html":{}}}],["viewscont",{"_index":120,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{}}}],["visibility",{"_index":350,"title":{},"body":{"classes/BaseModel.html":{},"interfaces/IBaseModel.html":{},"dependencies.html":{}}}],["visibilityplugin",{"_index":349,"title":{},"body":{"classes/BaseModel.html":{},"interfaces/IBaseModel.html":{}}}],["void",{"_index":186,"title":{},"body":{"modules/AppModule.html":{},"injectables/CronService.html":{},"controllers/HealthController.html":{},"classes/QueryFailedFilter.html":{},"classes/ValidationFailedFilter.html":{}}}],["watch",{"_index":1269,"title":{},"body":{"index.html":{}}}],["website",{"_index":1297,"title":{},"body":{"index.html":{}}}],["went",{"_index":962,"title":{},"body":{"guards/ResponseGuard.html":{}}}],["whenever",{"_index":399,"title":{},"body":{"classes/CreateTagsDto.html":{},"classes/CreateUserDto.html":{},"interfaces/ITag.html":{},"interfaces/IUser.html":{},"classes/Tag.html":{},"classes/UpdateTagsDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{}}}],["whitespace",{"_index":451,"title":{},"body":{"classes/CreateUserDto.html":{},"interfaces/IUser.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{}}}],["withmeta",{"_index":975,"title":{},"body":{"guards/ResponseGuard.html":{}}}],["withmeta(data",{"_index":968,"title":{},"body":{"guards/ResponseGuard.html":{}}}],["world",{"_index":158,"title":{},"body":{"controllers/AppController.html":{}}}],["writeerror",{"_index":637,"title":{},"body":{"classes/CrudService.html":{}}}],["wrong",{"_index":963,"title":{},"body":{"guards/ResponseGuard.html":{}}}],["yes",{"_index":185,"title":{},"body":{"modules/AppModule.html":{},"classes/CrudController.html":{},"classes/CrudService.html":{},"controllers/HealthController.html":{},"interfaces/ICrudService.html":{}}}],["you'd",{"_index":1287,"title":{},"body":{"index.html":{}}}],["zoom",{"_index":174,"title":{},"body":{"modules/AppModule.html":{},"modules/CronModule.html":{},"modules/TagsModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"interfaces/APIResponse.html":{"url":"interfaces/APIResponse.html","title":"interface - APIResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  APIResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/domain.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        count\n                                \n                                \n                                        data\n                                \n                                \n                                        error\n                                \n                                \n                                        message\n                                \n                                \n                                            Optional\n                                        page\n                                \n                                \n                                            Optional\n                                        pageCount\n                                \n                                \n                                        statusCode\n                                \n                                \n                                            Optional\n                                        total\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        count\n                                    \n                                \n                                \n                                    \n                                        count:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                    \n                                \n                                \n                                    \n                                        data:     T\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     T\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        error\n                                    \n                                \n                                \n                                    \n                                        error:         APIError\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         APIError\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        message\n                                    \n                                \n                                \n                                    \n                                        message:     string | string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        page\n                                    \n                                \n                                \n                                    \n                                        page:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pageCount\n                                    \n                                \n                                \n                                    \n                                        pageCount:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        statusCode\n                                    \n                                \n                                \n                                    \n                                        statusCode:     HttpStatus\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     HttpStatus\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        total\n                                    \n                                \n                                \n                                    \n                                        total:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { HttpStatus } from '@nestjs/common'\n\nexport type Result =\n    | GetAppLaunchData\n    | GetUserProfile\n    | GetUserPosts\n    | GetComments\n    | GetRescueList\n    | GetFollowers\n    | GetFollowing\n\nexport type APIError = Error | string | null\n\nexport interface APIResponse {\n    data: T\n    error: APIError\n    message: string | string[]\n    statusCode: HttpStatus\n\n    count?: number\n    page?: number\n    pageCount?: number\n    total?: number\n}\n\nexport interface GetAppLaunchData {\n    link: 'api:/'\n    response: APIResponse\n}\n\nexport interface GetUserProfile {\n    link: 'api:v1/user/getUserProfile?userId=25'\n    response: APIResponse\n}\n\nexport interface GetUserPosts {\n    link: 'api:v1/user/getUserPosts?pageNo=0&pageSize=25'\n    response: APIResponse\n}\n\nexport interface GetRescueList {\n    link: 'api:v1/rescue/getRescueList?pageNo=0&pageSize=10&status=pending|inProgress|completed|nearest'\n    response: APIResponse\n}\n\nexport interface GetComments {\n    link: 'api:v1/rescue/getComments?pageNo=0&pageSize=10&postId=1230'\n    response: APIResponse\n}\n\nexport interface GetFollowers {\n    link: 'api:v1/rescue/getUserFollowers?userId=1230'\n    response: APIResponse\n}\n\nexport interface GetFollowing {\n    link: 'api:v1/rescue/getUserFollowing?userId=1230'\n    response: APIResponse\n}\n\nexport interface AppLaunchAction {\n    actionId: number\n    action: string\n    isActive: boolean\n    subject?: string\n}\n\nexport interface User {\n    usesId: number\n\n    coverImage: string\n    following: boolean\n    gender: string\n    isOwnProfile: number\n    isRescuer: boolean\n    latitude: number\n    longitude: number\n    numberOfFollowers: number\n    numberOfFollowing: number\n    numberOfPosts: number\n    numberOfRescuesCompleted: number\n    numberOfRescuesCreated: number\n    numberOfRescuesInProgress: number\n    profileImage: string\n    rescuer: boolean\n    userAddress: string\n    userContacts: string\n    userEmail: string\n    userName: string\n    badge: {\n        badgeId: number\n        badgeName: string\n        badgeDescription: string\n        recuesCompletionNeeded: number\n    }\n    setting: {\n        showMyContacts: boolean\n        getNotifications: boolean\n    }\n}\n\nexport interface PostType {\n    postTypeId: number\n    postType: string\n}\n\nexport interface PostedByUser {\n    usesId: number\n    badgeName: string\n    following: boolean\n    profileImage: string\n    rescuer: boolean\n    userName: string\n}\n\nexport interface UserPost {\n    postId: number\n    commentsCount: number\n    isUserReactedToPost: boolean\n    ownPage: boolean\n    postBy: PostedByUser\n    postImage: string\n    postTime: string\n    postType: PostType\n    postVideo: string\n    reactionsCount: number\n    timeAgo: string\n\n    adCorporateLogoUrl: string | null\n    corporateDescription: string | null\n    corporateName: string | null\n}\n\nexport interface UserPosts {\n    isRecent: boolean\n    feed: UserPost[]\n}\n\nexport interface Rescues {\n    rescueId: number\n    animalImageUrl: string\n    distance: number\n    distanceAway: string\n    emergencyType: string\n    postedBy: string\n    postedMinAgo: string\n    rescueDate: Date\n    rescuedPetName: string\n    rescueLocality: string\n    rescuers: {\n        contact: number\n        name: string\n        profileId: number\n        profileImageUrl: string\n        rescues: boolean\n        showMyNumber: boolean\n    }\n    rescueStatus: string\n    viewsCont: number\n}\n\nexport interface RescueLists {\n    rescues: Rescues[]\n}\n\nexport interface Comment {\n    commentId: number\n    comment: string\n    commentedUseName: string\n    commentedUserId: number\n    timeAgo: string\n}\n\nexport interface Comments {\n    comments: Comment[]\n}\n\nexport interface Follower {\n    userId: number\n    userName: string\n    profileImage: string\n    areYouFollowing: boolean\n    showRemoveOption: boolean\n}\n\nexport interface Following extends Follower {}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getHello\n                        \n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/app.controller.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        /* eslint-disable no-use-before-define */\nimport { Controller, Get } from '@nestjs/common'\nimport { ApiTags } from '@nestjs/swagger'\n\n@Controller(AppController.path)\n@ApiTags(AppController.name)\nexport class AppController {\n    static path = '/'\n\n    @Get() getHello() {\n        return 'Hello World!'\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AppLaunchAction.html":{"url":"interfaces/AppLaunchAction.html","title":"interface - AppLaunchAction","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  AppLaunchAction\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/domain.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        action\n                                \n                                \n                                        actionId\n                                \n                                \n                                        isActive\n                                \n                                \n                                            Optional\n                                        subject\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        action\n                                    \n                                \n                                \n                                    \n                                        action:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        actionId\n                                    \n                                \n                                \n                                    \n                                        actionId:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isActive\n                                    \n                                \n                                \n                                    \n                                        isActive:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        subject\n                                    \n                                \n                                \n                                    \n                                        subject:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { HttpStatus } from '@nestjs/common'\n\nexport type Result =\n    | GetAppLaunchData\n    | GetUserProfile\n    | GetUserPosts\n    | GetComments\n    | GetRescueList\n    | GetFollowers\n    | GetFollowing\n\nexport type APIError = Error | string | null\n\nexport interface APIResponse {\n    data: T\n    error: APIError\n    message: string | string[]\n    statusCode: HttpStatus\n\n    count?: number\n    page?: number\n    pageCount?: number\n    total?: number\n}\n\nexport interface GetAppLaunchData {\n    link: 'api:/'\n    response: APIResponse\n}\n\nexport interface GetUserProfile {\n    link: 'api:v1/user/getUserProfile?userId=25'\n    response: APIResponse\n}\n\nexport interface GetUserPosts {\n    link: 'api:v1/user/getUserPosts?pageNo=0&pageSize=25'\n    response: APIResponse\n}\n\nexport interface GetRescueList {\n    link: 'api:v1/rescue/getRescueList?pageNo=0&pageSize=10&status=pending|inProgress|completed|nearest'\n    response: APIResponse\n}\n\nexport interface GetComments {\n    link: 'api:v1/rescue/getComments?pageNo=0&pageSize=10&postId=1230'\n    response: APIResponse\n}\n\nexport interface GetFollowers {\n    link: 'api:v1/rescue/getUserFollowers?userId=1230'\n    response: APIResponse\n}\n\nexport interface GetFollowing {\n    link: 'api:v1/rescue/getUserFollowing?userId=1230'\n    response: APIResponse\n}\n\nexport interface AppLaunchAction {\n    actionId: number\n    action: string\n    isActive: boolean\n    subject?: string\n}\n\nexport interface User {\n    usesId: number\n\n    coverImage: string\n    following: boolean\n    gender: string\n    isOwnProfile: number\n    isRescuer: boolean\n    latitude: number\n    longitude: number\n    numberOfFollowers: number\n    numberOfFollowing: number\n    numberOfPosts: number\n    numberOfRescuesCompleted: number\n    numberOfRescuesCreated: number\n    numberOfRescuesInProgress: number\n    profileImage: string\n    rescuer: boolean\n    userAddress: string\n    userContacts: string\n    userEmail: string\n    userName: string\n    badge: {\n        badgeId: number\n        badgeName: string\n        badgeDescription: string\n        recuesCompletionNeeded: number\n    }\n    setting: {\n        showMyContacts: boolean\n        getNotifications: boolean\n    }\n}\n\nexport interface PostType {\n    postTypeId: number\n    postType: string\n}\n\nexport interface PostedByUser {\n    usesId: number\n    badgeName: string\n    following: boolean\n    profileImage: string\n    rescuer: boolean\n    userName: string\n}\n\nexport interface UserPost {\n    postId: number\n    commentsCount: number\n    isUserReactedToPost: boolean\n    ownPage: boolean\n    postBy: PostedByUser\n    postImage: string\n    postTime: string\n    postType: PostType\n    postVideo: string\n    reactionsCount: number\n    timeAgo: string\n\n    adCorporateLogoUrl: string | null\n    corporateDescription: string | null\n    corporateName: string | null\n}\n\nexport interface UserPosts {\n    isRecent: boolean\n    feed: UserPost[]\n}\n\nexport interface Rescues {\n    rescueId: number\n    animalImageUrl: string\n    distance: number\n    distanceAway: string\n    emergencyType: string\n    postedBy: string\n    postedMinAgo: string\n    rescueDate: Date\n    rescuedPetName: string\n    rescueLocality: string\n    rescuers: {\n        contact: number\n        name: string\n        profileId: number\n        profileImageUrl: string\n        rescues: boolean\n        showMyNumber: boolean\n    }\n    rescueStatus: string\n    viewsCont: number\n}\n\nexport interface RescueLists {\n    rescues: Rescues[]\n}\n\nexport interface Comment {\n    commentId: number\n    comment: string\n    commentedUseName: string\n    commentedUserId: number\n    timeAgo: string\n}\n\nexport interface Comments {\n    comments: Comment[]\n}\n\nexport interface Follower {\n    userId: number\n    userName: string\n    profileImage: string\n    areYouFollowing: boolean\n    showRemoveOption: boolean\n}\n\nexport interface Following extends Follower {}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\n\nCronModule\n\nCronModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nCronModule->AppModule\n\n\n\n\n\nDatabaseModule\n\nDatabaseModule\n\nAppModule -->\n\nDatabaseModule->AppModule\n\n\n\n\n\nTagsModule\n\nTagsModule\n\nAppModule -->\n\nTagsModule->AppModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                        \n                            HealthController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            CronModule\n                        \n                        \n                            DatabaseModule\n                        \n                        \n                            TagsModule\n                        \n                        \n                            UsersModule\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onApplicationShutdown\n                        \n                        \n                    \n                \n            \n            \n                \nonApplicationShutdown(signal?: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app.module.ts:62\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    signal\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onModuleInit\n                        \n                        \n                    \n                \n            \n            \n                \nonModuleInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app.module.ts:58\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        /* eslint-disable @typescript-eslint/no-unsafe-assignment,@typescript-eslint/no-unsafe-call,@typescript-eslint/no-unsafe-member-access,@typescript-eslint/require-await */\nimport { Module, OnApplicationShutdown, OnModuleInit } from '@nestjs/common'\nimport { ConfigModule } from '@nestjs/config'\nimport { ScheduleModule } from '@nestjs/schedule'\nimport { TerminusModule } from '@nestjs/terminus'\n\nimport * as Joi from '@hapi/joi'\n\nimport { AppController } from './app.controller'\nimport { CronModule } from './cron/cron.module'\nimport { DatabaseModule } from './database/database.module'\nimport { HealthController } from './health/health.controller'\nimport { TagsModule } from './tags/tags.module'\nimport { UsersModule } from './users/users.module'\n\nconst ConfigModuleOptions = {\n    isGlobal: true,\n    validationOptions: {\n        allowUnknown: true,\n        abortEarly: true,\n    },\n    validationSchema: Joi.object({\n        PORT: Joi.number().default(3000),\n        NODE_ENV: Joi.string()\n            .required()\n            .valid('development', 'production', 'test', 'provision')\n            .default('development'),\n\n        database: Joi.string().required(),\n        type: Joi.string().required(),\n        logging: Joi.string().required(),\n        synchronize: Joi.string().required(),\n    }),\n}\n\n@Module({\n    controllers: [AppController, HealthController],\n    imports: [\n        ConfigModule.forRoot(ConfigModuleOptions),\n        DatabaseModule,\n        ScheduleModule.forRoot(), // CronModules deps\n        CronModule,\n        TerminusModule, // Health module\n        TagsModule,\n        UsersModule,\n    ],\n    providers: [],\n})\nexport class AppModule implements OnModuleInit, OnApplicationShutdown {\n    /*\n     * When the application receives a termination signal it will call any registered\n     * onModuleDestroy(), beforeApplicationShutdown(), then onApplicationShutdown() methods\n     * (in the sequence described above) with the corresponding signal as the first parameter.\n     * If a registered function awaits an asynchronous call (returns a promise), Nest will not\n     * continue in the sequence until the promise is resolved or rejected.\n     */\n\n    onModuleInit(): void {\n        console.info(`ModuleInit - AppModule has been initialized.`)\n    }\n\n    onApplicationShutdown(signal?: string): void {\n        console.error(\n            `ApplicationShutdown - AppModule has been shutdown with ${signal} signal`,\n        )\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BaseEntity.html":{"url":"classes/BaseEntity.html","title":"class - BaseEntity","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BaseEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/base/datum/base-entity.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                createdAt\n                            \n                            \n                                    Optional\n                                deletedAt\n                            \n                            \n                                    Static\n                                exclude\n                            \n                            \n                                id\n                            \n                            \n                                    Optional\n                                updatedAt\n                            \n                            \n                                    Optional\n                                version\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({example: '2000-01-01T12:00:00.000Z'})@CreateDateColumn({select: false, nullable: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/base/datum/base-entity.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            deletedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Date | null\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({example: '2000-01-01T12:00:00.000Z'})@DeleteDateColumn({select: false, nullable: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/base/datum/base-entity.ts:43\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            exclude\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n        'password',\n        'version',\n        'createdAt',\n        'updatedAt',\n        'deletedAt',\n    ]\n                        \n                    \n                        \n                            \n                                    Defined in src/base/datum/base-entity.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'Unique ID', example: 1})@PrimaryGeneratedColumn()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/base/datum/base-entity.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({example: '2000-01-01T12:00:00.000Z'})@UpdateDateColumn({select: false, nullable: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/base/datum/base-entity.ts:39\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            version\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({example: '2000-01-01T12:00:00.000Z'})@VersionColumn({default: 1, select: false, nullable: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/base/datum/base-entity.ts:31\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger'\n\nimport {\n    PrimaryGeneratedColumn,\n    UpdateDateColumn,\n    CreateDateColumn,\n    DeleteDateColumn,\n    VersionColumn,\n} from 'typeorm'\n\nexport abstract class BaseEntity {\n    public static exclude = [\n        'password',\n        'version',\n        'createdAt',\n        'updatedAt',\n        'deletedAt',\n    ]\n\n    @ApiProperty({ description: 'Unique ID', example: 1 })\n    @PrimaryGeneratedColumn()\n    id: number\n\n    @ApiProperty({ example: '2000-01-01T12:00:00.000Z' })\n    @VersionColumn({\n        default: 1,\n        select: false,\n        nullable: true,\n    })\n    version?: number\n\n    @ApiProperty({ example: '2000-01-01T12:00:00.000Z' })\n    @CreateDateColumn({ select: false, nullable: true })\n    createdAt?: Date\n\n    @ApiProperty({ example: '2000-01-01T12:00:00.000Z' })\n    @UpdateDateColumn({ select: false, nullable: true })\n    updatedAt?: Date\n\n    @ApiProperty({ example: '2000-01-01T12:00:00.000Z' })\n    @DeleteDateColumn({ select: false, nullable: true })\n    deletedAt?: Date | null\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BaseModel.html":{"url":"classes/BaseModel.html","title":"class - BaseModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BaseModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/database/models/base.model.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            IBaseModel\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                created_at\n                            \n                            \n                                    Optional\n                                deleted_at\n                            \n                            \n                                    Static\n                                hidden\n                            \n                            \n                                id\n                            \n                            \n                                    Static\n                                QueryBuilder\n                            \n                            \n                                QueryBuilderType\n                            \n                            \n                                updated_at\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                fetchRelation\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            created_at\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/database/models/base.model.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            deleted_at\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     any | null\n\n                        \n                    \n                        \n                            \n                                    Defined in src/database/models/base.model.ts:39\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            hidden\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : ['salt', 'password', 'created_at', 'updated_at', 'deleted_at']\n                        \n                    \n                        \n                            \n                                    Defined in src/database/models/base.model.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/database/models/base.model.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            QueryBuilder\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : CustomQueryBuilder\n                        \n                    \n                        \n                            \n                                    Defined in src/database/models/base.model.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            QueryBuilderType\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         CustomQueryBuilder<>\n\n                        \n                    \n                        \n                            \n                                    Defined in src/database/models/base.model.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updated_at\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/database/models/base.model.ts:37\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            fetchRelation\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    fetchRelation(expression: RelationExpression, options: object)\n                \n            \n\n\n            \n                \n                    Defined in src/database/models/base.model.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    expression\n                                    \n                                            RelationExpression\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    options\n                                    \n                                                object\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, ApiPropertyOptional } from '@nestjs/swagger'\n\nimport {\n    fn,\n    mixin,\n    Model,\n    ModelOptions,\n    QueryContext,\n    RelationExpression,\n} from 'objection'\nimport { DBErrors } from 'objection-db-errors'\nimport visibilityPlugin from 'objection-visibility'\n\nimport { CustomQueryBuilder } from './helpers'\n\nexport interface IBaseModel {\n    id: number\n    created_at: any\n    updated_at: any\n    deleted_at?: any\n}\n\nexport class BaseModel\n    extends mixin(Model, [visibilityPlugin, DBErrors])\n    implements IBaseModel {\n    static hidden = ['salt', 'password', 'created_at', 'updated_at', 'deleted_at'] // hidden fields to filter from query result\n\n    QueryBuilderType!: CustomQueryBuilder // custom query builder for pagination\n\n    static QueryBuilder = CustomQueryBuilder\n\n    id: number\n\n    created_at: any\n\n    updated_at: any\n\n    deleted_at?: any | null\n\n    // fetch data with relation mapping\n    async fetchRelation(expression: RelationExpression, options = {}) {\n        if (this[expression.toString()]) return this\n\n        await this.$fetchGraph(expression, options)\n        return this\n    }\n\n    /*\n    async $beforeUpdate(opt: ModelOptions, queryContext: QueryContext) {\n        await super.$beforeUpdate(opt, queryContext)\n\n        this.updated_at = new Date().toISOString() // fn.now()\n    }\n\n    async $beforeInsert(queryContext: QueryContext) {\n        await super.$beforeInsert(queryContext)\n\n        const date = fn.now() // new Date().toISOString()\n\n        this.created_at = date\n        this.updated_at = date\n    }\n    */\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Comment.html":{"url":"interfaces/Comment.html","title":"interface - Comment","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Comment\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/domain.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        comment\n                                \n                                \n                                        commentedUseName\n                                \n                                \n                                        commentedUserId\n                                \n                                \n                                        commentId\n                                \n                                \n                                        timeAgo\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        comment\n                                    \n                                \n                                \n                                    \n                                        comment:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        commentedUseName\n                                    \n                                \n                                \n                                    \n                                        commentedUseName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        commentedUserId\n                                    \n                                \n                                \n                                    \n                                        commentedUserId:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        commentId\n                                    \n                                \n                                \n                                    \n                                        commentId:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        timeAgo\n                                    \n                                \n                                \n                                    \n                                        timeAgo:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { HttpStatus } from '@nestjs/common'\n\nexport type Result =\n    | GetAppLaunchData\n    | GetUserProfile\n    | GetUserPosts\n    | GetComments\n    | GetRescueList\n    | GetFollowers\n    | GetFollowing\n\nexport type APIError = Error | string | null\n\nexport interface APIResponse {\n    data: T\n    error: APIError\n    message: string | string[]\n    statusCode: HttpStatus\n\n    count?: number\n    page?: number\n    pageCount?: number\n    total?: number\n}\n\nexport interface GetAppLaunchData {\n    link: 'api:/'\n    response: APIResponse\n}\n\nexport interface GetUserProfile {\n    link: 'api:v1/user/getUserProfile?userId=25'\n    response: APIResponse\n}\n\nexport interface GetUserPosts {\n    link: 'api:v1/user/getUserPosts?pageNo=0&pageSize=25'\n    response: APIResponse\n}\n\nexport interface GetRescueList {\n    link: 'api:v1/rescue/getRescueList?pageNo=0&pageSize=10&status=pending|inProgress|completed|nearest'\n    response: APIResponse\n}\n\nexport interface GetComments {\n    link: 'api:v1/rescue/getComments?pageNo=0&pageSize=10&postId=1230'\n    response: APIResponse\n}\n\nexport interface GetFollowers {\n    link: 'api:v1/rescue/getUserFollowers?userId=1230'\n    response: APIResponse\n}\n\nexport interface GetFollowing {\n    link: 'api:v1/rescue/getUserFollowing?userId=1230'\n    response: APIResponse\n}\n\nexport interface AppLaunchAction {\n    actionId: number\n    action: string\n    isActive: boolean\n    subject?: string\n}\n\nexport interface User {\n    usesId: number\n\n    coverImage: string\n    following: boolean\n    gender: string\n    isOwnProfile: number\n    isRescuer: boolean\n    latitude: number\n    longitude: number\n    numberOfFollowers: number\n    numberOfFollowing: number\n    numberOfPosts: number\n    numberOfRescuesCompleted: number\n    numberOfRescuesCreated: number\n    numberOfRescuesInProgress: number\n    profileImage: string\n    rescuer: boolean\n    userAddress: string\n    userContacts: string\n    userEmail: string\n    userName: string\n    badge: {\n        badgeId: number\n        badgeName: string\n        badgeDescription: string\n        recuesCompletionNeeded: number\n    }\n    setting: {\n        showMyContacts: boolean\n        getNotifications: boolean\n    }\n}\n\nexport interface PostType {\n    postTypeId: number\n    postType: string\n}\n\nexport interface PostedByUser {\n    usesId: number\n    badgeName: string\n    following: boolean\n    profileImage: string\n    rescuer: boolean\n    userName: string\n}\n\nexport interface UserPost {\n    postId: number\n    commentsCount: number\n    isUserReactedToPost: boolean\n    ownPage: boolean\n    postBy: PostedByUser\n    postImage: string\n    postTime: string\n    postType: PostType\n    postVideo: string\n    reactionsCount: number\n    timeAgo: string\n\n    adCorporateLogoUrl: string | null\n    corporateDescription: string | null\n    corporateName: string | null\n}\n\nexport interface UserPosts {\n    isRecent: boolean\n    feed: UserPost[]\n}\n\nexport interface Rescues {\n    rescueId: number\n    animalImageUrl: string\n    distance: number\n    distanceAway: string\n    emergencyType: string\n    postedBy: string\n    postedMinAgo: string\n    rescueDate: Date\n    rescuedPetName: string\n    rescueLocality: string\n    rescuers: {\n        contact: number\n        name: string\n        profileId: number\n        profileImageUrl: string\n        rescues: boolean\n        showMyNumber: boolean\n    }\n    rescueStatus: string\n    viewsCont: number\n}\n\nexport interface RescueLists {\n    rescues: Rescues[]\n}\n\nexport interface Comment {\n    commentId: number\n    comment: string\n    commentedUseName: string\n    commentedUserId: number\n    timeAgo: string\n}\n\nexport interface Comments {\n    comments: Comment[]\n}\n\nexport interface Follower {\n    userId: number\n    userName: string\n    profileImage: string\n    areYouFollowing: boolean\n    showRemoveOption: boolean\n}\n\nexport interface Following extends Follower {}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Comments.html":{"url":"interfaces/Comments.html","title":"interface - Comments","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Comments\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/domain.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        comments\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        comments\n                                    \n                                \n                                \n                                    \n                                        comments:         Comment[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Comment[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { HttpStatus } from '@nestjs/common'\n\nexport type Result =\n    | GetAppLaunchData\n    | GetUserProfile\n    | GetUserPosts\n    | GetComments\n    | GetRescueList\n    | GetFollowers\n    | GetFollowing\n\nexport type APIError = Error | string | null\n\nexport interface APIResponse {\n    data: T\n    error: APIError\n    message: string | string[]\n    statusCode: HttpStatus\n\n    count?: number\n    page?: number\n    pageCount?: number\n    total?: number\n}\n\nexport interface GetAppLaunchData {\n    link: 'api:/'\n    response: APIResponse\n}\n\nexport interface GetUserProfile {\n    link: 'api:v1/user/getUserProfile?userId=25'\n    response: APIResponse\n}\n\nexport interface GetUserPosts {\n    link: 'api:v1/user/getUserPosts?pageNo=0&pageSize=25'\n    response: APIResponse\n}\n\nexport interface GetRescueList {\n    link: 'api:v1/rescue/getRescueList?pageNo=0&pageSize=10&status=pending|inProgress|completed|nearest'\n    response: APIResponse\n}\n\nexport interface GetComments {\n    link: 'api:v1/rescue/getComments?pageNo=0&pageSize=10&postId=1230'\n    response: APIResponse\n}\n\nexport interface GetFollowers {\n    link: 'api:v1/rescue/getUserFollowers?userId=1230'\n    response: APIResponse\n}\n\nexport interface GetFollowing {\n    link: 'api:v1/rescue/getUserFollowing?userId=1230'\n    response: APIResponse\n}\n\nexport interface AppLaunchAction {\n    actionId: number\n    action: string\n    isActive: boolean\n    subject?: string\n}\n\nexport interface User {\n    usesId: number\n\n    coverImage: string\n    following: boolean\n    gender: string\n    isOwnProfile: number\n    isRescuer: boolean\n    latitude: number\n    longitude: number\n    numberOfFollowers: number\n    numberOfFollowing: number\n    numberOfPosts: number\n    numberOfRescuesCompleted: number\n    numberOfRescuesCreated: number\n    numberOfRescuesInProgress: number\n    profileImage: string\n    rescuer: boolean\n    userAddress: string\n    userContacts: string\n    userEmail: string\n    userName: string\n    badge: {\n        badgeId: number\n        badgeName: string\n        badgeDescription: string\n        recuesCompletionNeeded: number\n    }\n    setting: {\n        showMyContacts: boolean\n        getNotifications: boolean\n    }\n}\n\nexport interface PostType {\n    postTypeId: number\n    postType: string\n}\n\nexport interface PostedByUser {\n    usesId: number\n    badgeName: string\n    following: boolean\n    profileImage: string\n    rescuer: boolean\n    userName: string\n}\n\nexport interface UserPost {\n    postId: number\n    commentsCount: number\n    isUserReactedToPost: boolean\n    ownPage: boolean\n    postBy: PostedByUser\n    postImage: string\n    postTime: string\n    postType: PostType\n    postVideo: string\n    reactionsCount: number\n    timeAgo: string\n\n    adCorporateLogoUrl: string | null\n    corporateDescription: string | null\n    corporateName: string | null\n}\n\nexport interface UserPosts {\n    isRecent: boolean\n    feed: UserPost[]\n}\n\nexport interface Rescues {\n    rescueId: number\n    animalImageUrl: string\n    distance: number\n    distanceAway: string\n    emergencyType: string\n    postedBy: string\n    postedMinAgo: string\n    rescueDate: Date\n    rescuedPetName: string\n    rescueLocality: string\n    rescuers: {\n        contact: number\n        name: string\n        profileId: number\n        profileImageUrl: string\n        rescues: boolean\n        showMyNumber: boolean\n    }\n    rescueStatus: string\n    viewsCont: number\n}\n\nexport interface RescueLists {\n    rescues: Rescues[]\n}\n\nexport interface Comment {\n    commentId: number\n    comment: string\n    commentedUseName: string\n    commentedUserId: number\n    timeAgo: string\n}\n\nexport interface Comments {\n    comments: Comment[]\n}\n\nexport interface Follower {\n    userId: number\n    userName: string\n    profileImage: string\n    areYouFollowing: boolean\n    showRemoveOption: boolean\n}\n\nexport interface Following extends Follower {}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateTagsDto.html":{"url":"classes/CreateTagsDto.html","title":"class - CreateTagsDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateTagsDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/tags/tag.model.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            ITag\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()@IsString()@IsNotEmpty()@MinLength(2)@MaxLength(36)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/tags/tag.model.ts:36\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType as MappedPartialType } from '@nestjs/mapped-types'\nimport { ApiProperty, PartialType } from '@nestjs/swagger'\n\nimport { IsNotEmpty, IsString, MaxLength, MinLength } from 'class-validator'\nimport type { JSONSchema } from 'objection'\n\nimport { BaseModel } from '../database/models/base.model'\n\ninterface ITag {\n    name: string\n}\n\nexport class Tag extends BaseModel implements ITag {\n    static tableName = 'tags'\n\n    @ApiProperty() name: string\n\n    // JSON schema is not the database schema! Nothing is generated based on this.\n    // This is only used for validation. Whenever a model instance is created it is checked against this schema.\n    static jsonSchema: JSONSchema = {\n        type: 'object',\n        required: ['name'],\n        properties: {\n            id: { type: 'integer' },\n            name: { type: 'string', minLength: 2, maxLength: 255 },\n        },\n    }\n}\n\nexport class CreateTagsDto implements ITag {\n    @ApiProperty()\n    @IsString()\n    @IsNotEmpty()\n    @MinLength(2)\n    @MaxLength(36)\n    name: string\n}\n\nexport class UpdateTagsDto extends PartialType(CreateTagsDto) {}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUserDto.html":{"url":"classes/CreateUserDto.html","title":"class - CreateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/user.model.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            IUser\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                email\n                            \n                            \n                                firstName\n                            \n                            \n                                isActive\n                            \n                            \n                                lastName\n                            \n                            \n                                middleName\n                            \n                            \n                                password\n                            \n                            \n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            email\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()@IsEmail()@IsNotEmpty()@MinLength(2)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/user.model.ts:97\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            firstName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()@IsString()@IsNotEmpty()@MinLength(2)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/user.model.ts:109\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isActive\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()@IsBoolean()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/user.model.ts:123\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            lastName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()@IsString()@IsNotEmpty()@MinLength(2)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/user.model.ts:119\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            middleName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()@IsOptional()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/user.model.ts:113\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            password\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()@IsString()@IsNotEmpty()@MinLength(8)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/user.model.ts:103\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            username\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()@IsString()@IsNotEmpty()@MinLength(2)@MaxLength(36)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/user.model.ts:91\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType as MappedPartialType } from '@nestjs/mapped-types'\nimport { ApiProperty, PartialType } from '@nestjs/swagger'\n\nimport {\n    IsString,\n    MinLength,\n    IsNotEmpty,\n    IsOptional,\n    MaxLength,\n    IsEmail,\n    IsBoolean,\n} from 'class-validator'\nimport type { JSONSchema, Modifiers } from 'objection'\n\nimport { BaseModel } from '../database/models/base.model'\n\ninterface IUser {\n    username: string\n    email: string\n    firstName: string\n    lastName: string\n    isActive: boolean\n    password: string\n}\n\nexport class User extends BaseModel implements IUser {\n    static tableName = 'users'\n\n    username: string\n\n    email: string\n\n    firstName: string\n\n    lastName: string\n\n    isActive: boolean\n\n    password: string\n\n    // JSON schema is not the database schema! Nothing is generated based on this.\n    // This is only used for validation. Whenever a model instance is created it is checked against this schema.\n    static jsonSchema: JSONSchema = {\n        type: 'object',\n        required: ['username', 'email', 'password'],\n        properties: {\n            id: { type: 'integer', readOnly: true },\n            username: { type: 'string', minLength: 3, maxLength: 255 },\n            email: {\n                type: 'string',\n                minLength: 3,\n                maxLength: 255,\n                format: 'email',\n            },\n            password: { type: 'string', minLength: 8, maxLength: 255 },\n            firstName: { type: 'string', minLength: 1, maxLength: 255 },\n            lastName: { type: 'string', minLength: 1, maxLength: 255 },\n            isActive: { type: 'boolean' },\n        },\n    }\n\n    // Modifiers are reusable query snippets that can be used in various places.\n    static modifiers: Modifiers = {\n        // Our example modifier is a a semi-dumb fuzzy name match. We split the name into pieces using whitespace\n        // and then try to partially match each of those pieces to both the `firstName` and the `lastName` fields.\n\n        searchByName(query, name: string) {\n            // This `where` simply creates parentheses so that other `where` statements don't get mixed with the these.\n\n            query.where((q) => {\n                for (const namePart of name.trim().split(/\\s+/)) {\n                    for (const column of ['firstName', 'lastName']) {\n                        q.orWhereRaw('lower(??) like ?', [\n                            column,\n                            `${namePart.toLowerCase()}%`,\n                        ])\n                    }\n                }\n            })\n        },\n    }\n}\n\nexport class CreateUserDto implements IUser {\n    @ApiProperty()\n    @IsString()\n    @IsNotEmpty()\n    @MinLength(2)\n    @MaxLength(36)\n    username: string\n\n    @ApiProperty()\n    @IsEmail()\n    @IsNotEmpty()\n    @MinLength(2)\n    email: string\n\n    @ApiProperty()\n    @IsString()\n    @IsNotEmpty()\n    @MinLength(8)\n    password: string\n\n    @ApiProperty()\n    @IsString()\n    @IsNotEmpty()\n    @MinLength(2)\n    firstName: string\n\n    @ApiProperty()\n    @IsOptional()\n    middleName: string\n\n    @ApiProperty()\n    @IsString()\n    @IsNotEmpty()\n    @MinLength(2)\n    lastName: string\n\n    @ApiProperty()\n    @IsBoolean()\n    isActive: boolean\n}\n\nexport class UpdateUserDto extends PartialType(CreateUserDto) {}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CronModule.html":{"url":"modules/CronModule.html","title":"module - CronModule","body":"\n                   \n\n\n\n\n    Modules\n    CronModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_CronModule\n\n\n\ncluster_CronModule_providers\n\n\n\n\nCronService\n\nCronService\n\n\n\nCronModule\n\nCronModule\n\nCronModule -->\n\nCronService->CronModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/cron/cron.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            CronService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common'\n\nimport { CronService } from './cron.service'\n\n@Module({\n    providers: [CronService],\n})\nexport class CronModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CronService.html":{"url":"injectables/CronService.html","title":"injectable - CronService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  CronService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/cron/cron.service.ts\n        \n\n            \n                Description\n            \n            \n                @Cron are regular cron jobs\n@Interval To declare that a method should run at a (recurring) specified interval\n@Timeout To declare that a method should run (once) at a specified timeout\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                count\n                            \n                            \n                                fact16\n                            \n                            \n                                logger\n                            \n                            \n                                times\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                factorial\n                            \n                            \n                                handleCron\n                            \n                            \n                                handleInterval\n                            \n                            \n                                handleTimeout\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            factorial\n                        \n                        \n                    \n                \n            \n            \n                \nfactorial(n)\n                \n            \n\n\n            \n                \n                    Defined in src/cron/cron.service.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    n\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            handleCron\n                        \n                        \n                    \n                \n            \n            \n                \nhandleCron()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Cron('60 * * * * *')\n                \n            \n\n            \n                \n                    Defined in src/cron/cron.service.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            handleInterval\n                        \n                        \n                    \n                \n            \n            \n                \nhandleInterval()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Interval(100000)\n                \n            \n\n            \n                \n                    Defined in src/cron/cron.service.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            handleTimeout\n                        \n                        \n                    \n                \n            \n            \n                \nhandleTimeout()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Timeout(50000)\n                \n            \n\n            \n                \n                    Defined in src/cron/cron.service.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            count\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in src/cron/cron.service.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            fact16\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 20922789888000\n                        \n                    \n                        \n                            \n                                    Defined in src/cron/cron.service.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            logger\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Logger(CronService.name)\n                        \n                    \n                        \n                            \n                                    Defined in src/cron/cron.service.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            times\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 50000000\n                        \n                    \n                        \n                            \n                                    Defined in src/cron/cron.service.ts:18\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable, Logger } from '@nestjs/common'\nimport { Cron, Interval, Timeout } from '@nestjs/schedule'\n\n/**\n * `@Cron` are regular cron jobs\n *\n * `@Interval` To declare that a method should run at a (recurring) specified interval\n *\n * `@Timeout` To declare that a method should run (once) at a specified timeout\n */\n@Injectable()\nexport class CronService {\n    static count = 0\n\n    logger = new Logger(CronService.name)\n\n    times = 50000000\n\n    fact16 = 20922789888000\n\n    factorial(n) {\n        if (n === 1) return 1\n        return n * this.factorial(n - 1)\n    }\n\n    @Cron('60 * * * * *')\n    handleCron() {\n        CronService.count += 1\n        this.logger.debug(\n            `Called when the second is 60, current count is ${CronService.count}`,\n        )\n\n        let ok = true\n        for (let i = 0; i \n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CrudController.html":{"url":"classes/CrudController.html","title":"class - CrudController","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CrudController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/base/crud/crud.controller.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                delete\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findById\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Protected\n                        constructor(crudService: ICrudService)\n                    \n                \n                        \n                            \n                                Defined in src/base/crud/crud.controller.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        crudService\n                                                  \n                                                        \n                                                                        ICrudService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            create\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    create(entity: DeepPartial, ...options: any[])\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n            \n                \n                    Defined in src/base/crud/crud.controller.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entity\n                                    \n                                            DeepPartial\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                            any[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            delete\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(id: string, ...options: any[])\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n            \n                \n                    Defined in src/base/crud/crud.controller.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                            any[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findAll\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll(filter?: PaginationParams)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/base/crud/crud.controller.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                                PaginationParams\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findById\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findById(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n            \n                \n                    Defined in src/base/crud/crud.controller.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            update\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: string, entity: QueryDeepPartialEntity, ...options: any[])\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Put(':id')\n                \n            \n\n            \n                \n                    Defined in src/base/crud/crud.controller.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    entity\n                                    \n                                            QueryDeepPartialEntity\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                            any[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Get, Post, Put, Delete, Body, Param } from '@nestjs/common'\n\nimport { DeepPartial } from 'typeorm'\nimport { QueryDeepPartialEntity } from 'typeorm/query-builder/QueryPartialEntity'\n\nimport { ICrudService } from './icrud.service'\nimport { PaginationParams } from './pagination-params'\n\nexport abstract class CrudController {\n    protected constructor(private readonly crudService: ICrudService) {}\n\n    @Get()\n    async findAll(filter?: PaginationParams) {\n        return this.crudService.findAll(filter)\n    }\n\n    @Get(':id')\n    async findById(@Param('id') id: string) {\n        return this.crudService.findOne(id)\n    }\n\n    @Post()\n    async create(@Body() entity: DeepPartial, ...options: any[]) {\n        return this.crudService.create(entity)\n    }\n\n    @Put(':id')\n    async update(\n        @Param('id') id: string,\n        @Body() entity: QueryDeepPartialEntity,\n        ...options: any[]\n    ) {\n        return this.crudService.update(id, entity) // FIXME: https://github.com/typeorm/typeorm/issues/1544\n    }\n\n    @Delete(':id')\n    async delete(@Param('id') id: string, ...options: any[]) {\n        return this.crudService.delete(id)\n    }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CrudService.html":{"url":"classes/CrudService.html","title":"class - CrudService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CrudService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/base/crud/crud.service.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            ICrudService\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                saltRounds\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                count\n                            \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                delete\n                            \n                            \n                                entityNotFound\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                findOneOrFail\n                            \n                            \n                                    Async\n                                getPasswordHash\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Protected\n                        constructor(repository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/base/crud/crud.service.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        repository\n                                                  \n                                                        \n                                                                    Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            saltRounds\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/base/crud/crud.service.ts:19\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            count\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    count(filter?: FindManyOptions)\n                \n            \n\n\n            \n                \n                    Defined in src/base/crud/crud.service.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                            FindManyOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            create\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    create(entity: DeepPartial, ...options: any[])\n                \n            \n\n\n            \n                \n                    Defined in src/base/crud/crud.service.ts:61\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entity\n                                    \n                                            DeepPartial\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                            any[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            delete\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(criteria: string | number | FindConditions, ...options: any[])\n                \n            \n\n\n            \n                \n                    Defined in src/base/crud/crud.service.ts:98\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    criteria\n                                    \n                                            string | number | FindConditions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                            any[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            entityNotFound\n                        \n                        \n                    \n                \n            \n            \n                \nentityNotFound()\n                \n            \n\n\n            \n                \n                    Defined in src/base/crud/crud.service.ts:109\n                \n            \n\n\n            \n                \n                    e.g., findOneById(id).pipe(map(entity => entity.id), entityNotFound())\n\n\n                    \n                        Returns :     (stream$: any) => any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findAll\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll(filter?: FindManyOptions)\n                \n            \n\n\n            \n                \n                    Defined in src/base/crud/crud.service.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                            FindManyOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findOne\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(id: string | number | FindOneOptions | FindConditions, options?: FindOneOptions)\n                \n            \n\n\n            \n                \n                    Defined in src/base/crud/crud.service.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                            string | number | FindOneOptions | FindConditions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                            FindOneOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findOneOrFail\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findOneOrFail(id: string | number | FindOneOptions | FindConditions, options?: FindOneOptions)\n                \n            \n\n\n            \n                \n                    Defined in src/base/crud/crud.service.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                            string | number | FindOneOptions | FindConditions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                            FindOneOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getPasswordHash\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getPasswordHash(password: string)\n                \n            \n\n\n            \n                \n                    Defined in src/base/crud/crud.service.ts:73\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            update\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: string | number | FindConditions, partialEntity: QueryDeepPartialEntity, ...options: any[])\n                \n            \n\n\n            \n                \n                    Defined in src/base/crud/crud.service.ts:77\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                            string | number | FindConditions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    partialEntity\n                                    \n                                            QueryDeepPartialEntity\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                            any[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { BadRequestException, NotFoundException } from '@nestjs/common'\n\nimport * as bcrypt from 'bcryptjs'\nimport { of, throwError } from 'rxjs'\nimport { mergeMap } from 'rxjs/operators'\nimport {\n    DeepPartial,\n    FindConditions,\n    FindManyOptions,\n    FindOneOptions,\n    Repository,\n} from 'typeorm'\nimport { QueryDeepPartialEntity } from 'typeorm/query-builder/QueryPartialEntity'\n\nimport { ICrudService } from './icrud.service'\n\nexport abstract class CrudService implements ICrudService {\n    saltRounds: number\n\n    protected constructor(protected readonly repository: Repository) {\n        this.saltRounds = 12\n    }\n\n    async count(filter?: FindManyOptions) {\n        return this.repository.count(filter)\n    }\n\n    async findAll(filter?: FindManyOptions) {\n        const total = await this.repository.count(filter)\n        const items = await this.repository.find(filter)\n\n        return { items, total }\n    }\n\n    async findOneOrFail(\n        id: string | number | FindOneOptions | FindConditions,\n        options?: FindOneOptions,\n    ) {\n        try {\n            const record = await this.repository.findOneOrFail(id as any, options)\n\n            return { success: true, record }\n        } catch (error) {\n            return { success: false, error } // eslint-disable-line @typescript-eslint/no-unsafe-assignment\n        }\n    }\n\n    async findOne(\n        id: string | number | FindOneOptions | FindConditions,\n        options?: FindOneOptions,\n    ) {\n        const record = await this.repository.findOne(id as any, options)\n\n        if (!record)\n            throw new NotFoundException(`The requested record was not found`)\n\n        return record\n    }\n\n    async create(entity: DeepPartial, ...options: any[]) {\n        const obj = this.repository.create(entity)\n\n        // READMEWHY: https://github.com/Microsoft/TypeScript/issues/21592\n        try {\n            return await this.repository.save(obj as any) // eslint-disable-line @typescript-eslint/no-unsafe-return\n        } catch (err /*: WriteError */) {\n            throw new BadRequestException(err)\n        }\n    }\n\n    // eslint-disable-next-line @typescript-eslint/require-await\n    async getPasswordHash(password: string) {\n        return bcrypt.hash(password, this.saltRounds)\n    }\n\n    async update(\n        id: string | number | FindConditions,\n        partialEntity: QueryDeepPartialEntity,\n        ...options: any[]\n    ) {\n        try {\n            // method getPasswordHash is copied from AuthService\n            // try if can import somehow the service and use its method\n\n            // @ts-ignore\n            if (partialEntity.hash) {\n                // @ts-ignore\n                partialEntity.hash = await this.getPasswordHash(partialEntity.hash) // eslint-disable-line @typescript-eslint/no-unsafe-assignment,no-param-reassign\n            }\n\n            return await this.repository.update(id, partialEntity)\n        } catch (err /*: WriteError */) {\n            throw new BadRequestException(err)\n        }\n    }\n\n    async delete(criteria: string | number | FindConditions, ...options: any[]) {\n        try {\n            return await this.repository.delete(criteria)\n        } catch (err) {\n            throw new NotFoundException(`The record was not found`, err)\n        }\n    }\n\n    /**\n     * e.g., findOneById(id).pipe(map(entity => entity.id), entityNotFound())\n     */\n    entityNotFound() {\n        return (stream$) =>\n            stream$.pipe(\n                mergeMap((signal) => {\n                    if (!signal) {\n                        return throwError(\n                            new NotFoundException(\n                                `The requested record was not found`,\n                            ),\n                        )\n                    }\n\n                    return of(signal)\n                }),\n            )\n    }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CustomQueryBuilder.html":{"url":"classes/CustomQueryBuilder.html","title":"class - CustomQueryBuilder","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CustomQueryBuilder\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/database/models/helpers.ts\n        \n\n\n            \n                Extends\n            \n            \n                    QueryBuilder\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                ArrayQueryBuilderType\n                            \n                            \n                                NumberQueryBuilderType\n                            \n                            \n                                PageQueryBuilderType\n                            \n                            \n                                SingleQueryBuilderType\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                chunk\n                            \n                            \n                                    Async\n                                exists\n                            \n                            \n                                    Async\n                                onlyCount\n                            \n                            \n                                    Async\n                                paginate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ArrayQueryBuilderType\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         CustomQueryBuilder\n\n                        \n                    \n                        \n                            \n                                    Defined in src/database/models/helpers.ts:37\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            NumberQueryBuilderType\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         CustomQueryBuilder\n\n                        \n                    \n                        \n                            \n                                    Defined in src/database/models/helpers.ts:41\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            PageQueryBuilderType\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         CustomQueryBuilder>\n\n                        \n                    \n                        \n                            \n                                    Defined in src/database/models/helpers.ts:43\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            SingleQueryBuilderType\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         CustomQueryBuilder\n\n                        \n                    \n                        \n                            \n                                    Defined in src/database/models/helpers.ts:39\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            chunk\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    chunk(cb: Function, size: number)\n                \n            \n\n\n            \n                \n                    Defined in src/database/models/helpers.ts:71\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    cb\n                                    \n                                                Function\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    size\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            exists\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    exists()\n                \n            \n\n\n            \n                \n                    Defined in src/database/models/helpers.ts:66\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     {}\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            onlyCount\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    onlyCount()\n                \n            \n\n\n            \n                \n                    Defined in src/database/models/helpers.ts:61\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     {}\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            paginate\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    paginate(page: number, perPage: number)\n                \n            \n\n\n            \n                \n                    Defined in src/database/models/helpers.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    page\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    perPage\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { cloneDeep } from 'lodash'\nimport { Model, Page, QueryBuilder } from 'objection'\n\n/**\n * Check if value is of type object.\n *\n * @param value\n */\nexport function isObject(value: any): boolean {\n    return typeof value === 'object' && value !== null\n}\n\n/**\n * Check if value is empty\n *\n * @param value\n */\nexport function isEmpty(value: any): boolean {\n    if (Array.isArray(value) && value.length  extends QueryBuilder {\n    ArrayQueryBuilderType!: CustomQueryBuilder\n\n    SingleQueryBuilderType!: CustomQueryBuilder\n\n    NumberQueryBuilderType!: CustomQueryBuilder\n\n    PageQueryBuilderType!: CustomQueryBuilder>\n\n    async paginate(page: number, perPage: number) {\n        page = +page ? +page : 1 // eslint-disable-line no-param-reassign\n        perPage = +perPage ? +perPage : 15 // eslint-disable-line no-param-reassign\n\n        const result = await this.page(page - 1, perPage)\n        return {\n            pagination: {\n                currentPage: page,\n                totalPages: Math.ceil(result.total / perPage),\n                perPage,\n                total: result.total,\n            },\n            data: result.results,\n        }\n    }\n\n    async onlyCount() {\n        const result = await this.count({ c: '*' })\n        return result[0].c // eslint-disable-line @typescript-eslint/no-unsafe-member-access,@typescript-eslint/no-unsafe-return\n    }\n\n    async exists() {\n        return !!(await this.onlyCount())\n    }\n\n    // eslint-disable-next-line @typescript-eslint/ban-types\n    async chunk(cb: Function, size: number): Promise {\n        let offset = 0\n        let hasMore = true\n\n        while (!offset || hasMore) {\n            const query = cloneDeep(this) // eslint-disable-line @typescript-eslint/no-unsafe-call,@typescript-eslint/no-unsafe-assignment\n            const records = await query.offset(offset).limit(size) // eslint-disable-line @typescript-eslint/no-unsafe-call,no-await-in-loop,@typescript-eslint/no-unsafe-member-access,@typescript-eslint/no-unsafe-assignment\n\n            hasMore = isNotEmpty(records)\n\n            if (!hasMore) return\n\n            await cb(records) // eslint-disable-line no-await-in-loop\n\n            offset += size\n        }\n    }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DBHelper.html":{"url":"injectables/DBHelper.html","title":"injectable - DBHelper","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  DBHelper\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/base/DBHelper.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                findBy\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                find\n                            \n                            \n                                    Async\n                                sync\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(repository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/base/DBHelper.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        repository\n                                                  \n                                                        \n                                                                    Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            find\n                        \n                        \n                    \n                \n            \n            \n                \nfind(find: string)\n                \n            \n\n\n            \n                \n                    Defined in src/base/DBHelper.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    find\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     this\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            sync\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    sync(relation: string, new_values: any[])\n                \n            \n\n\n            \n                \n                    Defined in src/base/DBHelper.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    relation\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    new_values\n                                    \n                                            any[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            findBy\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/base/DBHelper.ts:9\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common'\n\nimport _ from 'lodash'\nimport { Repository } from 'typeorm'\n\n@Injectable()\nexport class DBHelper {\n    findBy: string\n\n    constructor(private repository: Repository) {}\n\n    find(find: string) {\n        this.findBy = find\n        return this\n    }\n\n    async sync(relation: string, new_values: any[]) {\n        const row: T = await this.repository.findOne(this.findBy, {\n            relations: [relation],\n        })\n        const values: any[] = row[relation]\n\n        const toRemove = _.difference(values, new_values)\n        const toAdd = _.difference(new_values, values)\n\n        row[relation] = values\n            .concat(toAdd)\n            .filter((value) => toRemove.indexOf(value) === -1)\n\n        return this.repository.save(row)\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/DatabaseModule.html":{"url":"modules/DatabaseModule.html","title":"module - DatabaseModule","body":"\n                   \n\n\n\n\n    Modules\n    DatabaseModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/database/database.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        /* eslint-disable @typescript-eslint/no-unused-vars */\nimport { Global, Module } from '@nestjs/common'\n\nimport * as Knex from 'knex'\nimport { knexSnakeCaseMappers, Model } from 'objection'\n\nimport { User } from '../users/user.model'\nimport { Tag } from '../tags/tag.model'\n\nconst models = [Tag, User]\n\nconst modelProviders = models.map((model) => {\n    return {\n        provide: model.name,\n        useValue: model,\n    }\n})\n\nconst providers = [\n    ...modelProviders,\n    {\n        provide: 'KnexConnection',\n        // eslint-disable-next-line @typescript-eslint/require-await\n        useFactory: async () => {\n            const knex = Knex({\n                client: 'sqlite3',\n                useNullAsDefault: true,\n                connection: {\n                    filename: './knex.sqlite',\n                },\n                debug: true,\n                // ...knexSnakeCaseMappers(),\n            })\n\n            Model.knex(knex)\n            return knex\n        },\n    },\n]\n\n@Global()\n@Module({\n    providers: [...providers],\n    exports: [...providers],\n})\nexport class DatabaseModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ExcludeNullUndefinedInterceptor.html":{"url":"injectables/ExcludeNullUndefinedInterceptor.html","title":"injectable - ExcludeNullUndefinedInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ExcludeNullUndefinedInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/infra/interceptors/null-undefined-override.ts\n        \n\n            \n                Description\n            \n            \n                Interceptors to transform each occurrence of a null value to an empty string ''\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            intercept\n                        \n                        \n                    \n                \n            \n            \n                \nintercept(context: ExecutionContext, next: CallHandler)\n                \n            \n\n\n            \n                \n                    Defined in src/infra/interceptors/null-undefined-override.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                            CallHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n    Injectable,\n    NestInterceptor,\n    ExecutionContext,\n    CallHandler,\n} from '@nestjs/common'\n\nimport { Observable } from 'rxjs'\nimport { map } from 'rxjs/operators'\n\n/**\n * Interceptors to transform each occurrence of a null value to an empty string ''\n */\n@Injectable()\nexport class ExcludeNullUndefinedInterceptor implements NestInterceptor {\n    intercept(context: ExecutionContext, next: CallHandler): Observable {\n        return next.handle().pipe(\n            map(\n                // eslint-disable-next-line @typescript-eslint/no-unsafe-return\n                (value) => value ?? '',\n            ),\n        )\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Follower.html":{"url":"interfaces/Follower.html","title":"interface - Follower","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Follower\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/domain.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        areYouFollowing\n                                \n                                \n                                        profileImage\n                                \n                                \n                                        showRemoveOption\n                                \n                                \n                                        userId\n                                \n                                \n                                        userName\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        areYouFollowing\n                                    \n                                \n                                \n                                    \n                                        areYouFollowing:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        profileImage\n                                    \n                                \n                                \n                                    \n                                        profileImage:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        showRemoveOption\n                                    \n                                \n                                \n                                    \n                                        showRemoveOption:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        userId\n                                    \n                                \n                                \n                                    \n                                        userId:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        userName\n                                    \n                                \n                                \n                                    \n                                        userName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { HttpStatus } from '@nestjs/common'\n\nexport type Result =\n    | GetAppLaunchData\n    | GetUserProfile\n    | GetUserPosts\n    | GetComments\n    | GetRescueList\n    | GetFollowers\n    | GetFollowing\n\nexport type APIError = Error | string | null\n\nexport interface APIResponse {\n    data: T\n    error: APIError\n    message: string | string[]\n    statusCode: HttpStatus\n\n    count?: number\n    page?: number\n    pageCount?: number\n    total?: number\n}\n\nexport interface GetAppLaunchData {\n    link: 'api:/'\n    response: APIResponse\n}\n\nexport interface GetUserProfile {\n    link: 'api:v1/user/getUserProfile?userId=25'\n    response: APIResponse\n}\n\nexport interface GetUserPosts {\n    link: 'api:v1/user/getUserPosts?pageNo=0&pageSize=25'\n    response: APIResponse\n}\n\nexport interface GetRescueList {\n    link: 'api:v1/rescue/getRescueList?pageNo=0&pageSize=10&status=pending|inProgress|completed|nearest'\n    response: APIResponse\n}\n\nexport interface GetComments {\n    link: 'api:v1/rescue/getComments?pageNo=0&pageSize=10&postId=1230'\n    response: APIResponse\n}\n\nexport interface GetFollowers {\n    link: 'api:v1/rescue/getUserFollowers?userId=1230'\n    response: APIResponse\n}\n\nexport interface GetFollowing {\n    link: 'api:v1/rescue/getUserFollowing?userId=1230'\n    response: APIResponse\n}\n\nexport interface AppLaunchAction {\n    actionId: number\n    action: string\n    isActive: boolean\n    subject?: string\n}\n\nexport interface User {\n    usesId: number\n\n    coverImage: string\n    following: boolean\n    gender: string\n    isOwnProfile: number\n    isRescuer: boolean\n    latitude: number\n    longitude: number\n    numberOfFollowers: number\n    numberOfFollowing: number\n    numberOfPosts: number\n    numberOfRescuesCompleted: number\n    numberOfRescuesCreated: number\n    numberOfRescuesInProgress: number\n    profileImage: string\n    rescuer: boolean\n    userAddress: string\n    userContacts: string\n    userEmail: string\n    userName: string\n    badge: {\n        badgeId: number\n        badgeName: string\n        badgeDescription: string\n        recuesCompletionNeeded: number\n    }\n    setting: {\n        showMyContacts: boolean\n        getNotifications: boolean\n    }\n}\n\nexport interface PostType {\n    postTypeId: number\n    postType: string\n}\n\nexport interface PostedByUser {\n    usesId: number\n    badgeName: string\n    following: boolean\n    profileImage: string\n    rescuer: boolean\n    userName: string\n}\n\nexport interface UserPost {\n    postId: number\n    commentsCount: number\n    isUserReactedToPost: boolean\n    ownPage: boolean\n    postBy: PostedByUser\n    postImage: string\n    postTime: string\n    postType: PostType\n    postVideo: string\n    reactionsCount: number\n    timeAgo: string\n\n    adCorporateLogoUrl: string | null\n    corporateDescription: string | null\n    corporateName: string | null\n}\n\nexport interface UserPosts {\n    isRecent: boolean\n    feed: UserPost[]\n}\n\nexport interface Rescues {\n    rescueId: number\n    animalImageUrl: string\n    distance: number\n    distanceAway: string\n    emergencyType: string\n    postedBy: string\n    postedMinAgo: string\n    rescueDate: Date\n    rescuedPetName: string\n    rescueLocality: string\n    rescuers: {\n        contact: number\n        name: string\n        profileId: number\n        profileImageUrl: string\n        rescues: boolean\n        showMyNumber: boolean\n    }\n    rescueStatus: string\n    viewsCont: number\n}\n\nexport interface RescueLists {\n    rescues: Rescues[]\n}\n\nexport interface Comment {\n    commentId: number\n    comment: string\n    commentedUseName: string\n    commentedUserId: number\n    timeAgo: string\n}\n\nexport interface Comments {\n    comments: Comment[]\n}\n\nexport interface Follower {\n    userId: number\n    userName: string\n    profileImage: string\n    areYouFollowing: boolean\n    showRemoveOption: boolean\n}\n\nexport interface Following extends Follower {}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Following.html":{"url":"interfaces/Following.html","title":"interface - Following","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Following\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/domain.ts\n        \n\n\n            \n                Extends\n            \n            \n                        Follower\n            \n\n\n\n\n    \n\n\n    \n        import { HttpStatus } from '@nestjs/common'\n\nexport type Result =\n    | GetAppLaunchData\n    | GetUserProfile\n    | GetUserPosts\n    | GetComments\n    | GetRescueList\n    | GetFollowers\n    | GetFollowing\n\nexport type APIError = Error | string | null\n\nexport interface APIResponse {\n    data: T\n    error: APIError\n    message: string | string[]\n    statusCode: HttpStatus\n\n    count?: number\n    page?: number\n    pageCount?: number\n    total?: number\n}\n\nexport interface GetAppLaunchData {\n    link: 'api:/'\n    response: APIResponse\n}\n\nexport interface GetUserProfile {\n    link: 'api:v1/user/getUserProfile?userId=25'\n    response: APIResponse\n}\n\nexport interface GetUserPosts {\n    link: 'api:v1/user/getUserPosts?pageNo=0&pageSize=25'\n    response: APIResponse\n}\n\nexport interface GetRescueList {\n    link: 'api:v1/rescue/getRescueList?pageNo=0&pageSize=10&status=pending|inProgress|completed|nearest'\n    response: APIResponse\n}\n\nexport interface GetComments {\n    link: 'api:v1/rescue/getComments?pageNo=0&pageSize=10&postId=1230'\n    response: APIResponse\n}\n\nexport interface GetFollowers {\n    link: 'api:v1/rescue/getUserFollowers?userId=1230'\n    response: APIResponse\n}\n\nexport interface GetFollowing {\n    link: 'api:v1/rescue/getUserFollowing?userId=1230'\n    response: APIResponse\n}\n\nexport interface AppLaunchAction {\n    actionId: number\n    action: string\n    isActive: boolean\n    subject?: string\n}\n\nexport interface User {\n    usesId: number\n\n    coverImage: string\n    following: boolean\n    gender: string\n    isOwnProfile: number\n    isRescuer: boolean\n    latitude: number\n    longitude: number\n    numberOfFollowers: number\n    numberOfFollowing: number\n    numberOfPosts: number\n    numberOfRescuesCompleted: number\n    numberOfRescuesCreated: number\n    numberOfRescuesInProgress: number\n    profileImage: string\n    rescuer: boolean\n    userAddress: string\n    userContacts: string\n    userEmail: string\n    userName: string\n    badge: {\n        badgeId: number\n        badgeName: string\n        badgeDescription: string\n        recuesCompletionNeeded: number\n    }\n    setting: {\n        showMyContacts: boolean\n        getNotifications: boolean\n    }\n}\n\nexport interface PostType {\n    postTypeId: number\n    postType: string\n}\n\nexport interface PostedByUser {\n    usesId: number\n    badgeName: string\n    following: boolean\n    profileImage: string\n    rescuer: boolean\n    userName: string\n}\n\nexport interface UserPost {\n    postId: number\n    commentsCount: number\n    isUserReactedToPost: boolean\n    ownPage: boolean\n    postBy: PostedByUser\n    postImage: string\n    postTime: string\n    postType: PostType\n    postVideo: string\n    reactionsCount: number\n    timeAgo: string\n\n    adCorporateLogoUrl: string | null\n    corporateDescription: string | null\n    corporateName: string | null\n}\n\nexport interface UserPosts {\n    isRecent: boolean\n    feed: UserPost[]\n}\n\nexport interface Rescues {\n    rescueId: number\n    animalImageUrl: string\n    distance: number\n    distanceAway: string\n    emergencyType: string\n    postedBy: string\n    postedMinAgo: string\n    rescueDate: Date\n    rescuedPetName: string\n    rescueLocality: string\n    rescuers: {\n        contact: number\n        name: string\n        profileId: number\n        profileImageUrl: string\n        rescues: boolean\n        showMyNumber: boolean\n    }\n    rescueStatus: string\n    viewsCont: number\n}\n\nexport interface RescueLists {\n    rescues: Rescues[]\n}\n\nexport interface Comment {\n    commentId: number\n    comment: string\n    commentedUseName: string\n    commentedUserId: number\n    timeAgo: string\n}\n\nexport interface Comments {\n    comments: Comment[]\n}\n\nexport interface Follower {\n    userId: number\n    userName: string\n    profileImage: string\n    areYouFollowing: boolean\n    showRemoveOption: boolean\n}\n\nexport interface Following extends Follower {}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/GetAppLaunchData.html":{"url":"interfaces/GetAppLaunchData.html","title":"interface - GetAppLaunchData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  GetAppLaunchData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/domain.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        link\n                                \n                                \n                                        response\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        link\n                                    \n                                \n                                \n                                    \n                                        link:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        response\n                                    \n                                \n                                \n                                    \n                                        response:     APIResponse\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     APIResponse\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { HttpStatus } from '@nestjs/common'\n\nexport type Result =\n    | GetAppLaunchData\n    | GetUserProfile\n    | GetUserPosts\n    | GetComments\n    | GetRescueList\n    | GetFollowers\n    | GetFollowing\n\nexport type APIError = Error | string | null\n\nexport interface APIResponse {\n    data: T\n    error: APIError\n    message: string | string[]\n    statusCode: HttpStatus\n\n    count?: number\n    page?: number\n    pageCount?: number\n    total?: number\n}\n\nexport interface GetAppLaunchData {\n    link: 'api:/'\n    response: APIResponse\n}\n\nexport interface GetUserProfile {\n    link: 'api:v1/user/getUserProfile?userId=25'\n    response: APIResponse\n}\n\nexport interface GetUserPosts {\n    link: 'api:v1/user/getUserPosts?pageNo=0&pageSize=25'\n    response: APIResponse\n}\n\nexport interface GetRescueList {\n    link: 'api:v1/rescue/getRescueList?pageNo=0&pageSize=10&status=pending|inProgress|completed|nearest'\n    response: APIResponse\n}\n\nexport interface GetComments {\n    link: 'api:v1/rescue/getComments?pageNo=0&pageSize=10&postId=1230'\n    response: APIResponse\n}\n\nexport interface GetFollowers {\n    link: 'api:v1/rescue/getUserFollowers?userId=1230'\n    response: APIResponse\n}\n\nexport interface GetFollowing {\n    link: 'api:v1/rescue/getUserFollowing?userId=1230'\n    response: APIResponse\n}\n\nexport interface AppLaunchAction {\n    actionId: number\n    action: string\n    isActive: boolean\n    subject?: string\n}\n\nexport interface User {\n    usesId: number\n\n    coverImage: string\n    following: boolean\n    gender: string\n    isOwnProfile: number\n    isRescuer: boolean\n    latitude: number\n    longitude: number\n    numberOfFollowers: number\n    numberOfFollowing: number\n    numberOfPosts: number\n    numberOfRescuesCompleted: number\n    numberOfRescuesCreated: number\n    numberOfRescuesInProgress: number\n    profileImage: string\n    rescuer: boolean\n    userAddress: string\n    userContacts: string\n    userEmail: string\n    userName: string\n    badge: {\n        badgeId: number\n        badgeName: string\n        badgeDescription: string\n        recuesCompletionNeeded: number\n    }\n    setting: {\n        showMyContacts: boolean\n        getNotifications: boolean\n    }\n}\n\nexport interface PostType {\n    postTypeId: number\n    postType: string\n}\n\nexport interface PostedByUser {\n    usesId: number\n    badgeName: string\n    following: boolean\n    profileImage: string\n    rescuer: boolean\n    userName: string\n}\n\nexport interface UserPost {\n    postId: number\n    commentsCount: number\n    isUserReactedToPost: boolean\n    ownPage: boolean\n    postBy: PostedByUser\n    postImage: string\n    postTime: string\n    postType: PostType\n    postVideo: string\n    reactionsCount: number\n    timeAgo: string\n\n    adCorporateLogoUrl: string | null\n    corporateDescription: string | null\n    corporateName: string | null\n}\n\nexport interface UserPosts {\n    isRecent: boolean\n    feed: UserPost[]\n}\n\nexport interface Rescues {\n    rescueId: number\n    animalImageUrl: string\n    distance: number\n    distanceAway: string\n    emergencyType: string\n    postedBy: string\n    postedMinAgo: string\n    rescueDate: Date\n    rescuedPetName: string\n    rescueLocality: string\n    rescuers: {\n        contact: number\n        name: string\n        profileId: number\n        profileImageUrl: string\n        rescues: boolean\n        showMyNumber: boolean\n    }\n    rescueStatus: string\n    viewsCont: number\n}\n\nexport interface RescueLists {\n    rescues: Rescues[]\n}\n\nexport interface Comment {\n    commentId: number\n    comment: string\n    commentedUseName: string\n    commentedUserId: number\n    timeAgo: string\n}\n\nexport interface Comments {\n    comments: Comment[]\n}\n\nexport interface Follower {\n    userId: number\n    userName: string\n    profileImage: string\n    areYouFollowing: boolean\n    showRemoveOption: boolean\n}\n\nexport interface Following extends Follower {}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/GetComments.html":{"url":"interfaces/GetComments.html","title":"interface - GetComments","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  GetComments\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/domain.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        link\n                                \n                                \n                                        response\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        link\n                                    \n                                \n                                \n                                    \n                                        link:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        response\n                                    \n                                \n                                \n                                    \n                                        response:     APIResponse\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     APIResponse\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { HttpStatus } from '@nestjs/common'\n\nexport type Result =\n    | GetAppLaunchData\n    | GetUserProfile\n    | GetUserPosts\n    | GetComments\n    | GetRescueList\n    | GetFollowers\n    | GetFollowing\n\nexport type APIError = Error | string | null\n\nexport interface APIResponse {\n    data: T\n    error: APIError\n    message: string | string[]\n    statusCode: HttpStatus\n\n    count?: number\n    page?: number\n    pageCount?: number\n    total?: number\n}\n\nexport interface GetAppLaunchData {\n    link: 'api:/'\n    response: APIResponse\n}\n\nexport interface GetUserProfile {\n    link: 'api:v1/user/getUserProfile?userId=25'\n    response: APIResponse\n}\n\nexport interface GetUserPosts {\n    link: 'api:v1/user/getUserPosts?pageNo=0&pageSize=25'\n    response: APIResponse\n}\n\nexport interface GetRescueList {\n    link: 'api:v1/rescue/getRescueList?pageNo=0&pageSize=10&status=pending|inProgress|completed|nearest'\n    response: APIResponse\n}\n\nexport interface GetComments {\n    link: 'api:v1/rescue/getComments?pageNo=0&pageSize=10&postId=1230'\n    response: APIResponse\n}\n\nexport interface GetFollowers {\n    link: 'api:v1/rescue/getUserFollowers?userId=1230'\n    response: APIResponse\n}\n\nexport interface GetFollowing {\n    link: 'api:v1/rescue/getUserFollowing?userId=1230'\n    response: APIResponse\n}\n\nexport interface AppLaunchAction {\n    actionId: number\n    action: string\n    isActive: boolean\n    subject?: string\n}\n\nexport interface User {\n    usesId: number\n\n    coverImage: string\n    following: boolean\n    gender: string\n    isOwnProfile: number\n    isRescuer: boolean\n    latitude: number\n    longitude: number\n    numberOfFollowers: number\n    numberOfFollowing: number\n    numberOfPosts: number\n    numberOfRescuesCompleted: number\n    numberOfRescuesCreated: number\n    numberOfRescuesInProgress: number\n    profileImage: string\n    rescuer: boolean\n    userAddress: string\n    userContacts: string\n    userEmail: string\n    userName: string\n    badge: {\n        badgeId: number\n        badgeName: string\n        badgeDescription: string\n        recuesCompletionNeeded: number\n    }\n    setting: {\n        showMyContacts: boolean\n        getNotifications: boolean\n    }\n}\n\nexport interface PostType {\n    postTypeId: number\n    postType: string\n}\n\nexport interface PostedByUser {\n    usesId: number\n    badgeName: string\n    following: boolean\n    profileImage: string\n    rescuer: boolean\n    userName: string\n}\n\nexport interface UserPost {\n    postId: number\n    commentsCount: number\n    isUserReactedToPost: boolean\n    ownPage: boolean\n    postBy: PostedByUser\n    postImage: string\n    postTime: string\n    postType: PostType\n    postVideo: string\n    reactionsCount: number\n    timeAgo: string\n\n    adCorporateLogoUrl: string | null\n    corporateDescription: string | null\n    corporateName: string | null\n}\n\nexport interface UserPosts {\n    isRecent: boolean\n    feed: UserPost[]\n}\n\nexport interface Rescues {\n    rescueId: number\n    animalImageUrl: string\n    distance: number\n    distanceAway: string\n    emergencyType: string\n    postedBy: string\n    postedMinAgo: string\n    rescueDate: Date\n    rescuedPetName: string\n    rescueLocality: string\n    rescuers: {\n        contact: number\n        name: string\n        profileId: number\n        profileImageUrl: string\n        rescues: boolean\n        showMyNumber: boolean\n    }\n    rescueStatus: string\n    viewsCont: number\n}\n\nexport interface RescueLists {\n    rescues: Rescues[]\n}\n\nexport interface Comment {\n    commentId: number\n    comment: string\n    commentedUseName: string\n    commentedUserId: number\n    timeAgo: string\n}\n\nexport interface Comments {\n    comments: Comment[]\n}\n\nexport interface Follower {\n    userId: number\n    userName: string\n    profileImage: string\n    areYouFollowing: boolean\n    showRemoveOption: boolean\n}\n\nexport interface Following extends Follower {}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/GetFollowers.html":{"url":"interfaces/GetFollowers.html","title":"interface - GetFollowers","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  GetFollowers\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/domain.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        link\n                                \n                                \n                                        response\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        link\n                                    \n                                \n                                \n                                    \n                                        link:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        response\n                                    \n                                \n                                \n                                    \n                                        response:     APIResponse\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     APIResponse\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { HttpStatus } from '@nestjs/common'\n\nexport type Result =\n    | GetAppLaunchData\n    | GetUserProfile\n    | GetUserPosts\n    | GetComments\n    | GetRescueList\n    | GetFollowers\n    | GetFollowing\n\nexport type APIError = Error | string | null\n\nexport interface APIResponse {\n    data: T\n    error: APIError\n    message: string | string[]\n    statusCode: HttpStatus\n\n    count?: number\n    page?: number\n    pageCount?: number\n    total?: number\n}\n\nexport interface GetAppLaunchData {\n    link: 'api:/'\n    response: APIResponse\n}\n\nexport interface GetUserProfile {\n    link: 'api:v1/user/getUserProfile?userId=25'\n    response: APIResponse\n}\n\nexport interface GetUserPosts {\n    link: 'api:v1/user/getUserPosts?pageNo=0&pageSize=25'\n    response: APIResponse\n}\n\nexport interface GetRescueList {\n    link: 'api:v1/rescue/getRescueList?pageNo=0&pageSize=10&status=pending|inProgress|completed|nearest'\n    response: APIResponse\n}\n\nexport interface GetComments {\n    link: 'api:v1/rescue/getComments?pageNo=0&pageSize=10&postId=1230'\n    response: APIResponse\n}\n\nexport interface GetFollowers {\n    link: 'api:v1/rescue/getUserFollowers?userId=1230'\n    response: APIResponse\n}\n\nexport interface GetFollowing {\n    link: 'api:v1/rescue/getUserFollowing?userId=1230'\n    response: APIResponse\n}\n\nexport interface AppLaunchAction {\n    actionId: number\n    action: string\n    isActive: boolean\n    subject?: string\n}\n\nexport interface User {\n    usesId: number\n\n    coverImage: string\n    following: boolean\n    gender: string\n    isOwnProfile: number\n    isRescuer: boolean\n    latitude: number\n    longitude: number\n    numberOfFollowers: number\n    numberOfFollowing: number\n    numberOfPosts: number\n    numberOfRescuesCompleted: number\n    numberOfRescuesCreated: number\n    numberOfRescuesInProgress: number\n    profileImage: string\n    rescuer: boolean\n    userAddress: string\n    userContacts: string\n    userEmail: string\n    userName: string\n    badge: {\n        badgeId: number\n        badgeName: string\n        badgeDescription: string\n        recuesCompletionNeeded: number\n    }\n    setting: {\n        showMyContacts: boolean\n        getNotifications: boolean\n    }\n}\n\nexport interface PostType {\n    postTypeId: number\n    postType: string\n}\n\nexport interface PostedByUser {\n    usesId: number\n    badgeName: string\n    following: boolean\n    profileImage: string\n    rescuer: boolean\n    userName: string\n}\n\nexport interface UserPost {\n    postId: number\n    commentsCount: number\n    isUserReactedToPost: boolean\n    ownPage: boolean\n    postBy: PostedByUser\n    postImage: string\n    postTime: string\n    postType: PostType\n    postVideo: string\n    reactionsCount: number\n    timeAgo: string\n\n    adCorporateLogoUrl: string | null\n    corporateDescription: string | null\n    corporateName: string | null\n}\n\nexport interface UserPosts {\n    isRecent: boolean\n    feed: UserPost[]\n}\n\nexport interface Rescues {\n    rescueId: number\n    animalImageUrl: string\n    distance: number\n    distanceAway: string\n    emergencyType: string\n    postedBy: string\n    postedMinAgo: string\n    rescueDate: Date\n    rescuedPetName: string\n    rescueLocality: string\n    rescuers: {\n        contact: number\n        name: string\n        profileId: number\n        profileImageUrl: string\n        rescues: boolean\n        showMyNumber: boolean\n    }\n    rescueStatus: string\n    viewsCont: number\n}\n\nexport interface RescueLists {\n    rescues: Rescues[]\n}\n\nexport interface Comment {\n    commentId: number\n    comment: string\n    commentedUseName: string\n    commentedUserId: number\n    timeAgo: string\n}\n\nexport interface Comments {\n    comments: Comment[]\n}\n\nexport interface Follower {\n    userId: number\n    userName: string\n    profileImage: string\n    areYouFollowing: boolean\n    showRemoveOption: boolean\n}\n\nexport interface Following extends Follower {}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/GetFollowing.html":{"url":"interfaces/GetFollowing.html","title":"interface - GetFollowing","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  GetFollowing\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/domain.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        link\n                                \n                                \n                                        response\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        link\n                                    \n                                \n                                \n                                    \n                                        link:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        response\n                                    \n                                \n                                \n                                    \n                                        response:     APIResponse\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     APIResponse\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { HttpStatus } from '@nestjs/common'\n\nexport type Result =\n    | GetAppLaunchData\n    | GetUserProfile\n    | GetUserPosts\n    | GetComments\n    | GetRescueList\n    | GetFollowers\n    | GetFollowing\n\nexport type APIError = Error | string | null\n\nexport interface APIResponse {\n    data: T\n    error: APIError\n    message: string | string[]\n    statusCode: HttpStatus\n\n    count?: number\n    page?: number\n    pageCount?: number\n    total?: number\n}\n\nexport interface GetAppLaunchData {\n    link: 'api:/'\n    response: APIResponse\n}\n\nexport interface GetUserProfile {\n    link: 'api:v1/user/getUserProfile?userId=25'\n    response: APIResponse\n}\n\nexport interface GetUserPosts {\n    link: 'api:v1/user/getUserPosts?pageNo=0&pageSize=25'\n    response: APIResponse\n}\n\nexport interface GetRescueList {\n    link: 'api:v1/rescue/getRescueList?pageNo=0&pageSize=10&status=pending|inProgress|completed|nearest'\n    response: APIResponse\n}\n\nexport interface GetComments {\n    link: 'api:v1/rescue/getComments?pageNo=0&pageSize=10&postId=1230'\n    response: APIResponse\n}\n\nexport interface GetFollowers {\n    link: 'api:v1/rescue/getUserFollowers?userId=1230'\n    response: APIResponse\n}\n\nexport interface GetFollowing {\n    link: 'api:v1/rescue/getUserFollowing?userId=1230'\n    response: APIResponse\n}\n\nexport interface AppLaunchAction {\n    actionId: number\n    action: string\n    isActive: boolean\n    subject?: string\n}\n\nexport interface User {\n    usesId: number\n\n    coverImage: string\n    following: boolean\n    gender: string\n    isOwnProfile: number\n    isRescuer: boolean\n    latitude: number\n    longitude: number\n    numberOfFollowers: number\n    numberOfFollowing: number\n    numberOfPosts: number\n    numberOfRescuesCompleted: number\n    numberOfRescuesCreated: number\n    numberOfRescuesInProgress: number\n    profileImage: string\n    rescuer: boolean\n    userAddress: string\n    userContacts: string\n    userEmail: string\n    userName: string\n    badge: {\n        badgeId: number\n        badgeName: string\n        badgeDescription: string\n        recuesCompletionNeeded: number\n    }\n    setting: {\n        showMyContacts: boolean\n        getNotifications: boolean\n    }\n}\n\nexport interface PostType {\n    postTypeId: number\n    postType: string\n}\n\nexport interface PostedByUser {\n    usesId: number\n    badgeName: string\n    following: boolean\n    profileImage: string\n    rescuer: boolean\n    userName: string\n}\n\nexport interface UserPost {\n    postId: number\n    commentsCount: number\n    isUserReactedToPost: boolean\n    ownPage: boolean\n    postBy: PostedByUser\n    postImage: string\n    postTime: string\n    postType: PostType\n    postVideo: string\n    reactionsCount: number\n    timeAgo: string\n\n    adCorporateLogoUrl: string | null\n    corporateDescription: string | null\n    corporateName: string | null\n}\n\nexport interface UserPosts {\n    isRecent: boolean\n    feed: UserPost[]\n}\n\nexport interface Rescues {\n    rescueId: number\n    animalImageUrl: string\n    distance: number\n    distanceAway: string\n    emergencyType: string\n    postedBy: string\n    postedMinAgo: string\n    rescueDate: Date\n    rescuedPetName: string\n    rescueLocality: string\n    rescuers: {\n        contact: number\n        name: string\n        profileId: number\n        profileImageUrl: string\n        rescues: boolean\n        showMyNumber: boolean\n    }\n    rescueStatus: string\n    viewsCont: number\n}\n\nexport interface RescueLists {\n    rescues: Rescues[]\n}\n\nexport interface Comment {\n    commentId: number\n    comment: string\n    commentedUseName: string\n    commentedUserId: number\n    timeAgo: string\n}\n\nexport interface Comments {\n    comments: Comment[]\n}\n\nexport interface Follower {\n    userId: number\n    userName: string\n    profileImage: string\n    areYouFollowing: boolean\n    showRemoveOption: boolean\n}\n\nexport interface Following extends Follower {}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetManyDto.html":{"url":"classes/GetManyDto.html","title":"class - GetManyDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetManyDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/base/datum/get-many-dto.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            GetManyDefaultResponse\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                count\n                            \n                            \n                                data\n                            \n                            \n                                page\n                            \n                            \n                                pageCount\n                            \n                            \n                                total\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            count\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/base/datum/get-many-dto.ts:4\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            data\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     T[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/base/datum/get-many-dto.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            page\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/base/datum/get-many-dto.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            pageCount\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/base/datum/get-many-dto.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            total\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/base/datum/get-many-dto.ts:12\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { GetManyDefaultResponse } from '@nestjsx/crud/lib/interfaces/get-many-default-response.interface'\n\nexport class GetManyDto implements GetManyDefaultResponse {\n    count: number\n\n    data: T[]\n\n    page: number\n\n    pageCount: number\n\n    total: number\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/GetRescueList.html":{"url":"interfaces/GetRescueList.html","title":"interface - GetRescueList","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  GetRescueList\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/domain.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        link\n                                \n                                \n                                        response\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        link\n                                    \n                                \n                                \n                                    \n                                        link:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        response\n                                    \n                                \n                                \n                                    \n                                        response:     APIResponse\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     APIResponse\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { HttpStatus } from '@nestjs/common'\n\nexport type Result =\n    | GetAppLaunchData\n    | GetUserProfile\n    | GetUserPosts\n    | GetComments\n    | GetRescueList\n    | GetFollowers\n    | GetFollowing\n\nexport type APIError = Error | string | null\n\nexport interface APIResponse {\n    data: T\n    error: APIError\n    message: string | string[]\n    statusCode: HttpStatus\n\n    count?: number\n    page?: number\n    pageCount?: number\n    total?: number\n}\n\nexport interface GetAppLaunchData {\n    link: 'api:/'\n    response: APIResponse\n}\n\nexport interface GetUserProfile {\n    link: 'api:v1/user/getUserProfile?userId=25'\n    response: APIResponse\n}\n\nexport interface GetUserPosts {\n    link: 'api:v1/user/getUserPosts?pageNo=0&pageSize=25'\n    response: APIResponse\n}\n\nexport interface GetRescueList {\n    link: 'api:v1/rescue/getRescueList?pageNo=0&pageSize=10&status=pending|inProgress|completed|nearest'\n    response: APIResponse\n}\n\nexport interface GetComments {\n    link: 'api:v1/rescue/getComments?pageNo=0&pageSize=10&postId=1230'\n    response: APIResponse\n}\n\nexport interface GetFollowers {\n    link: 'api:v1/rescue/getUserFollowers?userId=1230'\n    response: APIResponse\n}\n\nexport interface GetFollowing {\n    link: 'api:v1/rescue/getUserFollowing?userId=1230'\n    response: APIResponse\n}\n\nexport interface AppLaunchAction {\n    actionId: number\n    action: string\n    isActive: boolean\n    subject?: string\n}\n\nexport interface User {\n    usesId: number\n\n    coverImage: string\n    following: boolean\n    gender: string\n    isOwnProfile: number\n    isRescuer: boolean\n    latitude: number\n    longitude: number\n    numberOfFollowers: number\n    numberOfFollowing: number\n    numberOfPosts: number\n    numberOfRescuesCompleted: number\n    numberOfRescuesCreated: number\n    numberOfRescuesInProgress: number\n    profileImage: string\n    rescuer: boolean\n    userAddress: string\n    userContacts: string\n    userEmail: string\n    userName: string\n    badge: {\n        badgeId: number\n        badgeName: string\n        badgeDescription: string\n        recuesCompletionNeeded: number\n    }\n    setting: {\n        showMyContacts: boolean\n        getNotifications: boolean\n    }\n}\n\nexport interface PostType {\n    postTypeId: number\n    postType: string\n}\n\nexport interface PostedByUser {\n    usesId: number\n    badgeName: string\n    following: boolean\n    profileImage: string\n    rescuer: boolean\n    userName: string\n}\n\nexport interface UserPost {\n    postId: number\n    commentsCount: number\n    isUserReactedToPost: boolean\n    ownPage: boolean\n    postBy: PostedByUser\n    postImage: string\n    postTime: string\n    postType: PostType\n    postVideo: string\n    reactionsCount: number\n    timeAgo: string\n\n    adCorporateLogoUrl: string | null\n    corporateDescription: string | null\n    corporateName: string | null\n}\n\nexport interface UserPosts {\n    isRecent: boolean\n    feed: UserPost[]\n}\n\nexport interface Rescues {\n    rescueId: number\n    animalImageUrl: string\n    distance: number\n    distanceAway: string\n    emergencyType: string\n    postedBy: string\n    postedMinAgo: string\n    rescueDate: Date\n    rescuedPetName: string\n    rescueLocality: string\n    rescuers: {\n        contact: number\n        name: string\n        profileId: number\n        profileImageUrl: string\n        rescues: boolean\n        showMyNumber: boolean\n    }\n    rescueStatus: string\n    viewsCont: number\n}\n\nexport interface RescueLists {\n    rescues: Rescues[]\n}\n\nexport interface Comment {\n    commentId: number\n    comment: string\n    commentedUseName: string\n    commentedUserId: number\n    timeAgo: string\n}\n\nexport interface Comments {\n    comments: Comment[]\n}\n\nexport interface Follower {\n    userId: number\n    userName: string\n    profileImage: string\n    areYouFollowing: boolean\n    showRemoveOption: boolean\n}\n\nexport interface Following extends Follower {}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/GetUserPosts.html":{"url":"interfaces/GetUserPosts.html","title":"interface - GetUserPosts","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  GetUserPosts\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/domain.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        link\n                                \n                                \n                                        response\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        link\n                                    \n                                \n                                \n                                    \n                                        link:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        response\n                                    \n                                \n                                \n                                    \n                                        response:         APIResponse\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         APIResponse\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { HttpStatus } from '@nestjs/common'\n\nexport type Result =\n    | GetAppLaunchData\n    | GetUserProfile\n    | GetUserPosts\n    | GetComments\n    | GetRescueList\n    | GetFollowers\n    | GetFollowing\n\nexport type APIError = Error | string | null\n\nexport interface APIResponse {\n    data: T\n    error: APIError\n    message: string | string[]\n    statusCode: HttpStatus\n\n    count?: number\n    page?: number\n    pageCount?: number\n    total?: number\n}\n\nexport interface GetAppLaunchData {\n    link: 'api:/'\n    response: APIResponse\n}\n\nexport interface GetUserProfile {\n    link: 'api:v1/user/getUserProfile?userId=25'\n    response: APIResponse\n}\n\nexport interface GetUserPosts {\n    link: 'api:v1/user/getUserPosts?pageNo=0&pageSize=25'\n    response: APIResponse\n}\n\nexport interface GetRescueList {\n    link: 'api:v1/rescue/getRescueList?pageNo=0&pageSize=10&status=pending|inProgress|completed|nearest'\n    response: APIResponse\n}\n\nexport interface GetComments {\n    link: 'api:v1/rescue/getComments?pageNo=0&pageSize=10&postId=1230'\n    response: APIResponse\n}\n\nexport interface GetFollowers {\n    link: 'api:v1/rescue/getUserFollowers?userId=1230'\n    response: APIResponse\n}\n\nexport interface GetFollowing {\n    link: 'api:v1/rescue/getUserFollowing?userId=1230'\n    response: APIResponse\n}\n\nexport interface AppLaunchAction {\n    actionId: number\n    action: string\n    isActive: boolean\n    subject?: string\n}\n\nexport interface User {\n    usesId: number\n\n    coverImage: string\n    following: boolean\n    gender: string\n    isOwnProfile: number\n    isRescuer: boolean\n    latitude: number\n    longitude: number\n    numberOfFollowers: number\n    numberOfFollowing: number\n    numberOfPosts: number\n    numberOfRescuesCompleted: number\n    numberOfRescuesCreated: number\n    numberOfRescuesInProgress: number\n    profileImage: string\n    rescuer: boolean\n    userAddress: string\n    userContacts: string\n    userEmail: string\n    userName: string\n    badge: {\n        badgeId: number\n        badgeName: string\n        badgeDescription: string\n        recuesCompletionNeeded: number\n    }\n    setting: {\n        showMyContacts: boolean\n        getNotifications: boolean\n    }\n}\n\nexport interface PostType {\n    postTypeId: number\n    postType: string\n}\n\nexport interface PostedByUser {\n    usesId: number\n    badgeName: string\n    following: boolean\n    profileImage: string\n    rescuer: boolean\n    userName: string\n}\n\nexport interface UserPost {\n    postId: number\n    commentsCount: number\n    isUserReactedToPost: boolean\n    ownPage: boolean\n    postBy: PostedByUser\n    postImage: string\n    postTime: string\n    postType: PostType\n    postVideo: string\n    reactionsCount: number\n    timeAgo: string\n\n    adCorporateLogoUrl: string | null\n    corporateDescription: string | null\n    corporateName: string | null\n}\n\nexport interface UserPosts {\n    isRecent: boolean\n    feed: UserPost[]\n}\n\nexport interface Rescues {\n    rescueId: number\n    animalImageUrl: string\n    distance: number\n    distanceAway: string\n    emergencyType: string\n    postedBy: string\n    postedMinAgo: string\n    rescueDate: Date\n    rescuedPetName: string\n    rescueLocality: string\n    rescuers: {\n        contact: number\n        name: string\n        profileId: number\n        profileImageUrl: string\n        rescues: boolean\n        showMyNumber: boolean\n    }\n    rescueStatus: string\n    viewsCont: number\n}\n\nexport interface RescueLists {\n    rescues: Rescues[]\n}\n\nexport interface Comment {\n    commentId: number\n    comment: string\n    commentedUseName: string\n    commentedUserId: number\n    timeAgo: string\n}\n\nexport interface Comments {\n    comments: Comment[]\n}\n\nexport interface Follower {\n    userId: number\n    userName: string\n    profileImage: string\n    areYouFollowing: boolean\n    showRemoveOption: boolean\n}\n\nexport interface Following extends Follower {}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/GetUserProfile.html":{"url":"interfaces/GetUserProfile.html","title":"interface - GetUserProfile","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  GetUserProfile\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/domain.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        link\n                                \n                                \n                                        response\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        link\n                                    \n                                \n                                \n                                    \n                                        link:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        response\n                                    \n                                \n                                \n                                    \n                                        response:         APIResponse\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         APIResponse\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { HttpStatus } from '@nestjs/common'\n\nexport type Result =\n    | GetAppLaunchData\n    | GetUserProfile\n    | GetUserPosts\n    | GetComments\n    | GetRescueList\n    | GetFollowers\n    | GetFollowing\n\nexport type APIError = Error | string | null\n\nexport interface APIResponse {\n    data: T\n    error: APIError\n    message: string | string[]\n    statusCode: HttpStatus\n\n    count?: number\n    page?: number\n    pageCount?: number\n    total?: number\n}\n\nexport interface GetAppLaunchData {\n    link: 'api:/'\n    response: APIResponse\n}\n\nexport interface GetUserProfile {\n    link: 'api:v1/user/getUserProfile?userId=25'\n    response: APIResponse\n}\n\nexport interface GetUserPosts {\n    link: 'api:v1/user/getUserPosts?pageNo=0&pageSize=25'\n    response: APIResponse\n}\n\nexport interface GetRescueList {\n    link: 'api:v1/rescue/getRescueList?pageNo=0&pageSize=10&status=pending|inProgress|completed|nearest'\n    response: APIResponse\n}\n\nexport interface GetComments {\n    link: 'api:v1/rescue/getComments?pageNo=0&pageSize=10&postId=1230'\n    response: APIResponse\n}\n\nexport interface GetFollowers {\n    link: 'api:v1/rescue/getUserFollowers?userId=1230'\n    response: APIResponse\n}\n\nexport interface GetFollowing {\n    link: 'api:v1/rescue/getUserFollowing?userId=1230'\n    response: APIResponse\n}\n\nexport interface AppLaunchAction {\n    actionId: number\n    action: string\n    isActive: boolean\n    subject?: string\n}\n\nexport interface User {\n    usesId: number\n\n    coverImage: string\n    following: boolean\n    gender: string\n    isOwnProfile: number\n    isRescuer: boolean\n    latitude: number\n    longitude: number\n    numberOfFollowers: number\n    numberOfFollowing: number\n    numberOfPosts: number\n    numberOfRescuesCompleted: number\n    numberOfRescuesCreated: number\n    numberOfRescuesInProgress: number\n    profileImage: string\n    rescuer: boolean\n    userAddress: string\n    userContacts: string\n    userEmail: string\n    userName: string\n    badge: {\n        badgeId: number\n        badgeName: string\n        badgeDescription: string\n        recuesCompletionNeeded: number\n    }\n    setting: {\n        showMyContacts: boolean\n        getNotifications: boolean\n    }\n}\n\nexport interface PostType {\n    postTypeId: number\n    postType: string\n}\n\nexport interface PostedByUser {\n    usesId: number\n    badgeName: string\n    following: boolean\n    profileImage: string\n    rescuer: boolean\n    userName: string\n}\n\nexport interface UserPost {\n    postId: number\n    commentsCount: number\n    isUserReactedToPost: boolean\n    ownPage: boolean\n    postBy: PostedByUser\n    postImage: string\n    postTime: string\n    postType: PostType\n    postVideo: string\n    reactionsCount: number\n    timeAgo: string\n\n    adCorporateLogoUrl: string | null\n    corporateDescription: string | null\n    corporateName: string | null\n}\n\nexport interface UserPosts {\n    isRecent: boolean\n    feed: UserPost[]\n}\n\nexport interface Rescues {\n    rescueId: number\n    animalImageUrl: string\n    distance: number\n    distanceAway: string\n    emergencyType: string\n    postedBy: string\n    postedMinAgo: string\n    rescueDate: Date\n    rescuedPetName: string\n    rescueLocality: string\n    rescuers: {\n        contact: number\n        name: string\n        profileId: number\n        profileImageUrl: string\n        rescues: boolean\n        showMyNumber: boolean\n    }\n    rescueStatus: string\n    viewsCont: number\n}\n\nexport interface RescueLists {\n    rescues: Rescues[]\n}\n\nexport interface Comment {\n    commentId: number\n    comment: string\n    commentedUseName: string\n    commentedUserId: number\n    timeAgo: string\n}\n\nexport interface Comments {\n    comments: Comment[]\n}\n\nexport interface Follower {\n    userId: number\n    userName: string\n    profileImage: string\n    areYouFollowing: boolean\n    showRemoveOption: boolean\n}\n\nexport interface Following extends Follower {}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/HealthController.html":{"url":"controllers/HealthController.html","title":"controller - HealthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  HealthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/health/health.controller.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                check\n                            \n                            \n                                collectOsMetrics\n                            \n                            \n                                onApplicationShutdown\n                            \n                            \n                                onModuleInit\n                            \n                            \n                                sse\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            check\n                        \n                        \n                    \n                \n            \n            \n                \ncheck()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@HttpCode(200)@HealthCheck()\n                \n            \n\n            \n                \n                    Defined in src/health/health.controller.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            collectOsMetrics\n                        \n                        \n                    \n                \n            \n            \n                \ncollectOsMetrics(metrics)\n                \n            \n\n\n            \n                \n                    Defined in src/health/health.controller.ts:61\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    metrics\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onApplicationShutdown\n                        \n                        \n                    \n                \n            \n            \n                \nonApplicationShutdown(signal?: string)\n                \n            \n\n\n            \n                \n                    Defined in src/health/health.controller.ts:80\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    signal\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onModuleInit\n                        \n                        \n                    \n                \n            \n            \n                \nonModuleInit()\n                \n            \n\n\n            \n                \n                    Defined in src/health/health.controller.ts:74\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            sse\n                        \n                        \n                    \n                \n            \n            \n                \nsse()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Sse('sse')\n                \n            \n\n            \n                \n                    Defined in src/health/health.controller.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        /* eslint-disable no-use-before-define,@typescript-eslint/no-unsafe-call,@typescript-eslint/no-unsafe-member-access,@typescript-eslint/no-unsafe-assignment,no-param-reassign */\nimport {\n    Controller,\n    Get,\n    HttpCode,\n    OnApplicationShutdown,\n    OnModuleInit,\n    MessageEvent,\n    Sse,\n} from '@nestjs/common'\nimport { ConfigService } from '@nestjs/config'\nimport { ApiTags } from '@nestjs/swagger'\nimport {\n    DNSHealthIndicator,\n    HealthCheck,\n    HealthCheckService,\n} from '@nestjs/terminus'\n\nimport * as os from 'os'\nimport * as pidusage from 'pidusage'\nimport { interval, Observable } from 'rxjs'\nimport { map } from 'rxjs/operators'\n\n@ApiTags(HealthController.name)\n@Controller(HealthController.path)\nexport class HealthController implements OnModuleInit, OnApplicationShutdown {\n    static path = 'health'\n\n    constructor(\n        private health: HealthCheckService,\n        private dns: DNSHealthIndicator,\n        private config: ConfigService,\n    ) {}\n\n    @Sse('sse')\n    sse(): Observable {\n        const metrics = {\n            os: {},\n            interval: 1, // Every 1 second\n            retention: 60, // Keep 60 datapoints in memory\n        }\n\n        return interval(5000).pipe(\n            map((_) => {\n                this.collectOsMetrics(metrics)\n\n                return { data: metrics }\n            }),\n        )\n    }\n\n    @Get()\n    @HttpCode(200)\n    @HealthCheck()\n    check() {\n        return this.health.check([\n            () => this.dns.pingCheck('nestjs-docs', 'https://docs.nestjs.com'),\n        ])\n    }\n\n    collectOsMetrics(metrics) {\n        pidusage(process.pid, (err, stat) => {\n            if (err) return\n\n            // Convert from B to MB\n            stat.memory = stat.memory / 1024 / 1024\n            stat.load = os.loadavg()\n            stat.timestamp = Date.now()\n\n            metrics.os = stat\n        })\n    }\n\n    onModuleInit() {\n        console.log(`ModuleInit - HealthController has been initialized.`, {\n            config: this.config.get('NODE_ENV'),\n        })\n    }\n\n    onApplicationShutdown(signal?: string) {\n        console.log(\n            `ApplicationShutdown - HealthController has been shutdown with ${signal} signal`,\n        )\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IBaseModel.html":{"url":"interfaces/IBaseModel.html","title":"interface - IBaseModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IBaseModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/database/models/base.model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        created_at\n                                \n                                \n                                            Optional\n                                        deleted_at\n                                \n                                \n                                        id\n                                \n                                \n                                        updated_at\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        created_at\n                                    \n                                \n                                \n                                    \n                                        created_at:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        deleted_at\n                                    \n                                \n                                \n                                    \n                                        deleted_at:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        updated_at\n                                    \n                                \n                                \n                                    \n                                        updated_at:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ApiProperty, ApiPropertyOptional } from '@nestjs/swagger'\n\nimport {\n    fn,\n    mixin,\n    Model,\n    ModelOptions,\n    QueryContext,\n    RelationExpression,\n} from 'objection'\nimport { DBErrors } from 'objection-db-errors'\nimport visibilityPlugin from 'objection-visibility'\n\nimport { CustomQueryBuilder } from './helpers'\n\nexport interface IBaseModel {\n    id: number\n    created_at: any\n    updated_at: any\n    deleted_at?: any\n}\n\nexport class BaseModel\n    extends mixin(Model, [visibilityPlugin, DBErrors])\n    implements IBaseModel {\n    static hidden = ['salt', 'password', 'created_at', 'updated_at', 'deleted_at'] // hidden fields to filter from query result\n\n    QueryBuilderType!: CustomQueryBuilder // custom query builder for pagination\n\n    static QueryBuilder = CustomQueryBuilder\n\n    id: number\n\n    created_at: any\n\n    updated_at: any\n\n    deleted_at?: any | null\n\n    // fetch data with relation mapping\n    async fetchRelation(expression: RelationExpression, options = {}) {\n        if (this[expression.toString()]) return this\n\n        await this.$fetchGraph(expression, options)\n        return this\n    }\n\n    /*\n    async $beforeUpdate(opt: ModelOptions, queryContext: QueryContext) {\n        await super.$beforeUpdate(opt, queryContext)\n\n        this.updated_at = new Date().toISOString() // fn.now()\n    }\n\n    async $beforeInsert(queryContext: QueryContext) {\n        await super.$beforeInsert(queryContext)\n\n        const date = fn.now() // new Date().toISOString()\n\n        this.created_at = date\n        this.updated_at = date\n    }\n    */\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ICrudService.html":{"url":"interfaces/ICrudService.html","title":"interface - ICrudService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ICrudService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/base/crud/icrud.service.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    count\n                                \n                                \n                                    create\n                                \n                                \n                                    delete\n                                \n                                \n                                    findAll\n                                \n                                \n                                    findOne\n                                \n                                \n                                    update\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            count\n                        \n                        \n                    \n                \n            \n            \n                \ncount(filter?: FindManyOptions)\n                \n            \n\n\n            \n                \n                    Defined in src/base/crud/icrud.service.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                            FindManyOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            create\n                        \n                        \n                    \n                \n            \n            \n                \ncreate(entity: DeepPartial, ...options: any[])\n                \n            \n\n\n            \n                \n                    Defined in src/base/crud/icrud.service.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entity\n                                    \n                                            DeepPartial\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                            any[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            delete\n                        \n                        \n                    \n                \n            \n            \n                \ndelete(id: any, ...options: any[])\n                \n            \n\n\n            \n                \n                    Defined in src/base/crud/icrud.service.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                            any[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            findAll\n                        \n                        \n                    \n                \n            \n            \n                \nfindAll(filter?: FindManyOptions)\n                \n            \n\n\n            \n                \n                    Defined in src/base/crud/icrud.service.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                            FindManyOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            findOne\n                        \n                        \n                    \n                \n            \n            \n                \nfindOne(id: string | number | FindOneOptions | FindConditions, options?: FindOneOptions)\n                \n            \n\n\n            \n                \n                    Defined in src/base/crud/icrud.service.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                            string | number | FindOneOptions | FindConditions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                            FindOneOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            update\n                        \n                        \n                    \n                \n            \n            \n                \nupdate(id: any, entity: QueryDeepPartialEntity, ...options: any[])\n                \n            \n\n\n            \n                \n                    Defined in src/base/crud/icrud.service.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    entity\n                                    \n                                            QueryDeepPartialEntity\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                            any[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n    DeepPartial,\n    DeleteResult,\n    FindConditions,\n    FindManyOptions,\n    FindOneOptions,\n    UpdateResult,\n} from 'typeorm'\nimport { QueryDeepPartialEntity } from 'typeorm/query-builder/QueryPartialEntity'\n\nexport interface IPagination {\n    /**\n     * Items included in the current listing\n     */\n    readonly items: T[]\n\n    /**\n     * Total number of available items\n     */\n    readonly total: number\n}\n\nexport interface ICrudService {\n    count(filter?: FindManyOptions)\n\n    findAll(filter?: FindManyOptions)\n\n    findOne(\n        id: string | number | FindOneOptions | FindConditions,\n        options?: FindOneOptions,\n    )\n\n    create(entity: DeepPartial, ...options: any[])\n\n    update(id: any, entity: QueryDeepPartialEntity, ...options: any[])\n\n    delete(id: any, ...options: any[])\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IPagination.html":{"url":"interfaces/IPagination.html","title":"interface - IPagination","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IPagination\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/base/crud/icrud.service.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        items\n                                \n                                \n                                        total\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        items\n                                    \n                                \n                                \n                                    \n                                        items:     T[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     T[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Items included in the current listing\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        total\n                                    \n                                \n                                \n                                    \n                                        total:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Total number of available items\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import {\n    DeepPartial,\n    DeleteResult,\n    FindConditions,\n    FindManyOptions,\n    FindOneOptions,\n    UpdateResult,\n} from 'typeorm'\nimport { QueryDeepPartialEntity } from 'typeorm/query-builder/QueryPartialEntity'\n\nexport interface IPagination {\n    /**\n     * Items included in the current listing\n     */\n    readonly items: T[]\n\n    /**\n     * Total number of available items\n     */\n    readonly total: number\n}\n\nexport interface ICrudService {\n    count(filter?: FindManyOptions)\n\n    findAll(filter?: FindManyOptions)\n\n    findOne(\n        id: string | number | FindOneOptions | FindConditions,\n        options?: FindOneOptions,\n    )\n\n    create(entity: DeepPartial, ...options: any[])\n\n    update(id: any, entity: QueryDeepPartialEntity, ...options: any[])\n\n    delete(id: any, ...options: any[])\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IPagination-1.html":{"url":"interfaces/IPagination-1.html","title":"interface - IPagination-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IPagination\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/base/crud/pagination.ts\n        \n\n            \n                Description\n            \n            \n                Generic pagination interface\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        items\n                                \n                                \n                                        total\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        items\n                                    \n                                \n                                \n                                    \n                                        items:     T[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     T[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Items included in the current listing\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        total\n                                    \n                                \n                                \n                                    \n                                        total:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Total number of available items\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface IPagination {\n    /**\n     * Items included in the current listing\n     */\n    readonly items: T[]\n\n    /**\n     * Total number of available items\n     */\n    readonly total: number\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ITag.html":{"url":"interfaces/ITag.html","title":"interface - ITag","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ITag\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/tags/tag.model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        name\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { PartialType as MappedPartialType } from '@nestjs/mapped-types'\nimport { ApiProperty, PartialType } from '@nestjs/swagger'\n\nimport { IsNotEmpty, IsString, MaxLength, MinLength } from 'class-validator'\nimport type { JSONSchema } from 'objection'\n\nimport { BaseModel } from '../database/models/base.model'\n\ninterface ITag {\n    name: string\n}\n\nexport class Tag extends BaseModel implements ITag {\n    static tableName = 'tags'\n\n    @ApiProperty() name: string\n\n    // JSON schema is not the database schema! Nothing is generated based on this.\n    // This is only used for validation. Whenever a model instance is created it is checked against this schema.\n    static jsonSchema: JSONSchema = {\n        type: 'object',\n        required: ['name'],\n        properties: {\n            id: { type: 'integer' },\n            name: { type: 'string', minLength: 2, maxLength: 255 },\n        },\n    }\n}\n\nexport class CreateTagsDto implements ITag {\n    @ApiProperty()\n    @IsString()\n    @IsNotEmpty()\n    @MinLength(2)\n    @MaxLength(36)\n    name: string\n}\n\nexport class UpdateTagsDto extends PartialType(CreateTagsDto) {}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ITryRequest.html":{"url":"interfaces/ITryRequest.html","title":"interface - ITryRequest","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ITryRequest\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/base/crud/try-request.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        error\n                                \n                                \n                                            Optional\n                                        record\n                                \n                                \n                                        success\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        error\n                                    \n                                \n                                \n                                    \n                                        error:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        record\n                                    \n                                \n                                \n                                    \n                                        record:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        success\n                                    \n                                \n                                \n                                    \n                                        success:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface ITryRequest {\n    success: boolean\n    record?: any\n    error?: any\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IUser.html":{"url":"interfaces/IUser.html","title":"interface - IUser","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IUser\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/user.model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        email\n                                \n                                \n                                        firstName\n                                \n                                \n                                        isActive\n                                \n                                \n                                        lastName\n                                \n                                \n                                        password\n                                \n                                \n                                        username\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        firstName\n                                    \n                                \n                                \n                                    \n                                        firstName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isActive\n                                    \n                                \n                                \n                                    \n                                        isActive:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lastName\n                                    \n                                \n                                \n                                    \n                                        lastName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                    \n                                \n                                \n                                    \n                                        password:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        username\n                                    \n                                \n                                \n                                    \n                                        username:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { PartialType as MappedPartialType } from '@nestjs/mapped-types'\nimport { ApiProperty, PartialType } from '@nestjs/swagger'\n\nimport {\n    IsString,\n    MinLength,\n    IsNotEmpty,\n    IsOptional,\n    MaxLength,\n    IsEmail,\n    IsBoolean,\n} from 'class-validator'\nimport type { JSONSchema, Modifiers } from 'objection'\n\nimport { BaseModel } from '../database/models/base.model'\n\ninterface IUser {\n    username: string\n    email: string\n    firstName: string\n    lastName: string\n    isActive: boolean\n    password: string\n}\n\nexport class User extends BaseModel implements IUser {\n    static tableName = 'users'\n\n    username: string\n\n    email: string\n\n    firstName: string\n\n    lastName: string\n\n    isActive: boolean\n\n    password: string\n\n    // JSON schema is not the database schema! Nothing is generated based on this.\n    // This is only used for validation. Whenever a model instance is created it is checked against this schema.\n    static jsonSchema: JSONSchema = {\n        type: 'object',\n        required: ['username', 'email', 'password'],\n        properties: {\n            id: { type: 'integer', readOnly: true },\n            username: { type: 'string', minLength: 3, maxLength: 255 },\n            email: {\n                type: 'string',\n                minLength: 3,\n                maxLength: 255,\n                format: 'email',\n            },\n            password: { type: 'string', minLength: 8, maxLength: 255 },\n            firstName: { type: 'string', minLength: 1, maxLength: 255 },\n            lastName: { type: 'string', minLength: 1, maxLength: 255 },\n            isActive: { type: 'boolean' },\n        },\n    }\n\n    // Modifiers are reusable query snippets that can be used in various places.\n    static modifiers: Modifiers = {\n        // Our example modifier is a a semi-dumb fuzzy name match. We split the name into pieces using whitespace\n        // and then try to partially match each of those pieces to both the `firstName` and the `lastName` fields.\n\n        searchByName(query, name: string) {\n            // This `where` simply creates parentheses so that other `where` statements don't get mixed with the these.\n\n            query.where((q) => {\n                for (const namePart of name.trim().split(/\\s+/)) {\n                    for (const column of ['firstName', 'lastName']) {\n                        q.orWhereRaw('lower(??) like ?', [\n                            column,\n                            `${namePart.toLowerCase()}%`,\n                        ])\n                    }\n                }\n            })\n        },\n    }\n}\n\nexport class CreateUserDto implements IUser {\n    @ApiProperty()\n    @IsString()\n    @IsNotEmpty()\n    @MinLength(2)\n    @MaxLength(36)\n    username: string\n\n    @ApiProperty()\n    @IsEmail()\n    @IsNotEmpty()\n    @MinLength(2)\n    email: string\n\n    @ApiProperty()\n    @IsString()\n    @IsNotEmpty()\n    @MinLength(8)\n    password: string\n\n    @ApiProperty()\n    @IsString()\n    @IsNotEmpty()\n    @MinLength(2)\n    firstName: string\n\n    @ApiProperty()\n    @IsOptional()\n    middleName: string\n\n    @ApiProperty()\n    @IsString()\n    @IsNotEmpty()\n    @MinLength(2)\n    lastName: string\n\n    @ApiProperty()\n    @IsBoolean()\n    isActive: boolean\n}\n\nexport class UpdateUserDto extends PartialType(CreateUserDto) {}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PaginationParams.html":{"url":"classes/PaginationParams.html","title":"class - PaginationParams","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PaginationParams\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/base/crud/pagination-params.ts\n        \n\n            \n                Description\n            \n            \n                Describes generic pagination params\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Abstract\n                                    Readonly\n                                    Optional\n                                order\n                            \n                            \n                                    Readonly\n                                skip\n                            \n                            \n                                    Readonly\n                                take\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Abstract\n                                Readonly\n                                Optional\n                            order\n                            \n                        \n                    \n                \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiPropertyOptional()@IsOptional()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/base/crud/pagination-params.ts:39\n                            \n                        \n\n                \n                    \n                        OrderBy\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            skip\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiPropertyOptional({type: Number, minimum: 0})@IsOptional()@Min(0)@Transform(undefined)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/base/crud/pagination-params.ts:32\n                            \n                        \n\n                \n                    \n                        Pagination offset\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            take\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 10\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiPropertyOptional({type: Number, minimum: 0, maximum: 50})@IsOptional()@Min(0)@Max(50)@Transform(undefined)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/base/crud/pagination-params.ts:23\n                            \n                        \n\n                \n                    \n                        Pagination limit\n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiPropertyOptional } from '@nestjs/swagger'\n\nimport { Transform } from 'class-transformer'\nimport { IsOptional, Max, Min } from 'class-validator'\n\nexport enum OrderType {\n    DESC = 'DESC',\n    ASC = 'ASC',\n}\n\n/**\n * Describes generic pagination params\n */\nexport abstract class PaginationParams {\n    /**\n     * Pagination limit\n     */\n    @ApiPropertyOptional({ type: Number, minimum: 0, maximum: 50 })\n    @IsOptional()\n    @Min(0)\n    @Max(50)\n    @Transform((val: string) => parseInt(val, 10))\n    readonly take = 10\n\n    /**\n     * Pagination offset\n     */\n    @ApiPropertyOptional({ type: Number, minimum: 0 })\n    @IsOptional()\n    @Min(0)\n    @Transform((val: string) => parseInt(val, 10))\n    readonly skip = 0\n\n    /**\n     * OrderBy\n     */\n    @ApiPropertyOptional()\n    @IsOptional()\n    abstract readonly order?: { [P in keyof T]?: OrderType }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PostType.html":{"url":"interfaces/PostType.html","title":"interface - PostType","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  PostType\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/domain.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        postType\n                                \n                                \n                                        postTypeId\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        postType\n                                    \n                                \n                                \n                                    \n                                        postType:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        postTypeId\n                                    \n                                \n                                \n                                    \n                                        postTypeId:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { HttpStatus } from '@nestjs/common'\n\nexport type Result =\n    | GetAppLaunchData\n    | GetUserProfile\n    | GetUserPosts\n    | GetComments\n    | GetRescueList\n    | GetFollowers\n    | GetFollowing\n\nexport type APIError = Error | string | null\n\nexport interface APIResponse {\n    data: T\n    error: APIError\n    message: string | string[]\n    statusCode: HttpStatus\n\n    count?: number\n    page?: number\n    pageCount?: number\n    total?: number\n}\n\nexport interface GetAppLaunchData {\n    link: 'api:/'\n    response: APIResponse\n}\n\nexport interface GetUserProfile {\n    link: 'api:v1/user/getUserProfile?userId=25'\n    response: APIResponse\n}\n\nexport interface GetUserPosts {\n    link: 'api:v1/user/getUserPosts?pageNo=0&pageSize=25'\n    response: APIResponse\n}\n\nexport interface GetRescueList {\n    link: 'api:v1/rescue/getRescueList?pageNo=0&pageSize=10&status=pending|inProgress|completed|nearest'\n    response: APIResponse\n}\n\nexport interface GetComments {\n    link: 'api:v1/rescue/getComments?pageNo=0&pageSize=10&postId=1230'\n    response: APIResponse\n}\n\nexport interface GetFollowers {\n    link: 'api:v1/rescue/getUserFollowers?userId=1230'\n    response: APIResponse\n}\n\nexport interface GetFollowing {\n    link: 'api:v1/rescue/getUserFollowing?userId=1230'\n    response: APIResponse\n}\n\nexport interface AppLaunchAction {\n    actionId: number\n    action: string\n    isActive: boolean\n    subject?: string\n}\n\nexport interface User {\n    usesId: number\n\n    coverImage: string\n    following: boolean\n    gender: string\n    isOwnProfile: number\n    isRescuer: boolean\n    latitude: number\n    longitude: number\n    numberOfFollowers: number\n    numberOfFollowing: number\n    numberOfPosts: number\n    numberOfRescuesCompleted: number\n    numberOfRescuesCreated: number\n    numberOfRescuesInProgress: number\n    profileImage: string\n    rescuer: boolean\n    userAddress: string\n    userContacts: string\n    userEmail: string\n    userName: string\n    badge: {\n        badgeId: number\n        badgeName: string\n        badgeDescription: string\n        recuesCompletionNeeded: number\n    }\n    setting: {\n        showMyContacts: boolean\n        getNotifications: boolean\n    }\n}\n\nexport interface PostType {\n    postTypeId: number\n    postType: string\n}\n\nexport interface PostedByUser {\n    usesId: number\n    badgeName: string\n    following: boolean\n    profileImage: string\n    rescuer: boolean\n    userName: string\n}\n\nexport interface UserPost {\n    postId: number\n    commentsCount: number\n    isUserReactedToPost: boolean\n    ownPage: boolean\n    postBy: PostedByUser\n    postImage: string\n    postTime: string\n    postType: PostType\n    postVideo: string\n    reactionsCount: number\n    timeAgo: string\n\n    adCorporateLogoUrl: string | null\n    corporateDescription: string | null\n    corporateName: string | null\n}\n\nexport interface UserPosts {\n    isRecent: boolean\n    feed: UserPost[]\n}\n\nexport interface Rescues {\n    rescueId: number\n    animalImageUrl: string\n    distance: number\n    distanceAway: string\n    emergencyType: string\n    postedBy: string\n    postedMinAgo: string\n    rescueDate: Date\n    rescuedPetName: string\n    rescueLocality: string\n    rescuers: {\n        contact: number\n        name: string\n        profileId: number\n        profileImageUrl: string\n        rescues: boolean\n        showMyNumber: boolean\n    }\n    rescueStatus: string\n    viewsCont: number\n}\n\nexport interface RescueLists {\n    rescues: Rescues[]\n}\n\nexport interface Comment {\n    commentId: number\n    comment: string\n    commentedUseName: string\n    commentedUserId: number\n    timeAgo: string\n}\n\nexport interface Comments {\n    comments: Comment[]\n}\n\nexport interface Follower {\n    userId: number\n    userName: string\n    profileImage: string\n    areYouFollowing: boolean\n    showRemoveOption: boolean\n}\n\nexport interface Following extends Follower {}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PostedByUser.html":{"url":"interfaces/PostedByUser.html","title":"interface - PostedByUser","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  PostedByUser\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/domain.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        badgeName\n                                \n                                \n                                        following\n                                \n                                \n                                        profileImage\n                                \n                                \n                                        rescuer\n                                \n                                \n                                        userName\n                                \n                                \n                                        usesId\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        badgeName\n                                    \n                                \n                                \n                                    \n                                        badgeName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        following\n                                    \n                                \n                                \n                                    \n                                        following:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        profileImage\n                                    \n                                \n                                \n                                    \n                                        profileImage:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        rescuer\n                                    \n                                \n                                \n                                    \n                                        rescuer:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        userName\n                                    \n                                \n                                \n                                    \n                                        userName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        usesId\n                                    \n                                \n                                \n                                    \n                                        usesId:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { HttpStatus } from '@nestjs/common'\n\nexport type Result =\n    | GetAppLaunchData\n    | GetUserProfile\n    | GetUserPosts\n    | GetComments\n    | GetRescueList\n    | GetFollowers\n    | GetFollowing\n\nexport type APIError = Error | string | null\n\nexport interface APIResponse {\n    data: T\n    error: APIError\n    message: string | string[]\n    statusCode: HttpStatus\n\n    count?: number\n    page?: number\n    pageCount?: number\n    total?: number\n}\n\nexport interface GetAppLaunchData {\n    link: 'api:/'\n    response: APIResponse\n}\n\nexport interface GetUserProfile {\n    link: 'api:v1/user/getUserProfile?userId=25'\n    response: APIResponse\n}\n\nexport interface GetUserPosts {\n    link: 'api:v1/user/getUserPosts?pageNo=0&pageSize=25'\n    response: APIResponse\n}\n\nexport interface GetRescueList {\n    link: 'api:v1/rescue/getRescueList?pageNo=0&pageSize=10&status=pending|inProgress|completed|nearest'\n    response: APIResponse\n}\n\nexport interface GetComments {\n    link: 'api:v1/rescue/getComments?pageNo=0&pageSize=10&postId=1230'\n    response: APIResponse\n}\n\nexport interface GetFollowers {\n    link: 'api:v1/rescue/getUserFollowers?userId=1230'\n    response: APIResponse\n}\n\nexport interface GetFollowing {\n    link: 'api:v1/rescue/getUserFollowing?userId=1230'\n    response: APIResponse\n}\n\nexport interface AppLaunchAction {\n    actionId: number\n    action: string\n    isActive: boolean\n    subject?: string\n}\n\nexport interface User {\n    usesId: number\n\n    coverImage: string\n    following: boolean\n    gender: string\n    isOwnProfile: number\n    isRescuer: boolean\n    latitude: number\n    longitude: number\n    numberOfFollowers: number\n    numberOfFollowing: number\n    numberOfPosts: number\n    numberOfRescuesCompleted: number\n    numberOfRescuesCreated: number\n    numberOfRescuesInProgress: number\n    profileImage: string\n    rescuer: boolean\n    userAddress: string\n    userContacts: string\n    userEmail: string\n    userName: string\n    badge: {\n        badgeId: number\n        badgeName: string\n        badgeDescription: string\n        recuesCompletionNeeded: number\n    }\n    setting: {\n        showMyContacts: boolean\n        getNotifications: boolean\n    }\n}\n\nexport interface PostType {\n    postTypeId: number\n    postType: string\n}\n\nexport interface PostedByUser {\n    usesId: number\n    badgeName: string\n    following: boolean\n    profileImage: string\n    rescuer: boolean\n    userName: string\n}\n\nexport interface UserPost {\n    postId: number\n    commentsCount: number\n    isUserReactedToPost: boolean\n    ownPage: boolean\n    postBy: PostedByUser\n    postImage: string\n    postTime: string\n    postType: PostType\n    postVideo: string\n    reactionsCount: number\n    timeAgo: string\n\n    adCorporateLogoUrl: string | null\n    corporateDescription: string | null\n    corporateName: string | null\n}\n\nexport interface UserPosts {\n    isRecent: boolean\n    feed: UserPost[]\n}\n\nexport interface Rescues {\n    rescueId: number\n    animalImageUrl: string\n    distance: number\n    distanceAway: string\n    emergencyType: string\n    postedBy: string\n    postedMinAgo: string\n    rescueDate: Date\n    rescuedPetName: string\n    rescueLocality: string\n    rescuers: {\n        contact: number\n        name: string\n        profileId: number\n        profileImageUrl: string\n        rescues: boolean\n        showMyNumber: boolean\n    }\n    rescueStatus: string\n    viewsCont: number\n}\n\nexport interface RescueLists {\n    rescues: Rescues[]\n}\n\nexport interface Comment {\n    commentId: number\n    comment: string\n    commentedUseName: string\n    commentedUserId: number\n    timeAgo: string\n}\n\nexport interface Comments {\n    comments: Comment[]\n}\n\nexport interface Follower {\n    userId: number\n    userName: string\n    profileImage: string\n    areYouFollowing: boolean\n    showRemoveOption: boolean\n}\n\nexport interface Following extends Follower {}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/QueryFailedFilter.html":{"url":"classes/QueryFailedFilter.html","title":"class - QueryFailedFilter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  QueryFailedFilter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/infra/filters/query-failed.filter.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        ExceptionFilter\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                catch\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            catch\n                        \n                        \n                    \n                \n            \n            \n                \ncatch(exception: CheckViolationError | ConstraintViolationError | DataError | ForeignKeyViolationError | NotNullViolationError | UniqueViolationError, host: ArgumentsHost)\n                \n            \n\n\n            \n                \n                    Defined in src/infra/filters/query-failed.filter.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    exception\n                                    \n                                            CheckViolationError | ConstraintViolationError | DataError | ForeignKeyViolationError | NotNullViolationError | UniqueViolationError\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    host\n                                    \n                                            ArgumentsHost\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ArgumentsHost, Catch, ExceptionFilter, HttpStatus } from '@nestjs/common'\n\nimport {\n    UniqueViolationError,\n    NotNullViolationError,\n    ForeignKeyViolationError,\n    ConstraintViolationError,\n    CheckViolationError,\n    DataError,\n} from 'objection-db-errors'\n\n@Catch(\n    CheckViolationError,\n    ConstraintViolationError,\n    DataError,\n    ForeignKeyViolationError,\n    NotNullViolationError,\n    UniqueViolationError,\n)\nexport class QueryFailedFilter implements ExceptionFilter {\n    catch(\n        exception:\n            | CheckViolationError\n            | ConstraintViolationError\n            | DataError\n            | ForeignKeyViolationError\n            | NotNullViolationError\n            | UniqueViolationError,\n        host: ArgumentsHost,\n    ) {\n        const ctx = host.switchToHttp()\n        const response = ctx.getResponse()\n        const request = ctx.getRequest()\n        const status = HttpStatus.PRECONDITION_FAILED\n\n        const {\n            message,\n            nativeError,\n            name, // @ts-ignore\n            table, // @ts-ignore\n            column, // @ts-ignore\n            columns, // @ts-ignore\n            database, // @ts-ignore\n            constraint, // @ts-ignore\n            schema,\n        } = exception\n\n        // @ts-ignore\n        response.status(status).json({\n            statusCode: status,\n            message,\n            nativeError,\n            name,\n            table,\n            columns: column ? [column] : columns,\n            database,\n            constraint,\n            schema,\n\n            path: request.url,\n            // timestamp: new Date().toISOString(),\n        })\n    }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/RequestGuard.html":{"url":"guards/RequestGuard.html","title":"guard - RequestGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    RequestGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/infra/guards/req.ts\n            \n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                bindRequestHelpers\n                            \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            bindRequestHelpers\n                        \n                        \n                    \n                \n            \n            \n                \nbindRequestHelpers(request: any)\n                \n            \n\n\n            \n                \n                    Defined in src/infra/guards/req.ts:21\n                \n            \n\n\n            \n                \n                    Bind Request Helpers\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            canActivate\n                        \n                        \n                    \n                \n            \n            \n                \ncanActivate(context: ExecutionContext)\n                \n            \n\n\n            \n                \n                    Defined in src/infra/guards/req.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     boolean | Promise | Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable, CanActivate, ExecutionContext } from '@nestjs/common'\n\nimport { Observable } from 'rxjs'\n\n@Injectable()\nexport class RequestGuard implements CanActivate {\n    canActivate(\n        context: ExecutionContext,\n    ): boolean | Promise | Observable {\n        this.bindRequestHelpers(context.switchToHttp().getRequest())\n\n        return true\n    }\n\n    /**\n     * Bind Request Helpers\n     *\n     * @param request\n     */\n    bindRequestHelpers(request: any): any {\n        function all(): Record {\n            const inputs = { ...request.query, ...request.body, ...request.params }\n\n            // eslint-disable-next-line guard-for-in,no-restricted-syntax\n            for (const key in inputs) {\n                const value = inputs[key]\n                if (typeof value === 'string' || value instanceof String) {\n                    inputs[key] = value.trim()\n                }\n            }\n\n            return inputs\n        }\n\n        request.all = all\n        return request\n    }\n}\n\n        \n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/RescueLists.html":{"url":"interfaces/RescueLists.html","title":"interface - RescueLists","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  RescueLists\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/domain.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        rescues\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        rescues\n                                    \n                                \n                                \n                                    \n                                        rescues:         Rescues[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Rescues[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { HttpStatus } from '@nestjs/common'\n\nexport type Result =\n    | GetAppLaunchData\n    | GetUserProfile\n    | GetUserPosts\n    | GetComments\n    | GetRescueList\n    | GetFollowers\n    | GetFollowing\n\nexport type APIError = Error | string | null\n\nexport interface APIResponse {\n    data: T\n    error: APIError\n    message: string | string[]\n    statusCode: HttpStatus\n\n    count?: number\n    page?: number\n    pageCount?: number\n    total?: number\n}\n\nexport interface GetAppLaunchData {\n    link: 'api:/'\n    response: APIResponse\n}\n\nexport interface GetUserProfile {\n    link: 'api:v1/user/getUserProfile?userId=25'\n    response: APIResponse\n}\n\nexport interface GetUserPosts {\n    link: 'api:v1/user/getUserPosts?pageNo=0&pageSize=25'\n    response: APIResponse\n}\n\nexport interface GetRescueList {\n    link: 'api:v1/rescue/getRescueList?pageNo=0&pageSize=10&status=pending|inProgress|completed|nearest'\n    response: APIResponse\n}\n\nexport interface GetComments {\n    link: 'api:v1/rescue/getComments?pageNo=0&pageSize=10&postId=1230'\n    response: APIResponse\n}\n\nexport interface GetFollowers {\n    link: 'api:v1/rescue/getUserFollowers?userId=1230'\n    response: APIResponse\n}\n\nexport interface GetFollowing {\n    link: 'api:v1/rescue/getUserFollowing?userId=1230'\n    response: APIResponse\n}\n\nexport interface AppLaunchAction {\n    actionId: number\n    action: string\n    isActive: boolean\n    subject?: string\n}\n\nexport interface User {\n    usesId: number\n\n    coverImage: string\n    following: boolean\n    gender: string\n    isOwnProfile: number\n    isRescuer: boolean\n    latitude: number\n    longitude: number\n    numberOfFollowers: number\n    numberOfFollowing: number\n    numberOfPosts: number\n    numberOfRescuesCompleted: number\n    numberOfRescuesCreated: number\n    numberOfRescuesInProgress: number\n    profileImage: string\n    rescuer: boolean\n    userAddress: string\n    userContacts: string\n    userEmail: string\n    userName: string\n    badge: {\n        badgeId: number\n        badgeName: string\n        badgeDescription: string\n        recuesCompletionNeeded: number\n    }\n    setting: {\n        showMyContacts: boolean\n        getNotifications: boolean\n    }\n}\n\nexport interface PostType {\n    postTypeId: number\n    postType: string\n}\n\nexport interface PostedByUser {\n    usesId: number\n    badgeName: string\n    following: boolean\n    profileImage: string\n    rescuer: boolean\n    userName: string\n}\n\nexport interface UserPost {\n    postId: number\n    commentsCount: number\n    isUserReactedToPost: boolean\n    ownPage: boolean\n    postBy: PostedByUser\n    postImage: string\n    postTime: string\n    postType: PostType\n    postVideo: string\n    reactionsCount: number\n    timeAgo: string\n\n    adCorporateLogoUrl: string | null\n    corporateDescription: string | null\n    corporateName: string | null\n}\n\nexport interface UserPosts {\n    isRecent: boolean\n    feed: UserPost[]\n}\n\nexport interface Rescues {\n    rescueId: number\n    animalImageUrl: string\n    distance: number\n    distanceAway: string\n    emergencyType: string\n    postedBy: string\n    postedMinAgo: string\n    rescueDate: Date\n    rescuedPetName: string\n    rescueLocality: string\n    rescuers: {\n        contact: number\n        name: string\n        profileId: number\n        profileImageUrl: string\n        rescues: boolean\n        showMyNumber: boolean\n    }\n    rescueStatus: string\n    viewsCont: number\n}\n\nexport interface RescueLists {\n    rescues: Rescues[]\n}\n\nexport interface Comment {\n    commentId: number\n    comment: string\n    commentedUseName: string\n    commentedUserId: number\n    timeAgo: string\n}\n\nexport interface Comments {\n    comments: Comment[]\n}\n\nexport interface Follower {\n    userId: number\n    userName: string\n    profileImage: string\n    areYouFollowing: boolean\n    showRemoveOption: boolean\n}\n\nexport interface Following extends Follower {}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Rescues.html":{"url":"interfaces/Rescues.html","title":"interface - Rescues","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Rescues\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/domain.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        animalImageUrl\n                                \n                                \n                                        distance\n                                \n                                \n                                        distanceAway\n                                \n                                \n                                        emergencyType\n                                \n                                \n                                        postedBy\n                                \n                                \n                                        postedMinAgo\n                                \n                                \n                                        rescueDate\n                                \n                                \n                                        rescuedPetName\n                                \n                                \n                                        rescueId\n                                \n                                \n                                        rescueLocality\n                                \n                                \n                                        rescuers\n                                \n                                \n                                        rescueStatus\n                                \n                                \n                                        viewsCont\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        animalImageUrl\n                                    \n                                \n                                \n                                    \n                                        animalImageUrl:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        distance\n                                    \n                                \n                                \n                                    \n                                        distance:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        distanceAway\n                                    \n                                \n                                \n                                    \n                                        distanceAway:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        emergencyType\n                                    \n                                \n                                \n                                    \n                                        emergencyType:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        postedBy\n                                    \n                                \n                                \n                                    \n                                        postedBy:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        postedMinAgo\n                                    \n                                \n                                \n                                    \n                                        postedMinAgo:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        rescueDate\n                                    \n                                \n                                \n                                    \n                                        rescueDate:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        rescuedPetName\n                                    \n                                \n                                \n                                    \n                                        rescuedPetName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        rescueId\n                                    \n                                \n                                \n                                    \n                                        rescueId:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        rescueLocality\n                                    \n                                \n                                \n                                    \n                                        rescueLocality:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        rescuers\n                                    \n                                \n                                \n                                    \n                                        rescuers:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        rescueStatus\n                                    \n                                \n                                \n                                    \n                                        rescueStatus:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        viewsCont\n                                    \n                                \n                                \n                                    \n                                        viewsCont:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { HttpStatus } from '@nestjs/common'\n\nexport type Result =\n    | GetAppLaunchData\n    | GetUserProfile\n    | GetUserPosts\n    | GetComments\n    | GetRescueList\n    | GetFollowers\n    | GetFollowing\n\nexport type APIError = Error | string | null\n\nexport interface APIResponse {\n    data: T\n    error: APIError\n    message: string | string[]\n    statusCode: HttpStatus\n\n    count?: number\n    page?: number\n    pageCount?: number\n    total?: number\n}\n\nexport interface GetAppLaunchData {\n    link: 'api:/'\n    response: APIResponse\n}\n\nexport interface GetUserProfile {\n    link: 'api:v1/user/getUserProfile?userId=25'\n    response: APIResponse\n}\n\nexport interface GetUserPosts {\n    link: 'api:v1/user/getUserPosts?pageNo=0&pageSize=25'\n    response: APIResponse\n}\n\nexport interface GetRescueList {\n    link: 'api:v1/rescue/getRescueList?pageNo=0&pageSize=10&status=pending|inProgress|completed|nearest'\n    response: APIResponse\n}\n\nexport interface GetComments {\n    link: 'api:v1/rescue/getComments?pageNo=0&pageSize=10&postId=1230'\n    response: APIResponse\n}\n\nexport interface GetFollowers {\n    link: 'api:v1/rescue/getUserFollowers?userId=1230'\n    response: APIResponse\n}\n\nexport interface GetFollowing {\n    link: 'api:v1/rescue/getUserFollowing?userId=1230'\n    response: APIResponse\n}\n\nexport interface AppLaunchAction {\n    actionId: number\n    action: string\n    isActive: boolean\n    subject?: string\n}\n\nexport interface User {\n    usesId: number\n\n    coverImage: string\n    following: boolean\n    gender: string\n    isOwnProfile: number\n    isRescuer: boolean\n    latitude: number\n    longitude: number\n    numberOfFollowers: number\n    numberOfFollowing: number\n    numberOfPosts: number\n    numberOfRescuesCompleted: number\n    numberOfRescuesCreated: number\n    numberOfRescuesInProgress: number\n    profileImage: string\n    rescuer: boolean\n    userAddress: string\n    userContacts: string\n    userEmail: string\n    userName: string\n    badge: {\n        badgeId: number\n        badgeName: string\n        badgeDescription: string\n        recuesCompletionNeeded: number\n    }\n    setting: {\n        showMyContacts: boolean\n        getNotifications: boolean\n    }\n}\n\nexport interface PostType {\n    postTypeId: number\n    postType: string\n}\n\nexport interface PostedByUser {\n    usesId: number\n    badgeName: string\n    following: boolean\n    profileImage: string\n    rescuer: boolean\n    userName: string\n}\n\nexport interface UserPost {\n    postId: number\n    commentsCount: number\n    isUserReactedToPost: boolean\n    ownPage: boolean\n    postBy: PostedByUser\n    postImage: string\n    postTime: string\n    postType: PostType\n    postVideo: string\n    reactionsCount: number\n    timeAgo: string\n\n    adCorporateLogoUrl: string | null\n    corporateDescription: string | null\n    corporateName: string | null\n}\n\nexport interface UserPosts {\n    isRecent: boolean\n    feed: UserPost[]\n}\n\nexport interface Rescues {\n    rescueId: number\n    animalImageUrl: string\n    distance: number\n    distanceAway: string\n    emergencyType: string\n    postedBy: string\n    postedMinAgo: string\n    rescueDate: Date\n    rescuedPetName: string\n    rescueLocality: string\n    rescuers: {\n        contact: number\n        name: string\n        profileId: number\n        profileImageUrl: string\n        rescues: boolean\n        showMyNumber: boolean\n    }\n    rescueStatus: string\n    viewsCont: number\n}\n\nexport interface RescueLists {\n    rescues: Rescues[]\n}\n\nexport interface Comment {\n    commentId: number\n    comment: string\n    commentedUseName: string\n    commentedUserId: number\n    timeAgo: string\n}\n\nexport interface Comments {\n    comments: Comment[]\n}\n\nexport interface Follower {\n    userId: number\n    userName: string\n    profileImage: string\n    areYouFollowing: boolean\n    showRemoveOption: boolean\n}\n\nexport interface Following extends Follower {}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Response.html":{"url":"interfaces/Response.html","title":"interface - Response","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Response\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/infra/interceptors/transform.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        data\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                    \n                                \n                                \n                                    \n                                        data:     T\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     T\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {\n    Injectable,\n    NestInterceptor,\n    ExecutionContext,\n    CallHandler,\n} from '@nestjs/common'\n\nimport { Observable } from 'rxjs'\nimport { map } from 'rxjs/operators'\n\nexport interface Response {\n    data: T\n}\n\n@Injectable()\nexport class TransformInterceptor implements NestInterceptor> {\n    intercept(\n        context: ExecutionContext,\n        next: CallHandler,\n    ): Observable> {\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n        return next.handle().pipe(map((data) => ({ data })))\n    }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/ResponseGuard.html":{"url":"guards/ResponseGuard.html","title":"guard - ResponseGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    ResponseGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/infra/guards/res.ts\n            \n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                bindResponseHelpers\n                            \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            bindResponseHelpers\n                        \n                        \n                    \n                \n            \n            \n                \nbindResponseHelpers(response: any)\n                \n            \n\n\n            \n                \n                    Defined in src/infra/guards/res.ts:21\n                \n            \n\n\n            \n                \n                    Bind Response Helpers\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    response\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            canActivate\n                        \n                        \n                    \n                \n            \n            \n                \ncanActivate(context: ExecutionContext)\n                \n            \n\n\n            \n                \n                    Defined in src/infra/guards/res.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     boolean | Promise | Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable, CanActivate, ExecutionContext } from '@nestjs/common'\n\nimport { Observable } from 'rxjs'\n\n@Injectable()\nexport class ResponseGuard implements CanActivate {\n    canActivate(\n        context: ExecutionContext,\n    ): boolean | Promise | Observable {\n        this.bindResponseHelpers(context.switchToHttp().getResponse())\n\n        return true\n    }\n\n    /**\n     * Bind Response Helpers\n     *\n     * @param response\n     */\n    bindResponseHelpers(response: any): any {\n        function success(\n            data: Record | Array | string,\n            status = 200,\n        ) {\n            return response.status(status).json({\n                success: true,\n                code: status,\n                data,\n            })\n        }\n\n        // eslint-disable-next-line @typescript-eslint/no-shadow\n        function error(error: Record | string, status = 401) {\n            let message = 'Something went wrong!'\n            let errors = null\n            if (error instanceof Object) {\n                message = error.message\n                errors = error.errors\n            } else {\n                message = error\n            }\n\n            return response.status(status).json({\n                success: false,\n                code: status,\n                message,\n                errors,\n            })\n        }\n\n        function noContent() {\n            return response.status(204).end()\n        }\n\n        function withMeta(data: Record, status = 200) {\n            const { data: dataObj, ...meta } = data\n\n            return response.status(status).json({\n                success: true,\n                code: status,\n                data: dataObj,\n                meta,\n            })\n        }\n\n        response.success = success\n        response.error = error\n        response.noContent = noContent\n        response.withMeta = withMeta\n\n        return response\n    }\n}\n\n        \n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Tag.html":{"url":"classes/Tag.html","title":"class - Tag","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Tag\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/tags/tag.model.ts\n        \n\n\n            \n                Extends\n            \n            \n                        BaseModel\n            \n\n            \n                Implements\n            \n            \n                            ITag\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                jsonSchema\n                            \n                            \n                                name\n                            \n                            \n                                    Static\n                                tableName\n                            \n                            \n                                created_at\n                            \n                            \n                                    Optional\n                                deleted_at\n                            \n                            \n                                    Static\n                                hidden\n                            \n                            \n                                id\n                            \n                            \n                                    Static\n                                QueryBuilder\n                            \n                            \n                                QueryBuilderType\n                            \n                            \n                                updated_at\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                fetchRelation\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            jsonSchema\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     JSONSchema\n\n                        \n                    \n                    \n                        \n                            Default value : {\n        type: 'object',\n        required: ['name'],\n        properties: {\n            id: { type: 'integer' },\n            name: { type: 'string', minLength: 2, maxLength: 255 },\n        },\n    }\n                        \n                    \n                        \n                            \n                                    Defined in src/tags/tag.model.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/tags/tag.model.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            tableName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'tags'\n                        \n                    \n                        \n                            \n                                    Defined in src/tags/tag.model.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            created_at\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseModel:35\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            deleted_at\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     any | null\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseModel:39\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            hidden\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : ['salt', 'password', 'created_at', 'updated_at', 'deleted_at']\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseModel:27\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseModel:33\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            QueryBuilder\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : CustomQueryBuilder\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseModel:31\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            QueryBuilderType\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         CustomQueryBuilder<>\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseModel:29\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updated_at\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseModel:37\n\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            fetchRelation\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    fetchRelation(expression: RelationExpression, options: object)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseModel\n\n                \n            \n            \n                \n                        Defined in         BaseModel:42\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    expression\n                                    \n                                            RelationExpression\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    options\n                                    \n                                                object\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType as MappedPartialType } from '@nestjs/mapped-types'\nimport { ApiProperty, PartialType } from '@nestjs/swagger'\n\nimport { IsNotEmpty, IsString, MaxLength, MinLength } from 'class-validator'\nimport type { JSONSchema } from 'objection'\n\nimport { BaseModel } from '../database/models/base.model'\n\ninterface ITag {\n    name: string\n}\n\nexport class Tag extends BaseModel implements ITag {\n    static tableName = 'tags'\n\n    @ApiProperty() name: string\n\n    // JSON schema is not the database schema! Nothing is generated based on this.\n    // This is only used for validation. Whenever a model instance is created it is checked against this schema.\n    static jsonSchema: JSONSchema = {\n        type: 'object',\n        required: ['name'],\n        properties: {\n            id: { type: 'integer' },\n            name: { type: 'string', minLength: 2, maxLength: 255 },\n        },\n    }\n}\n\nexport class CreateTagsDto implements ITag {\n    @ApiProperty()\n    @IsString()\n    @IsNotEmpty()\n    @MinLength(2)\n    @MaxLength(36)\n    name: string\n}\n\nexport class UpdateTagsDto extends PartialType(CreateTagsDto) {}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/TagsController.html":{"url":"controllers/TagsController.html","title":"controller - TagsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  TagsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/tags/tags.controller.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                delete\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            create\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    create(tag: CreateTagsDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n            \n                \n                    Defined in src/tags/tags.controller.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    tag\n                                    \n                                                CreateTagsDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            delete\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n            \n                \n                    Defined in src/tags/tags.controller.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findAll\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/tags/tags.controller.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     {}\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findOne\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n            \n                \n                    Defined in src/tags/tags.controller.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            update\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: number, updatedTag: UpdateTagsDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Put(':id')\n                \n            \n\n            \n                \n                    Defined in src/tags/tags.controller.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updatedTag\n                                    \n                                                UpdateTagsDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        /* eslint-disable no-use-before-define,@typescript-eslint/no-unused-vars */\nimport {\n    Body,\n    Controller,\n    Delete,\n    Get,\n    Param,\n    ParseIntPipe,\n    Post,\n    Put,\n} from '@nestjs/common'\nimport { ApiTags } from '@nestjs/swagger'\n\nimport { CreateTagsDto, UpdateTagsDto } from './tag.model'\nimport { TagsService } from './tags.service'\n\n@Controller(TagsController.path)\n@ApiTags(TagsController.name)\nexport class TagsController {\n    static path = 'tags'\n\n    constructor(private service: TagsService) {}\n\n    @Get()\n    async findAll() {\n        return this.service.findAll()\n    }\n\n    @Get(':id')\n    async findOne(@Param('id', ParseIntPipe) id: number) {\n        return this.service.findOne(id)\n    }\n\n    @Post()\n    async create(@Body() tag: CreateTagsDto) {\n        return this.service.create(tag)\n    }\n\n    @Delete(':id')\n    async delete(@Param('id', ParseIntPipe) id: number) {\n        return this.service.delete(id)\n    }\n\n    @Put(':id')\n    async update(\n        @Param('id', ParseIntPipe) id: number,\n        @Body() updatedTag: UpdateTagsDto,\n    ) {\n        return this.service.update(id, updatedTag)\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TagsModule.html":{"url":"modules/TagsModule.html","title":"module - TagsModule","body":"\n                   \n\n\n\n\n    Modules\n    TagsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TagsModule\n\n\n\ncluster_TagsModule_providers\n\n\n\ncluster_TagsModule_exports\n\n\n\n\nTagsService \n\nTagsService \n\n\n\nTagsModule\n\nTagsModule\n\nTagsService  -->\n\nTagsModule->TagsService \n\n\n\n\n\nTagsService\n\nTagsService\n\nTagsModule -->\n\nTagsService->TagsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/tags/tags.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            TagsService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            TagsController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            TagsService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common'\n\nimport { TagsController } from './tags.controller'\nimport { TagsService } from './tags.service'\n\n@Module({\n    controllers: [TagsController],\n    providers: [TagsService],\n    exports: [TagsService],\n})\nexport class TagsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TagsService.html":{"url":"injectables/TagsService.html","title":"injectable - TagsService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  TagsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/tags/tags.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                delete\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(tag: ModelClass)\n                    \n                \n                        \n                            \n                                Defined in src/tags/tags.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        tag\n                                                  \n                                                        \n                                                                        ModelClass\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            create\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    create(tag)\n                \n            \n\n\n            \n                \n                    Defined in src/tags/tags.service.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    tag\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            delete\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/tags/tags.service.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findAll\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll()\n                \n            \n\n\n            \n                \n                    Defined in src/tags/tags.service.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     {}\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findOne\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/tags/tags.service.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            update\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: number, tag)\n                \n            \n\n\n            \n                \n                    Defined in src/tags/tags.service.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    tag\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Inject, Injectable } from '@nestjs/common'\n\nimport { ModelClass, transaction } from 'objection'\n\nimport { Tag } from './tag.model'\n\n@Injectable()\nexport class TagsService {\n    constructor(@Inject(Tag.name) private tag: ModelClass) {}\n\n    async findAll() {\n        return this.tag.query()\n    }\n\n    async findOne(id: number) {\n        return this.tag.query().findById(id)\n    }\n\n    async create(tag) {\n        return this.tag.query().insert(tag).returning('*')\n    }\n\n    async update(id: number, tag) {\n        return this.tag.query().patch(tag).where({ id }).returning('*').first()\n    }\n\n    async delete(id: number) {\n        return transaction(this.tag, async (_, trx) => {\n            return this.tag\n                .query()\n                .deleteById(id)\n                .returning('*')\n                .first()\n                .transacting(trx)\n        })\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TimeoutInterceptor.html":{"url":"injectables/TimeoutInterceptor.html","title":"injectable - TimeoutInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  TimeoutInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/infra/interceptors/timeout.ts\n        \n\n            \n                Description\n            \n            \n                Timeout interceptor is Observer which terminate request if it takes more than timeout value\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            intercept\n                        \n                        \n                    \n                \n            \n            \n                \nintercept(context: ExecutionContext, next: CallHandler)\n                \n            \n\n\n            \n                \n                    Defined in src/infra/interceptors/timeout.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                            CallHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n    Injectable,\n    NestInterceptor,\n    ExecutionContext,\n    CallHandler,\n    RequestTimeoutException,\n} from '@nestjs/common'\n\nimport { Observable, throwError, TimeoutError } from 'rxjs'\nimport { catchError, timeout } from 'rxjs/operators'\n\n/**\n * Timeout interceptor is Observer which terminate request if it takes more than timeout value\n */\n@Injectable()\nexport class TimeoutInterceptor implements NestInterceptor {\n    intercept(context: ExecutionContext, next: CallHandler): Observable {\n        return next.handle().pipe(\n            timeout(10000), // end request after 10_000 milliseconds\n\n            catchError((e) => {\n                if (e instanceof TimeoutError) {\n                    return throwError(new RequestTimeoutException())\n                }\n\n                return throwError(e)\n            }),\n        )\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TransformInterceptor.html":{"url":"injectables/TransformInterceptor.html","title":"injectable - TransformInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  TransformInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/infra/interceptors/transform.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            intercept\n                        \n                        \n                    \n                \n            \n            \n                \nintercept(context: ExecutionContext, next: CallHandler)\n                \n            \n\n\n            \n                \n                    Defined in src/infra/interceptors/transform.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                            CallHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n    Injectable,\n    NestInterceptor,\n    ExecutionContext,\n    CallHandler,\n} from '@nestjs/common'\n\nimport { Observable } from 'rxjs'\nimport { map } from 'rxjs/operators'\n\nexport interface Response {\n    data: T\n}\n\n@Injectable()\nexport class TransformInterceptor implements NestInterceptor> {\n    intercept(\n        context: ExecutionContext,\n        next: CallHandler,\n    ): Observable> {\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n        return next.handle().pipe(map((data) => ({ data })))\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateTagsDto.html":{"url":"classes/UpdateTagsDto.html","title":"class - UpdateTagsDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateTagsDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/tags/tag.model.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType as MappedPartialType } from '@nestjs/mapped-types'\nimport { ApiProperty, PartialType } from '@nestjs/swagger'\n\nimport { IsNotEmpty, IsString, MaxLength, MinLength } from 'class-validator'\nimport type { JSONSchema } from 'objection'\n\nimport { BaseModel } from '../database/models/base.model'\n\ninterface ITag {\n    name: string\n}\n\nexport class Tag extends BaseModel implements ITag {\n    static tableName = 'tags'\n\n    @ApiProperty() name: string\n\n    // JSON schema is not the database schema! Nothing is generated based on this.\n    // This is only used for validation. Whenever a model instance is created it is checked against this schema.\n    static jsonSchema: JSONSchema = {\n        type: 'object',\n        required: ['name'],\n        properties: {\n            id: { type: 'integer' },\n            name: { type: 'string', minLength: 2, maxLength: 255 },\n        },\n    }\n}\n\nexport class CreateTagsDto implements ITag {\n    @ApiProperty()\n    @IsString()\n    @IsNotEmpty()\n    @MinLength(2)\n    @MaxLength(36)\n    name: string\n}\n\nexport class UpdateTagsDto extends PartialType(CreateTagsDto) {}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateUserDto.html":{"url":"classes/UpdateUserDto.html","title":"class - UpdateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/user.model.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType as MappedPartialType } from '@nestjs/mapped-types'\nimport { ApiProperty, PartialType } from '@nestjs/swagger'\n\nimport {\n    IsString,\n    MinLength,\n    IsNotEmpty,\n    IsOptional,\n    MaxLength,\n    IsEmail,\n    IsBoolean,\n} from 'class-validator'\nimport type { JSONSchema, Modifiers } from 'objection'\n\nimport { BaseModel } from '../database/models/base.model'\n\ninterface IUser {\n    username: string\n    email: string\n    firstName: string\n    lastName: string\n    isActive: boolean\n    password: string\n}\n\nexport class User extends BaseModel implements IUser {\n    static tableName = 'users'\n\n    username: string\n\n    email: string\n\n    firstName: string\n\n    lastName: string\n\n    isActive: boolean\n\n    password: string\n\n    // JSON schema is not the database schema! Nothing is generated based on this.\n    // This is only used for validation. Whenever a model instance is created it is checked against this schema.\n    static jsonSchema: JSONSchema = {\n        type: 'object',\n        required: ['username', 'email', 'password'],\n        properties: {\n            id: { type: 'integer', readOnly: true },\n            username: { type: 'string', minLength: 3, maxLength: 255 },\n            email: {\n                type: 'string',\n                minLength: 3,\n                maxLength: 255,\n                format: 'email',\n            },\n            password: { type: 'string', minLength: 8, maxLength: 255 },\n            firstName: { type: 'string', minLength: 1, maxLength: 255 },\n            lastName: { type: 'string', minLength: 1, maxLength: 255 },\n            isActive: { type: 'boolean' },\n        },\n    }\n\n    // Modifiers are reusable query snippets that can be used in various places.\n    static modifiers: Modifiers = {\n        // Our example modifier is a a semi-dumb fuzzy name match. We split the name into pieces using whitespace\n        // and then try to partially match each of those pieces to both the `firstName` and the `lastName` fields.\n\n        searchByName(query, name: string) {\n            // This `where` simply creates parentheses so that other `where` statements don't get mixed with the these.\n\n            query.where((q) => {\n                for (const namePart of name.trim().split(/\\s+/)) {\n                    for (const column of ['firstName', 'lastName']) {\n                        q.orWhereRaw('lower(??) like ?', [\n                            column,\n                            `${namePart.toLowerCase()}%`,\n                        ])\n                    }\n                }\n            })\n        },\n    }\n}\n\nexport class CreateUserDto implements IUser {\n    @ApiProperty()\n    @IsString()\n    @IsNotEmpty()\n    @MinLength(2)\n    @MaxLength(36)\n    username: string\n\n    @ApiProperty()\n    @IsEmail()\n    @IsNotEmpty()\n    @MinLength(2)\n    email: string\n\n    @ApiProperty()\n    @IsString()\n    @IsNotEmpty()\n    @MinLength(8)\n    password: string\n\n    @ApiProperty()\n    @IsString()\n    @IsNotEmpty()\n    @MinLength(2)\n    firstName: string\n\n    @ApiProperty()\n    @IsOptional()\n    middleName: string\n\n    @ApiProperty()\n    @IsString()\n    @IsNotEmpty()\n    @MinLength(2)\n    lastName: string\n\n    @ApiProperty()\n    @IsBoolean()\n    isActive: boolean\n}\n\nexport class UpdateUserDto extends PartialType(CreateUserDto) {}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/User.html":{"url":"classes/User.html","title":"class - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/user.model.ts\n        \n\n\n            \n                Extends\n            \n            \n                        BaseModel\n            \n\n            \n                Implements\n            \n            \n                            IUser\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                email\n                            \n                            \n                                firstName\n                            \n                            \n                                isActive\n                            \n                            \n                                    Static\n                                jsonSchema\n                            \n                            \n                                lastName\n                            \n                            \n                                    Static\n                                modifiers\n                            \n                            \n                                password\n                            \n                            \n                                    Static\n                                tableName\n                            \n                            \n                                username\n                            \n                            \n                                created_at\n                            \n                            \n                                    Optional\n                                deleted_at\n                            \n                            \n                                    Static\n                                hidden\n                            \n                            \n                                id\n                            \n                            \n                                    Static\n                                QueryBuilder\n                            \n                            \n                                QueryBuilderType\n                            \n                            \n                                updated_at\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                fetchRelation\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            email\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/users/user.model.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            firstName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/users/user.model.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isActive\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/users/user.model.ts:38\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            jsonSchema\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     JSONSchema\n\n                        \n                    \n                    \n                        \n                            Default value : {\n        type: 'object',\n        required: ['username', 'email', 'password'],\n        properties: {\n            id: { type: 'integer', readOnly: true },\n            username: { type: 'string', minLength: 3, maxLength: 255 },\n            email: {\n                type: 'string',\n                minLength: 3,\n                maxLength: 255,\n                format: 'email',\n            },\n            password: { type: 'string', minLength: 8, maxLength: 255 },\n            firstName: { type: 'string', minLength: 1, maxLength: 255 },\n            lastName: { type: 'string', minLength: 1, maxLength: 255 },\n            isActive: { type: 'boolean' },\n        },\n    }\n                        \n                    \n                        \n                            \n                                    Defined in src/users/user.model.ts:44\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            lastName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/users/user.model.ts:36\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            modifiers\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Modifiers\n\n                        \n                    \n                    \n                        \n                            Default value : {\n        // Our example modifier is a a semi-dumb fuzzy name match. We split the name into pieces using whitespace\n        // and then try to partially match each of those pieces to both the `firstName` and the `lastName` fields.\n\n        searchByName(query, name: string) {\n            // This `where` simply creates parentheses so that other `where` statements don't get mixed with the these.\n\n            query.where((q) => {\n                for (const namePart of name.trim().split(/\\s+/)) {\n                    for (const column of ['firstName', 'lastName']) {\n                        q.orWhereRaw('lower(??) like ?', [\n                            column,\n                            `${namePart.toLowerCase()}%`,\n                        ])\n                    }\n                }\n            })\n        },\n    }\n                        \n                    \n                        \n                            \n                                    Defined in src/users/user.model.ts:64\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            password\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/users/user.model.ts:40\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            tableName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'users'\n                        \n                    \n                        \n                            \n                                    Defined in src/users/user.model.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            username\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/users/user.model.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            created_at\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseModel:35\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            deleted_at\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     any | null\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseModel:39\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            hidden\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : ['salt', 'password', 'created_at', 'updated_at', 'deleted_at']\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseModel:27\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseModel:33\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            QueryBuilder\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : CustomQueryBuilder\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseModel:31\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            QueryBuilderType\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         CustomQueryBuilder<>\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseModel:29\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updated_at\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseModel:37\n\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            fetchRelation\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    fetchRelation(expression: RelationExpression, options: object)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseModel\n\n                \n            \n            \n                \n                        Defined in         BaseModel:42\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    expression\n                                    \n                                            RelationExpression\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    options\n                                    \n                                                object\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType as MappedPartialType } from '@nestjs/mapped-types'\nimport { ApiProperty, PartialType } from '@nestjs/swagger'\n\nimport {\n    IsString,\n    MinLength,\n    IsNotEmpty,\n    IsOptional,\n    MaxLength,\n    IsEmail,\n    IsBoolean,\n} from 'class-validator'\nimport type { JSONSchema, Modifiers } from 'objection'\n\nimport { BaseModel } from '../database/models/base.model'\n\ninterface IUser {\n    username: string\n    email: string\n    firstName: string\n    lastName: string\n    isActive: boolean\n    password: string\n}\n\nexport class User extends BaseModel implements IUser {\n    static tableName = 'users'\n\n    username: string\n\n    email: string\n\n    firstName: string\n\n    lastName: string\n\n    isActive: boolean\n\n    password: string\n\n    // JSON schema is not the database schema! Nothing is generated based on this.\n    // This is only used for validation. Whenever a model instance is created it is checked against this schema.\n    static jsonSchema: JSONSchema = {\n        type: 'object',\n        required: ['username', 'email', 'password'],\n        properties: {\n            id: { type: 'integer', readOnly: true },\n            username: { type: 'string', minLength: 3, maxLength: 255 },\n            email: {\n                type: 'string',\n                minLength: 3,\n                maxLength: 255,\n                format: 'email',\n            },\n            password: { type: 'string', minLength: 8, maxLength: 255 },\n            firstName: { type: 'string', minLength: 1, maxLength: 255 },\n            lastName: { type: 'string', minLength: 1, maxLength: 255 },\n            isActive: { type: 'boolean' },\n        },\n    }\n\n    // Modifiers are reusable query snippets that can be used in various places.\n    static modifiers: Modifiers = {\n        // Our example modifier is a a semi-dumb fuzzy name match. We split the name into pieces using whitespace\n        // and then try to partially match each of those pieces to both the `firstName` and the `lastName` fields.\n\n        searchByName(query, name: string) {\n            // This `where` simply creates parentheses so that other `where` statements don't get mixed with the these.\n\n            query.where((q) => {\n                for (const namePart of name.trim().split(/\\s+/)) {\n                    for (const column of ['firstName', 'lastName']) {\n                        q.orWhereRaw('lower(??) like ?', [\n                            column,\n                            `${namePart.toLowerCase()}%`,\n                        ])\n                    }\n                }\n            })\n        },\n    }\n}\n\nexport class CreateUserDto implements IUser {\n    @ApiProperty()\n    @IsString()\n    @IsNotEmpty()\n    @MinLength(2)\n    @MaxLength(36)\n    username: string\n\n    @ApiProperty()\n    @IsEmail()\n    @IsNotEmpty()\n    @MinLength(2)\n    email: string\n\n    @ApiProperty()\n    @IsString()\n    @IsNotEmpty()\n    @MinLength(8)\n    password: string\n\n    @ApiProperty()\n    @IsString()\n    @IsNotEmpty()\n    @MinLength(2)\n    firstName: string\n\n    @ApiProperty()\n    @IsOptional()\n    middleName: string\n\n    @ApiProperty()\n    @IsString()\n    @IsNotEmpty()\n    @MinLength(2)\n    lastName: string\n\n    @ApiProperty()\n    @IsBoolean()\n    isActive: boolean\n}\n\nexport class UpdateUserDto extends PartialType(CreateUserDto) {}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UserPost.html":{"url":"interfaces/UserPost.html","title":"interface - UserPost","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  UserPost\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/domain.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        adCorporateLogoUrl\n                                \n                                \n                                        commentsCount\n                                \n                                \n                                        corporateDescription\n                                \n                                \n                                        corporateName\n                                \n                                \n                                        isUserReactedToPost\n                                \n                                \n                                        ownPage\n                                \n                                \n                                        postBy\n                                \n                                \n                                        postId\n                                \n                                \n                                        postImage\n                                \n                                \n                                        postTime\n                                \n                                \n                                        postType\n                                \n                                \n                                        postVideo\n                                \n                                \n                                        reactionsCount\n                                \n                                \n                                        timeAgo\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        adCorporateLogoUrl\n                                    \n                                \n                                \n                                    \n                                        adCorporateLogoUrl:     string | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        commentsCount\n                                    \n                                \n                                \n                                    \n                                        commentsCount:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        corporateDescription\n                                    \n                                \n                                \n                                    \n                                        corporateDescription:     string | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        corporateName\n                                    \n                                \n                                \n                                    \n                                        corporateName:     string | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isUserReactedToPost\n                                    \n                                \n                                \n                                    \n                                        isUserReactedToPost:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ownPage\n                                    \n                                \n                                \n                                    \n                                        ownPage:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        postBy\n                                    \n                                \n                                \n                                    \n                                        postBy:         PostedByUser\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         PostedByUser\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        postId\n                                    \n                                \n                                \n                                    \n                                        postId:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        postImage\n                                    \n                                \n                                \n                                    \n                                        postImage:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        postTime\n                                    \n                                \n                                \n                                    \n                                        postTime:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        postType\n                                    \n                                \n                                \n                                    \n                                        postType:         PostType\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         PostType\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        postVideo\n                                    \n                                \n                                \n                                    \n                                        postVideo:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        reactionsCount\n                                    \n                                \n                                \n                                    \n                                        reactionsCount:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        timeAgo\n                                    \n                                \n                                \n                                    \n                                        timeAgo:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { HttpStatus } from '@nestjs/common'\n\nexport type Result =\n    | GetAppLaunchData\n    | GetUserProfile\n    | GetUserPosts\n    | GetComments\n    | GetRescueList\n    | GetFollowers\n    | GetFollowing\n\nexport type APIError = Error | string | null\n\nexport interface APIResponse {\n    data: T\n    error: APIError\n    message: string | string[]\n    statusCode: HttpStatus\n\n    count?: number\n    page?: number\n    pageCount?: number\n    total?: number\n}\n\nexport interface GetAppLaunchData {\n    link: 'api:/'\n    response: APIResponse\n}\n\nexport interface GetUserProfile {\n    link: 'api:v1/user/getUserProfile?userId=25'\n    response: APIResponse\n}\n\nexport interface GetUserPosts {\n    link: 'api:v1/user/getUserPosts?pageNo=0&pageSize=25'\n    response: APIResponse\n}\n\nexport interface GetRescueList {\n    link: 'api:v1/rescue/getRescueList?pageNo=0&pageSize=10&status=pending|inProgress|completed|nearest'\n    response: APIResponse\n}\n\nexport interface GetComments {\n    link: 'api:v1/rescue/getComments?pageNo=0&pageSize=10&postId=1230'\n    response: APIResponse\n}\n\nexport interface GetFollowers {\n    link: 'api:v1/rescue/getUserFollowers?userId=1230'\n    response: APIResponse\n}\n\nexport interface GetFollowing {\n    link: 'api:v1/rescue/getUserFollowing?userId=1230'\n    response: APIResponse\n}\n\nexport interface AppLaunchAction {\n    actionId: number\n    action: string\n    isActive: boolean\n    subject?: string\n}\n\nexport interface User {\n    usesId: number\n\n    coverImage: string\n    following: boolean\n    gender: string\n    isOwnProfile: number\n    isRescuer: boolean\n    latitude: number\n    longitude: number\n    numberOfFollowers: number\n    numberOfFollowing: number\n    numberOfPosts: number\n    numberOfRescuesCompleted: number\n    numberOfRescuesCreated: number\n    numberOfRescuesInProgress: number\n    profileImage: string\n    rescuer: boolean\n    userAddress: string\n    userContacts: string\n    userEmail: string\n    userName: string\n    badge: {\n        badgeId: number\n        badgeName: string\n        badgeDescription: string\n        recuesCompletionNeeded: number\n    }\n    setting: {\n        showMyContacts: boolean\n        getNotifications: boolean\n    }\n}\n\nexport interface PostType {\n    postTypeId: number\n    postType: string\n}\n\nexport interface PostedByUser {\n    usesId: number\n    badgeName: string\n    following: boolean\n    profileImage: string\n    rescuer: boolean\n    userName: string\n}\n\nexport interface UserPost {\n    postId: number\n    commentsCount: number\n    isUserReactedToPost: boolean\n    ownPage: boolean\n    postBy: PostedByUser\n    postImage: string\n    postTime: string\n    postType: PostType\n    postVideo: string\n    reactionsCount: number\n    timeAgo: string\n\n    adCorporateLogoUrl: string | null\n    corporateDescription: string | null\n    corporateName: string | null\n}\n\nexport interface UserPosts {\n    isRecent: boolean\n    feed: UserPost[]\n}\n\nexport interface Rescues {\n    rescueId: number\n    animalImageUrl: string\n    distance: number\n    distanceAway: string\n    emergencyType: string\n    postedBy: string\n    postedMinAgo: string\n    rescueDate: Date\n    rescuedPetName: string\n    rescueLocality: string\n    rescuers: {\n        contact: number\n        name: string\n        profileId: number\n        profileImageUrl: string\n        rescues: boolean\n        showMyNumber: boolean\n    }\n    rescueStatus: string\n    viewsCont: number\n}\n\nexport interface RescueLists {\n    rescues: Rescues[]\n}\n\nexport interface Comment {\n    commentId: number\n    comment: string\n    commentedUseName: string\n    commentedUserId: number\n    timeAgo: string\n}\n\nexport interface Comments {\n    comments: Comment[]\n}\n\nexport interface Follower {\n    userId: number\n    userName: string\n    profileImage: string\n    areYouFollowing: boolean\n    showRemoveOption: boolean\n}\n\nexport interface Following extends Follower {}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UserPosts.html":{"url":"interfaces/UserPosts.html","title":"interface - UserPosts","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  UserPosts\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/domain.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        feed\n                                \n                                \n                                        isRecent\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        feed\n                                    \n                                \n                                \n                                    \n                                        feed:         UserPost[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         UserPost[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isRecent\n                                    \n                                \n                                \n                                    \n                                        isRecent:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { HttpStatus } from '@nestjs/common'\n\nexport type Result =\n    | GetAppLaunchData\n    | GetUserProfile\n    | GetUserPosts\n    | GetComments\n    | GetRescueList\n    | GetFollowers\n    | GetFollowing\n\nexport type APIError = Error | string | null\n\nexport interface APIResponse {\n    data: T\n    error: APIError\n    message: string | string[]\n    statusCode: HttpStatus\n\n    count?: number\n    page?: number\n    pageCount?: number\n    total?: number\n}\n\nexport interface GetAppLaunchData {\n    link: 'api:/'\n    response: APIResponse\n}\n\nexport interface GetUserProfile {\n    link: 'api:v1/user/getUserProfile?userId=25'\n    response: APIResponse\n}\n\nexport interface GetUserPosts {\n    link: 'api:v1/user/getUserPosts?pageNo=0&pageSize=25'\n    response: APIResponse\n}\n\nexport interface GetRescueList {\n    link: 'api:v1/rescue/getRescueList?pageNo=0&pageSize=10&status=pending|inProgress|completed|nearest'\n    response: APIResponse\n}\n\nexport interface GetComments {\n    link: 'api:v1/rescue/getComments?pageNo=0&pageSize=10&postId=1230'\n    response: APIResponse\n}\n\nexport interface GetFollowers {\n    link: 'api:v1/rescue/getUserFollowers?userId=1230'\n    response: APIResponse\n}\n\nexport interface GetFollowing {\n    link: 'api:v1/rescue/getUserFollowing?userId=1230'\n    response: APIResponse\n}\n\nexport interface AppLaunchAction {\n    actionId: number\n    action: string\n    isActive: boolean\n    subject?: string\n}\n\nexport interface User {\n    usesId: number\n\n    coverImage: string\n    following: boolean\n    gender: string\n    isOwnProfile: number\n    isRescuer: boolean\n    latitude: number\n    longitude: number\n    numberOfFollowers: number\n    numberOfFollowing: number\n    numberOfPosts: number\n    numberOfRescuesCompleted: number\n    numberOfRescuesCreated: number\n    numberOfRescuesInProgress: number\n    profileImage: string\n    rescuer: boolean\n    userAddress: string\n    userContacts: string\n    userEmail: string\n    userName: string\n    badge: {\n        badgeId: number\n        badgeName: string\n        badgeDescription: string\n        recuesCompletionNeeded: number\n    }\n    setting: {\n        showMyContacts: boolean\n        getNotifications: boolean\n    }\n}\n\nexport interface PostType {\n    postTypeId: number\n    postType: string\n}\n\nexport interface PostedByUser {\n    usesId: number\n    badgeName: string\n    following: boolean\n    profileImage: string\n    rescuer: boolean\n    userName: string\n}\n\nexport interface UserPost {\n    postId: number\n    commentsCount: number\n    isUserReactedToPost: boolean\n    ownPage: boolean\n    postBy: PostedByUser\n    postImage: string\n    postTime: string\n    postType: PostType\n    postVideo: string\n    reactionsCount: number\n    timeAgo: string\n\n    adCorporateLogoUrl: string | null\n    corporateDescription: string | null\n    corporateName: string | null\n}\n\nexport interface UserPosts {\n    isRecent: boolean\n    feed: UserPost[]\n}\n\nexport interface Rescues {\n    rescueId: number\n    animalImageUrl: string\n    distance: number\n    distanceAway: string\n    emergencyType: string\n    postedBy: string\n    postedMinAgo: string\n    rescueDate: Date\n    rescuedPetName: string\n    rescueLocality: string\n    rescuers: {\n        contact: number\n        name: string\n        profileId: number\n        profileImageUrl: string\n        rescues: boolean\n        showMyNumber: boolean\n    }\n    rescueStatus: string\n    viewsCont: number\n}\n\nexport interface RescueLists {\n    rescues: Rescues[]\n}\n\nexport interface Comment {\n    commentId: number\n    comment: string\n    commentedUseName: string\n    commentedUserId: number\n    timeAgo: string\n}\n\nexport interface Comments {\n    comments: Comment[]\n}\n\nexport interface Follower {\n    userId: number\n    userName: string\n    profileImage: string\n    areYouFollowing: boolean\n    showRemoveOption: boolean\n}\n\nexport interface Following extends Follower {}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UsersController.html":{"url":"controllers/UsersController.html","title":"controller - UsersController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UsersController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/users.controller.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            create\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    create(user: CreateUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'Create a User', description: 'Create a new User and store it in database'})@Post()\n                \n            \n\n            \n                \n                    Defined in src/users/users.controller.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                CreateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findAll\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'Get all of the users', description: 'Get all of the users'})@Get()\n                \n            \n\n            \n                \n                    Defined in src/users/users.controller.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     {}\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findOne\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'Get one users by id', description: 'Get one users by id'})@Get(':id')\n                \n            \n\n            \n                \n                    Defined in src/users/users.controller.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            remove\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    remove(id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'Delete one users by id', description: 'Delete one users by id'})@Delete(':id')\n                \n            \n\n            \n                \n                    Defined in src/users/users.controller.ts:68\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            update\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: number, updatedUser: UpdateUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'Update one users by id', description: 'Update one users by id'})@Put(':id')\n                \n            \n\n            \n                \n                    Defined in src/users/users.controller.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updatedUser\n                                    \n                                                UpdateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        /* eslint-disable no-use-before-define,@typescript-eslint/no-unsafe-call */\nimport {\n    Controller,\n    Get,\n    Post,\n    Body,\n    Put,\n    Param,\n    Delete,\n    ParseIntPipe,\n} from '@nestjs/common'\nimport { ApiOperation, ApiTags } from '@nestjs/swagger'\n\nimport { CreateUserDto, UpdateUserDto } from './user.model'\nimport { UsersService } from './users.service'\n\n@Controller(UsersController.path)\n@ApiTags(UsersController.name)\nexport class UsersController {\n    static path = 'users'\n\n    constructor(private readonly service: UsersService) {}\n\n    @ApiOperation({\n        summary: 'Create a User',\n        description: 'Create a new User and store it in database',\n    })\n    @Post()\n    async create(@Body() user: CreateUserDto) {\n        return this.service.create(user)\n    }\n\n    @ApiOperation({\n        summary: 'Get all of the users',\n        description: 'Get all of the users',\n    })\n    @Get()\n    async findAll() {\n        return this.service.findAll()\n    }\n\n    @ApiOperation({\n        summary: 'Get one users by id',\n        description: 'Get one users by id',\n    })\n    @Get(':id')\n    async findOne(@Param('id', ParseIntPipe) id: number) {\n        return this.service.findOne(id)\n    }\n\n    @ApiOperation({\n        summary: 'Update one users by id',\n        description: 'Update one users by id',\n    })\n    @Put(':id')\n    async update(\n        @Param('id', ParseIntPipe) id: number,\n        @Body() updatedUser: UpdateUserDto,\n    ) {\n        return this.service.update(id, updatedUser)\n    }\n\n    @ApiOperation({\n        summary: 'Delete one users by id',\n        description: 'Delete one users by id',\n    })\n    @Delete(':id')\n    async remove(@Param('id', ParseIntPipe) id: number) {\n        return this.service.remove(id)\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UsersModule.html":{"url":"modules/UsersModule.html","title":"module - UsersModule","body":"\n                   \n\n\n\n\n    Modules\n    UsersModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_exports\n\n\n\ncluster_UsersModule_providers\n\n\n\n\nUsersService \n\nUsersService \n\n\n\nUsersModule\n\nUsersModule\n\nUsersService  -->\n\nUsersModule->UsersService \n\n\n\n\n\nUsersService\n\nUsersService\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/users/users.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            UsersService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            UsersController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            UsersService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common'\n\nimport { UsersController } from './users.controller'\nimport { UsersService } from './users.service'\n\n@Module({\n    controllers: [UsersController],\n    providers: [UsersService],\n    exports: [UsersService],\n})\nexport class UsersModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UsersService.html":{"url":"injectables/UsersService.html","title":"injectable - UsersService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  UsersService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/users.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(user: ModelClass)\n                    \n                \n                        \n                            \n                                Defined in src/users/users.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        user\n                                                  \n                                                        \n                                                                        ModelClass\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            create\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    create(user)\n                \n            \n\n\n            \n                \n                    Defined in src/users/users.service.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findAll\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll()\n                \n            \n\n\n            \n                \n                    Defined in src/users/users.service.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     {}\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findOne\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/users/users.service.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            remove\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    remove(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/users/users.service.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            update\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: number, user)\n                \n            \n\n\n            \n                \n                    Defined in src/users/users.service.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Inject, Injectable } from '@nestjs/common'\n\nimport { ModelClass } from 'objection'\n\nimport { User } from './user.model'\n\n@Injectable()\nexport class UsersService {\n    constructor(@Inject(User.name) private user: ModelClass) {}\n\n    async create(user) {\n        return this.user.query().insertAndFetch(user)\n    }\n\n    async findAll() {\n        return this.user.query()\n    }\n\n    async findOne(id: number) {\n        return this.user.query().findById(id).first() // .throwIfNotFound()\n    }\n\n    async update(id: number, user) {\n        return this.user.query().patchAndFetchById(id, user)\n    }\n\n    async remove(id: number) {\n        return Promise.resolve(`This action removes a #${id} user`)\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ValidationFailedFilter.html":{"url":"classes/ValidationFailedFilter.html","title":"class - ValidationFailedFilter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ValidationFailedFilter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/infra/filters/validation-failed.filter.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        ExceptionFilter\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                catch\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            catch\n                        \n                        \n                    \n                \n            \n            \n                \ncatch(exception: ValidationError, host: ArgumentsHost)\n                \n            \n\n\n            \n                \n                    Defined in src/infra/filters/validation-failed.filter.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    exception\n                                    \n                                            ValidationError\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    host\n                                    \n                                            ArgumentsHost\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ArgumentsHost, Catch, ExceptionFilter, HttpStatus } from '@nestjs/common'\n\nimport { ValidationError } from 'objection'\n\n@Catch(ValidationError)\nexport class ValidationFailedFilter implements ExceptionFilter {\n    catch(exception: ValidationError, host: ArgumentsHost) {\n        const ctx = host.switchToHttp()\n        const response = ctx.getResponse()\n        const request = ctx.getRequest()\n        const status = HttpStatus.PRECONDITION_FAILED\n\n        const {\n            statusCode: validationErrorCode,\n            message,\n            data, // ErrorHash?\n            type, // ValidationErrorType\n        } = exception\n\n        // @ts-ignore\n        response.status(status).json({\n            data,\n            type,\n            message,\n            validationErrorCode,\n\n            statusCode: status,\n\n            path: request.url,\n            // timestamp: new Date().toISOString(),\n        })\n    }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app.controller.ts\n            \n            controller\n            AppController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app.module.ts\n            \n            variable\n            ConfigModuleOptions\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/base/DBHelper.ts\n            \n            injectable\n            DBHelper\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/base/crud/crud.controller.ts\n            \n            class\n            CrudController\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/base/crud/crud.service.ts\n            \n            class\n            CrudService\n            \n                8 %\n                (1/12)\n            \n        \n        \n            \n                \n                src/base/crud/icrud.service.ts\n            \n            interface\n            ICrudService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/base/crud/icrud.service.ts\n            \n            interface\n            IPagination\n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                src/base/crud/pagination-params.ts\n            \n            class\n            PaginationParams\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/base/crud/pagination.ts\n            \n            interface\n            IPagination\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/base/crud/try-request.ts\n            \n            interface\n            ITryRequest\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/base/datum/base-entity.ts\n            \n            class\n            BaseEntity\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/base/datum/get-many-dto.ts\n            \n            class\n            GetManyDto\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/base/datum/toHexString.ts\n            \n            function\n            toHexString\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/base/moment-extend.ts\n            \n            variable\n            moment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/cron/cron.service.ts\n            \n            injectable\n            CronService\n            \n                11 %\n                (1/9)\n            \n        \n        \n            \n                \n                src/database/database.module.ts\n            \n            variable\n            modelProviders\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/database/database.module.ts\n            \n            variable\n            models\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/database/database.module.ts\n            \n            variable\n            providers\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/database/migrations/20190609143930_CreateTag.ts\n            \n            function\n            down\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/database/migrations/20190609143930_CreateTag.ts\n            \n            function\n            up\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/database/migrations/20190609143930_CreateTag.ts\n            \n            variable\n            tableName\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/database/migrations/20190609143930_CreateUser.ts\n            \n            function\n            down\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/database/migrations/20190609143930_CreateUser.ts\n            \n            function\n            up\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/database/migrations/20190609143930_CreateUser.ts\n            \n            variable\n            tableName\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/database/models/base.model.ts\n            \n            class\n            BaseModel\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/database/models/base.model.ts\n            \n            interface\n            IBaseModel\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/database/models/helpers.ts\n            \n            class\n            CustomQueryBuilder\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/database/models/helpers.ts\n            \n            function\n            isEmpty\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/database/models/helpers.ts\n            \n            function\n            isNotEmpty\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/database/models/helpers.ts\n            \n            function\n            isObject\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/database/seeds/01-User.ts\n            \n            function\n            seed\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/database/seeds/02-Tag.ts\n            \n            function\n            seed\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/domain.ts\n            \n            interface\n            APIResponse\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/domain.ts\n            \n            interface\n            AppLaunchAction\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/domain.ts\n            \n            interface\n            Comment\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/domain.ts\n            \n            interface\n            Comments\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/domain.ts\n            \n            interface\n            Follower\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/domain.ts\n            \n            interface\n            Following\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/domain.ts\n            \n            interface\n            GetAppLaunchData\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/domain.ts\n            \n            interface\n            GetComments\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/domain.ts\n            \n            interface\n            GetFollowers\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/domain.ts\n            \n            interface\n            GetFollowing\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/domain.ts\n            \n            interface\n            GetRescueList\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/domain.ts\n            \n            interface\n            GetUserPosts\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/domain.ts\n            \n            interface\n            GetUserProfile\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/domain.ts\n            \n            interface\n            PostedByUser\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/domain.ts\n            \n            interface\n            PostType\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/domain.ts\n            \n            interface\n            RescueLists\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/domain.ts\n            \n            interface\n            Rescues\n            \n                0 %\n                (0/14)\n            \n        \n        \n            \n                \n                src/domain.ts\n            \n            interface\n            User\n            \n                0 %\n                (0/23)\n            \n        \n        \n            \n                \n                src/domain.ts\n            \n            interface\n            UserPost\n            \n                0 %\n                (0/15)\n            \n        \n        \n            \n                \n                src/domain.ts\n            \n            interface\n            UserPosts\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/health/health.controller.ts\n            \n            controller\n            HealthController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/infra/filters/query-failed.filter.ts\n            \n            class\n            QueryFailedFilter\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/infra/filters/validation-failed.filter.ts\n            \n            class\n            ValidationFailedFilter\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/infra/guards/req.ts\n            \n            guard\n            RequestGuard\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/infra/guards/res.ts\n            \n            guard\n            ResponseGuard\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/infra/interceptors/null-undefined-override.ts\n            \n            injectable\n            ExcludeNullUndefinedInterceptor\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                src/infra/interceptors/timeout.ts\n            \n            injectable\n            TimeoutInterceptor\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                src/infra/interceptors/transform.ts\n            \n            injectable\n            TransformInterceptor\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/infra/interceptors/transform.ts\n            \n            interface\n            Response\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            setupInfra\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            setupMiddlewares\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            setupSwaggerDocs\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/tags/tag.model.ts\n            \n            class\n            CreateTagsDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/tags/tag.model.ts\n            \n            class\n            Tag\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/tags/tag.model.ts\n            \n            class\n            UpdateTagsDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/tags/tag.model.ts\n            \n            interface\n            ITag\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/tags/tags.controller.ts\n            \n            controller\n            TagsController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/tags/tags.service.ts\n            \n            injectable\n            TagsService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/users/user.model.ts\n            \n            class\n            CreateUserDto\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/users/user.model.ts\n            \n            class\n            UpdateUserDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/users/user.model.ts\n            \n            class\n            User\n            \n                0 %\n                (0/18)\n            \n        \n        \n            \n                \n                src/users/user.model.ts\n            \n            interface\n            IUser\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/users/users.controller.ts\n            \n            controller\n            UsersController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/users/users.service.ts\n            \n            injectable\n            UsersService\n            \n                0 %\n                (0/7)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @hapi/joi : ^17.1.1\n        \n            @nestjs/common : ^7.5.1\n        \n            @nestjs/config : ^0.6.1\n        \n            @nestjs/core : ^7.5.1\n        \n            @nestjs/mapped-types : ^0.1.1\n        \n            @nestjs/passport : ^7.1.3\n        \n            @nestjs/platform-express : ^7.5.1\n        \n            @nestjs/platform-socket.io : ^7.6.5\n        \n            @nestjs/schedule : ^0.4.1\n        \n            @nestjs/serve-static : ^2.1.4\n        \n            @nestjs/swagger : ^4.7.5\n        \n            @nestjs/terminus : ^7.0.1\n        \n            @nestjs/typeorm : ^7.1.5\n        \n            @nestjsx/crud : ^4.6.2\n        \n            @nestjsx/crud-request : ^4.6.2\n        \n            @nestjsx/crud-typeorm : ^4.6.2\n        \n            @types/dotenv : ^8.2.0\n        \n            bcryptjs : ^2.4.3\n        \n            class-transformer : ^0.3.1\n        \n            class-validator : ^0.12.2\n        \n            dotenv : ^8.2.0\n        \n            express-rate-limit : ^5.2.3\n        \n            helmet : ^4.2.0\n        \n            knex : ^0.21.15\n        \n            lodash : ^4.17.20\n        \n            moment : ^2.29.1\n        \n            moment-range : ^4.0.2\n        \n            objection : ^2.2.6\n        \n            objection-db-errors : ^1.1.2\n        \n            objection-find : ^3.0.1\n        \n            objection-visibility : ^1.1.0\n        \n            passport : ^0.4.1\n        \n            passport-local : ^1.0.0\n        \n            pidusage : ^2.0.21\n        \n            reflect-metadata : ^0.1.13\n        \n            rimraf : ^3.0.2\n        \n            rxjs : ^6.6.3\n        \n            source-map-support : ^0.5.19\n        \n            sqlite3 : ^5.0.0\n        \n            swagger-ui-express : ^4.1.5\n        \n            typeorm : ^0.2.29\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            OrderType   (src/.../pagination-params.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/base/crud/pagination-params.ts\n    \n        \n            \n                \n                    \n                        \n                        OrderType\n                    \n                \n                        \n                            \n                                 DESC\n                            \n                        \n                        \n                            \n                                Value : DESC\n                            \n                        \n                        \n                            \n                                 ASC\n                            \n                        \n                        \n                            \n                                Value : ASC\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                        \n                            down   (src/.../20190609143930_CreateTag.ts)\n                        \n                        \n                            down   (src/.../20190609143930_CreateUser.ts)\n                        \n                        \n                            isEmpty   (src/.../helpers.ts)\n                        \n                        \n                            isNotEmpty   (src/.../helpers.ts)\n                        \n                        \n                            isObject   (src/.../helpers.ts)\n                        \n                        \n                            seed   (src/.../01-User.ts)\n                        \n                        \n                            seed   (src/.../02-Tag.ts)\n                        \n                        \n                            setupInfra   (src/.../main.ts)\n                        \n                        \n                            setupMiddlewares   (src/.../main.ts)\n                        \n                        \n                            setupSwaggerDocs   (src/.../main.ts)\n                        \n                        \n                            toHexString   (src/.../toHexString.ts)\n                        \n                        \n                            up   (src/.../20190609143930_CreateTag.ts)\n                        \n                        \n                            up   (src/.../20190609143930_CreateUser.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            bootstrap\n                        \n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setupInfra\n                        \n                        \n                    \n                \n            \n            \n                \nsetupInfra(app)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    app\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setupMiddlewares\n                        \n                        \n                    \n                \n            \n            \n                \nsetupMiddlewares(app)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    app\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setupSwaggerDocs\n                        \n                        \n                    \n                \n            \n            \n                \nsetupSwaggerDocs(app)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    app\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    src/database/migrations/20190609143930_CreateTag.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            down\n                        \n                        \n                    \n                \n            \n            \n                \ndown(knex)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    knex\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            up\n                        \n                        \n                    \n                \n            \n            \n                \nup(knex)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    knex\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    src/database/migrations/20190609143930_CreateUser.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            down\n                        \n                        \n                    \n                \n            \n            \n                \ndown(knex)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    knex\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            up\n                        \n                        \n                    \n                \n            \n            \n                \nup(knex)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    knex\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    src/database/models/helpers.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            isEmpty\n                        \n                        \n                    \n                \n            \n            \n                \nisEmpty(value: any)\n                \n            \n\n\n\n\n            \n                \n                    Check if value is empty\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isNotEmpty\n                        \n                        \n                    \n                \n            \n            \n                \nisNotEmpty(value: any)\n                \n            \n\n\n\n\n            \n                \n                    Check if value is not empty\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isObject\n                        \n                        \n                    \n                \n            \n            \n                \nisObject(value: any)\n                \n            \n\n\n\n\n            \n                \n                    Check if value is of type object.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    src/database/seeds/01-User.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            seed\n                        \n                        \n                    \n                \n            \n            \n                \nseed(knex)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    knex\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    src/database/seeds/02-Tag.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            seed\n                        \n                        \n                    \n                \n            \n            \n                \nseed(knex)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    knex\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    src/base/datum/toHexString.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            toHexString\n                        \n                        \n                    \n                \n            \n            \n                \ntoHexString(value)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n  A progressive Node.js framework for building efficient and scalable server-side applications.\n    \n\n\n\n\n\n\n\n\n  \n    \n  \n\n  \n\nDescription\nNest framework TypeScript starter repository.\nInstallation\n$ npm installRunning the app\n# development\n$ npm run start\n\n# watch mode\n$ npm run start:dev\n\n# production mode\n$ npm run start:prodTest\n# unit tests\n$ npm run test\n\n# e2e tests\n$ npm run test:e2e\n\n# test coverage\n$ npm run test:covSupport\nNest is an MIT-licensed open source project. It can grow thanks to the sponsors and support by the amazing backers. If you'd like to join them, please read more here.\nStay in touch\n\nAuthor - Kamil Myśliwiec\nWebsite - https://nestjs.com\nTwitter - @nestframework\n\nLicense\nNest is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CronModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        DatabaseModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TagsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UsersModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_CronModule\n\n\n\ncluster_CronModule_providers\n\n\n\ncluster_TagsModule\n\n\n\ncluster_TagsModule_exports\n\n\n\ncluster_TagsModule_providers\n\n\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_exports\n\n\n\ncluster_UsersModule_providers\n\n\n\n\nCronModule\n\nCronModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nCronModule->AppModule\n\n\n\n\n\nDatabaseModule\n\nDatabaseModule\n\nAppModule -->\n\nDatabaseModule->AppModule\n\n\n\n\n\nTagsModule\n\nTagsModule\n\nAppModule -->\n\nTagsModule->AppModule\n\n\n\n\n\nTagsService \n\nTagsService \n\nTagsService  -->\n\nTagsModule->TagsService \n\n\n\n\n\nUsersModule\n\nUsersModule\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\nUsersService \n\nUsersService \n\nUsersService  -->\n\nUsersModule->UsersService \n\n\n\n\n\nCronService\n\nCronService\n\nCronModule -->\n\nCronService->CronModule\n\n\n\n\n\nTagsService\n\nTagsService\n\nTagsModule -->\n\nTagsService->TagsModule\n\n\n\n\n\nUsersService\n\nUsersService\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        5 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    4 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    7 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    15 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    2 Guards\n                \n            \n        \n        \n            \n                \n                    \n                    28 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            APIError   (src/.../domain.ts)\n                        \n                        \n                            Result   (src/.../domain.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/domain.ts\n    \n    \n        \n            \n                \n                    \n                    APIError\n                \n            \n            \n                \n                        Error | string | null\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Result\n                \n            \n            \n                \n                            GetAppLaunchData | GetUserProfile | GetUserPosts | GetComments | GetRescueList | GetFollowers | GetFollowing\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ConfigModuleOptions   (src/.../app.module.ts)\n                        \n                        \n                            modelProviders   (src/.../database.module.ts)\n                        \n                        \n                            models   (src/.../database.module.ts)\n                        \n                        \n                            moment   (src/.../moment-extend.ts)\n                        \n                        \n                            providers   (src/.../database.module.ts)\n                        \n                        \n                            tableName   (src/.../20190609143930_CreateTag.ts)\n                        \n                        \n                            tableName   (src/.../20190609143930_CreateUser.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app.module.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            ConfigModuleOptions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    isGlobal: true,\n    validationOptions: {\n        allowUnknown: true,\n        abortEarly: true,\n    },\n    validationSchema: Joi.object({\n        PORT: Joi.number().default(3000),\n        NODE_ENV: Joi.string()\n            .required()\n            .valid('development', 'production', 'test', 'provision')\n            .default('development'),\n\n        database: Joi.string().required(),\n        type: Joi.string().required(),\n        logging: Joi.string().required(),\n        synchronize: Joi.string().required(),\n    }),\n}\n                        \n                    \n\n\n            \n        \n\n    src/database/database.module.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            modelProviders\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : models.map((model) => {\n    return {\n        provide: model.name,\n        useValue: model,\n    }\n})\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            models\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [Tag, User]\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            providers\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n    ...modelProviders,\n    {\n        provide: 'KnexConnection',\n        // eslint-disable-next-line @typescript-eslint/require-await\n        useFactory: async () => {\n            const knex = Knex({\n                client: 'sqlite3',\n                useNullAsDefault: true,\n                connection: {\n                    filename: './knex.sqlite',\n                },\n                debug: true,\n                // ...knexSnakeCaseMappers(),\n            })\n\n            Model.knex(knex)\n            return knex\n        },\n    },\n]\n                        \n                    \n\n\n            \n        \n\n    src/base/moment-extend.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            moment\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : extendMoment(momentDefault)\n                        \n                    \n\n\n            \n        \n\n    src/database/migrations/20190609143930_CreateTag.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            tableName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'tags'\n                        \n                    \n\n\n            \n        \n\n    src/database/migrations/20190609143930_CreateUser.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            tableName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'users'\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
