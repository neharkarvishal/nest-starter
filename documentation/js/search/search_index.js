var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/controllers/AppController.html",[0,0.857,1,1.392]],["body/controllers/AppController.html",[0,1.182,1,1.92,2,1.034,3,0.626,4,0.518,5,0.518,6,2.062,7,0.518,8,1.389,9,3.343,10,1.43,11,0.062,12,2.611,13,2.611,14,0.88,15,2.611,16,1.034,17,1.389,18,2.062,19,2.062,20,2.062,21,2.062,22,2.062,23,2.611,24,1.131,25,2.611,26,1.43,27,0.746,28,3.508,29,2.611,30,2.062,31,1.569,32,2.062,33,2.611,34,0.626,35,0.331,36,1.7,37,1.034,38,2.611,39,2.611,40,1.214,41,2.611,42,0.032,43,0.043,44,0.032]],["title/modules/AppModule.html",[45,1.182,46,1.392]],["body/modules/AppModule.html",[1,1.506,2,0.877,3,0.335,4,0.277,5,0.277,8,0.553,11,0.063,14,0.746,16,0.877,17,1.089,18,1.103,19,1.103,21,2.172,22,2.172,24,1.161,26,1.869,27,0.399,31,1.438,32,1.103,34,0.335,35,0.177,36,0.909,37,0.553,42,0.017,43,0.027,44,0.017,45,1.455,46,2.161,47,0.649,48,0.649,49,0.909,50,0.909,51,0.649,52,1.791,53,0.909,54,1.103,55,1.103,56,1.441,57,0.909,58,0.909,59,0.909,60,1.506,61,2.172,62,1.748,63,1.397,64,0.649,65,0.632,66,0.632,67,0.649,68,2.172,69,1.103,70,2.038,71,1.397,72,1.397,73,1.397,74,1.397,75,1.397,76,1.397,77,1.397,78,0.909,79,2.214,80,0.909,81,1.397,82,1.103,83,2.214,84,1.397,85,1.103,86,1.103,87,1.103,88,1.103,89,1.397,90,1.397,91,2.472,92,0.909,93,1.103,94,3.005,95,1.103,96,1.103,97,1.103,98,1.103,99,1.103,100,1.103,101,1.103,102,1.103,103,1.103,104,1.103,105,0.909,106,0.909,107,1.103,108,1.103,109,0.909,110,1.103,111,1.103,112,1.103,113,1.103,114,1.103,115,1.103,116,1.103,117,1.748,118,1.103,119,1.103,120,1.103,121,1.103,122,1.103,123,1.103,124,1.748,125,1.103,126,1.103,127,1.103,128,1.103,129,1.103,130,1.103,131,1.103,132,0.909,133,1.103,134,1.103,135,1.103,136,1.103,137,1.103,138,1.397,139,1.397,140,1.397,141,1.103,142,1.397,143,1.103,144,1.397,145,1.397,146,1.397,147,1.103,148,1.397,149,1.103,150,1.103]],["title/injectables/AppService.html",[31,1.007,151,1.182]],["body/injectables/AppService.html",[3,0.745,4,0.617,5,0.617,7,0.617,8,1.557,9,3.576,11,0.061,14,1.048,16,1.232,17,1.557,24,0.888,26,1.703,27,0.888,31,1.557,34,0.745,35,0.394,40,1.446,42,0.038,43,0.048,44,0.038,151,1.827,152,2.025,153,2.456,154,3.11,155,3.11,156,3.11]],["title/interfaces/Cat.html",[157,1.392,158,1.182]],["body/interfaces/Cat.html",[3,0.712,4,0.59,5,0.59,7,0.59,11,0.059,17,1.867,34,0.712,37,1.671,42,0.037,43,0.047,44,0.037,65,1.272,66,1.205,157,1.627,158,1.775,159,2.972,160,2.347,161,2.486,162,3.517,163,3.517,164,2.31]],["title/controllers/CatsController.html",[0,0.857,165,1.392]],["body/controllers/CatsController.html",[0,0.7,2,0.822,3,0.498,4,0.412,5,0.412,7,0.412,8,1.184,10,1.919,11,0.062,14,1.181,16,1.388,24,1.095,27,0.593,34,0.498,35,0.263,36,1.352,37,0.822,40,1.39,42,0.026,43,0.037,44,0.026,64,1.39,65,0.854,66,0.854,67,1.39,158,0.965,164,1.919,165,1.637,166,1.64,167,1.64,168,1.64,169,3.342,170,2.361,171,3.027,172,2.767,173,2.077,174,2.317,175,3.505,176,2.077,177,2.077,178,1.947,179,1.64,180,2.99,181,2.077,182,2.361,183,2.077,184,2.077,185,2.077,186,1.388,187,1.64,188,2.077,189,2.077,190,1.64,191,2.077,192,2.077,193,2.077,194,2.077,195,2.077,196,2.077]],["title/modules/CatsModule.html",[45,1.182,197,1.392]],["body/modules/CatsModule.html",[2,1.451,3,0.668,4,0.553,5,0.553,11,0.061,24,1.168,27,0.796,34,0.668,35,0.353,42,0.034,43,0.045,44,0.034,45,1.902,47,1.296,48,1.296,49,1.815,50,1.815,51,1.296,52,2.664,53,1.815,56,2.385,57,1.815,58,1.815,165,2.24,186,1.835,187,2.201,197,2.537,198,2.201,199,2.201,200,2.787,201,2.787]],["title/injectables/CatsService.html",[151,1.182,186,1.007]],["body/injectables/CatsService.html",[3,0.52,4,0.43,5,0.43,7,0.43,8,1.222,11,0.062,14,1.318,16,1.422,24,0.881,27,0.619,34,0.52,35,0.275,37,1.422,40,1.434,42,0.027,43,0.038,44,0.027,64,1.434,65,0.881,66,1.025,67,1.434,70,1.412,151,1.434,152,1.412,158,2.054,161,2.008,164,1.966,168,2.835,169,3.391,170,2.436,171,3.088,172,2.436,178,2.008,179,2.436,182,1.712,186,1.222,190,1.712,202,1.712,203,2.835,204,3.085,205,2.169,206,2.169,207,2.169,208,1.712,209,1.712,210,2.169,211,2.169,212,2.169,213,2.169]],["title/classes/CreateCatDto.html",[35,0.322,174,1.392]],["body/classes/CreateCatDto.html",[3,0.614,4,0.508,5,0.508,7,0.508,10,2.147,11,0.06,14,1.322,17,1.664,24,0.731,34,0.614,35,0.439,37,1.888,42,0.031,43,0.043,44,0.031,65,1.12,66,1.12,161,2.254,162,3.097,163,3.097,164,1.896,174,1.896,214,2.562,215,3.317,216,2.023,217,3.922,218,2.562,219,4.389,220,2.562,221,2.562,222,2.023]],["title/controllers/HealthController.html",[0,0.857,60,1.392]],["body/controllers/HealthController.html",[0,0.612,2,0.719,3,0.435,4,0.361,5,0.361,7,0.361,8,1.285,10,0.995,11,0.062,14,1.093,16,1.424,17,1.285,24,0.926,26,2.21,27,0.519,34,0.435,35,0.23,40,0.845,42,0.022,43,0.033,44,0.022,60,1.969,61,3.038,62,2.141,64,0.845,65,0.519,66,0.519,67,0.845,68,3.038,69,1.435,70,2.342,78,1.183,80,1.183,141,2.141,143,1.435,147,1.435,149,1.435,150,1.435,167,1.435,178,1.765,203,2.561,223,1.435,224,3.597,225,1.817,226,1.817,227,1.817,228,1.817,229,2.711,230,2.711,231,2.711,232,2.711,233,1.817,234,1.817,235,1.817,236,2.711,237,1.817,238,1.817,239,1.817,240,1.817,241,1.817,242,1.817,243,1.817,244,2.711,245,2.711,246,1.817,247,1.817,248,2.711,249,1.817,250,1.817,251,1.817,252,1.817,253,1.817,254,1.435,255,1.817,256,1.817,257,1.435,258,1.817,259,1.817,260,1.817,261,1.817,262,1.817,263,1.817,264,1.817]],["title/coverage.html",[265,2.243]],["body/coverage.html",[0,1.294,1,1.345,5,0.487,6,1.939,11,0.061,31,0.973,35,0.311,42,0.03,43,0.041,44,0.03,51,1.142,59,2.499,60,1.345,66,0.701,92,1.599,109,1.599,132,1.599,151,1.564,153,1.939,157,1.345,158,1.142,160,1.939,165,1.345,166,1.939,174,1.345,186,0.973,202,1.939,215,1.939,216,1.939,223,1.939,254,2.657,265,1.599,266,2.456,267,2.456,268,2.456,269,4.865,270,3.365,271,3.838,272,4.325,273,4.129,274,2.456,275,2.657,276,1.939,277,2.456,278,2.456,279,2.456]],["title/dependencies.html",[48,1.419,280,2.136]],["body/dependencies.html",[11,0.063,27,0.674,30,1.863,35,0.415,42,0.029,43,0.04,44,0.029,48,1.097,78,1.536,80,1.536,82,1.863,85,1.863,86,2.584,87,1.863,88,1.863,222,1.863,281,2.359,282,3.758,283,2.359,284,2.359,285,2.359,286,2.359,287,2.359,288,3.758,289,2.359,290,2.359,291,2.359,292,2.359,293,2.359,294,2.359,295,3.273,296,2.359,297,2.359,298,2.359,299,2.359,300,2.359,301,2.359,302,2.359,303,2.359,304,2.359,305,2.359,306,3.273,307,2.359,308,2.359,309,2.359,310,2.359,311,2.359,312,2.359,313,2.359,314,2.359,315,2.359,316,2.359,317,2.359,318,2.359,319,2.359,320,2.359,321,2.359,322,2.359,323,2.359,324,2.359,325,2.359]],["title/miscellaneous/functions.html",[326,1.17,327,2.41]],["body/miscellaneous/functions.html",[7,0.693,11,0.056,42,0.043,43,0.052,44,0.043,51,2.111,64,1.624,65,0.998,67,1.624,275,2.759,276,3.336,326,1.913,327,2.759,328,4.225,329,3.494,330,2.759]],["title/index.html",[7,0.424,331,2.136,332,2.136]],["body/index.html",[4,0.466,11,0.061,20,1.855,42,0.029,43,0.04,44,0.029,105,1.529,106,2.124,257,2.96,265,1.529,330,1.855,333,2.349,334,2.349,335,3.263,336,2.349,337,2.349,338,2.349,339,2.349,340,2.349,341,2.349,342,2.349,343,2.349,344,2.349,345,2.349,346,4.519,347,2.349,348,2.349,349,4.406,350,2.349,351,2.349,352,3.263,353,2.349,354,2.349,355,2.349,356,3.263,357,2.349,358,2.349,359,2.349,360,3.263,361,3.263,362,2.349,363,2.349,364,2.349,365,2.349,366,2.349,367,1.855,368,2.349,369,2.349,370,2.349,371,2.349,372,2.349,373,2.349,374,2.349,375,2.349,376,2.349,377,2.349,378,2.349,379,2.349,380,2.349,381,2.349,382,2.349,383,2.349,384,2.349,385,2.349]],["title/modules.html",[47,1.602]],["body/modules.html",[11,0.053,42,0.045,43,0.053,44,0.045,46,1.991,47,1.69,197,1.991,367,3.416,386,4.327,387,4.327,388,4.327]],["title/overview.html",[389,2.721]],["body/overview.html",[2,1.19,11,0.055,31,1.68,35,0.381,42,0.037,43,0.047,44,0.037,45,1.397,46,2.448,47,1.397,48,1.397,49,1.957,50,1.957,51,1.397,52,1.957,53,1.957,54,2.373,55,2.373,56,2.504,57,1.957,58,1.957,152,1.957,157,1.646,186,1.68,197,2.448,198,2.373,199,2.373,389,2.373,390,3.847,391,3.006,392,3.847]],["title/miscellaneous/variables.html",[326,1.17,393,2.41]],["body/miscellaneous/variables.html",[7,0.45,11,0.062,42,0.028,43,0.039,44,0.028,59,1.477,65,0.648,66,1.139,91,1.792,92,2.074,93,1.792,94,3.534,95,1.792,96,1.792,97,1.792,98,1.792,99,1.792,100,1.792,101,1.792,102,1.792,103,1.792,104,1.792,105,1.477,106,1.477,107,1.792,108,1.792,109,2.074,110,1.792,111,1.792,112,1.792,113,1.792,114,1.792,115,1.792,116,1.792,117,2.515,118,1.792,119,1.792,120,1.792,121,1.792,122,1.792,123,1.792,124,2.515,125,1.792,126,1.792,127,1.792,128,1.792,129,1.792,130,1.792,131,1.792,132,2.074,133,1.792,134,1.792,135,1.792,136,1.792,137,1.792,208,2.906,209,2.906,326,1.242,393,1.792,394,3.681,395,3.681]]],"invertedIndex":[["",{"_index":11,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"interfaces/Cat.html":{},"controllers/CatsController.html":{},"modules/CatsModule.html":{},"injectables/CatsService.html":{},"classes/CreateCatDto.html":{},"controllers/HealthController.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":269,"title":{},"body":{"coverage.html":{}}}],["0.1.13",{"_index":314,"title":{},"body":{"dependencies.html":{}}}],["0.12.2",{"_index":294,"title":{},"body":{"dependencies.html":{}}}],["0.2.29",{"_index":325,"title":{},"body":{"dependencies.html":{}}}],["0.3.1",{"_index":293,"title":{},"body":{"dependencies.html":{}}}],["0.4.1",{"_index":307,"title":{},"body":{"dependencies.html":{}}}],["0.6.1",{"_index":283,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":272,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":270,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":273,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":274,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":392,"title":{},"body":{"overview.html":{}}}],["1.0.0",{"_index":309,"title":{},"body":{"dependencies.html":{}}}],["1.3.0",{"_index":305,"title":{},"body":{"dependencies.html":{}}}],["17.1.1",{"_index":281,"title":{},"body":{"dependencies.html":{}}}],["17.3.0",{"_index":304,"title":{},"body":{"dependencies.html":{}}}],["2",{"_index":390,"title":{},"body":{"overview.html":{}}}],["3",{"_index":391,"title":{},"body":{"overview.html":{}}}],["3.0.2",{"_index":316,"title":{},"body":{"dependencies.html":{}}}],["4.1.5",{"_index":323,"title":{},"body":{"dependencies.html":{}}}],["4.2.0",{"_index":303,"title":{},"body":{"dependencies.html":{}}}],["4.3.0",{"_index":311,"title":{},"body":{"dependencies.html":{}}}],["4.7.5",{"_index":289,"title":{},"body":{"dependencies.html":{}}}],["5.0.0",{"_index":320,"title":{},"body":{"dependencies.html":{}}}],["5.1.0",{"_index":298,"title":{},"body":{"dependencies.html":{}}}],["5.2.3",{"_index":301,"title":{},"body":{"dependencies.html":{}}}],["6.6.3",{"_index":318,"title":{},"body":{"dependencies.html":{}}}],["7.0.1",{"_index":290,"title":{},"body":{"dependencies.html":{}}}],["7.1.3",{"_index":286,"title":{},"body":{"dependencies.html":{}}}],["7.1.5",{"_index":291,"title":{},"body":{"dependencies.html":{}}}],["7.5.1",{"_index":282,"title":{},"body":{"dependencies.html":{}}}],["8.2.0",{"_index":296,"title":{},"body":{"dependencies.html":{}}}],["abortearly",{"_index":97,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["above",{"_index":250,"title":{},"body":{"controllers/HealthController.html":{}}}],["access",{"_index":76,"title":{},"body":{"modules/AppModule.html":{}}}],["age",{"_index":162,"title":{},"body":{"interfaces/Cat.html":{},"classes/CreateCatDto.html":{}}}],["allowunknown",{"_index":96,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["amazing",{"_index":368,"title":{},"body":{"index.html":{}}}],["apiresponse",{"_index":28,"title":{},"body":{"controllers/AppController.html":{}}}],["apitags",{"_index":29,"title":{},"body":{"controllers/AppController.html":{}}}],["apitags('appcontroller",{"_index":33,"title":{},"body":{"controllers/AppController.html":{}}}],["app",{"_index":330,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["app.controller",{"_index":90,"title":{},"body":{"modules/AppModule.html":{}}}],["app.service",{"_index":32,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["appcontroller",{"_index":1,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["application",{"_index":241,"title":{},"body":{"controllers/HealthController.html":{}}}],["applications",{"_index":341,"title":{},"body":{"index.html":{}}}],["applicationshutdown",{"_index":149,"title":{},"body":{"modules/AppModule.html":{},"controllers/HealthController.html":{}}}],["appmodule",{"_index":46,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appservice",{"_index":31,"title":{"injectables/AppService.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"coverage.html":{},"overview.html":{}}}],["assignment",{"_index":23,"title":{},"body":{"controllers/AppController.html":{}}}],["assignment,@typescript",{"_index":73,"title":{},"body":{"modules/AppModule.html":{}}}],["async",{"_index":169,"title":{},"body":{"controllers/CatsController.html":{},"injectables/CatsService.html":{}}}],["asynchronous",{"_index":256,"title":{},"body":{"controllers/HealthController.html":{}}}],["author",{"_index":378,"title":{},"body":{"index.html":{}}}],["awaits",{"_index":255,"title":{},"body":{"controllers/HealthController.html":{}}}],["backers",{"_index":369,"title":{},"body":{"index.html":{}}}],["before",{"_index":118,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["beforeapplicationshutdown",{"_index":247,"title":{},"body":{"controllers/HealthController.html":{}}}],["body",{"_index":183,"title":{},"body":{"controllers/CatsController.html":{}}}],["bootstrap",{"_index":51,"title":{},"body":{"modules/AppModule.html":{},"modules/CatsModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["breed",{"_index":163,"title":{},"body":{"interfaces/Cat.html":{},"classes/CreateCatDto.html":{}}}],["browse",{"_index":388,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":386,"title":{},"body":{"modules.html":{}}}],["building",{"_index":336,"title":{},"body":{"index.html":{}}}],["call",{"_index":244,"title":{},"body":{"controllers/HealthController.html":{}}}],["call,@typescript",{"_index":74,"title":{},"body":{"modules/AppModule.html":{}}}],["cat",{"_index":158,"title":{"interfaces/Cat.html":{}},"body":{"interfaces/Cat.html":{},"controllers/CatsController.html":{},"injectables/CatsService.html":{},"coverage.html":{}}}],["cat.dto",{"_index":189,"title":{},"body":{"controllers/CatsController.html":{}}}],["cat.dto.ts",{"_index":216,"title":{},"body":{"classes/CreateCatDto.html":{},"coverage.html":{}}}],["cat.dto.ts:11",{"_index":220,"title":{},"body":{"classes/CreateCatDto.html":{}}}],["cat.dto.ts:5",{"_index":221,"title":{},"body":{"classes/CreateCatDto.html":{}}}],["cat.dto.ts:8",{"_index":218,"title":{},"body":{"classes/CreateCatDto.html":{}}}],["cats",{"_index":168,"title":{},"body":{"controllers/CatsController.html":{},"injectables/CatsService.html":{}}}],["cats.controller",{"_index":201,"title":{},"body":{"modules/CatsModule.html":{}}}],["cats.service",{"_index":187,"title":{},"body":{"controllers/CatsController.html":{},"modules/CatsModule.html":{}}}],["catscontroller",{"_index":165,"title":{"controllers/CatsController.html":{}},"body":{"controllers/CatsController.html":{},"modules/CatsModule.html":{},"coverage.html":{}}}],["catsmodule",{"_index":197,"title":{"modules/CatsModule.html":{}},"body":{"modules/CatsModule.html":{},"modules.html":{},"overview.html":{}}}],["catsservice",{"_index":186,"title":{"injectables/CatsService.html":{}},"body":{"controllers/CatsController.html":{},"modules/CatsModule.html":{},"injectables/CatsService.html":{},"coverage.html":{},"overview.html":{}}}],["check",{"_index":224,"title":{},"body":{"controllers/HealthController.html":{}}}],["class",{"_index":35,"title":{"classes/CreateCatDto.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/CatsController.html":{},"modules/CatsModule.html":{},"injectables/CatsService.html":{},"classes/CreateCatDto.html":{},"controllers/HealthController.html":{},"coverage.html":{},"dependencies.html":{},"overview.html":{}}}],["classes",{"_index":214,"title":{},"body":{"classes/CreateCatDto.html":{}}}],["cluster_appmodule",{"_index":54,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":55,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_catsmodule",{"_index":198,"title":{},"body":{"modules/CatsModule.html":{},"overview.html":{}}}],["cluster_catsmodule_providers",{"_index":199,"title":{},"body":{"modules/CatsModule.html":{},"overview.html":{}}}],["colorize",{"_index":112,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["config",{"_index":236,"title":{},"body":{"controllers/HealthController.html":{}}}],["configmodule",{"_index":77,"title":{},"body":{"modules/AppModule.html":{}}}],["configmodule.forroot(configmoduleoptions",{"_index":139,"title":{},"body":{"modules/AppModule.html":{}}}],["configmoduleoptions",{"_index":92,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["configservice",{"_index":229,"title":{},"body":{"controllers/HealthController.html":{}}}],["console,@typescript",{"_index":72,"title":{},"body":{"modules/AppModule.html":{}}}],["console.log",{"_index":264,"title":{},"body":{"controllers/HealthController.html":{}}}],["console.log(`moduleinit",{"_index":262,"title":{},"body":{"controllers/HealthController.html":{}}}],["const",{"_index":91,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["constructor",{"_index":234,"title":{},"body":{"controllers/HealthController.html":{}}}],["constructor(private",{"_index":36,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/CatsController.html":{}}}],["continue",{"_index":258,"title":{},"body":{"controllers/HealthController.html":{}}}],["controller",{"_index":0,"title":{"controllers/AppController.html":{},"controllers/CatsController.html":{},"controllers/HealthController.html":{}},"body":{"controllers/AppController.html":{},"controllers/CatsController.html":{},"controllers/HealthController.html":{},"coverage.html":{}}}],["controller('cats",{"_index":191,"title":{},"body":{"controllers/CatsController.html":{}}}],["controller('health",{"_index":233,"title":{},"body":{"controllers/HealthController.html":{}}}],["controllers",{"_index":2,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/CatsController.html":{},"modules/CatsModule.html":{},"controllers/HealthController.html":{},"overview.html":{}}}],["corresponding",{"_index":251,"title":{},"body":{"controllers/HealthController.html":{}}}],["coverage",{"_index":265,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["create",{"_index":170,"title":{},"body":{"controllers/CatsController.html":{},"injectables/CatsService.html":{}}}],["create(@body",{"_index":192,"title":{},"body":{"controllers/CatsController.html":{}}}],["create(cat",{"_index":204,"title":{},"body":{"injectables/CatsService.html":{}}}],["create(createcatdto",{"_index":173,"title":{},"body":{"controllers/CatsController.html":{}}}],["createcatdto",{"_index":174,"title":{"classes/CreateCatDto.html":{}},"body":{"controllers/CatsController.html":{},"classes/CreateCatDto.html":{},"coverage.html":{}}}],["createswagger",{"_index":276,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["createswagger(app",{"_index":329,"title":{},"body":{"miscellaneous/functions.html":{}}}],["database",{"_index":134,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["database.sqlite",{"_index":135,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["date",{"_index":120,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["declarations",{"_index":50,"title":{},"body":{"modules/AppModule.html":{},"modules/CatsModule.html":{},"overview.html":{}}}],["decorators",{"_index":10,"title":{},"body":{"controllers/AppController.html":{},"controllers/CatsController.html":{},"classes/CreateCatDto.html":{},"controllers/HealthController.html":{}}}],["default",{"_index":208,"title":{},"body":{"injectables/CatsService.html":{},"miscellaneous/variables.html":{}}}],["default('development",{"_index":108,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":14,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/CatsController.html":{},"injectables/CatsService.html":{},"classes/CreateCatDto.html":{},"controllers/HealthController.html":{}}}],["dependencies",{"_index":48,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/CatsModule.html":{},"dependencies.html":{},"overview.html":{}}}],["described",{"_index":249,"title":{},"body":{"controllers/HealthController.html":{}}}],["description",{"_index":342,"title":{},"body":{"index.html":{}}}],["development",{"_index":348,"title":{},"body":{"index.html":{}}}],["disable",{"_index":19,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["display",{"_index":115,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["dns",{"_index":235,"title":{},"body":{"controllers/HealthController.html":{}}}],["dnshealthindicator",{"_index":230,"title":{},"body":{"controllers/HealthController.html":{}}}],["docs",{"_index":239,"title":{},"body":{"controllers/HealthController.html":{}}}],["documentation",{"_index":266,"title":{},"body":{"coverage.html":{}}}],["dotenv",{"_index":295,"title":{},"body":{"dependencies.html":{}}}],["dto/create",{"_index":188,"title":{},"body":{"controllers/CatsController.html":{}}}],["e2e",{"_index":357,"title":{},"body":{"index.html":{}}}],["efficient",{"_index":337,"title":{},"body":{"index.html":{}}}],["err",{"_index":129,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["error",{"_index":130,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["errorlikeobjectkeys",{"_index":128,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["errors",{"_index":131,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["eslint",{"_index":18,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["eslint/no",{"_index":21,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["expand",{"_index":297,"title":{},"body":{"dependencies.html":{}}}],["export",{"_index":34,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"interfaces/Cat.html":{},"controllers/CatsController.html":{},"modules/CatsModule.html":{},"injectables/CatsService.html":{},"classes/CreateCatDto.html":{},"controllers/HealthController.html":{}}}],["exports",{"_index":53,"title":{},"body":{"modules/AppModule.html":{},"modules/CatsModule.html":{},"overview.html":{}}}],["express",{"_index":288,"title":{},"body":{"dependencies.html":{}}}],["false",{"_index":114,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["file",{"_index":5,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"interfaces/Cat.html":{},"controllers/CatsController.html":{},"modules/CatsModule.html":{},"injectables/CatsService.html":{},"classes/CreateCatDto.html":{},"controllers/HealthController.html":{},"coverage.html":{}}}],["findall",{"_index":171,"title":{},"body":{"controllers/CatsController.html":{},"injectables/CatsService.html":{}}}],["findone",{"_index":172,"title":{},"body":{"controllers/CatsController.html":{},"injectables/CatsService.html":{}}}],["findone(id",{"_index":179,"title":{},"body":{"controllers/CatsController.html":{},"injectables/CatsService.html":{}}}],["first",{"_index":252,"title":{},"body":{"controllers/HealthController.html":{}}}],["framework",{"_index":335,"title":{},"body":{"index.html":{}}}],["function",{"_index":254,"title":{},"body":{"controllers/HealthController.html":{},"coverage.html":{}}}],["functions",{"_index":327,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["get(':id",{"_index":180,"title":{},"body":{"controllers/CatsController.html":{}}}],["get()@apiresponse({status",{"_index":12,"title":{},"body":{"controllers/AppController.html":{}}}],["get()@healthcheck",{"_index":225,"title":{},"body":{"controllers/HealthController.html":{}}}],["gethello",{"_index":9,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["getting",{"_index":331,"title":{"index.html":{}},"body":{}}],["grow",{"_index":364,"title":{},"body":{"index.html":{}}}],["hapi/joi",{"_index":88,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["health",{"_index":141,"title":{},"body":{"modules/AppModule.html":{},"controllers/HealthController.html":{}}}],["health/health.controller",{"_index":89,"title":{},"body":{"modules/AppModule.html":{}}}],["healthcheck",{"_index":231,"title":{},"body":{"controllers/HealthController.html":{}}}],["healthcheckservice",{"_index":232,"title":{},"body":{"controllers/HealthController.html":{}}}],["healthcontroller",{"_index":60,"title":{"controllers/HealthController.html":{}},"body":{"modules/AppModule.html":{},"controllers/HealthController.html":{},"coverage.html":{}}}],["hello",{"_index":155,"title":{},"body":{"injectables/AppService.html":{}}}],["helmet",{"_index":302,"title":{},"body":{"dependencies.html":{}}}],["here",{"_index":375,"title":{},"body":{"index.html":{}}}],["https://docs.nestjs.com",{"_index":240,"title":{},"body":{"controllers/HealthController.html":{}}}],["https://nestjs.com",{"_index":382,"title":{},"body":{"index.html":{}}}],["httpstatus",{"_index":25,"title":{},"body":{"controllers/AppController.html":{}}}],["httpstatus.ok",{"_index":39,"title":{},"body":{"controllers/AppController.html":{}}}],["id",{"_index":182,"title":{},"body":{"controllers/CatsController.html":{},"injectables/CatsService.html":{}}}],["identifier",{"_index":267,"title":{},"body":{"coverage.html":{}}}],["ignore",{"_index":126,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["implements",{"_index":143,"title":{},"body":{"modules/AppModule.html":{},"controllers/HealthController.html":{}}}],["import",{"_index":24,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/CatsController.html":{},"modules/CatsModule.html":{},"injectables/CatsService.html":{},"classes/CreateCatDto.html":{},"controllers/HealthController.html":{}}}],["imports",{"_index":138,"title":{},"body":{"modules/AppModule.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"interfaces/Cat.html":{},"controllers/CatsController.html":{},"injectables/CatsService.html":{},"classes/CreateCatDto.html":{},"controllers/HealthController.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"interfaces/Cat.html":{},"controllers/CatsController.html":{},"modules/CatsModule.html":{},"injectables/CatsService.html":{},"classes/CreateCatDto.html":{},"controllers/HealthController.html":{}}}],["initialized",{"_index":147,"title":{},"body":{"modules/AppModule.html":{},"controllers/HealthController.html":{}}}],["injectable",{"_index":151,"title":{"injectables/AppService.html":{},"injectables/CatsService.html":{}},"body":{"injectables/AppService.html":{},"injectables/CatsService.html":{},"coverage.html":{}}}],["injectables",{"_index":152,"title":{},"body":{"injectables/AppService.html":{},"injectables/CatsService.html":{},"overview.html":{}}}],["installation",{"_index":345,"title":{},"body":{"index.html":{}}}],["installrunning",{"_index":347,"title":{},"body":{"index.html":{}}}],["interface",{"_index":157,"title":{"interfaces/Cat.html":{}},"body":{"interfaces/Cat.html":{},"coverage.html":{},"overview.html":{}}}],["interfaces",{"_index":159,"title":{},"body":{"interfaces/Cat.html":{}}}],["interfaces/cat.interface",{"_index":190,"title":{},"body":{"controllers/CatsController.html":{},"injectables/CatsService.html":{}}}],["isglobal",{"_index":93,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["isint",{"_index":217,"title":{},"body":{"classes/CreateCatDto.html":{}}}],["isstring",{"_index":219,"title":{},"body":{"classes/CreateCatDto.html":{}}}],["joi",{"_index":87,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["joi.number().default(3000",{"_index":101,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["joi.object",{"_index":99,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["joi.string",{"_index":103,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["join",{"_index":371,"title":{},"body":{"index.html":{}}}],["kamil",{"_index":379,"title":{},"body":{"index.html":{}}}],["legend",{"_index":49,"title":{},"body":{"modules/AppModule.html":{},"modules/CatsModule.html":{},"overview.html":{}}}],["level",{"_index":117,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["levelfirst",{"_index":113,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["license",{"_index":385,"title":{},"body":{"index.html":{}}}],["licensed",{"_index":361,"title":{},"body":{"index.html":{}}}],["limit",{"_index":300,"title":{},"body":{"dependencies.html":{}}}],["local",{"_index":308,"title":{},"body":{"dependencies.html":{}}}],["log",{"_index":116,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["logged",{"_index":119,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["logger",{"_index":144,"title":{},"body":{"modules/AppModule.html":{}}}],["logger.setcontext(appmodule.name",{"_index":145,"title":{},"body":{"modules/AppModule.html":{}}}],["loggermodule",{"_index":84,"title":{},"body":{"modules/AppModule.html":{}}}],["loggermodule.forroot(loggermoduleoptions",{"_index":140,"title":{},"body":{"modules/AppModule.html":{}}}],["loggermoduleoptions",{"_index":109,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["logging",{"_index":137,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["matching",{"_index":43,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"interfaces/Cat.html":{},"controllers/CatsController.html":{},"modules/CatsModule.html":{},"injectables/CatsService.html":{},"classes/CreateCatDto.html":{},"controllers/HealthController.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["member",{"_index":75,"title":{},"body":{"modules/AppModule.html":{}}}],["messageformat",{"_index":123,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["metadata",{"_index":313,"title":{},"body":{"dependencies.html":{}}}],["methods",{"_index":8,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/CatsController.html":{},"injectables/CatsService.html":{},"controllers/HealthController.html":{}}}],["miscellaneous",{"_index":326,"title":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":360,"title":{},"body":{"index.html":{}}}],["mode",{"_index":352,"title":{},"body":{"index.html":{}}}],["module",{"_index":45,"title":{"modules/AppModule.html":{},"modules/CatsModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CatsModule.html":{},"overview.html":{}}}],["modules",{"_index":47,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/CatsModule.html":{},"modules.html":{},"overview.html":{}}}],["more",{"_index":374,"title":{},"body":{"index.html":{}}}],["msg",{"_index":124,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["myśliwiec",{"_index":380,"title":{},"body":{"index.html":{}}}],["name",{"_index":65,"title":{},"body":{"modules/AppModule.html":{},"interfaces/Cat.html":{},"controllers/CatsController.html":{},"injectables/CatsService.html":{},"classes/CreateCatDto.html":{},"controllers/HealthController.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["nest",{"_index":257,"title":{},"body":{"controllers/HealthController.html":{},"index.html":{}}}],["nestframework",{"_index":384,"title":{},"body":{"index.html":{}}}],["nestjs",{"_index":85,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["nestjs/common",{"_index":27,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/CatsController.html":{},"modules/CatsModule.html":{},"injectables/CatsService.html":{},"controllers/HealthController.html":{},"dependencies.html":{}}}],["nestjs/config",{"_index":78,"title":{},"body":{"modules/AppModule.html":{},"controllers/HealthController.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":284,"title":{},"body":{"dependencies.html":{}}}],["nestjs/passport",{"_index":285,"title":{},"body":{"dependencies.html":{}}}],["nestjs/platform",{"_index":287,"title":{},"body":{"dependencies.html":{}}}],["nestjs/swagger",{"_index":30,"title":{},"body":{"controllers/AppController.html":{},"dependencies.html":{}}}],["nestjs/terminus",{"_index":80,"title":{},"body":{"modules/AppModule.html":{},"controllers/HealthController.html":{},"dependencies.html":{}}}],["nestjs/typeorm",{"_index":82,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["new",{"_index":277,"title":{},"body":{"coverage.html":{}}}],["node.js",{"_index":334,"title":{},"body":{"index.html":{}}}],["node_env",{"_index":102,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["npm",{"_index":346,"title":{},"body":{"index.html":{}}}],["number",{"_index":164,"title":{},"body":{"interfaces/Cat.html":{},"controllers/CatsController.html":{},"injectables/CatsService.html":{},"classes/CreateCatDto.html":{}}}],["object",{"_index":395,"title":{},"body":{"miscellaneous/variables.html":{}}}],["onapplicationshutdown",{"_index":61,"title":{},"body":{"modules/AppModule.html":{},"controllers/HealthController.html":{}}}],["onapplicationshutdown(signal",{"_index":62,"title":{},"body":{"modules/AppModule.html":{},"controllers/HealthController.html":{}}}],["onmoduledestroy",{"_index":246,"title":{},"body":{"controllers/HealthController.html":{}}}],["onmoduleinit",{"_index":26,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/HealthController.html":{}}}],["open",{"_index":362,"title":{},"body":{"index.html":{}}}],["optional",{"_index":67,"title":{},"body":{"modules/AppModule.html":{},"controllers/CatsController.html":{},"injectables/CatsService.html":{},"controllers/HealthController.html":{},"miscellaneous/functions.html":{}}}],["out",{"_index":58,"title":{},"body":{"modules/AppModule.html":{},"modules/CatsModule.html":{},"overview.html":{}}}],["overview",{"_index":389,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":280,"title":{"dependencies.html":{}},"body":{}}],["param",{"_index":184,"title":{},"body":{"controllers/CatsController.html":{}}}],["param('id",{"_index":195,"title":{},"body":{"controllers/CatsController.html":{}}}],["parameter",{"_index":253,"title":{},"body":{"controllers/HealthController.html":{}}}],["parameters",{"_index":64,"title":{},"body":{"modules/AppModule.html":{},"controllers/CatsController.html":{},"injectables/CatsService.html":{},"controllers/HealthController.html":{},"miscellaneous/functions.html":{}}}],["passport",{"_index":306,"title":{},"body":{"dependencies.html":{}}}],["pid",{"_index":125,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["pid,hostname",{"_index":127,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["pino",{"_index":86,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["pinohttp",{"_index":110,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["pinologger",{"_index":83,"title":{},"body":{"modules/AppModule.html":{}}}],["please",{"_index":372,"title":{},"body":{"index.html":{}}}],["port",{"_index":100,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["post",{"_index":175,"title":{},"body":{"controllers/CatsController.html":{}}}],["prefix",{"_index":167,"title":{},"body":{"controllers/CatsController.html":{},"controllers/HealthController.html":{}}}],["pretty",{"_index":310,"title":{},"body":{"dependencies.html":{}}}],["prettyprint",{"_index":111,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["private",{"_index":203,"title":{},"body":{"injectables/CatsService.html":{},"controllers/HealthController.html":{}}}],["production",{"_index":105,"title":{},"body":{"modules/AppModule.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["progressive",{"_index":333,"title":{},"body":{"index.html":{}}}],["project",{"_index":363,"title":{},"body":{"index.html":{}}}],["promise",{"_index":178,"title":{},"body":{"controllers/CatsController.html":{},"injectables/CatsService.html":{},"controllers/HealthController.html":{}}}],["properties",{"_index":161,"title":{},"body":{"interfaces/Cat.html":{},"injectables/CatsService.html":{},"classes/CreateCatDto.html":{}}}],["providers",{"_index":52,"title":{},"body":{"modules/AppModule.html":{},"modules/CatsModule.html":{},"overview.html":{}}}],["provision",{"_index":107,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["rate",{"_index":299,"title":{},"body":{"dependencies.html":{}}}],["read",{"_index":373,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":37,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"interfaces/Cat.html":{},"controllers/CatsController.html":{},"injectables/CatsService.html":{},"classes/CreateCatDto.html":{}}}],["receives",{"_index":242,"title":{},"body":{"controllers/HealthController.html":{}}}],["reflect",{"_index":312,"title":{},"body":{"dependencies.html":{}}}],["registered",{"_index":245,"title":{},"body":{"controllers/HealthController.html":{}}}],["rejected",{"_index":261,"title":{},"body":{"controllers/HealthController.html":{}}}],["repository",{"_index":344,"title":{},"body":{"index.html":{}}}],["reset",{"_index":57,"title":{},"body":{"modules/AppModule.html":{},"modules/CatsModule.html":{},"overview.html":{}}}],["resolved",{"_index":260,"title":{},"body":{"controllers/HealthController.html":{}}}],["result",{"_index":42,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"interfaces/Cat.html":{},"controllers/CatsController.html":{},"modules/CatsModule.html":{},"injectables/CatsService.html":{},"classes/CreateCatDto.html":{},"controllers/HealthController.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["results",{"_index":44,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"interfaces/Cat.html":{},"controllers/CatsController.html":{},"modules/CatsModule.html":{},"injectables/CatsService.html":{},"classes/CreateCatDto.html":{},"controllers/HealthController.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":40,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/CatsController.html":{},"injectables/CatsService.html":{},"controllers/HealthController.html":{}}}],["returns",{"_index":16,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/CatsController.html":{},"injectables/CatsService.html":{},"controllers/HealthController.html":{}}}],["rimraf",{"_index":315,"title":{},"body":{"dependencies.html":{}}}],["run",{"_index":349,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":317,"title":{},"body":{"dependencies.html":{}}}],["scalable",{"_index":338,"title":{},"body":{"index.html":{}}}],["sequence",{"_index":248,"title":{},"body":{"controllers/HealthController.html":{}}}],["server",{"_index":339,"title":{},"body":{"index.html":{}}}],["shutdown",{"_index":150,"title":{},"body":{"modules/AppModule.html":{},"controllers/HealthController.html":{}}}],["side",{"_index":340,"title":{},"body":{"index.html":{}}}],["signal",{"_index":68,"title":{},"body":{"modules/AppModule.html":{},"controllers/HealthController.html":{}}}],["source",{"_index":4,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"interfaces/Cat.html":{},"controllers/CatsController.html":{},"modules/CatsModule.html":{},"injectables/CatsService.html":{},"classes/CreateCatDto.html":{},"controllers/HealthController.html":{},"index.html":{}}}],["sponsors",{"_index":366,"title":{},"body":{"index.html":{}}}],["sqlite",{"_index":133,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["sqlite3",{"_index":319,"title":{},"body":{"dependencies.html":{}}}],["src/.../app.module.ts",{"_index":394,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../main.ts",{"_index":328,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/app/app.controller.ts",{"_index":6,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app/app.controller.ts:14",{"_index":15,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app/app.module.ts",{"_index":59,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/app.module.ts:64",{"_index":71,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/app.module.ts:68",{"_index":63,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/app.service.ts",{"_index":153,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["src/app/app.service.ts:5",{"_index":154,"title":{},"body":{"injectables/AppService.html":{}}}],["src/cats/cats.controller.ts",{"_index":166,"title":{},"body":{"controllers/CatsController.html":{},"coverage.html":{}}}],["src/cats/cats.controller.ts:12",{"_index":176,"title":{},"body":{"controllers/CatsController.html":{}}}],["src/cats/cats.controller.ts:17",{"_index":177,"title":{},"body":{"controllers/CatsController.html":{}}}],["src/cats/cats.controller.ts:22",{"_index":181,"title":{},"body":{"controllers/CatsController.html":{}}}],["src/cats/cats.module.ts",{"_index":200,"title":{},"body":{"modules/CatsModule.html":{}}}],["src/cats/cats.service.ts",{"_index":202,"title":{},"body":{"injectables/CatsService.html":{},"coverage.html":{}}}],["src/cats/cats.service.ts:13",{"_index":206,"title":{},"body":{"injectables/CatsService.html":{}}}],["src/cats/cats.service.ts:17",{"_index":207,"title":{},"body":{"injectables/CatsService.html":{}}}],["src/cats/cats.service.ts:7",{"_index":210,"title":{},"body":{"injectables/CatsService.html":{}}}],["src/cats/cats.service.ts:9",{"_index":205,"title":{},"body":{"injectables/CatsService.html":{}}}],["src/cats/dto/create",{"_index":215,"title":{},"body":{"classes/CreateCatDto.html":{},"coverage.html":{}}}],["src/cats/interfaces/cat.interface.ts",{"_index":160,"title":{},"body":{"interfaces/Cat.html":{},"coverage.html":{}}}],["src/health/health.controller.ts",{"_index":223,"title":{},"body":{"controllers/HealthController.html":{},"coverage.html":{}}}],["src/health/health.controller.ts:15",{"_index":226,"title":{},"body":{"controllers/HealthController.html":{}}}],["src/health/health.controller.ts:29",{"_index":228,"title":{},"body":{"controllers/HealthController.html":{}}}],["src/health/health.controller.ts:35",{"_index":227,"title":{},"body":{"controllers/HealthController.html":{}}}],["src/main.ts",{"_index":275,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["start",{"_index":350,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":353,"title":{},"body":{"index.html":{}}}],["start:prodtest",{"_index":354,"title":{},"body":{"index.html":{}}}],["started",{"_index":332,"title":{"index.html":{}},"body":{}}],["starter",{"_index":343,"title":{},"body":{"index.html":{}}}],["statements",{"_index":268,"title":{},"body":{"coverage.html":{}}}],["status",{"_index":38,"title":{},"body":{"controllers/AppController.html":{}}}],["stay",{"_index":376,"title":{},"body":{"index.html":{}}}],["string",{"_index":17,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"interfaces/Cat.html":{},"classes/CreateCatDto.html":{},"controllers/HealthController.html":{}}}],["support",{"_index":367,"title":{},"body":{"index.html":{},"modules.html":{}}}],["svg",{"_index":387,"title":{},"body":{"modules.html":{}}}],["swagger",{"_index":321,"title":{},"body":{"dependencies.html":{}}}],["synchronize",{"_index":136,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["table",{"_index":279,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":278,"title":{},"body":{"coverage.html":{}}}],["termination",{"_index":243,"title":{},"body":{"controllers/HealthController.html":{}}}],["terminusmodule",{"_index":79,"title":{},"body":{"modules/AppModule.html":{}}}],["test",{"_index":106,"title":{},"body":{"modules/AppModule.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["test:covsupport",{"_index":359,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":358,"title":{},"body":{"index.html":{}}}],["tests",{"_index":356,"title":{},"body":{"index.html":{}}}],["thanks",{"_index":365,"title":{},"body":{"index.html":{}}}],["this.appservice.gethello",{"_index":41,"title":{},"body":{"controllers/AppController.html":{}}}],["this.cats",{"_index":212,"title":{},"body":{"injectables/CatsService.html":{}}}],["this.cats.push(cat",{"_index":211,"title":{},"body":{"injectables/CatsService.html":{}}}],["this.cats[id",{"_index":213,"title":{},"body":{"injectables/CatsService.html":{}}}],["this.catsservice.create(createcatdto",{"_index":193,"title":{},"body":{"controllers/CatsController.html":{}}}],["this.catsservice.findall",{"_index":194,"title":{},"body":{"controllers/CatsController.html":{}}}],["this.catsservice.findone(id",{"_index":196,"title":{},"body":{"controllers/CatsController.html":{}}}],["this.config.get('node_env",{"_index":263,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.dns.pingcheck('nestjs",{"_index":238,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.health.check",{"_index":237,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.logger.fatal",{"_index":148,"title":{},"body":{"modules/AppModule.html":{}}}],["this.logger.info(`moduleinit",{"_index":146,"title":{},"body":{"modules/AppModule.html":{}}}],["time",{"_index":121,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["touch",{"_index":377,"title":{},"body":{"index.html":{}}}],["transformer",{"_index":292,"title":{},"body":{"dependencies.html":{}}}],["translatetime",{"_index":122,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["true",{"_index":94,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["twitter",{"_index":383,"title":{},"body":{"index.html":{}}}],["type",{"_index":66,"title":{},"body":{"modules/AppModule.html":{},"interfaces/Cat.html":{},"controllers/CatsController.html":{},"injectables/CatsService.html":{},"classes/CreateCatDto.html":{},"controllers/HealthController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["typeorm",{"_index":324,"title":{},"body":{"dependencies.html":{}}}],["typeormmodule",{"_index":81,"title":{},"body":{"modules/AppModule.html":{}}}],["typeormmodule.forroot(typeormmoduleoptions",{"_index":142,"title":{},"body":{"modules/AppModule.html":{}}}],["typeormmoduleoptions",{"_index":132,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["typescript",{"_index":20,"title":{},"body":{"controllers/AppController.html":{},"index.html":{}}}],["ui",{"_index":322,"title":{},"body":{"dependencies.html":{}}}],["undefined",{"_index":13,"title":{},"body":{"controllers/AppController.html":{}}}],["unit",{"_index":355,"title":{},"body":{"index.html":{}}}],["unsafe",{"_index":22,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["until",{"_index":259,"title":{},"body":{"controllers/HealthController.html":{}}}],["useguards",{"_index":185,"title":{},"body":{"controllers/CatsController.html":{}}}],["valid('development",{"_index":104,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["validationoptions",{"_index":95,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["validationschema",{"_index":98,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["validator",{"_index":222,"title":{},"body":{"classes/CreateCatDto.html":{},"dependencies.html":{}}}],["value",{"_index":209,"title":{},"body":{"injectables/CatsService.html":{},"miscellaneous/variables.html":{}}}],["variable",{"_index":271,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":393,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["void",{"_index":70,"title":{},"body":{"modules/AppModule.html":{},"injectables/CatsService.html":{},"controllers/HealthController.html":{}}}],["watch",{"_index":351,"title":{},"body":{"index.html":{}}}],["website",{"_index":381,"title":{},"body":{"index.html":{}}}],["world",{"_index":156,"title":{},"body":{"injectables/AppService.html":{}}}],["yes",{"_index":69,"title":{},"body":{"modules/AppModule.html":{},"controllers/HealthController.html":{}}}],["you'd",{"_index":370,"title":{},"body":{"index.html":{}}}],["zoom",{"_index":56,"title":{},"body":{"modules/AppModule.html":{},"modules/CatsModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/app.controller.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getHello\n                        \n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@ApiResponse({status: undefined})\n                \n            \n\n            \n                \n                    Defined in src/app/app.controller.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        /* eslint-disable @typescript-eslint/no-unsafe-assignment */\nimport { Controller, Get, HttpStatus, OnModuleInit } from '@nestjs/common'\nimport { ApiResponse, ApiTags } from '@nestjs/swagger'\n\nimport { AppService } from './app.service'\n\n@Controller()\n@ApiTags('AppController')\nexport class AppController {\n    constructor(private readonly appService: AppService) {}\n\n    @Get()\n    @ApiResponse({ status: HttpStatus.OK })\n    getHello(): string {\n        return this.appService.getHello()\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAppService\n\nAppService\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                        \n                            HealthController\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onApplicationShutdown\n                        \n                        \n                    \n                \n            \n            \n                \nonApplicationShutdown(signal?: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.module.ts:68\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    signal\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onModuleInit\n                        \n                        \n                    \n                \n            \n            \n                \nonModuleInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.module.ts:64\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        /* eslint-disable no-console,@typescript-eslint/no-unsafe-assignment,@typescript-eslint/no-unsafe-call,@typescript-eslint/no-unsafe-member-access */\nimport { Module, OnModuleInit, OnApplicationShutdown } from '@nestjs/common'\nimport { ConfigModule } from '@nestjs/config'\nimport { TerminusModule } from '@nestjs/terminus'\nimport { TypeOrmModule } from '@nestjs/typeorm'\n\nimport { PinoLogger, LoggerModule } from 'nestjs-pino'\n\nimport * as Joi from '@hapi/joi'\n\nimport { HealthController } from '../health/health.controller'\nimport { AppController } from './app.controller'\nimport { AppService } from './app.service'\n\nconst ConfigModuleOptions = {\n    isGlobal: true,\n    validationOptions: {\n        allowUnknown: true,\n        abortEarly: true,\n    },\n    validationSchema: Joi.object({\n        PORT: Joi.number().default(3000),\n        NODE_ENV: Joi.string()\n            .valid('development', 'production', 'test', 'provision')\n            .default('development'),\n    }),\n}\n\nconst LoggerModuleOptions = {\n    pinoHttp: {\n        prettyPrint: {\n            colorize: true,\n            levelFirst: false, // Display the log level name before the logged date and time\n            translateTime: true,\n            messageFormat: '{msg}', // 'pid', 'msg', 'level'\n            ignore: 'pid,hostname',\n            errorLikeObjectKeys: ['err', 'error', 'errors'],\n        },\n    },\n}\n\nconst TypeOrmModuleOptions = {\n    type: 'sqlite' as const,\n    database: 'database.sqlite',\n    synchronize: true,\n    logging: true,\n}\n\n@Module({\n    imports: [\n        ConfigModule.forRoot(ConfigModuleOptions),\n        LoggerModule.forRoot(LoggerModuleOptions),\n        TerminusModule, // Health module\n        TypeOrmModule.forRoot(TypeOrmModuleOptions),\n    ],\n    controllers: [AppController, HealthController],\n    providers: [AppService],\n})\nexport class AppModule implements OnModuleInit, OnApplicationShutdown {\n    constructor(private readonly logger: PinoLogger) {\n        logger.setContext(AppModule.name)\n    }\n\n    onModuleInit(): void {\n        this.logger.info(`ModuleInit - AppModule has been initialized.`)\n    }\n\n    onApplicationShutdown(signal?: string): void {\n        this.logger.fatal(\n            `ApplicationShutdown - AppModule has been shutdown with ${signal} signal`,\n        )\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/app.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getHello\n                        \n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.service.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, OnModuleInit } from '@nestjs/common'\n\n@Injectable()\nexport class AppService {\n    getHello(): string {\n        return 'Hello World!'\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Cat.html":{"url":"interfaces/Cat.html","title":"interface - Cat","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Cat\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/cats/interfaces/cat.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        age\n                                \n                                \n                                        breed\n                                \n                                \n                                        name\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        age\n                                    \n                                \n                                \n                                    \n                                        age:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        breed\n                                    \n                                \n                                \n                                    \n                                        breed:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Cat {\n    readonly name: string\n    readonly age: number\n    readonly breed: string\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/CatsController.html":{"url":"controllers/CatsController.html","title":"controller - CatsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  CatsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/cats/cats.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                cats\n            \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                findOne\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            create\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    create(createCatDto: CreateCatDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n            \n                \n                    Defined in src/cats/cats.controller.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createCatDto\n                                    \n                                                CreateCatDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findAll\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/cats/cats.controller.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            findOne\n                        \n                        \n                    \n                \n            \n            \n                \nfindOne(id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n            \n                \n                    Defined in src/cats/cats.controller.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Get, Param, Post, UseGuards } from '@nestjs/common'\n\nimport { CatsService } from './cats.service'\nimport { CreateCatDto } from './dto/create-cat.dto'\nimport { Cat } from './interfaces/cat.interface'\n\n@Controller('cats')\nexport class CatsController {\n    constructor(private readonly catsService: CatsService) {}\n\n    @Post()\n    async create(@Body() createCatDto: CreateCatDto) {\n        this.catsService.create(createCatDto)\n    }\n\n    @Get()\n    async findAll(): Promise {\n        return this.catsService.findAll()\n    }\n\n    @Get(':id')\n    findOne(\n        @Param('id')\n        id: number,\n    ) {\n        return this.catsService.findOne(id)\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CatsModule.html":{"url":"modules/CatsModule.html","title":"module - CatsModule","body":"\n                   \n\n\n\n\n    Modules\n    CatsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_CatsModule\n\n\n\ncluster_CatsModule_providers\n\n\n\n\nCatsService\n\nCatsService\n\n\n\nCatsModule\n\nCatsModule\n\nCatsModule -->\n\nCatsService->CatsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/cats/cats.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            CatsService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            CatsController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common'\n\nimport { CatsController } from './cats.controller'\nimport { CatsService } from './cats.service'\n\n@Module({\n    controllers: [CatsController],\n    providers: [CatsService],\n})\nexport class CatsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CatsService.html":{"url":"injectables/CatsService.html","title":"injectable - CatsService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  CatsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/cats/cats.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                cats\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findOne\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            create\n                        \n                        \n                    \n                \n            \n            \n                \ncreate(cat: Cat)\n                \n            \n\n\n            \n                \n                    Defined in src/cats/cats.service.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    cat\n                                    \n                                                Cat\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findAll\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll()\n                \n            \n\n\n            \n                \n                    Defined in src/cats/cats.service.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findOne\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/cats/cats.service.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            cats\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Cat[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/cats/cats.service.ts:7\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common'\n\nimport { Cat } from './interfaces/cat.interface'\n\n@Injectable()\nexport class CatsService {\n    private readonly cats: Cat[] = []\n\n    create(cat: Cat) {\n        this.cats.push(cat)\n    }\n\n    async findAll(): Promise {\n        return this.cats\n    }\n\n    async findOne(id: number) {\n        return this.cats[id]\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateCatDto.html":{"url":"classes/CreateCatDto.html","title":"class - CreateCatDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateCatDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/cats/dto/create-cat.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                age\n                            \n                            \n                                    Readonly\n                                breed\n                            \n                            \n                                    Readonly\n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            age\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsInt()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/cats/dto/create-cat.dto.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            breed\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsString()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/cats/dto/create-cat.dto.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsString()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/cats/dto/create-cat.dto.ts:5\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsInt, IsString } from 'class-validator'\n\nexport class CreateCatDto {\n    @IsString()\n    readonly name: string\n\n    @IsInt()\n    readonly age: number\n\n    @IsString()\n    readonly breed: string\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/HealthController.html":{"url":"controllers/HealthController.html","title":"controller - HealthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  HealthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/health/health.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                health\n            \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                check\n                            \n                            \n                                onApplicationShutdown\n                            \n                            \n                                onModuleInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            check\n                        \n                        \n                    \n                \n            \n            \n                \ncheck()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@HealthCheck()\n                \n            \n\n            \n                \n                    Defined in src/health/health.controller.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onApplicationShutdown\n                        \n                        \n                    \n                \n            \n            \n                \nonApplicationShutdown(signal?: string)\n                \n            \n\n\n            \n                \n                    Defined in src/health/health.controller.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    signal\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onModuleInit\n                        \n                        \n                    \n                \n            \n            \n                \nonModuleInit()\n                \n            \n\n\n            \n                \n                    Defined in src/health/health.controller.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, OnApplicationShutdown, OnModuleInit } from '@nestjs/common'\nimport { ConfigService } from '@nestjs/config'\nimport { DNSHealthIndicator, HealthCheck, HealthCheckService } from '@nestjs/terminus'\n\n@Controller('health')\nexport class HealthController implements OnModuleInit, OnApplicationShutdown {\n    constructor(\n        private health: HealthCheckService,\n        private dns: DNSHealthIndicator,\n        private config: ConfigService,\n    ) {}\n\n    @Get()\n    @HealthCheck()\n    check() {\n        return this.health.check([\n            () => this.dns.pingCheck('nestjs-docs', 'https://docs.nestjs.com'),\n        ])\n    }\n\n    /*\n     * When the application receives a termination signal it will call any registered\n     * onModuleDestroy(), beforeApplicationShutdown(), then onApplicationShutdown() methods\n     * (in the sequence described above) with the corresponding signal as the first parameter.\n     * If a registered function awaits an asynchronous call (returns a promise), Nest will not\n     * continue in the sequence until the promise is resolved or rejected.\n     */\n\n    onModuleInit(): void {\n        console.log(`ModuleInit - HealthController has been initialized.`, {\n            config: this.config.get('NODE_ENV'),\n        })\n    }\n\n    onApplicationShutdown(signal?: string): void {\n        console.log(\n            `ApplicationShutdown - HealthController has been shutdown with ${signal} signal`,\n        )\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/app.controller.ts\n            \n            controller\n            AppController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/app.module.ts\n            \n            variable\n            ConfigModuleOptions\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/app.module.ts\n            \n            variable\n            LoggerModuleOptions\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/app.module.ts\n            \n            variable\n            TypeOrmModuleOptions\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/app.service.ts\n            \n            injectable\n            AppService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/cats/cats.controller.ts\n            \n            controller\n            CatsController\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/cats/cats.service.ts\n            \n            injectable\n            CatsService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/cats/dto/create-cat.dto.ts\n            \n            class\n            CreateCatDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/cats/interfaces/cat.interface.ts\n            \n            interface\n            Cat\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/health/health.controller.ts\n            \n            controller\n            HealthController\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            createSwagger\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @hapi/joi : ^17.1.1\n        \n            @nestjs/common : ^7.5.1\n        \n            @nestjs/config : ^0.6.1\n        \n            @nestjs/core : ^7.5.1\n        \n            @nestjs/passport : ^7.1.3\n        \n            @nestjs/platform-express : ^7.5.1\n        \n            @nestjs/swagger : ^4.7.5\n        \n            @nestjs/terminus : ^7.0.1\n        \n            @nestjs/typeorm : ^7.1.5\n        \n            class-transformer : ^0.3.1\n        \n            class-validator : ^0.12.2\n        \n            dotenv : ^8.2.0\n        \n            dotenv-expand : ^5.1.0\n        \n            express-rate-limit : ^5.2.3\n        \n            helmet : ^4.2.0\n        \n            joi : ^17.3.0\n        \n            nestjs-pino : ^1.3.0\n        \n            passport : ^0.4.1\n        \n            passport-local : ^1.0.0\n        \n            pino-pretty : ^4.3.0\n        \n            reflect-metadata : ^0.1.13\n        \n            rimraf : ^3.0.2\n        \n            rxjs : ^6.6.3\n        \n            sqlite3 : ^5.0.0\n        \n            swagger-ui-express : ^4.1.5\n        \n            typeorm : ^0.2.29\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                        \n                            createSwagger   (src/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            bootstrap\n                        \n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createSwagger\n                        \n                        \n                    \n                \n            \n            \n                \ncreateSwagger(app)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    app\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n  A progressive Node.js framework for building efficient and scalable server-side applications.\n    \n\n\n\n\n\n\n\n\n  \n    \n  \n\n  \n\nDescription\nNest framework TypeScript starter repository.\nInstallation\n$ npm installRunning the app\n# development\n$ npm run start\n\n# watch mode\n$ npm run start:dev\n\n# production mode\n$ npm run start:prodTest\n# unit tests\n$ npm run test\n\n# e2e tests\n$ npm run test:e2e\n\n# test coverage\n$ npm run test:covSupport\nNest is an MIT-licensed open source project. It can grow thanks to the sponsors and support by the amazing backers. If you'd like to join them, please read more here.\nStay in touch\n\nAuthor - Kamil Myśliwiec\nWebsite - https://nestjs.com\nTwitter - @nestframework\n\nLicense\nNest is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CatsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_CatsModule\n\n\n\ncluster_CatsModule_providers\n\n\n\n\nAppService\n\nAppService\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nCatsService\n\nCatsService\n\n\n\nCatsModule\n\nCatsModule\n\nCatsModule -->\n\nCatsService->CatsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        2 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    3 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    2 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    1 Class\n                \n            \n        \n        \n            \n                \n                    \n                    1 Interface\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ConfigModuleOptions   (src/.../app.module.ts)\n                        \n                        \n                            LoggerModuleOptions   (src/.../app.module.ts)\n                        \n                        \n                            TypeOrmModuleOptions   (src/.../app.module.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/app.module.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            ConfigModuleOptions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    isGlobal: true,\n    validationOptions: {\n        allowUnknown: true,\n        abortEarly: true,\n    },\n    validationSchema: Joi.object({\n        PORT: Joi.number().default(3000),\n        NODE_ENV: Joi.string()\n            .valid('development', 'production', 'test', 'provision')\n            .default('development'),\n    }),\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            LoggerModuleOptions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    pinoHttp: {\n        prettyPrint: {\n            colorize: true,\n            levelFirst: false, // Display the log level name before the logged date and time\n            translateTime: true,\n            messageFormat: '{msg}', // 'pid', 'msg', 'level'\n            ignore: 'pid,hostname',\n            errorLikeObjectKeys: ['err', 'error', 'errors'],\n        },\n    },\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            TypeOrmModuleOptions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    type: 'sqlite' as const,\n    database: 'database.sqlite',\n    synchronize: true,\n    logging: true,\n}\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
