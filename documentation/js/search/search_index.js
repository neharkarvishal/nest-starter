var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/controllers/AppController.html",[0,0.951,1,1.717]],["body/controllers/AppController.html",[0,1.412,1,2.55,2,1.209,3,0.368,4,0.303,5,0.303,6,2.635,7,0.963,8,1.581,9,3.013,10,1.716,11,0.043,12,1.209,13,3.23,14,1.209,15,1.772,16,0.666,17,0.509,18,2.217,19,2.635,20,0.368,21,0.075,22,2.243,23,1.95,24,1.355,25,3.23,26,0.025,27,0.032,28,0.025]],["title/modules/AppModule.html",[29,0.755,30,1.717]],["body/modules/AppModule.html",[1,2.431,2,1.288,3,0.273,4,0.225,5,0.225,11,0.043,16,0.806,17,0.378,18,2.285,19,1.955,20,0.273,21,0.056,26,0.018,27,0.026,28,0.018,29,1.068,30,3.19,31,0.897,32,0.897,33,1.129,34,1.129,35,0.897,36,1.897,37,1.129,38,1.955,39,1.955,40,1.955,41,2.578,42,2.285,43,1.621,44,1.129,45,1.129,46,2.397,47,2.139,48,2.807,49,1.955,50,1.447,51,2.807,52,1.447,53,1.955,54,1.955,55,2.397,56,2.397,57,1.955]],["title/injectables/AppService.html",[18,1.34,58,0.755]],["body/injectables/AppService.html",[3,0.394,4,0.325,5,0.325,7,1.031,8,1.652,9,3.092,11,0.043,12,1.295,14,1.295,15,1.852,16,0.545,17,0.545,18,2.079,20,0.394,21,0.08,24,1.451,26,0.026,27,0.034,28,0.026,58,1.171,59,1.629,60,2.821,61,3.458,62,2.821,63,2.821]],["title/classes/Cat.html",[21,0.066,64,1.717]],["body/classes/Cat.html",[3,0.469,4,0.387,5,0.387,11,0.04,20,0.469,21,0.096,26,0.031,27,0.037,28,0.031,64,2.969,65,2.487,66,3.36]],["title/controllers/CatsController.html",[0,0.951,67,1.717]],["body/controllers/CatsController.html",[0,0.609,2,0.682,3,0.208,4,0.171,5,0.171,7,0.543,8,1.05,10,2.205,11,0.044,12,1.554,14,1.554,15,2.029,16,0.606,17,0.287,20,0.208,21,0.042,22,1.265,23,1.1,24,1.741,26,0.014,27,0.021,28,0.014,67,1.694,68,1.486,69,1.486,70,1.486,71,2.289,72,3.135,73,2.289,74,2.289,75,2.289,76,1.486,77,2.065,78,3.421,79,1.822,80,2.32,81,2.32,82,2.32,83,2.32,84,1.822,85,1.486,86,2.805,87,1.822,88,3.576,89,1.486,90,2.805,91,1.822,92,1.486,93,2.506,94,2.805,95,1.822,96,2.805,97,1.822,98,1.822,99,1.822,100,1.612,101,1.486,102,0.968,103,1.948,104,1.1,105,1.822,106,1.822,107,1.822,108,1.822,109,1.822,110,1.822,111,1.822,112,1.822,113,1.822,114,1.822]],["title/modules/CatsModule.html",[29,0.755,41,1.511]],["body/modules/CatsModule.html",[2,1.522,3,0.347,4,0.286,5,0.286,11,0.042,16,0.721,17,0.481,20,0.347,21,0.071,26,0.023,27,0.031,28,0.023,29,1.213,31,1.141,32,1.141,33,1.436,34,1.436,35,1.141,36,2.154,37,1.436,41,2.778,43,1.915,44,1.436,45,1.436,67,2.761,100,2.463,101,2.486,115,2.486,116,2.486,117,3.047,118,3.047]],["title/injectables/CatsService.html",[58,0.755,100,1.34]],["body/injectables/CatsService.html",[3,0.224,4,0.185,5,0.185,7,0.587,8,1.114,11,0.043,12,1.608,14,1.757,15,1.802,16,0.566,17,0.31,20,0.224,21,0.046,24,1.802,26,0.015,27,0.023,28,0.015,58,0.79,59,0.927,64,2.415,70,1.605,71,2.428,72,3.263,73,2.428,74,2.428,75,2.428,76,2.428,77,2.024,80,2.415,81,2.415,82,2.415,83,2.415,85,2.428,88,3.686,89,2.428,92,2.428,93,2.493,100,1.402,102,1.046,103,2.066,104,1.188,119,1.605,120,1.968,121,1.968,122,4.946,123,1.968,124,1.968,125,1.968,126,4.296,127,1.968,128,1.367,129,1.968,130,1.968]],["title/classes/CreateCatDto.html",[21,0.066,77,1.34]],["body/classes/CreateCatDto.html",[3,0.466,4,0.384,5,0.384,11,0.04,20,0.466,21,0.095,26,0.031,27,0.037,28,0.031,65,2.468,77,2.306,102,2.172,131,2.838]],["title/modules/CronModule.html",[29,0.755,42,1.34]],["body/modules/CronModule.html",[3,0.315,4,0.26,5,0.26,11,0.042,16,0.6,17,0.436,20,0.315,21,0.064,26,0.021,27,0.029,28,0.021,29,1.155,31,1.035,32,1.035,33,1.303,34,1.303,35,1.035,36,2.05,37,2.05,42,2.452,43,1.793,44,1.303,45,1.303,132,2.256,133,2.256,134,2.256,135,2.945,136,2.766,137,2.766,138,2.643,139,2.643,140,2.643,141,2.643,142,3.105,143,3.105,144,3.105]],["title/injectables/CronService.html",[58,0.755,135,1.511]],["body/injectables/CronService.html",[3,0.261,4,0.215,5,0.215,7,0.684,8,1.248,10,2.087,11,0.044,12,1.614,14,1.471,16,0.526,17,0.362,20,0.261,21,0.053,23,2.372,26,0.017,27,0.025,28,0.017,50,1.385,58,0.885,59,1.081,128,2.316,135,1.772,145,1.872,146,3.335,147,3.205,148,4.312,149,4.312,150,4.312,151,4.312,152,3.335,153,2.295,154,3.205,155,3.335,156,2.295,157,3.335,158,2.295,159,2.295,160,2.295,161,3.335,162,2.295,163,2.295,164,2.295,165,2.295,166,3.928,167,2.295,168,2.295,169,2.295,170,3.335,171,2.295,172,2.295]],["title/controllers/HealthController.html",[0,0.951,47,1.511]],["body/controllers/HealthController.html",[0,0.641,2,0.718,3,0.219,4,0.18,5,0.18,7,0.572,8,1.323,10,1.02,11,0.044,12,1.323,14,1.478,15,1.482,16,0.557,17,0.303,20,0.219,21,0.045,24,0.805,26,0.015,27,0.022,28,0.015,47,2.098,52,1.159,69,1.565,80,1.159,81,1.159,82,1.159,83,1.159,138,1.332,139,1.332,140,1.332,147,2.382,154,3.221,173,1.565,174,2.919,175,3.949,176,4.248,177,4.475,178,1.919,179,1.919,180,2.919,181,1.919,182,4.248,183,1.919,184,1.919,185,1.919,186,1.565,187,2.919,188,2.919,189,2.919,190,1.919,191,1.919,192,1.919,193,1.919,194,1.919,195,1.919,196,1.919,197,1.919,198,1.919,199,1.919,200,1.919,201,1.919,202,1.919,203,1.919,204,1.919,205,2.919,206,2.919,207,1.919,208,1.919,209,2.919,210,1.919,211,1.919,212,1.919,213,1.919,214,1.919,215,1.565,216,1.919,217,1.919,218,2.919,219,1.565,220,1.919,221,1.919,222,1.919,223,1.919,224,1.919,225,1.919,226,1.919,227,1.919,228,1.919]],["title/controllers/QueueController.html",[0,0.951,229,1.717]],["body/controllers/QueueController.html",[0,1.412,2,1.209,3,0.368,4,0.303,5,0.303,7,0.963,8,1.581,9,3.013,10,1.716,11,0.043,12,1.209,14,1.209,15,1.772,16,0.666,17,0.509,20,0.368,21,0.075,22,2.243,23,1.95,24,1.355,26,0.025,27,0.032,28,0.025,229,2.55,230,2.635,231,3.23,232,2.217,233,2.635,234,3.23]],["title/modules/QueueModule.html",[29,0.755,235,1.717]],["body/modules/QueueModule.html",[2,1.309,3,0.279,4,0.23,5,0.23,11,0.043,16,0.793,17,0.387,20,0.279,21,0.057,26,0.019,27,0.027,28,0.019,29,1.082,31,0.918,32,0.918,33,1.155,34,1.155,35,0.918,36,1.921,37,1.155,42,2.303,43,1.648,44,1.155,45,1.155,47,2.166,48,2.853,49,2,50,1.48,51,2.853,52,1.48,53,2,54,2,57,2,138,1.702,139,1.702,140,1.702,141,1.702,142,2,143,2,144,2,229,2.462,232,2.303,233,2,235,3.105,236,2,237,2,238,2.451,239,2.451,240,2.451]],["title/injectables/QueueService.html",[58,0.755,232,1.34]],["body/injectables/QueueService.html",[3,0.394,4,0.325,5,0.325,7,1.031,8,1.652,9,3.092,11,0.043,12,1.295,14,1.295,15,1.852,16,0.545,17,0.545,20,0.394,21,0.08,24,1.451,26,0.026,27,0.034,28,0.026,58,1.171,59,1.629,62,2.821,63,2.821,232,2.079,241,2.821,242,3.458]],["title/classes/UpdateCatDto.html",[21,0.066,93,1.511]],["body/classes/UpdateCatDto.html",[3,0.421,4,0.347,5,0.347,11,0.042,16,0.726,20,0.421,21,0.086,26,0.028,27,0.035,28,0.028,65,2.231,77,1.741,93,2.445,102,1.963,103,2.566,104,2.231,131,2.566,243,3.695,244,3.014,245,3.014,246,3.695,247,3.695]],["title/modules/UtilsModule.html",[29,0.755,248,1.717]],["body/modules/UtilsModule.html",[3,0.343,4,0.283,5,0.283,11,0.042,16,0.636,17,0.475,20,0.343,21,0.07,26,0.023,27,0.031,28,0.023,29,1.207,31,1.128,32,1.128,33,1.42,34,1.42,35,1.128,36,2.142,37,2.142,43,1.9,44,1.42,45,1.42,248,3.213,249,2.458,250,2.458,251,2.458,252,2.986,253,3.013,254,3.013]],["title/injectables/UtilsService.html",[58,0.755,252,1.511]],["body/injectables/UtilsService.html",[3,0.449,4,0.37,5,0.37,11,0.042,16,0.621,17,0.621,20,0.449,21,0.092,26,0.03,27,0.036,28,0.03,58,1.27,59,1.855,252,2.543,255,3.212]],["title/coverage.html",[256,2.694]],["body/coverage.html",[0,1.427,1,1.357,5,0.211,6,1.833,11,0.043,18,1.059,21,0.09,26,0.017,27,0.025,28,0.017,35,1.229,47,1.194,58,1.205,60,1.833,64,1.357,66,1.833,67,1.357,68,1.833,77,1.059,82,1.357,93,1.194,100,1.059,102,1.194,104,1.357,119,1.833,128,1.56,131,2.28,135,1.194,145,1.833,173,1.833,215,3.87,229,1.357,230,1.833,232,1.059,241,1.833,252,1.194,255,1.833,256,1.56,257,2.247,258,2.247,259,2.247,260,5.569,261,4.269,262,3.284,263,5.207,264,3.166,265,2.679,266,2.679,267,3.166,268,2.247,269,2.247,270,2.247,271,2.247]],["title/dependencies.html",[32,1.28,272,2.376]],["body/dependencies.html",[11,0.044,17,0.401,21,0.084,26,0.019,27,0.027,28,0.019,32,0.952,50,1.536,52,1.536,186,2.075,244,2.075,245,2.075,273,2.544,274,2.544,275,4.161,276,2.544,277,2.544,278,2.544,279,2.544,280,2.544,281,2.544,282,2.544,283,4.161,284,3.59,285,2.544,286,2.544,287,2.544,288,2.544,289,2.544,290,2.544,291,2.544,292,2.544,293,2.544,294,2.544,295,2.544,296,2.544,297,2.544,298,2.544,299,2.544,300,2.544,301,3.59,302,2.544,303,3.59,304,2.544,305,2.544,306,2.544,307,2.544,308,2.544,309,2.544,310,2.544,311,2.544,312,2.544,313,2.544,314,2.544,315,2.544,316,2.544,317,2.544,318,2.544,319,2.544,320,2.544,321,2.544]],["title/miscellaneous/functions.html",[322,1.938,323,2.79]],["body/miscellaneous/functions.html",[7,0.946,11,0.04,26,0.024,27,0.032,28,0.024,35,1.979,80,2.993,81,2.993,83,2.993,264,2.588,265,4.043,266,4.043,267,2.588,322,2.588,323,2.588,324,5.287,325,4.174,326,4.043,327,4.174]],["title/index.html",[7,0.708,328,2.376,329,2.376]],["body/index.html",[4,0.238,11,0.042,26,0.019,27,0.027,28,0.019,141,1.758,219,3.386,256,1.758,326,2.065,330,2.532,331,2.532,332,3.578,333,2.532,334,2.532,335,2.532,336,2.532,337,2.532,338,2.532,339,2.532,340,2.532,341,2.532,342,2.532,343,5.078,344,2.532,345,2.532,346,4.94,347,2.532,348,2.532,349,3.578,350,2.532,351,2.532,352,2.532,353,2.532,354,3.578,355,3.578,356,2.532,357,2.532,358,2.532,359,3.578,360,3.578,361,2.532,362,2.532,363,2.532,364,2.532,365,2.532,366,2.065,367,2.532,368,2.532,369,2.532,370,2.532,371,2.532,372,2.532,373,2.532,374,2.532,375,2.532,376,2.532,377,2.532,378,2.532,379,2.532,380,2.532,381,2.532,382,2.532,383,2.532,384,2.532]],["title/modules.html",[31,1.452]],["body/modules.html",[11,0.035,26,0.028,27,0.035,28,0.028,30,2.216,31,1.374,41,1.95,42,1.729,235,2.216,248,2.216,366,4.394,385,5.386,386,5.386,387,5.386]],["title/overview.html",[388,3.164]],["body/overview.html",[2,0.926,11,0.041,18,1.931,26,0.019,27,0.027,28,0.019,29,0.656,30,3.112,31,0.926,32,0.926,33,1.165,34,1.165,35,0.926,36,1.165,37,1.165,38,2.018,39,2.018,40,2.018,41,2.507,42,2.376,43,1.658,44,1.165,45,1.165,59,1.165,65,1.494,100,1.931,115,2.018,116,2.018,132,2.018,133,2.018,134,2.018,135,2.68,232,1.931,235,2.96,236,2.018,237,2.018,248,2.848,249,2.018,250,2.018,251,2.018,252,2.68,388,2.018,389,3.52,390,2.474,391,2.474]]],"invertedIndex":[["",{"_index":11,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Cat.html":{},"controllers/CatsController.html":{},"modules/CatsModule.html":{},"injectables/CatsService.html":{},"classes/CreateCatDto.html":{},"modules/CronModule.html":{},"injectables/CronService.html":{},"controllers/HealthController.html":{},"controllers/QueueController.html":{},"modules/QueueModule.html":{},"injectables/QueueService.html":{},"classes/UpdateCatDto.html":{},"modules/UtilsModule.html":{},"injectables/UtilsService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["0",{"_index":260,"title":{},"body":{"coverage.html":{}}}],["0.1.1",{"_index":279,"title":{},"body":{"dependencies.html":{}}}],["0.1.13",{"_index":310,"title":{},"body":{"dependencies.html":{}}}],["0.12.2",{"_index":292,"title":{},"body":{"dependencies.html":{}}}],["0.2.29",{"_index":321,"title":{},"body":{"dependencies.html":{}}}],["0.3.1",{"_index":290,"title":{},"body":{"dependencies.html":{}}}],["0.4.1",{"_index":284,"title":{},"body":{"dependencies.html":{}}}],["0.6.1",{"_index":277,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":263,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":261,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":269,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":268,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":262,"title":{},"body":{"coverage.html":{}}}],["1.0.0",{"_index":305,"title":{},"body":{"dependencies.html":{}}}],["1.3.0",{"_index":302,"title":{},"body":{"dependencies.html":{}}}],["100",{"_index":169,"title":{},"body":{"injectables/CronService.html":{}}}],["17.1.1",{"_index":274,"title":{},"body":{"dependencies.html":{}}}],["17.3.0",{"_index":299,"title":{},"body":{"dependencies.html":{}}}],["3",{"_index":391,"title":{},"body":{"overview.html":{}}}],["3.0.2",{"_index":312,"title":{},"body":{"dependencies.html":{}}}],["4",{"_index":390,"title":{},"body":{"overview.html":{}}}],["4.1.5",{"_index":319,"title":{},"body":{"dependencies.html":{}}}],["4.2.0",{"_index":297,"title":{},"body":{"dependencies.html":{}}}],["4.3.0",{"_index":307,"title":{},"body":{"dependencies.html":{}}}],["4.7.5",{"_index":285,"title":{},"body":{"dependencies.html":{}}}],["5",{"_index":389,"title":{},"body":{"overview.html":{}}}],["5.0.0",{"_index":316,"title":{},"body":{"dependencies.html":{}}}],["5.2.3",{"_index":295,"title":{},"body":{"dependencies.html":{}}}],["50",{"_index":172,"title":{},"body":{"injectables/CronService.html":{}}}],["6.6.3",{"_index":314,"title":{},"body":{"dependencies.html":{}}}],["60",{"_index":168,"title":{},"body":{"injectables/CronService.html":{}}}],["7.0.1",{"_index":286,"title":{},"body":{"dependencies.html":{}}}],["7.1.3",{"_index":281,"title":{},"body":{"dependencies.html":{}}}],["7.1.5",{"_index":288,"title":{},"body":{"dependencies.html":{}}}],["7.5.1",{"_index":275,"title":{},"body":{"dependencies.html":{}}}],["above",{"_index":211,"title":{},"body":{"controllers/HealthController.html":{}}}],["action",{"_index":126,"title":{},"body":{"injectables/CatsService.html":{}}}],["adds",{"_index":127,"title":{},"body":{"injectables/CatsService.html":{}}}],["amazing",{"_index":367,"title":{},"body":{"index.html":{}}}],["apitags",{"_index":185,"title":{},"body":{"controllers/HealthController.html":{}}}],["apitags(healthcontroller.name",{"_index":191,"title":{},"body":{"controllers/HealthController.html":{}}}],["app",{"_index":326,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["app/cron/cron.module",{"_index":53,"title":{},"body":{"modules/AppModule.html":{},"modules/QueueModule.html":{}}}],["app/cron/cron.service",{"_index":137,"title":{},"body":{"modules/CronModule.html":{}}}],["app/health",{"_index":54,"title":{},"body":{"modules/AppModule.html":{},"modules/QueueModule.html":{}}}],["appcontroller",{"_index":1,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["application",{"_index":202,"title":{},"body":{"controllers/HealthController.html":{}}}],["applications",{"_index":338,"title":{},"body":{"index.html":{}}}],["applicationshutdown",{"_index":227,"title":{},"body":{"controllers/HealthController.html":{}}}],["appmodule",{"_index":30,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["apps/.../main.ts",{"_index":324,"title":{},"body":{"miscellaneous/functions.html":{}}}],["apps/backend/src/app.controller",{"_index":55,"title":{},"body":{"modules/AppModule.html":{}}}],["apps/backend/src/app.controller.ts",{"_index":6,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["apps/backend/src/app.controller.ts:10",{"_index":13,"title":{},"body":{"controllers/AppController.html":{}}}],["apps/backend/src/app.module.ts",{"_index":46,"title":{},"body":{"modules/AppModule.html":{}}}],["apps/backend/src/app.service",{"_index":19,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["apps/backend/src/app.service.ts",{"_index":60,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["apps/backend/src/app.service.ts:5",{"_index":61,"title":{},"body":{"injectables/AppService.html":{}}}],["apps/backend/src/cats/cats.controller",{"_index":118,"title":{},"body":{"modules/CatsModule.html":{}}}],["apps/backend/src/cats/cats.controller.ts",{"_index":68,"title":{},"body":{"controllers/CatsController.html":{},"coverage.html":{}}}],["apps/backend/src/cats/cats.controller.ts:12",{"_index":79,"title":{},"body":{"controllers/CatsController.html":{}}}],["apps/backend/src/cats/cats.controller.ts:17",{"_index":84,"title":{},"body":{"controllers/CatsController.html":{}}}],["apps/backend/src/cats/cats.controller.ts:22",{"_index":87,"title":{},"body":{"controllers/CatsController.html":{}}}],["apps/backend/src/cats/cats.controller.ts:27",{"_index":95,"title":{},"body":{"controllers/CatsController.html":{}}}],["apps/backend/src/cats/cats.controller.ts:32",{"_index":91,"title":{},"body":{"controllers/CatsController.html":{}}}],["apps/backend/src/cats/cats.module",{"_index":56,"title":{},"body":{"modules/AppModule.html":{}}}],["apps/backend/src/cats/cats.module.ts",{"_index":117,"title":{},"body":{"modules/CatsModule.html":{}}}],["apps/backend/src/cats/cats.service",{"_index":101,"title":{},"body":{"controllers/CatsController.html":{},"modules/CatsModule.html":{}}}],["apps/backend/src/cats/cats.service.ts",{"_index":119,"title":{},"body":{"injectables/CatsService.html":{},"coverage.html":{}}}],["apps/backend/src/cats/cats.service.ts:12",{"_index":121,"title":{},"body":{"injectables/CatsService.html":{}}}],["apps/backend/src/cats/cats.service.ts:16",{"_index":123,"title":{},"body":{"injectables/CatsService.html":{}}}],["apps/backend/src/cats/cats.service.ts:20",{"_index":125,"title":{},"body":{"injectables/CatsService.html":{}}}],["apps/backend/src/cats/cats.service.ts:24",{"_index":124,"title":{},"body":{"injectables/CatsService.html":{}}}],["apps/backend/src/cats/cats.service.ts:8",{"_index":120,"title":{},"body":{"injectables/CatsService.html":{}}}],["apps/backend/src/cats/dto/create",{"_index":102,"title":{},"body":{"controllers/CatsController.html":{},"injectables/CatsService.html":{},"classes/CreateCatDto.html":{},"classes/UpdateCatDto.html":{},"coverage.html":{}}}],["apps/backend/src/cats/dto/update",{"_index":104,"title":{},"body":{"controllers/CatsController.html":{},"injectables/CatsService.html":{},"classes/UpdateCatDto.html":{},"coverage.html":{}}}],["apps/backend/src/cats/entities/cat.entity.ts",{"_index":66,"title":{},"body":{"classes/Cat.html":{},"coverage.html":{}}}],["apps/backend/src/main.ts",{"_index":264,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["apps/queue/src/main.ts",{"_index":267,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["apps/queue/src/queue.controller",{"_index":240,"title":{},"body":{"modules/QueueModule.html":{}}}],["apps/queue/src/queue.controller.ts",{"_index":230,"title":{},"body":{"controllers/QueueController.html":{},"coverage.html":{}}}],["apps/queue/src/queue.controller.ts:10",{"_index":231,"title":{},"body":{"controllers/QueueController.html":{}}}],["apps/queue/src/queue.module.ts",{"_index":239,"title":{},"body":{"modules/QueueModule.html":{}}}],["apps/queue/src/queue.service",{"_index":233,"title":{},"body":{"controllers/QueueController.html":{},"modules/QueueModule.html":{}}}],["apps/queue/src/queue.service.ts",{"_index":241,"title":{},"body":{"injectables/QueueService.html":{},"coverage.html":{}}}],["apps/queue/src/queue.service.ts:5",{"_index":242,"title":{},"body":{"injectables/QueueService.html":{}}}],["appservice",{"_index":18,"title":{"injectables/AppService.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"coverage.html":{},"overview.html":{}}}],["assignment",{"_index":144,"title":{},"body":{"modules/CronModule.html":{},"modules/QueueModule.html":{}}}],["asynchronous",{"_index":217,"title":{},"body":{"controllers/HealthController.html":{}}}],["author",{"_index":377,"title":{},"body":{"index.html":{}}}],["awaits",{"_index":216,"title":{},"body":{"controllers/HealthController.html":{}}}],["backers",{"_index":368,"title":{},"body":{"index.html":{}}}],["before",{"_index":193,"title":{},"body":{"controllers/HealthController.html":{}}}],["beforeapplicationshutdown",{"_index":208,"title":{},"body":{"controllers/HealthController.html":{}}}],["body",{"_index":96,"title":{},"body":{"controllers/CatsController.html":{}}}],["bootstrap",{"_index":35,"title":{},"body":{"modules/AppModule.html":{},"modules/CatsModule.html":{},"modules/CronModule.html":{},"modules/QueueModule.html":{},"modules/UtilsModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["browse",{"_index":387,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":385,"title":{},"body":{"modules.html":{}}}],["building",{"_index":333,"title":{},"body":{"index.html":{}}}],["call",{"_index":205,"title":{},"body":{"controllers/HealthController.html":{}}}],["cat",{"_index":64,"title":{"classes/Cat.html":{}},"body":{"classes/Cat.html":{},"injectables/CatsService.html":{},"coverage.html":{}}}],["cat.dto",{"_index":103,"title":{},"body":{"controllers/CatsController.html":{},"injectables/CatsService.html":{},"classes/UpdateCatDto.html":{}}}],["cat.dto.ts",{"_index":131,"title":{},"body":{"classes/CreateCatDto.html":{},"classes/UpdateCatDto.html":{},"coverage.html":{}}}],["cats",{"_index":70,"title":{},"body":{"controllers/CatsController.html":{},"injectables/CatsService.html":{}}}],["catscontroller",{"_index":67,"title":{"controllers/CatsController.html":{}},"body":{"controllers/CatsController.html":{},"modules/CatsModule.html":{},"coverage.html":{}}}],["catsmodule",{"_index":41,"title":{"modules/CatsModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CatsModule.html":{},"modules.html":{},"overview.html":{}}}],["catsservice",{"_index":100,"title":{"injectables/CatsService.html":{}},"body":{"controllers/CatsController.html":{},"modules/CatsModule.html":{},"injectables/CatsService.html":{},"coverage.html":{},"overview.html":{}}}],["check",{"_index":175,"title":{},"body":{"controllers/HealthController.html":{}}}],["class",{"_index":21,"title":{"classes/Cat.html":{},"classes/CreateCatDto.html":{},"classes/UpdateCatDto.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Cat.html":{},"controllers/CatsController.html":{},"modules/CatsModule.html":{},"injectables/CatsService.html":{},"classes/CreateCatDto.html":{},"modules/CronModule.html":{},"injectables/CronService.html":{},"controllers/HealthController.html":{},"controllers/QueueController.html":{},"modules/QueueModule.html":{},"injectables/QueueService.html":{},"classes/UpdateCatDto.html":{},"modules/UtilsModule.html":{},"injectables/UtilsService.html":{},"coverage.html":{},"dependencies.html":{}}}],["classes",{"_index":65,"title":{},"body":{"classes/Cat.html":{},"classes/CreateCatDto.html":{},"classes/UpdateCatDto.html":{},"overview.html":{}}}],["cluster_appmodule",{"_index":38,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":40,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":39,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_catsmodule",{"_index":115,"title":{},"body":{"modules/CatsModule.html":{},"overview.html":{}}}],["cluster_catsmodule_providers",{"_index":116,"title":{},"body":{"modules/CatsModule.html":{},"overview.html":{}}}],["cluster_cronmodule",{"_index":132,"title":{},"body":{"modules/CronModule.html":{},"overview.html":{}}}],["cluster_cronmodule_exports",{"_index":133,"title":{},"body":{"modules/CronModule.html":{},"overview.html":{}}}],["cluster_cronmodule_providers",{"_index":134,"title":{},"body":{"modules/CronModule.html":{},"overview.html":{}}}],["cluster_queuemodule",{"_index":236,"title":{},"body":{"modules/QueueModule.html":{},"overview.html":{}}}],["cluster_queuemodule_imports",{"_index":238,"title":{},"body":{"modules/QueueModule.html":{}}}],["cluster_queuemodule_providers",{"_index":237,"title":{},"body":{"modules/QueueModule.html":{},"overview.html":{}}}],["cluster_utilsmodule",{"_index":249,"title":{},"body":{"modules/UtilsModule.html":{},"overview.html":{}}}],["cluster_utilsmodule_exports",{"_index":250,"title":{},"body":{"modules/UtilsModule.html":{},"overview.html":{}}}],["cluster_utilsmodule_providers",{"_index":251,"title":{},"body":{"modules/UtilsModule.html":{},"overview.html":{}}}],["console.log",{"_index":226,"title":{},"body":{"controllers/HealthController.html":{}}}],["console.log(`moduleinit",{"_index":224,"title":{},"body":{"controllers/HealthController.html":{}}}],["constructor",{"_index":196,"title":{},"body":{"controllers/HealthController.html":{}}}],["constructor(private",{"_index":22,"title":{},"body":{"controllers/AppController.html":{},"controllers/CatsController.html":{},"controllers/QueueController.html":{}}}],["continue",{"_index":220,"title":{},"body":{"controllers/HealthController.html":{}}}],["controller",{"_index":0,"title":{"controllers/AppController.html":{},"controllers/CatsController.html":{},"controllers/HealthController.html":{},"controllers/QueueController.html":{}},"body":{"controllers/AppController.html":{},"controllers/CatsController.html":{},"controllers/HealthController.html":{},"controllers/QueueController.html":{},"coverage.html":{}}}],["controller('cats",{"_index":105,"title":{},"body":{"controllers/CatsController.html":{}}}],["controller('health",{"_index":190,"title":{},"body":{"controllers/HealthController.html":{}}}],["controllers",{"_index":2,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/CatsController.html":{},"modules/CatsModule.html":{},"controllers/HealthController.html":{},"controllers/QueueController.html":{},"modules/QueueModule.html":{},"overview.html":{}}}],["corresponding",{"_index":212,"title":{},"body":{"controllers/HealthController.html":{}}}],["coverage",{"_index":256,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["create",{"_index":71,"title":{},"body":{"controllers/CatsController.html":{},"injectables/CatsService.html":{}}}],["create(@body",{"_index":106,"title":{},"body":{"controllers/CatsController.html":{}}}],["create(createcatdto",{"_index":76,"title":{},"body":{"controllers/CatsController.html":{},"injectables/CatsService.html":{}}}],["createcatdto",{"_index":77,"title":{"classes/CreateCatDto.html":{}},"body":{"controllers/CatsController.html":{},"injectables/CatsService.html":{},"classes/CreateCatDto.html":{},"classes/UpdateCatDto.html":{},"coverage.html":{}}}],["createswagger",{"_index":265,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["createswagger(app",{"_index":325,"title":{},"body":{"miscellaneous/functions.html":{}}}],["cron",{"_index":163,"title":{},"body":{"injectables/CronService.html":{}}}],["cron('60",{"_index":152,"title":{},"body":{"injectables/CronService.html":{}}}],["cronmodule",{"_index":42,"title":{"modules/CronModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CronModule.html":{},"modules/QueueModule.html":{},"modules.html":{},"overview.html":{}}}],["cronservice",{"_index":135,"title":{"injectables/CronService.html":{}},"body":{"modules/CronModule.html":{},"injectables/CronService.html":{},"coverage.html":{},"overview.html":{}}}],["declarations",{"_index":34,"title":{},"body":{"modules/AppModule.html":{},"modules/CatsModule.html":{},"modules/CronModule.html":{},"modules/QueueModule.html":{},"modules/UtilsModule.html":{},"overview.html":{}}}],["decorators",{"_index":10,"title":{},"body":{"controllers/AppController.html":{},"controllers/CatsController.html":{},"injectables/CronService.html":{},"controllers/HealthController.html":{},"controllers/QueueController.html":{}}}],["default",{"_index":159,"title":{},"body":{"injectables/CronService.html":{}}}],["define",{"_index":194,"title":{},"body":{"controllers/HealthController.html":{}}}],["defined",{"_index":12,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/CatsController.html":{},"injectables/CatsService.html":{},"injectables/CronService.html":{},"controllers/HealthController.html":{},"controllers/QueueController.html":{},"injectables/QueueService.html":{}}}],["delete",{"_index":99,"title":{},"body":{"controllers/CatsController.html":{}}}],["delete(':id",{"_index":90,"title":{},"body":{"controllers/CatsController.html":{}}}],["dependencies",{"_index":32,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/CatsModule.html":{},"modules/CronModule.html":{},"modules/QueueModule.html":{},"modules/UtilsModule.html":{},"dependencies.html":{},"overview.html":{}}}],["described",{"_index":210,"title":{},"body":{"controllers/HealthController.html":{}}}],["description",{"_index":339,"title":{},"body":{"index.html":{}}}],["development",{"_index":345,"title":{},"body":{"index.html":{}}}],["disable",{"_index":139,"title":{},"body":{"modules/CronModule.html":{},"controllers/HealthController.html":{},"modules/QueueModule.html":{}}}],["dns",{"_index":197,"title":{},"body":{"controllers/HealthController.html":{}}}],["dnshealthindicator",{"_index":187,"title":{},"body":{"controllers/HealthController.html":{}}}],["docs",{"_index":200,"title":{},"body":{"controllers/HealthController.html":{}}}],["documentation",{"_index":257,"title":{},"body":{"coverage.html":{}}}],["e2e",{"_index":356,"title":{},"body":{"index.html":{}}}],["efficient",{"_index":334,"title":{},"body":{"index.html":{}}}],["eslint",{"_index":138,"title":{},"body":{"modules/CronModule.html":{},"controllers/HealthController.html":{},"modules/QueueModule.html":{}}}],["eslint/no",{"_index":142,"title":{},"body":{"modules/CronModule.html":{},"modules/QueueModule.html":{}}}],["export",{"_index":20,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Cat.html":{},"controllers/CatsController.html":{},"modules/CatsModule.html":{},"injectables/CatsService.html":{},"classes/CreateCatDto.html":{},"modules/CronModule.html":{},"injectables/CronService.html":{},"controllers/HealthController.html":{},"controllers/QueueController.html":{},"modules/QueueModule.html":{},"injectables/QueueService.html":{},"classes/UpdateCatDto.html":{},"modules/UtilsModule.html":{},"injectables/UtilsService.html":{}}}],["exports",{"_index":37,"title":{},"body":{"modules/AppModule.html":{},"modules/CatsModule.html":{},"modules/CronModule.html":{},"modules/QueueModule.html":{},"modules/UtilsModule.html":{},"overview.html":{}}}],["express",{"_index":283,"title":{},"body":{"dependencies.html":{}}}],["extends",{"_index":246,"title":{},"body":{"classes/UpdateCatDto.html":{}}}],["file",{"_index":5,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Cat.html":{},"controllers/CatsController.html":{},"modules/CatsModule.html":{},"injectables/CatsService.html":{},"classes/CreateCatDto.html":{},"modules/CronModule.html":{},"injectables/CronService.html":{},"controllers/HealthController.html":{},"controllers/QueueController.html":{},"modules/QueueModule.html":{},"injectables/QueueService.html":{},"classes/UpdateCatDto.html":{},"modules/UtilsModule.html":{},"injectables/UtilsService.html":{},"coverage.html":{}}}],["findall",{"_index":72,"title":{},"body":{"controllers/CatsController.html":{},"injectables/CatsService.html":{}}}],["findone",{"_index":73,"title":{},"body":{"controllers/CatsController.html":{},"injectables/CatsService.html":{}}}],["findone(@param('id",{"_index":109,"title":{},"body":{"controllers/CatsController.html":{}}}],["findone(id",{"_index":85,"title":{},"body":{"controllers/CatsController.html":{},"injectables/CatsService.html":{}}}],["first",{"_index":213,"title":{},"body":{"controllers/HealthController.html":{}}}],["framework",{"_index":332,"title":{},"body":{"index.html":{}}}],["function",{"_index":215,"title":{},"body":{"controllers/HealthController.html":{},"coverage.html":{}}}],["functions",{"_index":323,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["get(':id",{"_index":86,"title":{},"body":{"controllers/CatsController.html":{}}}],["get()@healthcheck",{"_index":178,"title":{},"body":{"controllers/HealthController.html":{}}}],["gethello",{"_index":9,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/QueueController.html":{},"injectables/QueueService.html":{}}}],["getting",{"_index":328,"title":{"index.html":{}},"body":{}}],["grow",{"_index":363,"title":{},"body":{"index.html":{}}}],["handlecron",{"_index":149,"title":{},"body":{"injectables/CronService.html":{}}}],["handleinterval",{"_index":150,"title":{},"body":{"injectables/CronService.html":{}}}],["handletimeout",{"_index":151,"title":{},"body":{"injectables/CronService.html":{}}}],["hapi/joi",{"_index":273,"title":{},"body":{"dependencies.html":{}}}],["health",{"_index":174,"title":{},"body":{"controllers/HealthController.html":{}}}],["healthcheck",{"_index":188,"title":{},"body":{"controllers/HealthController.html":{}}}],["healthcheckservice",{"_index":189,"title":{},"body":{"controllers/HealthController.html":{}}}],["healthcontroller",{"_index":47,"title":{"controllers/HealthController.html":{}},"body":{"modules/AppModule.html":{},"controllers/HealthController.html":{},"modules/QueueModule.html":{},"coverage.html":{}}}],["hello",{"_index":62,"title":{},"body":{"injectables/AppService.html":{},"injectables/QueueService.html":{}}}],["helmet",{"_index":296,"title":{},"body":{"dependencies.html":{}}}],["here",{"_index":374,"title":{},"body":{"index.html":{}}}],["https://docs.nestjs.com",{"_index":201,"title":{},"body":{"controllers/HealthController.html":{}}}],["https://nestjs.com",{"_index":381,"title":{},"body":{"index.html":{}}}],["id",{"_index":88,"title":{},"body":{"controllers/CatsController.html":{},"injectables/CatsService.html":{}}}],["identifier",{"_index":258,"title":{},"body":{"coverage.html":{}}}],["implements",{"_index":195,"title":{},"body":{"controllers/HealthController.html":{}}}],["import",{"_index":16,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/CatsController.html":{},"modules/CatsModule.html":{},"injectables/CatsService.html":{},"modules/CronModule.html":{},"injectables/CronService.html":{},"controllers/HealthController.html":{},"controllers/QueueController.html":{},"modules/QueueModule.html":{},"injectables/QueueService.html":{},"classes/UpdateCatDto.html":{},"modules/UtilsModule.html":{},"injectables/UtilsService.html":{}}}],["imports",{"_index":48,"title":{},"body":{"modules/AppModule.html":{},"modules/QueueModule.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/CatsController.html":{},"injectables/CatsService.html":{},"injectables/CronService.html":{},"controllers/HealthController.html":{},"controllers/QueueController.html":{},"injectables/QueueService.html":{},"miscellaneous/functions.html":{}}}],["info",{"_index":3,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Cat.html":{},"controllers/CatsController.html":{},"modules/CatsModule.html":{},"injectables/CatsService.html":{},"classes/CreateCatDto.html":{},"modules/CronModule.html":{},"injectables/CronService.html":{},"controllers/HealthController.html":{},"controllers/QueueController.html":{},"modules/QueueModule.html":{},"injectables/QueueService.html":{},"classes/UpdateCatDto.html":{},"modules/UtilsModule.html":{},"injectables/UtilsService.html":{}}}],["initialized",{"_index":225,"title":{},"body":{"controllers/HealthController.html":{}}}],["injectable",{"_index":58,"title":{"injectables/AppService.html":{},"injectables/CatsService.html":{},"injectables/CronService.html":{},"injectables/QueueService.html":{},"injectables/UtilsService.html":{}},"body":{"injectables/AppService.html":{},"injectables/CatsService.html":{},"injectables/CronService.html":{},"injectables/QueueService.html":{},"injectables/UtilsService.html":{},"coverage.html":{}}}],["injectables",{"_index":59,"title":{},"body":{"injectables/AppService.html":{},"injectables/CatsService.html":{},"injectables/CronService.html":{},"injectables/QueueService.html":{},"injectables/UtilsService.html":{},"overview.html":{}}}],["installation",{"_index":342,"title":{},"body":{"index.html":{}}}],["installrunning",{"_index":344,"title":{},"body":{"index.html":{}}}],["interval",{"_index":164,"title":{},"body":{"injectables/CronService.html":{}}}],["interval(100000",{"_index":155,"title":{},"body":{"injectables/CronService.html":{}}}],["joi",{"_index":298,"title":{},"body":{"dependencies.html":{}}}],["join",{"_index":370,"title":{},"body":{"index.html":{}}}],["kamil",{"_index":378,"title":{},"body":{"index.html":{}}}],["legend",{"_index":33,"title":{},"body":{"modules/AppModule.html":{},"modules/CatsModule.html":{},"modules/CronModule.html":{},"modules/QueueModule.html":{},"modules/UtilsModule.html":{},"overview.html":{}}}],["libs/cron/src/cron.module.ts",{"_index":136,"title":{},"body":{"modules/CronModule.html":{}}}],["libs/cron/src/cron.service.ts",{"_index":145,"title":{},"body":{"injectables/CronService.html":{},"coverage.html":{}}}],["libs/cron/src/cron.service.ts:14",{"_index":156,"title":{},"body":{"injectables/CronService.html":{}}}],["libs/cron/src/cron.service.ts:19",{"_index":158,"title":{},"body":{"injectables/CronService.html":{}}}],["libs/cron/src/cron.service.ts:6",{"_index":162,"title":{},"body":{"injectables/CronService.html":{}}}],["libs/cron/src/cron.service.ts:9",{"_index":153,"title":{},"body":{"injectables/CronService.html":{}}}],["libs/health/src/health.controller.ts",{"_index":173,"title":{},"body":{"controllers/HealthController.html":{},"coverage.html":{}}}],["libs/health/src/health.controller.ts:15",{"_index":179,"title":{},"body":{"controllers/HealthController.html":{}}}],["libs/health/src/health.controller.ts:29",{"_index":184,"title":{},"body":{"controllers/HealthController.html":{}}}],["libs/health/src/health.controller.ts:33",{"_index":181,"title":{},"body":{"controllers/HealthController.html":{}}}],["libs/utils/src/utils.module.ts",{"_index":253,"title":{},"body":{"modules/UtilsModule.html":{}}}],["libs/utils/src/utils.service",{"_index":254,"title":{},"body":{"modules/UtilsModule.html":{}}}],["libs/utils/src/utils.service.ts",{"_index":255,"title":{},"body":{"injectables/UtilsService.html":{},"coverage.html":{}}}],["license",{"_index":384,"title":{},"body":{"index.html":{}}}],["licensed",{"_index":360,"title":{},"body":{"index.html":{}}}],["limit",{"_index":294,"title":{},"body":{"dependencies.html":{}}}],["line",{"_index":140,"title":{},"body":{"modules/CronModule.html":{},"controllers/HealthController.html":{},"modules/QueueModule.html":{}}}],["local",{"_index":304,"title":{},"body":{"dependencies.html":{}}}],["logger",{"_index":148,"title":{},"body":{"injectables/CronService.html":{}}}],["logger(cronservice.name",{"_index":161,"title":{},"body":{"injectables/CronService.html":{}}}],["matching",{"_index":27,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Cat.html":{},"controllers/CatsController.html":{},"modules/CatsModule.html":{},"injectables/CatsService.html":{},"classes/CreateCatDto.html":{},"modules/CronModule.html":{},"injectables/CronService.html":{},"controllers/HealthController.html":{},"controllers/QueueController.html":{},"modules/QueueModule.html":{},"injectables/QueueService.html":{},"classes/UpdateCatDto.html":{},"modules/UtilsModule.html":{},"injectables/UtilsService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["metadata",{"_index":309,"title":{},"body":{"dependencies.html":{}}}],["methods",{"_index":8,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/CatsController.html":{},"injectables/CatsService.html":{},"injectables/CronService.html":{},"controllers/HealthController.html":{},"controllers/QueueController.html":{},"injectables/QueueService.html":{}}}],["miscellaneous",{"_index":322,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["mit",{"_index":359,"title":{},"body":{"index.html":{}}}],["mode",{"_index":349,"title":{},"body":{"index.html":{}}}],["module",{"_index":29,"title":{"modules/AppModule.html":{},"modules/CatsModule.html":{},"modules/CronModule.html":{},"modules/QueueModule.html":{},"modules/UtilsModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CatsModule.html":{},"modules/CronModule.html":{},"modules/QueueModule.html":{},"modules/UtilsModule.html":{},"overview.html":{}}}],["modules",{"_index":31,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/CatsModule.html":{},"modules/CronModule.html":{},"modules/QueueModule.html":{},"modules/UtilsModule.html":{},"modules.html":{},"overview.html":{}}}],["more",{"_index":373,"title":{},"body":{"index.html":{}}}],["myśliwiec",{"_index":379,"title":{},"body":{"index.html":{}}}],["name",{"_index":81,"title":{},"body":{"controllers/CatsController.html":{},"injectables/CatsService.html":{},"controllers/HealthController.html":{},"miscellaneous/functions.html":{}}}],["nest",{"_index":219,"title":{},"body":{"controllers/HealthController.html":{},"index.html":{}}}],["nestframework",{"_index":383,"title":{},"body":{"index.html":{}}}],["nestjs",{"_index":300,"title":{},"body":{"dependencies.html":{}}}],["nestjs/common",{"_index":17,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/CatsController.html":{},"modules/CatsModule.html":{},"injectables/CatsService.html":{},"modules/CronModule.html":{},"injectables/CronService.html":{},"controllers/HealthController.html":{},"controllers/QueueController.html":{},"modules/QueueModule.html":{},"injectables/QueueService.html":{},"modules/UtilsModule.html":{},"injectables/UtilsService.html":{},"dependencies.html":{}}}],["nestjs/config",{"_index":276,"title":{},"body":{"dependencies.html":{}}}],["nestjs/core",{"_index":278,"title":{},"body":{"dependencies.html":{}}}],["nestjs/mapped",{"_index":244,"title":{},"body":{"classes/UpdateCatDto.html":{},"dependencies.html":{}}}],["nestjs/passport",{"_index":280,"title":{},"body":{"dependencies.html":{}}}],["nestjs/platform",{"_index":282,"title":{},"body":{"dependencies.html":{}}}],["nestjs/schedule",{"_index":50,"title":{},"body":{"modules/AppModule.html":{},"injectables/CronService.html":{},"modules/QueueModule.html":{},"dependencies.html":{}}}],["nestjs/swagger",{"_index":186,"title":{},"body":{"controllers/HealthController.html":{},"dependencies.html":{}}}],["nestjs/terminus",{"_index":52,"title":{},"body":{"modules/AppModule.html":{},"controllers/HealthController.html":{},"modules/QueueModule.html":{},"dependencies.html":{}}}],["nestjs/typeorm",{"_index":287,"title":{},"body":{"dependencies.html":{}}}],["new",{"_index":128,"title":{},"body":{"injectables/CatsService.html":{},"injectables/CronService.html":{},"coverage.html":{}}}],["node.js",{"_index":331,"title":{},"body":{"index.html":{}}}],["npm",{"_index":343,"title":{},"body":{"index.html":{}}}],["number",{"_index":122,"title":{},"body":{"injectables/CatsService.html":{}}}],["onapplicationshutdown",{"_index":176,"title":{},"body":{"controllers/HealthController.html":{}}}],["onapplicationshutdown(signal",{"_index":180,"title":{},"body":{"controllers/HealthController.html":{}}}],["once",{"_index":171,"title":{},"body":{"injectables/CronService.html":{}}}],["onmoduledestroy",{"_index":207,"title":{},"body":{"controllers/HealthController.html":{}}}],["onmoduleinit",{"_index":177,"title":{},"body":{"controllers/HealthController.html":{}}}],["open",{"_index":361,"title":{},"body":{"index.html":{}}}],["optional",{"_index":83,"title":{},"body":{"controllers/CatsController.html":{},"injectables/CatsService.html":{},"controllers/HealthController.html":{},"miscellaneous/functions.html":{}}}],["out",{"_index":45,"title":{},"body":{"modules/AppModule.html":{},"modules/CatsModule.html":{},"modules/CronModule.html":{},"modules/QueueModule.html":{},"modules/UtilsModule.html":{},"overview.html":{}}}],["overview",{"_index":388,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":272,"title":{"dependencies.html":{}},"body":{}}],["param",{"_index":98,"title":{},"body":{"controllers/CatsController.html":{}}}],["parameter",{"_index":214,"title":{},"body":{"controllers/HealthController.html":{}}}],["parameters",{"_index":80,"title":{},"body":{"controllers/CatsController.html":{},"injectables/CatsService.html":{},"controllers/HealthController.html":{},"miscellaneous/functions.html":{}}}],["partialtype",{"_index":243,"title":{},"body":{"classes/UpdateCatDto.html":{}}}],["partialtype(createcatdto",{"_index":247,"title":{},"body":{"classes/UpdateCatDto.html":{}}}],["passport",{"_index":303,"title":{},"body":{"dependencies.html":{}}}],["pino",{"_index":301,"title":{},"body":{"dependencies.html":{}}}],["please",{"_index":371,"title":{},"body":{"index.html":{}}}],["post",{"_index":78,"title":{},"body":{"controllers/CatsController.html":{}}}],["prefix",{"_index":69,"title":{},"body":{"controllers/CatsController.html":{},"controllers/HealthController.html":{}}}],["pretty",{"_index":306,"title":{},"body":{"dependencies.html":{}}}],["private",{"_index":147,"title":{},"body":{"injectables/CronService.html":{},"controllers/HealthController.html":{}}}],["production",{"_index":351,"title":{},"body":{"index.html":{}}}],["progressive",{"_index":330,"title":{},"body":{"index.html":{}}}],["project",{"_index":362,"title":{},"body":{"index.html":{}}}],["promise",{"_index":218,"title":{},"body":{"controllers/HealthController.html":{}}}],["properties",{"_index":146,"title":{},"body":{"injectables/CronService.html":{}}}],["providers",{"_index":36,"title":{},"body":{"modules/AppModule.html":{},"modules/CatsModule.html":{},"modules/CronModule.html":{},"modules/QueueModule.html":{},"modules/UtilsModule.html":{},"overview.html":{}}}],["put",{"_index":97,"title":{},"body":{"controllers/CatsController.html":{}}}],["put(':id",{"_index":94,"title":{},"body":{"controllers/CatsController.html":{}}}],["queuecontroller",{"_index":229,"title":{"controllers/QueueController.html":{}},"body":{"controllers/QueueController.html":{},"modules/QueueModule.html":{},"coverage.html":{}}}],["queuemodule",{"_index":235,"title":{"modules/QueueModule.html":{}},"body":{"modules/QueueModule.html":{},"modules.html":{},"overview.html":{}}}],["queueservice",{"_index":232,"title":{"injectables/QueueService.html":{}},"body":{"controllers/QueueController.html":{},"modules/QueueModule.html":{},"injectables/QueueService.html":{},"coverage.html":{},"overview.html":{}}}],["rate",{"_index":293,"title":{},"body":{"dependencies.html":{}}}],["read",{"_index":372,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":23,"title":{},"body":{"controllers/AppController.html":{},"controllers/CatsController.html":{},"injectables/CronService.html":{},"controllers/QueueController.html":{}}}],["receives",{"_index":203,"title":{},"body":{"controllers/HealthController.html":{}}}],["reflect",{"_index":308,"title":{},"body":{"dependencies.html":{}}}],["registered",{"_index":206,"title":{},"body":{"controllers/HealthController.html":{}}}],["rejected",{"_index":223,"title":{},"body":{"controllers/HealthController.html":{}}}],["remove",{"_index":74,"title":{},"body":{"controllers/CatsController.html":{},"injectables/CatsService.html":{}}}],["remove(@param('id",{"_index":113,"title":{},"body":{"controllers/CatsController.html":{}}}],["remove(id",{"_index":89,"title":{},"body":{"controllers/CatsController.html":{},"injectables/CatsService.html":{}}}],["removes",{"_index":130,"title":{},"body":{"injectables/CatsService.html":{}}}],["repository",{"_index":341,"title":{},"body":{"index.html":{}}}],["reset",{"_index":44,"title":{},"body":{"modules/AppModule.html":{},"modules/CatsModule.html":{},"modules/CronModule.html":{},"modules/QueueModule.html":{},"modules/UtilsModule.html":{},"overview.html":{}}}],["resolved",{"_index":222,"title":{},"body":{"controllers/HealthController.html":{}}}],["result",{"_index":26,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Cat.html":{},"controllers/CatsController.html":{},"modules/CatsModule.html":{},"injectables/CatsService.html":{},"classes/CreateCatDto.html":{},"modules/CronModule.html":{},"injectables/CronService.html":{},"controllers/HealthController.html":{},"controllers/QueueController.html":{},"modules/QueueModule.html":{},"injectables/QueueService.html":{},"classes/UpdateCatDto.html":{},"modules/UtilsModule.html":{},"injectables/UtilsService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["results",{"_index":28,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Cat.html":{},"controllers/CatsController.html":{},"modules/CatsModule.html":{},"injectables/CatsService.html":{},"classes/CreateCatDto.html":{},"modules/CronModule.html":{},"injectables/CronService.html":{},"controllers/HealthController.html":{},"controllers/QueueController.html":{},"modules/QueueModule.html":{},"injectables/QueueService.html":{},"classes/UpdateCatDto.html":{},"modules/UtilsModule.html":{},"injectables/UtilsService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["return",{"_index":24,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/CatsController.html":{},"injectables/CatsService.html":{},"controllers/HealthController.html":{},"controllers/QueueController.html":{},"injectables/QueueService.html":{}}}],["returns",{"_index":14,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/CatsController.html":{},"injectables/CatsService.html":{},"injectables/CronService.html":{},"controllers/HealthController.html":{},"controllers/QueueController.html":{},"injectables/QueueService.html":{}}}],["rimraf",{"_index":311,"title":{},"body":{"dependencies.html":{}}}],["run",{"_index":346,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":313,"title":{},"body":{"dependencies.html":{}}}],["scalable",{"_index":335,"title":{},"body":{"index.html":{}}}],["schedulemodule",{"_index":49,"title":{},"body":{"modules/AppModule.html":{},"modules/QueueModule.html":{}}}],["schedulemodule.forroot",{"_index":57,"title":{},"body":{"modules/AppModule.html":{},"modules/QueueModule.html":{}}}],["second",{"_index":167,"title":{},"body":{"injectables/CronService.html":{}}}],["seconds",{"_index":170,"title":{},"body":{"injectables/CronService.html":{}}}],["sequence",{"_index":209,"title":{},"body":{"controllers/HealthController.html":{}}}],["server",{"_index":336,"title":{},"body":{"index.html":{}}}],["setupapp",{"_index":266,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["setupapp(app",{"_index":327,"title":{},"body":{"miscellaneous/functions.html":{}}}],["shutdown",{"_index":228,"title":{},"body":{"controllers/HealthController.html":{}}}],["side",{"_index":337,"title":{},"body":{"index.html":{}}}],["signal",{"_index":182,"title":{},"body":{"controllers/HealthController.html":{}}}],["source",{"_index":4,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Cat.html":{},"controllers/CatsController.html":{},"modules/CatsModule.html":{},"injectables/CatsService.html":{},"classes/CreateCatDto.html":{},"modules/CronModule.html":{},"injectables/CronService.html":{},"controllers/HealthController.html":{},"controllers/QueueController.html":{},"modules/QueueModule.html":{},"injectables/QueueService.html":{},"classes/UpdateCatDto.html":{},"modules/UtilsModule.html":{},"injectables/UtilsService.html":{},"index.html":{}}}],["sponsors",{"_index":365,"title":{},"body":{"index.html":{}}}],["sqlite3",{"_index":315,"title":{},"body":{"dependencies.html":{}}}],["start",{"_index":347,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":350,"title":{},"body":{"index.html":{}}}],["start:prodtest",{"_index":352,"title":{},"body":{"index.html":{}}}],["started",{"_index":329,"title":{"index.html":{}},"body":{}}],["starter",{"_index":340,"title":{},"body":{"index.html":{}}}],["statements",{"_index":259,"title":{},"body":{"coverage.html":{}}}],["stay",{"_index":375,"title":{},"body":{"index.html":{}}}],["string",{"_index":15,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/CatsController.html":{},"injectables/CatsService.html":{},"controllers/HealthController.html":{},"controllers/QueueController.html":{},"injectables/QueueService.html":{}}}],["support",{"_index":366,"title":{},"body":{"index.html":{},"modules.html":{}}}],["svg",{"_index":386,"title":{},"body":{"modules.html":{}}}],["swagger",{"_index":317,"title":{},"body":{"dependencies.html":{}}}],["table",{"_index":271,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":270,"title":{},"body":{"coverage.html":{}}}],["termination",{"_index":204,"title":{},"body":{"controllers/HealthController.html":{}}}],["terminusmodule",{"_index":51,"title":{},"body":{"modules/AppModule.html":{},"modules/QueueModule.html":{}}}],["test",{"_index":355,"title":{},"body":{"index.html":{}}}],["test:covsupport",{"_index":358,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":357,"title":{},"body":{"index.html":{}}}],["tests",{"_index":354,"title":{},"body":{"index.html":{}}}],["thanks",{"_index":364,"title":{},"body":{"index.html":{}}}],["this.appservice.gethello",{"_index":25,"title":{},"body":{"controllers/AppController.html":{}}}],["this.catsservice.create(createcatdto",{"_index":107,"title":{},"body":{"controllers/CatsController.html":{}}}],["this.catsservice.findall",{"_index":108,"title":{},"body":{"controllers/CatsController.html":{}}}],["this.catsservice.findone(+id",{"_index":110,"title":{},"body":{"controllers/CatsController.html":{}}}],["this.catsservice.remove(+id",{"_index":114,"title":{},"body":{"controllers/CatsController.html":{}}}],["this.catsservice.update(+id",{"_index":112,"title":{},"body":{"controllers/CatsController.html":{}}}],["this.dns.pingcheck('nestjs",{"_index":199,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.health.check",{"_index":198,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.logger.debug('called",{"_index":166,"title":{},"body":{"injectables/CronService.html":{}}}],["this.queueservice.gethello",{"_index":234,"title":{},"body":{"controllers/QueueController.html":{}}}],["timeout",{"_index":165,"title":{},"body":{"injectables/CronService.html":{}}}],["timeout(50000",{"_index":157,"title":{},"body":{"injectables/CronService.html":{}}}],["touch",{"_index":376,"title":{},"body":{"index.html":{}}}],["transformer",{"_index":289,"title":{},"body":{"dependencies.html":{}}}],["twitter",{"_index":382,"title":{},"body":{"index.html":{}}}],["type",{"_index":82,"title":{},"body":{"controllers/CatsController.html":{},"injectables/CatsService.html":{},"controllers/HealthController.html":{},"coverage.html":{}}}],["typeorm",{"_index":320,"title":{},"body":{"dependencies.html":{}}}],["types",{"_index":245,"title":{},"body":{"classes/UpdateCatDto.html":{},"dependencies.html":{}}}],["typescript",{"_index":141,"title":{},"body":{"modules/CronModule.html":{},"modules/QueueModule.html":{},"index.html":{}}}],["ui",{"_index":318,"title":{},"body":{"dependencies.html":{}}}],["unit",{"_index":353,"title":{},"body":{"index.html":{}}}],["unsafe",{"_index":143,"title":{},"body":{"modules/CronModule.html":{},"modules/QueueModule.html":{}}}],["until",{"_index":221,"title":{},"body":{"controllers/HealthController.html":{}}}],["update",{"_index":75,"title":{},"body":{"controllers/CatsController.html":{},"injectables/CatsService.html":{}}}],["update(@param('id",{"_index":111,"title":{},"body":{"controllers/CatsController.html":{}}}],["update(id",{"_index":92,"title":{},"body":{"controllers/CatsController.html":{},"injectables/CatsService.html":{}}}],["updatecatdto",{"_index":93,"title":{"classes/UpdateCatDto.html":{}},"body":{"controllers/CatsController.html":{},"injectables/CatsService.html":{},"classes/UpdateCatDto.html":{},"coverage.html":{}}}],["updates",{"_index":129,"title":{},"body":{"injectables/CatsService.html":{}}}],["use",{"_index":192,"title":{},"body":{"controllers/HealthController.html":{}}}],["utilsmodule",{"_index":248,"title":{"modules/UtilsModule.html":{}},"body":{"modules/UtilsModule.html":{},"modules.html":{},"overview.html":{}}}],["utilsservice",{"_index":252,"title":{"injectables/UtilsService.html":{}},"body":{"modules/UtilsModule.html":{},"injectables/UtilsService.html":{},"coverage.html":{},"overview.html":{}}}],["validator",{"_index":291,"title":{},"body":{"dependencies.html":{}}}],["value",{"_index":160,"title":{},"body":{"injectables/CronService.html":{}}}],["void",{"_index":154,"title":{},"body":{"injectables/CronService.html":{},"controllers/HealthController.html":{}}}],["watch",{"_index":348,"title":{},"body":{"index.html":{}}}],["website",{"_index":380,"title":{},"body":{"index.html":{}}}],["world",{"_index":63,"title":{},"body":{"injectables/AppService.html":{},"injectables/QueueService.html":{}}}],["yes",{"_index":183,"title":{},"body":{"controllers/HealthController.html":{}}}],["you'd",{"_index":369,"title":{},"body":{"index.html":{}}}],["zoom",{"_index":43,"title":{},"body":{"modules/AppModule.html":{},"modules/CatsModule.html":{},"modules/CronModule.html":{},"modules/QueueModule.html":{},"modules/UtilsModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/backend/src/app.controller.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getHello\n                        \n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in apps/backend/src/app.controller.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common'\n\nimport { AppService } from 'apps/backend/src/app.service'\n\n@Controller()\nexport class AppController {\n    constructor(private readonly appService: AppService) {}\n\n    @Get()\n    getHello(): string {\n        return this.appService.getHello()\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AppModule_imports\n\n\n\n\nCatsModule\n\nCatsModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nCatsModule->AppModule\n\n\n\n\n\nCronModule\n\nCronModule\n\nAppModule -->\n\nCronModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/backend/src/app.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                        \n                            HealthController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            CatsModule\n                        \n                        \n                            CronModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common'\nimport { ScheduleModule } from '@nestjs/schedule'\nimport { TerminusModule } from '@nestjs/terminus'\n\nimport { CronModule } from '@app/cron/cron.module'\nimport { HealthController } from '@app/health'\n\nimport { AppController } from 'apps/backend/src/app.controller'\nimport { AppService } from 'apps/backend/src/app.service'\nimport { CatsModule } from 'apps/backend/src/cats/cats.module'\n\n@Module({\n    imports: [TerminusModule, CatsModule, ScheduleModule.forRoot(), CronModule],\n    controllers: [AppController, HealthController],\n    providers: [AppService],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/backend/src/app.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getHello\n                        \n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n            \n                \n                    Defined in apps/backend/src/app.service.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common'\n\n@Injectable()\nexport class AppService {\n    getHello(): string {\n        return 'Hello World!'\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Cat.html":{"url":"classes/Cat.html","title":"class - Cat","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Cat\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/backend/src/cats/entities/cat.entity.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Cat {}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/CatsController.html":{"url":"controllers/CatsController.html","title":"controller - CatsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  CatsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/backend/src/cats/cats.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                cats\n            \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                remove\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            create\n                        \n                        \n                    \n                \n            \n            \n                \ncreate(createCatDto: CreateCatDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n            \n                \n                    Defined in apps/backend/src/cats/cats.controller.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createCatDto\n                                    \n                                                CreateCatDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            findAll\n                        \n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in apps/backend/src/cats/cats.controller.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            findOne\n                        \n                        \n                    \n                \n            \n            \n                \nfindOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n            \n                \n                    Defined in apps/backend/src/cats/cats.controller.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            remove\n                        \n                        \n                    \n                \n            \n            \n                \nremove(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n            \n                \n                    Defined in apps/backend/src/cats/cats.controller.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            update\n                        \n                        \n                    \n                \n            \n            \n                \nupdate(id: string, updateCatDto: UpdateCatDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Put(':id')\n                \n            \n\n            \n                \n                    Defined in apps/backend/src/cats/cats.controller.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateCatDto\n                                    \n                                                UpdateCatDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Post, Body, Put, Param, Delete } from '@nestjs/common'\n\nimport { CatsService } from 'apps/backend/src/cats/cats.service'\nimport { CreateCatDto } from 'apps/backend/src/cats/dto/create-cat.dto'\nimport { UpdateCatDto } from 'apps/backend/src/cats/dto/update-cat.dto'\n\n@Controller('cats')\nexport class CatsController {\n    constructor(private readonly catsService: CatsService) {}\n\n    @Post()\n    create(@Body() createCatDto: CreateCatDto) {\n        return this.catsService.create(createCatDto)\n    }\n\n    @Get()\n    findAll() {\n        return this.catsService.findAll()\n    }\n\n    @Get(':id')\n    findOne(@Param('id') id: string) {\n        return this.catsService.findOne(+id)\n    }\n\n    @Put(':id')\n    update(@Param('id') id: string, @Body() updateCatDto: UpdateCatDto) {\n        return this.catsService.update(+id, updateCatDto)\n    }\n\n    @Delete(':id')\n    remove(@Param('id') id: string) {\n        return this.catsService.remove(+id)\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CatsModule.html":{"url":"modules/CatsModule.html","title":"module - CatsModule","body":"\n                   \n\n\n\n\n    Modules\n    CatsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_CatsModule\n\n\n\ncluster_CatsModule_providers\n\n\n\n\nCatsService\n\nCatsService\n\n\n\nCatsModule\n\nCatsModule\n\nCatsModule -->\n\nCatsService->CatsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/backend/src/cats/cats.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            CatsService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            CatsController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common'\n\nimport { CatsController } from 'apps/backend/src/cats/cats.controller'\nimport { CatsService } from 'apps/backend/src/cats/cats.service'\n\n@Module({\n    controllers: [CatsController],\n    providers: [CatsService],\n})\nexport class CatsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CatsService.html":{"url":"injectables/CatsService.html","title":"injectable - CatsService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  CatsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/backend/src/cats/cats.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                remove\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            create\n                        \n                        \n                    \n                \n            \n            \n                \ncreate(createCatDto: CreateCatDto)\n                \n            \n\n\n            \n                \n                    Defined in apps/backend/src/cats/cats.service.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createCatDto\n                                    \n                                                CreateCatDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            findAll\n                        \n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n\n            \n                \n                    Defined in apps/backend/src/cats/cats.service.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            findOne\n                        \n                        \n                    \n                \n            \n            \n                \nfindOne(id: number)\n                \n            \n\n\n            \n                \n                    Defined in apps/backend/src/cats/cats.service.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            remove\n                        \n                        \n                    \n                \n            \n            \n                \nremove(id: number)\n                \n            \n\n\n            \n                \n                    Defined in apps/backend/src/cats/cats.service.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            update\n                        \n                        \n                    \n                \n            \n            \n                \nupdate(id: number, updateCatDto: UpdateCatDto)\n                \n            \n\n\n            \n                \n                    Defined in apps/backend/src/cats/cats.service.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateCatDto\n                                    \n                                                UpdateCatDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common'\n\nimport { CreateCatDto } from 'apps/backend/src/cats/dto/create-cat.dto'\nimport { UpdateCatDto } from 'apps/backend/src/cats/dto/update-cat.dto'\n\n@Injectable()\nexport class CatsService {\n    create(createCatDto: CreateCatDto) {\n        return 'This action adds a new cat'\n    }\n\n    findAll() {\n        return `This action returns all cats`\n    }\n\n    findOne(id: number) {\n        return `This action returns a #${id} cat`\n    }\n\n    update(id: number, updateCatDto: UpdateCatDto) {\n        return `This action updates a #${id} cat`\n    }\n\n    remove(id: number) {\n        return `This action removes a #${id} cat`\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateCatDto.html":{"url":"classes/CreateCatDto.html","title":"class - CreateCatDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateCatDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/backend/src/cats/dto/create-cat.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class CreateCatDto {}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CronModule.html":{"url":"modules/CronModule.html","title":"module - CronModule","body":"\n                   \n\n\n\n\n    Modules\n    CronModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_CronModule\n\n\n\ncluster_CronModule_exports\n\n\n\ncluster_CronModule_providers\n\n\n\n\nCronService \n\nCronService \n\n\n\nCronModule\n\nCronModule\n\nCronService  -->\n\nCronModule->CronService \n\n\n\n\n\nCronService\n\nCronService\n\nCronModule -->\n\nCronService->CronModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/cron/src/cron.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            CronService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            CronService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common'\n\nimport { CronService } from '@app/cron/cron.service'\n\n@Module({\n    providers: [CronService], // eslint-disable-line @typescript-eslint/no-unsafe-assignment\n    exports: [CronService], // eslint-disable-line @typescript-eslint/no-unsafe-assignment\n})\nexport class CronModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CronService.html":{"url":"injectables/CronService.html","title":"injectable - CronService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  CronService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/cron/src/cron.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                handleCron\n                            \n                            \n                                handleInterval\n                            \n                            \n                                handleTimeout\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            handleCron\n                        \n                        \n                    \n                \n            \n            \n                \nhandleCron()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Cron('60 * * * * *')\n                \n            \n\n            \n                \n                    Defined in libs/cron/src/cron.service.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            handleInterval\n                        \n                        \n                    \n                \n            \n            \n                \nhandleInterval()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Interval(100000)\n                \n            \n\n            \n                \n                    Defined in libs/cron/src/cron.service.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            handleTimeout\n                        \n                        \n                    \n                \n            \n            \n                \nhandleTimeout()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Timeout(50000)\n                \n            \n\n            \n                \n                    Defined in libs/cron/src/cron.service.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            logger\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Logger(CronService.name)\n                        \n                    \n                        \n                            \n                                    Defined in libs/cron/src/cron.service.ts:6\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable, Logger } from '@nestjs/common'\nimport { Cron, Interval, Timeout } from '@nestjs/schedule'\n\n@Injectable()\nexport class CronService {\n    private readonly logger = new Logger(CronService.name)\n\n    @Cron('60 * * * * *')\n    handleCron() {\n        this.logger.debug('Called when the second is 60')\n    }\n\n    @Interval(100000)\n    handleInterval() {\n        this.logger.debug('Called every 100 seconds')\n    }\n\n    @Timeout(50000)\n    handleTimeout() {\n        this.logger.debug('Called once after 50 seconds')\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/HealthController.html":{"url":"controllers/HealthController.html","title":"controller - HealthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  HealthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/health/src/health.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                health\n            \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                check\n                            \n                            \n                                onApplicationShutdown\n                            \n                            \n                                onModuleInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            check\n                        \n                        \n                    \n                \n            \n            \n                \ncheck()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@HealthCheck()\n                \n            \n\n            \n                \n                    Defined in libs/health/src/health.controller.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onApplicationShutdown\n                        \n                        \n                    \n                \n            \n            \n                \nonApplicationShutdown(signal?: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/health/src/health.controller.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    signal\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onModuleInit\n                        \n                        \n                    \n                \n            \n            \n                \nonModuleInit()\n                \n            \n\n\n            \n                \n                    Defined in libs/health/src/health.controller.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, OnApplicationShutdown, OnModuleInit } from '@nestjs/common'\nimport { ApiTags } from '@nestjs/swagger'\nimport { DNSHealthIndicator, HealthCheck, HealthCheckService } from '@nestjs/terminus'\n\n@Controller('health')\n@ApiTags(HealthController.name) // eslint-disable-line no-use-before-define\nexport class HealthController implements OnModuleInit, OnApplicationShutdown {\n    constructor(\n        private health: HealthCheckService,\n        private dns: DNSHealthIndicator,\n    ) {}\n\n    @Get()\n    @HealthCheck()\n    check() {\n        return this.health.check([\n            () => this.dns.pingCheck('nestjs-docs', 'https://docs.nestjs.com'),\n        ])\n    }\n\n    /*\n     * When the application receives a termination signal it will call any registered\n     * onModuleDestroy(), beforeApplicationShutdown(), then onApplicationShutdown() methods\n     * (in the sequence described above) with the corresponding signal as the first parameter.\n     * If a registered function awaits an asynchronous call (returns a promise), Nest will not\n     * continue in the sequence until the promise is resolved or rejected.\n     */\n\n    onModuleInit(): void {\n        console.log(`ModuleInit - HealthController has been initialized.`)\n    }\n\n    onApplicationShutdown(signal?: string): void {\n        console.log(\n            `ApplicationShutdown - HealthController has been shutdown with ${signal} signal`,\n        )\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/QueueController.html":{"url":"controllers/QueueController.html","title":"controller - QueueController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  QueueController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/queue/src/queue.controller.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getHello\n                        \n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in apps/queue/src/queue.controller.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common'\n\nimport { QueueService } from 'apps/queue/src/queue.service'\n\n@Controller()\nexport class QueueController {\n    constructor(private readonly queueService: QueueService) {}\n\n    @Get()\n    getHello(): string {\n        return this.queueService.getHello()\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/QueueModule.html":{"url":"modules/QueueModule.html","title":"module - QueueModule","body":"\n                   \n\n\n\n\n    Modules\n    QueueModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_QueueModule\n\n\n\ncluster_QueueModule_providers\n\n\n\ncluster_QueueModule_imports\n\n\n\n\nCronModule\n\nCronModule\n\n\n\nQueueModule\n\nQueueModule\n\nQueueModule -->\n\nCronModule->QueueModule\n\n\n\n\n\nQueueService\n\nQueueService\n\nQueueModule -->\n\nQueueService->QueueModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/queue/src/queue.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            QueueService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            QueueController\n                        \n                        \n                            HealthController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            CronModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common'\nimport { ScheduleModule } from '@nestjs/schedule'\nimport { TerminusModule } from '@nestjs/terminus'\n\nimport { CronModule } from '@app/cron/cron.module'\nimport { HealthController } from '@app/health'\n\nimport { QueueController } from 'apps/queue/src/queue.controller'\nimport { QueueService } from 'apps/queue/src/queue.service'\n\n@Module({\n    imports: [TerminusModule, ScheduleModule.forRoot(), CronModule], // eslint-disable-line @typescript-eslint/no-unsafe-assignment\n    controllers: [QueueController, HealthController],\n    providers: [QueueService],\n})\nexport class QueueModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/QueueService.html":{"url":"injectables/QueueService.html","title":"injectable - QueueService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  QueueService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/queue/src/queue.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getHello\n                        \n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n            \n                \n                    Defined in apps/queue/src/queue.service.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common'\n\n@Injectable()\nexport class QueueService {\n    getHello(): string {\n        return 'Hello World!'\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateCatDto.html":{"url":"classes/UpdateCatDto.html","title":"class - UpdateCatDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateCatDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/backend/src/cats/dto/update-cat.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/mapped-types'\n\nimport { CreateCatDto } from 'apps/backend/src/cats/dto/create-cat.dto'\n\nexport class UpdateCatDto extends PartialType(CreateCatDto) {}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UtilsModule.html":{"url":"modules/UtilsModule.html","title":"module - UtilsModule","body":"\n                   \n\n\n\n\n    Modules\n    UtilsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_UtilsModule\n\n\n\ncluster_UtilsModule_exports\n\n\n\ncluster_UtilsModule_providers\n\n\n\n\nUtilsService \n\nUtilsService \n\n\n\nUtilsModule\n\nUtilsModule\n\nUtilsService  -->\n\nUtilsModule->UtilsService \n\n\n\n\n\nUtilsService\n\nUtilsService\n\nUtilsModule -->\n\nUtilsService->UtilsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/utils/src/utils.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            UtilsService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            UtilsService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common'\n\nimport { UtilsService } from 'libs/utils/src/utils.service'\n\n@Module({\n    providers: [UtilsService],\n    exports: [UtilsService],\n})\nexport class UtilsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UtilsService.html":{"url":"injectables/UtilsService.html","title":"injectable - UtilsService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  UtilsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/utils/src/utils.service.ts\n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common'\n\n@Injectable()\nexport class UtilsService {}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                apps/backend/src/app.controller.ts\n            \n            controller\n            AppController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/backend/src/app.service.ts\n            \n            injectable\n            AppService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/backend/src/cats/cats.controller.ts\n            \n            controller\n            CatsController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                apps/backend/src/cats/cats.service.ts\n            \n            injectable\n            CatsService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                apps/backend/src/cats/dto/create-cat.dto.ts\n            \n            class\n            CreateCatDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/backend/src/cats/dto/update-cat.dto.ts\n            \n            class\n            UpdateCatDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/backend/src/cats/entities/cat.entity.ts\n            \n            class\n            Cat\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/backend/src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/backend/src/main.ts\n            \n            function\n            createSwagger\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/backend/src/main.ts\n            \n            function\n            setupApp\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/queue/src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/queue/src/main.ts\n            \n            function\n            createSwagger\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/queue/src/main.ts\n            \n            function\n            setupApp\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/queue/src/queue.controller.ts\n            \n            controller\n            QueueController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/queue/src/queue.service.ts\n            \n            injectable\n            QueueService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                libs/cron/src/cron.service.ts\n            \n            injectable\n            CronService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                libs/health/src/health.controller.ts\n            \n            controller\n            HealthController\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                libs/utils/src/utils.service.ts\n            \n            injectable\n            UtilsService\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @hapi/joi : ^17.1.1\n        \n            @nestjs/common : ^7.5.1\n        \n            @nestjs/config : ^0.6.1\n        \n            @nestjs/core : ^7.5.1\n        \n            @nestjs/mapped-types : ^0.1.1\n        \n            @nestjs/passport : ^7.1.3\n        \n            @nestjs/platform-express : ^7.5.1\n        \n            @nestjs/schedule : ^0.4.1\n        \n            @nestjs/swagger : ^4.7.5\n        \n            @nestjs/terminus : ^7.0.1\n        \n            @nestjs/typeorm : ^7.1.5\n        \n            class-transformer : ^0.3.1\n        \n            class-validator : ^0.12.2\n        \n            express-rate-limit : ^5.2.3\n        \n            helmet : ^4.2.0\n        \n            joi : ^17.3.0\n        \n            nestjs-pino : ^1.3.0\n        \n            passport : ^0.4.1\n        \n            passport-local : ^1.0.0\n        \n            pino-pretty : ^4.3.0\n        \n            reflect-metadata : ^0.1.13\n        \n            rimraf : ^3.0.2\n        \n            rxjs : ^6.6.3\n        \n            sqlite3 : ^5.0.0\n        \n            swagger-ui-express : ^4.1.5\n        \n            typeorm : ^0.2.29\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (apps/.../main.ts)\n                        \n                        \n                            bootstrap   (apps/.../main.ts)\n                        \n                        \n                            createSwagger   (apps/.../main.ts)\n                        \n                        \n                            createSwagger   (apps/.../main.ts)\n                        \n                        \n                            setupApp   (apps/.../main.ts)\n                        \n                        \n                            setupApp   (apps/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    apps/backend/src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            bootstrap\n                        \n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createSwagger\n                        \n                        \n                    \n                \n            \n            \n                \ncreateSwagger(app)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    app\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setupApp\n                        \n                        \n                    \n                \n            \n            \n                \nsetupApp(app)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    app\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    apps/queue/src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            bootstrap\n                        \n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createSwagger\n                        \n                        \n                    \n                \n            \n            \n                \ncreateSwagger(app)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    app\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setupApp\n                        \n                        \n                    \n                \n            \n            \n                \nsetupApp(app)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    app\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n  A progressive Node.js framework for building efficient and scalable server-side applications.\n    \n\n\n\n\n\n\n\n\n  \n    \n  \n\n  \n\nDescription\nNest framework TypeScript starter repository.\nInstallation\n$ npm installRunning the app\n# development\n$ npm run start\n\n# watch mode\n$ npm run start:dev\n\n# production mode\n$ npm run start:prodTest\n# unit tests\n$ npm run test\n\n# e2e tests\n$ npm run test:e2e\n\n# test coverage\n$ npm run test:covSupport\nNest is an MIT-licensed open source project. It can grow thanks to the sponsors and support by the amazing backers. If you'd like to join them, please read more here.\nStay in touch\n\nAuthor - Kamil Myśliwiec\nWebsite - https://nestjs.com\nTwitter - @nestframework\n\nLicense\nNest is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CatsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CronModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        QueueModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UtilsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_CatsModule\n\n\n\ncluster_CatsModule_providers\n\n\n\ncluster_CronModule\n\n\n\ncluster_CronModule_exports\n\n\n\ncluster_CronModule_providers\n\n\n\ncluster_QueueModule\n\n\n\ncluster_QueueModule_providers\n\n\n\ncluster_UtilsModule\n\n\n\ncluster_UtilsModule_exports\n\n\n\ncluster_UtilsModule_providers\n\n\n\n\nCatsModule\n\nCatsModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nCatsModule->AppModule\n\n\n\n\n\nCronModule\n\nCronModule\n\nAppModule -->\n\nCronModule->AppModule\n\n\n\n\n\nCronService \n\nCronService \n\nCronService  -->\n\nCronModule->CronService \n\n\n\n\n\nQueueModule\n\nQueueModule\n\nQueueModule -->\n\nCronModule->QueueModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nCatsService\n\nCatsService\n\nCatsModule -->\n\nCatsService->CatsModule\n\n\n\n\n\nCronService\n\nCronService\n\nCronModule -->\n\nCronService->CronModule\n\n\n\n\n\nQueueService\n\nQueueService\n\nQueueModule -->\n\nQueueService->QueueModule\n\n\n\n\n\nUtilsService \n\nUtilsService \n\n\n\nUtilsModule\n\nUtilsModule\n\nUtilsService  -->\n\nUtilsModule->UtilsService \n\n\n\n\n\nUtilsService\n\nUtilsService\n\nUtilsModule -->\n\nUtilsService->UtilsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        5 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    4 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    5 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    3 Classes\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
