var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/interfaces/APIResponse.html",[0,0.183,1,1.362]],["body/interfaces/APIResponse.html",[0,0.368,1,2.506,2,0.816,3,0.099,4,0.079,5,0.089,6,1.162,7,0.173,8,0.778,9,1.323,10,1.662,11,0.999,12,2.066,13,2.041,14,1.523,15,1.71,16,1.815,17,1.523,18,1.353,19,0.317,20,0.011,21,1.279,22,2.233,23,0.8,24,1.571,25,0.12,26,0.253,27,0.243,28,0.006,29,1.632,30,1.632,31,1.632,32,1.632,33,1.632,34,1.632,35,1.632,36,1.48,37,0.006,38,2.634,39,1.236,40,1.739,41,1.236,42,1.236,43,1.236,44,1.236,45,1.236,46,1.236,47,1.162,48,1.236,49,1.236,50,1.093,51,1.878,52,1.162,53,0.793,54,1.791,55,1.236,56,1.978,57,1.236,58,1.236,59,1.236,60,1.236,61,1.236,62,1.236,63,1.236,64,1.236,65,1.236,66,1.236,67,1.236,68,2.105,69,1.791,70,1.236,71,1.236,72,1.236,73,1.862,74,1.236,75,1.236,76,1.791,77,1.236,78,1.236,79,1.236,80,1.236,81,1.236,82,2.169,83,1.236,84,1.683,85,1.683,86,1.236,87,1.236,88,1.236,89,1.236,90,1.236,91,1.236,92,1.236,93,1.236,94,1.236,95,1.791,96,1.236,97,1.236,98,1.236,99,1.162,100,1.236,101,1.236,102,2.169,103,1.236,104,1.236,105,1.236,106,1.236,107,1.236,108,1.236,109,1.236,110,1.236,111,1.093,112,1.236,113,1.236,114,1.236,115,1.236,116,0.265,117,1.236,118,1.236,119,1.236,120,1.236,121,1.236,122,1.162,123,1.978,124,1.236,125,1.236,126,1.236,127,1.683,128,1.683,129,1.236,130,1.236,131,1.236,132,0.748,133,0.006]],["title/classes/ApiException.html",[134,0.209,135,3.333]],["body/classes/ApiException.html",[3,0.117,4,0.093,5,0.105,7,0.203,8,0.872,9,1.4,12,2.274,13,2.242,16,2.044,18,1.131,19,0.347,20,0.011,23,0.788,24,0.931,25,0.194,26,0.297,27,0.161,28,0.005,37,0.005,116,0.311,133,0.007,134,0.203,135,6.152,136,1.406,137,3.529,138,5.95,139,3.237,140,4.995,141,2.758,142,7.737,143,4.422,144,4.735,145,2.365,146,4.07,147,4.712,148,1.535,149,5.625,150,0.931,151,3.562,152,6.748,153,4.07,154,4.07,155,4.07,156,4.07,157,4.07,158,4.07,159,4.07,160,6.446,161,5.65,162,5.625,163,5.625,164,5.625,165,4.132,166,4.132,167,6.446,168,6.446,169,6.446,170,6.446,171,6.446,172,5.625,173,1.498,174,4.07,175,4.07,176,4.07,177,4.07,178,4.07,179,4.07,180,1.498,181,2.792,182,4.07,183,4.07,184,4.07,185,1.599,186,2.99,187,1.112,188,3.143,189,4.473,190,4.07,191,2.487,192,4.07,193,3.237,194,4.07,195,4.07]],["title/controllers/AppController.html",[196,1.826,197,3.079]],["body/controllers/AppController.html",[3,0.177,4,0.142,5,0.16,7,0.309,20,0.011,23,0.564,25,0.254,26,0.452,27,0.177,28,0.008,37,0.008,133,0.01,134,0.309,141,2.21,148,1.189,151,2.8,173,2.282,187,1.225,196,2.7,197,5.417,198,2.907,199,5.434,200,1.457,201,8.149,202,6.199,203,1.417,204,1.459,205,1.459,206,4.002,207,4.002,208,3.788,209,3.788,210,6.199,211,6.199,212,1.955,213,6.199,214,6.199]],["title/interfaces/AppLaunchAction.html",[0,0.183,47,1.404]],["body/interfaces/AppLaunchAction.html",[0,0.37,1,2.49,2,0.855,3,0.104,4,0.083,5,0.094,6,1.218,7,0.181,8,0.805,9,0.857,10,0.933,11,0.755,12,1.748,13,1.543,14,0.855,15,0.96,16,1.372,17,0.855,18,1.348,19,0.295,20,0.011,21,1.026,22,1.97,23,0.802,24,1.386,25,0.125,26,0.265,27,0.245,28,0.007,29,1.688,30,1.688,31,1.688,32,1.688,33,1.688,34,1.688,35,1.688,36,1.512,37,0.007,38,2.671,39,1.296,40,1.763,41,1.296,42,1.296,43,1.296,44,1.296,45,1.296,46,1.296,47,1.74,48,2.358,49,2.358,50,2.086,51,1.912,52,2.216,53,0.831,54,1.852,55,1.296,56,2.031,57,1.296,58,1.296,59,1.296,60,1.296,61,1.296,62,1.296,63,1.296,64,1.296,65,1.296,66,1.296,67,1.296,68,2.161,69,1.852,70,1.296,71,1.296,72,1.296,73,1.911,74,1.296,75,1.296,76,1.852,77,1.296,78,1.296,79,1.296,80,1.296,81,1.296,82,2.216,83,1.296,84,1.74,85,1.74,86,1.296,87,1.296,88,1.296,89,1.296,90,1.296,91,1.296,92,1.296,93,1.296,94,1.296,95,1.852,96,1.296,97,1.296,98,1.296,99,1.218,100,1.296,101,1.296,102,2.216,103,1.296,104,1.296,105,1.296,106,1.296,107,1.296,108,1.296,109,1.296,110,1.296,111,1.146,112,1.296,113,1.296,114,1.296,115,1.296,116,0.278,117,1.296,118,1.296,119,1.296,120,1.296,121,1.296,122,1.218,123,2.031,124,1.296,125,1.296,126,1.296,127,1.74,128,1.74,129,1.296,130,1.296,131,1.296,132,0.784,133,0.007]],["title/modules/AppModule.html",[215,1.703,216,3.079]],["body/modules/AppModule.html",[3,0.119,4,0.096,5,0.107,9,0.688,19,0.232,20,0.012,23,0.594,25,0.288,26,0.304,27,0.119,28,0.005,37,0.005,116,0.319,133,0.007,134,0.208,148,1.098,150,0.954,185,1.639,197,4.796,198,2.683,200,1.13,203,1.493,204,1.537,205,1.346,215,2.855,216,6.274,217,2.118,218,2.21,219,2.423,220,1.956,221,2.21,222,3.169,223,2.311,224,3.656,225,3.656,226,5.217,227,5.217,228,5.217,229,5.217,230,5.217,231,4.91,232,3.323,233,2.423,234,2.311,235,3.317,236,4.796,237,4.202,238,6.159,239,5.015,240,4.171,241,6.453,242,2.862,243,3.722,244,6.453,245,4.171,246,3.317,247,2.423,248,4.171,249,2.862,250,5.721,251,3.317,252,4.171,253,3.656,254,4.171,255,4.171,256,4.171,257,4.171,258,4.171,259,4.171,260,4.171,261,3.656,262,0.954,263,3.317,264,3.656,265,2.653,266,3.656,267,3.656,268,3.656,269,3.656,270,3.656,271,3.656,272,3.656,273,3.656,274,3.656,275,2.21,276,3.656,277,3.317,278,3.317,279,3.656,280,3.656,281,3.656,282,6.666,283,3.656,284,1.956,285,3.656,286,3.656,287,2.034,288,4.171,289,3.656,290,4.171,291,4.171,292,4.171,293,1.239,294,4.171,295,4.171,296,4.171,297,3.031,298,5.721,299,4.171,300,4.171,301,5.721,302,4.171,303,4.171,304,4.171,305,4.171,306,4.171,307,4.171,308,4.171,309,3.031,310,3.656,311,4.171,312,4.171,313,4.171,314,4.171,315,4.171,316,3.656,317,4.171,318,1.168,319,1.071,320,1.239,321,3.317,322,3.317,323,3.317,324,3.317,325,3.656]],["title/controllers/AuthController.html",[196,1.826,326,2.875]],["body/controllers/AuthController.html",[3,0.144,4,0.115,5,0.13,7,0.251,9,0.832,11,0.944,16,1.332,19,0.263,20,0.012,23,0.591,24,1.153,25,0.282,26,0.368,27,0.186,28,0.006,37,0.006,53,1.153,116,0.386,133,0.008,134,0.357,141,1.798,145,2.12,148,0.967,150,1.153,151,2.278,173,1.856,187,0.996,191,4.63,196,2.196,198,2.365,200,1.282,203,1.153,204,1.527,205,1.527,206,3.255,207,3.255,208,3.081,209,3.081,212,1.59,262,1.641,309,3.438,319,1.294,320,1.498,326,4.452,327,4.01,328,2.263,329,5.707,330,5.042,331,6.642,332,5.566,333,5.042,334,5.042,335,6.872,336,4.19,337,3.255,338,4.01,339,4.01,340,3.081,341,3.975,342,3.366,343,2.278,344,4.01,345,3.438,346,3.703,347,4.168,348,3.703,349,4.19,350,4.42,351,3.079,352,2.827,353,4.42,354,3.164,355,4.42,356,4.42,357,4.42,358,3.703,359,4.42,360,4.42,361,1.917,362,4.01,363,4.01,364,1.689,365,4.42,366,2.671]],["title/modules/AuthModule.html",[215,1.703,226,2.875]],["body/modules/AuthModule.html",[3,0.149,4,0.119,5,0.134,20,0.012,25,0.29,26,0.38,27,0.149,28,0.007,37,0.007,133,0.009,134,0.259,198,3.107,204,1.225,205,1.225,215,2.96,217,2.644,218,2.758,219,3.024,220,2.442,221,2.758,222,4.036,223,3.669,226,5.878,231,5.226,232,3.848,233,3.024,234,2.884,237,5.351,246,5.794,247,3.024,261,4.564,318,1.458,319,1.336,320,1.547,326,4.998,328,1.642,340,3.182,347,4.701,348,3.824,364,1.744,367,4.564,368,4.564,369,5.207,370,5.552,371,5.552,372,5.207,373,5.261,374,6.625,375,4.141,376,7.286,377,5.207,378,5.207,379,5.207,380,5.207,381,4.141,382,4.141,383,3.572,384,5.207,385,4.564,386,5.207,387,5.207,388,5.207]],["title/injectables/AuthService.html",[347,2.434,389,1.209]],["body/injectables/AuthService.html",[3,0.138,4,0.11,5,0.124,7,0.239,9,1.274,19,0.313,20,0.011,23,0.771,25,0.266,26,0.351,27,0.138,28,0.006,37,0.006,53,1.766,116,0.591,133,0.008,134,0.239,145,2.645,148,1.481,150,1.766,166,3.53,180,1.769,187,1.565,200,1.243,203,1.701,247,2.792,262,1.438,328,2.671,329,5.003,345,3.941,346,3.53,347,3.654,351,2.556,352,2.094,354,3.42,358,4.621,364,2.108,373,3.297,375,3.822,389,1.814,390,2.254,391,4.213,392,6.291,393,6.291,394,6.291,395,4.807,396,8.072,397,4.807,398,6.291,399,7.44,400,4.807,401,4.807,402,6.291,403,3.451,404,4.807,405,6.291,406,4.807,407,6.291,408,4.807,409,3.844,410,4.807,411,4.807,412,4.807,413,3.53,414,4.807,415,6.291,416,4.316,417,4.807,418,4.213,419,3.53,420,4.807,421,4.807,422,4.807]],["title/classes/BaseModel.html",[134,0.209,423,1.893]],["body/classes/BaseModel.html",[0,0.192,3,0.126,4,0.101,5,0.113,7,0.219,8,0.921,9,1.186,11,0.641,18,1.041,19,0.32,20,0.012,23,0.654,25,0.248,27,0.17,28,0.006,36,1.358,37,0.008,116,0.454,132,0.951,133,0.008,134,0.219,136,1.523,140,2.846,148,1.541,150,1.358,180,1.622,181,3.024,187,1.174,200,1.174,203,1.358,204,1.037,205,1.037,212,2.437,293,1.764,318,1.235,319,1.131,320,1.309,328,2.437,354,2.896,364,1.99,403,2.926,423,2.683,424,3.505,425,4.934,426,5.678,427,5.303,428,5.28,429,2.921,430,4.608,431,5.678,432,4.723,433,4.934,434,4.408,435,4.408,436,2.258,437,2.052,438,4.363,439,4.408,440,4.408,441,4.393,442,4.408,443,4.408,444,3.629,445,4.393,446,4.909,447,4.408,448,3.505,449,3.505,450,3.505,451,4.934,452,4.408,453,4.934,454,2.824,455,3.238,456,3.864,457,1.572,458,3.864,459,5.206,460,3.238,461,5.206,462,3.505,463,3.238,464,3.864,465,2.846,466,3.024,467,2.258,468,3.864,469,3.864,470,3.864,471,2.56,472,3.864,473,3.864,474,3.864,475,2.56,476,2.442,477,2.846,478,3.864,479,2.067,480,2.067,481,3.864,482,3.864,483,2.846,484,3.864,485,3.505,486,3.864]],["title/interfaces/BaseRoute.html",[0,0.183,487,2.044]],["body/interfaces/BaseRoute.html",[0,0.317,2,0.954,3,0.116,4,0.093,5,0.104,7,0.202,8,0.87,10,1.041,11,0.59,14,0.954,15,1.071,17,0.954,18,1.221,19,0.324,20,0.012,21,1.109,23,0.728,25,0.193,26,0.296,27,0.232,28,0.005,36,1.283,37,0.005,51,1.899,116,0.557,133,0.007,137,1.766,141,2.475,185,2.204,187,1.372,204,1.715,205,1.715,262,1.587,287,3.385,297,2.148,318,2.041,319,1.871,320,2.062,361,2.639,457,1.446,467,1.541,475,2.355,476,2.246,487,2.736,488,2.246,489,3.525,490,3.677,491,3.677,492,3.677,493,3.525,494,3.849,495,3.849,496,2.781,497,2.781,498,2.618,499,2.618,500,2.059,501,2.618,502,2.618,503,2.618,504,2.618,505,3.622,506,2.059,507,1.977,508,3.428,509,2.781,510,2.781,511,2.478,512,2.781,513,2.781,514,3.428,515,2.355,516,1.977,517,2.148,518,2.478,519,2.781,520,1.902,521,3.75,522,1.977,523,2.618,524,2.781,525,2.781,526,2.148,527,2.148,528,2.148,529,2.41,530,1.647,531,2.781,532,1.977,533,2.781,534,2.148,535,2.618,536,2.059,537,2.618,538,2.781,539,2.781,540,2.781,541,2.781,542,2.781,543,3.849,544,2.781,545,2.614,546,2.246,547,2.781,548,2.444,549,2.618,550,1.977,551,2.618,552,2.618,553,2.618,554,2.059,555,2.972,556,2.148,557,2.781,558,1.832,559,2.059,560,2.781,561,2.781,562,2.781]],["title/interfaces/Comment.html",[0,0.183,123,1.404]],["body/interfaces/Comment.html",[0,0.37,1,2.486,2,0.85,3,0.103,4,0.083,5,0.093,6,1.211,7,0.18,8,0.802,10,0.927,11,0.752,12,1.743,13,1.537,14,0.85,15,0.955,16,1.367,17,0.85,18,1.351,19,0.303,20,0.011,21,1.022,22,1.964,23,0.803,24,1.382,25,0.125,26,0.264,27,0.244,28,0.007,29,1.681,30,1.681,31,1.681,32,1.681,33,1.681,34,1.681,35,1.681,36,1.508,37,0.007,38,2.667,39,1.288,40,1.76,41,1.288,42,1.288,43,1.288,44,1.288,45,1.288,46,1.288,47,1.211,48,1.288,49,1.288,50,1.139,51,1.89,52,1.211,53,0.826,54,1.844,55,1.288,56,2.025,57,1.288,58,1.288,59,1.288,60,1.288,61,1.288,62,1.288,63,1.288,64,1.288,65,1.288,66,1.288,67,1.288,68,2.154,69,1.844,70,1.288,71,1.288,72,1.288,73,1.905,74,1.288,75,1.288,76,1.844,77,1.288,78,1.288,79,1.288,80,1.288,81,1.288,82,2.21,83,1.288,84,1.733,85,1.733,86,1.288,87,1.288,88,1.288,89,1.288,90,1.288,91,1.288,92,1.288,93,1.288,94,1.288,95,2.489,96,1.288,97,1.288,98,1.288,99,1.211,100,1.288,101,1.288,102,2.21,103,1.288,104,1.288,105,1.288,106,1.288,107,1.288,108,1.288,109,1.288,110,1.288,111,1.139,112,1.288,113,1.288,114,1.288,115,1.288,116,0.276,117,1.288,118,1.288,119,1.288,120,1.288,121,1.288,122,1.211,123,2.506,124,2.352,125,2.352,126,2.352,127,1.733,128,1.733,129,1.288,130,1.288,131,1.288,132,0.78,133,0.007]],["title/interfaces/Comments.html",[0,0.183,127,1.404]],["body/interfaces/Comments.html",[0,0.371,1,2.507,2,0.878,3,0.107,4,0.085,5,0.096,6,1.25,7,0.186,8,0.82,10,0.958,11,0.77,12,1.774,13,1.572,14,0.878,15,0.986,16,1.399,17,0.878,18,1.346,19,0.249,20,0.011,21,1.046,22,1.999,23,0.801,24,1.406,25,0.129,26,0.272,27,0.245,28,0.007,29,1.72,30,1.72,31,1.72,32,1.72,33,1.72,34,1.72,35,1.72,36,1.53,37,0.007,38,2.692,39,1.331,40,1.777,41,1.331,42,1.331,43,1.331,44,1.331,45,1.331,46,1.331,47,1.25,48,1.331,49,1.331,50,1.177,51,1.899,52,1.25,53,0.853,54,1.887,55,1.331,56,2.061,57,1.331,58,1.331,59,1.331,60,1.331,61,1.331,62,1.331,63,1.331,64,1.331,65,1.331,66,1.331,67,1.331,68,2.193,69,1.887,70,1.331,71,1.331,72,1.331,73,1.94,74,1.331,75,1.331,76,1.887,77,1.331,78,1.331,79,1.331,80,1.331,81,1.331,82,2.243,83,1.331,84,1.774,85,1.774,86,1.331,87,1.331,88,1.331,89,1.331,90,1.331,91,1.331,92,1.331,93,1.331,94,1.331,95,1.887,96,1.331,97,1.331,98,1.331,99,1.25,100,1.331,101,1.331,102,2.243,103,1.331,104,1.331,105,1.331,106,1.331,107,1.331,108,1.331,109,1.331,110,1.331,111,1.177,112,1.331,113,1.331,114,1.331,115,1.331,116,0.285,117,1.331,118,1.331,119,1.331,120,1.331,121,1.331,122,1.25,123,2.368,124,1.331,125,1.331,126,1.331,127,2.46,128,1.774,129,1.331,130,1.331,131,1.331,132,0.805,133,0.007]],["title/classes/CreateTagsDto.html",[134,0.209,563,2.128]],["body/classes/CreateTagsDto.html",[0,0.287,3,0.148,4,0.118,5,0.133,7,0.257,8,1.184,19,0.332,20,0.011,23,0.719,25,0.263,27,0.226,28,0.007,37,0.007,116,0.628,132,1.42,133,0.008,134,0.393,136,1.782,148,0.989,151,2.329,173,1.898,200,1.019,212,2.076,275,2.731,284,2.418,293,2.154,342,3.088,343,2.329,423,2.974,429,2.095,454,2.586,457,2.347,520,2.418,529,1.578,563,3.343,564,3.329,565,4.933,566,4.52,567,5.156,568,2.995,569,3.343,570,3.824,571,3.824,572,4.212,573,4.017,574,3.647,575,2.731,576,2.731,577,2.731,578,3.329,579,2.995,580,3.276,581,2.995,582,2.995,583,2.995,584,3.824,585,2.995,586,2.995,587,2.514,588,2.995,589,2.995,590,2.995,591,3.537,592,2.995,593,2.731,594,2.995,595,2.995,596,2.995,597,2.995,598,3.537,599,3.537,600,2.995,601,2.995,602,2.995,603,3.787]],["title/classes/CreateUserDto.html",[134,0.209,604,2.128]],["body/classes/CreateUserDto.html",[0,0.225,3,0.103,4,0.082,5,0.093,7,0.179,8,1.021,9,1.087,19,0.338,20,0.012,23,0.784,25,0.25,27,0.2,28,0.005,37,0.005,50,2.288,51,1.594,53,0.823,73,2.356,116,0.461,132,1.113,133,0.007,134,0.347,136,1.244,148,1.392,151,3.278,173,1.325,187,0.712,200,0.712,212,1.902,262,1.379,265,1.463,275,1.908,284,1.689,293,1.792,328,1.902,342,3.403,343,1.627,349,2.325,351,1.463,352,3.33,354,3.643,364,2.336,409,3.153,416,3.54,423,2.331,429,1.463,444,2.201,445,2.201,446,4.261,454,2.369,457,1.84,465,2.325,467,1.369,483,2.325,520,1.689,529,1.102,536,1.828,566,3.157,568,2.092,569,3.54,570,4.214,571,4.214,572,3.503,573,3.341,574,2.859,575,1.908,577,1.908,579,2.092,580,2.725,581,2.092,582,2.092,583,2.092,584,3.503,585,2.092,586,2.092,587,1.756,588,2.092,589,2.092,590,2.092,592,4.05,593,1.908,594,2.092,595,2.092,596,2.092,597,2.092,600,3.826,601,2.092,604,2.62,605,2.325,606,4.253,607,5.614,608,5.614,609,3.601,610,3.601,611,5.161,612,3.601,613,3.894,614,3.601,615,3.601,616,3.601,617,3.601,618,3.601,619,3.54,620,4.838,621,2.325,622,3.54,623,2.645,624,2.47,625,3.153,626,2.645,627,2.645,628,2.645,629,2.645,630,2.645,631,2.645,632,2.645,633,2.645,634,2.645,635,3.791,636,2.645,637,2.645,638,2.645,639,2.201,640,2.645,641,2.645,642,2.645,643,2.645,644,2.47,645,2.645,646,2.47,647,2.645,648,2.645,649,2.645,650,2.645,651,2.645,652,3.54,653,2.645,654,2.645,655,2.47,656,3.54,657,2.47,658,2.325,659,2.645,660,2.645,661,3.791,662,3.791,663,2.47,664,2.47,665,2.645,666,1.995,667,2.645]],["title/modules/CronModule.html",[215,1.703,227,2.875]],["body/modules/CronModule.html",[3,0.175,4,0.14,5,0.157,20,0.011,25,0.27,26,0.445,27,0.175,28,0.008,37,0.008,133,0.009,134,0.304,215,3.178,217,3.099,218,3.234,219,3.545,220,2.863,221,3.234,222,4.333,223,3.381,227,5.883,232,4.244,233,3.545,234,3.381,668,5.351,669,5.351,670,5.772,671,5.772,672,6.104,673,7.308,674,6.104]],["title/injectables/CronService.html",[389,1.209,670,2.875]],["body/injectables/CronService.html",[3,0.075,4,0.06,5,0.068,7,0.131,8,0.632,9,1.148,10,1.446,12,0.758,18,1.232,19,0.301,20,0.012,23,0.759,25,0.172,26,0.192,27,0.075,28,0.003,37,0.003,111,0.829,116,0.661,133,0.005,134,0.131,145,1.106,148,1.536,150,1.591,151,2.259,180,1.84,187,0.806,188,2.736,189,3.976,200,0.806,203,1.75,204,0.96,205,0.96,212,1.577,243,4.001,249,1.804,262,1.701,265,1.068,318,1.95,319,1.047,320,1.212,321,2.091,322,2.091,323,2.091,361,1.551,389,1.177,390,1.233,436,2.142,437,1.947,489,2.861,498,3.638,515,2.904,534,3.419,536,1.335,545,1.658,546,1.457,558,1.188,559,1.335,625,3.443,639,1.607,670,2.799,675,2.305,676,5.464,677,4.081,678,4.383,679,7.019,680,4.481,681,4.081,682,5.635,683,6.97,684,4.081,685,5,686,4.481,687,5,688,4.081,689,4.081,690,4.081,691,4.081,692,4.081,693,4.081,694,4.081,695,5.635,696,5,697,5,698,5,699,5.635,700,5.635,701,2.63,702,4.481,703,4.081,704,3.577,705,4.081,706,7.148,707,2.63,708,7.554,709,5.658,710,6.087,711,4.081,712,6.915,713,2.63,714,7.305,715,4.081,716,2.63,717,4.081,718,2.63,719,4.081,720,4.081,721,2.63,722,4.081,723,2.63,724,4.081,725,2.63,726,5,727,4.081,728,4.081,729,2.63,730,2.63,731,2.63,732,2.63,733,2.63,734,2.63,735,2.63,736,2.63,737,2.63,738,5,739,2.63,740,5,741,3.055,742,2.63,743,4.081,744,4.081,745,2.63,746,4.081,747,2.63,748,2.63,749,2.305,750,1.698,751,2.63,752,4.081,753,2.63,754,2.63,755,2.305,756,2.305,757,2.091,758,2.63,759,1.698,760,2.63,761,2.091,762,2.63,763,2.63,764,2.63,765,3.787,766,2.63,767,2.63,768,2.63,769,2.305,770,5,771,2.305,772,2.63,773,2.63,774,2.63,775,4.383,776,2.63,777,2.63,778,2.63,779,4.081,780,2.63,781,4.081,782,2.305,783,2.63,784,2.63,785,2.63,786,2.63,787,4.081,788,2.63,789,2.63,790,2.63,791,5,792,2.63,793,2.63,794,2.63,795,2.63]],["title/classes/CrudConfigService.html",[134,0.209,796,2.561]],["body/classes/CrudConfigService.html",[3,0.068,4,0.054,5,0.061,7,0.118,8,0.584,9,0.392,10,0.61,11,0.346,14,0.559,15,0.628,17,0.559,18,1.042,19,0.303,20,0.012,21,0.47,23,0.59,24,0.543,25,0.2,26,0.173,27,0.166,28,0.003,37,0.003,40,1.368,116,0.53,133,0.005,134,0.335,136,0.821,137,2.041,141,1.344,148,0.723,150,0.543,180,0.875,185,2.284,187,1.542,188,2.166,200,0.745,203,0.543,204,0.559,205,0.559,212,2.48,220,1.115,243,1.259,262,1.684,265,1.903,287,1.838,293,0.706,318,0.666,319,0.61,341,3.426,366,2.481,403,2.532,436,1.433,437,1.619,450,3.279,467,2.556,479,1.768,480,1.768,487,2.834,489,2.378,490,1.997,491,1.997,492,1.259,493,2.952,500,1.914,506,1.914,507,1.838,516,2.6,517,2.824,521,3.628,522,1.838,526,1.997,527,2.481,528,1.259,529,1.631,530,1.531,548,2.532,550,2.834,554,3.414,555,3.277,556,1.997,580,1.703,796,2.303,797,3.024,798,1.535,799,3.552,800,3.304,801,1.997,802,2.377,803,2.586,804,2.377,805,1.38,806,3.024,807,1.452,808,1.452,809,1.452,810,1.452,811,2.586,812,1.452,813,3.657,814,2.586,815,3.214,816,2.586,817,2.586,818,1.631,819,4.243,820,1.631,821,1.631,822,1.631,823,1.631,824,2.586,825,1.631,826,3.593,827,2.586,828,1.631,829,2.586,830,2.434,831,1.631,832,2.189,833,1.631,834,1.631,835,1.631,836,1.631,837,1.997,838,1.631,839,2.586,840,1.631,841,1.631,842,2.586,843,1.631,844,1.631,845,1.631,846,1.631,847,1.631,848,1.631,849,1.631,850,2.586,851,1.631,852,3.214,853,2.862,854,1.631,855,1.38,856,1.631,857,1.631,858,1.631,859,3.214,860,2.586,861,1.631,862,1.535,863,1.452,864,1.631,865,1.631,866,1.452,867,1.631,868,1.631,869,2.586,870,1.631,871,1.631,872,2.586,873,1.631,874,1.631,875,2.586,876,1.631,877,1.631,878,1.631,879,1.631,880,1.631,881,1.631,882,1.631,883,1.631,884,2.586,885,1.631,886,2.434,887,1.535,888,2.303,889,2.303,890,1.631,891,3.214,892,1.631,893,1.452,894,1.631,895,1.631,896,4.447,897,3.214,898,2.586,899,1.631,900,1.631,901,1.631,902,1.631,903,1.631,904,1.631,905,4.447,906,1.631,907,1.535,908,1.631,909,1.631,910,1.631,911,1.631,912,1.631,913,1.631,914,1.631,915,3.214,916,1.631,917,1.631,918,1.631,919,1.631,920,1.631,921,1.631,922,2.586,923,1.631,924,1.631,925,1.631,926,2.586,927,1.631,928,1.631,929,1.631,930,2.586,931,1.631,932,1.631,933,2.586,934,3.214,935,1.631,936,1.631,937,3.214,938,1.631,939,1.631,940,1.631,941,2.586,942,1.631,943,1.631,944,2.586,945,1.631,946,1.631,947,2.586,948,1.631,949,1.631,950,1.631,951,2.586,952,1.631,953,1.631,954,1.631,955,1.631,956,1.631,957,1.631,958,1.631,959,1.631,960,1.631,961,1.631,962,1.631,963,1.631,964,1.631,965,1.631,966,1.631,967,1.631,968,1.631,969,1.631,970,1.631,971,2.586,972,1.631,973,2.586,974,1.631,975,1.631,976,1.631,977,1.631,978,1.631,979,1.631,980,1.631,981,2.586,982,1.631,983,1.631]],["title/classes/CrudController.html",[134,0.209,984,2.875]],["body/classes/CrudController.html",[1,2.346,3,0.084,4,0.068,5,0.076,7,0.147,9,1.114,11,1.162,16,1.697,18,1.145,19,0.332,20,0.012,21,1.386,24,0.674,25,0.255,26,0.215,27,0.084,28,0.004,37,0.006,116,0.517,133,0.006,134,0.147,136,1.019,138,2.166,143,4.633,145,2.257,147,1.904,148,1.296,150,1.544,151,2.901,165,3.272,173,1.085,180,1.085,186,3.272,187,1.269,188,3.402,189,4.757,196,2.942,200,0.88,203,1.468,262,1.468,284,2.805,309,3.169,328,2.52,336,2.876,337,1.904,351,1.198,364,2.152,366,3.914,403,3.635,423,3.261,429,3.15,467,1.693,471,1.712,530,2.849,532,3.293,534,3.715,548,1.284,563,1.497,575,1.562,587,2.172,602,1.712,604,1.497,644,3.056,666,1.633,765,2.36,775,5.243,801,2.844,837,4.464,853,4.127,889,2.722,984,3.056,985,2.584,986,3.943,987,3.904,988,4.393,989,3.056,990,5.243,991,3.904,992,4.757,993,4.103,994,3.682,995,3.682,996,2.948,997,4.406,998,2.948,999,3.904,1000,5.243,1001,4.81,1002,3.904,1003,3.272,1004,3.904,1005,1.904,1006,5.629,1007,4.454,1008,4.36,1009,2.948,1010,2.948,1011,4.36,1012,2.948,1013,3.884,1014,2.948,1015,2.948,1016,2.948,1017,2.023,1018,5.243,1019,4.454,1020,2.948,1021,2.948,1022,2.023,1023,4.393,1024,2.948,1025,2.948,1026,2.948,1027,1.802,1028,3.272,1029,4.454,1030,2.948,1031,2.948,1032,4.757,1033,2.345,1034,5.92,1035,2.345,1036,2.345,1037,2.345,1038,2.948,1039,2.722,1040,2.584,1041,2.584,1042,5.629,1043,3.904,1044,2.948,1045,3.272,1046,2.948,1047,2.948,1048,2.948,1049,2.948,1050,2.948,1051,4.269,1052,2.948,1053,2.948,1054,2.948,1055,2.948,1056,2.345,1057,2.345,1058,2.345,1059,2.345,1060,2.948,1061,2.345]],["title/interfaces/CrudOptions.html",[0,0.183,516,2.044]],["body/interfaces/CrudOptions.html",[0,0.313,2,0.916,3,0.111,4,0.089,5,0.1,7,0.194,8,0.845,9,1.351,10,0.999,11,0.566,14,0.916,15,1.028,17,0.916,18,1.209,19,0.345,20,0.012,21,1.077,23,0.696,25,0.188,26,0.284,27,0.23,28,0.005,36,1.246,37,0.005,51,1.747,116,0.417,133,0.007,137,1.695,141,1.387,185,2.142,187,1.348,204,1.69,205,1.69,262,1.559,287,1.897,297,2.061,318,2.011,319,1.843,320,2.026,361,2.592,457,2.431,467,2.592,475,2.26,476,2.155,487,1.897,488,2.155,489,1.976,490,2.061,491,2.061,492,2.888,493,2.768,494,4.678,495,3.74,496,2.669,497,2.669,498,2.512,499,2.512,500,1.976,501,2.512,502,2.512,503,2.512,504,2.512,505,3.52,506,1.976,507,1.897,508,3.331,509,2.669,510,2.669,511,2.378,512,2.669,513,2.669,514,4.167,515,2.26,516,2.658,517,3.613,518,4.167,519,2.669,520,3.198,521,3.716,522,3.325,523,2.512,524,2.669,525,2.669,526,2.061,527,3.613,528,2.061,529,2.386,530,1.581,531,2.669,532,1.897,533,2.669,534,2.061,535,2.512,536,1.976,537,2.512,538,2.669,539,2.669,540,2.669,541,2.669,542,2.669,543,3.74,544,2.669,545,2.557,546,2.155,547,2.669,548,2.375,549,2.512,550,1.897,551,2.512,552,2.512,553,2.512,554,1.976,555,2.888,556,2.061,557,2.669,558,1.758,559,1.976,560,2.669,561,2.669,562,2.669,1008,3.52,1062,4.905]],["title/classes/CrudRoutesFactory.html",[134,0.209,888,2.561]],["body/classes/CrudRoutesFactory.html",[3,0.06,4,0.048,5,0.054,7,0.104,8,0.528,9,1.016,10,0.538,11,0.305,14,0.493,15,0.554,17,0.493,18,0.995,19,0.313,20,0.012,21,0.414,23,0.561,24,0.479,25,0.188,26,0.153,27,0.156,28,0.003,37,0.003,40,1.284,116,0.587,133,0.004,134,0.32,136,0.724,137,3.314,141,1.215,145,0.881,148,1.444,150,1.408,180,0.771,185,2.143,187,1.503,188,2.014,200,0.673,203,1.56,204,0.493,205,0.493,212,2.421,220,0.983,243,3.401,262,1.628,265,1.749,287,1.661,293,0.622,318,0.587,319,0.538,341,3.238,366,2.28,403,1.875,436,1.295,437,1.488,450,3.583,467,2.342,479,1.598,480,1.598,487,3.326,489,2.186,490,1.805,491,1.805,492,1.11,493,3.545,500,2.518,506,2.518,507,1.661,516,3.13,517,2.627,521,3.491,522,1.661,526,1.11,527,2.28,528,1.11,529,1.964,530,2.503,548,2.376,550,2.66,554,3.464,555,3.097,556,1.805,580,1.539,796,1.281,797,4.911,798,1.353,799,2.082,801,1.11,803,1.438,805,1.217,806,2.779,807,1.281,808,1.281,809,1.281,810,1.281,811,2.337,812,1.281,813,3.401,814,2.337,815,2.953,816,2.337,817,2.337,818,1.438,819,4.01,820,1.438,821,1.438,822,1.438,823,1.438,824,2.337,825,1.438,826,3.395,827,2.337,828,1.438,829,2.337,830,2.2,831,1.438,832,1.979,833,1.438,834,1.438,835,1.438,836,1.438,837,1.805,838,1.438,839,2.337,840,1.438,841,1.438,842,2.337,843,1.438,844,1.438,845,1.438,846,1.438,847,1.438,848,1.438,849,1.438,850,3.401,851,1.438,852,2.953,853,2.63,854,1.438,855,1.217,856,1.438,857,1.438,858,1.438,859,2.953,860,2.337,861,1.438,862,1.353,863,1.281,864,1.438,865,1.438,866,1.281,867,1.438,868,1.438,869,2.337,870,1.438,871,1.438,872,2.337,873,1.438,874,1.438,875,2.337,876,1.438,877,1.438,878,1.438,879,1.438,880,1.438,881,1.438,882,1.438,883,1.438,884,2.337,885,1.438,886,2.2,887,1.353,888,3.03,889,3.572,890,1.438,891,2.953,892,1.438,893,1.281,894,1.438,895,1.438,896,4.226,897,2.953,898,2.337,899,2.337,900,1.438,901,2.953,902,1.438,903,2.953,904,1.438,905,4.553,906,1.438,907,2.779,908,2.953,909,1.438,910,1.438,911,1.438,912,1.438,913,1.438,914,2.337,915,2.953,916,1.438,917,1.438,918,2.337,919,1.438,920,1.438,921,3.401,922,2.337,923,3.401,924,1.438,925,1.438,926,2.337,927,1.438,928,1.438,929,1.438,930,2.337,931,1.438,932,1.438,933,2.337,934,2.953,935,1.438,936,1.438,937,2.953,938,1.438,939,1.438,940,1.438,941,2.337,942,1.438,943,1.438,944,2.337,945,1.438,946,1.438,947,2.337,948,1.438,949,1.438,950,1.438,951,2.337,952,1.438,953,1.438,954,3.401,955,1.438,956,1.438,957,1.438,958,1.438,959,1.438,960,1.438,961,1.438,962,1.438,963,1.438,964,1.438,965,1.438,966,1.438,967,1.438,968,1.438,969,1.438,970,2.337,971,2.337,972,1.438,973,2.337,974,1.438,975,1.438,976,2.337,977,1.438,978,1.438,979,2.337,980,1.438,981,2.337,982,1.438,983,1.438,1063,3.407,1064,3.407,1065,3.407,1066,3.407,1067,2.096,1068,3.407,1069,2.096,1070,2.096,1071,2.096,1072,2.096,1073,2.096,1074,2.096,1075,2.096,1076,2.096,1077,2.096,1078,2.096,1079,2.096,1080,2.096,1081,2.096,1082,2.096,1083,2.096,1084,2.096,1085,2.096]],["title/classes/CrudService.html",[134,0.209,1086,2.875]],["body/classes/CrudService.html",[3,0.088,4,0.07,5,0.079,7,0.153,9,1.205,11,1.2,14,1.08,17,1.08,18,1.158,19,0.296,20,0.012,21,1.206,23,0.5,25,0.245,26,0.224,27,0.088,28,0.007,37,0.01,116,0.559,133,0.006,134,0.153,136,1.06,145,2.312,147,4.588,148,1.433,150,1.67,165,4.798,187,1.688,188,1.864,200,0.907,203,1.67,262,1.67,293,1.363,309,3.764,328,2.653,351,1.246,352,2.658,364,2.381,419,4.482,423,1.386,427,2.104,429,2.234,436,1.166,437,1.06,454,1.205,455,2.253,457,2.605,466,3.771,471,1.782,479,1.439,480,1.439,485,2.439,529,1.404,530,2.479,532,2.975,534,2.431,536,2.33,546,2.542,563,3.098,575,1.625,587,2.237,604,3.098,622,2.104,741,1.874,761,3.649,765,1.625,801,2.912,837,2.431,853,4.189,855,3.544,889,2.804,986,4.038,987,4.022,988,4.482,989,3.148,990,5.349,991,4.022,992,3.649,993,4.186,994,3.148,995,3.148,997,3.771,999,4.022,1000,5.349,1001,4.186,1002,4.022,1003,4.038,1004,4.022,1005,2.963,1011,4.218,1013,3.797,1017,3.148,1022,3.148,1023,3.37,1027,2.804,1028,3.37,1036,2.439,1037,2.439,1039,1.874,1040,2.689,1041,2.689,1045,2.253,1086,3.148,1087,2.689,1088,4.022,1089,3.649,1090,3.148,1091,3.37,1092,2.439,1093,4.852,1094,3.068,1095,3.068,1096,6.049,1097,3.068,1098,5.587,1099,5.451,1100,3.649,1101,3.068,1102,3.148,1103,3.068,1104,3.649,1105,3.068,1106,3.37,1107,3.068,1108,3.068,1109,3.649,1110,3.068,1111,3.068,1112,4.852,1113,3.068,1114,2.253,1115,3.068,1116,3.068,1117,2.689,1118,2.689,1119,3.068,1120,3.068,1121,4.589,1122,2.689]],["title/classes/CustomQueryBuilder.html",[134,0.209,441,2.561]],["body/classes/CustomQueryBuilder.html",[3,0.112,4,0.09,5,0.101,7,0.195,8,0.849,9,0.904,11,0.57,14,1.755,17,0.923,18,1.23,19,0.31,20,0.012,25,0.189,27,0.157,28,0.005,36,0.896,37,0.008,51,1.253,116,0.419,132,1.182,133,0.007,136,1.355,147,4.079,148,1.499,150,1.253,185,2.828,187,1.474,200,1.083,203,1.564,204,1.802,205,1.802,262,1.564,265,1.593,309,2.903,318,1.098,319,1.965,320,2.032,328,2.585,361,2.911,364,2.565,430,4.334,437,2.578,441,4.85,454,1.54,457,1.398,467,1.49,471,2.277,475,2.277,476,2.171,477,2.531,529,1.677,545,3.111,558,2.476,625,3.349,741,2.395,759,2.531,765,3.624,887,4.079,1043,3.436,1114,2.879,1123,3.117,1124,6.318,1125,6.318,1126,6.318,1127,6.318,1128,5.48,1129,6.842,1130,6.842,1131,5.48,1132,3.92,1133,3.92,1134,3.92,1135,3.92,1136,5.48,1137,6.842,1138,3.92,1139,3.92,1140,3.92,1141,3.92,1142,5.48,1143,7.937,1144,3.92,1145,3.92,1146,3.436,1147,4.358,1148,3.436,1149,2.879,1150,3.436,1151,3.436,1152,3.92,1153,4.358,1154,3.92,1155,3.92,1156,3.92,1157,3.92,1158,3.92,1159,3.92,1160,3.92,1161,3.92,1162,4.804,1163,3.92,1164,6.318,1165,6.842,1166,3.92,1167,4.358,1168,3.92,1169,3.92,1170,3.92,1171,3.92,1172,3.92,1173,3.92]],["title/modules/DatabaseModule.html",[215,1.703,228,2.875]],["body/modules/DatabaseModule.html",[3,0.161,4,0.129,5,0.145,20,0.012,25,0.279,26,0.41,27,0.216,28,0.007,37,0.007,53,1.589,133,0.009,134,0.28,187,1.373,204,1.323,205,1.323,215,2.823,217,2.853,222,3.113,223,3.113,228,4.767,262,1.802,265,2.823,318,1.574,319,1.442,320,1.669,328,1.772,364,1.883,382,4.469,383,3.855,454,2.208,457,2.478,537,4.487,576,3.681,832,3.264,988,5.104,1036,4.469,1037,4.469,1174,4.469,1175,5.949,1176,5.526,1177,4.926,1178,4.926,1179,4.926,1180,6,1181,4.926,1182,4.926,1183,4.469,1184,4.926,1185,4.926,1186,4.926,1187,4.926,1188,4.926,1189,4.926]],["title/modules/EmailModule.html",[215,1.703,1190,2.875]],["body/modules/EmailModule.html",[3,0.173,4,0.139,5,0.156,20,0.011,25,0.269,26,0.442,27,0.173,28,0.008,37,0.008,133,0.009,134,0.302,198,2.841,215,3.168,217,3.076,218,3.209,219,3.518,220,2.841,221,3.209,222,4.319,223,4.319,232,4.225,233,3.518,234,3.355,237,4.449,246,5.785,247,3.518,1190,5.826,1191,5.31,1192,5.31,1193,5.31,1194,5.641,1195,6.058,1196,6.058]],["title/classes/EmailScheduleDto.html",[134,0.209,1197,2.875]],["body/classes/EmailScheduleDto.html",[3,0.17,4,0.136,5,0.153,7,0.295,8,1.112,19,0.325,20,0.011,23,0.776,25,0.204,27,0.17,28,0.008,37,0.008,52,2.587,111,2.434,133,0.009,134,0.357,136,2.047,148,1.54,151,3.625,342,3.621,343,2.675,569,3.92,619,5.297,1197,4.923,1198,5.192,1199,7.721,1200,7.721,1201,7.176,1202,5.923,1203,6.14,1204,5.923,1205,5.923,1206,5.923]],["title/controllers/EmailSchedulingController.html",[196,1.826,1207,3.079]],["body/controllers/EmailSchedulingController.html",[3,0.166,4,0.132,5,0.149,7,0.288,9,0.954,19,0.234,20,0.011,25,0.275,26,0.422,27,0.166,28,0.007,37,0.007,116,0.442,133,0.009,134,0.288,141,2.062,148,1.109,150,1.322,151,2.612,173,2.128,196,2.519,198,2.712,200,1.398,203,1.322,204,1.664,205,1.664,206,3.734,207,3.734,208,3.534,209,3.534,212,1.823,318,1.62,319,1.484,320,1.718,328,2.409,336,3.734,337,3.734,352,2.519,364,2.37,383,3.967,436,2.198,750,3.734,1197,5.461,1207,5.195,1208,5.069,1209,6.2,1210,5.069,1211,7.073,1212,5.783,1213,6.2,1214,5.069,1215,4.933,1216,5.069,1217,5.783,1218,5.783,1219,5.783,1220,5.783,1221,5.783]],["title/modules/EmailSchedulingModule.html",[215,1.703,229,2.875]],["body/modules/EmailSchedulingModule.html",[3,0.172,4,0.138,5,0.155,20,0.011,25,0.278,26,0.44,27,0.172,28,0.008,37,0.008,133,0.009,134,0.3,198,3.4,215,3.16,217,3.058,218,3.191,219,3.498,220,2.825,221,3.191,222,4.308,223,3.336,229,5.87,232,4.211,233,3.498,234,3.336,237,5.325,1190,5.754,1207,5.713,1215,5.416,1216,5.28,1222,5.28,1223,6.023,1224,5.28,1225,6.023,1226,6.023,1227,6.023]],["title/injectables/EmailSchedulingService.html",[389,1.209,1215,2.706]],["body/injectables/EmailSchedulingService.html",[3,0.147,4,0.118,5,0.132,7,0.255,8,1.017,9,1.083,19,0.266,20,0.011,25,0.272,26,0.374,27,0.147,28,0.007,37,0.007,52,1.719,111,1.618,116,0.502,133,0.008,134,0.255,145,2.76,148,1.388,150,1.5,180,2.807,200,1.297,203,1.173,204,1.703,205,1.703,249,3.52,262,1.5,297,2.718,318,1.838,319,1.857,320,2.149,328,2.282,351,2.666,361,2.751,364,1.719,383,3.52,389,1.893,390,2.407,436,2.495,437,1.773,545,2.94,558,2.318,559,2.605,676,3.769,686,6.066,702,6.066,704,6.343,710,5.755,749,4.498,759,3.313,769,4.498,771,4.498,1194,5.206,1197,5.232,1209,5.753,1210,5.753,1213,4.498,1214,4.498,1215,4.237,1228,4.498,1229,5.131,1230,6.563,1231,5.131,1232,6.563,1233,5.131,1234,5.131,1235,5.131,1236,5.131,1237,6.563,1238,5.131,1239,5.131,1240,5.131,1241,5.131,1242,5.131,1243,5.131]],["title/injectables/EmailService.html",[389,1.209,1194,2.706]],["body/injectables/EmailService.html",[3,0.172,4,0.138,5,0.155,7,0.299,9,1.195,19,0.243,20,0.011,25,0.25,26,0.439,27,0.172,28,0.008,37,0.008,116,0.554,133,0.009,134,0.299,145,3.045,148,1.389,150,1.656,200,1.431,203,1.374,243,3.185,247,3.492,351,2.443,373,5.752,389,2.089,390,2.82,436,2.285,450,3.531,799,3.674,893,3.674,907,3.882,1194,4.675,1244,5.27,1245,7.242,1246,5.27,1247,6.012,1248,7.242,1249,6.012,1250,5.27,1251,5.27,1252,6.012]],["title/injectables/ExcludeNullUndefinedInterceptor.html",[389,1.209,1253,3.333]],["body/injectables/ExcludeNullUndefinedInterceptor.html",[3,0.141,4,0.112,5,0.126,7,0.244,9,0.81,19,0.199,20,0.012,23,0.581,25,0.244,26,0.358,27,0.141,28,0.006,36,1.715,37,0.006,116,0.376,133,0.008,134,0.244,147,4.119,148,0.942,150,1.123,185,1.929,187,1.603,188,1.995,200,1.261,203,1.123,204,1.83,205,1.83,293,1.459,297,2.601,318,2.304,319,1.996,320,2.228,361,2.852,362,3.905,363,3.905,389,1.84,390,2.303,437,2.873,477,3.17,479,2.992,480,2.992,515,2.852,529,1.502,545,2.592,639,3.898,1008,4.119,1149,4.686,1151,4.304,1253,5.073,1254,5.073,1255,3.905,1256,6.379,1257,5.073,1258,6.379,1259,4.686,1260,5.073,1261,4.843,1262,5.51,1263,4.91,1264,3.17,1265,4.33,1266,4.686,1267,2.852,1268,4.376,1269,3.368,1270,4.91,1271,6.211,1272,4.91,1273,4.91,1274,4.304,1275,4.91,1276,4.304]],["title/interfaces/Follower.html",[0,0.183,128,1.404]],["body/interfaces/Follower.html",[0,0.37,1,2.486,2,0.85,3,0.103,4,0.083,5,0.093,6,1.211,7,0.18,8,0.802,10,0.927,11,0.752,12,1.743,13,1.537,14,0.85,15,0.955,16,1.367,17,0.85,18,1.347,19,0.303,20,0.011,21,1.022,22,1.964,23,0.802,24,1.382,25,0.125,26,0.264,27,0.244,28,0.007,29,1.681,30,1.681,31,1.681,32,1.681,33,1.681,34,1.681,35,1.681,36,1.508,37,0.007,38,2.667,39,1.288,40,1.76,41,1.288,42,1.288,43,1.288,44,1.288,45,1.288,46,1.288,47,1.211,48,1.288,49,1.288,50,1.139,51,1.927,52,1.211,53,0.826,54,1.844,55,1.288,56,2.025,57,1.288,58,1.288,59,1.288,60,1.288,61,1.288,62,1.288,63,1.288,64,1.288,65,1.288,66,1.288,67,1.288,68,2.59,69,1.844,70,1.288,71,1.288,72,1.288,73,2.29,74,1.288,75,1.288,76,1.844,77,1.288,78,1.288,79,1.288,80,1.288,81,1.288,82,2.21,83,1.288,84,1.733,85,1.733,86,1.288,87,1.288,88,1.288,89,1.288,90,1.288,91,1.288,92,1.288,93,1.288,94,1.288,95,1.844,96,1.288,97,1.288,98,1.288,99,1.211,100,1.288,101,1.288,102,2.21,103,1.288,104,1.288,105,1.288,106,1.288,107,1.288,108,1.288,109,1.288,110,1.288,111,1.139,112,1.288,113,1.288,114,1.288,115,1.288,116,0.276,117,1.288,118,1.288,119,1.288,120,1.288,121,1.288,122,1.211,123,2.025,124,1.288,125,1.288,126,1.288,127,1.733,128,2.025,129,2.352,130,2.352,131,2.352,132,0.78,133,0.007]],["title/interfaces/Following.html",[0,0.183,56,1.404]],["body/interfaces/Following.html",[0,0.371,1,2.513,2,0.887,3,0.108,4,0.086,5,0.097,6,1.262,10,0.967,11,0.775,12,1.783,13,1.583,14,0.887,15,0.995,16,1.408,17,0.887,18,1.347,19,0.216,20,0.011,21,1.053,22,2.009,23,0.802,24,1.414,25,0.13,26,0.275,27,0.245,28,0.007,29,1.732,30,1.732,31,1.732,32,1.732,33,1.732,34,1.732,35,1.732,36,1.537,37,0.007,38,2.699,39,1.343,40,1.782,41,1.343,42,1.343,43,1.343,44,1.343,45,1.343,46,1.343,47,1.262,48,1.343,49,1.343,50,1.188,51,1.902,52,1.262,53,0.861,54,1.9,55,1.343,56,2.252,57,1.343,58,1.343,59,1.343,60,1.343,61,1.343,62,1.343,63,1.343,64,1.343,65,1.343,66,1.343,67,1.343,68,2.205,69,1.9,70,1.343,71,1.343,72,1.343,73,1.95,74,1.343,75,1.343,76,1.9,77,1.343,78,1.343,79,1.343,80,1.343,81,1.343,82,2.252,83,1.343,84,1.785,85,1.785,86,1.343,87,1.343,88,1.343,89,1.343,90,1.343,91,1.343,92,1.343,93,1.343,94,1.343,95,1.9,96,1.343,97,1.343,98,1.343,99,1.262,100,1.343,101,1.343,102,2.252,103,1.343,104,1.343,105,1.343,106,1.343,107,1.343,108,1.343,109,1.343,110,1.343,111,1.188,112,1.343,113,1.343,114,1.343,115,1.343,116,0.288,117,1.343,118,1.343,119,1.343,120,1.343,121,1.343,122,1.262,123,2.072,124,1.343,125,1.343,126,1.343,127,1.785,128,2.072,129,1.343,130,1.343,131,1.343,132,1.15,133,0.007]],["title/interfaces/GetAppLaunchData.html",[0,0.183,29,1.362]],["body/interfaces/GetAppLaunchData.html",[0,0.371,1,2.584,2,0.875,3,0.106,4,0.085,5,0.096,6,1.246,7,0.185,8,0.818,10,0.955,11,0.768,12,1.771,13,1.569,14,0.875,15,0.983,16,1.395,17,0.875,18,1.346,19,0.249,20,0.011,21,1.043,22,1.995,23,0.801,24,1.404,25,0.128,26,0.271,27,0.245,28,0.007,29,1.995,30,1.716,31,1.716,32,1.716,33,1.716,34,1.716,35,1.716,36,1.528,37,0.007,38,2.835,39,1.326,40,1.871,41,1.326,42,1.326,43,1.326,44,1.326,45,1.326,46,1.326,47,1.246,48,1.326,49,1.326,50,1.173,51,1.898,52,1.246,53,0.85,54,1.883,55,1.326,56,2.057,57,1.326,58,1.326,59,1.326,60,1.326,61,1.326,62,1.326,63,1.326,64,1.326,65,1.326,66,1.326,67,1.326,68,2.189,69,1.883,70,1.326,71,1.326,72,1.326,73,1.936,74,1.326,75,1.326,76,1.883,77,1.326,78,1.326,79,1.326,80,1.326,81,1.326,82,2.239,83,1.326,84,1.769,85,1.769,86,1.326,87,1.326,88,1.326,89,1.326,90,1.326,91,1.326,92,1.326,93,1.326,94,1.326,95,1.883,96,1.326,97,1.326,98,1.326,99,1.246,100,1.326,101,1.326,102,2.239,103,1.326,104,1.326,105,1.326,106,1.326,107,1.326,108,1.326,109,1.326,110,1.326,111,1.173,112,1.326,113,1.326,114,1.326,115,1.326,116,0.284,117,1.326,118,1.326,119,1.326,120,1.326,121,1.326,122,1.246,123,2.057,124,1.326,125,1.326,126,1.326,127,1.769,128,1.769,129,1.326,130,1.326,131,1.326,132,0.802,133,0.007]],["title/interfaces/GetComments.html",[0,0.183,32,1.362]],["body/interfaces/GetComments.html",[0,0.371,1,2.584,2,0.875,3,0.106,4,0.085,5,0.096,6,1.246,7,0.185,8,0.818,10,0.955,11,0.768,12,1.771,13,1.569,14,0.875,15,0.983,16,1.395,17,0.875,18,1.346,19,0.249,20,0.011,21,1.043,22,1.995,23,0.801,24,1.404,25,0.128,26,0.271,27,0.245,28,0.007,29,1.716,30,1.716,31,1.716,32,1.995,33,1.716,34,1.716,35,1.716,36,1.528,37,0.007,38,2.835,39,1.326,40,1.871,41,1.326,42,1.326,43,1.326,44,1.326,45,1.326,46,1.326,47,1.246,48,1.326,49,1.326,50,1.173,51,1.898,52,1.246,53,0.85,54,1.883,55,1.326,56,2.057,57,1.326,58,1.326,59,1.326,60,1.326,61,1.326,62,1.326,63,1.326,64,1.326,65,1.326,66,1.326,67,1.326,68,2.189,69,1.883,70,1.326,71,1.326,72,1.326,73,1.936,74,1.326,75,1.326,76,1.883,77,1.326,78,1.326,79,1.326,80,1.326,81,1.326,82,2.239,83,1.326,84,1.769,85,1.769,86,1.326,87,1.326,88,1.326,89,1.326,90,1.326,91,1.326,92,1.326,93,1.326,94,1.326,95,1.883,96,1.326,97,1.326,98,1.326,99,1.246,100,1.326,101,1.326,102,2.239,103,1.326,104,1.326,105,1.326,106,1.326,107,1.326,108,1.326,109,1.326,110,1.326,111,1.173,112,1.326,113,1.326,114,1.326,115,1.326,116,0.284,117,1.326,118,1.326,119,1.326,120,1.326,121,1.326,122,1.246,123,2.057,124,1.326,125,1.326,126,1.326,127,1.769,128,1.769,129,1.326,130,1.326,131,1.326,132,0.802,133,0.007]],["title/interfaces/GetFollowers.html",[0,0.183,34,1.362]],["body/interfaces/GetFollowers.html",[0,0.371,1,2.584,2,0.875,3,0.106,4,0.085,5,0.096,6,1.246,7,0.185,8,0.818,10,0.955,11,0.768,12,1.771,13,1.569,14,0.875,15,0.983,16,1.395,17,0.875,18,1.346,19,0.249,20,0.011,21,1.043,22,1.995,23,0.801,24,1.404,25,0.128,26,0.271,27,0.245,28,0.007,29,1.716,30,1.716,31,1.716,32,1.716,33,1.716,34,1.995,35,1.716,36,1.528,37,0.007,38,2.835,39,1.326,40,1.871,41,1.326,42,1.326,43,1.326,44,1.326,45,1.326,46,1.326,47,1.246,48,1.326,49,1.326,50,1.173,51,1.898,52,1.246,53,0.85,54,1.883,55,1.326,56,2.057,57,1.326,58,1.326,59,1.326,60,1.326,61,1.326,62,1.326,63,1.326,64,1.326,65,1.326,66,1.326,67,1.326,68,2.189,69,1.883,70,1.326,71,1.326,72,1.326,73,1.936,74,1.326,75,1.326,76,1.883,77,1.326,78,1.326,79,1.326,80,1.326,81,1.326,82,2.239,83,1.326,84,1.769,85,1.769,86,1.326,87,1.326,88,1.326,89,1.326,90,1.326,91,1.326,92,1.326,93,1.326,94,1.326,95,1.883,96,1.326,97,1.326,98,1.326,99,1.246,100,1.326,101,1.326,102,2.239,103,1.326,104,1.326,105,1.326,106,1.326,107,1.326,108,1.326,109,1.326,110,1.326,111,1.173,112,1.326,113,1.326,114,1.326,115,1.326,116,0.284,117,1.326,118,1.326,119,1.326,120,1.326,121,1.326,122,1.246,123,2.057,124,1.326,125,1.326,126,1.326,127,1.769,128,1.769,129,1.326,130,1.326,131,1.326,132,0.802,133,0.007]],["title/interfaces/GetFollowing.html",[0,0.183,35,1.362]],["body/interfaces/GetFollowing.html",[0,0.371,1,2.584,2,0.875,3,0.106,4,0.085,5,0.096,6,1.246,7,0.185,8,0.818,10,0.955,11,0.768,12,1.771,13,1.569,14,0.875,15,0.983,16,1.395,17,0.875,18,1.346,19,0.249,20,0.011,21,1.043,22,1.995,23,0.801,24,1.404,25,0.128,26,0.271,27,0.245,28,0.007,29,1.716,30,1.716,31,1.716,32,1.716,33,1.716,34,1.716,35,1.995,36,1.528,37,0.007,38,2.835,39,1.326,40,1.871,41,1.326,42,1.326,43,1.326,44,1.326,45,1.326,46,1.326,47,1.246,48,1.326,49,1.326,50,1.173,51,1.898,52,1.246,53,0.85,54,1.883,55,1.326,56,2.057,57,1.326,58,1.326,59,1.326,60,1.326,61,1.326,62,1.326,63,1.326,64,1.326,65,1.326,66,1.326,67,1.326,68,2.189,69,1.883,70,1.326,71,1.326,72,1.326,73,1.936,74,1.326,75,1.326,76,1.883,77,1.326,78,1.326,79,1.326,80,1.326,81,1.326,82,2.239,83,1.326,84,1.769,85,1.769,86,1.326,87,1.326,88,1.326,89,1.326,90,1.326,91,1.326,92,1.326,93,1.326,94,1.326,95,1.883,96,1.326,97,1.326,98,1.326,99,1.246,100,1.326,101,1.326,102,2.239,103,1.326,104,1.326,105,1.326,106,1.326,107,1.326,108,1.326,109,1.326,110,1.326,111,1.173,112,1.326,113,1.326,114,1.326,115,1.326,116,0.284,117,1.326,118,1.326,119,1.326,120,1.326,121,1.326,122,1.246,123,2.057,124,1.326,125,1.326,126,1.326,127,1.769,128,1.769,129,1.326,130,1.326,131,1.326,132,0.802,133,0.007]],["title/interfaces/GetManyDefaultResponse.html",[0,0.183,507,2.044]],["body/interfaces/GetManyDefaultResponse.html",[0,0.318,2,0.963,3,0.117,4,0.094,5,0.105,7,0.204,8,0.875,10,1.789,11,1.013,14,1.64,15,1.841,17,1.64,18,1.311,19,0.32,20,0.012,21,1.377,23,0.705,25,0.195,26,0.299,27,0.232,28,0.005,36,1.291,37,0.005,51,1.771,116,0.432,133,0.007,137,1.782,141,1.459,185,2.218,187,1.377,204,1.721,205,1.721,262,1.593,287,1.995,297,2.167,318,2.048,319,1.877,320,2.07,361,2.649,457,1.459,467,1.555,475,2.376,476,2.266,487,1.995,488,2.266,489,2.077,490,2.167,491,2.167,492,2.99,493,2.866,494,3.873,495,3.873,496,2.806,497,2.806,498,2.641,499,2.641,500,2.077,501,2.641,502,2.641,503,2.641,504,2.641,505,3.645,506,2.077,507,2.753,508,3.449,509,2.806,510,2.806,511,2.5,512,2.806,513,2.806,514,3.449,515,2.376,516,1.995,517,2.167,518,2.5,519,2.806,520,1.919,521,3.758,522,1.995,523,2.641,524,2.806,525,2.806,526,2.167,527,2.167,528,2.167,529,2.416,530,1.662,531,2.806,532,1.995,533,2.806,534,2.167,535,2.641,536,2.077,537,2.641,538,2.806,539,2.806,540,2.806,541,2.806,542,2.806,543,3.873,544,2.806,545,2.626,546,2.266,547,2.806,548,2.459,549,2.641,550,1.995,551,2.641,552,2.641,553,2.641,554,2.077,555,2.99,556,2.167,557,2.806,558,1.848,559,2.077,560,2.806,561,2.806,562,2.806]],["title/interfaces/GetRescueList.html",[0,0.183,33,1.362]],["body/interfaces/GetRescueList.html",[0,0.371,1,2.584,2,0.875,3,0.106,4,0.085,5,0.096,6,1.246,7,0.185,8,0.818,10,0.955,11,0.768,12,1.771,13,1.569,14,0.875,15,0.983,16,1.395,17,0.875,18,1.346,19,0.249,20,0.011,21,1.043,22,1.995,23,0.801,24,1.404,25,0.128,26,0.271,27,0.245,28,0.007,29,1.716,30,1.716,31,1.716,32,1.716,33,1.995,34,1.716,35,1.716,36,1.528,37,0.007,38,2.835,39,1.326,40,1.871,41,1.326,42,1.326,43,1.326,44,1.326,45,1.326,46,1.326,47,1.246,48,1.326,49,1.326,50,1.173,51,1.898,52,1.246,53,0.85,54,1.883,55,1.326,56,2.057,57,1.326,58,1.326,59,1.326,60,1.326,61,1.326,62,1.326,63,1.326,64,1.326,65,1.326,66,1.326,67,1.326,68,2.189,69,1.883,70,1.326,71,1.326,72,1.326,73,1.936,74,1.326,75,1.326,76,1.883,77,1.326,78,1.326,79,1.326,80,1.326,81,1.326,82,2.239,83,1.326,84,1.769,85,1.769,86,1.326,87,1.326,88,1.326,89,1.326,90,1.326,91,1.326,92,1.326,93,1.326,94,1.326,95,1.883,96,1.326,97,1.326,98,1.326,99,1.246,100,1.326,101,1.326,102,2.239,103,1.326,104,1.326,105,1.326,106,1.326,107,1.326,108,1.326,109,1.326,110,1.326,111,1.173,112,1.326,113,1.326,114,1.326,115,1.326,116,0.284,117,1.326,118,1.326,119,1.326,120,1.326,121,1.326,122,1.246,123,2.057,124,1.326,125,1.326,126,1.326,127,1.769,128,1.769,129,1.326,130,1.326,131,1.326,132,0.802,133,0.007]],["title/interfaces/GetUserPosts.html",[0,0.183,31,1.362]],["body/interfaces/GetUserPosts.html",[0,0.371,1,2.584,2,0.875,3,0.106,4,0.085,5,0.096,6,1.246,7,0.185,8,0.818,10,0.955,11,0.768,12,1.771,13,1.569,14,0.875,15,0.983,16,1.395,17,0.875,18,1.346,19,0.249,20,0.011,21,1.043,22,1.995,23,0.801,24,1.404,25,0.128,26,0.271,27,0.245,28,0.007,29,1.716,30,1.716,31,1.995,32,1.716,33,1.716,34,1.716,35,1.716,36,1.528,37,0.007,38,2.835,39,1.326,40,1.871,41,1.326,42,1.326,43,1.326,44,1.326,45,1.326,46,1.326,47,1.246,48,1.326,49,1.326,50,1.173,51,1.898,52,1.246,53,0.85,54,1.883,55,1.326,56,2.057,57,1.326,58,1.326,59,1.326,60,1.326,61,1.326,62,1.326,63,1.326,64,1.326,65,1.326,66,1.326,67,1.326,68,2.189,69,1.883,70,1.326,71,1.326,72,1.326,73,1.936,74,1.326,75,1.326,76,1.883,77,1.326,78,1.326,79,1.326,80,1.326,81,1.326,82,2.239,83,1.326,84,1.769,85,1.769,86,1.326,87,1.326,88,1.326,89,1.326,90,1.326,91,1.326,92,1.326,93,1.326,94,1.326,95,1.883,96,1.326,97,1.326,98,1.326,99,1.246,100,1.326,101,1.326,102,2.239,103,1.326,104,1.326,105,1.326,106,1.326,107,1.326,108,1.326,109,1.326,110,1.326,111,1.173,112,1.326,113,1.326,114,1.326,115,1.326,116,0.284,117,1.326,118,1.326,119,1.326,120,1.326,121,1.326,122,1.246,123,2.057,124,1.326,125,1.326,126,1.326,127,1.769,128,1.769,129,1.326,130,1.326,131,1.326,132,0.802,133,0.007]],["title/interfaces/GetUserProfile.html",[0,0.183,30,1.362]],["body/interfaces/GetUserProfile.html",[0,0.371,1,2.584,2,0.875,3,0.106,4,0.085,5,0.096,6,1.246,7,0.185,8,0.818,10,0.955,11,0.768,12,1.771,13,1.569,14,0.875,15,0.983,16,1.395,17,0.875,18,1.346,19,0.249,20,0.011,21,1.043,22,1.995,23,0.801,24,1.404,25,0.128,26,0.271,27,0.245,28,0.007,29,1.716,30,1.995,31,1.716,32,1.716,33,1.716,34,1.716,35,1.716,36,1.528,37,0.007,38,2.835,39,1.326,40,1.871,41,1.326,42,1.326,43,1.326,44,1.326,45,1.326,46,1.326,47,1.246,48,1.326,49,1.326,50,1.173,51,1.898,52,1.246,53,0.85,54,1.883,55,1.326,56,2.057,57,1.326,58,1.326,59,1.326,60,1.326,61,1.326,62,1.326,63,1.326,64,1.326,65,1.326,66,1.326,67,1.326,68,2.189,69,1.883,70,1.326,71,1.326,72,1.326,73,1.936,74,1.326,75,1.326,76,1.883,77,1.326,78,1.326,79,1.326,80,1.326,81,1.326,82,2.239,83,1.326,84,1.769,85,1.769,86,1.326,87,1.326,88,1.326,89,1.326,90,1.326,91,1.326,92,1.326,93,1.326,94,1.326,95,1.883,96,1.326,97,1.326,98,1.326,99,1.246,100,1.326,101,1.326,102,2.239,103,1.326,104,1.326,105,1.326,106,1.326,107,1.326,108,1.326,109,1.326,110,1.326,111,1.173,112,1.326,113,1.326,114,1.326,115,1.326,116,0.284,117,1.326,118,1.326,119,1.326,120,1.326,121,1.326,122,1.246,123,2.057,124,1.326,125,1.326,126,1.326,127,1.769,128,1.769,129,1.326,130,1.326,131,1.326,132,0.802,133,0.007]],["title/controllers/HealthController.html",[196,1.826,236,3.079]],["body/controllers/HealthController.html",[3,0.114,4,0.091,5,0.103,7,0.199,9,0.915,11,0.58,18,1.123,19,0.279,20,0.012,23,0.58,25,0.271,26,0.291,27,0.114,28,0.005,37,0.005,116,0.424,133,0.007,134,0.199,141,1.422,144,2.93,145,1.677,148,1.39,150,1.268,151,2.506,173,1.468,187,1.362,196,1.737,198,1.871,200,1.096,203,1.656,204,1.811,205,1.811,206,2.575,207,2.575,208,2.437,209,2.437,212,1.258,236,5.063,238,6.042,239,4.862,241,5.59,242,2.736,243,3.378,244,6.574,247,2.317,251,3.172,262,0.912,289,4.862,293,1.185,297,2.113,316,3.496,318,1.554,319,1.925,320,2.228,321,3.172,322,3.172,323,3.172,324,3.172,325,3.496,351,2.591,361,2.754,373,3.805,479,1.871,480,1.871,545,2.944,558,3.114,625,3.389,679,5.59,755,3.496,756,4.862,765,3.652,799,3.389,800,3.496,886,2.575,893,2.437,1062,3.389,1147,5.482,1153,5.482,1265,3.897,1267,2.317,1268,2.736,1269,2.736,1277,3.496,1278,5.547,1279,7.245,1280,3.989,1281,3.989,1282,5.547,1283,3.989,1284,6.377,1285,3.989,1286,3.989,1287,5.547,1288,3.989,1289,3.989,1290,3.989,1291,5.547,1292,5.547,1293,5.547,1294,6.893,1295,5.59,1296,3.989,1297,3.989,1298,3.989,1299,5.547,1300,3.989,1301,3.989,1302,5.547,1303,3.989,1304,3.989,1305,3.989,1306,3.989,1307,3.989,1308,3.989,1309,3.989,1310,3.989,1311,3.989,1312,5.547,1313,5.547,1314,3.989,1315,3.989,1316,5.547,1317,5.547,1318,6.042,1319,3.989,1320,3.989,1321,3.989,1322,3.989,1323,3.989,1324,3.989,1325,3.989]],["title/interfaces/IBaseModel.html",[0,0.183,425,3.079]],["body/interfaces/IBaseModel.html",[0,0.218,2,1.177,3,0.143,4,0.115,5,0.129,7,0.249,8,1.001,9,1.065,11,0.727,18,1.171,19,0.306,20,0.012,23,0.588,25,0.261,27,0.185,28,0.006,36,1.144,37,0.008,132,1.079,133,0.008,134,0.249,140,3.23,180,1.841,181,3.432,187,1.276,204,1.177,205,1.177,212,2.036,293,1.486,318,1.401,319,1.284,320,1.486,328,2.036,354,2.439,364,2.163,403,2.179,423,2.26,424,3.978,425,5.251,426,5.883,427,5.494,428,4.743,429,3.177,430,3.432,431,5.883,433,3.674,438,3.674,441,4.369,444,3.057,445,3.945,446,4.616,450,3.148,451,3.674,453,4.743,454,2.968,455,3.674,456,4.385,457,1.784,458,4.385,459,5.66,460,3.674,461,5.66,462,3.978,463,3.674,464,4.385,465,3.23,466,3.432,467,2.454,468,4.385,469,4.385,470,4.385,471,2.906,472,4.385,473,4.385,474,4.385,475,2.906,476,2.771,477,3.23,478,4.385,479,2.346,480,2.346,481,4.385,482,4.385,483,3.23,484,4.385,485,3.978,486,4.385]],["title/interfaces/ICrudService.html",[0,0.183,997,2.875]],["body/interfaces/ICrudService.html",[0,0.306,2,1.135,3,0.138,4,0.11,5,0.124,7,0.24,9,1.308,11,1.083,18,1.284,19,0.321,20,0.012,21,1.388,23,0.639,25,0.166,27,0.138,28,0.006,37,0.006,116,0.606,133,0.008,148,1.55,150,1.813,188,1.959,200,1.246,203,1.847,242,3.307,309,4.535,352,2.1,429,2.854,471,2.8,530,3.026,532,3.632,801,3.721,989,4.324,993,5.44,994,5.11,995,5.11,997,4.324,1013,4.392,1017,4.324,1022,4.324,1027,3.852,1039,2.946,1088,5.526,1090,5.11,1091,5.678,1102,4.324,1106,3.541,1326,4.226,1327,6.304,1328,5.526,1329,4.821,1330,4.821,1331,4.821,1332,4.821,1333,4.821,1334,4.821,1335,4.821]],["title/interfaces/IPaginationResult.html",[0,0.183,1039,2.561]],["body/interfaces/IPaginationResult.html",[0,0.305,2,1.129,3,0.137,4,0.11,5,0.124,7,0.239,8,0.974,9,1.227,11,1.081,12,2.145,13,2.209,14,1.479,16,1.965,17,1.129,18,1.269,19,0.335,20,0.012,21,1.469,22,2.416,23,0.745,24,1.7,25,0.266,26,0.35,27,0.201,28,0.006,37,0.006,40,1.479,133,0.008,134,0.349,152,5.913,173,1.766,188,1.95,343,2.168,351,3.136,471,4.07,511,2.933,522,2.34,593,3.712,741,4.282,757,3.817,805,2.787,826,2.787,863,2.933,986,4.616,1003,3.525,1013,2.658,1035,3.817,1039,3.84,1045,5.669,1062,3.84,1112,4.998,1114,3.525,1257,3.817,1336,3.525,1337,6.518,1338,4.207,1339,4.998,1340,4.998,1341,4.998,1342,4.207,1343,5.509,1344,5.509,1345,5.509,1346,5.509,1347,6.143,1348,4.207,1349,4.207,1350,4.207,1351,4.207]],["title/interfaces/ITag.html",[0,0.183,565,2.706]],["body/interfaces/ITag.html",[0,0.288,2,1.223,3,0.149,4,0.119,5,0.134,7,0.259,8,1.188,19,0.333,20,0.011,23,0.736,25,0.264,27,0.227,28,0.007,37,0.007,116,0.636,132,1.428,133,0.009,134,0.394,173,1.913,200,1.027,212,2.087,275,2.754,284,2.438,293,1.966,342,3.104,343,2.348,423,2.989,429,2.112,454,2.6,457,2.359,520,2.438,529,1.591,563,2.639,564,3.356,565,4.948,568,3.019,569,3.36,570,3.844,571,3.844,572,4.228,573,4.033,574,3.666,575,2.754,576,2.754,577,2.754,578,3.356,579,3.019,580,3.289,581,3.019,582,3.019,583,3.019,584,3.844,585,3.019,586,3.019,587,2.535,588,3.019,589,3.019,590,3.019,591,3.566,592,3.019,593,2.754,594,3.019,595,3.019,596,3.019,597,3.019,598,3.566,599,3.566,600,3.019,601,3.019,602,3.019,603,3.818]],["title/interfaces/ITryRequest.html",[0,0.183,1352,3.333]],["body/interfaces/ITryRequest.html",[0,0.277,2,1.497,3,0.182,4,0.146,5,0.164,7,0.317,8,1.161,9,1.355,12,2.37,19,0.322,20,0.011,27,0.182,28,0.008,37,0.008,51,1.82,133,0.01,403,3.579,1352,5.955,1353,5.575,1354,5.575,1355,7.203]],["title/interfaces/IUser.html",[0,0.183,606,2.706]],["body/interfaces/IUser.html",[0,0.228,2,0.867,3,0.105,4,0.084,5,0.095,7,0.183,8,1.032,9,1.098,19,0.339,20,0.012,23,0.792,25,0.252,27,0.201,28,0.005,37,0.005,50,2.372,51,1.671,53,0.842,73,2.424,116,0.467,132,1.132,133,0.007,134,0.35,173,1.356,187,0.728,200,0.728,212,1.926,262,1.397,265,1.497,275,1.952,284,1.728,293,1.558,328,1.926,342,3.429,343,1.664,349,2.379,351,1.497,352,3.408,354,3.749,364,2.357,409,3.205,416,3.599,423,2.37,429,1.497,444,2.251,445,2.251,446,4.298,454,2.4,457,1.87,465,2.379,467,1.401,483,2.379,520,1.728,529,1.127,536,1.871,568,2.14,569,3.572,570,4.246,571,4.246,572,3.548,573,3.384,574,2.906,575,1.952,577,1.952,579,2.14,580,2.759,581,2.14,582,2.14,583,2.14,584,3.548,585,2.14,586,2.14,587,1.797,588,2.14,589,2.14,590,2.14,592,4.085,593,1.952,594,2.14,595,2.14,596,2.14,597,2.14,600,3.866,601,2.14,604,1.871,605,2.379,606,4.297,607,5.747,608,5.747,613,3.387,619,3.599,620,4.889,621,2.379,622,3.599,623,2.706,624,2.528,625,3.205,626,2.706,627,2.706,628,2.706,629,2.706,630,2.706,631,2.706,632,2.706,633,2.706,634,2.706,635,3.853,636,2.706,637,2.706,638,2.706,639,2.251,640,2.706,641,2.706,642,2.706,643,2.706,644,2.528,645,2.706,646,2.528,647,2.706,648,2.706,649,2.706,650,2.706,651,2.706,652,3.599,653,2.706,654,2.706,655,2.528,656,3.599,657,2.528,658,2.379,659,2.706,660,2.706,661,3.853,662,3.853,663,2.528,664,2.528,665,2.706,666,2.041,667,2.706]],["title/injectables/JwtStrategy.html",[370,2.875,389,1.209]],["body/injectables/JwtStrategy.html",[3,0.151,4,0.121,5,0.136,7,0.263,9,1.102,19,0.27,20,0.011,25,0.28,26,0.385,27,0.151,28,0.007,37,0.007,53,1.527,116,0.511,132,1.138,133,0.009,134,0.263,145,2.809,148,1.282,150,1.527,166,5.384,180,1.942,187,1.523,200,1.32,203,1.206,204,1.572,205,1.572,247,3.064,262,1.206,265,2.143,319,1.715,320,1.984,328,2.311,340,3.224,345,4.082,346,3.875,351,2.714,358,5.384,361,2.539,364,1.768,370,4.583,373,5.571,385,4.625,389,1.927,390,2.474,413,3.875,419,3.875,545,2.714,558,2.383,559,2.679,1246,4.625,1356,4.625,1357,5.855,1358,5.276,1359,6.68,1360,5.66,1361,5.276,1362,6.68,1363,4.625,1364,5.276,1365,4.625,1366,4.196,1367,4.625,1368,5.276,1369,4.625,1370,4.625,1371,5.276,1372,5.276,1373,5.276,1374,5.276,1375,5.276,1376,5.276,1377,5.276,1378,5.276,1379,5.276]],["title/injectables/LocalStrategy.html",[371,2.875,389,1.209]],["body/injectables/LocalStrategy.html",[3,0.152,4,0.121,5,0.136,7,0.264,8,1.038,9,1.104,19,0.312,20,0.011,23,0.76,25,0.266,26,0.386,27,0.152,28,0.007,37,0.007,116,0.512,132,1.142,133,0.009,134,0.264,145,2.226,148,1.48,150,1.53,166,3.888,180,1.948,187,1.323,200,1.323,203,1.21,212,2.563,328,2.315,340,3.234,347,4.721,348,3.888,352,3.361,354,4.025,371,4.592,389,1.931,390,2.483,413,3.888,436,2.545,437,2.313,521,2.483,750,3.418,1149,3.888,1357,5.868,1363,4.64,1365,4.64,1366,4.209,1369,4.64,1370,4.64,1380,4.64,1381,7.715,1382,7.715,1383,5.293,1384,6.694,1385,6.694,1386,5.293,1387,5.293,1388,4.64,1389,5.293,1390,5.293,1391,5.293,1392,5.293,1393,5.293]],["title/classes/LoginCredsDto.html",[134,0.209,332,3.079]],["body/classes/LoginCredsDto.html",[3,0.146,4,0.117,5,0.131,7,0.253,8,1.012,11,0.95,16,1.345,19,0.292,20,0.012,23,0.692,24,1.164,25,0.282,26,0.371,27,0.187,28,0.007,37,0.006,53,1.164,133,0.008,134,0.359,136,1.759,141,1.815,145,2.141,148,1.253,151,2.95,173,1.873,187,1.006,191,3.99,196,2.217,204,1.198,205,1.198,209,3.111,212,1.605,262,1.648,309,2.697,319,1.307,320,1.512,326,3.492,327,4.048,328,1.605,329,4.048,331,5.724,332,5.295,335,6.666,336,4.216,337,3.287,338,4.048,339,4.048,340,3.111,341,3.993,342,3.381,343,2.299,344,4.048,345,3.459,346,3.739,347,4.187,348,3.739,349,4.216,350,4.462,351,3.367,352,3.313,353,4.462,354,3.708,355,4.462,356,4.462,357,4.462,358,3.739,359,4.462,360,4.462,361,1.935,362,4.048,363,4.048,364,1.705,365,4.462,366,2.697,1394,6.53,1395,5.091,1396,5.091,1397,5.091,1398,5.091]],["title/classes/PaginationParams.html",[134,0.209,1013,2.322]],["body/classes/PaginationParams.html",[0,0.273,3,0.137,4,0.11,5,0.123,7,0.238,8,0.972,9,1.305,11,0.696,12,1.38,13,1.421,14,1.748,16,1.264,17,1.126,18,1.312,19,0.301,20,0.012,21,1.239,22,2.038,23,0.676,24,1.434,25,0.266,26,0.349,27,0.2,28,0.006,37,0.006,40,1.126,133,0.008,134,0.348,136,1.653,148,1.342,151,3.161,152,5.907,173,1.761,188,1.944,343,2.161,351,3.418,471,4.064,511,2.924,522,3.059,593,3.707,741,4.276,757,3.805,805,2.779,826,2.779,863,2.924,986,5.455,1003,5.14,1013,3.475,1035,3.805,1039,2.924,1045,4.607,1112,5.907,1114,3.514,1257,3.805,1336,3.514,1337,6.51,1338,4.194,1339,4.988,1340,4.988,1341,4.988,1342,5.498,1343,6.51,1344,5.498,1345,5.498,1346,5.498,1347,6.134,1348,4.194,1349,4.194,1350,4.194,1351,4.194,1399,4.785,1400,4.785,1401,6.273,1402,6.273,1403,4.785,1404,4.785]],["title/interfaces/ParamOption.html",[0,0.183,508,2.561]],["body/interfaces/ParamOption.html",[0,0.316,2,0.941,3,0.114,4,0.092,5,0.103,7,0.199,8,0.861,9,1.332,10,1.026,11,0.581,14,0.941,15,1.057,17,0.941,18,1.251,19,0.33,20,0.012,21,1.098,23,0.742,25,0.192,26,0.292,27,0.231,28,0.005,36,1.27,37,0.005,51,1.865,116,0.425,133,0.007,137,1.742,141,1.426,185,2.183,187,1.364,204,1.707,205,1.707,262,1.578,287,1.95,297,2.118,318,2.031,319,1.861,320,2.05,361,2.623,457,1.426,467,1.52,475,2.322,476,2.215,487,1.95,488,2.215,489,2.03,490,2.118,491,2.118,492,2.943,493,2.821,494,3.812,495,4.734,496,2.743,497,2.743,498,2.582,499,2.582,500,2.03,501,2.582,502,2.582,503,2.582,504,2.582,505,3.587,506,2.03,507,1.95,508,3.902,509,4.734,510,4.381,511,4.217,512,4.734,513,4.734,514,3.395,515,2.322,516,1.95,517,2.118,518,2.443,519,2.743,520,1.875,521,3.739,522,1.95,523,2.582,524,2.743,525,2.743,526,2.118,527,2.118,528,2.118,529,2.402,530,1.625,531,2.743,532,1.95,533,2.743,534,2.118,535,2.582,536,2.03,537,2.582,538,2.743,539,2.743,540,2.743,541,2.743,542,2.743,543,3.812,544,2.743,545,2.594,546,2.215,547,2.743,548,2.42,549,2.582,550,1.95,551,2.582,552,2.582,553,2.582,554,2.03,555,2.943,556,2.118,557,2.743,558,1.806,559,2.03,560,2.743,561,2.743,562,2.743]],["title/interfaces/ParamsOptions.html",[0,0.183,514,2.561]],["body/interfaces/ParamsOptions.html",[0,0.323,2,1.003,3,0.122,4,0.098,5,0.11,10,1.094,11,0.62,14,1.003,15,1.126,17,1.003,18,1.235,19,0.267,20,0.012,21,1.147,23,0.726,25,0.2,26,0.311,27,0.234,28,0.005,36,1.327,37,0.005,51,1.79,116,0.444,133,0.007,137,2.528,141,1.519,148,0.817,185,2.28,187,1.401,204,1.745,205,1.745,262,1.621,287,2.077,297,2.257,318,2.077,319,1.904,320,2.106,361,2.695,457,1.519,467,1.62,475,2.475,476,2.36,487,2.077,488,2.36,489,2.163,490,2.257,491,2.257,492,3.075,493,2.947,494,3.982,495,3.982,496,2.923,497,2.923,498,2.751,499,2.751,500,2.163,501,2.751,502,2.751,503,2.751,504,2.751,505,3.748,506,2.163,507,2.077,508,4.034,509,2.923,510,2.923,511,2.603,512,2.923,513,2.923,514,4.034,515,3.371,516,2.077,517,2.257,518,2.603,519,2.923,520,1.998,521,3.791,522,2.077,523,2.751,524,2.923,525,2.923,526,2.257,527,2.257,528,2.257,529,2.439,530,1.731,531,2.923,532,2.077,533,2.923,534,2.257,535,2.751,536,2.163,537,2.751,538,2.923,539,2.923,540,2.923,541,2.923,542,2.923,543,3.982,544,2.923,545,2.682,546,2.36,547,2.923,548,2.528,549,2.751,550,2.077,551,2.751,552,2.751,553,2.751,554,2.163,555,3.075,556,2.257,557,2.923,558,1.925,559,2.163,560,2.923,561,2.923,562,2.923,1405,4.261,1406,4.261]],["title/injectables/PersistedCronService.html",[389,1.209,671,2.875]],["body/injectables/PersistedCronService.html",[3,0.146,4,0.117,5,0.131,7,0.253,8,1.012,9,0.84,19,0.264,20,0.011,25,0.225,26,0.371,27,0.146,28,0.007,37,0.006,116,0.389,133,0.008,134,0.253,145,2.141,148,1.383,150,1.164,180,2.653,187,1.006,188,2.068,193,5.193,200,1.29,203,1.164,208,3.111,234,2.82,249,3.492,262,1.493,293,1.512,324,5.193,328,2.273,364,1.705,389,1.883,390,2.387,436,1.935,437,1.759,639,4.405,671,4.479,676,5.586,678,7.053,686,6.047,702,6.047,709,5.724,710,5.193,750,3.287,782,5.724,1001,5.217,1098,4.796,1250,6.319,1251,4.462,1407,6.666,1408,4.462,1409,6.53,1410,5.733,1411,6.53,1412,6.53,1413,6.53,1414,6.53,1415,8.046,1416,5.091,1417,6.53,1418,5.091,1419,6.53,1420,5.091,1421,5.091,1422,5.091,1423,4.048,1424,5.091,1425,5.091,1426,5.091,1427,5.091,1428,5.091,1429,5.091,1430,5.091,1431,5.091,1432,5.091,1433,5.091,1434,5.091]],["title/interfaces/PostType.html",[0,0.183,82,1.404]],["body/interfaces/PostType.html",[0,0.371,1,2.502,2,0.871,3,0.106,4,0.085,5,0.095,6,1.24,7,0.184,8,0.816,10,0.95,11,0.765,12,1.766,13,1.563,14,0.871,15,0.978,16,1.391,17,0.871,18,1.349,19,0.27,20,0.011,21,1.04,22,1.99,23,0.802,24,1.4,25,0.128,26,0.27,27,0.245,28,0.007,29,1.71,30,1.71,31,1.71,32,1.71,33,1.71,34,1.71,35,1.71,36,1.525,37,0.007,38,2.686,39,1.32,40,1.773,41,1.32,42,1.32,43,1.32,44,1.32,45,1.32,46,1.32,47,1.24,48,1.32,49,1.32,50,1.167,51,1.897,52,1.24,53,0.846,54,1.876,55,1.32,56,2.052,57,1.32,58,1.32,59,1.32,60,1.32,61,1.32,62,1.32,63,1.32,64,1.32,65,1.32,66,1.32,67,1.32,68,2.183,69,1.876,70,1.32,71,1.32,72,1.32,73,1.931,74,1.32,75,1.32,76,1.876,77,1.32,78,1.32,79,1.32,80,1.32,81,1.32,82,2.579,83,2.378,84,1.763,85,1.763,86,1.32,87,1.32,88,1.32,89,1.32,90,1.32,91,1.32,92,1.32,93,1.32,94,1.32,95,1.876,96,1.32,97,1.32,98,1.32,99,1.24,100,1.32,101,1.32,102,2.235,103,1.32,104,1.32,105,1.32,106,1.32,107,1.32,108,1.32,109,1.32,110,1.32,111,1.167,112,1.32,113,1.32,114,1.32,115,1.32,116,0.283,117,1.32,118,1.32,119,1.32,120,1.32,121,1.32,122,1.24,123,2.052,124,1.32,125,1.32,126,1.32,127,1.763,128,1.763,129,1.32,130,1.32,131,1.32,132,0.799,133,0.007]],["title/interfaces/PostedByUser.html",[0,0.183,84,1.404]],["body/interfaces/PostedByUser.html",[0,0.369,1,2.481,2,0.844,3,0.103,4,0.082,5,0.092,6,1.201,7,0.178,8,0.797,10,0.92,11,0.748,12,1.735,13,1.528,14,0.844,15,0.947,16,1.359,17,0.844,18,1.346,19,0.309,20,0.011,21,1.016,22,1.955,23,0.803,24,1.375,25,0.124,26,0.262,27,0.244,28,0.007,29,1.672,30,1.672,31,1.672,32,1.672,33,1.672,34,1.672,35,1.672,36,1.503,37,0.007,38,2.661,39,1.278,40,1.756,41,1.278,42,1.278,43,1.278,44,1.278,45,1.278,46,1.278,47,1.201,48,1.278,49,1.278,50,1.13,51,1.925,52,1.201,53,0.82,54,2.482,55,1.278,56,2.427,57,1.278,58,1.278,59,1.278,60,1.278,61,1.278,62,1.278,63,1.278,64,1.278,65,1.278,66,1.278,67,1.278,68,2.583,69,2.482,70,1.278,71,1.278,72,1.278,73,2.284,74,1.278,75,1.278,76,2.482,77,1.278,78,1.278,79,1.278,80,1.278,81,1.278,82,2.202,83,1.278,84,2.016,85,1.723,86,1.278,87,1.278,88,1.278,89,1.278,90,1.278,91,1.278,92,1.278,93,1.278,94,1.278,95,1.834,96,1.278,97,1.278,98,1.278,99,1.201,100,1.278,101,1.278,102,2.202,103,1.278,104,1.278,105,1.278,106,1.278,107,1.278,108,1.278,109,1.278,110,1.278,111,1.13,112,1.278,113,1.278,114,1.278,115,1.278,116,0.274,117,1.278,118,1.278,119,1.278,120,1.278,121,1.278,122,1.201,123,2.016,124,1.278,125,1.278,126,1.278,127,1.723,128,1.723,129,1.278,130,1.278,131,1.278,132,0.773,133,0.007]],["title/classes/QueryFailedFilter.html",[134,0.209,1435,3.333]],["body/classes/QueryFailedFilter.html",[3,0.133,4,0.107,5,0.12,7,0.232,9,0.767,11,0.895,13,1.829,16,1.229,19,0.279,20,0.012,24,1.064,25,0.238,26,0.34,27,0.133,28,0.006,37,0.006,40,1.095,116,0.528,133,0.008,134,0.232,136,1.608,140,3.004,141,1.659,143,4.224,144,3.417,148,0.892,150,1.064,180,1.712,181,3.191,191,2.843,200,1.217,203,1.064,204,1.095,205,1.095,243,2.464,262,1.747,284,2.888,293,1.829,318,1.303,319,1.194,320,1.382,361,2.341,454,2.419,460,3.417,479,3.954,480,3.954,545,2.502,546,4.233,558,2.102,559,2.362,580,2.782,652,4.735,759,3.004,1410,4.897,1435,4.897,1436,5.397,1437,3.7,1438,6.05,1439,4.078,1440,7.641,1441,7.641,1442,7.641,1443,7.641,1444,7.641,1445,7.641,1446,7.641,1447,6.05,1448,6.439,1449,4.652,1450,6.05,1451,4.078,1452,4.078,1453,4.078,1454,4.078,1455,4.078,1456,6.902,1457,6.158,1458,6.158,1459,3.7,1460,4.078]],["title/classes/R.html",[134,0.209,812,2.561]],["body/classes/R.html",[3,0.066,4,0.053,5,0.059,7,0.114,9,0.755,10,0.589,11,0.333,14,0.54,15,0.606,17,0.54,18,1.029,19,0.308,20,0.012,21,0.904,23,0.674,24,0.524,25,0.197,26,0.167,27,0.163,28,0.003,37,0.003,40,1.344,116,0.548,133,0.005,134,0.331,136,0.792,137,2.276,141,1.306,148,0.878,150,1.194,180,0.844,185,2.511,187,1.531,188,2.123,200,0.724,203,1.046,204,0.54,205,0.54,212,2.499,220,1.075,242,2.513,243,1.941,262,1.668,265,1.859,287,1.786,293,0.681,318,0.642,319,0.589,341,3.373,366,2.423,403,1.993,436,0.872,437,1.266,450,3.237,467,2.43,479,1.718,480,1.718,487,3.116,489,2.323,490,1.941,491,1.941,492,1.215,493,2.9,500,1.86,506,1.86,507,1.786,516,2.547,517,2.768,521,3.564,522,1.786,526,1.215,527,2.423,528,1.215,529,2.031,530,1.488,548,2.488,550,2.785,554,3.705,555,3.718,556,3.226,580,1.655,796,1.401,797,3.373,798,1.481,799,2.239,801,1.215,803,1.573,805,1.332,806,2.954,807,1.401,808,1.401,809,1.401,810,1.401,811,2.513,812,2.239,813,4.177,814,3.584,815,3.918,816,2.513,817,2.513,818,2.513,819,4.554,820,1.573,821,1.573,822,1.573,823,1.573,824,2.513,825,1.573,826,3.537,827,2.513,828,1.573,829,2.513,830,2.365,831,1.573,832,2.128,833,1.573,834,1.573,835,1.573,836,1.573,837,1.941,838,1.573,839,2.513,840,1.573,841,1.573,842,2.513,843,1.573,844,1.573,845,1.573,846,1.573,847,1.573,848,1.573,849,1.573,850,2.513,851,1.573,852,3.138,853,2.795,854,1.573,855,1.332,856,1.573,857,1.573,858,1.573,859,3.138,860,2.513,861,1.573,862,1.481,863,1.401,864,1.573,865,1.573,866,1.401,867,1.573,868,1.573,869,2.513,870,1.573,871,1.573,872,2.513,873,1.573,874,1.573,875,2.513,876,1.573,877,1.573,878,1.573,879,1.573,880,1.573,881,1.573,882,1.573,883,1.573,884,2.513,885,1.573,886,2.365,887,1.481,888,2.239,889,2.239,890,1.573,891,3.138,892,1.573,893,1.401,894,1.573,895,1.573,896,4.385,897,3.138,898,2.513,899,1.573,900,1.573,901,1.573,902,1.573,903,1.573,904,1.573,905,4.385,906,1.573,907,1.481,908,1.573,909,1.573,910,1.573,911,1.573,912,1.573,913,1.573,914,1.573,915,3.138,916,1.573,917,1.573,918,1.573,919,1.573,920,1.573,921,1.573,922,2.513,923,1.573,924,1.573,925,1.573,926,2.513,927,1.573,928,1.573,929,1.573,930,2.513,931,1.573,932,1.573,933,2.513,934,3.138,935,1.573,936,1.573,937,3.138,938,1.573,939,1.573,940,1.573,941,2.513,942,1.573,943,1.573,944,2.513,945,1.573,946,1.573,947,2.513,948,1.573,949,1.573,950,1.573,951,2.513,952,1.573,953,1.573,954,1.573,955,1.573,956,1.573,957,1.573,958,1.573,959,1.573,960,1.573,961,1.573,962,1.573,963,1.573,964,1.573,965,1.573,966,1.573,967,1.573,968,1.573,969,1.573,970,1.573,971,2.513,972,1.573,973,2.513,974,1.573,975,1.573,976,1.573,977,1.573,978,1.573,979,1.573,980,1.573,981,2.513,982,1.573,983,1.573,1461,3.663,1462,2.293,1463,2.293,1464,2.293,1465,2.293,1466,2.293,1467,2.293]],["title/guards/RequestGuard.html",[1468,3.079,1469,3.333]],["body/guards/RequestGuard.html",[3,0.152,4,0.121,5,0.136,7,0.264,9,1.104,19,0.271,20,0.012,23,0.609,25,0.231,26,0.386,27,0.152,28,0.007,37,0.007,51,1.53,116,0.512,133,0.009,134,0.264,148,1.284,150,1.53,185,2.079,187,1.451,191,4.863,200,1.323,203,1.53,204,1.246,205,1.246,262,1.678,265,2.151,293,1.572,309,3.546,318,1.483,319,1.359,389,1.931,403,2.306,437,2.537,463,4.917,477,3.418,515,3.074,765,2.804,1261,4.981,1264,4.322,1265,4.486,1267,3.074,1468,3.888,1469,5.323,1470,4.209,1471,4.64,1472,6.694,1473,6.975,1474,6.694,1475,5.293,1476,5.868,1477,4.64,1478,5.293,1479,5.293,1480,7.342,1481,5.293,1482,5.293,1483,5.293,1484,5.293,1485,5.293,1486,5.293,1487,6.694,1488,3.888,1489,5.293,1490,5.293]],["title/interfaces/RescueLists.html",[0,0.183,122,1.404]],["body/interfaces/RescueLists.html",[0,0.371,1,2.507,2,0.878,3,0.107,4,0.085,5,0.096,6,1.25,7,0.186,8,0.82,10,0.958,11,0.77,12,1.774,13,1.572,14,0.878,15,0.986,16,1.399,17,0.878,18,1.346,19,0.249,20,0.011,21,1.046,22,1.999,23,0.801,24,1.406,25,0.129,26,0.272,27,0.245,28,0.007,29,1.72,30,1.72,31,1.72,32,1.72,33,1.72,34,1.72,35,1.72,36,1.53,37,0.007,38,2.692,39,1.331,40,1.777,41,1.331,42,1.331,43,1.331,44,1.331,45,1.331,46,1.331,47,1.25,48,1.331,49,1.331,50,1.177,51,1.899,52,1.25,53,0.853,54,1.887,55,1.331,56,2.061,57,1.331,58,1.331,59,1.331,60,1.331,61,1.331,62,1.331,63,1.331,64,1.331,65,1.331,66,1.331,67,1.331,68,2.193,69,1.887,70,1.331,71,1.331,72,1.331,73,1.94,74,1.331,75,1.331,76,1.887,77,1.331,78,1.331,79,1.331,80,1.331,81,1.331,82,2.243,83,1.331,84,1.774,85,1.774,86,1.331,87,1.331,88,1.331,89,1.331,90,1.331,91,1.331,92,1.331,93,1.331,94,1.331,95,1.887,96,1.331,97,1.331,98,1.331,99,1.25,100,1.331,101,1.331,102,2.629,103,1.331,104,1.331,105,1.331,106,1.331,107,1.331,108,1.331,109,1.331,110,1.331,111,1.177,112,1.331,113,1.331,114,1.331,115,1.331,116,0.285,117,1.331,118,1.331,119,1.331,120,1.331,121,1.331,122,1.774,123,2.061,124,1.331,125,1.331,126,1.331,127,1.774,128,1.774,129,1.331,130,1.331,131,1.331,132,0.805,133,0.007]],["title/interfaces/Rescues.html",[0,0.183,102,1.404]],["body/interfaces/Rescues.html",[0,0.367,1,2.444,2,0.798,3,0.097,4,0.078,5,0.087,6,1.136,7,0.169,8,0.766,10,0.87,11,0.718,12,1.681,13,1.468,14,0.798,15,0.896,16,1.305,17,0.798,18,1.348,19,0.335,20,0.011,21,0.976,22,1.894,23,0.805,24,1.333,25,0.117,26,0.247,27,0.243,28,0.006,29,1.606,30,1.606,31,1.606,32,1.606,33,1.606,34,1.606,35,1.606,36,1.464,37,0.006,38,2.616,39,1.209,40,1.727,41,1.209,42,1.209,43,1.209,44,1.209,45,1.209,46,1.209,47,1.136,48,1.209,49,1.209,50,1.069,51,1.871,52,1.136,53,0.775,54,1.762,55,1.209,56,1.953,57,1.209,58,1.209,59,1.209,60,1.209,61,1.209,62,1.209,63,1.209,64,1.209,65,1.209,66,1.209,67,1.209,68,2.078,69,1.762,70,1.209,71,1.209,72,1.209,73,1.838,74,1.209,75,1.209,76,1.762,77,1.209,78,1.209,79,1.209,80,1.209,81,1.209,82,2.146,83,1.209,84,1.655,85,1.655,86,1.209,87,1.209,88,1.209,89,1.209,90,1.209,91,1.209,92,1.209,93,1.209,94,1.209,95,1.762,96,1.209,97,1.209,98,1.209,99,1.136,100,1.209,101,1.209,102,2.281,103,2.284,104,2.284,105,2.284,106,2.284,107,2.284,108,2.284,109,2.284,110,2.284,111,1.838,112,2.284,113,2.284,114,2.284,115,1.209,116,0.259,117,1.209,118,1.209,119,1.209,120,2.284,121,2.284,122,1.136,123,1.953,124,1.209,125,1.209,126,1.209,127,1.655,128,1.655,129,1.209,130,1.209,131,1.209,132,0.731,133,0.006,1062,3.019]],["title/interfaces/Response.html",[0,0.183,40,0.986]],["body/interfaces/Response.html",[0,0.26,2,1.404,3,0.171,4,0.137,5,0.154,7,0.297,8,1.117,11,1.198,19,0.242,20,0.011,21,1.531,25,0.267,26,0.435,27,0.206,28,0.008,37,0.008,40,1.696,133,0.009,134,0.297,187,1.179,204,1.404,205,1.404,293,1.772,318,2.019,319,1.532,320,1.772,361,2.268,389,2.079,545,2.424,1167,4.745,1259,4.383,1261,4.654,1262,5.295,1264,3.853,1265,4.405,1266,5.295,1267,3.466,1268,4.093,1269,4.093,1491,4.745,1492,4.383,1493,5.23]],["title/guards/ResponseGuard.html",[1468,3.079,1494,3.333]],["body/guards/ResponseGuard.html",[3,0.133,4,0.106,5,0.119,7,0.231,9,1.013,11,1.11,12,1.986,13,2.178,19,0.249,20,0.012,23,0.559,25,0.212,26,0.338,27,0.133,28,0.006,36,1.059,37,0.006,40,1.796,51,1.404,116,0.47,133,0.008,134,0.231,140,4.447,143,5.379,148,1.178,150,1.404,185,2.881,187,1.549,200,1.213,203,1.404,204,1.445,205,1.445,262,1.059,265,2.798,293,1.376,309,3.252,318,1.72,319,1.576,320,1.824,361,2.788,389,1.771,403,3,463,4.51,521,2.172,529,1.417,545,2.798,558,2.092,559,2.352,759,2.991,765,2.454,830,3.964,862,2.991,1261,4.735,1264,3.964,1265,4.208,1267,2.69,1274,4.06,1355,6.688,1459,5.477,1470,3.683,1473,6.688,1476,5.382,1477,4.06,1488,3.402,1494,4.883,1495,4.06,1496,6.14,1497,6.14,1498,4.632,1499,4.632,1500,4.632,1501,6.14,1502,4.632,1503,6.887,1504,4.632,1505,4.632,1506,4.632,1507,4.632,1508,4.632,1509,4.632,1510,4.632,1511,6.14,1512,4.632,1513,4.632,1514,6.14,1515,4.632,1516,4.632,1517,4.632,1518,4.632,1519,4.632]],["title/interfaces/Result.html",[0,0.183,37,0.005]],["body/interfaces/Result.html",[0,0.37,1,2.485,2,0.849,3,0.103,4,0.083,5,0.093,6,1.209,7,0.18,8,0.801,9,1.088,10,0.926,11,1.015,12,2.094,13,2.073,14,0.849,15,0.954,16,1.844,17,0.849,18,1.343,19,0.294,20,0.011,21,1.303,22,2.268,23,0.802,24,1.595,25,0.124,26,0.263,27,0.244,28,0.007,29,1.68,30,1.68,31,1.68,32,1.68,33,1.68,34,1.68,35,1.68,36,1.508,37,0.008,38,2.666,39,1.287,40,1.76,41,1.287,42,1.287,43,1.287,44,1.287,45,1.287,46,1.287,47,1.209,48,1.287,49,1.287,50,1.138,51,1.889,52,1.209,53,0.825,54,1.843,55,1.287,56,2.023,57,1.287,58,1.287,59,1.287,60,1.287,61,1.287,62,1.287,63,1.287,64,1.287,65,1.287,66,1.287,67,1.287,68,2.153,69,1.843,70,1.287,71,1.287,72,1.287,73,1.904,74,1.287,75,1.287,76,1.843,77,1.287,78,1.287,79,1.287,80,1.287,81,1.287,82,2.209,83,1.287,84,1.732,85,1.732,86,1.287,87,1.287,88,1.287,89,1.287,90,1.287,91,1.287,92,1.287,93,1.287,94,1.287,95,1.843,96,1.287,97,1.287,98,1.287,99,1.209,100,1.287,101,1.287,102,2.209,103,1.287,104,1.287,105,1.287,106,1.287,107,1.287,108,1.287,109,1.287,110,1.287,111,1.138,112,1.287,113,1.287,114,1.287,115,1.287,116,0.276,117,1.287,118,1.287,119,1.287,120,1.287,121,1.287,122,1.209,123,2.023,124,1.287,125,1.287,126,1.287,127,1.732,128,1.732,129,1.287,130,1.287,131,1.287,132,0.779,133,0.007]],["title/classes/SerializeHelper.html",[134,0.209,866,2.561]],["body/classes/SerializeHelper.html",[3,0.068,4,0.055,5,0.061,7,0.119,9,0.623,10,0.611,11,0.346,14,0.561,15,0.629,17,0.561,18,1.043,19,0.303,20,0.012,21,0.471,23,0.659,24,0.545,25,0.201,26,0.174,27,0.167,28,0.003,37,0.003,40,1.37,116,0.543,133,0.005,134,0.335,136,0.823,137,2.044,141,1.346,148,0.724,150,0.863,180,0.877,185,2.286,187,1.543,188,2.169,200,0.746,203,0.863,204,0.561,205,0.561,212,2.481,220,1.117,262,1.685,265,1.906,287,1.841,293,0.708,318,0.667,319,0.611,341,3.43,366,2.485,403,2.044,436,0.906,437,1.305,450,3.281,467,2.466,479,1.771,480,1.771,487,2.838,489,2.382,490,2,491,2,492,1.262,493,2.955,500,1.917,506,1.917,507,1.841,516,2.603,517,3.083,521,3.593,522,1.841,526,1.262,527,2.485,528,1.262,529,1.633,530,1.534,548,2.535,550,2.838,554,3.417,555,3.28,556,2,580,1.706,796,1.456,797,3.029,798,1.538,799,2.307,801,1.262,803,1.634,805,1.384,806,3.029,807,1.456,808,1.456,809,1.456,810,1.456,811,2.591,812,1.456,813,3.662,814,2.591,815,3.218,816,2.591,817,2.591,818,1.634,819,4.248,820,1.634,821,1.634,822,1.634,823,1.634,824,2.591,825,1.634,826,3.596,827,2.591,828,1.634,829,2.591,830,2.438,831,1.634,832,2.193,833,1.634,834,1.634,835,1.634,836,1.634,837,2,838,1.634,839,2.591,840,1.634,841,1.634,842,2.591,843,1.634,844,1.634,845,1.634,846,1.634,847,1.634,848,1.634,849,1.634,850,2.591,851,1.634,852,3.218,853,2.867,854,1.634,855,1.384,856,1.634,857,1.634,858,1.634,859,3.218,860,2.591,861,1.634,862,1.538,863,1.456,864,1.634,865,1.634,866,2.307,867,2.591,868,3.662,869,2.591,870,1.634,871,1.634,872,2.591,873,1.634,874,2.591,875,2.591,876,1.634,877,1.634,878,1.634,879,1.634,880,1.634,881,1.634,882,1.634,883,1.634,884,2.591,885,1.634,886,2.438,887,1.538,888,2.307,889,2.307,890,1.634,891,3.218,892,1.634,893,1.456,894,1.634,895,1.634,896,4.451,897,3.218,898,2.591,899,1.634,900,1.634,901,1.634,902,1.634,903,1.634,904,1.634,905,4.451,906,1.634,907,1.538,908,1.634,909,1.634,910,1.634,911,1.634,912,1.634,913,1.634,914,1.634,915,3.218,916,1.634,917,1.634,918,1.634,919,1.634,920,1.634,921,1.634,922,2.591,923,1.634,924,1.634,925,1.634,926,2.591,927,1.634,928,1.634,929,1.634,930,2.591,931,1.634,932,1.634,933,2.591,934,3.218,935,1.634,936,1.634,937,3.218,938,1.634,939,1.634,940,1.634,941,2.591,942,1.634,943,1.634,944,2.591,945,1.634,946,1.634,947,2.591,948,1.634,949,1.634,950,1.634,951,2.591,952,1.634,953,1.634,954,1.634,955,1.634,956,1.634,957,1.634,958,1.634,959,1.634,960,1.634,961,1.634,962,1.634,963,1.634,964,1.634,965,1.634,966,1.634,967,1.634,968,1.634,969,1.634,970,1.634,971,2.591,972,1.634,973,2.591,974,1.634,975,1.634,976,1.634,977,1.634,978,1.634,979,1.634,980,1.634,981,2.591,982,1.634,983,1.634,1520,3.776,1521,3.776,1522,2.382,1523,2.382]],["title/classes/Swagger.html",[134,0.209,548,1.826]],["body/classes/Swagger.html",[3,0.064,4,0.051,5,0.058,7,0.111,9,0.931,10,0.575,11,0.326,14,0.527,15,0.591,17,0.527,18,1.052,19,0.32,20,0.012,21,0.442,23,0.576,24,0.512,25,0.195,26,0.163,27,0.162,28,0.003,37,0.003,40,1.418,116,0.571,133,0.005,134,0.328,136,0.773,137,2.624,141,1.281,148,1.082,150,1.29,180,0.824,185,2.667,187,1.524,188,2.093,200,0.71,203,1.29,204,0.527,205,0.527,212,2.545,220,1.05,243,1.903,262,1.658,265,1.829,287,1.752,293,0.665,318,0.627,319,0.575,341,3.337,366,2.385,403,2.458,436,0.851,437,1.242,450,3.397,467,2.406,479,1.685,480,1.685,487,2.751,489,2.286,490,1.903,491,1.903,492,1.186,493,3.214,500,1.824,506,1.824,507,1.752,516,2.937,517,2.729,521,3.545,522,1.752,526,1.186,527,2.385,528,1.186,529,1.577,530,1.46,548,2.867,550,2.751,554,3.447,555,3.191,556,1.903,580,1.623,796,1.368,797,3.889,798,1.445,799,2.196,801,1.186,803,1.536,805,1.3,806,2.906,807,1.368,808,1.368,809,1.368,810,1.368,811,2.465,812,1.368,813,3.535,814,2.465,815,3.088,816,2.465,817,2.465,818,1.536,819,4.658,820,1.536,821,1.536,822,1.536,823,1.536,824,3.535,825,2.465,826,3.943,827,3.535,828,2.465,829,3.088,830,2.32,831,1.536,832,2.087,833,1.536,834,1.536,835,1.536,836,1.536,837,1.903,838,1.536,839,2.465,840,1.536,841,1.536,842,2.465,843,2.465,844,1.536,845,2.465,846,1.536,847,2.465,848,1.536,849,3.088,850,3.871,851,1.536,852,3.088,853,2.751,854,1.536,855,1.3,856,1.536,857,1.536,858,1.536,859,3.088,860,2.465,861,1.536,862,1.445,863,1.368,864,1.536,865,1.536,866,1.368,867,1.536,868,1.536,869,2.465,870,1.536,871,1.536,872,2.465,873,1.536,874,1.536,875,2.465,876,1.536,877,1.536,878,1.536,879,1.536,880,1.536,881,1.536,882,1.536,883,1.536,884,2.465,885,1.536,886,2.32,887,1.445,888,2.196,889,2.196,890,1.536,891,3.088,892,1.536,893,1.368,894,1.536,895,1.536,896,4.342,897,3.088,898,2.465,899,1.536,900,1.536,901,1.536,902,1.536,903,1.536,904,1.536,905,4.342,906,1.536,907,1.445,908,1.536,909,1.536,910,1.536,911,1.536,912,1.536,913,1.536,914,1.536,915,3.088,916,1.536,917,1.536,918,1.536,919,1.536,920,1.536,921,1.536,922,2.465,923,1.536,924,1.536,925,1.536,926,2.465,927,1.536,928,1.536,929,1.536,930,2.465,931,1.536,932,1.536,933,2.465,934,3.088,935,1.536,936,1.536,937,3.088,938,1.536,939,1.536,940,1.536,941,2.465,942,1.536,943,1.536,944,2.465,945,1.536,946,1.536,947,2.465,948,1.536,949,1.536,950,1.536,951,2.465,952,1.536,953,1.536,954,1.536,955,1.536,956,1.536,957,1.536,958,1.536,959,1.536,960,1.536,961,1.536,962,1.536,963,1.536,964,1.536,965,1.536,966,1.536,967,1.536,968,1.536,969,1.536,970,1.536,971,2.465,972,1.536,973,2.465,974,1.536,975,1.536,976,1.536,977,1.536,978,1.536,979,1.536,980,1.536,981,2.465,982,1.536,983,1.536,1062,3.148,1524,3.593,1525,3.593,1526,3.593,1527,3.593,1528,2.238,1529,2.238,1530,2.238,1531,2.238,1532,2.238,1533,2.238]],["title/classes/Tag.html",[134,0.209,576,2.22]],["body/classes/Tag.html",[0,0.244,3,0.116,4,0.093,5,0.104,7,0.201,8,1.128,9,1.143,18,0.626,19,0.346,20,0.012,23,0.727,25,0.239,27,0.208,28,0.005,36,0.923,37,0.005,116,0.625,132,1.385,133,0.007,134,0.362,136,1.396,148,1.568,150,1.279,173,1.487,200,1.269,203,1.279,212,2.55,275,2.964,284,1.894,293,1.907,328,2.185,342,2.624,343,1.825,354,1.969,403,2.437,423,3.691,426,4.716,427,4.404,428,4.11,429,2.816,430,3.839,431,4.716,432,4.45,433,4.11,436,2.635,437,2.395,438,2.967,441,2.468,444,2.468,445,3.419,446,4.235,448,3.212,449,3.212,450,2.728,451,4.11,453,2.967,454,2.198,457,1.995,520,1.894,529,1.712,563,2.051,564,2.608,565,4.475,568,2.346,569,2.841,570,3.729,571,3.729,572,4.373,573,3.556,574,3.099,575,2.14,576,2.964,577,3.401,578,3.613,579,2.346,580,2.9,581,2.346,582,2.346,583,2.346,584,3.25,585,2.346,586,2.346,587,1.969,588,2.346,589,2.346,590,3.25,591,3.839,592,3.25,593,2.14,594,2.346,595,2.346,596,2.346,597,2.346,598,2.771,599,2.771,600,2.346,601,2.346,602,2.346,603,2.967,1534,4.039,1535,4.039,1536,4.039,1537,5.78,1538,3.541,1539,3.541,1540,3.541,1541,3.541,1542,3.541,1543,3.541,1544,3.541,1545,3.541]],["title/controllers/TagsController.html",[196,1.826,1546,3.079]],["body/controllers/TagsController.html",[3,0.144,4,0.115,5,0.13,7,0.251,9,1.071,11,1.14,16,1.715,18,1.112,19,0.263,20,0.012,24,1.153,25,0.277,26,0.368,27,0.144,28,0.006,37,0.006,116,0.496,132,1.088,133,0.008,134,0.251,141,1.798,148,1.245,150,1.484,151,2.932,173,1.856,187,1.282,196,2.196,198,2.365,200,1.282,203,1.484,204,1.187,205,1.187,206,3.255,207,3.255,208,3.081,209,3.081,212,1.59,262,1.484,328,2.53,336,4.19,337,4.633,338,4.01,339,4.01,340,3.081,364,2.174,366,2.671,429,2.637,530,2.637,532,3.499,534,2.671,563,3.847,576,2.671,578,3.255,602,4.401,750,3.255,765,2.671,984,4.452,1001,3.459,1005,3.255,1011,5.182,1027,3.081,1032,5.161,1033,4.01,1051,4.01,1056,4.01,1057,4.01,1058,4.01,1059,5.161,1061,4.01,1546,4.767,1547,4.42,1548,5.042,1549,5.042,1550,6.49,1551,3.703,1552,4.42,1553,4.19,1554,4.42,1555,5.042,1556,5.042,1557,5.042,1558,4.42,1559,4.42]],["title/modules/TagsModule.html",[215,1.703,230,2.875]],["body/modules/TagsModule.html",[3,0.173,4,0.138,5,0.155,20,0.011,25,0.268,26,0.44,27,0.173,28,0.008,37,0.008,133,0.009,134,0.3,198,3.404,215,3.162,217,3.064,218,3.197,219,3.505,220,2.83,221,3.197,222,4.312,223,4.312,230,5.822,232,4.215,233,3.505,234,3.343,1546,5.717,1553,5.638,1554,5.29,1560,5.29,1561,5.29,1562,5.29,1563,6.035,1564,6.035]],["title/injectables/TagsService.html",[389,1.209,1553,2.706]],["body/injectables/TagsService.html",[3,0.119,4,0.095,5,0.107,7,0.207,9,1.326,11,0.604,18,1.177,19,0.326,20,0.011,21,1.127,23,0.519,25,0.242,26,0.303,27,0.119,28,0.005,37,0.01,116,0.628,132,1.231,133,0.007,134,0.207,145,1.747,148,1.561,150,1.838,161,3.642,180,1.529,187,1.607,200,1.127,203,1.838,262,0.95,328,2.701,351,1.688,352,2.485,364,1.392,381,3.304,389,1.646,390,1.949,413,3.052,429,2.647,436,1.579,437,1.436,454,1.632,457,2.034,466,3.914,529,1.746,530,2.85,532,2.782,563,3.857,576,3.716,587,2.026,604,2.897,801,3.023,837,2.201,855,3.314,993,4.47,994,3.914,995,3.914,1005,2.683,1011,4.207,1013,3.61,1017,2.85,1022,2.85,1023,3.052,1027,2.539,1028,3.052,1086,5.635,1089,4.537,1090,3.914,1091,4.191,1092,3.304,1093,5.578,1096,5.847,1098,5.4,1099,5.182,1100,3.304,1102,2.85,1104,3.304,1106,3.052,1109,3.304,1328,5.001,1537,5.82,1551,3.052,1552,3.642,1553,3.684,1565,3.642,1566,4.155,1567,4.155,1568,3.642,1569,3.642,1570,3.642,1571,3.642,1572,3.642,1573,3.642,1574,3.642,1575,3.642,1576,4.155,1577,3.642,1578,4.155,1579,4.155,1580,4.155,1581,4.155,1582,4.155]],["title/injectables/TimeoutInterceptor.html",[389,1.209,1583,3.333]],["body/injectables/TimeoutInterceptor.html",[3,0.159,4,0.128,5,0.143,7,0.277,9,0.919,19,0.226,20,0.011,25,0.259,26,0.407,27,0.159,28,0.007,37,0.007,116,0.426,133,0.009,134,0.277,148,1.069,150,1.274,187,1.485,188,2.263,191,4.592,200,1.366,203,1.274,293,1.655,318,2.105,389,1.993,390,2.613,437,2.388,683,7.081,712,4.883,761,4.43,1259,5.077,1260,5.497,1261,5.073,1262,5.771,1264,3.597,1265,4.592,1266,5.077,1267,3.236,1269,3.822,1276,4.883,1488,4.092,1583,5.497,1584,4.883,1585,6.912,1586,6.912,1587,6.912,1588,6.912,1589,6.059,1590,5.571,1591,6.912,1592,5.571,1593,6.912,1594,5.571,1595,5.571,1596,5.571,1597,5.571,1598,5.571,1599,5.571,1600,5.571]],["title/interfaces/TokenPayload.html",[0,0.183,1360,3.079]],["body/interfaces/TokenPayload.html",[0,0.286,2,1.543,3,0.188,4,0.15,5,0.169,7,0.326,8,1.181,19,0.265,20,0.011,23,0.734,27,0.188,28,0.008,37,0.008,133,0.01,352,3.614,436,2.492,1360,5.92,1601,5.747]],["title/injectables/TransformInterceptor.html",[389,1.209,1492,3.079]],["body/injectables/TransformInterceptor.html",[0,0.254,3,0.167,4,0.133,5,0.15,7,0.29,9,0.961,11,1.033,19,0.236,20,0.011,21,1.151,25,0.264,26,0.425,27,0.203,28,0.008,37,0.007,40,1.371,116,0.446,133,0.009,134,0.29,148,1.118,150,1.332,187,1.151,200,1.404,203,1.332,204,1.371,205,1.371,293,1.73,318,2.235,319,1.495,320,1.73,361,2.214,389,2.049,390,2.732,545,2.367,1167,4.632,1259,5.63,1260,4.632,1261,5.152,1262,5.862,1264,4.587,1265,4.684,1266,5.218,1267,3.383,1268,3.996,1269,3.996,1491,4.632,1492,5.218,1493,5.106,1602,5.825]],["title/classes/UpdateTagsDto.html",[134,0.209,602,2.434]],["body/classes/UpdateTagsDto.html",[0,0.291,3,0.151,4,0.121,5,0.136,8,1.036,19,0.329,20,0.011,23,0.702,25,0.266,27,0.228,28,0.007,37,0.007,116,0.608,132,1.443,133,0.009,134,0.396,136,1.826,173,1.945,200,1.044,212,2.108,275,2.799,284,2.478,293,1.986,342,3.136,343,2.387,423,3.021,429,2.147,454,2.627,457,2.384,520,2.478,529,1.617,563,2.683,564,3.412,565,4.736,568,3.069,569,3.395,570,3.884,571,3.884,572,4.261,573,4.064,574,3.704,575,2.799,576,2.799,577,2.799,578,3.412,579,3.069,580,3.314,581,3.069,582,3.069,583,3.069,584,3.884,585,3.069,586,3.069,587,2.577,588,3.069,589,3.069,590,3.069,591,3.625,592,3.069,593,2.799,594,3.069,595,3.069,596,3.069,597,3.069,598,3.625,599,3.625,600,3.069,601,3.069,602,3.884,603,3.882]],["title/classes/UpdateUserDto.html",[134,0.209,666,2.322]],["body/classes/UpdateUserDto.html",[0,0.238,3,0.112,4,0.089,5,0.101,8,0.847,19,0.329,20,0.012,23,0.781,25,0.257,27,0.206,28,0.005,37,0.005,50,2.154,51,1.562,53,0.893,73,2.267,116,0.482,132,1.179,133,0.007,134,0.358,136,1.35,173,1.437,187,0.772,200,0.772,212,1.988,262,1.442,265,1.587,275,2.069,284,1.832,293,1.624,328,1.988,342,3.494,343,1.764,349,2.522,351,1.587,352,3.246,354,3.506,364,2.409,409,3.34,416,3.75,423,2.469,429,1.587,444,2.387,445,2.387,446,4.393,454,2.477,457,1.949,465,2.522,467,1.485,483,2.522,520,1.832,529,1.195,536,1.983,568,2.268,569,3.65,570,4.327,571,4.327,572,3.662,573,3.493,574,3.028,575,2.069,577,2.069,579,2.268,580,2.849,581,2.268,582,2.268,583,2.268,584,3.662,585,2.268,586,2.268,587,1.904,588,2.268,589,2.268,590,2.268,592,4.176,593,2.069,594,2.268,595,2.268,596,2.268,597,2.268,600,3.967,601,2.268,604,1.983,605,2.522,606,4.071,607,5.472,608,5.472,613,3.529,619,3.75,620,5.017,621,2.522,622,3.75,623,2.869,624,2.679,625,3.34,626,2.869,627,2.869,628,2.869,629,2.869,630,2.869,631,2.869,632,2.869,633,2.869,634,2.869,635,4.015,636,2.869,637,2.869,638,2.869,639,2.387,640,2.869,641,2.869,642,2.869,643,2.869,644,2.679,645,2.869,646,2.679,647,2.869,648,2.869,649,2.869,650,2.869,651,2.869,652,3.75,653,2.869,654,2.869,655,2.679,656,3.75,657,2.679,658,2.522,659,2.869,660,2.869,661,4.015,662,4.015,663,2.679,664,2.679,665,2.869,666,3.028,667,2.869]],["title/classes/User.html",[53,0.958,134,0.209]],["body/classes/User.html",[0,0.18,3,0.076,4,0.061,5,0.069,7,0.133,8,0.952,9,1.21,18,0.414,19,0.346,20,0.012,23,0.779,25,0.224,27,0.176,28,0.003,36,0.61,37,0.003,50,2.135,51,1.485,53,0.944,73,2.264,116,0.561,132,1.089,133,0.005,134,0.306,136,0.922,148,1.55,150,1.299,173,0.982,187,0.527,200,0.997,203,1.299,212,2.421,262,1.404,265,1.677,275,2.187,284,1.252,293,1.499,328,2.354,342,3.046,343,1.206,349,2.665,351,1.677,352,3.253,354,3.641,364,2.058,403,1.798,409,2.523,416,3.897,423,3.373,426,3.708,427,3.463,428,3.032,429,2.308,430,2.832,431,3.708,432,3.283,433,3.032,436,2.335,437,2.122,438,1.961,441,1.631,444,2.523,445,3.084,446,4.632,448,2.123,449,2.123,450,2.013,451,3.032,453,1.961,454,1.983,457,1.472,465,2.665,467,1.015,483,1.723,520,1.252,529,1.263,536,2.096,568,1.55,569,3.119,570,4.337,571,4.337,572,3.772,573,2.796,574,2.287,575,1.414,577,2.674,579,1.55,580,2.28,581,1.55,582,1.55,583,1.55,584,2.932,585,1.55,586,1.55,587,1.302,588,1.55,589,1.55,590,2.398,592,4.26,593,1.414,594,1.55,595,1.55,596,1.55,597,1.55,600,3.299,601,1.55,604,1.355,605,1.723,606,3.667,607,5.485,608,5.485,613,2.665,619,2.832,620,4.974,621,2.665,622,3.897,623,3.032,624,2.832,625,3.471,626,1.961,627,1.961,628,1.961,629,1.961,630,3.032,631,3.032,632,3.032,633,3.032,634,3.032,635,4.172,636,3.032,637,3.032,638,3.032,639,2.523,640,3.032,641,3.032,642,3.032,643,3.032,644,2.832,645,3.032,646,2.832,647,3.032,648,3.032,649,3.032,650,3.032,651,3.032,652,3.897,653,3.032,654,3.032,655,2.832,656,2.832,657,1.831,658,1.723,659,3.032,660,1.961,661,3.032,662,3.032,663,1.831,664,1.831,665,1.961,666,1.479,667,1.961,1537,5.138,1538,2.34,1539,2.34,1540,2.34,1541,2.34,1542,2.34,1543,2.34,1544,2.34,1545,2.34,1603,4.128,1604,3.619,1605,2.669,1606,2.669,1607,2.669,1608,2.669,1609,2.669,1610,2.669,1611,2.669,1612,2.669,1613,2.669,1614,2.669,1615,2.669]],["title/interfaces/UserPost.html",[0,0.183,85,1.404]],["body/interfaces/UserPost.html",[0,0.366,1,2.431,2,0.784,3,0.095,4,0.076,5,0.086,6,1.116,7,0.166,8,0.756,10,0.855,11,0.709,12,1.664,13,1.449,14,0.784,15,0.88,16,1.289,17,0.784,18,1.346,19,0.333,20,0.012,21,0.964,22,1.875,23,0.804,24,1.319,25,0.115,26,0.243,27,0.242,28,0.006,29,1.585,30,1.585,31,1.585,32,1.585,33,1.585,34,1.585,35,1.585,36,1.774,37,0.006,38,2.601,39,1.187,40,1.717,41,1.187,42,1.187,43,1.187,44,1.187,45,1.187,46,1.187,47,1.116,48,1.187,49,1.187,50,1.05,51,1.907,52,1.116,53,0.761,54,1.739,55,1.187,56,1.933,57,1.187,58,1.187,59,1.187,60,1.187,61,1.187,62,1.187,63,1.187,64,1.187,65,1.187,66,1.187,67,1.187,68,2.057,69,1.739,70,1.187,71,1.187,72,1.187,73,1.819,74,1.187,75,1.187,76,1.739,77,1.187,78,1.187,79,1.187,80,1.187,81,1.187,82,2.557,83,1.187,84,2.128,85,1.933,86,2.264,87,2.264,88,2.264,89,2.264,90,2.264,91,2.264,92,2.264,93,2.264,94,2.264,95,2.41,96,2.264,97,2.264,98,2.264,99,1.116,100,1.187,101,1.187,102,2.128,103,1.187,104,1.187,105,1.187,106,1.187,107,1.187,108,1.187,109,1.187,110,1.187,111,1.05,112,1.187,113,1.187,114,1.187,115,1.187,116,0.255,117,1.187,118,1.187,119,1.187,120,1.187,121,1.187,122,1.116,123,1.933,124,1.187,125,1.187,126,1.187,127,1.634,128,1.634,129,1.187,130,1.187,131,1.187,132,0.718,133,0.006]],["title/interfaces/UserPosts.html",[0,0.183,99,1.404]],["body/interfaces/UserPosts.html",[0,0.371,1,2.502,2,0.871,3,0.106,4,0.085,5,0.095,6,1.24,7,0.184,8,0.816,10,0.95,11,0.765,12,1.766,13,1.563,14,0.871,15,0.978,16,1.391,17,0.871,18,1.345,19,0.27,20,0.011,21,1.04,22,1.99,23,0.801,24,1.4,25,0.128,26,0.27,27,0.245,28,0.007,29,1.71,30,1.71,31,1.71,32,1.71,33,1.71,34,1.71,35,1.71,36,1.525,37,0.007,38,2.686,39,1.32,40,1.773,41,1.32,42,1.32,43,1.32,44,1.32,45,1.32,46,1.32,47,1.24,48,1.32,49,1.32,50,1.167,51,1.917,52,1.24,53,0.846,54,1.876,55,1.32,56,2.052,57,1.32,58,1.32,59,1.32,60,1.32,61,1.32,62,1.32,63,1.32,64,1.32,65,1.32,66,1.32,67,1.32,68,2.183,69,1.876,70,1.32,71,1.32,72,1.32,73,1.931,74,1.32,75,1.32,76,1.876,77,1.32,78,1.32,79,1.32,80,1.32,81,1.32,82,2.235,83,1.32,84,1.763,85,2.235,86,1.32,87,1.32,88,1.32,89,1.32,90,1.32,91,1.32,92,1.32,93,1.32,94,1.32,95,1.876,96,1.32,97,1.32,98,1.32,99,1.763,100,2.378,101,2.378,102,2.235,103,1.32,104,1.32,105,1.32,106,1.32,107,1.32,108,1.32,109,1.32,110,1.32,111,1.167,112,1.32,113,1.32,114,1.32,115,1.32,116,0.283,117,1.32,118,1.32,119,1.32,120,1.32,121,1.32,122,1.24,123,2.052,124,1.32,125,1.32,126,1.32,127,1.763,128,1.763,129,1.32,130,1.32,131,1.32,132,0.799,133,0.007]],["title/controllers/UsersController.html",[196,1.826,1616,3.079]],["body/controllers/UsersController.html",[3,0.128,4,0.102,5,0.115,7,0.222,9,1.114,11,1.095,16,1.581,18,1.047,19,0.274,20,0.011,23,0.615,24,1.019,25,0.26,26,0.325,27,0.128,28,0.006,37,0.006,53,1.722,116,0.517,132,0.962,133,0.008,134,0.222,141,1.589,148,1.296,150,1.544,151,3.052,173,1.64,180,2.202,187,1.335,188,3.151,196,1.942,198,2.09,200,1.182,203,1.544,204,1.049,205,1.049,206,2.878,207,2.878,208,2.723,209,2.723,212,1.405,262,1.368,284,3.168,328,2.572,336,3.864,337,3.864,345,3.17,352,3.281,364,2.005,366,2.361,403,3.146,429,3.06,467,1.694,530,3.151,532,3.863,534,2.361,604,3.667,621,4.863,666,4,750,2.878,765,2.361,837,4.266,984,4.105,1001,3.058,1005,2.878,1006,5.922,1011,5.007,1018,5.245,1027,2.723,1032,4.759,1033,3.544,1034,6.33,1042,5.922,1051,3.544,1056,3.544,1057,3.544,1058,3.544,1059,3.544,1061,3.544,1090,4.105,1102,3.058,1551,3.274,1558,3.907,1559,3.907,1616,4.395,1617,3.907,1618,5.984,1619,4.457,1620,4.457,1621,4.457,1622,4.457,1623,4.457,1624,4.457,1625,3.907,1626,3.907,1627,4.457,1628,4.457,1629,4.457,1630,4.457]],["title/modules/UsersModule.html",[215,1.703,231,2.706]],["body/modules/UsersModule.html",[3,0.173,4,0.138,5,0.155,20,0.011,25,0.268,26,0.44,27,0.173,28,0.008,37,0.008,133,0.009,134,0.3,198,3.404,215,3.162,217,3.064,218,3.197,219,3.505,220,2.83,221,3.197,222,4.312,223,4.312,231,5.479,232,4.215,233,3.505,234,3.343,345,4.626,1616,5.717,1626,5.29,1631,5.29,1632,5.29,1633,5.29,1634,6.035,1635,6.035]],["title/injectables/UsersService.html",[345,2.22,389,1.209]],["body/injectables/UsersService.html",[3,0.098,4,0.078,5,0.088,7,0.17,9,1.332,11,1.037,18,1.24,19,0.327,20,0.011,21,0.983,23,0.72,25,0.236,26,0.25,27,0.098,28,0.004,37,0.009,53,1.63,116,0.617,132,1.073,133,0.006,134,0.17,145,1.439,148,1.561,150,1.846,165,4.305,187,1.63,200,0.983,203,1.846,204,1.379,205,1.379,262,1.34,297,1.813,319,1.504,320,1.741,328,2.724,345,2.636,351,1.391,352,2.803,354,1.669,361,2.446,364,2.156,381,2.722,389,1.435,390,1.606,409,3.04,418,3.001,419,3.655,429,2.777,436,1.301,437,1.183,454,1.345,455,2.514,457,1.774,466,3.413,529,1.522,530,2.614,532,3.137,545,2.614,558,2.248,563,2.526,587,1.669,604,3.621,655,3.413,656,3.413,657,2.348,658,2.21,666,3.564,765,1.813,801,2.636,837,1.813,855,2.89,993,4.021,994,3.413,995,3.413,1005,2.21,1011,3.784,1013,3.247,1017,2.348,1022,2.348,1023,2.514,1027,3.582,1028,2.514,1086,5.426,1089,5.117,1090,4.414,1091,3.655,1092,2.722,1093,5.117,1096,5.435,1098,5.02,1099,4.661,1100,2.722,1102,4.021,1104,2.722,1106,2.514,1109,2.722,1117,3.001,1118,3.001,1122,3.001,1153,2.722,1162,3.001,1318,3.001,1537,5.538,1551,2.514,1568,3.001,1569,3.001,1570,3.001,1571,3.001,1572,3.001,1573,3.001,1574,3.001,1575,3.001,1577,3.001,1604,4.361,1625,3.001,1636,3.001,1637,3.423,1638,4.976,1639,3.423,1640,4.976,1641,3.423,1642,3.423,1643,3.423,1644,3.423,1645,3.423,1646,3.423,1647,3.423,1648,3.423]],["title/classes/ValidationFailedFilter.html",[134,0.209,1649,3.333]],["body/classes/ValidationFailedFilter.html",[3,0.157,4,0.126,5,0.141,7,0.274,9,0.906,11,0.996,13,2.035,16,1.811,19,0.302,20,0.011,24,1.256,25,0.236,26,0.401,27,0.157,28,0.007,37,0.007,40,1.293,116,0.42,133,0.009,134,0.274,136,1.898,141,1.959,143,4.701,144,4.035,148,1.054,150,1.256,180,2.022,181,3.769,191,3.357,200,1.354,203,1.256,204,1.293,205,1.293,243,2.91,262,1.839,293,2.035,318,1.539,319,1.41,320,1.632,361,2.605,454,2.158,479,2.577,480,2.577,545,2.784,546,4.137,558,2.482,559,2.79,759,3.547,1437,4.369,1438,6.546,1439,6.007,1447,6.546,1448,6.854,1450,6.007,1451,4.816,1452,4.816,1453,4.816,1454,4.816,1455,4.816,1459,4.369,1460,4.816,1649,5.449,1650,6.007,1651,7.819,1652,5.494,1653,5.494,1654,6.852,1655,5.494,1656,5.494]],["title/coverage.html",[1657,4.565]],["body/coverage.html",[0,0.367,1,0.802,5,0.064,6,2.704,19,0.1,20,0.011,28,0.003,29,0.802,30,0.802,31,0.802,32,0.802,33,0.802,34,0.802,35,0.802,37,0.005,40,0.581,47,0.827,53,0.888,56,0.827,82,0.827,84,0.827,85,0.827,99,0.827,102,0.827,122,0.827,123,0.827,127,0.827,128,0.827,133,0.005,134,0.402,135,1.963,137,3.721,138,2.853,139,3.089,180,0.909,185,3.112,186,1.813,196,2.739,197,1.813,199,2.164,221,1.308,235,1.963,236,1.813,263,1.963,326,1.694,327,3.089,332,1.813,341,1.368,342,1.158,345,1.308,347,1.434,370,1.694,371,1.694,389,2.145,391,2.164,423,1.115,424,3.089,425,1.813,441,1.509,487,1.204,488,3.883,507,1.204,508,1.509,514,1.509,516,1.204,548,1.692,550,1.204,563,1.254,564,3.516,565,1.594,569,1.254,576,1.308,577,2.058,602,1.434,604,1.254,605,3.516,606,1.594,613,1.594,646,1.694,666,1.368,670,1.694,671,1.694,675,2.164,680,1.813,741,5.43,796,1.509,797,3.823,798,3.823,807,1.509,808,1.509,809,1.509,810,1.509,812,1.509,832,1.434,866,1.509,888,1.509,984,1.694,985,2.164,989,1.694,997,1.694,1008,2.508,1013,1.368,1039,1.509,1086,1.694,1087,2.164,1123,4.33,1174,3.819,1176,1.963,1180,1.963,1194,1.594,1197,1.694,1198,2.164,1203,1.963,1207,1.813,1208,2.164,1215,1.594,1228,2.164,1244,2.164,1253,1.963,1254,3.089,1255,3.089,1277,2.164,1326,2.164,1336,2.853,1352,1.963,1353,2.164,1354,2.164,1356,2.164,1360,1.813,1380,2.164,1407,2.164,1408,2.164,1410,1.963,1435,1.963,1436,2.164,1437,3.089,1468,2.853,1469,1.963,1471,2.164,1491,3.089,1492,1.813,1494,1.963,1495,2.164,1546,1.813,1547,2.164,1553,1.594,1565,2.164,1583,1.963,1584,2.164,1601,2.164,1616,1.813,1617,2.164,1636,2.164,1649,1.963,1650,2.164,1657,1.963,1658,2.469,1659,2.469,1660,7.438,1661,8.436,1662,8.664,1663,7.72,1664,6.287,1665,5.921,1666,2.469,1667,2.469,1668,5.921,1669,2.469,1670,2.469,1671,3.884,1672,3.884,1673,2.469,1674,2.469,1675,5.445,1676,2.164,1677,2.164,1678,1.963,1679,2.469,1680,3.884,1681,4.802,1682,2.469,1683,2.164,1684,7.111,1685,2.164,1686,2.164,1687,2.164,1688,2.164,1689,2.164,1690,2.164,1691,2.164,1692,2.164,1693,2.164,1694,2.164,1695,2.164,1696,3.089,1697,2.164,1698,2.164,1699,2.164,1700,2.164,1701,3.405,1702,2.164,1703,5.445,1704,2.469,1705,2.164,1706,2.469,1707,2.469,1708,3.819,1709,3.405,1710,3.405,1711,3.819,1712,4.802,1713,2.164,1714,4.802,1715,2.164,1716,2.164,1717,3.405,1718,2.164,1719,2.164,1720,2.469,1721,2.469,1722,3.884,1723,3.884,1724,3.884,1725,2.164,1726,5.19,1727,2.164,1728,2.164,1729,2.164,1730,2.469,1731,2.469,1732,2.469,1733,2.469,1734,2.469,1735,2.469,1736,2.469]],["title/dependencies.html",[218,2.673,1737,3.491]],["body/dependencies.html",[4,0.119,20,0.012,26,0.379,28,0.007,37,0.007,133,0.009,134,0.329,140,3.351,173,1.91,212,1.636,218,2.749,247,3.014,249,3.56,251,4.127,253,4.549,340,3.171,343,2.344,344,6.091,375,4.127,409,3.171,454,3.009,460,3.812,462,4.127,476,2.875,523,3.351,548,2.261,676,3.812,805,3.014,806,3.351,826,3.014,992,4.127,1146,4.549,1175,3.812,1183,4.127,1267,3.014,1268,3.56,1295,4.549,1366,5.785,1367,4.549,1388,4.549,1678,5.257,1738,5.19,1739,5.19,1740,6.611,1741,7.275,1742,5.19,1743,5.19,1744,5.19,1745,5.19,1746,5.19,1747,5.19,1748,6.611,1749,5.19,1750,5.19,1751,6.611,1752,5.19,1753,5.19,1754,5.19,1755,5.19,1756,5.19,1757,6.611,1758,6.611,1759,5.19,1760,5.19,1761,5.19,1762,5.19,1763,5.19,1764,5.19,1765,5.19,1766,5.19,1767,5.19,1768,5.19,1769,5.19,1770,5.19,1771,5.19,1772,5.19,1773,5.19,1774,5.19,1775,5.19,1776,5.19,1777,5.19,1778,5.19,1779,5.19,1780,5.19,1781,5.19,1782,5.19,1783,5.19,1784,5.19,1785,5.19,1786,5.19,1787,5.19,1788,5.19,1789,4.127,1790,5.19,1791,5.19,1792,5.19]],["title/miscellaneous/enumerations.html",[1793,2.027,1794,4.423]],["body/miscellaneous/enumerations.html",[7,0.333,20,0.011,28,0.009,37,0.009,133,0.01,437,2.666,1336,4.917,1339,6.135,1340,6.135,1341,6.135,1793,3.888,1794,5.867,1795,6.694]],["title/miscellaneous/functions.html",[1793,2.027,1796,4.423]],["body/miscellaneous/functions.html",[7,0.23,9,1.416,19,0.317,20,0.011,21,0.914,28,0.006,36,1.057,37,0.006,51,1.573,116,0.656,133,0.008,137,2.672,138,3.397,139,4.878,141,1.649,147,2.986,150,1.962,186,5.055,203,1.897,221,3.646,242,3.173,309,3.883,341,3.398,342,2.877,437,2.763,450,3.356,488,2.562,529,2.106,535,2.986,552,2.986,553,2.986,680,4.505,1008,3.96,1123,3.678,1147,5.473,1148,4.054,1149,4.505,1150,4.054,1175,5.757,1254,3.678,1255,4.878,1271,4.054,1423,5.473,1696,4.878,1705,5.377,1708,3.678,1709,6.424,1710,6.424,1711,3.678,1713,5.377,1715,4.054,1716,5.377,1717,6.424,1718,4.054,1719,5.377,1725,5.377,1726,4.054,1727,5.377,1728,5.377,1729,5.377,1793,2.686,1796,4.054,1797,4.625,1798,4.878,1799,7.626,1800,5.377,1801,5.377,1802,6.882,1803,4.625,1804,4.625,1805,4.625,1806,4.625,1807,4.625,1808,4.625,1809,4.625,1810,4.625,1811,6.134,1812,6.134,1813,4.625,1814,6.134]],["title/index.html",[7,0.174,1815,3.491,1816,3.491]],["body/index.html",[4,0.132,20,0.011,28,0.007,37,0.007,133,0.009,188,2.341,193,4.582,277,4.582,278,5.612,310,6.687,320,1.712,680,6.097,1423,4.582,1589,5.051,1657,4.582,1789,4.582,1817,5.762,1818,5.762,1819,7.057,1820,5.762,1821,5.762,1822,5.762,1823,5.762,1824,5.762,1825,5.762,1826,5.762,1827,5.762,1828,8.407,1829,5.762,1830,5.762,1831,5.762,1832,5.762,1833,7.057,1834,5.762,1835,5.762,1836,5.762,1837,7.057,1838,5.762,1839,5.762,1840,5.762,1841,7.057,1842,7.057,1843,5.762,1844,5.762,1845,5.762,1846,5.762,1847,5.762,1848,5.762,1849,5.762,1850,5.762,1851,5.762,1852,5.762,1853,5.762,1854,5.762,1855,5.762,1856,5.762,1857,5.762,1858,5.762,1859,5.762,1860,5.762,1861,5.762,1862,5.762,1863,5.762,1864,5.762]],["title/modules.html",[217,2.914]],["body/modules.html",[20,0.01,28,0.008,37,0.008,133,0.01,216,4.671,217,3.229,226,4.363,227,4.363,228,4.363,229,4.363,230,4.363,231,4.106,1190,4.363,1789,6.819,1865,8.575,1866,8.575,1867,8.638,1868,6.36,1869,6.36]],["title/overview.html",[1870,5.031]],["body/overview.html",[2,1.206,20,0.011,28,0.007,37,0.007,133,0.008,136,1.77,198,2.403,215,2.081,216,6.335,217,2.601,218,2.714,219,2.976,220,2.403,221,2.714,222,2.838,223,2.838,224,4.491,225,4.491,226,5.833,227,5.621,228,4.96,229,5.621,230,5.529,231,5.29,232,3.808,233,2.976,234,2.838,345,4.341,347,4.2,367,4.491,368,4.491,370,4.96,371,4.96,390,2.403,591,3.515,624,3.515,658,3.308,668,4.491,669,4.491,670,4.96,671,4.96,1190,5.529,1191,4.491,1192,4.491,1193,4.491,1194,5.29,1215,4.668,1222,4.491,1224,4.491,1470,4.074,1553,5.29,1560,4.491,1561,4.491,1562,4.491,1631,4.491,1632,4.491,1633,4.491,1870,4.491,1871,5.123,1872,5.123,1873,5.123]],["title/miscellaneous/typealiases.html",[1793,2.027,1874,5.046]],["body/miscellaneous/typealiases.html",[6,1.988,7,0.295,12,1.711,19,0.291,20,0.011,22,2.335,23,0.54,28,0.01,29,1.928,30,1.928,31,1.928,32,1.928,33,1.928,34,1.928,35,1.928,36,1.357,37,0.008,133,0.009,137,3.13,488,3.287,493,3.648,499,3.831,500,3.013,501,3.831,502,3.831,503,3.831,504,3.831,505,3.831,506,3.013,564,3.831,573,3.98,574,3.98,598,4.929,599,4.929,605,3.831,663,4.929,664,4.929,1062,3.626,1793,3.446,1798,4.719,1875,5.934,1876,7.184,1877,7.184,1878,5.934,1879,7.184,1880,7.184,1881,7.184,1882,5.934]],["title/miscellaneous/variables.html",[1793,2.027,1883,4.423]],["body/miscellaneous/variables.html",[7,0.159,18,0.495,19,0.282,20,0.012,23,0.605,28,0.004,36,0.73,37,0.004,51,1.913,53,0.73,111,1.491,133,0.006,137,2.711,185,1.255,187,0.934,204,1.325,205,1.113,235,2.54,262,0.73,263,3.76,264,2.799,265,2.827,266,2.799,267,2.799,268,2.799,269,2.799,270,2.799,271,2.799,272,2.799,273,2.799,274,2.799,275,1.692,276,2.799,277,2.54,278,2.54,279,2.799,280,2.799,281,2.799,282,6.099,283,2.799,284,1.498,285,2.799,286,2.799,287,1.557,318,0.894,319,0.82,320,0.949,328,1.007,364,1.07,382,2.54,383,2.191,436,3.282,437,2.983,450,2.306,457,1.139,477,4.492,479,1.498,480,1.498,488,1.769,521,1.498,529,1.723,548,2.06,549,2.062,550,2.306,551,2.062,554,1.622,569,2.401,576,1.692,577,3.297,578,2.062,613,3.053,621,2.062,741,3.803,807,2.889,808,2.889,809,2.889,810,2.889,832,2.746,988,3.473,989,3.244,1008,3.053,1174,2.54,1175,4.135,1176,4.477,1177,2.799,1178,2.799,1179,2.799,1180,3.76,1181,2.799,1182,2.799,1183,2.54,1184,2.799,1185,2.799,1186,2.799,1187,2.799,1188,2.799,1189,2.799,1203,3.76,1488,2.346,1676,2.799,1677,4.145,1678,3.76,1683,2.799,1684,2.799,1685,4.145,1686,4.145,1687,4.145,1688,4.145,1689,4.145,1690,4.145,1691,4.145,1692,4.145,1693,4.145,1694,4.145,1695,4.145,1696,3.76,1697,4.145,1698,4.145,1699,4.145,1700,4.145,1701,2.799,1702,4.145,1708,2.54,1711,2.54,1793,1.855,1798,3.76,1800,2.799,1801,2.799,1883,2.799,1884,3.194,1885,3.194,1886,5.63,1887,4.728,1888,8.397,1889,3.194,1890,4.728,1891,3.194,1892,8.691,1893,3.194,1894,3.194,1895,3.194,1896,4.728,1897,3.194,1898,3.194,1899,3.194,1900,3.194,1901,4.728,1902,3.194,1903,3.194,1904,4.728,1905,3.194,1906,3.194,1907,3.194,1908,3.194,1909,3.194,1910,3.194,1911,3.194,1912,3.194,1913,4.728,1914,3.194,1915,3.194,1916,3.194,1917,3.194,1918,3.194,1919,4.728,1920,3.194,1921,3.194,1922,3.194,1923,3.194,1924,3.194,1925,3.194,1926,3.194,1927,3.194,1928,3.194,1929,3.194,1930,3.194]],["title/routes.html",[518,3.507]],["body/routes.html",[20,0.01,28,0.009,37,0.009,133,0.01,518,4.214]],["title/interfaces/User.html",[0,0.183,53,0.958]],["body/interfaces/User.html",[0,0.364,1,2.398,2,0.746,3,0.091,4,0.073,5,0.082,6,1.062,7,0.158,8,0.729,10,0.814,11,0.684,12,1.617,13,1.397,14,0.746,15,0.838,16,1.243,17,0.746,18,1.36,19,0.346,20,0.011,21,0.929,22,1.822,23,0.802,24,1.282,25,0.109,26,0.231,27,0.241,28,0.006,29,1.529,30,1.529,31,1.529,32,1.529,33,1.529,34,1.529,35,1.529,36,1.418,37,0.006,38,2.561,39,1.131,40,1.691,41,1.131,42,1.131,43,1.131,44,1.131,45,1.131,46,1.131,47,1.062,48,1.131,49,1.131,50,1,51,1.911,52,1.062,53,1.075,54,2.362,55,2.211,56,2.325,57,2.211,58,2.211,59,2.211,60,2.211,61,2.211,62,2.211,63,2.211,64,2.211,65,2.211,66,2.211,67,2.211,68,2.474,69,2.362,70,2.211,71,2.211,72,2.211,73,2.188,74,2.211,75,1.131,76,1.677,77,1.131,78,1.131,79,2.211,80,1.131,81,1.131,82,2.078,83,1.131,84,1.576,85,1.576,86,1.131,87,1.131,88,1.131,89,1.131,90,1.131,91,1.131,92,1.131,93,1.131,94,1.131,95,1.677,96,1.131,97,1.131,98,1.131,99,1.062,100,1.131,101,1.131,102,2.078,103,1.131,104,1.131,105,1.131,106,1.131,107,1.131,108,1.131,109,1.131,110,1.131,111,1,112,1.131,113,1.131,114,1.131,115,1.131,116,0.243,117,1.131,118,1.131,119,1.131,120,1.131,121,1.131,122,1.062,123,1.879,124,1.131,125,1.131,126,1.131,127,1.576,128,1.576,129,1.131,130,1.131,131,1.131,132,0.684,133,0.006,1062,3.79]]],"invertedIndex":[["",{"_index":20,"title":{},"body":{"interfaces/APIResponse.html":{},"classes/ApiException.html":{},"controllers/AppController.html":{},"interfaces/AppLaunchAction.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/BaseModel.html":{},"interfaces/BaseRoute.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"classes/CreateTagsDto.html":{},"classes/CreateUserDto.html":{},"modules/CronModule.html":{},"injectables/CronService.html":{},"classes/CrudConfigService.html":{},"classes/CrudController.html":{},"interfaces/CrudOptions.html":{},"classes/CrudRoutesFactory.html":{},"classes/CrudService.html":{},"classes/CustomQueryBuilder.html":{},"modules/DatabaseModule.html":{},"modules/EmailModule.html":{},"classes/EmailScheduleDto.html":{},"controllers/EmailSchedulingController.html":{},"modules/EmailSchedulingModule.html":{},"injectables/EmailSchedulingService.html":{},"injectables/EmailService.html":{},"injectables/ExcludeNullUndefinedInterceptor.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetManyDefaultResponse.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"controllers/HealthController.html":{},"interfaces/IBaseModel.html":{},"interfaces/ICrudService.html":{},"interfaces/IPaginationResult.html":{},"interfaces/ITag.html":{},"interfaces/ITryRequest.html":{},"interfaces/IUser.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/LoginCredsDto.html":{},"classes/PaginationParams.html":{},"interfaces/ParamOption.html":{},"interfaces/ParamsOptions.html":{},"injectables/PersistedCronService.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"classes/QueryFailedFilter.html":{},"classes/R.html":{},"guards/RequestGuard.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/Response.html":{},"guards/ResponseGuard.html":{},"interfaces/Result.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{},"classes/Tag.html":{},"controllers/TagsController.html":{},"modules/TagsModule.html":{},"injectables/TagsService.html":{},"injectables/TimeoutInterceptor.html":{},"interfaces/TokenPayload.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateTagsDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"classes/ValidationFailedFilter.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"routes.html":{},"interfaces/User.html":{}}}],["0",{"_index":741,"title":{},"body":{"injectables/CronService.html":{},"classes/CrudService.html":{},"classes/CustomQueryBuilder.html":{},"interfaces/IPaginationResult.html":{},"classes/PaginationParams.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["0.1.1",{"_index":1746,"title":{},"body":{"dependencies.html":{}}}],["0.1.13",{"_index":1785,"title":{},"body":{"dependencies.html":{}}}],["0.12.2",{"_index":1763,"title":{},"body":{"dependencies.html":{}}}],["0.21.15",{"_index":1772,"title":{},"body":{"dependencies.html":{}}}],["0.3.1",{"_index":1740,"title":{},"body":{"dependencies.html":{}}}],["0.4.1",{"_index":1751,"title":{},"body":{"dependencies.html":{}}}],["0.5.19",{"_index":1790,"title":{},"body":{"dependencies.html":{}}}],["0.6.1",{"_index":1742,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":1662,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":1679,"title":{},"body":{"coverage.html":{}}}],["0/12",{"_index":1730,"title":{},"body":{"coverage.html":{}}}],["0/14",{"_index":1680,"title":{},"body":{"coverage.html":{}}}],["0/15",{"_index":1721,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":1660,"title":{},"body":{"coverage.html":{}}}],["0/20",{"_index":1733,"title":{},"body":{"coverage.html":{}}}],["0/23",{"_index":1720,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":1663,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":1675,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":1665,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":1664,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":1703,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":1704,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":1712,"title":{},"body":{"coverage.html":{}}}],["01]\\d",{"_index":1906,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0})@isoptional()@min(0)@transform(undefined",{"_index":1402,"title":{},"body":{"classes/PaginationParams.html":{}}}],["1",{"_index":625,"title":{},"body":{"classes/CreateUserDto.html":{},"injectables/CronService.html":{},"classes/CustomQueryBuilder.html":{},"controllers/HealthController.html":{},"interfaces/IUser.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{}}}],["1.0.0",{"_index":1782,"title":{},"body":{"dependencies.html":{}}}],["1.1.0",{"_index":1780,"title":{},"body":{"dependencies.html":{}}}],["1.1.2",{"_index":1778,"title":{},"body":{"dependencies.html":{}}}],["1.2.0",{"_index":1760,"title":{},"body":{"dependencies.html":{}}}],["1.8.2",{"_index":1764,"title":{},"body":{"dependencies.html":{}}}],["1/1",{"_index":1714,"title":{},"body":{"coverage.html":{}}}],["1/2",{"_index":1724,"title":{},"body":{"coverage.html":{}}}],["1/3",{"_index":1722,"title":{},"body":{"coverage.html":{}}}],["1/4",{"_index":1672,"title":{},"body":{"coverage.html":{}}}],["1/6",{"_index":1674,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":1347,"title":{},"body":{"interfaces/IPaginationResult.html":{},"classes/PaginationParams.html":{}}}],["10/10",{"_index":1670,"title":{},"body":{"coverage.html":{}}}],["10/19",{"_index":1707,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":1668,"title":{},"body":{"coverage.html":{}}}],["100000",{"_index":731,"title":{},"body":{"injectables/CronService.html":{}}}],["1024",{"_index":1317,"title":{},"body":{"controllers/HealthController.html":{}}}],["10_000",{"_index":1597,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["12",{"_index":658,"title":{},"body":{"classes/CreateUserDto.html":{},"interfaces/IUser.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"injectables/UsersService.html":{},"overview.html":{}}}],["12345678",{"_index":353,"title":{},"body":{"controllers/AuthController.html":{},"classes/LoginCredsDto.html":{}}}],["12345678'})@isnotempty",{"_index":1397,"title":{},"body":{"classes/LoginCredsDto.html":{}}}],["15",{"_index":1154,"title":{},"body":{"classes/CustomQueryBuilder.html":{}}}],["16",{"_index":1673,"title":{},"body":{"coverage.html":{}}}],["17.1.1",{"_index":1738,"title":{},"body":{"dependencies.html":{}}}],["2",{"_index":591,"title":{},"body":{"classes/CreateTagsDto.html":{},"interfaces/ITag.html":{},"classes/Tag.html":{},"classes/UpdateTagsDto.html":{},"overview.html":{}}}],["2.0.21",{"_index":1783,"title":{},"body":{"dependencies.html":{}}}],["2.1.4",{"_index":1753,"title":{},"body":{"dependencies.html":{}}}],["2.2.6",{"_index":1777,"title":{},"body":{"dependencies.html":{}}}],["2.29.1",{"_index":1774,"title":{},"body":{"dependencies.html":{}}}],["2/6",{"_index":1682,"title":{},"body":{"coverage.html":{}}}],["2/7",{"_index":1667,"title":{},"body":{"coverage.html":{}}}],["200",{"_index":1501,"title":{},"body":{"guards/ResponseGuard.html":{}}}],["20922789888000",{"_index":743,"title":{},"body":{"injectables/CronService.html":{}}}],["21",{"_index":1872,"title":{},"body":{"overview.html":{}}}],["25",{"_index":1671,"title":{},"body":{"coverage.html":{}}}],["255",{"_index":592,"title":{},"body":{"classes/CreateTagsDto.html":{},"classes/CreateUserDto.html":{},"interfaces/ITag.html":{},"interfaces/IUser.html":{},"classes/Tag.html":{},"classes/UpdateTagsDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{}}}],["28",{"_index":1666,"title":{},"body":{"coverage.html":{}}}],["2]\\d(?::?[0",{"_index":1911,"title":{},"body":{"miscellaneous/variables.html":{}}}],["2]\\d:[0",{"_index":1908,"title":{},"body":{"miscellaneous/variables.html":{}}}],["3",{"_index":622,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/CrudService.html":{},"interfaces/IUser.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{}}}],["3.0.1",{"_index":1779,"title":{},"body":{"dependencies.html":{}}}],["3.0.2",{"_index":1787,"title":{},"body":{"dependencies.html":{}}}],["3.20.0",{"_index":1762,"title":{},"body":{"dependencies.html":{}}}],["33",{"_index":1681,"title":{},"body":{"coverage.html":{}}}],["34",{"_index":1873,"title":{},"body":{"overview.html":{}}}],["3]\\d(?:t[0",{"_index":1907,"title":{},"body":{"miscellaneous/variables.html":{}}}],["4.0.0",{"_index":1781,"title":{},"body":{"dependencies.html":{}}}],["4.0.2",{"_index":1776,"title":{},"body":{"dependencies.html":{}}}],["4.1.5",{"_index":1792,"title":{},"body":{"dependencies.html":{}}}],["4.17.1",{"_index":1767,"title":{},"body":{"dependencies.html":{}}}],["4.17.20",{"_index":1773,"title":{},"body":{"dependencies.html":{}}}],["4.2.0",{"_index":1771,"title":{},"body":{"dependencies.html":{}}}],["4.2.2",{"_index":1765,"title":{},"body":{"dependencies.html":{}}}],["4.7.5",{"_index":1754,"title":{},"body":{"dependencies.html":{}}}],["401",{"_index":1505,"title":{},"body":{"guards/ResponseGuard.html":{}}}],["5.0.0",{"_index":1758,"title":{},"body":{"dependencies.html":{}}}],["5.2.3",{"_index":1769,"title":{},"body":{"dependencies.html":{}}}],["50",{"_index":1723,"title":{},"body":{"coverage.html":{}}}],["50000",{"_index":734,"title":{},"body":{"injectables/CronService.html":{}}}],["50000000",{"_index":746,"title":{},"body":{"injectables/CronService.html":{}}}],["52",{"_index":1706,"title":{},"body":{"coverage.html":{}}}],["53",{"_index":1734,"title":{},"body":{"coverage.html":{}}}],["5]\\d(?:\\.\\d+)?(?:z",{"_index":1910,"title":{},"body":{"miscellaneous/variables.html":{}}}],["5]\\d)?)?)?$/g.test",{"_index":1912,"title":{},"body":{"miscellaneous/variables.html":{}}}],["5]\\d:[0",{"_index":1909,"title":{},"body":{"miscellaneous/variables.html":{}}}],["6",{"_index":1871,"title":{},"body":{"overview.html":{}}}],["6.6.3",{"_index":1788,"title":{},"body":{"dependencies.html":{}}}],["60",{"_index":756,"title":{},"body":{"injectables/CronService.html":{},"controllers/HealthController.html":{}}}],["7.0.1",{"_index":1755,"title":{},"body":{"dependencies.html":{}}}],["7.1.5",{"_index":1747,"title":{},"body":{"dependencies.html":{}}}],["7.2.0",{"_index":1744,"title":{},"body":{"dependencies.html":{}}}],["7.5.1",{"_index":1741,"title":{},"body":{"dependencies.html":{}}}],["7.6.5",{"_index":1750,"title":{},"body":{"dependencies.html":{}}}],["72",{"_index":1731,"title":{},"body":{"coverage.html":{}}}],["8",{"_index":624,"title":{},"body":{"classes/CreateUserDto.html":{},"interfaces/IUser.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"overview.html":{}}}],["8.2.0",{"_index":1757,"title":{},"body":{"dependencies.html":{}}}],["8/11",{"_index":1732,"title":{},"body":{"coverage.html":{}}}],["8/15",{"_index":1735,"title":{},"body":{"coverage.html":{}}}],["8/8",{"_index":1669,"title":{},"body":{"coverage.html":{}}}],["9]*[.])?[0",{"_index":1922,"title":{},"body":{"miscellaneous/variables.html":{}}}],["9]+$/.test(val",{"_index":1923,"title":{},"body":{"miscellaneous/variables.html":{}}}],["_",{"_index":547,"title":{},"body":{"interfaces/BaseRoute.html":{},"interfaces/CrudOptions.html":{},"interfaces/GetManyDefaultResponse.html":{},"interfaces/ParamOption.html":{},"interfaces/ParamsOptions.html":{}}}],["abortearly",{"_index":268,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["above",{"_index":303,"title":{},"body":{"modules/AppModule.html":{}}}],["abstract",{"_index":986,"title":{},"body":{"classes/CrudController.html":{},"classes/CrudService.html":{},"interfaces/IPaginationResult.html":{},"classes/PaginationParams.html":{}}}],["access",{"_index":559,"title":{},"body":{"interfaces/BaseRoute.html":{},"injectables/CronService.html":{},"interfaces/CrudOptions.html":{},"injectables/EmailSchedulingService.html":{},"interfaces/GetManyDefaultResponse.html":{},"injectables/JwtStrategy.html":{},"interfaces/ParamOption.html":{},"interfaces/ParamsOptions.html":{},"classes/QueryFailedFilter.html":{},"guards/ResponseGuard.html":{},"classes/ValidationFailedFilter.html":{}}}],["access,@typescript",{"_index":1162,"title":{},"body":{"classes/CustomQueryBuilder.html":{},"injectables/UsersService.html":{}}}],["access,no",{"_index":1318,"title":{},"body":{"controllers/HealthController.html":{},"injectables/UsersService.html":{}}}],["accessors",{"_index":1066,"title":{},"body":{"classes/CrudRoutesFactory.html":{}}}],["action",{"_index":49,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/Result.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{},"interfaces/User.html":{}}}],["actionid",{"_index":48,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/Result.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{},"interfaces/User.html":{}}}],["adcorporatelogourl",{"_index":96,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/Result.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{},"interfaces/User.html":{}}}],["addcronjob",{"_index":688,"title":{},"body":{"injectables/CronService.html":{}}}],["addcronjob(name",{"_index":705,"title":{},"body":{"injectables/CronService.html":{}}}],["added",{"_index":771,"title":{},"body":{"injectables/CronService.html":{},"injectables/EmailSchedulingService.html":{}}}],["addinterval",{"_index":689,"title":{},"body":{"injectables/CronService.html":{}}}],["addinterval(name",{"_index":711,"title":{},"body":{"injectables/CronService.html":{}}}],["addtimeout",{"_index":690,"title":{},"body":{"injectables/CronService.html":{}}}],["addtimeout(name",{"_index":715,"title":{},"body":{"injectables/CronService.html":{}}}],["admin@demo.com",{"_index":350,"title":{},"body":{"controllers/AuthController.html":{},"classes/LoginCredsDto.html":{}}}],["admin@demo.com'})@isnotempty",{"_index":1395,"title":{},"body":{"classes/LoginCredsDto.html":{}}}],["against",{"_index":589,"title":{},"body":{"classes/CreateTagsDto.html":{},"classes/CreateUserDto.html":{},"interfaces/ITag.html":{},"interfaces/IUser.html":{},"classes/Tag.html":{},"classes/UpdateTagsDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{}}}],["aliases",{"_index":1875,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["allowunknown",{"_index":267,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["alwayspaginate",{"_index":526,"title":{},"body":{"interfaces/BaseRoute.html":{},"classes/CrudConfigService.html":{},"interfaces/CrudOptions.html":{},"classes/CrudRoutesFactory.html":{},"interfaces/GetManyDefaultResponse.html":{},"interfaces/ParamOption.html":{},"interfaces/ParamsOptions.html":{},"classes/R.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{}}}],["amazing",{"_index":1848,"title":{},"body":{"index.html":{}}}],["animalimageurl",{"_index":104,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/Result.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{},"interfaces/User.html":{}}}],["any[]).every((o",{"_index":1897,"title":{},"body":{"miscellaneous/variables.html":{}}}],["api",{"_index":39,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/Result.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{},"interfaces/User.html":{}}}],["api:v1/rescue/getcomments?pageno=0&pagesize=10&postid=1230",{"_index":44,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/Result.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{},"interfaces/User.html":{}}}],["api:v1/rescue/getrescuelist?pageno=0&pagesize=10&status=pending|inprogress|completed|nearest",{"_index":43,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/Result.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{},"interfaces/User.html":{}}}],["api:v1/rescue/getuserfollowers?userid=1230",{"_index":45,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/Result.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{},"interfaces/User.html":{}}}],["api:v1/rescue/getuserfollowing?userid=1230",{"_index":46,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/Result.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{},"interfaces/User.html":{}}}],["api:v1/user/getuserposts?pageno=0&pagesize=25",{"_index":42,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/Result.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{},"interfaces/User.html":{}}}],["api:v1/user/getuserprofile?userid=25",{"_index":41,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/Result.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{},"interfaces/User.html":{}}}],["apibadrequestresponse",{"_index":167,"title":{},"body":{"classes/ApiException.html":{}}}],["apibearerauth",{"_index":1550,"title":{},"body":{"controllers/TagsController.html":{}}}],["apiconflictresponse",{"_index":172,"title":{},"body":{"classes/ApiException.html":{}}}],["apierror",{"_index":22,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/IPaginationResult.html":{},"classes/PaginationParams.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/Result.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{},"miscellaneous/typealiases.html":{},"interfaces/User.html":{}}}],["apierrors",{"_index":186,"title":{},"body":{"classes/ApiException.html":{},"classes/CrudController.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["apiexception",{"_index":135,"title":{"classes/ApiException.html":{}},"body":{"classes/ApiException.html":{},"coverage.html":{}}}],["apiforbiddenresponse",{"_index":168,"title":{},"body":{"classes/ApiException.html":{}}}],["apiinternalservererrorresponse",{"_index":169,"title":{},"body":{"classes/ApiException.html":{}}}],["apinotfoundresponse",{"_index":170,"title":{},"body":{"classes/ApiException.html":{}}}],["apioperation",{"_index":1034,"title":{},"body":{"classes/CrudController.html":{},"controllers/UsersController.html":{}}}],["apioperation({summary",{"_index":1006,"title":{},"body":{"classes/CrudController.html":{},"controllers/UsersController.html":{}}}],["apiproperty",{"_index":341,"title":{},"body":{"controllers/AuthController.html":{},"classes/CrudConfigService.html":{},"classes/CrudRoutesFactory.html":{},"classes/LoginCredsDto.html":{},"classes/R.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["apiproperty(options",{"_index":552,"title":{},"body":{"interfaces/BaseRoute.html":{},"interfaces/CrudOptions.html":{},"interfaces/GetManyDefaultResponse.html":{},"interfaces/ParamOption.html":{},"interfaces/ParamsOptions.html":{},"miscellaneous/functions.html":{}}}],["apiproperty({example",{"_index":1394,"title":{},"body":{"classes/LoginCredsDto.html":{}}}],["apipropertydecorator",{"_index":557,"title":{},"body":{"interfaces/BaseRoute.html":{},"interfaces/CrudOptions.html":{},"interfaces/GetManyDefaultResponse.html":{},"interfaces/ParamOption.html":{},"interfaces/ParamsOptions.html":{}}}],["apipropertydecorator(options)(target",{"_index":562,"title":{},"body":{"interfaces/BaseRoute.html":{},"interfaces/CrudOptions.html":{},"interfaces/GetManyDefaultResponse.html":{},"interfaces/ParamOption.html":{},"interfaces/ParamsOptions.html":{}}}],["apipropertyoptional",{"_index":152,"title":{},"body":{"classes/ApiException.html":{},"interfaces/IPaginationResult.html":{},"classes/PaginationParams.html":{}}}],["apipropertyoptional()@isoptional",{"_index":1399,"title":{},"body":{"classes/PaginationParams.html":{}}}],["apipropertyoptional({type",{"_index":1401,"title":{},"body":{"classes/PaginationParams.html":{}}}],["apiresponse",{"_index":1,"title":{"interfaces/APIResponse.html":{}},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"classes/CrudController.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/Result.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{},"coverage.html":{},"interfaces/User.html":{}}}],["apitags",{"_index":209,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/EmailSchedulingController.html":{},"controllers/HealthController.html":{},"classes/LoginCredsDto.html":{},"controllers/TagsController.html":{},"controllers/UsersController.html":{}}}],["apitags(appcontroller.name",{"_index":211,"title":{},"body":{"controllers/AppController.html":{}}}],["apitags(authcontroller.name",{"_index":356,"title":{},"body":{"controllers/AuthController.html":{},"classes/LoginCredsDto.html":{}}}],["apitags(emailschedulingcontroller.name",{"_index":1217,"title":{},"body":{"controllers/EmailSchedulingController.html":{}}}],["apitags(healthcontroller.name",{"_index":1296,"title":{},"body":{"controllers/HealthController.html":{}}}],["apitags(tagscontroller.name",{"_index":1556,"title":{},"body":{"controllers/TagsController.html":{}}}],["apitags(userscontroller.name",{"_index":1628,"title":{},"body":{"controllers/UsersController.html":{}}}],["apiunauthorizedresponse",{"_index":171,"title":{},"body":{"classes/ApiException.html":{}}}],["app",{"_index":1423,"title":{},"body":{"injectables/PersistedCronService.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["app.controller",{"_index":254,"title":{},"body":{"modules/AppModule.html":{}}}],["appcontroller",{"_index":197,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["applaunchaction",{"_index":47,"title":{"interfaces/AppLaunchAction.html":{}},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/Result.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{},"coverage.html":{},"interfaces/User.html":{}}}],["application",{"_index":294,"title":{},"body":{"modules/AppModule.html":{}}}],["applications",{"_index":1824,"title":{},"body":{"index.html":{}}}],["applicationshutdown",{"_index":324,"title":{},"body":{"modules/AppModule.html":{},"controllers/HealthController.html":{},"injectables/PersistedCronService.html":{}}}],["applydecorators",{"_index":160,"title":{},"body":{"classes/ApiException.html":{}}}],["appmodule",{"_index":216,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["areyoufollowing",{"_index":130,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/Result.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{},"interfaces/User.html":{}}}],["argumentshost",{"_index":1448,"title":{},"body":{"classes/QueryFailedFilter.html":{},"classes/ValidationFailedFilter.html":{}}}],["arr",{"_index":1914,"title":{},"body":{"miscellaneous/variables.html":{}}}],["arr.some((o",{"_index":1915,"title":{},"body":{"miscellaneous/variables.html":{}}}],["array",{"_index":862,"title":{},"body":{"classes/CrudConfigService.html":{},"classes/CrudRoutesFactory.html":{},"classes/R.html":{},"guards/ResponseGuard.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{}}}],["array.isarray(val",{"_index":1900,"title":{},"body":{"miscellaneous/variables.html":{}}}],["array.isarray(value",{"_index":1151,"title":{},"body":{"classes/CustomQueryBuilder.html":{},"injectables/ExcludeNullUndefinedInterceptor.html":{}}}],["arraymerge",{"_index":885,"title":{},"body":{"classes/CrudConfigService.html":{},"classes/CrudRoutesFactory.html":{},"classes/R.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{}}}],["arrayquerybuildertype",{"_index":1124,"title":{},"body":{"classes/CustomQueryBuilder.html":{}}}],["asc",{"_index":1341,"title":{},"body":{"interfaces/IPaginationResult.html":{},"classes/PaginationParams.html":{},"miscellaneous/enumerations.html":{}}}],["assignment",{"_index":1167,"title":{},"body":{"classes/CustomQueryBuilder.html":{},"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["async",{"_index":328,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/BaseModel.html":{},"classes/CreateUserDto.html":{},"classes/CrudController.html":{},"classes/CrudService.html":{},"classes/CustomQueryBuilder.html":{},"modules/DatabaseModule.html":{},"controllers/EmailSchedulingController.html":{},"injectables/EmailSchedulingService.html":{},"interfaces/IBaseModel.html":{},"interfaces/IUser.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/LoginCredsDto.html":{},"injectables/PersistedCronService.html":{},"classes/Tag.html":{},"controllers/TagsController.html":{},"injectables/TagsService.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["asynchronous",{"_index":308,"title":{},"body":{"modules/AppModule.html":{}}}],["auth",{"_index":357,"title":{},"body":{"controllers/AuthController.html":{},"classes/LoginCredsDto.html":{}}}],["auth.controller",{"_index":377,"title":{},"body":{"modules/AuthModule.html":{}}}],["auth.service",{"_index":348,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/LocalStrategy.html":{},"classes/LoginCredsDto.html":{}}}],["auth/auth.module",{"_index":255,"title":{},"body":{"modules/AppModule.html":{}}}],["authcontroller",{"_index":326,"title":{"controllers/AuthController.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"classes/LoginCredsDto.html":{},"coverage.html":{}}}],["authguard",{"_index":339,"title":{},"body":{"controllers/AuthController.html":{},"classes/LoginCredsDto.html":{},"controllers/TagsController.html":{}}}],["authmodule",{"_index":226,"title":{"modules/AuthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules.html":{},"overview.html":{}}}],["author",{"_index":1857,"title":{},"body":{"index.html":{}}}],["authorized",{"_index":1377,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["authservice",{"_index":347,"title":{"injectables/AuthService.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/LocalStrategy.html":{},"classes/LoginCredsDto.html":{},"coverage.html":{},"overview.html":{}}}],["available",{"_index":1869,"title":{},"body":{"modules.html":{}}}],["await",{"_index":364,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/BaseModel.html":{},"classes/CreateUserDto.html":{},"classes/CrudController.html":{},"classes/CrudService.html":{},"classes/CustomQueryBuilder.html":{},"modules/DatabaseModule.html":{},"controllers/EmailSchedulingController.html":{},"injectables/EmailSchedulingService.html":{},"interfaces/IBaseModel.html":{},"interfaces/IUser.html":{},"injectables/JwtStrategy.html":{},"classes/LoginCredsDto.html":{},"injectables/PersistedCronService.html":{},"controllers/TagsController.html":{},"injectables/TagsService.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["awaits",{"_index":307,"title":{},"body":{"modules/AppModule.html":{}}}],["b",{"_index":886,"title":{},"body":{"classes/CrudConfigService.html":{},"classes/CrudRoutesFactory.html":{},"controllers/HealthController.html":{},"classes/R.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{}}}],["backers",{"_index":1849,"title":{},"body":{"index.html":{}}}],["bad",{"_index":190,"title":{},"body":{"classes/ApiException.html":{}}}],["badge",{"_index":74,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/Result.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{},"interfaces/User.html":{}}}],["badgedescription",{"_index":77,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/Result.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{},"interfaces/User.html":{}}}],["badgeid",{"_index":75,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/Result.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{},"interfaces/User.html":{}}}],["badgename",{"_index":76,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/Result.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{},"interfaces/User.html":{}}}],["badrequestexception",{"_index":161,"title":{},"body":{"classes/ApiException.html":{},"injectables/TagsService.html":{}}}],["badrequestexception([`duplicate",{"_index":1580,"title":{},"body":{"injectables/TagsService.html":{}}}],["base",{"_index":853,"title":{},"body":{"classes/CrudConfigService.html":{},"classes/CrudController.html":{},"classes/CrudRoutesFactory.html":{},"classes/CrudService.html":{},"classes/R.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{}}}],["base/crud",{"_index":1551,"title":{},"body":{"controllers/TagsController.html":{},"injectables/TagsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["based",{"_index":583,"title":{},"body":{"classes/CreateTagsDto.html":{},"classes/CreateUserDto.html":{},"interfaces/ITag.html":{},"interfaces/IUser.html":{},"classes/Tag.html":{},"classes/UpdateTagsDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{}}}],["basemodel",{"_index":423,"title":{"classes/BaseModel.html":{}},"body":{"classes/BaseModel.html":{},"classes/CreateTagsDto.html":{},"classes/CreateUserDto.html":{},"classes/CrudController.html":{},"classes/CrudService.html":{},"interfaces/IBaseModel.html":{},"interfaces/ITag.html":{},"interfaces/IUser.html":{},"classes/Tag.html":{},"classes/UpdateTagsDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"coverage.html":{}}}],["basemodel:25",{"_index":1540,"title":{},"body":{"classes/Tag.html":{},"classes/User.html":{}}}],["basemodel:35",{"_index":1542,"title":{},"body":{"classes/Tag.html":{},"classes/User.html":{}}}],["basemodel:37",{"_index":1541,"title":{},"body":{"classes/Tag.html":{},"classes/User.html":{}}}],["basemodel:39",{"_index":1538,"title":{},"body":{"classes/Tag.html":{},"classes/User.html":{}}}],["basemodel:41",{"_index":1543,"title":{},"body":{"classes/Tag.html":{},"classes/User.html":{}}}],["basemodel:43",{"_index":1539,"title":{},"body":{"classes/Tag.html":{},"classes/User.html":{}}}],["basemodel:47",{"_index":1545,"title":{},"body":{"classes/Tag.html":{},"classes/User.html":{}}}],["basemodel:60",{"_index":1544,"title":{},"body":{"classes/Tag.html":{},"classes/User.html":{}}}],["basemodel})@apiresponse({status",{"_index":1024,"title":{},"body":{"classes/CrudController.html":{}}}],["basemodel})@get(':id",{"_index":1020,"title":{},"body":{"classes/CrudController.html":{}}}],["basemodel})@post(':id",{"_index":1009,"title":{},"body":{"classes/CrudController.html":{}}}],["basemodel})@put(':id",{"_index":1030,"title":{},"body":{"classes/CrudController.html":{}}}],["baseroute",{"_index":487,"title":{"interfaces/BaseRoute.html":{}},"body":{"interfaces/BaseRoute.html":{},"classes/CrudConfigService.html":{},"interfaces/CrudOptions.html":{},"classes/CrudRoutesFactory.html":{},"interfaces/GetManyDefaultResponse.html":{},"interfaces/ParamOption.html":{},"interfaces/ParamsOptions.html":{},"classes/R.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{},"coverage.html":{}}}],["baseroutename",{"_index":493,"title":{},"body":{"interfaces/BaseRoute.html":{},"classes/CrudConfigService.html":{},"interfaces/CrudOptions.html":{},"classes/CrudRoutesFactory.html":{},"interfaces/GetManyDefaultResponse.html":{},"interfaces/ParamOption.html":{},"interfaces/ParamsOptions.html":{},"classes/R.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{},"miscellaneous/typealiases.html":{}}}],["bcrypt",{"_index":409,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"interfaces/IUser.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["bcrypt.compare(enteredpassword",{"_index":410,"title":{},"body":{"injectables/AuthService.html":{}}}],["bcrypt.hash(password",{"_index":657,"title":{},"body":{"classes/CreateUserDto.html":{},"interfaces/IUser.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"injectables/UsersService.html":{}}}],["before",{"_index":207,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/EmailSchedulingController.html":{},"controllers/HealthController.html":{},"controllers/TagsController.html":{},"controllers/UsersController.html":{}}}],["beforeapplicationshutdown",{"_index":300,"title":{},"body":{"modules/AppModule.html":{}}}],["beforeinsert",{"_index":1603,"title":{},"body":{"classes/User.html":{}}}],["beforeinsert(querycontext",{"_index":659,"title":{},"body":{"classes/CreateUserDto.html":{},"interfaces/IUser.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{}}}],["beforeupdate",{"_index":432,"title":{},"body":{"classes/BaseModel.html":{},"classes/Tag.html":{},"classes/User.html":{}}}],["beforeupdate(opt",{"_index":444,"title":{},"body":{"classes/BaseModel.html":{},"classes/CreateUserDto.html":{},"interfaces/IBaseModel.html":{},"interfaces/IUser.html":{},"classes/Tag.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{}}}],["bind",{"_index":1476,"title":{},"body":{"guards/RequestGuard.html":{},"guards/ResponseGuard.html":{}}}],["bindrequesthelpers",{"_index":1472,"title":{},"body":{"guards/RequestGuard.html":{}}}],["bindrequesthelpers(request",{"_index":1474,"title":{},"body":{"guards/RequestGuard.html":{}}}],["bindresponsehelpers",{"_index":1496,"title":{},"body":{"guards/ResponseGuard.html":{}}}],["bindresponsehelpers(response",{"_index":1497,"title":{},"body":{"guards/ResponseGuard.html":{}}}],["blocked",{"_index":1759,"title":{},"body":{"dependencies.html":{}}}],["body",{"_index":336,"title":{},"body":{"controllers/AuthController.html":{},"classes/CrudController.html":{},"controllers/EmailSchedulingController.html":{},"classes/LoginCredsDto.html":{},"controllers/TagsController.html":{},"controllers/UsersController.html":{}}}],["boolean",{"_index":51,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/BaseRoute.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"classes/CreateUserDto.html":{},"interfaces/CrudOptions.html":{},"classes/CustomQueryBuilder.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetManyDefaultResponse.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/ITryRequest.html":{},"interfaces/IUser.html":{},"interfaces/ParamOption.html":{},"interfaces/ParamsOptions.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"guards/RequestGuard.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"guards/ResponseGuard.html":{},"interfaces/Result.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{},"interfaces/User.html":{}}}],["boot",{"_index":1807,"title":{},"body":{"miscellaneous/functions.html":{}}}],["bootstrap",{"_index":221,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CronModule.html":{},"modules/EmailModule.html":{},"modules/EmailSchedulingModule.html":{},"modules/TagsModule.html":{},"modules/UsersModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["bootstrapped",{"_index":1424,"title":{},"body":{"injectables/PersistedCronService.html":{}}}],["both",{"_index":641,"title":{},"body":{"classes/CreateUserDto.html":{},"interfaces/IUser.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{}}}],["browse",{"_index":1867,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":1865,"title":{},"body":{"modules.html":{}}}],["builder",{"_index":470,"title":{},"body":{"classes/BaseModel.html":{},"interfaces/IBaseModel.html":{}}}],["building",{"_index":1820,"title":{},"body":{"index.html":{}}}],["bull",{"_index":1761,"title":{},"body":{"dependencies.html":{}}}],["c",{"_index":887,"title":{},"body":{"classes/CrudConfigService.html":{},"classes/CrudRoutesFactory.html":{},"classes/CustomQueryBuilder.html":{},"classes/R.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{}}}],["cache",{"_index":525,"title":{},"body":{"interfaces/BaseRoute.html":{},"interfaces/CrudOptions.html":{},"interfaces/GetManyDefaultResponse.html":{},"interfaces/ParamOption.html":{},"interfaces/ParamsOptions.html":{}}}],["call",{"_index":297,"title":{},"body":{"modules/AppModule.html":{},"interfaces/BaseRoute.html":{},"interfaces/CrudOptions.html":{},"injectables/EmailSchedulingService.html":{},"injectables/ExcludeNullUndefinedInterceptor.html":{},"interfaces/GetManyDefaultResponse.html":{},"controllers/HealthController.html":{},"interfaces/ParamOption.html":{},"interfaces/ParamsOptions.html":{},"injectables/UsersService.html":{}}}],["call,@typescript",{"_index":759,"title":{},"body":{"injectables/CronService.html":{},"classes/CustomQueryBuilder.html":{},"injectables/EmailSchedulingService.html":{},"classes/QueryFailedFilter.html":{},"guards/ResponseGuard.html":{},"classes/ValidationFailedFilter.html":{}}}],["call,no",{"_index":1169,"title":{},"body":{"classes/CustomQueryBuilder.html":{}}}],["callback",{"_index":779,"title":{},"body":{"injectables/CronService.html":{}}}],["called",{"_index":754,"title":{},"body":{"injectables/CronService.html":{}}}],["callhandler",{"_index":1262,"title":{},"body":{"injectables/ExcludeNullUndefinedInterceptor.html":{},"interfaces/Response.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/TransformInterceptor.html":{}}}],["calls",{"_index":827,"title":{},"body":{"classes/CrudConfigService.html":{},"classes/CrudRoutesFactory.html":{},"classes/R.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{}}}],["canactivate",{"_index":1473,"title":{},"body":{"guards/RequestGuard.html":{},"guards/ResponseGuard.html":{}}}],["canactivate(context",{"_index":1477,"title":{},"body":{"guards/RequestGuard.html":{},"guards/ResponseGuard.html":{}}}],["case",{"_index":852,"title":{},"body":{"classes/CrudConfigService.html":{},"classes/CrudRoutesFactory.html":{},"classes/R.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{}}}],["catch",{"_index":546,"title":{},"body":{"interfaces/BaseRoute.html":{},"injectables/CronService.html":{},"interfaces/CrudOptions.html":{},"classes/CrudService.html":{},"interfaces/GetManyDefaultResponse.html":{},"interfaces/ParamOption.html":{},"interfaces/ParamsOptions.html":{},"classes/QueryFailedFilter.html":{},"classes/ValidationFailedFilter.html":{}}}],["catch(exception",{"_index":1439,"title":{},"body":{"classes/QueryFailedFilter.html":{},"classes/ValidationFailedFilter.html":{}}}],["catch(validationerror",{"_index":1653,"title":{},"body":{"classes/ValidationFailedFilter.html":{}}}],["catcherror",{"_index":1594,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["catcherror((e",{"_index":1598,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["cb",{"_index":1139,"title":{},"body":{"classes/CustomQueryBuilder.html":{}}}],["cb(records",{"_index":1172,"title":{},"body":{"classes/CustomQueryBuilder.html":{}}}],["check",{"_index":1147,"title":{},"body":{"classes/CustomQueryBuilder.html":{},"controllers/HealthController.html":{},"miscellaneous/functions.html":{}}}],["checked",{"_index":588,"title":{},"body":{"classes/CreateTagsDto.html":{},"classes/CreateUserDto.html":{},"interfaces/ITag.html":{},"interfaces/IUser.html":{},"classes/Tag.html":{},"classes/UpdateTagsDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{}}}],["checkviolationerror",{"_index":1440,"title":{},"body":{"classes/QueryFailedFilter.html":{}}}],["child",{"_index":1002,"title":{},"body":{"classes/CrudController.html":{},"classes/CrudService.html":{}}}],["chunk",{"_index":1128,"title":{},"body":{"classes/CustomQueryBuilder.html":{}}}],["chunk(cb",{"_index":1136,"title":{},"body":{"classes/CustomQueryBuilder.html":{}}}],["class",{"_index":134,"title":{"classes/ApiException.html":{},"classes/BaseModel.html":{},"classes/CreateTagsDto.html":{},"classes/CreateUserDto.html":{},"classes/CrudConfigService.html":{},"classes/CrudController.html":{},"classes/CrudRoutesFactory.html":{},"classes/CrudService.html":{},"classes/CustomQueryBuilder.html":{},"classes/EmailScheduleDto.html":{},"classes/LoginCredsDto.html":{},"classes/PaginationParams.html":{},"classes/QueryFailedFilter.html":{},"classes/R.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{},"classes/Tag.html":{},"classes/UpdateTagsDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"classes/ValidationFailedFilter.html":{}},"body":{"classes/ApiException.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/BaseModel.html":{},"classes/CreateTagsDto.html":{},"classes/CreateUserDto.html":{},"modules/CronModule.html":{},"injectables/CronService.html":{},"classes/CrudConfigService.html":{},"classes/CrudController.html":{},"classes/CrudRoutesFactory.html":{},"classes/CrudService.html":{},"modules/DatabaseModule.html":{},"modules/EmailModule.html":{},"classes/EmailScheduleDto.html":{},"controllers/EmailSchedulingController.html":{},"modules/EmailSchedulingModule.html":{},"injectables/EmailSchedulingService.html":{},"injectables/EmailService.html":{},"injectables/ExcludeNullUndefinedInterceptor.html":{},"controllers/HealthController.html":{},"interfaces/IBaseModel.html":{},"interfaces/IPaginationResult.html":{},"interfaces/ITag.html":{},"interfaces/IUser.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/LoginCredsDto.html":{},"classes/PaginationParams.html":{},"injectables/PersistedCronService.html":{},"classes/QueryFailedFilter.html":{},"classes/R.html":{},"guards/RequestGuard.html":{},"interfaces/Response.html":{},"guards/ResponseGuard.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{},"classes/Tag.html":{},"controllers/TagsController.html":{},"modules/TagsModule.html":{},"injectables/TagsService.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateTagsDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"classes/ValidationFailedFilter.html":{},"coverage.html":{},"dependencies.html":{}}}],["classes",{"_index":136,"title":{},"body":{"classes/ApiException.html":{},"classes/BaseModel.html":{},"classes/CreateTagsDto.html":{},"classes/CreateUserDto.html":{},"classes/CrudConfigService.html":{},"classes/CrudController.html":{},"classes/CrudRoutesFactory.html":{},"classes/CrudService.html":{},"classes/CustomQueryBuilder.html":{},"classes/EmailScheduleDto.html":{},"classes/LoginCredsDto.html":{},"classes/PaginationParams.html":{},"classes/QueryFailedFilter.html":{},"classes/R.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{},"classes/Tag.html":{},"classes/UpdateTagsDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"classes/ValidationFailedFilter.html":{},"overview.html":{}}}],["clean",{"_index":595,"title":{},"body":{"classes/CreateTagsDto.html":{},"classes/CreateUserDto.html":{},"interfaces/ITag.html":{},"interfaces/IUser.html":{},"classes/Tag.html":{},"classes/UpdateTagsDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{}}}],["client",{"_index":1182,"title":{},"body":{"modules/DatabaseModule.html":{},"miscellaneous/variables.html":{}}}],["clonedeep",{"_index":1145,"title":{},"body":{"classes/CustomQueryBuilder.html":{}}}],["clonedeep(this",{"_index":1166,"title":{},"body":{"classes/CustomQueryBuilder.html":{}}}],["cluster_appmodule",{"_index":224,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":225,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authmodule",{"_index":367,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_imports",{"_index":369,"title":{},"body":{"modules/AuthModule.html":{}}}],["cluster_authmodule_providers",{"_index":368,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_cronmodule",{"_index":668,"title":{},"body":{"modules/CronModule.html":{},"overview.html":{}}}],["cluster_cronmodule_providers",{"_index":669,"title":{},"body":{"modules/CronModule.html":{},"overview.html":{}}}],["cluster_emailmodule",{"_index":1191,"title":{},"body":{"modules/EmailModule.html":{},"overview.html":{}}}],["cluster_emailmodule_exports",{"_index":1193,"title":{},"body":{"modules/EmailModule.html":{},"overview.html":{}}}],["cluster_emailmodule_providers",{"_index":1192,"title":{},"body":{"modules/EmailModule.html":{},"overview.html":{}}}],["cluster_emailschedulingmodule",{"_index":1222,"title":{},"body":{"modules/EmailSchedulingModule.html":{},"overview.html":{}}}],["cluster_emailschedulingmodule_imports",{"_index":1223,"title":{},"body":{"modules/EmailSchedulingModule.html":{}}}],["cluster_emailschedulingmodule_providers",{"_index":1224,"title":{},"body":{"modules/EmailSchedulingModule.html":{},"overview.html":{}}}],["cluster_tagsmodule",{"_index":1560,"title":{},"body":{"modules/TagsModule.html":{},"overview.html":{}}}],["cluster_tagsmodule_exports",{"_index":1562,"title":{},"body":{"modules/TagsModule.html":{},"overview.html":{}}}],["cluster_tagsmodule_providers",{"_index":1561,"title":{},"body":{"modules/TagsModule.html":{},"overview.html":{}}}],["cluster_usersmodule",{"_index":1631,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["cluster_usersmodule_exports",{"_index":1632,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["cluster_usersmodule_providers",{"_index":1633,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["code",{"_index":1503,"title":{},"body":{"guards/ResponseGuard.html":{}}}],["collectosmetrics",{"_index":1278,"title":{},"body":{"controllers/HealthController.html":{}}}],["collectosmetrics(metrics",{"_index":1282,"title":{},"body":{"controllers/HealthController.html":{}}}],["column",{"_index":652,"title":{},"body":{"classes/CreateUserDto.html":{},"interfaces/IUser.html":{},"classes/QueryFailedFilter.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{}}}],["columns",{"_index":1456,"title":{},"body":{"classes/QueryFailedFilter.html":{}}}],["comment",{"_index":123,"title":{"interfaces/Comment.html":{}},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/Result.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{},"coverage.html":{},"interfaces/User.html":{}}}],["commented",{"_index":1425,"title":{},"body":{"injectables/PersistedCronService.html":{}}}],["commentedusename",{"_index":125,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/Result.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{},"interfaces/User.html":{}}}],["commenteduserid",{"_index":126,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/Result.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{},"interfaces/User.html":{}}}],["commentid",{"_index":124,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/Result.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{},"interfaces/User.html":{}}}],["comments",{"_index":127,"title":{"interfaces/Comments.html":{}},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/Result.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{},"coverage.html":{},"interfaces/User.html":{}}}],["commentscount",{"_index":87,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/Result.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{},"interfaces/User.html":{}}}],["comparepassword",{"_index":392,"title":{},"body":{"injectables/AuthService.html":{}}}],["comparepassword(enteredpassword",{"_index":398,"title":{},"body":{"injectables/AuthService.html":{}}}],["config",{"_index":799,"title":{},"body":{"classes/CrudConfigService.html":{},"classes/CrudRoutesFactory.html":{},"injectables/EmailService.html":{},"controllers/HealthController.html":{},"classes/R.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{}}}],["config.params",{"_index":881,"title":{},"body":{"classes/CrudConfigService.html":{},"classes/CrudRoutesFactory.html":{},"classes/R.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{}}}],["config.query",{"_index":879,"title":{},"body":{"classes/CrudConfigService.html":{},"classes/CrudRoutesFactory.html":{},"classes/R.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{}}}],["config.serialize",{"_index":883,"title":{},"body":{"classes/CrudConfigService.html":{},"classes/CrudRoutesFactory.html":{},"classes/R.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{}}}],["configmodule",{"_index":246,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/EmailModule.html":{}}}],["configmodule.forroot(configmoduleoptions",{"_index":288,"title":{},"body":{"modules/AppModule.html":{}}}],["configmoduleoptions",{"_index":263,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["configservice",{"_index":373,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/EmailService.html":{},"controllers/HealthController.html":{},"injectables/JwtStrategy.html":{}}}],["configservice.get('jwtkey",{"_index":385,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{}}}],["configservice.get('token_expiration",{"_index":388,"title":{},"body":{"modules/AuthModule.html":{}}}],["conflictexception",{"_index":162,"title":{},"body":{"classes/ApiException.html":{}}}],["connection",{"_index":1185,"title":{},"body":{"modules/DatabaseModule.html":{},"miscellaneous/variables.html":{}}}],["consistent",{"_index":1270,"title":{},"body":{"injectables/ExcludeNullUndefinedInterceptor.html":{}}}],["console.error",{"_index":317,"title":{},"body":{"modules/AppModule.html":{}}}],["console.info(`moduleinit",{"_index":315,"title":{},"body":{"modules/AppModule.html":{}}}],["console.log",{"_index":893,"title":{},"body":{"classes/CrudConfigService.html":{},"classes/CrudRoutesFactory.html":{},"injectables/EmailService.html":{},"controllers/HealthController.html":{},"classes/R.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{}}}],["console.log(`moduleinit",{"_index":1324,"title":{},"body":{"controllers/HealthController.html":{}}}],["const",{"_index":262,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"interfaces/BaseRoute.html":{},"classes/CreateUserDto.html":{},"injectables/CronService.html":{},"classes/CrudConfigService.html":{},"classes/CrudController.html":{},"interfaces/CrudOptions.html":{},"classes/CrudRoutesFactory.html":{},"classes/CrudService.html":{},"classes/CustomQueryBuilder.html":{},"modules/DatabaseModule.html":{},"injectables/EmailSchedulingService.html":{},"interfaces/GetManyDefaultResponse.html":{},"controllers/HealthController.html":{},"interfaces/IUser.html":{},"injectables/JwtStrategy.html":{},"classes/LoginCredsDto.html":{},"interfaces/ParamOption.html":{},"interfaces/ParamsOptions.html":{},"injectables/PersistedCronService.html":{},"classes/QueryFailedFilter.html":{},"classes/R.html":{},"guards/RequestGuard.html":{},"guards/ResponseGuard.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{},"controllers/TagsController.html":{},"injectables/TagsService.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"classes/ValidationFailedFilter.html":{},"miscellaneous/variables.html":{}}}],["constraint",{"_index":1457,"title":{},"body":{"classes/QueryFailedFilter.html":{}}}],["constraintviolationerror",{"_index":1441,"title":{},"body":{"classes/QueryFailedFilter.html":{}}}],["constructor",{"_index":145,"title":{},"body":{"classes/ApiException.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/CronService.html":{},"classes/CrudController.html":{},"classes/CrudRoutesFactory.html":{},"classes/CrudService.html":{},"injectables/EmailSchedulingService.html":{},"injectables/EmailService.html":{},"controllers/HealthController.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/LoginCredsDto.html":{},"injectables/PersistedCronService.html":{},"injectables/TagsService.html":{},"injectables/UsersService.html":{}}}],["constructor(@inject(tag.name",{"_index":1576,"title":{},"body":{"injectables/TagsService.html":{}}}],["constructor(@inject(user.name",{"_index":1645,"title":{},"body":{"injectables/UsersService.html":{}}}],["constructor(authservice",{"_index":1383,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["constructor(configservice",{"_index":1246,"title":{},"body":{"injectables/EmailService.html":{},"injectables/JwtStrategy.html":{}}}],["constructor(emailservice",{"_index":1229,"title":{},"body":{"injectables/EmailSchedulingService.html":{}}}],["constructor(message",{"_index":146,"title":{},"body":{"classes/ApiException.html":{}}}],["constructor(model",{"_index":1092,"title":{},"body":{"classes/CrudService.html":{},"injectables/TagsService.html":{},"injectables/UsersService.html":{}}}],["constructor(private",{"_index":890,"title":{},"body":{"classes/CrudConfigService.html":{},"classes/CrudRoutesFactory.html":{},"classes/R.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{}}}],["constructor(protected",{"_index":1041,"title":{},"body":{"classes/CrudController.html":{},"classes/CrudService.html":{}}}],["constructor(readonly",{"_index":750,"title":{},"body":{"injectables/CronService.html":{},"controllers/EmailSchedulingController.html":{},"injectables/LocalStrategy.html":{},"injectables/PersistedCronService.html":{},"controllers/TagsController.html":{},"controllers/UsersController.html":{}}}],["constructor(schedule",{"_index":1416,"title":{},"body":{"injectables/PersistedCronService.html":{}}}],["constructor(scheduler",{"_index":701,"title":{},"body":{"injectables/CronService.html":{}}}],["constructor(service",{"_index":996,"title":{},"body":{"classes/CrudController.html":{}}}],["constructor(target",{"_index":1067,"title":{},"body":{"classes/CrudRoutesFactory.html":{}}}],["constructor(userservice",{"_index":395,"title":{},"body":{"injectables/AuthService.html":{}}}],["contact",{"_index":115,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/Result.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{},"interfaces/User.html":{}}}],["content",{"_index":1199,"title":{},"body":{"classes/EmailScheduleDto.html":{}}}],["context",{"_index":1264,"title":{},"body":{"injectables/ExcludeNullUndefinedInterceptor.html":{},"guards/RequestGuard.html":{},"interfaces/Response.html":{},"guards/ResponseGuard.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/TransformInterceptor.html":{}}}],["continue",{"_index":311,"title":{},"body":{"modules/AppModule.html":{}}}],["controller",{"_index":196,"title":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/EmailSchedulingController.html":{},"controllers/HealthController.html":{},"controllers/TagsController.html":{},"controllers/UsersController.html":{}},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"classes/CrudController.html":{},"controllers/EmailSchedulingController.html":{},"controllers/HealthController.html":{},"classes/LoginCredsDto.html":{},"controllers/TagsController.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["controller(appcontroller.path",{"_index":210,"title":{},"body":{"controllers/AppController.html":{}}}],["controller(authcontroller.path",{"_index":355,"title":{},"body":{"controllers/AuthController.html":{},"classes/LoginCredsDto.html":{}}}],["controller(emailschedulingcontroller.path",{"_index":1218,"title":{},"body":{"controllers/EmailSchedulingController.html":{}}}],["controller(healthcontroller.path",{"_index":1297,"title":{},"body":{"controllers/HealthController.html":{}}}],["controller(tagscontroller.path",{"_index":1555,"title":{},"body":{"controllers/TagsController.html":{}}}],["controller(userscontroller.path",{"_index":1627,"title":{},"body":{"controllers/UsersController.html":{}}}],["controllers",{"_index":198,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"modules/EmailModule.html":{},"controllers/EmailSchedulingController.html":{},"modules/EmailSchedulingModule.html":{},"controllers/HealthController.html":{},"controllers/TagsController.html":{},"modules/TagsModule.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["convert",{"_index":1314,"title":{},"body":{"controllers/HealthController.html":{}}}],["corporatedescription",{"_index":97,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/Result.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{},"interfaces/User.html":{}}}],["corporatename",{"_index":98,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/Result.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{},"interfaces/User.html":{}}}],["corresponding",{"_index":304,"title":{},"body":{"modules/AppModule.html":{}}}],["count",{"_index":10,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/BaseRoute.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"injectables/CronService.html":{},"classes/CrudConfigService.html":{},"interfaces/CrudOptions.html":{},"classes/CrudRoutesFactory.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetManyDefaultResponse.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/ParamOption.html":{},"interfaces/ParamsOptions.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"classes/R.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/Result.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{},"interfaces/User.html":{}}}],["coverage",{"_index":1657,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["coverimage",{"_index":55,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/Result.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{},"interfaces/User.html":{}}}],["create",{"_index":530,"title":{},"body":{"interfaces/BaseRoute.html":{},"classes/CrudConfigService.html":{},"classes/CrudController.html":{},"interfaces/CrudOptions.html":{},"classes/CrudRoutesFactory.html":{},"classes/CrudService.html":{},"interfaces/GetManyDefaultResponse.html":{},"interfaces/ICrudService.html":{},"interfaces/ParamOption.html":{},"interfaces/ParamsOptions.html":{},"classes/R.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{},"controllers/TagsController.html":{},"injectables/TagsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["create(@body",{"_index":1056,"title":{},"body":{"classes/CrudController.html":{},"controllers/TagsController.html":{},"controllers/UsersController.html":{}}}],["create(data",{"_index":1328,"title":{},"body":{"interfaces/ICrudService.html":{},"injectables/TagsService.html":{}}}],["create(input",{"_index":1005,"title":{},"body":{"classes/CrudController.html":{},"classes/CrudService.html":{},"controllers/TagsController.html":{},"injectables/TagsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["create(target",{"_index":899,"title":{},"body":{"classes/CrudConfigService.html":{},"classes/CrudRoutesFactory.html":{},"classes/R.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{}}}],["create(user",{"_index":1638,"title":{},"body":{"injectables/UsersService.html":{}}}],["created",{"_index":587,"title":{},"body":{"classes/CreateTagsDto.html":{},"classes/CreateUserDto.html":{},"classes/CrudController.html":{},"classes/CrudService.html":{},"interfaces/ITag.html":{},"interfaces/IUser.html":{},"classes/Tag.html":{},"injectables/TagsService.html":{},"classes/UpdateTagsDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"injectables/UsersService.html":{}}}],["created_at",{"_index":426,"title":{},"body":{"classes/BaseModel.html":{},"interfaces/IBaseModel.html":{},"classes/Tag.html":{},"classes/User.html":{}}}],["creategetmanydto",{"_index":1520,"title":{},"body":{"classes/SerializeHelper.html":{}}}],["creategetmanydto(dto",{"_index":867,"title":{},"body":{"classes/CrudConfigService.html":{},"classes/CrudRoutesFactory.html":{},"classes/R.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{}}}],["creategetoneresponsedto",{"_index":1521,"title":{},"body":{"classes/SerializeHelper.html":{}}}],["creategetoneresponsedto(resourcename",{"_index":874,"title":{},"body":{"classes/CrudConfigService.html":{},"classes/CrudRoutesFactory.html":{},"classes/R.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{}}}],["createmany",{"_index":531,"title":{},"body":{"interfaces/BaseRoute.html":{},"interfaces/CrudOptions.html":{},"interfaces/GetManyDefaultResponse.html":{},"interfaces/ParamOption.html":{},"interfaces/ParamsOptions.html":{}}}],["createmanybase",{"_index":502,"title":{},"body":{"interfaces/BaseRoute.html":{},"interfaces/CrudOptions.html":{},"interfaces/GetManyDefaultResponse.html":{},"interfaces/ParamOption.html":{},"interfaces/ParamsOptions.html":{},"miscellaneous/typealiases.html":{}}}],["createonebase",{"_index":501,"title":{},"body":{"interfaces/BaseRoute.html":{},"interfaces/CrudOptions.html":{},"interfaces/GetManyDefaultResponse.html":{},"interfaces/ParamOption.html":{},"interfaces/ParamsOptions.html":{},"miscellaneous/typealiases.html":{}}}],["createresponsemeta",{"_index":849,"title":{},"body":{"classes/CrudConfigService.html":{},"classes/CrudRoutesFactory.html":{},"classes/R.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{}}}],["createresponsemeta(name",{"_index":1528,"title":{},"body":{"classes/Swagger.html":{}}}],["createroutes",{"_index":1063,"title":{},"body":{"classes/CrudRoutesFactory.html":{}}}],["createroutes(routesschema",{"_index":976,"title":{},"body":{"classes/CrudConfigService.html":{},"classes/CrudRoutesFactory.html":{},"classes/R.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{}}}],["creates",{"_index":644,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/CrudController.html":{},"interfaces/IUser.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{}}}],["createtagsdto",{"_index":563,"title":{"classes/CreateTagsDto.html":{}},"body":{"classes/CreateTagsDto.html":{},"classes/CrudController.html":{},"classes/CrudService.html":{},"interfaces/ITag.html":{},"classes/Tag.html":{},"controllers/TagsController.html":{},"injectables/TagsService.html":{},"classes/UpdateTagsDto.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["createuserdto",{"_index":604,"title":{"classes/CreateUserDto.html":{}},"body":{"classes/CreateUserDto.html":{},"classes/CrudController.html":{},"classes/CrudService.html":{},"interfaces/IUser.html":{},"injectables/TagsService.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["credentials",{"_index":415,"title":{},"body":{"injectables/AuthService.html":{}}}],["cron",{"_index":676,"title":{},"body":{"injectables/CronService.html":{},"injectables/EmailSchedulingService.html":{},"injectables/PersistedCronService.html":{},"dependencies.html":{}}}],["cron(cronexpression.every_minute",{"_index":727,"title":{},"body":{"injectables/CronService.html":{}}}],["cron.service",{"_index":673,"title":{},"body":{"modules/CronModule.html":{}}}],["cron.service.ts",{"_index":1408,"title":{},"body":{"injectables/PersistedCronService.html":{},"coverage.html":{}}}],["cron.service.ts:11",{"_index":1417,"title":{},"body":{"injectables/PersistedCronService.html":{}}}],["cron.service.ts:16",{"_index":1418,"title":{},"body":{"injectables/PersistedCronService.html":{}}}],["cron.start",{"_index":1433,"title":{},"body":{"injectables/PersistedCronService.html":{}}}],["cron/cron.module",{"_index":256,"title":{},"body":{"modules/AppModule.html":{}}}],["cronexpression",{"_index":748,"title":{},"body":{"injectables/CronService.html":{}}}],["cronjob",{"_index":749,"title":{},"body":{"injectables/CronService.html":{},"injectables/EmailSchedulingService.html":{}}}],["cronjob(`${seconds",{"_index":766,"title":{},"body":{"injectables/CronService.html":{}}}],["cronjob(date",{"_index":1235,"title":{},"body":{"injectables/EmailSchedulingService.html":{}}}],["cronjob(job.time",{"_index":1430,"title":{},"body":{"injectables/PersistedCronService.html":{}}}],["cronmodule",{"_index":227,"title":{"modules/CronModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CronModule.html":{},"modules.html":{},"overview.html":{}}}],["cronmodules",{"_index":291,"title":{},"body":{"modules/AppModule.html":{}}}],["cronservice",{"_index":670,"title":{"injectables/CronService.html":{}},"body":{"modules/CronModule.html":{},"injectables/CronService.html":{},"coverage.html":{},"overview.html":{}}}],["cronservice.count",{"_index":752,"title":{},"body":{"injectables/CronService.html":{}}}],["crud",{"_index":989,"title":{},"body":{"classes/CrudController.html":{},"classes/CrudService.html":{},"interfaces/ICrudService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["crud.service.interface",{"_index":1040,"title":{},"body":{"classes/CrudController.html":{},"classes/CrudService.html":{}}}],["crudconfigservice",{"_index":796,"title":{"classes/CrudConfigService.html":{}},"body":{"classes/CrudConfigService.html":{},"classes/CrudRoutesFactory.html":{},"classes/R.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{},"coverage.html":{}}}],["crudconfigservice.config",{"_index":884,"title":{},"body":{"classes/CrudConfigService.html":{},"classes/CrudRoutesFactory.html":{},"classes/R.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{}}}],["crudconfigservice.config.query",{"_index":927,"title":{},"body":{"classes/CrudConfigService.html":{},"classes/CrudRoutesFactory.html":{},"classes/R.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{}}}],["crudconfigservice.config.serialize",{"_index":931,"title":{},"body":{"classes/CrudConfigService.html":{},"classes/CrudRoutesFactory.html":{},"classes/R.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{}}}],["crudcontroller",{"_index":984,"title":{"classes/CrudController.html":{}},"body":{"classes/CrudController.html":{},"controllers/TagsController.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["crudoptions",{"_index":516,"title":{"interfaces/CrudOptions.html":{}},"body":{"interfaces/BaseRoute.html":{},"classes/CrudConfigService.html":{},"interfaces/CrudOptions.html":{},"classes/CrudRoutesFactory.html":{},"interfaces/GetManyDefaultResponse.html":{},"interfaces/ParamOption.html":{},"interfaces/ParamsOptions.html":{},"classes/R.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{},"coverage.html":{}}}],["crudroutesfactory",{"_index":888,"title":{"classes/CrudRoutesFactory.html":{}},"body":{"classes/CrudConfigService.html":{},"classes/CrudRoutesFactory.html":{},"classes/R.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{},"coverage.html":{}}}],["crudroutesfactory(target",{"_index":900,"title":{},"body":{"classes/CrudConfigService.html":{},"classes/CrudRoutesFactory.html":{},"classes/R.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{}}}],["crudroutesfactory.create(target",{"_index":1891,"title":{},"body":{"miscellaneous/variables.html":{}}}],["crudroutesfactory.getroutesschema",{"_index":909,"title":{},"body":{"classes/CrudConfigService.html":{},"classes/CrudRoutesFactory.html":{},"classes/R.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{}}}],["crudroutesfactory::constructor",{"_index":894,"title":{},"body":{"classes/CrudConfigService.html":{},"classes/CrudRoutesFactory.html":{},"classes/R.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{}}}],["crudservice",{"_index":1086,"title":{"classes/CrudService.html":{}},"body":{"classes/CrudService.html":{},"injectables/TagsService.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["crudservice:112",{"_index":1575,"title":{},"body":{"injectables/TagsService.html":{},"injectables/UsersService.html":{}}}],["crudservice:27",{"_index":1569,"title":{},"body":{"injectables/TagsService.html":{},"injectables/UsersService.html":{}}}],["crudservice:38",{"_index":1573,"title":{},"body":{"injectables/TagsService.html":{},"injectables/UsersService.html":{}}}],["crudservice:56",{"_index":1570,"title":{},"body":{"injectables/TagsService.html":{},"injectables/UsersService.html":{}}}],["crudservice:67",{"_index":1572,"title":{},"body":{"injectables/TagsService.html":{},"injectables/UsersService.html":{}}}],["crudservice:78",{"_index":1571,"title":{},"body":{"injectables/TagsService.html":{},"injectables/UsersService.html":{}}}],["crudservice:89",{"_index":1574,"title":{},"body":{"injectables/TagsService.html":{},"injectables/UsersService.html":{}}}],["crudservice:99",{"_index":1568,"title":{},"body":{"injectables/TagsService.html":{},"injectables/UsersService.html":{}}}],["ctx",{"_index":1451,"title":{},"body":{"classes/QueryFailedFilter.html":{},"classes/ValidationFailedFilter.html":{}}}],["ctx.getrequest",{"_index":1454,"title":{},"body":{"classes/QueryFailedFilter.html":{},"classes/ValidationFailedFilter.html":{}}}],["ctx.getresponse",{"_index":1453,"title":{},"body":{"classes/QueryFailedFilter.html":{},"classes/ValidationFailedFilter.html":{}}}],["current",{"_index":757,"title":{},"body":{"injectables/CronService.html":{},"interfaces/IPaginationResult.html":{},"classes/PaginationParams.html":{}}}],["currentpage",{"_index":1156,"title":{},"body":{"classes/CustomQueryBuilder.html":{}}}],["custom",{"_index":469,"title":{},"body":{"classes/BaseModel.html":{},"interfaces/IBaseModel.html":{}}}],["customquerybuilder",{"_index":441,"title":{"classes/CustomQueryBuilder.html":{}},"body":{"classes/BaseModel.html":{},"classes/CustomQueryBuilder.html":{},"interfaces/IBaseModel.html":{},"classes/Tag.html":{},"classes/User.html":{},"coverage.html":{}}}],["data",{"_index":11,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"controllers/AuthController.html":{},"classes/BaseModel.html":{},"interfaces/BaseRoute.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"classes/CrudConfigService.html":{},"classes/CrudController.html":{},"interfaces/CrudOptions.html":{},"classes/CrudRoutesFactory.html":{},"classes/CrudService.html":{},"classes/CustomQueryBuilder.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetManyDefaultResponse.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"controllers/HealthController.html":{},"interfaces/IBaseModel.html":{},"interfaces/ICrudService.html":{},"interfaces/IPaginationResult.html":{},"classes/LoginCredsDto.html":{},"classes/PaginationParams.html":{},"interfaces/ParamOption.html":{},"interfaces/ParamsOptions.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"classes/QueryFailedFilter.html":{},"classes/R.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/Response.html":{},"guards/ResponseGuard.html":{},"interfaces/Result.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{},"controllers/TagsController.html":{},"injectables/TagsService.html":{},"injectables/TransformInterceptor.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"classes/ValidationFailedFilter.html":{},"interfaces/User.html":{}}}],["data.name",{"_index":1579,"title":{},"body":{"injectables/TagsService.html":{}}}],["database",{"_index":284,"title":{},"body":{"modules/AppModule.html":{},"classes/CreateTagsDto.html":{},"classes/CreateUserDto.html":{},"classes/CrudController.html":{},"interfaces/ITag.html":{},"interfaces/IUser.html":{},"classes/QueryFailedFilter.html":{},"classes/Tag.html":{},"classes/UpdateTagsDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"miscellaneous/variables.html":{}}}],["database'})@post",{"_index":1619,"title":{},"body":{"controllers/UsersController.html":{}}}],["database/database.module",{"_index":257,"title":{},"body":{"modules/AppModule.html":{}}}],["database/models/base.model",{"_index":575,"title":{},"body":{"classes/CreateTagsDto.html":{},"classes/CreateUserDto.html":{},"classes/CrudController.html":{},"classes/CrudService.html":{},"interfaces/ITag.html":{},"interfaces/IUser.html":{},"classes/Tag.html":{},"classes/UpdateTagsDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{}}}],["databasemodule",{"_index":228,"title":{"modules/DatabaseModule.html":{}},"body":{"modules/AppModule.html":{},"modules/DatabaseModule.html":{},"modules.html":{},"overview.html":{}}}],["databaseproviders",{"_index":1180,"title":{},"body":{"modules/DatabaseModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["dataerror",{"_index":1442,"title":{},"body":{"classes/QueryFailedFilter.html":{}}}],["dataobj",{"_index":1514,"title":{},"body":{"guards/ResponseGuard.html":{}}}],["datapoints",{"_index":1301,"title":{},"body":{"controllers/HealthController.html":{}}}],["date",{"_index":111,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"injectables/CronService.html":{},"classes/EmailScheduleDto.html":{},"injectables/EmailSchedulingService.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/Result.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{},"miscellaneous/variables.html":{},"interfaces/User.html":{}}}],["date().toisostring",{"_index":181,"title":{},"body":{"classes/ApiException.html":{},"classes/BaseModel.html":{},"interfaces/IBaseModel.html":{},"classes/QueryFailedFilter.html":{},"classes/ValidationFailedFilter.html":{}}}],["date(emailschedule.date",{"_index":1234,"title":{},"body":{"injectables/EmailSchedulingService.html":{}}}],["date.now",{"_index":1320,"title":{},"body":{"controllers/HealthController.html":{}}}],["date.tolocaledatestring",{"_index":1243,"title":{},"body":{"injectables/EmailSchedulingService.html":{}}}],["db",{"_index":460,"title":{},"body":{"classes/BaseModel.html":{},"interfaces/IBaseModel.html":{},"classes/QueryFailedFilter.html":{},"dependencies.html":{}}}],["dberrors",{"_index":459,"title":{},"body":{"classes/BaseModel.html":{},"interfaces/IBaseModel.html":{}}}],["dbpassword",{"_index":399,"title":{},"body":{"injectables/AuthService.html":{}}}],["debug",{"_index":1188,"title":{},"body":{"modules/DatabaseModule.html":{},"miscellaneous/variables.html":{}}}],["declarations",{"_index":220,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CronModule.html":{},"classes/CrudConfigService.html":{},"classes/CrudRoutesFactory.html":{},"modules/EmailModule.html":{},"modules/EmailSchedulingModule.html":{},"classes/R.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{},"modules/TagsModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["declare",{"_index":498,"title":{},"body":{"interfaces/BaseRoute.html":{},"injectables/CronService.html":{},"interfaces/CrudOptions.html":{},"interfaces/GetManyDefaultResponse.html":{},"interfaces/ParamOption.html":{},"interfaces/ParamsOptions.html":{}}}],["decorators",{"_index":151,"title":{},"body":{"classes/ApiException.html":{},"controllers/AppController.html":{},"controllers/AuthController.html":{},"classes/CreateTagsDto.html":{},"classes/CreateUserDto.html":{},"injectables/CronService.html":{},"classes/CrudController.html":{},"classes/EmailScheduleDto.html":{},"controllers/EmailSchedulingController.html":{},"controllers/HealthController.html":{},"classes/LoginCredsDto.html":{},"classes/PaginationParams.html":{},"controllers/TagsController.html":{},"controllers/UsersController.html":{}}}],["deepmerge",{"_index":806,"title":{},"body":{"classes/CrudConfigService.html":{},"classes/CrudRoutesFactory.html":{},"classes/R.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{},"dependencies.html":{}}}],["default",{"_index":436,"title":{},"body":{"classes/BaseModel.html":{},"injectables/CronService.html":{},"classes/CrudConfigService.html":{},"classes/CrudRoutesFactory.html":{},"classes/CrudService.html":{},"controllers/EmailSchedulingController.html":{},"injectables/EmailSchedulingService.html":{},"injectables/EmailService.html":{},"injectables/LocalStrategy.html":{},"injectables/PersistedCronService.html":{},"classes/R.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{},"classes/Tag.html":{},"injectables/TagsService.html":{},"interfaces/TokenPayload.html":{},"classes/User.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["default('development",{"_index":280,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["define",{"_index":208,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/EmailSchedulingController.html":{},"controllers/HealthController.html":{},"injectables/PersistedCronService.html":{},"controllers/TagsController.html":{},"controllers/UsersController.html":{}}}],["defined",{"_index":148,"title":{},"body":{"classes/ApiException.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/BaseModel.html":{},"classes/CreateTagsDto.html":{},"classes/CreateUserDto.html":{},"injectables/CronService.html":{},"classes/CrudConfigService.html":{},"classes/CrudController.html":{},"classes/CrudRoutesFactory.html":{},"classes/CrudService.html":{},"classes/CustomQueryBuilder.html":{},"classes/EmailScheduleDto.html":{},"controllers/EmailSchedulingController.html":{},"injectables/EmailSchedulingService.html":{},"injectables/EmailService.html":{},"injectables/ExcludeNullUndefinedInterceptor.html":{},"controllers/HealthController.html":{},"interfaces/ICrudService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/LoginCredsDto.html":{},"classes/PaginationParams.html":{},"interfaces/ParamsOptions.html":{},"injectables/PersistedCronService.html":{},"classes/QueryFailedFilter.html":{},"classes/R.html":{},"guards/RequestGuard.html":{},"guards/ResponseGuard.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{},"classes/Tag.html":{},"controllers/TagsController.html":{},"injectables/TagsService.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/TransformInterceptor.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"classes/ValidationFailedFilter.html":{}}}],["delete",{"_index":534,"title":{},"body":{"interfaces/BaseRoute.html":{},"injectables/CronService.html":{},"classes/CrudController.html":{},"interfaces/CrudOptions.html":{},"classes/CrudService.html":{},"interfaces/GetManyDefaultResponse.html":{},"interfaces/ParamOption.html":{},"interfaces/ParamsOptions.html":{},"controllers/TagsController.html":{},"controllers/UsersController.html":{}}}],["delete(':id",{"_index":1052,"title":{},"body":{"classes/CrudController.html":{}}}],["deletecron",{"_index":691,"title":{},"body":{"injectables/CronService.html":{}}}],["deletecron(name",{"_index":717,"title":{},"body":{"injectables/CronService.html":{}}}],["deleted",{"_index":775,"title":{},"body":{"injectables/CronService.html":{},"classes/CrudController.html":{}}}],["deleted_at",{"_index":427,"title":{},"body":{"classes/BaseModel.html":{},"classes/CrudService.html":{},"interfaces/IBaseModel.html":{},"classes/Tag.html":{},"classes/User.html":{}}}],["deleteinterval",{"_index":692,"title":{},"body":{"injectables/CronService.html":{}}}],["deleteinterval(name",{"_index":720,"title":{},"body":{"injectables/CronService.html":{}}}],["deleteonebase",{"_index":505,"title":{},"body":{"interfaces/BaseRoute.html":{},"interfaces/CrudOptions.html":{},"interfaces/GetManyDefaultResponse.html":{},"interfaces/ParamOption.html":{},"interfaces/ParamsOptions.html":{},"miscellaneous/typealiases.html":{}}}],["deletes",{"_index":1109,"title":{},"body":{"classes/CrudService.html":{},"injectables/TagsService.html":{},"injectables/UsersService.html":{}}}],["deletetimeout",{"_index":693,"title":{},"body":{"injectables/CronService.html":{}}}],["deletetimeout(name",{"_index":722,"title":{},"body":{"injectables/CronService.html":{}}}],["dependencies",{"_index":218,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CronModule.html":{},"modules/EmailModule.html":{},"modules/EmailSchedulingModule.html":{},"modules/TagsModule.html":{},"modules/UsersModule.html":{},"dependencies.html":{},"overview.html":{}}}],["deps",{"_index":292,"title":{},"body":{"modules/AppModule.html":{}}}],["desc",{"_index":1340,"title":{},"body":{"interfaces/IPaginationResult.html":{},"classes/PaginationParams.html":{},"miscellaneous/enumerations.html":{}}}],["described",{"_index":302,"title":{},"body":{"modules/AppModule.html":{}}}],["describes",{"_index":1342,"title":{},"body":{"interfaces/IPaginationResult.html":{},"classes/PaginationParams.html":{}}}],["description",{"_index":188,"title":{},"body":{"classes/ApiException.html":{},"injectables/CronService.html":{},"classes/CrudConfigService.html":{},"classes/CrudController.html":{},"classes/CrudRoutesFactory.html":{},"classes/CrudService.html":{},"injectables/ExcludeNullUndefinedInterceptor.html":{},"interfaces/ICrudService.html":{},"interfaces/IPaginationResult.html":{},"classes/PaginationParams.html":{},"injectables/PersistedCronService.html":{},"classes/R.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{},"injectables/TimeoutInterceptor.html":{},"controllers/UsersController.html":{},"index.html":{}}}],["development",{"_index":1830,"title":{},"body":{"index.html":{}}}],["disable",{"_index":205,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"classes/BaseModel.html":{},"interfaces/BaseRoute.html":{},"injectables/CronService.html":{},"classes/CrudConfigService.html":{},"interfaces/CrudOptions.html":{},"classes/CrudRoutesFactory.html":{},"classes/CustomQueryBuilder.html":{},"modules/DatabaseModule.html":{},"controllers/EmailSchedulingController.html":{},"injectables/EmailSchedulingService.html":{},"injectables/ExcludeNullUndefinedInterceptor.html":{},"interfaces/GetManyDefaultResponse.html":{},"controllers/HealthController.html":{},"interfaces/IBaseModel.html":{},"injectables/JwtStrategy.html":{},"classes/LoginCredsDto.html":{},"interfaces/ParamOption.html":{},"interfaces/ParamsOptions.html":{},"classes/QueryFailedFilter.html":{},"classes/R.html":{},"guards/RequestGuard.html":{},"interfaces/Response.html":{},"guards/ResponseGuard.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{},"controllers/TagsController.html":{},"injectables/TransformInterceptor.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"classes/ValidationFailedFilter.html":{},"miscellaneous/variables.html":{}}}],["disabled",{"_index":513,"title":{},"body":{"interfaces/BaseRoute.html":{},"interfaces/CrudOptions.html":{},"interfaces/GetManyDefaultResponse.html":{},"interfaces/ParamOption.html":{},"interfaces/ParamsOptions.html":{}}}],["distance",{"_index":105,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/Result.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{},"interfaces/User.html":{}}}],["distanceaway",{"_index":106,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/Result.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{},"interfaces/User.html":{}}}],["dns",{"_index":1298,"title":{},"body":{"controllers/HealthController.html":{}}}],["dnshealthindicator",{"_index":1291,"title":{},"body":{"controllers/HealthController.html":{}}}],["docs",{"_index":1309,"title":{},"body":{"controllers/HealthController.html":{}}}],["documentation",{"_index":1658,"title":{},"body":{"coverage.html":{}}}],["domain",{"_index":1035,"title":{},"body":{"classes/CrudController.html":{},"interfaces/IPaginationResult.html":{},"classes/PaginationParams.html":{}}}],["don't",{"_index":647,"title":{},"body":{"classes/CreateUserDto.html":{},"interfaces/IUser.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{}}}],["dotenv",{"_index":1766,"title":{},"body":{"dependencies.html":{}}}],["down",{"_index":1709,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["down(knex",{"_index":1811,"title":{},"body":{"miscellaneous/functions.html":{}}}],["dto",{"_index":517,"title":{},"body":{"interfaces/BaseRoute.html":{},"classes/CrudConfigService.html":{},"interfaces/CrudOptions.html":{},"classes/CrudRoutesFactory.html":{},"interfaces/GetManyDefaultResponse.html":{},"interfaces/ParamOption.html":{},"interfaces/ParamsOptions.html":{},"classes/R.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{}}}],["dumb",{"_index":632,"title":{},"body":{"classes/CreateUserDto.html":{},"interfaces/IUser.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{}}}],["dynamic",{"_index":541,"title":{},"body":{"interfaces/BaseRoute.html":{},"interfaces/CrudOptions.html":{},"interfaces/GetManyDefaultResponse.html":{},"interfaces/ParamOption.html":{},"interfaces/ParamsOptions.html":{}}}],["dynamically",{"_index":708,"title":{},"body":{"injectables/CronService.html":{}}}],["d{4",{"_index":1905,"title":{},"body":{"miscellaneous/variables.html":{}}}],["e",{"_index":761,"title":{},"body":{"injectables/CronService.html":{},"classes/CrudService.html":{},"injectables/TimeoutInterceptor.html":{}}}],["e2e",{"_index":1838,"title":{},"body":{"index.html":{}}}],["each",{"_index":639,"title":{},"body":{"classes/CreateUserDto.html":{},"injectables/CronService.html":{},"injectables/ExcludeNullUndefinedInterceptor.html":{},"interfaces/IUser.html":{},"injectables/PersistedCronService.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{}}}],["efficient",{"_index":1821,"title":{},"body":{"index.html":{}}}],["email",{"_index":352,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"classes/CrudService.html":{},"controllers/EmailSchedulingController.html":{},"interfaces/ICrudService.html":{},"interfaces/IUser.html":{},"injectables/LocalStrategy.html":{},"classes/LoginCredsDto.html":{},"injectables/TagsService.html":{},"interfaces/TokenPayload.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["email'})@get",{"_index":1621,"title":{},"body":{"controllers/UsersController.html":{}}}],["email.service",{"_index":1196,"title":{},"body":{"modules/EmailModule.html":{}}}],["email/email.module",{"_index":1226,"title":{},"body":{"modules/EmailSchedulingModule.html":{}}}],["email/email.service",{"_index":1233,"title":{},"body":{"injectables/EmailSchedulingService.html":{}}}],["emailmodule",{"_index":1190,"title":{"modules/EmailModule.html":{}},"body":{"modules/EmailModule.html":{},"modules/EmailSchedulingModule.html":{},"modules.html":{},"overview.html":{}}}],["emailschedule",{"_index":1213,"title":{},"body":{"controllers/EmailSchedulingController.html":{},"injectables/EmailSchedulingService.html":{}}}],["emailschedule.content",{"_index":1239,"title":{},"body":{"injectables/EmailSchedulingService.html":{}}}],["emailschedule.dto",{"_index":1214,"title":{},"body":{"controllers/EmailSchedulingController.html":{},"injectables/EmailSchedulingService.html":{}}}],["emailschedule.recipient",{"_index":1240,"title":{},"body":{"injectables/EmailSchedulingService.html":{}}}],["emailschedule.subject",{"_index":1237,"title":{},"body":{"injectables/EmailSchedulingService.html":{}}}],["emailscheduledto",{"_index":1197,"title":{"classes/EmailScheduleDto.html":{}},"body":{"classes/EmailScheduleDto.html":{},"controllers/EmailSchedulingController.html":{},"injectables/EmailSchedulingService.html":{},"coverage.html":{}}}],["emailscheduling.controller",{"_index":1227,"title":{},"body":{"modules/EmailSchedulingModule.html":{}}}],["emailscheduling.service",{"_index":1216,"title":{},"body":{"controllers/EmailSchedulingController.html":{},"modules/EmailSchedulingModule.html":{}}}],["emailscheduling/emailscheduling.module",{"_index":258,"title":{},"body":{"modules/AppModule.html":{}}}],["emailschedulingcontroller",{"_index":1207,"title":{"controllers/EmailSchedulingController.html":{}},"body":{"controllers/EmailSchedulingController.html":{},"modules/EmailSchedulingModule.html":{},"coverage.html":{}}}],["emailschedulingmodule",{"_index":229,"title":{"modules/EmailSchedulingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/EmailSchedulingModule.html":{},"modules.html":{},"overview.html":{}}}],["emailschedulingservice",{"_index":1215,"title":{"injectables/EmailSchedulingService.html":{}},"body":{"controllers/EmailSchedulingController.html":{},"modules/EmailSchedulingModule.html":{},"injectables/EmailSchedulingService.html":{},"coverage.html":{},"overview.html":{}}}],["emailservice",{"_index":1194,"title":{"injectables/EmailService.html":{}},"body":{"modules/EmailModule.html":{},"injectables/EmailSchedulingService.html":{},"injectables/EmailService.html":{},"coverage.html":{},"overview.html":{}}}],["emergencytype",{"_index":107,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/Result.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{},"interfaces/User.html":{}}}],["empty",{"_index":1149,"title":{},"body":{"classes/CustomQueryBuilder.html":{},"injectables/ExcludeNullUndefinedInterceptor.html":{},"injectables/LocalStrategy.html":{},"miscellaneous/functions.html":{}}}],["enable",{"_index":287,"title":{},"body":{"modules/AppModule.html":{},"interfaces/BaseRoute.html":{},"classes/CrudConfigService.html":{},"interfaces/CrudOptions.html":{},"classes/CrudRoutesFactory.html":{},"interfaces/GetManyDefaultResponse.html":{},"interfaces/ParamOption.html":{},"interfaces/ParamsOptions.html":{},"classes/R.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{},"miscellaneous/variables.html":{}}}],["enableroutes",{"_index":1064,"title":{},"body":{"classes/CrudRoutesFactory.html":{}}}],["enableroutes(routesschema",{"_index":970,"title":{},"body":{"classes/CrudConfigService.html":{},"classes/CrudRoutesFactory.html":{},"classes/R.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{}}}],["end",{"_index":1596,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["enforce",{"_index":1327,"title":{},"body":{"interfaces/ICrudService.html":{}}}],["enteredpassword",{"_index":401,"title":{},"body":{"injectables/AuthService.html":{}}}],["entries",{"_index":1099,"title":{},"body":{"classes/CrudService.html":{},"injectables/TagsService.html":{},"injectables/UsersService.html":{}}}],["entry",{"_index":1096,"title":{},"body":{"classes/CrudService.html":{},"injectables/TagsService.html":{},"injectables/UsersService.html":{}}}],["enum",{"_index":511,"title":{},"body":{"interfaces/BaseRoute.html":{},"interfaces/CrudOptions.html":{},"interfaces/GetManyDefaultResponse.html":{},"interfaces/IPaginationResult.html":{},"classes/PaginationParams.html":{},"interfaces/ParamOption.html":{},"interfaces/ParamsOptions.html":{}}}],["enum.type",{"_index":497,"title":{},"body":{"interfaces/BaseRoute.html":{},"interfaces/CrudOptions.html":{},"interfaces/GetManyDefaultResponse.html":{},"interfaces/ParamOption.html":{},"interfaces/ParamsOptions.html":{}}}],["enumerations",{"_index":1794,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["eq",{"_index":1913,"title":{},"body":{"miscellaneous/variables.html":{}}}],["err",{"_index":1312,"title":{},"body":{"controllers/HealthController.html":{}}}],["error",{"_index":12,"title":{},"body":{"interfaces/APIResponse.html":{},"classes/ApiException.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"injectables/CronService.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/IPaginationResult.html":{},"interfaces/ITryRequest.html":{},"classes/PaginationParams.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"guards/ResponseGuard.html":{},"interfaces/Result.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{},"miscellaneous/typealiases.html":{},"interfaces/User.html":{}}}],["error(error",{"_index":1504,"title":{},"body":{"guards/ResponseGuard.html":{}}}],["error.errors",{"_index":1510,"title":{},"body":{"guards/ResponseGuard.html":{}}}],["error.message",{"_index":1509,"title":{},"body":{"guards/ResponseGuard.html":{}}}],["errorhash",{"_index":1655,"title":{},"body":{"classes/ValidationFailedFilter.html":{}}}],["errors",{"_index":140,"title":{},"body":{"classes/ApiException.html":{},"classes/BaseModel.html":{},"interfaces/IBaseModel.html":{},"classes/QueryFailedFilter.html":{},"guards/ResponseGuard.html":{},"dependencies.html":{}}}],["errors.decorator",{"_index":1038,"title":{},"body":{"classes/CrudController.html":{}}}],["errors.decorator.ts",{"_index":139,"title":{},"body":{"classes/ApiException.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["errors.decorator.ts:22",{"_index":158,"title":{},"body":{"classes/ApiException.html":{}}}],["errors.decorator.ts:24",{"_index":155,"title":{},"body":{"classes/ApiException.html":{}}}],["errors.decorator.ts:26",{"_index":157,"title":{},"body":{"classes/ApiException.html":{}}}],["errors.decorator.ts:28",{"_index":153,"title":{},"body":{"classes/ApiException.html":{}}}],["errors.decorator.ts:30",{"_index":154,"title":{},"body":{"classes/ApiException.html":{}}}],["errors.decorator.ts:32",{"_index":159,"title":{},"body":{"classes/ApiException.html":{}}}],["errors.decorator.ts:34",{"_index":156,"title":{},"body":{"classes/ApiException.html":{}}}],["errors.decorator.ts:36",{"_index":149,"title":{},"body":{"classes/ApiException.html":{}}}],["eslint",{"_index":204,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"classes/BaseModel.html":{},"interfaces/BaseRoute.html":{},"injectables/CronService.html":{},"classes/CrudConfigService.html":{},"interfaces/CrudOptions.html":{},"classes/CrudRoutesFactory.html":{},"classes/CustomQueryBuilder.html":{},"modules/DatabaseModule.html":{},"controllers/EmailSchedulingController.html":{},"injectables/EmailSchedulingService.html":{},"injectables/ExcludeNullUndefinedInterceptor.html":{},"interfaces/GetManyDefaultResponse.html":{},"controllers/HealthController.html":{},"interfaces/IBaseModel.html":{},"injectables/JwtStrategy.html":{},"classes/LoginCredsDto.html":{},"interfaces/ParamOption.html":{},"interfaces/ParamsOptions.html":{},"classes/QueryFailedFilter.html":{},"classes/R.html":{},"guards/RequestGuard.html":{},"interfaces/Response.html":{},"guards/ResponseGuard.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{},"controllers/TagsController.html":{},"injectables/TransformInterceptor.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"classes/ValidationFailedFilter.html":{},"miscellaneous/variables.html":{}}}],["eslint/ban",{"_index":475,"title":{},"body":{"classes/BaseModel.html":{},"interfaces/BaseRoute.html":{},"interfaces/CrudOptions.html":{},"classes/CustomQueryBuilder.html":{},"interfaces/GetManyDefaultResponse.html":{},"interfaces/IBaseModel.html":{},"interfaces/ParamOption.html":{},"interfaces/ParamsOptions.html":{}}}],["eslint/no",{"_index":361,"title":{},"body":{"controllers/AuthController.html":{},"interfaces/BaseRoute.html":{},"injectables/CronService.html":{},"interfaces/CrudOptions.html":{},"classes/CustomQueryBuilder.html":{},"injectables/EmailSchedulingService.html":{},"injectables/ExcludeNullUndefinedInterceptor.html":{},"interfaces/GetManyDefaultResponse.html":{},"controllers/HealthController.html":{},"injectables/JwtStrategy.html":{},"classes/LoginCredsDto.html":{},"interfaces/ParamOption.html":{},"interfaces/ParamsOptions.html":{},"classes/QueryFailedFilter.html":{},"interfaces/Response.html":{},"guards/ResponseGuard.html":{},"injectables/TransformInterceptor.html":{},"injectables/UsersService.html":{},"classes/ValidationFailedFilter.html":{}}}],["eslint/require",{"_index":383,"title":{},"body":{"modules/AuthModule.html":{},"modules/DatabaseModule.html":{},"controllers/EmailSchedulingController.html":{},"injectables/EmailSchedulingService.html":{},"miscellaneous/variables.html":{}}}],["eslint/restrict",{"_index":321,"title":{},"body":{"modules/AppModule.html":{},"injectables/CronService.html":{},"controllers/HealthController.html":{}}}],["example",{"_index":349,"title":{},"body":{"controllers/AuthController.html":{},"classes/CreateUserDto.html":{},"interfaces/IUser.html":{},"classes/LoginCredsDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{}}}],["exception",{"_index":1450,"title":{},"body":{"classes/QueryFailedFilter.html":{},"classes/ValidationFailedFilter.html":{}}}],["exceptionfilter",{"_index":1438,"title":{},"body":{"classes/QueryFailedFilter.html":{},"classes/ValidationFailedFilter.html":{}}}],["excludenullundefinedinterceptor",{"_index":1253,"title":{"injectables/ExcludeNullUndefinedInterceptor.html":{}},"body":{"injectables/ExcludeNullUndefinedInterceptor.html":{},"coverage.html":{}}}],["executing",{"_index":781,"title":{},"body":{"injectables/CronService.html":{}}}],["executioncontext",{"_index":1261,"title":{},"body":{"injectables/ExcludeNullUndefinedInterceptor.html":{},"guards/RequestGuard.html":{},"interfaces/Response.html":{},"guards/ResponseGuard.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/TransformInterceptor.html":{}}}],["exists",{"_index":1129,"title":{},"body":{"classes/CustomQueryBuilder.html":{}}}],["expiresin",{"_index":387,"title":{},"body":{"modules/AuthModule.html":{}}}],["export",{"_index":27,"title":{},"body":{"interfaces/APIResponse.html":{},"classes/ApiException.html":{},"controllers/AppController.html":{},"interfaces/AppLaunchAction.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/BaseModel.html":{},"interfaces/BaseRoute.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"classes/CreateTagsDto.html":{},"classes/CreateUserDto.html":{},"modules/CronModule.html":{},"injectables/CronService.html":{},"classes/CrudConfigService.html":{},"classes/CrudController.html":{},"interfaces/CrudOptions.html":{},"classes/CrudRoutesFactory.html":{},"classes/CrudService.html":{},"classes/CustomQueryBuilder.html":{},"modules/DatabaseModule.html":{},"modules/EmailModule.html":{},"classes/EmailScheduleDto.html":{},"controllers/EmailSchedulingController.html":{},"modules/EmailSchedulingModule.html":{},"injectables/EmailSchedulingService.html":{},"injectables/EmailService.html":{},"injectables/ExcludeNullUndefinedInterceptor.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetManyDefaultResponse.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"controllers/HealthController.html":{},"interfaces/IBaseModel.html":{},"interfaces/ICrudService.html":{},"interfaces/IPaginationResult.html":{},"interfaces/ITag.html":{},"interfaces/ITryRequest.html":{},"interfaces/IUser.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/LoginCredsDto.html":{},"classes/PaginationParams.html":{},"interfaces/ParamOption.html":{},"interfaces/ParamsOptions.html":{},"injectables/PersistedCronService.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"classes/QueryFailedFilter.html":{},"classes/R.html":{},"guards/RequestGuard.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/Response.html":{},"guards/ResponseGuard.html":{},"interfaces/Result.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{},"classes/Tag.html":{},"controllers/TagsController.html":{},"modules/TagsModule.html":{},"injectables/TagsService.html":{},"injectables/TimeoutInterceptor.html":{},"interfaces/TokenPayload.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateTagsDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"classes/ValidationFailedFilter.html":{},"interfaces/User.html":{}}}],["exports",{"_index":223,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CronModule.html":{},"modules/DatabaseModule.html":{},"modules/EmailModule.html":{},"modules/EmailSchedulingModule.html":{},"modules/TagsModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["express",{"_index":344,"title":{},"body":{"controllers/AuthController.html":{},"classes/LoginCredsDto.html":{},"dependencies.html":{}}}],["expression",{"_index":453,"title":{},"body":{"classes/BaseModel.html":{},"interfaces/IBaseModel.html":{},"classes/Tag.html":{},"classes/User.html":{}}}],["expression.tostring",{"_index":478,"title":{},"body":{"classes/BaseModel.html":{},"interfaces/IBaseModel.html":{}}}],["expressions",{"_index":323,"title":{},"body":{"modules/AppModule.html":{},"injectables/CronService.html":{},"controllers/HealthController.html":{}}}],["extend",{"_index":987,"title":{},"body":{"classes/CrudController.html":{},"classes/CrudService.html":{}}}],["extend.ts",{"_index":1677,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["extendmoment(momentdefault",{"_index":1930,"title":{},"body":{"miscellaneous/variables.html":{}}}],["extends",{"_index":132,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"classes/BaseModel.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"classes/CreateTagsDto.html":{},"classes/CreateUserDto.html":{},"classes/CustomQueryBuilder.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/IBaseModel.html":{},"interfaces/ITag.html":{},"interfaces/IUser.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/Result.html":{},"classes/Tag.html":{},"controllers/TagsController.html":{},"injectables/TagsService.html":{},"classes/UpdateTagsDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"interfaces/User.html":{}}}],["extra",{"_index":825,"title":{},"body":{"classes/CrudConfigService.html":{},"classes/CrudRoutesFactory.html":{},"classes/R.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{}}}],["extractjwt",{"_index":1364,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["extractjwt.fromauthheaderasbearertoken",{"_index":1374,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["fact16",{"_index":685,"title":{},"body":{"injectables/CronService.html":{}}}],["factorial",{"_index":694,"title":{},"body":{"injectables/CronService.html":{}}}],["factorial(n",{"_index":724,"title":{},"body":{"injectables/CronService.html":{}}}],["factory",{"_index":1890,"title":{},"body":{"miscellaneous/variables.html":{}}}],["failed.filter.ts",{"_index":1437,"title":{},"body":{"classes/QueryFailedFilter.html":{},"classes/ValidationFailedFilter.html":{},"coverage.html":{}}}],["failed.filter.ts:23",{"_index":1449,"title":{},"body":{"classes/QueryFailedFilter.html":{}}}],["failed.filter.ts:7",{"_index":1652,"title":{},"body":{"classes/ValidationFailedFilter.html":{}}}],["false",{"_index":521,"title":{},"body":{"interfaces/BaseRoute.html":{},"classes/CrudConfigService.html":{},"interfaces/CrudOptions.html":{},"classes/CrudRoutesFactory.html":{},"interfaces/GetManyDefaultResponse.html":{},"injectables/LocalStrategy.html":{},"interfaces/ParamOption.html":{},"interfaces/ParamsOptions.html":{},"classes/R.html":{},"guards/ResponseGuard.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{},"miscellaneous/variables.html":{}}}],["feed",{"_index":101,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/Result.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{},"interfaces/User.html":{}}}],["fetch",{"_index":472,"title":{},"body":{"classes/BaseModel.html":{},"interfaces/IBaseModel.html":{}}}],["fetchrelation",{"_index":433,"title":{},"body":{"classes/BaseModel.html":{},"interfaces/IBaseModel.html":{},"classes/Tag.html":{},"classes/User.html":{}}}],["fetchrelation(expression",{"_index":449,"title":{},"body":{"classes/BaseModel.html":{},"classes/Tag.html":{},"classes/User.html":{}}}],["field",{"_index":509,"title":{},"body":{"interfaces/BaseRoute.html":{},"interfaces/CrudOptions.html":{},"interfaces/GetManyDefaultResponse.html":{},"interfaces/ParamOption.html":{},"interfaces/ParamsOptions.html":{}}}],["fields",{"_index":465,"title":{},"body":{"classes/BaseModel.html":{},"classes/CreateUserDto.html":{},"interfaces/IBaseModel.html":{},"interfaces/IUser.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{}}}],["file",{"_index":5,"title":{},"body":{"interfaces/APIResponse.html":{},"classes/ApiException.html":{},"controllers/AppController.html":{},"interfaces/AppLaunchAction.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/BaseModel.html":{},"interfaces/BaseRoute.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"classes/CreateTagsDto.html":{},"classes/CreateUserDto.html":{},"modules/CronModule.html":{},"injectables/CronService.html":{},"classes/CrudConfigService.html":{},"classes/CrudController.html":{},"interfaces/CrudOptions.html":{},"classes/CrudRoutesFactory.html":{},"classes/CrudService.html":{},"classes/CustomQueryBuilder.html":{},"modules/DatabaseModule.html":{},"modules/EmailModule.html":{},"classes/EmailScheduleDto.html":{},"controllers/EmailSchedulingController.html":{},"modules/EmailSchedulingModule.html":{},"injectables/EmailSchedulingService.html":{},"injectables/EmailService.html":{},"injectables/ExcludeNullUndefinedInterceptor.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetManyDefaultResponse.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"controllers/HealthController.html":{},"interfaces/IBaseModel.html":{},"interfaces/ICrudService.html":{},"interfaces/IPaginationResult.html":{},"interfaces/ITag.html":{},"interfaces/ITryRequest.html":{},"interfaces/IUser.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/LoginCredsDto.html":{},"classes/PaginationParams.html":{},"interfaces/ParamOption.html":{},"interfaces/ParamsOptions.html":{},"injectables/PersistedCronService.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"classes/QueryFailedFilter.html":{},"classes/R.html":{},"guards/RequestGuard.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/Response.html":{},"guards/ResponseGuard.html":{},"interfaces/Result.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{},"classes/Tag.html":{},"controllers/TagsController.html":{},"modules/TagsModule.html":{},"injectables/TagsService.html":{},"injectables/TimeoutInterceptor.html":{},"interfaces/TokenPayload.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateTagsDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"classes/ValidationFailedFilter.html":{},"coverage.html":{},"interfaces/User.html":{}}}],["filename",{"_index":1186,"title":{},"body":{"modules/DatabaseModule.html":{},"miscellaneous/variables.html":{}}}],["filter",{"_index":466,"title":{},"body":{"classes/BaseModel.html":{},"classes/CrudService.html":{},"interfaces/IBaseModel.html":{},"injectables/TagsService.html":{},"injectables/UsersService.html":{}}}],["filter((one",{"_index":836,"title":{},"body":{"classes/CrudConfigService.html":{},"classes/CrudRoutesFactory.html":{},"classes/R.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{}}}],["find",{"_index":992,"title":{},"body":{"classes/CrudController.html":{},"classes/CrudService.html":{},"dependencies.html":{}}}],["findall",{"_index":993,"title":{},"body":{"classes/CrudController.html":{},"classes/CrudService.html":{},"interfaces/ICrudService.html":{},"injectables/TagsService.html":{},"injectables/UsersService.html":{}}}],["findall(paginationparams",{"_index":1012,"title":{},"body":{"classes/CrudController.html":{}}}],["findone",{"_index":1089,"title":{},"body":{"classes/CrudService.html":{},"injectables/TagsService.html":{},"injectables/UsersService.html":{}}}],["findone(filter",{"_index":1100,"title":{},"body":{"classes/CrudService.html":{},"injectables/TagsService.html":{},"injectables/UsersService.html":{}}}],["findone(id",{"_index":1640,"title":{},"body":{"injectables/UsersService.html":{}}}],["findonebyemail",{"_index":1090,"title":{},"body":{"classes/CrudService.html":{},"interfaces/ICrudService.html":{},"injectables/TagsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["findonebyemail(@query",{"_index":1629,"title":{},"body":{"controllers/UsersController.html":{}}}],["findonebyemail(email",{"_index":1102,"title":{},"body":{"classes/CrudService.html":{},"interfaces/ICrudService.html":{},"injectables/TagsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["findonebyid",{"_index":994,"title":{},"body":{"classes/CrudController.html":{},"classes/CrudService.html":{},"interfaces/ICrudService.html":{},"injectables/TagsService.html":{},"injectables/UsersService.html":{}}}],["findonebyid(@param('id",{"_index":1048,"title":{},"body":{"classes/CrudController.html":{}}}],["findonebyid(id",{"_index":1017,"title":{},"body":{"classes/CrudController.html":{},"classes/CrudService.html":{},"interfaces/ICrudService.html":{},"injectables/TagsService.html":{},"injectables/UsersService.html":{}}}],["finds",{"_index":1098,"title":{},"body":{"classes/CrudService.html":{},"injectables/PersistedCronService.html":{},"injectables/TagsService.html":{},"injectables/UsersService.html":{}}}],["fire",{"_index":762,"title":{},"body":{"injectables/CronService.html":{}}}],["first",{"_index":305,"title":{},"body":{"modules/AppModule.html":{}}}],["firstname",{"_index":607,"title":{},"body":{"classes/CreateUserDto.html":{},"interfaces/IUser.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{}}}],["flow",{"_index":1426,"title":{},"body":{"injectables/PersistedCronService.html":{}}}],["fn.now",{"_index":486,"title":{},"body":{"classes/BaseModel.html":{},"interfaces/IBaseModel.html":{}}}],["follower",{"_index":128,"title":{"interfaces/Follower.html":{}},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/Result.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{},"coverage.html":{},"interfaces/User.html":{}}}],["following",{"_index":56,"title":{"interfaces/Following.html":{}},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/Result.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{},"coverage.html":{},"interfaces/User.html":{}}}],["forbidden",{"_index":195,"title":{},"body":{"classes/ApiException.html":{}}}],["forbiddenexception",{"_index":163,"title":{},"body":{"classes/ApiException.html":{}}}],["foreignkeyviolationerror",{"_index":1443,"title":{},"body":{"classes/QueryFailedFilter.html":{}}}],["format",{"_index":623,"title":{},"body":{"classes/CreateUserDto.html":{},"interfaces/IUser.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{}}}],["found",{"_index":189,"title":{},"body":{"classes/ApiException.html":{},"injectables/CronService.html":{},"classes/CrudController.html":{}}}],["framework",{"_index":1819,"title":{},"body":{"index.html":{}}}],["frontend",{"_index":596,"title":{},"body":{"classes/CreateTagsDto.html":{},"classes/CreateUserDto.html":{},"interfaces/ITag.html":{},"interfaces/IUser.html":{},"classes/Tag.html":{},"classes/UpdateTagsDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{}}}],["func",{"_index":819,"title":{},"body":{"classes/CrudConfigService.html":{},"classes/CrudRoutesFactory.html":{},"classes/R.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{}}}],["function",{"_index":185,"title":{},"body":{"classes/ApiException.html":{},"modules/AppModule.html":{},"interfaces/BaseRoute.html":{},"classes/CrudConfigService.html":{},"interfaces/CrudOptions.html":{},"classes/CrudRoutesFactory.html":{},"classes/CustomQueryBuilder.html":{},"injectables/ExcludeNullUndefinedInterceptor.html":{},"interfaces/GetManyDefaultResponse.html":{},"interfaces/ParamOption.html":{},"interfaces/ParamsOptions.html":{},"classes/R.html":{},"guards/RequestGuard.html":{},"guards/ResponseGuard.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["functionality",{"_index":990,"title":{},"body":{"classes/CrudController.html":{},"classes/CrudService.html":{}}}],["functions",{"_index":1796,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["fuzzy",{"_index":633,"title":{},"body":{"classes/CreateUserDto.html":{},"interfaces/IUser.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{}}}],["gen/api",{"_index":138,"title":{},"body":{"classes/ApiException.html":{},"classes/CrudController.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["gen/crud",{"_index":797,"title":{},"body":{"classes/CrudConfigService.html":{},"classes/CrudRoutesFactory.html":{},"classes/R.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{},"coverage.html":{}}}],["gen/crud.decorator.ts",{"_index":1683,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["gen/utils/checks.util.ts",{"_index":1684,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["gen/utils/obj.util.ts",{"_index":1701,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["gen/utils/other.ts",{"_index":488,"title":{},"body":{"interfaces/BaseRoute.html":{},"interfaces/CrudOptions.html":{},"interfaces/GetManyDefaultResponse.html":{},"interfaces/ParamOption.html":{},"interfaces/ParamsOptions.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["gen/utils/other.ts:40",{"_index":1406,"title":{},"body":{"interfaces/ParamsOptions.html":{}}}],["gen/utils/types/object",{"_index":1882,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["gender",{"_index":57,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/Result.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{},"interfaces/User.html":{}}}],["generated",{"_index":582,"title":{},"body":{"classes/CreateTagsDto.html":{},"classes/CreateUserDto.html":{},"interfaces/ITag.html":{},"interfaces/IUser.html":{},"classes/Tag.html":{},"classes/UpdateTagsDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{}}}],["generatetoken",{"_index":393,"title":{},"body":{"injectables/AuthService.html":{}}}],["generatetoken(user",{"_index":402,"title":{},"body":{"injectables/AuthService.html":{}}}],["generic",{"_index":593,"title":{},"body":{"classes/CreateTagsDto.html":{},"classes/CreateUserDto.html":{},"interfaces/IPaginationResult.html":{},"interfaces/ITag.html":{},"interfaces/IUser.html":{},"classes/PaginationParams.html":{},"classes/Tag.html":{},"classes/UpdateTagsDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{}}}],["get(':id",{"_index":1047,"title":{},"body":{"classes/CrudController.html":{}}}],["get()@httpcode(200)@healthcheck",{"_index":1280,"title":{},"body":{"controllers/HealthController.html":{}}}],["get(metadatakey",{"_index":1462,"title":{},"body":{"classes/R.html":{}}}],["getapplaunchdata",{"_index":29,"title":{"interfaces/GetAppLaunchData.html":{}},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/Result.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"interfaces/User.html":{}}}],["getcomments",{"_index":32,"title":{"interfaces/GetComments.html":{}},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/Result.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"interfaces/User.html":{}}}],["getextramodels",{"_index":1524,"title":{},"body":{"classes/Swagger.html":{}}}],["getextramodels(target",{"_index":845,"title":{},"body":{"classes/CrudConfigService.html":{},"classes/CrudRoutesFactory.html":{},"classes/R.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{}}}],["getfollowers",{"_index":34,"title":{"interfaces/GetFollowers.html":{}},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/Result.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"interfaces/User.html":{}}}],["getfollowing",{"_index":35,"title":{"interfaces/GetFollowing.html":{}},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/Result.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"interfaces/User.html":{}}}],["gethello",{"_index":201,"title":{},"body":{"controllers/AppController.html":{}}}],["getmany",{"_index":528,"title":{},"body":{"interfaces/BaseRoute.html":{},"classes/CrudConfigService.html":{},"interfaces/CrudOptions.html":{},"classes/CrudRoutesFactory.html":{},"interfaces/GetManyDefaultResponse.html":{},"interfaces/ParamOption.html":{},"interfaces/ParamsOptions.html":{},"classes/R.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{}}}],["getmany${resourcename}responsedto",{"_index":873,"title":{},"body":{"classes/CrudConfigService.html":{},"classes/CrudRoutesFactory.html":{},"classes/R.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{}}}],["getmanybase",{"_index":499,"title":{},"body":{"interfaces/BaseRoute.html":{},"interfaces/CrudOptions.html":{},"interfaces/GetManyDefaultResponse.html":{},"interfaces/ParamOption.html":{},"interfaces/ParamsOptions.html":{},"miscellaneous/typealiases.html":{}}}],["getmanydefaultresponse",{"_index":507,"title":{"interfaces/GetManyDefaultResponse.html":{}},"body":{"interfaces/BaseRoute.html":{},"classes/CrudConfigService.html":{},"interfaces/CrudOptions.html":{},"classes/CrudRoutesFactory.html":{},"interfaces/GetManyDefaultResponse.html":{},"interfaces/ParamOption.html":{},"interfaces/ParamsOptions.html":{},"classes/R.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{},"coverage.html":{}}}],["getmanyresponsedto",{"_index":869,"title":{},"body":{"classes/CrudConfigService.html":{},"classes/CrudRoutesFactory.html":{},"classes/R.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{}}}],["getmodelname",{"_index":1082,"title":{},"body":{"classes/CrudRoutesFactory.html":{}}}],["getmodeltype",{"_index":1084,"title":{},"body":{"classes/CrudRoutesFactory.html":{}}}],["getnotifications",{"_index":81,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/Result.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{},"interfaces/User.html":{}}}],["getone",{"_index":506,"title":{},"body":{"interfaces/BaseRoute.html":{},"classes/CrudConfigService.html":{},"interfaces/CrudOptions.html":{},"classes/CrudRoutesFactory.html":{},"interfaces/GetManyDefaultResponse.html":{},"interfaces/ParamOption.html":{},"interfaces/ParamsOptions.html":{},"classes/R.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{},"miscellaneous/typealiases.html":{}}}],["getone(name",{"_index":914,"title":{},"body":{"classes/CrudConfigService.html":{},"classes/CrudRoutesFactory.html":{},"classes/R.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{}}}],["getone(req",{"_index":916,"title":{},"body":{"classes/CrudConfigService.html":{},"classes/CrudRoutesFactory.html":{},"classes/R.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{}}}],["getonebase",{"_index":500,"title":{},"body":{"interfaces/BaseRoute.html":{},"classes/CrudConfigService.html":{},"interfaces/CrudOptions.html":{},"classes/CrudRoutesFactory.html":{},"interfaces/GetManyDefaultResponse.html":{},"interfaces/ParamOption.html":{},"interfaces/ParamsOptions.html":{},"classes/R.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{},"miscellaneous/typealiases.html":{}}}],["getonebase(name",{"_index":918,"title":{},"body":{"classes/CrudConfigService.html":{},"classes/CrudRoutesFactory.html":{},"classes/R.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{}}}],["getonebase(req",{"_index":919,"title":{},"body":{"classes/CrudConfigService.html":{},"classes/CrudRoutesFactory.html":{},"classes/R.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{}}}],["getoneresponsedto",{"_index":875,"title":{},"body":{"classes/CrudConfigService.html":{},"classes/CrudRoutesFactory.html":{},"classes/R.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{}}}],["getownpropnames",{"_index":1702,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["getrescuelist",{"_index":33,"title":{"interfaces/GetRescueList.html":{}},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/Result.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"interfaces/User.html":{}}}],["getresponseok",{"_index":1525,"title":{},"body":{"classes/Swagger.html":{}}}],["getresponseok(func",{"_index":847,"title":{},"body":{"classes/CrudConfigService.html":{},"classes/CrudRoutesFactory.html":{},"classes/R.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{}}}],["getroutesschema",{"_index":921,"title":{},"body":{"classes/CrudConfigService.html":{},"classes/CrudRoutesFactory.html":{},"classes/R.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{}}}],["gettargetproto",{"_index":1080,"title":{},"body":{"classes/CrudRoutesFactory.html":{}}}],["getting",{"_index":1815,"title":{"index.html":{}},"body":{}}],["getuserposts",{"_index":31,"title":{"interfaces/GetUserPosts.html":{}},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/Result.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"interfaces/User.html":{}}}],["getuserprofile",{"_index":30,"title":{"interfaces/GetUserProfile.html":{}},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/Result.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"interfaces/User.html":{}}}],["gives",{"_index":594,"title":{},"body":{"classes/CreateTagsDto.html":{},"classes/CreateUserDto.html":{},"interfaces/ITag.html":{},"interfaces/IUser.html":{},"classes/Tag.html":{},"classes/UpdateTagsDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{}}}],["global",{"_index":537,"title":{},"body":{"interfaces/BaseRoute.html":{},"interfaces/CrudOptions.html":{},"modules/DatabaseModule.html":{},"interfaces/GetManyDefaultResponse.html":{},"interfaces/ParamOption.html":{},"interfaces/ParamsOptions.html":{}}}],["gracefully",{"_index":1413,"title":{},"body":{"injectables/PersistedCronService.html":{}}}],["graph",{"_index":1868,"title":{},"body":{"modules.html":{}}}],["grow",{"_index":1845,"title":{},"body":{"index.html":{}}}],["guard",{"_index":1468,"title":{"guards/RequestGuard.html":{},"guards/ResponseGuard.html":{}},"body":{"guards/RequestGuard.html":{},"coverage.html":{}}}],["guards",{"_index":1470,"title":{},"body":{"guards/RequestGuard.html":{},"guards/ResponseGuard.html":{},"overview.html":{}}}],["handlecron",{"_index":695,"title":{},"body":{"injectables/CronService.html":{}}}],["handlecronfn",{"_index":728,"title":{},"body":{"injectables/CronService.html":{}}}],["handleinterval",{"_index":696,"title":{},"body":{"injectables/CronService.html":{}}}],["handler",{"_index":1431,"title":{},"body":{"injectables/PersistedCronService.html":{}}}],["handletimeout",{"_index":697,"title":{},"body":{"injectables/CronService.html":{}}}],["hapi/joi",{"_index":253,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["hash",{"_index":656,"title":{},"body":{"classes/CreateUserDto.html":{},"interfaces/IUser.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"injectables/UsersService.html":{}}}],["hashpassword",{"_index":1604,"title":{},"body":{"classes/User.html":{},"injectables/UsersService.html":{}}}],["hashpassword(password",{"_index":655,"title":{},"body":{"classes/CreateUserDto.html":{},"interfaces/IUser.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"injectables/UsersService.html":{}}}],["haslength",{"_index":1685,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["haslength(objkeys(val",{"_index":1925,"title":{},"body":{"miscellaneous/variables.html":{}}}],["haslength(val",{"_index":1901,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hasmore",{"_index":1165,"title":{},"body":{"classes/CustomQueryBuilder.html":{}}}],["hasvalue",{"_index":1686,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["health",{"_index":289,"title":{},"body":{"modules/AppModule.html":{},"controllers/HealthController.html":{}}}],["health/health.controller",{"_index":259,"title":{},"body":{"modules/AppModule.html":{}}}],["healthcheck",{"_index":1292,"title":{},"body":{"controllers/HealthController.html":{}}}],["healthcheckservice",{"_index":1293,"title":{},"body":{"controllers/HealthController.html":{}}}],["healthcontroller",{"_index":236,"title":{"controllers/HealthController.html":{}},"body":{"modules/AppModule.html":{},"controllers/HealthController.html":{},"coverage.html":{}}}],["hello",{"_index":213,"title":{},"body":{"controllers/AppController.html":{}}}],["helmet",{"_index":1770,"title":{},"body":{"dependencies.html":{}}}],["helpers",{"_index":463,"title":{},"body":{"classes/BaseModel.html":{},"interfaces/IBaseModel.html":{},"guards/RequestGuard.html":{},"guards/ResponseGuard.html":{}}}],["here",{"_index":1854,"title":{},"body":{"index.html":{}}}],["hidden",{"_index":428,"title":{},"body":{"classes/BaseModel.html":{},"interfaces/IBaseModel.html":{},"classes/Tag.html":{},"classes/User.html":{}}}],["hook",{"_index":1421,"title":{},"body":{"injectables/PersistedCronService.html":{}}}],["host",{"_index":1447,"title":{},"body":{"classes/QueryFailedFilter.html":{},"classes/ValidationFailedFilter.html":{}}}],["host.switchtohttp",{"_index":1452,"title":{},"body":{"classes/QueryFailedFilter.html":{},"classes/ValidationFailedFilter.html":{}}}],["httpcode",{"_index":1289,"title":{},"body":{"controllers/HealthController.html":{}}}],["httpcode(200",{"_index":1306,"title":{},"body":{"controllers/HealthController.html":{}}}],["https://docs.nestjs.com",{"_index":1310,"title":{},"body":{"controllers/HealthController.html":{}}}],["https://nestjs.com",{"_index":1861,"title":{},"body":{"index.html":{}}}],["httpstatus",{"_index":24,"title":{},"body":{"interfaces/APIResponse.html":{},"classes/ApiException.html":{},"interfaces/AppLaunchAction.html":{},"controllers/AuthController.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"classes/CrudConfigService.html":{},"classes/CrudController.html":{},"classes/CrudRoutesFactory.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/IPaginationResult.html":{},"classes/LoginCredsDto.html":{},"classes/PaginationParams.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"classes/QueryFailedFilter.html":{},"classes/R.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/Result.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{},"controllers/TagsController.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{},"controllers/UsersController.html":{},"classes/ValidationFailedFilter.html":{},"interfaces/User.html":{}}}],["httpstatus.created",{"_index":1058,"title":{},"body":{"classes/CrudController.html":{},"controllers/TagsController.html":{},"controllers/UsersController.html":{}}}],["httpstatus.no_content",{"_index":1051,"title":{},"body":{"classes/CrudController.html":{},"controllers/TagsController.html":{},"controllers/UsersController.html":{}}}],["httpstatus.ok",{"_index":366,"title":{},"body":{"controllers/AuthController.html":{},"classes/CrudConfigService.html":{},"classes/CrudController.html":{},"classes/CrudRoutesFactory.html":{},"classes/LoginCredsDto.html":{},"classes/R.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{},"controllers/TagsController.html":{},"controllers/UsersController.html":{}}}],["httpstatus.precondition_failed",{"_index":1455,"title":{},"body":{"classes/QueryFailedFilter.html":{},"classes/ValidationFailedFilter.html":{}}}],["httpstatus[statuscode",{"_index":184,"title":{},"body":{"classes/ApiException.html":{}}}],["ibasemodel",{"_index":425,"title":{"interfaces/IBaseModel.html":{}},"body":{"classes/BaseModel.html":{},"interfaces/IBaseModel.html":{},"coverage.html":{}}}],["icrudservice",{"_index":997,"title":{"interfaces/ICrudService.html":{}},"body":{"classes/CrudController.html":{},"classes/CrudService.html":{},"interfaces/ICrudService.html":{},"coverage.html":{}}}],["id",{"_index":429,"title":{},"body":{"classes/BaseModel.html":{},"classes/CreateTagsDto.html":{},"classes/CreateUserDto.html":{},"classes/CrudController.html":{},"classes/CrudService.html":{},"interfaces/IBaseModel.html":{},"interfaces/ICrudService.html":{},"interfaces/ITag.html":{},"interfaces/IUser.html":{},"classes/Tag.html":{},"controllers/TagsController.html":{},"injectables/TagsService.html":{},"classes/UpdateTagsDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["id'})@apiresponse({status",{"_index":1019,"title":{},"body":{"classes/CrudController.html":{}}}],["id'})@put(':id",{"_index":1623,"title":{},"body":{"controllers/UsersController.html":{}}}],["identifier",{"_index":1659,"title":{},"body":{"coverage.html":{}}}],["ignore",{"_index":480,"title":{},"body":{"classes/BaseModel.html":{},"classes/CrudConfigService.html":{},"classes/CrudRoutesFactory.html":{},"classes/CrudService.html":{},"injectables/ExcludeNullUndefinedInterceptor.html":{},"controllers/HealthController.html":{},"interfaces/IBaseModel.html":{},"classes/QueryFailedFilter.html":{},"classes/R.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{},"classes/ValidationFailedFilter.html":{},"miscellaneous/variables.html":{}}}],["ignoreexpiration",{"_index":1371,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["implement",{"_index":1251,"title":{},"body":{"injectables/EmailService.html":{},"injectables/PersistedCronService.html":{}}}],["implements",{"_index":293,"title":{},"body":{"modules/AppModule.html":{},"classes/BaseModel.html":{},"classes/CreateTagsDto.html":{},"classes/CreateUserDto.html":{},"classes/CrudConfigService.html":{},"classes/CrudRoutesFactory.html":{},"classes/CrudService.html":{},"injectables/ExcludeNullUndefinedInterceptor.html":{},"controllers/HealthController.html":{},"interfaces/IBaseModel.html":{},"interfaces/ITag.html":{},"interfaces/IUser.html":{},"injectables/PersistedCronService.html":{},"classes/QueryFailedFilter.html":{},"classes/R.html":{},"guards/RequestGuard.html":{},"interfaces/Response.html":{},"guards/ResponseGuard.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{},"classes/Tag.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateTagsDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"classes/ValidationFailedFilter.html":{}}}],["import",{"_index":25,"title":{},"body":{"interfaces/APIResponse.html":{},"classes/ApiException.html":{},"controllers/AppController.html":{},"interfaces/AppLaunchAction.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/BaseModel.html":{},"interfaces/BaseRoute.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"classes/CreateTagsDto.html":{},"classes/CreateUserDto.html":{},"modules/CronModule.html":{},"injectables/CronService.html":{},"classes/CrudConfigService.html":{},"classes/CrudController.html":{},"interfaces/CrudOptions.html":{},"classes/CrudRoutesFactory.html":{},"classes/CrudService.html":{},"classes/CustomQueryBuilder.html":{},"modules/DatabaseModule.html":{},"modules/EmailModule.html":{},"classes/EmailScheduleDto.html":{},"controllers/EmailSchedulingController.html":{},"modules/EmailSchedulingModule.html":{},"injectables/EmailSchedulingService.html":{},"injectables/EmailService.html":{},"injectables/ExcludeNullUndefinedInterceptor.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetManyDefaultResponse.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"controllers/HealthController.html":{},"interfaces/IBaseModel.html":{},"interfaces/ICrudService.html":{},"interfaces/IPaginationResult.html":{},"interfaces/ITag.html":{},"interfaces/IUser.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/LoginCredsDto.html":{},"classes/PaginationParams.html":{},"interfaces/ParamOption.html":{},"interfaces/ParamsOptions.html":{},"injectables/PersistedCronService.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"classes/QueryFailedFilter.html":{},"classes/R.html":{},"guards/RequestGuard.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/Response.html":{},"guards/ResponseGuard.html":{},"interfaces/Result.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{},"classes/Tag.html":{},"controllers/TagsController.html":{},"modules/TagsModule.html":{},"injectables/TagsService.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateTagsDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"classes/ValidationFailedFilter.html":{},"interfaces/User.html":{}}}],["imports",{"_index":237,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/EmailModule.html":{},"modules/EmailSchedulingModule.html":{}}}],["in,no",{"_index":1484,"title":{},"body":{"guards/RequestGuard.html":{}}}],["included",{"_index":1350,"title":{},"body":{"interfaces/IPaginationResult.html":{},"classes/PaginationParams.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"interfaces/APIResponse.html":{},"classes/ApiException.html":{},"controllers/AppController.html":{},"interfaces/AppLaunchAction.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/BaseModel.html":{},"interfaces/BaseRoute.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"classes/CreateTagsDto.html":{},"classes/CreateUserDto.html":{},"injectables/CronService.html":{},"classes/CrudConfigService.html":{},"classes/CrudController.html":{},"interfaces/CrudOptions.html":{},"classes/CrudRoutesFactory.html":{},"classes/CrudService.html":{},"classes/CustomQueryBuilder.html":{},"classes/EmailScheduleDto.html":{},"controllers/EmailSchedulingController.html":{},"injectables/EmailSchedulingService.html":{},"injectables/EmailService.html":{},"injectables/ExcludeNullUndefinedInterceptor.html":{},"interfaces/Follower.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetManyDefaultResponse.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"controllers/HealthController.html":{},"interfaces/IBaseModel.html":{},"interfaces/ICrudService.html":{},"interfaces/IPaginationResult.html":{},"interfaces/ITag.html":{},"interfaces/ITryRequest.html":{},"interfaces/IUser.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/LoginCredsDto.html":{},"classes/PaginationParams.html":{},"interfaces/ParamOption.html":{},"injectables/PersistedCronService.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"classes/QueryFailedFilter.html":{},"classes/R.html":{},"guards/RequestGuard.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/Response.html":{},"guards/ResponseGuard.html":{},"interfaces/Result.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{},"classes/Tag.html":{},"controllers/TagsController.html":{},"injectables/TagsService.html":{},"injectables/TimeoutInterceptor.html":{},"interfaces/TokenPayload.html":{},"injectables/TransformInterceptor.html":{},"classes/User.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"classes/ValidationFailedFilter.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"interfaces/User.html":{}}}],["indexable",{"_index":1405,"title":{},"body":{"interfaces/ParamsOptions.html":{}}}],["info",{"_index":3,"title":{},"body":{"interfaces/APIResponse.html":{},"classes/ApiException.html":{},"controllers/AppController.html":{},"interfaces/AppLaunchAction.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/BaseModel.html":{},"interfaces/BaseRoute.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"classes/CreateTagsDto.html":{},"classes/CreateUserDto.html":{},"modules/CronModule.html":{},"injectables/CronService.html":{},"classes/CrudConfigService.html":{},"classes/CrudController.html":{},"interfaces/CrudOptions.html":{},"classes/CrudRoutesFactory.html":{},"classes/CrudService.html":{},"classes/CustomQueryBuilder.html":{},"modules/DatabaseModule.html":{},"modules/EmailModule.html":{},"classes/EmailScheduleDto.html":{},"controllers/EmailSchedulingController.html":{},"modules/EmailSchedulingModule.html":{},"injectables/EmailSchedulingService.html":{},"injectables/EmailService.html":{},"injectables/ExcludeNullUndefinedInterceptor.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetManyDefaultResponse.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"controllers/HealthController.html":{},"interfaces/IBaseModel.html":{},"interfaces/ICrudService.html":{},"interfaces/IPaginationResult.html":{},"interfaces/ITag.html":{},"interfaces/ITryRequest.html":{},"interfaces/IUser.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/LoginCredsDto.html":{},"classes/PaginationParams.html":{},"interfaces/ParamOption.html":{},"interfaces/ParamsOptions.html":{},"injectables/PersistedCronService.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"classes/QueryFailedFilter.html":{},"classes/R.html":{},"guards/RequestGuard.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/Response.html":{},"guards/ResponseGuard.html":{},"interfaces/Result.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{},"classes/Tag.html":{},"controllers/TagsController.html":{},"modules/TagsModule.html":{},"injectables/TagsService.html":{},"injectables/TimeoutInterceptor.html":{},"interfaces/TokenPayload.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateTagsDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"classes/ValidationFailedFilter.html":{},"interfaces/User.html":{}}}],["inherited",{"_index":1537,"title":{},"body":{"classes/Tag.html":{},"injectables/TagsService.html":{},"classes/User.html":{},"injectables/UsersService.html":{}}}],["initialized",{"_index":316,"title":{},"body":{"modules/AppModule.html":{},"controllers/HealthController.html":{}}}],["inject",{"_index":381,"title":{},"body":{"modules/AuthModule.html":{},"injectables/TagsService.html":{},"injectables/UsersService.html":{}}}],["injectable",{"_index":389,"title":{"injectables/AuthService.html":{},"injectables/CronService.html":{},"injectables/EmailSchedulingService.html":{},"injectables/EmailService.html":{},"injectables/ExcludeNullUndefinedInterceptor.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/PersistedCronService.html":{},"injectables/TagsService.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/TransformInterceptor.html":{},"injectables/UsersService.html":{}},"body":{"injectables/AuthService.html":{},"injectables/CronService.html":{},"injectables/EmailSchedulingService.html":{},"injectables/EmailService.html":{},"injectables/ExcludeNullUndefinedInterceptor.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/PersistedCronService.html":{},"guards/RequestGuard.html":{},"interfaces/Response.html":{},"guards/ResponseGuard.html":{},"injectables/TagsService.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/TransformInterceptor.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["injectables",{"_index":390,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CronService.html":{},"injectables/EmailSchedulingService.html":{},"injectables/EmailService.html":{},"injectables/ExcludeNullUndefinedInterceptor.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/PersistedCronService.html":{},"injectables/TagsService.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/TransformInterceptor.html":{},"injectables/UsersService.html":{},"overview.html":{}}}],["injected",{"_index":1000,"title":{},"body":{"classes/CrudController.html":{},"classes/CrudService.html":{}}}],["input",{"_index":1011,"title":{},"body":{"classes/CrudController.html":{},"classes/CrudService.html":{},"controllers/TagsController.html":{},"injectables/TagsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["inputs",{"_index":1480,"title":{},"body":{"guards/RequestGuard.html":{}}}],["inputs[key",{"_index":1487,"title":{},"body":{"guards/RequestGuard.html":{}}}],["installation",{"_index":1827,"title":{},"body":{"index.html":{}}}],["installrunning",{"_index":1829,"title":{},"body":{"index.html":{}}}],["instance",{"_index":586,"title":{},"body":{"classes/CreateTagsDto.html":{},"classes/CreateUserDto.html":{},"interfaces/ITag.html":{},"interfaces/IUser.html":{},"classes/Tag.html":{},"classes/UpdateTagsDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{}}}],["instanceof",{"_index":1488,"title":{},"body":{"guards/RequestGuard.html":{},"guards/ResponseGuard.html":{},"injectables/TimeoutInterceptor.html":{},"miscellaneous/variables.html":{}}}],["integer",{"_index":590,"title":{},"body":{"classes/CreateTagsDto.html":{},"classes/CreateUserDto.html":{},"interfaces/ITag.html":{},"interfaces/IUser.html":{},"classes/Tag.html":{},"classes/UpdateTagsDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{}}}],["intercept",{"_index":1259,"title":{},"body":{"injectables/ExcludeNullUndefinedInterceptor.html":{},"interfaces/Response.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/TransformInterceptor.html":{}}}],["intercept(context",{"_index":1260,"title":{},"body":{"injectables/ExcludeNullUndefinedInterceptor.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/TransformInterceptor.html":{}}}],["interceptor",{"_index":1585,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["interceptors",{"_index":1256,"title":{},"body":{"injectables/ExcludeNullUndefinedInterceptor.html":{}}}],["interface",{"_index":0,"title":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/BaseRoute.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/CrudOptions.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetManyDefaultResponse.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/IBaseModel.html":{},"interfaces/ICrudService.html":{},"interfaces/IPaginationResult.html":{},"interfaces/ITag.html":{},"interfaces/ITryRequest.html":{},"interfaces/IUser.html":{},"interfaces/ParamOption.html":{},"interfaces/ParamsOptions.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/Response.html":{},"interfaces/Result.html":{},"interfaces/TokenPayload.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{},"interfaces/User.html":{}},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"classes/BaseModel.html":{},"interfaces/BaseRoute.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"classes/CreateTagsDto.html":{},"classes/CreateUserDto.html":{},"interfaces/CrudOptions.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetManyDefaultResponse.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/IBaseModel.html":{},"interfaces/ICrudService.html":{},"interfaces/IPaginationResult.html":{},"interfaces/ITag.html":{},"interfaces/ITryRequest.html":{},"interfaces/IUser.html":{},"classes/PaginationParams.html":{},"interfaces/ParamOption.html":{},"interfaces/ParamsOptions.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/Response.html":{},"interfaces/Result.html":{},"classes/Tag.html":{},"interfaces/TokenPayload.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateTagsDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{},"coverage.html":{},"interfaces/User.html":{}}}],["interfaces",{"_index":2,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/BaseRoute.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/CrudOptions.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetManyDefaultResponse.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/IBaseModel.html":{},"interfaces/ICrudService.html":{},"interfaces/IPaginationResult.html":{},"interfaces/ITag.html":{},"interfaces/ITryRequest.html":{},"interfaces/IUser.html":{},"interfaces/ParamOption.html":{},"interfaces/ParamsOptions.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/Response.html":{},"interfaces/Result.html":{},"interfaces/TokenPayload.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{},"overview.html":{},"interfaces/User.html":{}}}],["internal",{"_index":192,"title":{},"body":{"classes/ApiException.html":{}}}],["internalservererrorexception",{"_index":164,"title":{},"body":{"classes/ApiException.html":{}}}],["interval",{"_index":679,"title":{},"body":{"injectables/CronService.html":{},"controllers/HealthController.html":{}}}],["interval('handleintervalfn",{"_index":730,"title":{},"body":{"injectables/CronService.html":{}}}],["interval(5000).pipe",{"_index":1303,"title":{},"body":{"controllers/HealthController.html":{}}}],["intervals",{"_index":738,"title":{},"body":{"injectables/CronService.html":{}}}],["intervals.foreach((key",{"_index":777,"title":{},"body":{"injectables/CronService.html":{}}}],["invoked",{"_index":1422,"title":{},"body":{"injectables/PersistedCronService.html":{}}}],["ipagination",{"_index":1044,"title":{},"body":{"classes/CrudController.html":{}}}],["ipaginationresult",{"_index":1039,"title":{"interfaces/IPaginationResult.html":{}},"body":{"classes/CrudController.html":{},"classes/CrudService.html":{},"interfaces/ICrudService.html":{},"interfaces/IPaginationResult.html":{},"classes/PaginationParams.html":{},"coverage.html":{}}}],["isactive",{"_index":50,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"classes/CreateUserDto.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/IUser.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/Result.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{},"interfaces/User.html":{}}}],["isarray",{"_index":870,"title":{},"body":{"classes/CrudConfigService.html":{},"classes/CrudRoutesFactory.html":{},"classes/R.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{}}}],["isarrayfull",{"_index":1687,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["isarrayfull(val",{"_index":1896,"title":{},"body":{"miscellaneous/variables.html":{}}}],["isarraystrings",{"_index":1688,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["isboolean",{"_index":613,"title":{},"body":{"classes/CreateUserDto.html":{},"interfaces/IUser.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["isboolean(val",{"_index":1928,"title":{},"body":{"miscellaneous/variables.html":{}}}],["isdate",{"_index":1689,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["isdate(val",{"_index":1929,"title":{},"body":{"miscellaneous/variables.html":{}}}],["isdatestring",{"_index":1203,"title":{},"body":{"classes/EmailScheduleDto.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["isemail",{"_index":619,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/EmailScheduleDto.html":{},"interfaces/IUser.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{}}}],["isemail()@isnotempty()@minlength(2",{"_index":609,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["isempty",{"_index":1713,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["isempty(value",{"_index":1150,"title":{},"body":{"classes/CustomQueryBuilder.html":{},"miscellaneous/functions.html":{}}}],["isequal",{"_index":1690,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["isequal(val",{"_index":1916,"title":{},"body":{"miscellaneous/variables.html":{}}}],["isfalse",{"_index":807,"title":{},"body":{"classes/CrudConfigService.html":{},"classes/CrudRoutesFactory.html":{},"classes/R.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["isfalse(this.options.serialize?.create",{"_index":940,"title":{},"body":{"classes/CrudConfigService.html":{},"classes/CrudRoutesFactory.html":{},"classes/R.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{}}}],["isfalse(this.options.serialize?.delete",{"_index":949,"title":{},"body":{"classes/CrudConfigService.html":{},"classes/CrudRoutesFactory.html":{},"classes/R.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{}}}],["isfalse(this.options.serialize?.get",{"_index":933,"title":{},"body":{"classes/CrudConfigService.html":{},"classes/CrudRoutesFactory.html":{},"classes/R.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{}}}],["isfalse(this.options.serialize?.getmany",{"_index":936,"title":{},"body":{"classes/CrudConfigService.html":{},"classes/CrudRoutesFactory.html":{},"classes/R.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{}}}],["isfalse(this.options.serialize?.replace",{"_index":946,"title":{},"body":{"classes/CrudConfigService.html":{},"classes/CrudRoutesFactory.html":{},"classes/R.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{}}}],["isfalse(this.options.serialize?.update",{"_index":943,"title":{},"body":{"classes/CrudConfigService.html":{},"classes/CrudRoutesFactory.html":{},"classes/R.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{}}}],["isfunction",{"_index":808,"title":{},"body":{"classes/CrudConfigService.html":{},"classes/CrudRoutesFactory.html":{},"classes/R.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["isfunction(this.modeltype",{"_index":955,"title":{},"body":{"classes/CrudConfigService.html":{},"classes/CrudRoutesFactory.html":{},"classes/R.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{}}}],["isfunction(this.options.serialize?.create",{"_index":962,"title":{},"body":{"classes/CrudConfigService.html":{},"classes/CrudRoutesFactory.html":{},"classes/R.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{}}}],["isfunction(this.options.serialize?.delete",{"_index":968,"title":{},"body":{"classes/CrudConfigService.html":{},"classes/CrudRoutesFactory.html":{},"classes/R.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{}}}],["isfunction(this.options.serialize?.get",{"_index":958,"title":{},"body":{"classes/CrudConfigService.html":{},"classes/CrudRoutesFactory.html":{},"classes/R.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{}}}],["isfunction(this.options.serialize?.replace",{"_index":966,"title":{},"body":{"classes/CrudConfigService.html":{},"classes/CrudRoutesFactory.html":{},"classes/R.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{}}}],["isfunction(this.options.serialize?.update",{"_index":964,"title":{},"body":{"classes/CrudConfigService.html":{},"classes/CrudRoutesFactory.html":{},"classes/R.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{}}}],["isglobal",{"_index":264,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["isin",{"_index":1691,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["isnil",{"_index":1692,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["isnotempty",{"_index":342,"title":{},"body":{"controllers/AuthController.html":{},"classes/CreateTagsDto.html":{},"classes/CreateUserDto.html":{},"classes/EmailScheduleDto.html":{},"interfaces/ITag.html":{},"interfaces/IUser.html":{},"classes/LoginCredsDto.html":{},"classes/Tag.html":{},"classes/UpdateTagsDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["isnotempty(records",{"_index":1171,"title":{},"body":{"classes/CustomQueryBuilder.html":{}}}],["isnotempty(value",{"_index":1813,"title":{},"body":{"miscellaneous/functions.html":{}}}],["isnull",{"_index":1693,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["isnull(val",{"_index":1919,"title":{},"body":{"miscellaneous/variables.html":{}}}],["isnumber",{"_index":1694,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["isnumber(val",{"_index":1927,"title":{},"body":{"miscellaneous/variables.html":{}}}],["isnumeric",{"_index":1695,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["isobject",{"_index":1696,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["isobject(val",{"_index":1924,"title":{},"body":{"miscellaneous/variables.html":{}}}],["isobject(value",{"_index":1148,"title":{},"body":{"classes/CustomQueryBuilder.html":{},"miscellaneous/functions.html":{}}}],["isobjectfull",{"_index":809,"title":{},"body":{"classes/CrudConfigService.html":{},"classes/CrudRoutesFactory.html":{},"classes/R.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["isobjectfull(config.params",{"_index":880,"title":{},"body":{"classes/CrudConfigService.html":{},"classes/CrudRoutesFactory.html":{},"classes/R.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{}}}],["isobjectfull(config.query",{"_index":878,"title":{},"body":{"classes/CrudConfigService.html":{},"classes/CrudRoutesFactory.html":{},"classes/R.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{}}}],["isobjectfull(config.serialize",{"_index":882,"title":{},"body":{"classes/CrudConfigService.html":{},"classes/CrudRoutesFactory.html":{},"classes/R.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{}}}],["isobjectfull(this.options.dto",{"_index":928,"title":{},"body":{"classes/CrudConfigService.html":{},"classes/CrudRoutesFactory.html":{},"classes/R.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{}}}],["isobjectfull(this.options.query",{"_index":925,"title":{},"body":{"classes/CrudConfigService.html":{},"classes/CrudRoutesFactory.html":{},"classes/R.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{}}}],["isoptional",{"_index":1337,"title":{},"body":{"interfaces/IPaginationResult.html":{},"classes/PaginationParams.html":{}}}],["isownprofile",{"_index":58,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/Result.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{},"interfaces/User.html":{}}}],["isrecent",{"_index":100,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/Result.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{},"interfaces/User.html":{}}}],["isrescuer",{"_index":59,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/Result.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{},"interfaces/User.html":{}}}],["isstring",{"_index":569,"title":{},"body":{"classes/CreateTagsDto.html":{},"classes/CreateUserDto.html":{},"classes/EmailScheduleDto.html":{},"interfaces/ITag.html":{},"interfaces/IUser.html":{},"classes/Tag.html":{},"classes/UpdateTagsDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["isstring()@isnotempty",{"_index":1201,"title":{},"body":{"classes/EmailScheduleDto.html":{}}}],["isstring()@isnotempty()@minlength(2",{"_index":611,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["isstring()@isnotempty()@minlength(2)@maxlength(36",{"_index":566,"title":{},"body":{"classes/CreateTagsDto.html":{},"classes/CreateUserDto.html":{}}}],["isstring()@isnotempty()@minlength(8",{"_index":616,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["isstring(val",{"_index":1926,"title":{},"body":{"miscellaneous/variables.html":{}}}],["isstringfull",{"_index":1697,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["isstringfull(v",{"_index":1903,"title":{},"body":{"miscellaneous/variables.html":{}}}],["isstringfull(val",{"_index":1904,"title":{},"body":{"miscellaneous/variables.html":{}}}],["istrue",{"_index":1698,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["isundefined",{"_index":1699,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["isundefined(val",{"_index":1918,"title":{},"body":{"miscellaneous/variables.html":{}}}],["isuserreactedtopost",{"_index":88,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/Result.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{},"interfaces/User.html":{}}}],["isvalue",{"_index":1700,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["isvalue(o",{"_index":1898,"title":{},"body":{"miscellaneous/variables.html":{}}}],["isvalue(val",{"_index":1899,"title":{},"body":{"miscellaneous/variables.html":{}}}],["itag",{"_index":565,"title":{"interfaces/ITag.html":{}},"body":{"classes/CreateTagsDto.html":{},"interfaces/ITag.html":{},"classes/Tag.html":{},"classes/UpdateTagsDto.html":{},"coverage.html":{}}}],["items",{"_index":863,"title":{},"body":{"classes/CrudConfigService.html":{},"classes/CrudRoutesFactory.html":{},"interfaces/IPaginationResult.html":{},"classes/PaginationParams.html":{},"classes/R.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{}}}],["itryrequest",{"_index":1352,"title":{"interfaces/ITryRequest.html":{}},"body":{"interfaces/ITryRequest.html":{},"coverage.html":{}}}],["iuser",{"_index":606,"title":{"interfaces/IUser.html":{}},"body":{"classes/CreateUserDto.html":{},"interfaces/IUser.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"coverage.html":{}}}],["job",{"_index":710,"title":{},"body":{"injectables/CronService.html":{},"injectables/EmailSchedulingService.html":{},"injectables/PersistedCronService.html":{}}}],["job.find",{"_index":1427,"title":{},"body":{"injectables/PersistedCronService.html":{}}}],["job.start",{"_index":769,"title":{},"body":{"injectables/CronService.html":{},"injectables/EmailSchedulingService.html":{}}}],["jobs",{"_index":678,"title":{},"body":{"injectables/CronService.html":{},"injectables/PersistedCronService.html":{}}}],["jobs.foreach((job",{"_index":1429,"title":{},"body":{"injectables/PersistedCronService.html":{}}}],["joi",{"_index":252,"title":{},"body":{"modules/AppModule.html":{}}}],["joi.number().default(3000",{"_index":272,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["joi.object",{"_index":270,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["joi.string",{"_index":274,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["joi.string().required",{"_index":282,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["join",{"_index":1851,"title":{},"body":{"index.html":{}}}],["json",{"_index":579,"title":{},"body":{"classes/CreateTagsDto.html":{},"classes/CreateUserDto.html":{},"interfaces/ITag.html":{},"interfaces/IUser.html":{},"classes/Tag.html":{},"classes/UpdateTagsDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{}}}],["jsonschema",{"_index":572,"title":{},"body":{"classes/CreateTagsDto.html":{},"classes/CreateUserDto.html":{},"interfaces/ITag.html":{},"interfaces/IUser.html":{},"classes/Tag.html":{},"classes/UpdateTagsDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{}}}],["jwt",{"_index":1367,"title":{},"body":{"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["jwt.strategy",{"_index":378,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtfromrequest",{"_index":1373,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["jwtkey",{"_index":281,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["jwtmodule",{"_index":374,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtmodule.registerasync",{"_index":380,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtservice",{"_index":396,"title":{},"body":{"injectables/AuthService.html":{}}}],["jwtstrategy",{"_index":370,"title":{"injectables/JwtStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["kamil",{"_index":1858,"title":{},"body":{"index.html":{}}}],["keep",{"_index":1300,"title":{},"body":{"controllers/HealthController.html":{}}}],["key",{"_index":515,"title":{},"body":{"interfaces/BaseRoute.html":{},"injectables/CronService.html":{},"interfaces/CrudOptions.html":{},"injectables/ExcludeNullUndefinedInterceptor.html":{},"interfaces/GetManyDefaultResponse.html":{},"interfaces/ParamOption.html":{},"interfaces/ParamsOptions.html":{},"guards/RequestGuard.html":{}}}],["keyof",{"_index":1349,"title":{},"body":{"interfaces/IPaginationResult.html":{},"classes/PaginationParams.html":{}}}],["knex",{"_index":1175,"title":{},"body":{"modules/DatabaseModule.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["knex.sqlite",{"_index":1187,"title":{},"body":{"modules/DatabaseModule.html":{},"miscellaneous/variables.html":{}}}],["knexconnection",{"_index":1181,"title":{},"body":{"modules/DatabaseModule.html":{},"miscellaneous/variables.html":{}}}],["lastname",{"_index":608,"title":{},"body":{"classes/CreateUserDto.html":{},"interfaces/IUser.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{}}}],["latitude",{"_index":60,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/Result.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{},"interfaces/User.html":{}}}],["legend",{"_index":219,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CronModule.html":{},"modules/EmailModule.html":{},"modules/EmailSchedulingModule.html":{},"modules/TagsModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["license",{"_index":1864,"title":{},"body":{"index.html":{}}}],["licensed",{"_index":1842,"title":{},"body":{"index.html":{}}}],["limit",{"_index":523,"title":{},"body":{"interfaces/BaseRoute.html":{},"interfaces/CrudOptions.html":{},"interfaces/GetManyDefaultResponse.html":{},"interfaces/ParamOption.html":{},"interfaces/ParamsOptions.html":{},"dependencies.html":{}}}],["line",{"_index":319,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"classes/BaseModel.html":{},"interfaces/BaseRoute.html":{},"injectables/CronService.html":{},"classes/CrudConfigService.html":{},"interfaces/CrudOptions.html":{},"classes/CrudRoutesFactory.html":{},"classes/CustomQueryBuilder.html":{},"modules/DatabaseModule.html":{},"controllers/EmailSchedulingController.html":{},"injectables/EmailSchedulingService.html":{},"injectables/ExcludeNullUndefinedInterceptor.html":{},"interfaces/GetManyDefaultResponse.html":{},"controllers/HealthController.html":{},"interfaces/IBaseModel.html":{},"injectables/JwtStrategy.html":{},"classes/LoginCredsDto.html":{},"interfaces/ParamOption.html":{},"interfaces/ParamsOptions.html":{},"classes/QueryFailedFilter.html":{},"classes/R.html":{},"guards/RequestGuard.html":{},"interfaces/Response.html":{},"guards/ResponseGuard.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{},"injectables/TransformInterceptor.html":{},"injectables/UsersService.html":{},"classes/ValidationFailedFilter.html":{},"miscellaneous/variables.html":{}}}],["link",{"_index":38,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/Result.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{},"interfaces/User.html":{}}}],["listing",{"_index":1351,"title":{},"body":{"interfaces/IPaginationResult.html":{},"classes/PaginationParams.html":{}}}],["literal",{"_index":1062,"title":{},"body":{"interfaces/CrudOptions.html":{},"controllers/HealthController.html":{},"interfaces/IPaginationResult.html":{},"interfaces/Rescues.html":{},"classes/Swagger.html":{},"miscellaneous/typealiases.html":{},"interfaces/User.html":{}}}],["literal.type.ts",{"_index":1879,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["load",{"_index":800,"title":{},"body":{"classes/CrudConfigService.html":{},"controllers/HealthController.html":{}}}],["load(config",{"_index":803,"title":{},"body":{"classes/CrudConfigService.html":{},"classes/CrudRoutesFactory.html":{},"classes/R.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{}}}],["local",{"_index":1388,"title":{},"body":{"injectables/LocalStrategy.html":{},"dependencies.html":{}}}],["local.strategy",{"_index":379,"title":{},"body":{"modules/AuthModule.html":{}}}],["localstrategy",{"_index":371,"title":{"injectables/LocalStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/LocalStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["localstrategy.passwordfield",{"_index":1390,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["localstrategy.usernamefield",{"_index":1389,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["lodash",{"_index":1146,"title":{},"body":{"classes/CustomQueryBuilder.html":{},"dependencies.html":{}}}],["logallcrons",{"_index":698,"title":{},"body":{"injectables/CronService.html":{}}}],["logger",{"_index":686,"title":{},"body":{"injectables/CronService.html":{},"injectables/EmailSchedulingService.html":{},"injectables/PersistedCronService.html":{}}}],["logger(cronservice.name",{"_index":744,"title":{},"body":{"injectables/CronService.html":{}}}],["logger(emailschedulingservice.name",{"_index":1232,"title":{},"body":{"injectables/EmailSchedulingService.html":{}}}],["logger(persistedcronservice.name",{"_index":1419,"title":{},"body":{"injectables/PersistedCronService.html":{}}}],["logging",{"_index":285,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["login",{"_index":329,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/LoginCredsDto.html":{}}}],["login(req",{"_index":330,"title":{},"body":{"controllers/AuthController.html":{}}}],["login(user",{"_index":405,"title":{},"body":{"injectables/AuthService.html":{}}}],["logincreds",{"_index":331,"title":{},"body":{"controllers/AuthController.html":{},"classes/LoginCredsDto.html":{}}}],["logincredsdto",{"_index":332,"title":{"classes/LoginCredsDto.html":{}},"body":{"controllers/AuthController.html":{},"classes/LoginCredsDto.html":{},"coverage.html":{}}}],["logintervals",{"_index":699,"title":{},"body":{"injectables/CronService.html":{}}}],["logtimeouts",{"_index":700,"title":{},"body":{"injectables/CronService.html":{}}}],["longitude",{"_index":61,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/Result.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{},"interfaces/User.html":{}}}],["loop",{"_index":1173,"title":{},"body":{"classes/CustomQueryBuilder.html":{}}}],["loop,@typescript",{"_index":1170,"title":{},"body":{"classes/CustomQueryBuilder.html":{}}}],["make",{"_index":1412,"title":{},"body":{"injectables/PersistedCronService.html":{}}}],["many",{"_index":857,"title":{},"body":{"classes/CrudConfigService.html":{},"classes/CrudRoutesFactory.html":{},"classes/R.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{}}}],["map",{"_index":1268,"title":{},"body":{"injectables/ExcludeNullUndefinedInterceptor.html":{},"controllers/HealthController.html":{},"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{},"dependencies.html":{}}}],["map((_",{"_index":1304,"title":{},"body":{"controllers/HealthController.html":{}}}],["map((name",{"_index":834,"title":{},"body":{"classes/CrudConfigService.html":{},"classes/CrudRoutesFactory.html":{},"classes/R.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{}}}],["mapping",{"_index":474,"title":{},"body":{"classes/BaseModel.html":{},"interfaces/IBaseModel.html":{}}}],["match",{"_index":416,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"interfaces/IUser.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{}}}],["matching",{"_index":133,"title":{},"body":{"interfaces/APIResponse.html":{},"classes/ApiException.html":{},"controllers/AppController.html":{},"interfaces/AppLaunchAction.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/BaseModel.html":{},"interfaces/BaseRoute.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"classes/CreateTagsDto.html":{},"classes/CreateUserDto.html":{},"modules/CronModule.html":{},"injectables/CronService.html":{},"classes/CrudConfigService.html":{},"classes/CrudController.html":{},"interfaces/CrudOptions.html":{},"classes/CrudRoutesFactory.html":{},"classes/CrudService.html":{},"classes/CustomQueryBuilder.html":{},"modules/DatabaseModule.html":{},"modules/EmailModule.html":{},"classes/EmailScheduleDto.html":{},"controllers/EmailSchedulingController.html":{},"modules/EmailSchedulingModule.html":{},"injectables/EmailSchedulingService.html":{},"injectables/EmailService.html":{},"injectables/ExcludeNullUndefinedInterceptor.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetManyDefaultResponse.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"controllers/HealthController.html":{},"interfaces/IBaseModel.html":{},"interfaces/ICrudService.html":{},"interfaces/IPaginationResult.html":{},"interfaces/ITag.html":{},"interfaces/ITryRequest.html":{},"interfaces/IUser.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/LoginCredsDto.html":{},"classes/PaginationParams.html":{},"interfaces/ParamOption.html":{},"interfaces/ParamsOptions.html":{},"injectables/PersistedCronService.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"classes/QueryFailedFilter.html":{},"classes/R.html":{},"guards/RequestGuard.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/Response.html":{},"guards/ResponseGuard.html":{},"interfaces/Result.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{},"classes/Tag.html":{},"controllers/TagsController.html":{},"modules/TagsModule.html":{},"injectables/TagsService.html":{},"injectables/TimeoutInterceptor.html":{},"interfaces/TokenPayload.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateTagsDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"classes/ValidationFailedFilter.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"routes.html":{},"interfaces/User.html":{}}}],["math.ceil(result.total",{"_index":1157,"title":{},"body":{"classes/CustomQueryBuilder.html":{}}}],["math.ceil(total",{"_index":1115,"title":{},"body":{"classes/CrudService.html":{}}}],["maxlength",{"_index":570,"title":{},"body":{"classes/CreateTagsDto.html":{},"classes/CreateUserDto.html":{},"interfaces/ITag.html":{},"interfaces/IUser.html":{},"classes/Tag.html":{},"classes/UpdateTagsDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{}}}],["maxlength(36",{"_index":601,"title":{},"body":{"classes/CreateTagsDto.html":{},"classes/CreateUserDto.html":{},"interfaces/ITag.html":{},"interfaces/IUser.html":{},"classes/Tag.html":{},"classes/UpdateTagsDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{}}}],["maxlimit",{"_index":524,"title":{},"body":{"interfaces/BaseRoute.html":{},"interfaces/CrudOptions.html":{},"interfaces/GetManyDefaultResponse.html":{},"interfaces/ParamOption.html":{},"interfaces/ParamsOptions.html":{}}}],["mb",{"_index":1315,"title":{},"body":{"controllers/HealthController.html":{}}}],["member",{"_index":558,"title":{},"body":{"interfaces/BaseRoute.html":{},"injectables/CronService.html":{},"interfaces/CrudOptions.html":{},"classes/CustomQueryBuilder.html":{},"injectables/EmailSchedulingService.html":{},"interfaces/GetManyDefaultResponse.html":{},"controllers/HealthController.html":{},"injectables/JwtStrategy.html":{},"interfaces/ParamOption.html":{},"interfaces/ParamsOptions.html":{},"classes/QueryFailedFilter.html":{},"guards/ResponseGuard.html":{},"injectables/UsersService.html":{},"classes/ValidationFailedFilter.html":{}}}],["memory",{"_index":1302,"title":{},"body":{"controllers/HealthController.html":{}}}],["merge",{"_index":924,"title":{},"body":{"classes/CrudConfigService.html":{},"classes/CrudRoutesFactory.html":{},"classes/R.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{}}}],["mergeoptions",{"_index":923,"title":{},"body":{"classes/CrudConfigService.html":{},"classes/CrudRoutesFactory.html":{},"classes/R.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{}}}],["message",{"_index":13,"title":{},"body":{"interfaces/APIResponse.html":{},"classes/ApiException.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/IPaginationResult.html":{},"classes/PaginationParams.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"classes/QueryFailedFilter.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"guards/ResponseGuard.html":{},"interfaces/Result.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{},"classes/ValidationFailedFilter.html":{},"interfaces/User.html":{}}}],["messageevent",{"_index":1290,"title":{},"body":{"controllers/HealthController.html":{}}}],["meta",{"_index":830,"title":{},"body":{"classes/CrudConfigService.html":{},"classes/CrudRoutesFactory.html":{},"classes/R.html":{},"guards/ResponseGuard.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{}}}],["metadata",{"_index":826,"title":{},"body":{"classes/CrudConfigService.html":{},"classes/CrudRoutesFactory.html":{},"interfaces/IPaginationResult.html":{},"classes/PaginationParams.html":{},"classes/R.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{},"dependencies.html":{}}}],["metadatakey",{"_index":814,"title":{},"body":{"classes/CrudConfigService.html":{},"classes/CrudRoutesFactory.html":{},"classes/R.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{}}}],["metadatatoadd",{"_index":981,"title":{},"body":{"classes/CrudConfigService.html":{},"classes/CrudRoutesFactory.html":{},"classes/R.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{}}}],["metadatavalue",{"_index":815,"title":{},"body":{"classes/CrudConfigService.html":{},"classes/CrudRoutesFactory.html":{},"classes/R.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{}}}],["method",{"_index":489,"title":{},"body":{"interfaces/BaseRoute.html":{},"injectables/CronService.html":{},"classes/CrudConfigService.html":{},"interfaces/CrudOptions.html":{},"classes/CrudRoutesFactory.html":{},"interfaces/GetManyDefaultResponse.html":{},"interfaces/ParamOption.html":{},"interfaces/ParamsOptions.html":{},"classes/R.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{}}}],["methods",{"_index":200,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/BaseModel.html":{},"classes/CreateTagsDto.html":{},"classes/CreateUserDto.html":{},"injectables/CronService.html":{},"classes/CrudConfigService.html":{},"classes/CrudController.html":{},"classes/CrudRoutesFactory.html":{},"classes/CrudService.html":{},"classes/CustomQueryBuilder.html":{},"controllers/EmailSchedulingController.html":{},"injectables/EmailSchedulingService.html":{},"injectables/EmailService.html":{},"injectables/ExcludeNullUndefinedInterceptor.html":{},"controllers/HealthController.html":{},"interfaces/ICrudService.html":{},"interfaces/ITag.html":{},"interfaces/IUser.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/PersistedCronService.html":{},"classes/QueryFailedFilter.html":{},"classes/R.html":{},"guards/RequestGuard.html":{},"guards/ResponseGuard.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{},"classes/Tag.html":{},"controllers/TagsController.html":{},"injectables/TagsService.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateTagsDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"classes/ValidationFailedFilter.html":{}}}],["metrics",{"_index":1284,"title":{},"body":{"controllers/HealthController.html":{}}}],["metrics.os",{"_index":1323,"title":{},"body":{"controllers/HealthController.html":{}}}],["milliseconds",{"_index":712,"title":{},"body":{"injectables/CronService.html":{},"injectables/TimeoutInterceptor.html":{}}}],["min",{"_index":1338,"title":{},"body":{"interfaces/IPaginationResult.html":{},"classes/PaginationParams.html":{}}}],["min(0",{"_index":1344,"title":{},"body":{"interfaces/IPaginationResult.html":{},"classes/PaginationParams.html":{}}}],["minimum",{"_index":1343,"title":{},"body":{"interfaces/IPaginationResult.html":{},"classes/PaginationParams.html":{}}}],["minlength",{"_index":571,"title":{},"body":{"classes/CreateTagsDto.html":{},"classes/CreateUserDto.html":{},"interfaces/ITag.html":{},"interfaces/IUser.html":{},"classes/Tag.html":{},"classes/UpdateTagsDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{}}}],["minlength(2",{"_index":600,"title":{},"body":{"classes/CreateTagsDto.html":{},"classes/CreateUserDto.html":{},"interfaces/ITag.html":{},"interfaces/IUser.html":{},"classes/Tag.html":{},"classes/UpdateTagsDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{}}}],["minlength(8",{"_index":665,"title":{},"body":{"classes/CreateUserDto.html":{},"interfaces/IUser.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{}}}],["minute",{"_index":772,"title":{},"body":{"injectables/CronService.html":{}}}],["miscellaneous",{"_index":1793,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":1841,"title":{},"body":{"index.html":{}}}],["mixed",{"_index":648,"title":{},"body":{"classes/CreateUserDto.html":{},"interfaces/IUser.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{}}}],["mixin",{"_index":456,"title":{},"body":{"classes/BaseModel.html":{},"interfaces/IBaseModel.html":{}}}],["mixin(model",{"_index":464,"title":{},"body":{"classes/BaseModel.html":{},"interfaces/IBaseModel.html":{}}}],["mode",{"_index":1833,"title":{},"body":{"index.html":{}}}],["model",{"_index":457,"title":{},"body":{"classes/BaseModel.html":{},"interfaces/BaseRoute.html":{},"classes/CreateTagsDto.html":{},"classes/CreateUserDto.html":{},"interfaces/CrudOptions.html":{},"classes/CrudService.html":{},"classes/CustomQueryBuilder.html":{},"modules/DatabaseModule.html":{},"interfaces/GetManyDefaultResponse.html":{},"interfaces/IBaseModel.html":{},"interfaces/ITag.html":{},"interfaces/IUser.html":{},"interfaces/ParamOption.html":{},"interfaces/ParamsOptions.html":{},"classes/Tag.html":{},"injectables/TagsService.html":{},"classes/UpdateTagsDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["model.knex(knex",{"_index":1189,"title":{},"body":{"modules/DatabaseModule.html":{},"miscellaneous/variables.html":{}}}],["model.name",{"_index":1178,"title":{},"body":{"modules/DatabaseModule.html":{},"miscellaneous/variables.html":{}}}],["modelclass",{"_index":1093,"title":{},"body":{"classes/CrudService.html":{},"injectables/TagsService.html":{},"injectables/UsersService.html":{}}}],["modelname",{"_index":903,"title":{},"body":{"classes/CrudConfigService.html":{},"classes/CrudRoutesFactory.html":{},"classes/R.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{}}}],["modelobject",{"_index":573,"title":{},"body":{"classes/CreateTagsDto.html":{},"classes/CreateUserDto.html":{},"interfaces/ITag.html":{},"interfaces/IUser.html":{},"classes/Tag.html":{},"classes/UpdateTagsDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"miscellaneous/typealiases.html":{}}}],["modeloptions",{"_index":445,"title":{},"body":{"classes/BaseModel.html":{},"classes/CreateUserDto.html":{},"interfaces/IBaseModel.html":{},"interfaces/IUser.html":{},"classes/Tag.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{}}}],["modelproviders",{"_index":1176,"title":{},"body":{"modules/DatabaseModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["models",{"_index":832,"title":{},"body":{"classes/CrudConfigService.html":{},"classes/CrudRoutesFactory.html":{},"modules/DatabaseModule.html":{},"classes/R.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["models.map((model",{"_index":1177,"title":{},"body":{"modules/DatabaseModule.html":{},"miscellaneous/variables.html":{}}}],["modeltype",{"_index":905,"title":{},"body":{"classes/CrudConfigService.html":{},"classes/CrudRoutesFactory.html":{},"classes/R.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{}}}],["modifier",{"_index":630,"title":{},"body":{"classes/CreateUserDto.html":{},"interfaces/IUser.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{}}}],["modifiers",{"_index":620,"title":{},"body":{"classes/CreateUserDto.html":{},"interfaces/IUser.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{}}}],["module",{"_index":215,"title":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CronModule.html":{},"modules/DatabaseModule.html":{},"modules/EmailModule.html":{},"modules/EmailSchedulingModule.html":{},"modules/TagsModule.html":{},"modules/UsersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CronModule.html":{},"modules/DatabaseModule.html":{},"modules/EmailModule.html":{},"modules/EmailSchedulingModule.html":{},"modules/TagsModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["modules",{"_index":217,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CronModule.html":{},"modules/DatabaseModule.html":{},"modules/EmailModule.html":{},"modules/EmailSchedulingModule.html":{},"modules/TagsModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["moment",{"_index":1678,"title":{},"body":{"coverage.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["more",{"_index":1589,"title":{},"body":{"injectables/TimeoutInterceptor.html":{},"index.html":{}}}],["myśliwiec",{"_index":1859,"title":{},"body":{"index.html":{}}}],["n",{"_index":726,"title":{},"body":{"injectables/CronService.html":{}}}],["name",{"_index":116,"title":{},"body":{"interfaces/APIResponse.html":{},"classes/ApiException.html":{},"interfaces/AppLaunchAction.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/BaseModel.html":{},"interfaces/BaseRoute.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"classes/CreateTagsDto.html":{},"classes/CreateUserDto.html":{},"injectables/CronService.html":{},"classes/CrudConfigService.html":{},"classes/CrudController.html":{},"interfaces/CrudOptions.html":{},"classes/CrudRoutesFactory.html":{},"classes/CrudService.html":{},"classes/CustomQueryBuilder.html":{},"controllers/EmailSchedulingController.html":{},"injectables/EmailSchedulingService.html":{},"injectables/EmailService.html":{},"injectables/ExcludeNullUndefinedInterceptor.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetManyDefaultResponse.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"controllers/HealthController.html":{},"interfaces/ICrudService.html":{},"interfaces/ITag.html":{},"interfaces/IUser.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"interfaces/ParamOption.html":{},"interfaces/ParamsOptions.html":{},"injectables/PersistedCronService.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"classes/QueryFailedFilter.html":{},"classes/R.html":{},"guards/RequestGuard.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"guards/ResponseGuard.html":{},"interfaces/Result.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{},"classes/Tag.html":{},"controllers/TagsController.html":{},"injectables/TagsService.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateTagsDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"classes/ValidationFailedFilter.html":{},"miscellaneous/functions.html":{},"interfaces/User.html":{}}}],["name.trim().split(/\\s",{"_index":651,"title":{},"body":{"classes/CreateUserDto.html":{},"interfaces/IUser.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{}}}],["named",{"_index":714,"title":{},"body":{"injectables/CronService.html":{}}}],["namepart",{"_index":650,"title":{},"body":{"classes/CreateUserDto.html":{},"interfaces/IUser.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{}}}],["namepart.tolowercase",{"_index":654,"title":{},"body":{"classes/CreateUserDto.html":{},"interfaces/IUser.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{}}}],["nativeerror",{"_index":1458,"title":{},"body":{"classes/QueryFailedFilter.html":{}}}],["nest",{"_index":310,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["nestframework",{"_index":1863,"title":{},"body":{"index.html":{}}}],["nestinterceptor",{"_index":1266,"title":{},"body":{"injectables/ExcludeNullUndefinedInterceptor.html":{},"interfaces/Response.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/TransformInterceptor.html":{}}}],["nestjs",{"_index":1420,"title":{},"body":{"injectables/PersistedCronService.html":{}}}],["nestjs/bull",{"_index":1739,"title":{},"body":{"dependencies.html":{}}}],["nestjs/common",{"_index":26,"title":{},"body":{"interfaces/APIResponse.html":{},"classes/ApiException.html":{},"controllers/AppController.html":{},"interfaces/AppLaunchAction.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"interfaces/BaseRoute.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"modules/CronModule.html":{},"injectables/CronService.html":{},"classes/CrudConfigService.html":{},"classes/CrudController.html":{},"interfaces/CrudOptions.html":{},"classes/CrudRoutesFactory.html":{},"classes/CrudService.html":{},"modules/DatabaseModule.html":{},"modules/EmailModule.html":{},"controllers/EmailSchedulingController.html":{},"modules/EmailSchedulingModule.html":{},"injectables/EmailSchedulingService.html":{},"injectables/EmailService.html":{},"injectables/ExcludeNullUndefinedInterceptor.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetManyDefaultResponse.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"controllers/HealthController.html":{},"interfaces/IPaginationResult.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/LoginCredsDto.html":{},"classes/PaginationParams.html":{},"interfaces/ParamOption.html":{},"interfaces/ParamsOptions.html":{},"injectables/PersistedCronService.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"classes/QueryFailedFilter.html":{},"classes/R.html":{},"guards/RequestGuard.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/Response.html":{},"guards/ResponseGuard.html":{},"interfaces/Result.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{},"controllers/TagsController.html":{},"modules/TagsModule.html":{},"injectables/TagsService.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/TransformInterceptor.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"classes/ValidationFailedFilter.html":{},"dependencies.html":{},"interfaces/User.html":{}}}],["nestjs/config",{"_index":247,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/EmailModule.html":{},"injectables/EmailService.html":{},"controllers/HealthController.html":{},"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":1743,"title":{},"body":{"dependencies.html":{}}}],["nestjs/jwt",{"_index":375,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"dependencies.html":{}}}],["nestjs/mapped",{"_index":1745,"title":{},"body":{"dependencies.html":{}}}],["nestjs/passport",{"_index":340,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/LoginCredsDto.html":{},"controllers/TagsController.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":1748,"title":{},"body":{"dependencies.html":{}}}],["nestjs/schedule",{"_index":249,"title":{},"body":{"modules/AppModule.html":{},"injectables/CronService.html":{},"injectables/EmailSchedulingService.html":{},"injectables/PersistedCronService.html":{},"dependencies.html":{}}}],["nestjs/serve",{"_index":1752,"title":{},"body":{"dependencies.html":{}}}],["nestjs/swagger",{"_index":173,"title":{},"body":{"classes/ApiException.html":{},"controllers/AppController.html":{},"controllers/AuthController.html":{},"classes/CreateTagsDto.html":{},"classes/CreateUserDto.html":{},"classes/CrudController.html":{},"controllers/EmailSchedulingController.html":{},"controllers/HealthController.html":{},"interfaces/IPaginationResult.html":{},"interfaces/ITag.html":{},"interfaces/IUser.html":{},"classes/LoginCredsDto.html":{},"classes/PaginationParams.html":{},"classes/Tag.html":{},"controllers/TagsController.html":{},"classes/UpdateTagsDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"dependencies.html":{}}}],["nestjs/swagger/dist/types/swagger",{"_index":496,"title":{},"body":{"interfaces/BaseRoute.html":{},"interfaces/CrudOptions.html":{},"interfaces/GetManyDefaultResponse.html":{},"interfaces/ParamOption.html":{},"interfaces/ParamsOptions.html":{}}}],["nestjs/terminus",{"_index":251,"title":{},"body":{"modules/AppModule.html":{},"controllers/HealthController.html":{},"dependencies.html":{}}}],["new",{"_index":180,"title":{},"body":{"classes/ApiException.html":{},"injectables/AuthService.html":{},"classes/BaseModel.html":{},"injectables/CronService.html":{},"classes/CrudConfigService.html":{},"classes/CrudController.html":{},"classes/CrudRoutesFactory.html":{},"injectables/EmailSchedulingService.html":{},"interfaces/IBaseModel.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/PersistedCronService.html":{},"classes/QueryFailedFilter.html":{},"classes/R.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{},"injectables/TagsService.html":{},"controllers/UsersController.html":{},"classes/ValidationFailedFilter.html":{},"coverage.html":{}}}],["next",{"_index":318,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"classes/BaseModel.html":{},"interfaces/BaseRoute.html":{},"injectables/CronService.html":{},"classes/CrudConfigService.html":{},"interfaces/CrudOptions.html":{},"classes/CrudRoutesFactory.html":{},"classes/CustomQueryBuilder.html":{},"modules/DatabaseModule.html":{},"controllers/EmailSchedulingController.html":{},"injectables/EmailSchedulingService.html":{},"injectables/ExcludeNullUndefinedInterceptor.html":{},"interfaces/GetManyDefaultResponse.html":{},"controllers/HealthController.html":{},"interfaces/IBaseModel.html":{},"interfaces/ParamOption.html":{},"interfaces/ParamsOptions.html":{},"classes/QueryFailedFilter.html":{},"classes/R.html":{},"guards/RequestGuard.html":{},"interfaces/Response.html":{},"guards/ResponseGuard.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/TransformInterceptor.html":{},"classes/ValidationFailedFilter.html":{},"miscellaneous/variables.html":{}}}],["next.handle().pipe",{"_index":1276,"title":{},"body":{"injectables/ExcludeNullUndefinedInterceptor.html":{},"injectables/TimeoutInterceptor.html":{}}}],["next.handle().pipe(map((data",{"_index":1493,"title":{},"body":{"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["nocontent",{"_index":1511,"title":{},"body":{"guards/ResponseGuard.html":{}}}],["node.js",{"_index":1818,"title":{},"body":{"index.html":{}}}],["node_env",{"_index":273,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["notfounderror",{"_index":1446,"title":{},"body":{"classes/QueryFailedFilter.html":{}}}],["notfoundexception",{"_index":165,"title":{},"body":{"classes/ApiException.html":{},"classes/CrudController.html":{},"classes/CrudService.html":{},"injectables/UsersService.html":{}}}],["nothing",{"_index":581,"title":{},"body":{"classes/CreateTagsDto.html":{},"classes/CreateUserDto.html":{},"interfaces/ITag.html":{},"interfaces/IUser.html":{},"classes/Tag.html":{},"classes/UpdateTagsDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{}}}],["notnullviolationerror",{"_index":1444,"title":{},"body":{"classes/QueryFailedFilter.html":{}}}],["npm",{"_index":1828,"title":{},"body":{"index.html":{}}}],["null",{"_index":36,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"classes/BaseModel.html":{},"interfaces/BaseRoute.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/CrudOptions.html":{},"classes/CustomQueryBuilder.html":{},"injectables/ExcludeNullUndefinedInterceptor.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetManyDefaultResponse.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/IBaseModel.html":{},"interfaces/ParamOption.html":{},"interfaces/ParamsOptions.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"guards/ResponseGuard.html":{},"interfaces/Result.html":{},"classes/Tag.html":{},"classes/User.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"interfaces/User.html":{}}}],["number",{"_index":18,"title":{},"body":{"interfaces/APIResponse.html":{},"classes/ApiException.html":{},"interfaces/AppLaunchAction.html":{},"classes/BaseModel.html":{},"interfaces/BaseRoute.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"injectables/CronService.html":{},"classes/CrudConfigService.html":{},"classes/CrudController.html":{},"interfaces/CrudOptions.html":{},"classes/CrudRoutesFactory.html":{},"classes/CrudService.html":{},"classes/CustomQueryBuilder.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetManyDefaultResponse.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"controllers/HealthController.html":{},"interfaces/IBaseModel.html":{},"interfaces/ICrudService.html":{},"interfaces/IPaginationResult.html":{},"classes/PaginationParams.html":{},"interfaces/ParamOption.html":{},"interfaces/ParamsOptions.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"classes/R.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/Result.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{},"classes/Tag.html":{},"controllers/TagsController.html":{},"injectables/TagsService.html":{},"classes/User.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{},"interfaces/User.html":{}}}],["number.isfinite(val",{"_index":1921,"title":{},"body":{"miscellaneous/variables.html":{}}}],["number.isnan(val",{"_index":1920,"title":{},"body":{"miscellaneous/variables.html":{}}}],["numberoffollowers",{"_index":62,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/Result.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{},"interfaces/User.html":{}}}],["numberoffollowing",{"_index":63,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/Result.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{},"interfaces/User.html":{}}}],["numberofposts",{"_index":64,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/Result.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{},"interfaces/User.html":{}}}],["numberofrescuescompleted",{"_index":65,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/Result.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{},"interfaces/User.html":{}}}],["numberofrescuescreated",{"_index":66,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/Result.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{},"interfaces/User.html":{}}}],["numberofrescuesinprogress",{"_index":67,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/Result.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{},"interfaces/User.html":{}}}],["numberquerybuildertype",{"_index":1125,"title":{},"body":{"classes/CustomQueryBuilder.html":{}}}],["o",{"_index":1917,"title":{},"body":{"miscellaneous/variables.html":{}}}],["object",{"_index":529,"title":{},"body":{"interfaces/BaseRoute.html":{},"classes/CreateTagsDto.html":{},"classes/CreateUserDto.html":{},"classes/CrudConfigService.html":{},"interfaces/CrudOptions.html":{},"classes/CrudRoutesFactory.html":{},"classes/CrudService.html":{},"classes/CustomQueryBuilder.html":{},"injectables/ExcludeNullUndefinedInterceptor.html":{},"interfaces/GetManyDefaultResponse.html":{},"interfaces/ITag.html":{},"interfaces/IUser.html":{},"interfaces/ParamOption.html":{},"interfaces/ParamsOptions.html":{},"classes/R.html":{},"guards/ResponseGuard.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{},"classes/Tag.html":{},"injectables/TagsService.html":{},"classes/UpdateTagsDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"injectables/UsersService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["object.defineproperty(getmanyresponsedto",{"_index":871,"title":{},"body":{"classes/CrudConfigService.html":{},"classes/CrudRoutesFactory.html":{},"classes/R.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{}}}],["object.defineproperty(getoneresponsedto",{"_index":876,"title":{},"body":{"classes/CrudConfigService.html":{},"classes/CrudRoutesFactory.html":{},"classes/R.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{}}}],["object.entries(value).map(([key",{"_index":1275,"title":{},"body":{"injectables/ExcludeNullUndefinedInterceptor.html":{}}}],["object.fromentries",{"_index":1273,"title":{},"body":{"injectables/ExcludeNullUndefinedInterceptor.html":{}}}],["object.getownpropertynames(val",{"_index":1893,"title":{},"body":{"miscellaneous/variables.html":{}}}],["object.keys(val",{"_index":1894,"title":{},"body":{"miscellaneous/variables.html":{}}}],["objection",{"_index":454,"title":{},"body":{"classes/BaseModel.html":{},"classes/CreateTagsDto.html":{},"classes/CreateUserDto.html":{},"classes/CrudService.html":{},"classes/CustomQueryBuilder.html":{},"modules/DatabaseModule.html":{},"interfaces/IBaseModel.html":{},"interfaces/ITag.html":{},"interfaces/IUser.html":{},"classes/QueryFailedFilter.html":{},"classes/Tag.html":{},"injectables/TagsService.html":{},"classes/UpdateTagsDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"injectables/UsersService.html":{},"classes/ValidationFailedFilter.html":{},"dependencies.html":{}}}],["objection.fetchgraphoptions",{"_index":451,"title":{},"body":{"classes/BaseModel.html":{},"interfaces/IBaseModel.html":{},"classes/Tag.html":{},"classes/User.html":{}}}],["objectliteral",{"_index":1877,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["objkeys",{"_index":810,"title":{},"body":{"classes/CrudConfigService.html":{},"classes/CrudRoutesFactory.html":{},"classes/R.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["objkeys(swaggermodels",{"_index":833,"title":{},"body":{"classes/CrudConfigService.html":{},"classes/CrudRoutesFactory.html":{},"classes/R.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{}}}],["observable",{"_index":1265,"title":{},"body":{"injectables/ExcludeNullUndefinedInterceptor.html":{},"controllers/HealthController.html":{},"guards/RequestGuard.html":{},"interfaces/Response.html":{},"guards/ResponseGuard.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/TransformInterceptor.html":{}}}],["observer",{"_index":1586,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["occurrence",{"_index":1258,"title":{},"body":{"injectables/ExcludeNullUndefinedInterceptor.html":{}}}],["offset",{"_index":1164,"title":{},"body":{"classes/CustomQueryBuilder.html":{}}}],["ok",{"_index":758,"title":{},"body":{"injectables/CronService.html":{}}}],["onapplicationbootstrap",{"_index":1415,"title":{},"body":{"injectables/PersistedCronService.html":{}}}],["onapplicationshutdown",{"_index":238,"title":{},"body":{"modules/AppModule.html":{},"controllers/HealthController.html":{}}}],["onapplicationshutdown(signal",{"_index":239,"title":{},"body":{"modules/AppModule.html":{},"controllers/HealthController.html":{}}}],["once",{"_index":684,"title":{},"body":{"injectables/CronService.html":{}}}],["one",{"_index":837,"title":{},"body":{"classes/CrudConfigService.html":{},"classes/CrudController.html":{},"classes/CrudRoutesFactory.html":{},"classes/CrudService.html":{},"classes/R.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{},"injectables/TagsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["one.name",{"_index":838,"title":{},"body":{"classes/CrudConfigService.html":{},"classes/CrudRoutesFactory.html":{},"classes/R.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{}}}],["oneof",{"_index":858,"title":{},"body":{"classes/CrudConfigService.html":{},"classes/CrudRoutesFactory.html":{},"classes/R.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{}}}],["onlycount",{"_index":1130,"title":{},"body":{"classes/CustomQueryBuilder.html":{}}}],["onmoduledestroy",{"_index":299,"title":{},"body":{"modules/AppModule.html":{}}}],["onmoduleinit",{"_index":244,"title":{},"body":{"modules/AppModule.html":{},"controllers/HealthController.html":{}}}],["onw",{"_index":1104,"title":{},"body":{"classes/CrudService.html":{},"injectables/TagsService.html":{},"injectables/UsersService.html":{}}}],["open",{"_index":1843,"title":{},"body":{"index.html":{}}}],["operation",{"_index":1379,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["opt",{"_index":448,"title":{},"body":{"classes/BaseModel.html":{},"classes/Tag.html":{},"classes/User.html":{}}}],["optional",{"_index":9,"title":{},"body":{"interfaces/APIResponse.html":{},"classes/ApiException.html":{},"interfaces/AppLaunchAction.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/BaseModel.html":{},"classes/CreateUserDto.html":{},"injectables/CronService.html":{},"classes/CrudConfigService.html":{},"classes/CrudController.html":{},"interfaces/CrudOptions.html":{},"classes/CrudRoutesFactory.html":{},"classes/CrudService.html":{},"classes/CustomQueryBuilder.html":{},"controllers/EmailSchedulingController.html":{},"injectables/EmailSchedulingService.html":{},"injectables/EmailService.html":{},"injectables/ExcludeNullUndefinedInterceptor.html":{},"controllers/HealthController.html":{},"interfaces/IBaseModel.html":{},"interfaces/ICrudService.html":{},"interfaces/IPaginationResult.html":{},"interfaces/ITryRequest.html":{},"interfaces/IUser.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/PaginationParams.html":{},"interfaces/ParamOption.html":{},"injectables/PersistedCronService.html":{},"classes/QueryFailedFilter.html":{},"classes/R.html":{},"guards/RequestGuard.html":{},"guards/ResponseGuard.html":{},"interfaces/Result.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{},"classes/Tag.html":{},"controllers/TagsController.html":{},"injectables/TagsService.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/TransformInterceptor.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"classes/ValidationFailedFilter.html":{},"miscellaneous/functions.html":{}}}],["options",{"_index":450,"title":{},"body":{"classes/BaseModel.html":{},"classes/CrudConfigService.html":{},"classes/CrudRoutesFactory.html":{},"injectables/EmailService.html":{},"interfaces/IBaseModel.html":{},"classes/R.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{},"classes/Tag.html":{},"classes/User.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["order",{"_index":1003,"title":{},"body":{"classes/CrudController.html":{},"classes/CrudService.html":{},"interfaces/IPaginationResult.html":{},"classes/PaginationParams.html":{}}}],["ordertype",{"_index":1339,"title":{},"body":{"interfaces/IPaginationResult.html":{},"classes/PaginationParams.html":{},"miscellaneous/enumerations.html":{}}}],["os",{"_index":1294,"title":{},"body":{"controllers/HealthController.html":{}}}],["os.loadavg",{"_index":1322,"title":{},"body":{"controllers/HealthController.html":{}}}],["out",{"_index":234,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CronModule.html":{},"modules/EmailModule.html":{},"modules/EmailSchedulingModule.html":{},"injectables/PersistedCronService.html":{},"modules/TagsModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["override",{"_index":490,"title":{},"body":{"interfaces/BaseRoute.html":{},"classes/CrudConfigService.html":{},"interfaces/CrudOptions.html":{},"classes/CrudRoutesFactory.html":{},"interfaces/GetManyDefaultResponse.html":{},"interfaces/ParamOption.html":{},"interfaces/ParamsOptions.html":{},"classes/R.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{}}}],["override.ts",{"_index":1255,"title":{},"body":{"injectables/ExcludeNullUndefinedInterceptor.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["override.ts:43",{"_index":1263,"title":{},"body":{"injectables/ExcludeNullUndefinedInterceptor.html":{}}}],["overview",{"_index":1870,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["ownpage",{"_index":89,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/Result.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{},"interfaces/User.html":{}}}],["p",{"_index":1348,"title":{},"body":{"interfaces/IPaginationResult.html":{},"classes/PaginationParams.html":{}}}],["pack",{"_index":543,"title":{},"body":{"interfaces/BaseRoute.html":{},"interfaces/CrudOptions.html":{},"interfaces/GetManyDefaultResponse.html":{},"interfaces/ParamOption.html":{},"interfaces/ParamsOptions.html":{}}}],["package",{"_index":1737,"title":{"dependencies.html":{}},"body":{}}],["page",{"_index":14,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/BaseRoute.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"classes/CrudConfigService.html":{},"interfaces/CrudOptions.html":{},"classes/CrudRoutesFactory.html":{},"classes/CrudService.html":{},"classes/CustomQueryBuilder.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetManyDefaultResponse.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/IPaginationResult.html":{},"classes/PaginationParams.html":{},"interfaces/ParamOption.html":{},"interfaces/ParamsOptions.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"classes/R.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/Result.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{},"interfaces/User.html":{}}}],["pagecount",{"_index":15,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/BaseRoute.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"classes/CrudConfigService.html":{},"interfaces/CrudOptions.html":{},"classes/CrudRoutesFactory.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetManyDefaultResponse.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/ParamOption.html":{},"interfaces/ParamsOptions.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"classes/R.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/Result.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{},"interfaces/User.html":{}}}],["pagequerybuildertype",{"_index":1126,"title":{},"body":{"classes/CustomQueryBuilder.html":{}}}],["pagesize",{"_index":1112,"title":{},"body":{"classes/CrudService.html":{},"interfaces/IPaginationResult.html":{},"classes/PaginationParams.html":{}}}],["paginate",{"_index":1131,"title":{},"body":{"classes/CustomQueryBuilder.html":{}}}],["paginate(page",{"_index":1142,"title":{},"body":{"classes/CustomQueryBuilder.html":{}}}],["paginated",{"_index":855,"title":{},"body":{"classes/CrudConfigService.html":{},"classes/CrudRoutesFactory.html":{},"classes/CrudService.html":{},"classes/R.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{},"injectables/TagsService.html":{},"injectables/UsersService.html":{}}}],["paginatedfindall",{"_index":1091,"title":{},"body":{"classes/CrudService.html":{},"interfaces/ICrudService.html":{},"injectables/TagsService.html":{},"injectables/UsersService.html":{}}}],["paginatedfindall(paginationparams",{"_index":1106,"title":{},"body":{"classes/CrudService.html":{},"interfaces/ICrudService.html":{},"injectables/TagsService.html":{},"injectables/UsersService.html":{}}}],["pagination",{"_index":471,"title":{},"body":{"classes/BaseModel.html":{},"classes/CrudController.html":{},"classes/CrudService.html":{},"classes/CustomQueryBuilder.html":{},"interfaces/IBaseModel.html":{},"interfaces/ICrudService.html":{},"interfaces/IPaginationResult.html":{},"classes/PaginationParams.html":{}}}],["paginationparams",{"_index":1013,"title":{"classes/PaginationParams.html":{}},"body":{"classes/CrudController.html":{},"classes/CrudService.html":{},"interfaces/ICrudService.html":{},"interfaces/IPaginationResult.html":{},"classes/PaginationParams.html":{},"injectables/TagsService.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["paging",{"_index":1045,"title":{},"body":{"classes/CrudController.html":{},"classes/CrudService.html":{},"interfaces/IPaginationResult.html":{},"classes/PaginationParams.html":{}}}],["param",{"_index":765,"title":{},"body":{"injectables/CronService.html":{},"classes/CrudController.html":{},"classes/CrudService.html":{},"classes/CustomQueryBuilder.html":{},"controllers/HealthController.html":{},"guards/RequestGuard.html":{},"guards/ResponseGuard.html":{},"controllers/TagsController.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["param('id",{"_index":1559,"title":{},"body":{"controllers/TagsController.html":{},"controllers/UsersController.html":{}}}],["parameter",{"_index":306,"title":{},"body":{"modules/AppModule.html":{}}}],["parameters",{"_index":150,"title":{},"body":{"classes/ApiException.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/BaseModel.html":{},"injectables/CronService.html":{},"classes/CrudConfigService.html":{},"classes/CrudController.html":{},"classes/CrudRoutesFactory.html":{},"classes/CrudService.html":{},"classes/CustomQueryBuilder.html":{},"controllers/EmailSchedulingController.html":{},"injectables/EmailSchedulingService.html":{},"injectables/EmailService.html":{},"injectables/ExcludeNullUndefinedInterceptor.html":{},"controllers/HealthController.html":{},"interfaces/ICrudService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/PersistedCronService.html":{},"classes/QueryFailedFilter.html":{},"classes/R.html":{},"guards/RequestGuard.html":{},"guards/ResponseGuard.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{},"classes/Tag.html":{},"controllers/TagsController.html":{},"injectables/TagsService.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/TransformInterceptor.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"classes/ValidationFailedFilter.html":{},"miscellaneous/functions.html":{}}}],["paramoption",{"_index":508,"title":{"interfaces/ParamOption.html":{}},"body":{"interfaces/BaseRoute.html":{},"interfaces/CrudOptions.html":{},"interfaces/GetManyDefaultResponse.html":{},"interfaces/ParamOption.html":{},"interfaces/ParamsOptions.html":{},"coverage.html":{}}}],["params",{"_index":522,"title":{},"body":{"interfaces/BaseRoute.html":{},"classes/CrudConfigService.html":{},"interfaces/CrudOptions.html":{},"classes/CrudRoutesFactory.html":{},"interfaces/GetManyDefaultResponse.html":{},"interfaces/IPaginationResult.html":{},"classes/PaginationParams.html":{},"interfaces/ParamOption.html":{},"interfaces/ParamsOptions.html":{},"classes/R.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{}}}],["paramsoptions",{"_index":514,"title":{"interfaces/ParamsOptions.html":{}},"body":{"interfaces/BaseRoute.html":{},"interfaces/CrudOptions.html":{},"interfaces/GetManyDefaultResponse.html":{},"interfaces/ParamOption.html":{},"interfaces/ParamsOptions.html":{},"coverage.html":{}}}],["parentheses",{"_index":645,"title":{},"body":{"classes/CreateUserDto.html":{},"interfaces/IUser.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{}}}],["parseint(val",{"_index":1346,"title":{},"body":{"interfaces/IPaginationResult.html":{},"classes/PaginationParams.html":{}}}],["parseintpipe",{"_index":1032,"title":{},"body":{"classes/CrudController.html":{},"controllers/TagsController.html":{},"controllers/UsersController.html":{}}}],["partial",{"_index":801,"title":{},"body":{"classes/CrudConfigService.html":{},"classes/CrudController.html":{},"classes/CrudRoutesFactory.html":{},"classes/CrudService.html":{},"interfaces/ICrudService.html":{},"classes/R.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{},"injectables/TagsService.html":{},"injectables/UsersService.html":{}}}],["partially",{"_index":638,"title":{},"body":{"classes/CreateUserDto.html":{},"interfaces/IUser.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{}}}],["partialmodelobject",{"_index":574,"title":{},"body":{"classes/CreateTagsDto.html":{},"classes/CreateUserDto.html":{},"interfaces/ITag.html":{},"interfaces/IUser.html":{},"classes/Tag.html":{},"classes/UpdateTagsDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"miscellaneous/typealiases.html":{}}}],["partialtagshape",{"_index":599,"title":{},"body":{"classes/CreateTagsDto.html":{},"interfaces/ITag.html":{},"classes/Tag.html":{},"classes/UpdateTagsDto.html":{},"miscellaneous/typealiases.html":{}}}],["partialtype",{"_index":568,"title":{},"body":{"classes/CreateTagsDto.html":{},"classes/CreateUserDto.html":{},"interfaces/ITag.html":{},"interfaces/IUser.html":{},"classes/Tag.html":{},"classes/UpdateTagsDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{}}}],["partialtype(createtagsdto",{"_index":603,"title":{},"body":{"classes/CreateTagsDto.html":{},"interfaces/ITag.html":{},"classes/Tag.html":{},"classes/UpdateTagsDto.html":{}}}],["partialtype(createuserdto",{"_index":667,"title":{},"body":{"classes/CreateUserDto.html":{},"interfaces/IUser.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{}}}],["partialusershape",{"_index":664,"title":{},"body":{"classes/CreateUserDto.html":{},"interfaces/IUser.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"miscellaneous/typealiases.html":{}}}],["passport",{"_index":1366,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"dependencies.html":{}}}],["passportmodule",{"_index":376,"title":{},"body":{"modules/AuthModule.html":{}}}],["passportstrategy",{"_index":1363,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["passportstrategy(strategy",{"_index":1369,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["password",{"_index":354,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/BaseModel.html":{},"classes/CreateUserDto.html":{},"interfaces/IBaseModel.html":{},"interfaces/IUser.html":{},"injectables/LocalStrategy.html":{},"classes/LoginCredsDto.html":{},"classes/Tag.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"injectables/UsersService.html":{}}}],["passwordfield",{"_index":1381,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["past",{"_index":763,"title":{},"body":{"injectables/CronService.html":{}}}],["path",{"_index":141,"title":{},"body":{"classes/ApiException.html":{},"controllers/AppController.html":{},"controllers/AuthController.html":{},"interfaces/BaseRoute.html":{},"classes/CrudConfigService.html":{},"interfaces/CrudOptions.html":{},"classes/CrudRoutesFactory.html":{},"controllers/EmailSchedulingController.html":{},"interfaces/GetManyDefaultResponse.html":{},"controllers/HealthController.html":{},"classes/LoginCredsDto.html":{},"interfaces/ParamOption.html":{},"interfaces/ParamsOptions.html":{},"classes/QueryFailedFilter.html":{},"classes/R.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{},"controllers/TagsController.html":{},"controllers/UsersController.html":{},"classes/ValidationFailedFilter.html":{},"miscellaneous/functions.html":{}}}],["payload",{"_index":1362,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["payload.email",{"_index":1375,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["perform",{"_index":1378,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["perpage",{"_index":1143,"title":{},"body":{"classes/CustomQueryBuilder.html":{}}}],["persisted",{"_index":674,"title":{},"body":{"modules/CronModule.html":{}}}],["persistedcronservice",{"_index":671,"title":{"injectables/PersistedCronService.html":{}},"body":{"modules/CronModule.html":{},"injectables/PersistedCronService.html":{},"coverage.html":{},"overview.html":{}}}],["pidusage",{"_index":1295,"title":{},"body":{"controllers/HealthController.html":{},"dependencies.html":{}}}],["pieces",{"_index":635,"title":{},"body":{"classes/CreateUserDto.html":{},"interfaces/IUser.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{}}}],["places",{"_index":629,"title":{},"body":{"classes/CreateUserDto.html":{},"interfaces/IUser.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{}}}],["please",{"_index":1852,"title":{},"body":{"index.html":{}}}],["port",{"_index":271,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["post",{"_index":337,"title":{},"body":{"controllers/AuthController.html":{},"classes/CrudController.html":{},"controllers/EmailSchedulingController.html":{},"classes/LoginCredsDto.html":{},"controllers/TagsController.html":{},"controllers/UsersController.html":{}}}],["post(':id",{"_index":1055,"title":{},"body":{"classes/CrudController.html":{}}}],["post('login",{"_index":360,"title":{},"body":{"controllers/AuthController.html":{},"classes/LoginCredsDto.html":{}}}],["post('schedule",{"_index":1211,"title":{},"body":{"controllers/EmailSchedulingController.html":{}}}],["postby",{"_index":90,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/Result.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{},"interfaces/User.html":{}}}],["postedby",{"_index":108,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/Result.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{},"interfaces/User.html":{}}}],["postedbyuser",{"_index":84,"title":{"interfaces/PostedByUser.html":{}},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/Result.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{},"coverage.html":{},"interfaces/User.html":{}}}],["postedminago",{"_index":109,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/Result.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{},"interfaces/User.html":{}}}],["postid",{"_index":86,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/Result.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{},"interfaces/User.html":{}}}],["postimage",{"_index":91,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/Result.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{},"interfaces/User.html":{}}}],["posttime",{"_index":92,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/Result.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{},"interfaces/User.html":{}}}],["posttype",{"_index":82,"title":{"interfaces/PostType.html":{}},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/Result.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{},"coverage.html":{},"interfaces/User.html":{}}}],["posttypeid",{"_index":83,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/Result.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{},"interfaces/User.html":{}}}],["postvideo",{"_index":93,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/Result.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{},"interfaces/User.html":{}}}],["primary",{"_index":512,"title":{},"body":{"interfaces/BaseRoute.html":{},"interfaces/CrudOptions.html":{},"interfaces/GetManyDefaultResponse.html":{},"interfaces/ParamOption.html":{},"interfaces/ParamsOptions.html":{}}}],["private",{"_index":907,"title":{},"body":{"classes/CrudConfigService.html":{},"classes/CrudRoutesFactory.html":{},"injectables/EmailService.html":{},"classes/R.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{}}}],["process.pid",{"_index":1311,"title":{},"body":{"controllers/HealthController.html":{}}}],["production",{"_index":277,"title":{},"body":{"modules/AppModule.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["profileid",{"_index":117,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/Result.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{},"interfaces/User.html":{}}}],["profileimage",{"_index":68,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/Result.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{},"interfaces/User.html":{}}}],["profileimageurl",{"_index":118,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/Result.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{},"interfaces/User.html":{}}}],["progressive",{"_index":1817,"title":{},"body":{"index.html":{}}}],["project",{"_index":1844,"title":{},"body":{"index.html":{}}}],["promise",{"_index":309,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"classes/CrudController.html":{},"classes/CrudService.html":{},"classes/CustomQueryBuilder.html":{},"interfaces/ICrudService.html":{},"classes/LoginCredsDto.html":{},"guards/RequestGuard.html":{},"guards/ResponseGuard.html":{},"miscellaneous/functions.html":{}}}],["promise.reject",{"_index":413,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/TagsService.html":{}}}],["promise.reject(e",{"_index":1121,"title":{},"body":{"classes/CrudService.html":{}}}],["promise.reject(new",{"_index":419,"title":{},"body":{"injectables/AuthService.html":{},"classes/CrudService.html":{},"injectables/JwtStrategy.html":{},"injectables/UsersService.html":{}}}],["promise.resolve",{"_index":1434,"title":{},"body":{"injectables/PersistedCronService.html":{}}}],["proper",{"_index":1004,"title":{},"body":{"classes/CrudController.html":{},"classes/CrudService.html":{}}}],["properties",{"_index":8,"title":{},"body":{"interfaces/APIResponse.html":{},"classes/ApiException.html":{},"interfaces/AppLaunchAction.html":{},"classes/BaseModel.html":{},"interfaces/BaseRoute.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"classes/CreateTagsDto.html":{},"classes/CreateUserDto.html":{},"injectables/CronService.html":{},"classes/CrudConfigService.html":{},"interfaces/CrudOptions.html":{},"classes/CrudRoutesFactory.html":{},"classes/CustomQueryBuilder.html":{},"classes/EmailScheduleDto.html":{},"injectables/EmailSchedulingService.html":{},"interfaces/Follower.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetManyDefaultResponse.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/IBaseModel.html":{},"interfaces/IPaginationResult.html":{},"interfaces/ITag.html":{},"interfaces/ITryRequest.html":{},"interfaces/IUser.html":{},"injectables/LocalStrategy.html":{},"classes/LoginCredsDto.html":{},"classes/PaginationParams.html":{},"interfaces/ParamOption.html":{},"injectables/PersistedCronService.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/Response.html":{},"interfaces/Result.html":{},"classes/Tag.html":{},"interfaces/TokenPayload.html":{},"classes/UpdateTagsDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{},"interfaces/User.html":{}}}],["propertydecorator",{"_index":553,"title":{},"body":{"interfaces/BaseRoute.html":{},"interfaces/CrudOptions.html":{},"interfaces/GetManyDefaultResponse.html":{},"interfaces/ParamOption.html":{},"interfaces/ParamsOptions.html":{},"miscellaneous/functions.html":{}}}],["propertykey",{"_index":555,"title":{},"body":{"interfaces/BaseRoute.html":{},"classes/CrudConfigService.html":{},"interfaces/CrudOptions.html":{},"classes/CrudRoutesFactory.html":{},"interfaces/GetManyDefaultResponse.html":{},"interfaces/ParamOption.html":{},"interfaces/ParamsOptions.html":{},"classes/R.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{}}}],["protected",{"_index":889,"title":{},"body":{"classes/CrudConfigService.html":{},"classes/CrudController.html":{},"classes/CrudRoutesFactory.html":{},"classes/CrudService.html":{},"classes/R.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{}}}],["provide",{"_index":988,"title":{},"body":{"classes/CrudController.html":{},"classes/CrudService.html":{},"modules/DatabaseModule.html":{},"miscellaneous/variables.html":{}}}],["provided",{"_index":1018,"title":{},"body":{"classes/CrudController.html":{},"controllers/UsersController.html":{}}}],["providers",{"_index":222,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CronModule.html":{},"modules/DatabaseModule.html":{},"modules/EmailModule.html":{},"modules/EmailSchedulingModule.html":{},"modules/TagsModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["provision",{"_index":279,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["put",{"_index":1033,"title":{},"body":{"classes/CrudController.html":{},"controllers/TagsController.html":{},"controllers/UsersController.html":{}}}],["put(':id",{"_index":1059,"title":{},"body":{"classes/CrudController.html":{},"controllers/TagsController.html":{},"controllers/UsersController.html":{}}}],["q.orwhereraw('lower",{"_index":653,"title":{},"body":{"classes/CreateUserDto.html":{},"interfaces/IUser.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{}}}],["query",{"_index":467,"title":{},"body":{"classes/BaseModel.html":{},"interfaces/BaseRoute.html":{},"classes/CreateUserDto.html":{},"classes/CrudConfigService.html":{},"classes/CrudController.html":{},"interfaces/CrudOptions.html":{},"classes/CrudRoutesFactory.html":{},"classes/CustomQueryBuilder.html":{},"interfaces/GetManyDefaultResponse.html":{},"interfaces/IBaseModel.html":{},"interfaces/IUser.html":{},"interfaces/ParamOption.html":{},"interfaces/ParamsOptions.html":{},"classes/R.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{}}}],["query.offset(offset).limit(size",{"_index":1168,"title":{},"body":{"classes/CustomQueryBuilder.html":{}}}],["query.where((q",{"_index":649,"title":{},"body":{"classes/CreateUserDto.html":{},"interfaces/IUser.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{}}}],["query?.alwayspaginate",{"_index":854,"title":{},"body":{"classes/CrudConfigService.html":{},"classes/CrudRoutesFactory.html":{},"classes/R.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{}}}],["querybuilder",{"_index":430,"title":{},"body":{"classes/BaseModel.html":{},"classes/CustomQueryBuilder.html":{},"interfaces/IBaseModel.html":{},"classes/Tag.html":{},"classes/User.html":{}}}],["querybuildertype",{"_index":468,"title":{},"body":{"classes/BaseModel.html":{},"interfaces/IBaseModel.html":{}}}],["querycontext",{"_index":446,"title":{},"body":{"classes/BaseModel.html":{},"classes/CreateUserDto.html":{},"interfaces/IBaseModel.html":{},"interfaces/IUser.html":{},"classes/Tag.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{}}}],["queryfailedfilter",{"_index":1435,"title":{"classes/QueryFailedFilter.html":{}},"body":{"classes/QueryFailedFilter.html":{},"coverage.html":{}}}],["r",{"_index":812,"title":{"classes/R.html":{}},"body":{"classes/CrudConfigService.html":{},"classes/CrudRoutesFactory.html":{},"classes/R.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{},"coverage.html":{}}}],["r.get(swaggerconst.api_extra_models",{"_index":846,"title":{},"body":{"classes/CrudConfigService.html":{},"classes/CrudRoutesFactory.html":{},"classes/R.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{}}}],["r.get(swaggerconst.decorators.api_response",{"_index":848,"title":{},"body":{"classes/CrudConfigService.html":{},"classes/CrudRoutesFactory.html":{},"classes/R.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{}}}],["r.set",{"_index":840,"title":{},"body":{"classes/CrudConfigService.html":{},"classes/CrudRoutesFactory.html":{},"classes/R.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{}}}],["r.set('crud_options_metadata",{"_index":952,"title":{},"body":{"classes/CrudConfigService.html":{},"classes/CrudRoutesFactory.html":{},"classes/R.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{}}}],["r.set('method",{"_index":822,"title":{},"body":{"classes/CrudConfigService.html":{},"classes/CrudRoutesFactory.html":{},"classes/R.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{}}}],["r.set('path",{"_index":820,"title":{},"body":{"classes/CrudConfigService.html":{},"classes/CrudRoutesFactory.html":{},"classes/R.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{}}}],["r.set(swaggerconst.decorators.api_response",{"_index":844,"title":{},"body":{"classes/CrudConfigService.html":{},"classes/CrudRoutesFactory.html":{},"classes/R.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{}}}],["r.setroute(route",{"_index":974,"title":{},"body":{"classes/CrudConfigService.html":{},"classes/CrudRoutesFactory.html":{},"classes/R.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{}}}],["range",{"_index":1775,"title":{},"body":{"dependencies.html":{}}}],["rate",{"_index":1768,"title":{},"body":{"dependencies.html":{}}}],["raw",{"_index":455,"title":{},"body":{"classes/BaseModel.html":{},"classes/CrudService.html":{},"interfaces/IBaseModel.html":{},"injectables/UsersService.html":{}}}],["raw('current_timestamp",{"_index":485,"title":{},"body":{"classes/BaseModel.html":{},"classes/CrudService.html":{},"interfaces/IBaseModel.html":{}}}],["reactionscount",{"_index":94,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/Result.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{},"interfaces/User.html":{}}}],["read",{"_index":1853,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":351,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"classes/CrudController.html":{},"classes/CrudService.html":{},"injectables/EmailSchedulingService.html":{},"injectables/EmailService.html":{},"controllers/HealthController.html":{},"interfaces/IPaginationResult.html":{},"interfaces/IUser.html":{},"injectables/JwtStrategy.html":{},"classes/LoginCredsDto.html":{},"classes/PaginationParams.html":{},"injectables/TagsService.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"injectables/UsersService.html":{}}}],["reassign",{"_index":1153,"title":{},"body":{"classes/CustomQueryBuilder.html":{},"controllers/HealthController.html":{},"injectables/UsersService.html":{}}}],["receive",{"_index":999,"title":{},"body":{"classes/CrudController.html":{},"classes/CrudService.html":{}}}],["receives",{"_index":295,"title":{},"body":{"modules/AppModule.html":{}}}],["recipient",{"_index":1200,"title":{},"body":{"classes/EmailScheduleDto.html":{}}}],["record",{"_index":403,"title":{},"body":{"injectables/AuthService.html":{},"classes/BaseModel.html":{},"classes/CrudConfigService.html":{},"classes/CrudController.html":{},"classes/CrudRoutesFactory.html":{},"interfaces/IBaseModel.html":{},"interfaces/ITryRequest.html":{},"classes/R.html":{},"guards/RequestGuard.html":{},"guards/ResponseGuard.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{},"classes/Tag.html":{},"classes/User.html":{},"controllers/UsersController.html":{}}}],["record'})@apiresponse({status",{"_index":1007,"title":{},"body":{"classes/CrudController.html":{}}}],["record'})@delete(':id",{"_index":1025,"title":{},"body":{"classes/CrudController.html":{}}}],["records",{"_index":1043,"title":{},"body":{"classes/CrudController.html":{},"classes/CustomQueryBuilder.html":{}}}],["records'})@apiresponse({status",{"_index":1014,"title":{},"body":{"classes/CrudController.html":{}}}],["records'})@get",{"_index":1015,"title":{},"body":{"classes/CrudController.html":{}}}],["recuescompletionneeded",{"_index":78,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/Result.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{},"interfaces/User.html":{}}}],["recurring",{"_index":681,"title":{},"body":{"injectables/CronService.html":{}}}],["recursivelystripnullvalues",{"_index":1725,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["recursivelystripnullvalues(value",{"_index":1271,"title":{},"body":{"injectables/ExcludeNullUndefinedInterceptor.html":{},"miscellaneous/functions.html":{}}}],["ref",{"_index":859,"title":{},"body":{"classes/CrudConfigService.html":{},"classes/CrudRoutesFactory.html":{},"classes/R.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{}}}],["reflect",{"_index":1784,"title":{},"body":{"dependencies.html":{}}}],["reflect.definemetadata(metadatakey",{"_index":816,"title":{},"body":{"classes/CrudConfigService.html":{},"classes/CrudRoutesFactory.html":{},"classes/R.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{}}}],["reflect.getmetadata(metadatakey",{"_index":817,"title":{},"body":{"classes/CrudConfigService.html":{},"classes/CrudRoutesFactory.html":{},"classes/R.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{}}}],["registered",{"_index":298,"title":{},"body":{"modules/AppModule.html":{}}}],["regular",{"_index":677,"title":{},"body":{"injectables/CronService.html":{}}}],["rejected",{"_index":314,"title":{},"body":{"modules/AppModule.html":{}}}],["relation",{"_index":473,"title":{},"body":{"classes/BaseModel.html":{},"interfaces/IBaseModel.html":{}}}],["relationexpression",{"_index":458,"title":{},"body":{"classes/BaseModel.html":{},"interfaces/IBaseModel.html":{}}}],["remove",{"_index":995,"title":{},"body":{"classes/CrudController.html":{},"classes/CrudService.html":{},"interfaces/ICrudService.html":{},"injectables/TagsService.html":{},"injectables/UsersService.html":{}}}],["remove(@param('id",{"_index":1053,"title":{},"body":{"classes/CrudController.html":{}}}],["remove(id",{"_index":1022,"title":{},"body":{"classes/CrudController.html":{},"classes/CrudService.html":{},"interfaces/ICrudService.html":{},"injectables/TagsService.html":{},"injectables/UsersService.html":{}}}],["replace",{"_index":533,"title":{},"body":{"interfaces/BaseRoute.html":{},"interfaces/CrudOptions.html":{},"interfaces/GetManyDefaultResponse.html":{},"interfaces/ParamOption.html":{},"interfaces/ParamsOptions.html":{}}}],["replaceonebase",{"_index":504,"title":{},"body":{"interfaces/BaseRoute.html":{},"interfaces/CrudOptions.html":{},"interfaces/GetManyDefaultResponse.html":{},"interfaces/ParamOption.html":{},"interfaces/ParamsOptions.html":{},"miscellaneous/typealiases.html":{}}}],["repository",{"_index":1826,"title":{},"body":{"index.html":{}}}],["req",{"_index":335,"title":{},"body":{"controllers/AuthController.html":{},"classes/LoginCredsDto.html":{}}}],["request",{"_index":191,"title":{},"body":{"classes/ApiException.html":{},"controllers/AuthController.html":{},"classes/LoginCredsDto.html":{},"classes/QueryFailedFilter.html":{},"guards/RequestGuard.html":{},"injectables/TimeoutInterceptor.html":{},"classes/ValidationFailedFilter.html":{}}}],["request.all",{"_index":1490,"title":{},"body":{"guards/RequestGuard.html":{}}}],["request.body",{"_index":1482,"title":{},"body":{"guards/RequestGuard.html":{}}}],["request.params",{"_index":1483,"title":{},"body":{"guards/RequestGuard.html":{}}}],["request.query",{"_index":1481,"title":{},"body":{"guards/RequestGuard.html":{}}}],["request.ts",{"_index":1354,"title":{},"body":{"interfaces/ITryRequest.html":{},"coverage.html":{}}}],["request.url",{"_index":1460,"title":{},"body":{"classes/QueryFailedFilter.html":{},"classes/ValidationFailedFilter.html":{}}}],["requestguard",{"_index":1469,"title":{"guards/RequestGuard.html":{}},"body":{"guards/RequestGuard.html":{},"coverage.html":{}}}],["requestmethod",{"_index":492,"title":{},"body":{"interfaces/BaseRoute.html":{},"classes/CrudConfigService.html":{},"interfaces/CrudOptions.html":{},"classes/CrudRoutesFactory.html":{},"interfaces/GetManyDefaultResponse.html":{},"interfaces/ParamOption.html":{},"interfaces/ParamsOptions.html":{},"classes/R.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{}}}],["requestmethod.get",{"_index":922,"title":{},"body":{"classes/CrudConfigService.html":{},"classes/CrudRoutesFactory.html":{},"classes/R.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{}}}],["requesttimeoutexception",{"_index":1591,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["require",{"_index":542,"title":{},"body":{"interfaces/BaseRoute.html":{},"interfaces/CrudOptions.html":{},"interfaces/GetManyDefaultResponse.html":{},"interfaces/ParamOption.html":{},"interfaces/ParamsOptions.html":{}}}],["require(path",{"_index":544,"title":{},"body":{"interfaces/BaseRoute.html":{},"interfaces/CrudOptions.html":{},"interfaces/GetManyDefaultResponse.html":{},"interfaces/ParamOption.html":{},"interfaces/ParamsOptions.html":{}}}],["require,@typescript",{"_index":538,"title":{},"body":{"interfaces/BaseRoute.html":{},"interfaces/CrudOptions.html":{},"interfaces/GetManyDefaultResponse.html":{},"interfaces/ParamOption.html":{},"interfaces/ParamsOptions.html":{}}}],["required",{"_index":275,"title":{},"body":{"modules/AppModule.html":{},"classes/CreateTagsDto.html":{},"classes/CreateUserDto.html":{},"interfaces/ITag.html":{},"interfaces/IUser.html":{},"classes/Tag.html":{},"classes/UpdateTagsDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"miscellaneous/variables.html":{}}}],["requires,import/no",{"_index":540,"title":{},"body":{"interfaces/BaseRoute.html":{},"interfaces/CrudOptions.html":{},"interfaces/GetManyDefaultResponse.html":{},"interfaces/ParamOption.html":{},"interfaces/ParamsOptions.html":{}}}],["rescuedate",{"_index":110,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/Result.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{},"interfaces/User.html":{}}}],["rescuedpetname",{"_index":112,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/Result.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{},"interfaces/User.html":{}}}],["rescueid",{"_index":103,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/Result.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{},"interfaces/User.html":{}}}],["rescuelists",{"_index":122,"title":{"interfaces/RescueLists.html":{}},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/Result.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{},"coverage.html":{},"interfaces/User.html":{}}}],["rescuelocality",{"_index":113,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/Result.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{},"interfaces/User.html":{}}}],["rescuer",{"_index":69,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/Result.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{},"interfaces/User.html":{}}}],["rescuers",{"_index":114,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/Result.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{},"interfaces/User.html":{}}}],["rescues",{"_index":102,"title":{"interfaces/Rescues.html":{}},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/Result.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{},"coverage.html":{},"interfaces/User.html":{}}}],["rescuestatus",{"_index":120,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/Result.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{},"interfaces/User.html":{}}}],["reset",{"_index":233,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CronModule.html":{},"modules/EmailModule.html":{},"modules/EmailSchedulingModule.html":{},"modules/TagsModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["resolved",{"_index":313,"title":{},"body":{"modules/AppModule.html":{}}}],["resourcename",{"_index":868,"title":{},"body":{"classes/CrudConfigService.html":{},"classes/CrudRoutesFactory.html":{},"classes/R.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{}}}],["resourcename}responsedto",{"_index":877,"title":{},"body":{"classes/CrudConfigService.html":{},"classes/CrudRoutesFactory.html":{},"classes/R.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{}}}],["response",{"_index":40,"title":{"interfaces/Response.html":{}},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"classes/CrudConfigService.html":{},"classes/CrudRoutesFactory.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/IPaginationResult.html":{},"classes/PaginationParams.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"classes/QueryFailedFilter.html":{},"classes/R.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/Response.html":{},"guards/ResponseGuard.html":{},"interfaces/Result.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{},"injectables/TransformInterceptor.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{},"classes/ValidationFailedFilter.html":{},"coverage.html":{},"interfaces/User.html":{}}}],["response.error",{"_index":1515,"title":{},"body":{"guards/ResponseGuard.html":{}}}],["response.nocontent",{"_index":1519,"title":{},"body":{"guards/ResponseGuard.html":{}}}],["response.status(204).end",{"_index":1512,"title":{},"body":{"guards/ResponseGuard.html":{}}}],["response.status(status).json",{"_index":1459,"title":{},"body":{"classes/QueryFailedFilter.html":{},"guards/ResponseGuard.html":{},"classes/ValidationFailedFilter.html":{}}}],["response.success",{"_index":1516,"title":{},"body":{"guards/ResponseGuard.html":{}}}],["response.withmeta",{"_index":1517,"title":{},"body":{"guards/ResponseGuard.html":{}}}],["responseguard",{"_index":1494,"title":{"guards/ResponseGuard.html":{}},"body":{"guards/ResponseGuard.html":{},"coverage.html":{}}}],["restarts",{"_index":1409,"title":{},"body":{"injectables/PersistedCronService.html":{}}}],["restored",{"_index":1411,"title":{},"body":{"injectables/PersistedCronService.html":{}}}],["restricted",{"_index":1485,"title":{},"body":{"guards/RequestGuard.html":{}}}],["result",{"_index":37,"title":{"interfaces/Result.html":{}},"body":{"interfaces/APIResponse.html":{},"classes/ApiException.html":{},"controllers/AppController.html":{},"interfaces/AppLaunchAction.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/BaseModel.html":{},"interfaces/BaseRoute.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"classes/CreateTagsDto.html":{},"classes/CreateUserDto.html":{},"modules/CronModule.html":{},"injectables/CronService.html":{},"classes/CrudConfigService.html":{},"classes/CrudController.html":{},"interfaces/CrudOptions.html":{},"classes/CrudRoutesFactory.html":{},"classes/CrudService.html":{},"classes/CustomQueryBuilder.html":{},"modules/DatabaseModule.html":{},"modules/EmailModule.html":{},"classes/EmailScheduleDto.html":{},"controllers/EmailSchedulingController.html":{},"modules/EmailSchedulingModule.html":{},"injectables/EmailSchedulingService.html":{},"injectables/EmailService.html":{},"injectables/ExcludeNullUndefinedInterceptor.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetManyDefaultResponse.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"controllers/HealthController.html":{},"interfaces/IBaseModel.html":{},"interfaces/ICrudService.html":{},"interfaces/IPaginationResult.html":{},"interfaces/ITag.html":{},"interfaces/ITryRequest.html":{},"interfaces/IUser.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/LoginCredsDto.html":{},"classes/PaginationParams.html":{},"interfaces/ParamOption.html":{},"interfaces/ParamsOptions.html":{},"injectables/PersistedCronService.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"classes/QueryFailedFilter.html":{},"classes/R.html":{},"guards/RequestGuard.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/Response.html":{},"guards/ResponseGuard.html":{},"interfaces/Result.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{},"classes/Tag.html":{},"controllers/TagsController.html":{},"modules/TagsModule.html":{},"injectables/TagsService.html":{},"injectables/TimeoutInterceptor.html":{},"interfaces/TokenPayload.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateTagsDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"classes/ValidationFailedFilter.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"routes.html":{},"interfaces/User.html":{}}}],["result.results",{"_index":1159,"title":{},"body":{"classes/CustomQueryBuilder.html":{}}}],["result.total",{"_index":1158,"title":{},"body":{"classes/CustomQueryBuilder.html":{}}}],["result[0].c",{"_index":1161,"title":{},"body":{"classes/CustomQueryBuilder.html":{}}}],["results",{"_index":28,"title":{},"body":{"interfaces/APIResponse.html":{},"classes/ApiException.html":{},"controllers/AppController.html":{},"interfaces/AppLaunchAction.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/BaseModel.html":{},"interfaces/BaseRoute.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"classes/CreateTagsDto.html":{},"classes/CreateUserDto.html":{},"modules/CronModule.html":{},"injectables/CronService.html":{},"classes/CrudConfigService.html":{},"classes/CrudController.html":{},"interfaces/CrudOptions.html":{},"classes/CrudRoutesFactory.html":{},"classes/CrudService.html":{},"classes/CustomQueryBuilder.html":{},"modules/DatabaseModule.html":{},"modules/EmailModule.html":{},"classes/EmailScheduleDto.html":{},"controllers/EmailSchedulingController.html":{},"modules/EmailSchedulingModule.html":{},"injectables/EmailSchedulingService.html":{},"injectables/EmailService.html":{},"injectables/ExcludeNullUndefinedInterceptor.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetManyDefaultResponse.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"controllers/HealthController.html":{},"interfaces/IBaseModel.html":{},"interfaces/ICrudService.html":{},"interfaces/IPaginationResult.html":{},"interfaces/ITag.html":{},"interfaces/ITryRequest.html":{},"interfaces/IUser.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/LoginCredsDto.html":{},"classes/PaginationParams.html":{},"interfaces/ParamOption.html":{},"interfaces/ParamsOptions.html":{},"injectables/PersistedCronService.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"classes/QueryFailedFilter.html":{},"classes/R.html":{},"guards/RequestGuard.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/Response.html":{},"guards/ResponseGuard.html":{},"interfaces/Result.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{},"classes/Tag.html":{},"controllers/TagsController.html":{},"modules/TagsModule.html":{},"injectables/TagsService.html":{},"injectables/TimeoutInterceptor.html":{},"interfaces/TokenPayload.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateTagsDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"classes/ValidationFailedFilter.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"routes.html":{},"interfaces/User.html":{}}}],["retention",{"_index":1299,"title":{},"body":{"controllers/HealthController.html":{}}}],["return",{"_index":187,"title":{},"body":{"classes/ApiException.html":{},"controllers/AppController.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/BaseModel.html":{},"interfaces/BaseRoute.html":{},"classes/CreateUserDto.html":{},"injectables/CronService.html":{},"classes/CrudConfigService.html":{},"classes/CrudController.html":{},"interfaces/CrudOptions.html":{},"classes/CrudRoutesFactory.html":{},"classes/CrudService.html":{},"classes/CustomQueryBuilder.html":{},"modules/DatabaseModule.html":{},"injectables/ExcludeNullUndefinedInterceptor.html":{},"interfaces/GetManyDefaultResponse.html":{},"controllers/HealthController.html":{},"interfaces/IBaseModel.html":{},"interfaces/IUser.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/LoginCredsDto.html":{},"interfaces/ParamOption.html":{},"interfaces/ParamsOptions.html":{},"injectables/PersistedCronService.html":{},"classes/R.html":{},"guards/RequestGuard.html":{},"interfaces/Response.html":{},"guards/ResponseGuard.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{},"controllers/TagsController.html":{},"injectables/TagsService.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["return,@typescript",{"_index":1502,"title":{},"body":{"guards/ResponseGuard.html":{}}}],["returndeleted",{"_index":519,"title":{},"body":{"interfaces/BaseRoute.html":{},"interfaces/CrudOptions.html":{},"interfaces/GetManyDefaultResponse.html":{},"interfaces/ParamOption.html":{},"interfaces/ParamsOptions.html":{}}}],["returns",{"_index":203,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/BaseModel.html":{},"injectables/CronService.html":{},"classes/CrudConfigService.html":{},"classes/CrudController.html":{},"classes/CrudRoutesFactory.html":{},"classes/CrudService.html":{},"classes/CustomQueryBuilder.html":{},"controllers/EmailSchedulingController.html":{},"injectables/EmailSchedulingService.html":{},"injectables/EmailService.html":{},"injectables/ExcludeNullUndefinedInterceptor.html":{},"controllers/HealthController.html":{},"interfaces/ICrudService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/PersistedCronService.html":{},"classes/QueryFailedFilter.html":{},"classes/R.html":{},"guards/RequestGuard.html":{},"guards/ResponseGuard.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{},"classes/Tag.html":{},"controllers/TagsController.html":{},"injectables/TagsService.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/TransformInterceptor.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"classes/ValidationFailedFilter.html":{},"miscellaneous/functions.html":{}}}],["reusable",{"_index":626,"title":{},"body":{"classes/CreateUserDto.html":{},"interfaces/IUser.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{}}}],["rimraf",{"_index":1786,"title":{},"body":{"dependencies.html":{}}}],["route",{"_index":1467,"title":{},"body":{"classes/R.html":{}}}],["route.enable",{"_index":973,"title":{},"body":{"classes/CrudConfigService.html":{},"classes/CrudRoutesFactory.html":{},"classes/R.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{}}}],["route.method",{"_index":823,"title":{},"body":{"classes/CrudConfigService.html":{},"classes/CrudRoutesFactory.html":{},"classes/R.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{}}}],["route.override",{"_index":972,"title":{},"body":{"classes/CrudConfigService.html":{},"classes/CrudRoutesFactory.html":{},"classes/R.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{}}}],["route.path",{"_index":821,"title":{},"body":{"classes/CrudConfigService.html":{},"classes/CrudRoutesFactory.html":{},"classes/R.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{}}}],["routes",{"_index":518,"title":{"routes.html":{}},"body":{"interfaces/BaseRoute.html":{},"interfaces/CrudOptions.html":{},"interfaces/GetManyDefaultResponse.html":{},"interfaces/ParamOption.html":{},"interfaces/ParamsOptions.html":{},"routes.html":{}}}],["routes.factory.ts",{"_index":798,"title":{},"body":{"classes/CrudConfigService.html":{},"classes/CrudRoutesFactory.html":{},"classes/R.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{},"coverage.html":{}}}],["routes.factory.ts:161",{"_index":1522,"title":{},"body":{"classes/SerializeHelper.html":{}}}],["routes.factory.ts:188",{"_index":1523,"title":{},"body":{"classes/SerializeHelper.html":{}}}],["routes.factory.ts:20",{"_index":1465,"title":{},"body":{"classes/R.html":{}}}],["routes.factory.ts:201",{"_index":802,"title":{},"body":{"classes/CrudConfigService.html":{}}}],["routes.factory.ts:207",{"_index":804,"title":{},"body":{"classes/CrudConfigService.html":{}}}],["routes.factory.ts:221",{"_index":1069,"title":{},"body":{"classes/CrudRoutesFactory.html":{}}}],["routes.factory.ts:223",{"_index":1068,"title":{},"body":{"classes/CrudRoutesFactory.html":{}}}],["routes.factory.ts:239",{"_index":1070,"title":{},"body":{"classes/CrudRoutesFactory.html":{}}}],["routes.factory.ts:243",{"_index":1081,"title":{},"body":{"classes/CrudRoutesFactory.html":{}}}],["routes.factory.ts:248",{"_index":1083,"title":{},"body":{"classes/CrudRoutesFactory.html":{}}}],["routes.factory.ts:252",{"_index":1085,"title":{},"body":{"classes/CrudRoutesFactory.html":{}}}],["routes.factory.ts:256",{"_index":1071,"title":{},"body":{"classes/CrudRoutesFactory.html":{}}}],["routes.factory.ts:264",{"_index":1074,"title":{},"body":{"classes/CrudRoutesFactory.html":{}}}],["routes.factory.ts:270",{"_index":1075,"title":{},"body":{"classes/CrudRoutesFactory.html":{}}}],["routes.factory.ts:276",{"_index":1076,"title":{},"body":{"classes/CrudRoutesFactory.html":{}}}],["routes.factory.ts:297",{"_index":1077,"title":{},"body":{"classes/CrudRoutesFactory.html":{}}}],["routes.factory.ts:33",{"_index":1463,"title":{},"body":{"classes/R.html":{}}}],["routes.factory.ts:349",{"_index":1078,"title":{},"body":{"classes/CrudRoutesFactory.html":{}}}],["routes.factory.ts:381",{"_index":1073,"title":{},"body":{"classes/CrudRoutesFactory.html":{}}}],["routes.factory.ts:389",{"_index":1072,"title":{},"body":{"classes/CrudRoutesFactory.html":{}}}],["routes.factory.ts:400",{"_index":1079,"title":{},"body":{"classes/CrudRoutesFactory.html":{}}}],["routes.factory.ts:43",{"_index":1466,"title":{},"body":{"classes/R.html":{}}}],["routes.factory.ts:53",{"_index":1532,"title":{},"body":{"classes/Swagger.html":{}}}],["routes.factory.ts:77",{"_index":1533,"title":{},"body":{"classes/Swagger.html":{}}}],["routes.factory.ts:83",{"_index":1530,"title":{},"body":{"classes/Swagger.html":{}}}],["routes.factory.ts:89",{"_index":1531,"title":{},"body":{"classes/Swagger.html":{}}}],["routes.factory.ts:95",{"_index":1529,"title":{},"body":{"classes/Swagger.html":{}}}],["routesschema",{"_index":908,"title":{},"body":{"classes/CrudConfigService.html":{},"classes/CrudRoutesFactory.html":{},"classes/R.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{}}}],["routesschema.foreach((route",{"_index":971,"title":{},"body":{"classes/CrudConfigService.html":{},"classes/CrudRoutesFactory.html":{},"classes/R.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{}}}],["run",{"_index":680,"title":{},"body":{"injectables/CronService.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["run(boot",{"_index":1806,"title":{},"body":{"miscellaneous/functions.html":{}}}],["rxjs",{"_index":1267,"title":{},"body":{"injectables/ExcludeNullUndefinedInterceptor.html":{},"controllers/HealthController.html":{},"guards/RequestGuard.html":{},"interfaces/Response.html":{},"guards/ResponseGuard.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/TransformInterceptor.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":1269,"title":{},"body":{"injectables/ExcludeNullUndefinedInterceptor.html":{},"controllers/HealthController.html":{},"interfaces/Response.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/TransformInterceptor.html":{}}}],["saferequire",{"_index":1705,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["saferequire('@nestjs/swagger",{"_index":549,"title":{},"body":{"interfaces/BaseRoute.html":{},"interfaces/CrudOptions.html":{},"interfaces/GetManyDefaultResponse.html":{},"interfaces/ParamOption.html":{},"interfaces/ParamsOptions.html":{},"miscellaneous/variables.html":{}}}],["saferequire('@nestjs/swagger/dist/constants",{"_index":551,"title":{},"body":{"interfaces/BaseRoute.html":{},"interfaces/CrudOptions.html":{},"interfaces/GetManyDefaultResponse.html":{},"interfaces/ParamOption.html":{},"interfaces/ParamsOptions.html":{},"miscellaneous/variables.html":{}}}],["saferequire(path",{"_index":535,"title":{},"body":{"interfaces/BaseRoute.html":{},"interfaces/CrudOptions.html":{},"interfaces/GetManyDefaultResponse.html":{},"interfaces/ParamOption.html":{},"interfaces/ParamsOptions.html":{},"miscellaneous/functions.html":{}}}],["salt",{"_index":438,"title":{},"body":{"classes/BaseModel.html":{},"interfaces/IBaseModel.html":{},"classes/Tag.html":{},"classes/User.html":{}}}],["saved",{"_index":1428,"title":{},"body":{"injectables/PersistedCronService.html":{}}}],["scalable",{"_index":1822,"title":{},"body":{"index.html":{}}}],["schedule",{"_index":709,"title":{},"body":{"injectables/CronService.html":{},"injectables/PersistedCronService.html":{}}}],["scheduled",{"_index":719,"title":{},"body":{"injectables/CronService.html":{}}}],["scheduleemail",{"_index":1209,"title":{},"body":{"controllers/EmailSchedulingController.html":{},"injectables/EmailSchedulingService.html":{}}}],["scheduleemail(@body",{"_index":1220,"title":{},"body":{"controllers/EmailSchedulingController.html":{}}}],["scheduleemail(emailschedule",{"_index":1210,"title":{},"body":{"controllers/EmailSchedulingController.html":{},"injectables/EmailSchedulingService.html":{}}}],["schedulemodule",{"_index":248,"title":{},"body":{"modules/AppModule.html":{}}}],["schedulemodule.forroot",{"_index":290,"title":{},"body":{"modules/AppModule.html":{}}}],["scheduler",{"_index":704,"title":{},"body":{"injectables/CronService.html":{},"injectables/EmailSchedulingService.html":{}}}],["schedulerregistry",{"_index":702,"title":{},"body":{"injectables/CronService.html":{},"injectables/EmailSchedulingService.html":{},"injectables/PersistedCronService.html":{}}}],["scheduling",{"_index":1219,"title":{},"body":{"controllers/EmailSchedulingController.html":{}}}],["schema",{"_index":580,"title":{},"body":{"classes/CreateTagsDto.html":{},"classes/CreateUserDto.html":{},"classes/CrudConfigService.html":{},"classes/CrudRoutesFactory.html":{},"interfaces/ITag.html":{},"interfaces/IUser.html":{},"classes/QueryFailedFilter.html":{},"classes/R.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{},"classes/Tag.html":{},"classes/UpdateTagsDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{}}}],["searchbyname(query",{"_index":642,"title":{},"body":{"classes/CreateUserDto.html":{},"interfaces/IUser.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{}}}],["second",{"_index":755,"title":{},"body":{"injectables/CronService.html":{},"controllers/HealthController.html":{}}}],["seconds",{"_index":706,"title":{},"body":{"injectables/CronService.html":{}}}],["secret",{"_index":384,"title":{},"body":{"modules/AuthModule.html":{}}}],["secretorkey",{"_index":1372,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["seed",{"_index":1717,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["seed(knex",{"_index":1814,"title":{},"body":{"miscellaneous/functions.html":{}}}],["semi",{"_index":631,"title":{},"body":{"classes/CreateUserDto.html":{},"interfaces/IUser.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{}}}],["sendmail",{"_index":1245,"title":{},"body":{"injectables/EmailService.html":{}}}],["sendmail(options",{"_index":1248,"title":{},"body":{"injectables/EmailService.html":{}}}],["sequence",{"_index":301,"title":{},"body":{"modules/AppModule.html":{}}}],["serialize",{"_index":527,"title":{},"body":{"interfaces/BaseRoute.html":{},"classes/CrudConfigService.html":{},"interfaces/CrudOptions.html":{},"classes/CrudRoutesFactory.html":{},"interfaces/GetManyDefaultResponse.html":{},"interfaces/ParamOption.html":{},"interfaces/ParamsOptions.html":{},"classes/R.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{}}}],["serializehelper",{"_index":866,"title":{"classes/SerializeHelper.html":{}},"body":{"classes/CrudConfigService.html":{},"classes/CrudRoutesFactory.html":{},"classes/R.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{},"coverage.html":{}}}],["serializehelper.creategetmanydto",{"_index":938,"title":{},"body":{"classes/CrudConfigService.html":{},"classes/CrudRoutesFactory.html":{},"classes/R.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{}}}],["serializehelper.creategetmanydto(this.swaggermodels.get",{"_index":960,"title":{},"body":{"classes/CrudConfigService.html":{},"classes/CrudRoutesFactory.html":{},"classes/R.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{}}}],["serializehelper.creategetoneresponsedto(this.modelname",{"_index":956,"title":{},"body":{"classes/CrudConfigService.html":{},"classes/CrudRoutesFactory.html":{},"classes/R.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{}}}],["server",{"_index":193,"title":{},"body":{"classes/ApiException.html":{},"injectables/PersistedCronService.html":{},"index.html":{}}}],["service",{"_index":1001,"title":{},"body":{"classes/CrudController.html":{},"classes/CrudService.html":{},"injectables/PersistedCronService.html":{},"controllers/TagsController.html":{},"controllers/UsersController.html":{}}}],["services",{"_index":1088,"title":{},"body":{"classes/CrudService.html":{},"interfaces/ICrudService.html":{}}}],["session",{"_index":1391,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["set",{"_index":813,"title":{},"body":{"classes/CrudConfigService.html":{},"classes/CrudRoutesFactory.html":{},"classes/R.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{}}}],["set(metadatakey",{"_index":1464,"title":{},"body":{"classes/R.html":{}}}],["setextramodels",{"_index":1526,"title":{},"body":{"classes/Swagger.html":{}}}],["setextramodels(swaggermodels",{"_index":828,"title":{},"body":{"classes/CrudConfigService.html":{},"classes/CrudRoutesFactory.html":{},"classes/R.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{}}}],["setinterval(callback",{"_index":783,"title":{},"body":{"injectables/CronService.html":{}}}],["setresponsemodels",{"_index":954,"title":{},"body":{"classes/CrudConfigService.html":{},"classes/CrudRoutesFactory.html":{},"classes/R.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{}}}],["setresponseok",{"_index":1527,"title":{},"body":{"classes/Swagger.html":{}}}],["setresponseok(metadata",{"_index":843,"title":{},"body":{"classes/CrudConfigService.html":{},"classes/CrudRoutesFactory.html":{},"classes/R.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{}}}],["setroute",{"_index":1461,"title":{},"body":{"classes/R.html":{}}}],["setroute(route",{"_index":818,"title":{},"body":{"classes/CrudConfigService.html":{},"classes/CrudRoutesFactory.html":{},"classes/R.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{}}}],["sets",{"_index":824,"title":{},"body":{"classes/CrudConfigService.html":{},"classes/CrudRoutesFactory.html":{},"classes/R.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{}}}],["setswaggerresponseok",{"_index":1065,"title":{},"body":{"classes/CrudRoutesFactory.html":{}}}],["setswaggerresponseok(name",{"_index":979,"title":{},"body":{"classes/CrudConfigService.html":{},"classes/CrudRoutesFactory.html":{},"classes/R.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{}}}],["settimeout(callback",{"_index":792,"title":{},"body":{"injectables/CronService.html":{}}}],["setting",{"_index":79,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/Result.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{},"interfaces/User.html":{}}}],["setupinfra",{"_index":1727,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["setupinfra(app",{"_index":1808,"title":{},"body":{"miscellaneous/functions.html":{}}}],["setupmiddlewares",{"_index":1728,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["setupmiddlewares(app",{"_index":1809,"title":{},"body":{"miscellaneous/functions.html":{}}}],["setupswaggerdocs",{"_index":1729,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["setupswaggerdocs(app",{"_index":1810,"title":{},"body":{"miscellaneous/functions.html":{}}}],["shadow",{"_index":1274,"title":{},"body":{"injectables/ExcludeNullUndefinedInterceptor.html":{},"guards/ResponseGuard.html":{}}}],["showmycontacts",{"_index":80,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/Result.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{},"interfaces/User.html":{}}}],["showmynumber",{"_index":119,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/Result.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{},"interfaces/User.html":{}}}],["showremoveoption",{"_index":131,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/Result.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{},"interfaces/User.html":{}}}],["shutdown",{"_index":325,"title":{},"body":{"modules/AppModule.html":{},"controllers/HealthController.html":{}}}],["side",{"_index":1823,"title":{},"body":{"index.html":{}}}],["signal",{"_index":241,"title":{},"body":{"modules/AppModule.html":{},"controllers/HealthController.html":{}}}],["signoptions",{"_index":386,"title":{},"body":{"modules/AuthModule.html":{}}}],["simply",{"_index":643,"title":{},"body":{"classes/CreateUserDto.html":{},"interfaces/IUser.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{}}}],["singlequerybuildertype",{"_index":1127,"title":{},"body":{"classes/CustomQueryBuilder.html":{}}}],["size",{"_index":1137,"title":{},"body":{"classes/CustomQueryBuilder.html":{}}}],["snippets",{"_index":627,"title":{},"body":{"classes/CreateUserDto.html":{},"interfaces/IUser.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{}}}],["socket.io",{"_index":1749,"title":{},"body":{"dependencies.html":{}}}],["soft",{"_index":1023,"title":{},"body":{"classes/CrudController.html":{},"classes/CrudService.html":{},"injectables/TagsService.html":{},"injectables/UsersService.html":{}}}],["something",{"_index":1506,"title":{},"body":{"guards/ResponseGuard.html":{}}}],["source",{"_index":4,"title":{},"body":{"interfaces/APIResponse.html":{},"classes/ApiException.html":{},"controllers/AppController.html":{},"interfaces/AppLaunchAction.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/BaseModel.html":{},"interfaces/BaseRoute.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"classes/CreateTagsDto.html":{},"classes/CreateUserDto.html":{},"modules/CronModule.html":{},"injectables/CronService.html":{},"classes/CrudConfigService.html":{},"classes/CrudController.html":{},"interfaces/CrudOptions.html":{},"classes/CrudRoutesFactory.html":{},"classes/CrudService.html":{},"classes/CustomQueryBuilder.html":{},"modules/DatabaseModule.html":{},"modules/EmailModule.html":{},"classes/EmailScheduleDto.html":{},"controllers/EmailSchedulingController.html":{},"modules/EmailSchedulingModule.html":{},"injectables/EmailSchedulingService.html":{},"injectables/EmailService.html":{},"injectables/ExcludeNullUndefinedInterceptor.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetManyDefaultResponse.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"controllers/HealthController.html":{},"interfaces/IBaseModel.html":{},"interfaces/ICrudService.html":{},"interfaces/IPaginationResult.html":{},"interfaces/ITag.html":{},"interfaces/ITryRequest.html":{},"interfaces/IUser.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/LoginCredsDto.html":{},"classes/PaginationParams.html":{},"interfaces/ParamOption.html":{},"interfaces/ParamsOptions.html":{},"injectables/PersistedCronService.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"classes/QueryFailedFilter.html":{},"classes/R.html":{},"guards/RequestGuard.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/Response.html":{},"guards/ResponseGuard.html":{},"interfaces/Result.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{},"classes/Tag.html":{},"controllers/TagsController.html":{},"modules/TagsModule.html":{},"injectables/TagsService.html":{},"injectables/TimeoutInterceptor.html":{},"interfaces/TokenPayload.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateTagsDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"classes/ValidationFailedFilter.html":{},"dependencies.html":{},"index.html":{},"interfaces/User.html":{}}}],["specified",{"_index":682,"title":{},"body":{"injectables/CronService.html":{}}}],["split",{"_index":634,"title":{},"body":{"classes/CreateUserDto.html":{},"interfaces/IUser.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{}}}],["sponsors",{"_index":1847,"title":{},"body":{"index.html":{}}}],["sqlite3",{"_index":1183,"title":{},"body":{"modules/DatabaseModule.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["src/.../01",{"_index":1804,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../02",{"_index":1805,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../20190609143930_createtag.ts",{"_index":1800,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/.../20190609143930_createuser.ts",{"_index":1801,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/.../api",{"_index":1797,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../app.module.ts",{"_index":1884,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../checks.util.ts",{"_index":1888,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../crud.decorator.ts",{"_index":1885,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../database.module.ts",{"_index":1886,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../domain.ts",{"_index":1876,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../helpers.ts",{"_index":1802,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../main.ts",{"_index":1799,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../moment",{"_index":1889,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../null",{"_index":1803,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../obj.util.ts",{"_index":1887,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../object",{"_index":1878,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../other.ts",{"_index":1798,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../pagination.ts",{"_index":1795,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../tag.model.ts",{"_index":1880,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../user.model.ts",{"_index":1881,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/app.controller.ts",{"_index":199,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app.controller.ts:10",{"_index":202,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.module.ts",{"_index":235,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app.module.ts:66",{"_index":245,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.module.ts:70",{"_index":240,"title":{},"body":{"modules/AppModule.html":{}}}],["src/auth/auth.controller.ts",{"_index":327,"title":{},"body":{"controllers/AuthController.html":{},"classes/LoginCredsDto.html":{},"coverage.html":{}}}],["src/auth/auth.controller.ts:15",{"_index":1396,"title":{},"body":{"classes/LoginCredsDto.html":{}}}],["src/auth/auth.controller.ts:19",{"_index":1398,"title":{},"body":{"classes/LoginCredsDto.html":{}}}],["src/auth/auth.controller.ts:34",{"_index":334,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.module.ts",{"_index":372,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/auth/auth.service.ts",{"_index":391,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/auth/auth.service.ts:10",{"_index":397,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:16",{"_index":400,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:20",{"_index":404,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:24",{"_index":408,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:40",{"_index":406,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/jwt.strategy.ts",{"_index":1356,"title":{},"body":{"injectables/JwtStrategy.html":{},"coverage.html":{}}}],["src/auth/jwt.strategy.ts:11",{"_index":1358,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/auth/jwt.strategy.ts:23",{"_index":1361,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/auth/local.strategy.ts",{"_index":1380,"title":{},"body":{"injectables/LocalStrategy.html":{},"coverage.html":{}}}],["src/auth/local.strategy.ts:10",{"_index":1387,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["src/auth/local.strategy.ts:12",{"_index":1384,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["src/auth/local.strategy.ts:22",{"_index":1386,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["src/auth/tokenpayload.interface.ts",{"_index":1601,"title":{},"body":{"interfaces/TokenPayload.html":{},"coverage.html":{}}}],["src/base/crud/crud.controller.ts",{"_index":985,"title":{},"body":{"classes/CrudController.html":{},"coverage.html":{}}}],["src/base/crud/crud.controller.ts:104",{"_index":1026,"title":{},"body":{"classes/CrudController.html":{}}}],["src/base/crud/crud.controller.ts:126",{"_index":1010,"title":{},"body":{"classes/CrudController.html":{}}}],["src/base/crud/crud.controller.ts:148",{"_index":1031,"title":{},"body":{"classes/CrudController.html":{}}}],["src/base/crud/crud.controller.ts:28",{"_index":998,"title":{},"body":{"classes/CrudController.html":{}}}],["src/base/crud/crud.controller.ts:47",{"_index":1016,"title":{},"body":{"classes/CrudController.html":{}}}],["src/base/crud/crud.controller.ts:74",{"_index":1021,"title":{},"body":{"classes/CrudController.html":{}}}],["src/base/crud/crud.service.interface.ts",{"_index":1326,"title":{},"body":{"interfaces/ICrudService.html":{},"coverage.html":{}}}],["src/base/crud/crud.service.interface.ts:10",{"_index":1330,"title":{},"body":{"interfaces/ICrudService.html":{}}}],["src/base/crud/crud.service.interface.ts:15",{"_index":1332,"title":{},"body":{"interfaces/ICrudService.html":{}}}],["src/base/crud/crud.service.interface.ts:20",{"_index":1331,"title":{},"body":{"interfaces/ICrudService.html":{}}}],["src/base/crud/crud.service.interface.ts:25",{"_index":1333,"title":{},"body":{"interfaces/ICrudService.html":{}}}],["src/base/crud/crud.service.interface.ts:32",{"_index":1334,"title":{},"body":{"interfaces/ICrudService.html":{}}}],["src/base/crud/crud.service.interface.ts:37",{"_index":1329,"title":{},"body":{"interfaces/ICrudService.html":{}}}],["src/base/crud/crud.service.interface.ts:42",{"_index":1335,"title":{},"body":{"interfaces/ICrudService.html":{}}}],["src/base/crud/crud.service.ts",{"_index":1087,"title":{},"body":{"classes/CrudService.html":{},"coverage.html":{}}}],["src/base/crud/crud.service.ts:112",{"_index":1110,"title":{},"body":{"classes/CrudService.html":{}}}],["src/base/crud/crud.service.ts:15",{"_index":1094,"title":{},"body":{"classes/CrudService.html":{}}}],["src/base/crud/crud.service.ts:27",{"_index":1097,"title":{},"body":{"classes/CrudService.html":{}}}],["src/base/crud/crud.service.ts:38",{"_index":1107,"title":{},"body":{"classes/CrudService.html":{}}}],["src/base/crud/crud.service.ts:56",{"_index":1101,"title":{},"body":{"classes/CrudService.html":{}}}],["src/base/crud/crud.service.ts:67",{"_index":1105,"title":{},"body":{"classes/CrudService.html":{}}}],["src/base/crud/crud.service.ts:78",{"_index":1103,"title":{},"body":{"classes/CrudService.html":{}}}],["src/base/crud/crud.service.ts:89",{"_index":1108,"title":{},"body":{"classes/CrudService.html":{}}}],["src/base/crud/crud.service.ts:99",{"_index":1095,"title":{},"body":{"classes/CrudService.html":{}}}],["src/base/crud/pagination.ts",{"_index":1336,"title":{},"body":{"interfaces/IPaginationResult.html":{},"classes/PaginationParams.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["src/base/crud/pagination.ts:22",{"_index":1403,"title":{},"body":{"classes/PaginationParams.html":{}}}],["src/base/crud/pagination.ts:28",{"_index":1404,"title":{},"body":{"classes/PaginationParams.html":{}}}],["src/base/crud/pagination.ts:32",{"_index":1400,"title":{},"body":{"classes/PaginationParams.html":{}}}],["src/base/crud/try",{"_index":1353,"title":{},"body":{"interfaces/ITryRequest.html":{},"coverage.html":{}}}],["src/base/moment",{"_index":1676,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/base/swagger",{"_index":137,"title":{},"body":{"classes/ApiException.html":{},"interfaces/BaseRoute.html":{},"classes/CrudConfigService.html":{},"interfaces/CrudOptions.html":{},"classes/CrudRoutesFactory.html":{},"interfaces/GetManyDefaultResponse.html":{},"interfaces/ParamOption.html":{},"interfaces/ParamsOptions.html":{},"classes/R.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/cron/cron.module.ts",{"_index":672,"title":{},"body":{"modules/CronModule.html":{}}}],["src/cron/cron.service.ts",{"_index":675,"title":{},"body":{"injectables/CronService.html":{},"coverage.html":{}}}],["src/cron/cron.service.ts:112",{"_index":718,"title":{},"body":{"injectables/CronService.html":{}}}],["src/cron/cron.service.ts:126",{"_index":737,"title":{},"body":{"injectables/CronService.html":{}}}],["src/cron/cron.service.ts:136",{"_index":713,"title":{},"body":{"injectables/CronService.html":{}}}],["src/cron/cron.service.ts:151",{"_index":721,"title":{},"body":{"injectables/CronService.html":{}}}],["src/cron/cron.service.ts:164",{"_index":739,"title":{},"body":{"injectables/CronService.html":{}}}],["src/cron/cron.service.ts:174",{"_index":716,"title":{},"body":{"injectables/CronService.html":{}}}],["src/cron/cron.service.ts:187",{"_index":723,"title":{},"body":{"injectables/CronService.html":{}}}],["src/cron/cron.service.ts:21",{"_index":742,"title":{},"body":{"injectables/CronService.html":{}}}],["src/cron/cron.service.ts:23",{"_index":745,"title":{},"body":{"injectables/CronService.html":{}}}],["src/cron/cron.service.ts:25",{"_index":747,"title":{},"body":{"injectables/CronService.html":{}}}],["src/cron/cron.service.ts:27",{"_index":703,"title":{},"body":{"injectables/CronService.html":{}}}],["src/cron/cron.service.ts:31",{"_index":725,"title":{},"body":{"injectables/CronService.html":{}}}],["src/cron/cron.service.ts:37",{"_index":729,"title":{},"body":{"injectables/CronService.html":{}}}],["src/cron/cron.service.ts:51",{"_index":732,"title":{},"body":{"injectables/CronService.html":{}}}],["src/cron/cron.service.ts:62",{"_index":735,"title":{},"body":{"injectables/CronService.html":{}}}],["src/cron/cron.service.ts:75",{"_index":736,"title":{},"body":{"injectables/CronService.html":{}}}],["src/cron/cron.service.ts:97",{"_index":707,"title":{},"body":{"injectables/CronService.html":{}}}],["src/cron/persisted",{"_index":1407,"title":{},"body":{"injectables/PersistedCronService.html":{},"coverage.html":{}}}],["src/database/database.module.ts",{"_index":1174,"title":{},"body":{"modules/DatabaseModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/database/migrations/20190609143930_createtag.ts",{"_index":1708,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/database/migrations/20190609143930_createuser.ts",{"_index":1711,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/database/models/base.model.ts",{"_index":424,"title":{},"body":{"classes/BaseModel.html":{},"interfaces/IBaseModel.html":{},"coverage.html":{}}}],["src/database/models/base.model.ts:25",{"_index":439,"title":{},"body":{"classes/BaseModel.html":{}}}],["src/database/models/base.model.ts:35",{"_index":442,"title":{},"body":{"classes/BaseModel.html":{}}}],["src/database/models/base.model.ts:37",{"_index":440,"title":{},"body":{"classes/BaseModel.html":{}}}],["src/database/models/base.model.ts:39",{"_index":434,"title":{},"body":{"classes/BaseModel.html":{}}}],["src/database/models/base.model.ts:41",{"_index":443,"title":{},"body":{"classes/BaseModel.html":{}}}],["src/database/models/base.model.ts:43",{"_index":435,"title":{},"body":{"classes/BaseModel.html":{}}}],["src/database/models/base.model.ts:47",{"_index":452,"title":{},"body":{"classes/BaseModel.html":{}}}],["src/database/models/base.model.ts:60",{"_index":447,"title":{},"body":{"classes/BaseModel.html":{}}}],["src/database/models/helpers.ts",{"_index":1123,"title":{},"body":{"classes/CustomQueryBuilder.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/database/models/helpers.ts:37",{"_index":1132,"title":{},"body":{"classes/CustomQueryBuilder.html":{}}}],["src/database/models/helpers.ts:39",{"_index":1135,"title":{},"body":{"classes/CustomQueryBuilder.html":{}}}],["src/database/models/helpers.ts:41",{"_index":1133,"title":{},"body":{"classes/CustomQueryBuilder.html":{}}}],["src/database/models/helpers.ts:43",{"_index":1134,"title":{},"body":{"classes/CustomQueryBuilder.html":{}}}],["src/database/models/helpers.ts:45",{"_index":1144,"title":{},"body":{"classes/CustomQueryBuilder.html":{}}}],["src/database/models/helpers.ts:61",{"_index":1141,"title":{},"body":{"classes/CustomQueryBuilder.html":{}}}],["src/database/models/helpers.ts:70",{"_index":1140,"title":{},"body":{"classes/CustomQueryBuilder.html":{}}}],["src/database/models/helpers.ts:75",{"_index":1138,"title":{},"body":{"classes/CustomQueryBuilder.html":{}}}],["src/database/seeds/01",{"_index":1715,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/database/seeds/02",{"_index":1718,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/domain.ts",{"_index":6,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/Result.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"interfaces/User.html":{}}}],["src/email/email.module.ts",{"_index":1195,"title":{},"body":{"modules/EmailModule.html":{}}}],["src/email/email.service.ts",{"_index":1244,"title":{},"body":{"injectables/EmailService.html":{},"coverage.html":{}}}],["src/email/email.service.ts:11",{"_index":1249,"title":{},"body":{"injectables/EmailService.html":{}}}],["src/email/email.service.ts:5",{"_index":1247,"title":{},"body":{"injectables/EmailService.html":{}}}],["src/emailscheduling/emailschedule.dto.ts",{"_index":1198,"title":{},"body":{"classes/EmailScheduleDto.html":{},"coverage.html":{}}}],["src/emailscheduling/emailschedule.dto.ts:13",{"_index":1202,"title":{},"body":{"classes/EmailScheduleDto.html":{}}}],["src/emailscheduling/emailschedule.dto.ts:16",{"_index":1204,"title":{},"body":{"classes/EmailScheduleDto.html":{}}}],["src/emailscheduling/emailschedule.dto.ts:5",{"_index":1205,"title":{},"body":{"classes/EmailScheduleDto.html":{}}}],["src/emailscheduling/emailschedule.dto.ts:9",{"_index":1206,"title":{},"body":{"classes/EmailScheduleDto.html":{}}}],["src/emailscheduling/emailscheduling.controller.ts",{"_index":1208,"title":{},"body":{"controllers/EmailSchedulingController.html":{},"coverage.html":{}}}],["src/emailscheduling/emailscheduling.controller.ts:17",{"_index":1212,"title":{},"body":{"controllers/EmailSchedulingController.html":{}}}],["src/emailscheduling/emailscheduling.module.ts",{"_index":1225,"title":{},"body":{"modules/EmailSchedulingModule.html":{}}}],["src/emailscheduling/emailscheduling.service.ts",{"_index":1228,"title":{},"body":{"injectables/EmailSchedulingService.html":{},"coverage.html":{}}}],["src/emailscheduling/emailscheduling.service.ts:11",{"_index":1230,"title":{},"body":{"injectables/EmailSchedulingService.html":{}}}],["src/emailscheduling/emailscheduling.service.ts:19",{"_index":1231,"title":{},"body":{"injectables/EmailSchedulingService.html":{}}}],["src/health/health.controller.ts",{"_index":1277,"title":{},"body":{"controllers/HealthController.html":{},"coverage.html":{}}}],["src/health/health.controller.ts:37",{"_index":1288,"title":{},"body":{"controllers/HealthController.html":{}}}],["src/health/health.controller.ts:56",{"_index":1281,"title":{},"body":{"controllers/HealthController.html":{}}}],["src/health/health.controller.ts:62",{"_index":1283,"title":{},"body":{"controllers/HealthController.html":{}}}],["src/health/health.controller.ts:82",{"_index":1286,"title":{},"body":{"controllers/HealthController.html":{}}}],["src/health/health.controller.ts:88",{"_index":1285,"title":{},"body":{"controllers/HealthController.html":{}}}],["src/infra/filters/query",{"_index":1436,"title":{},"body":{"classes/QueryFailedFilter.html":{},"coverage.html":{}}}],["src/infra/filters/validation",{"_index":1650,"title":{},"body":{"classes/ValidationFailedFilter.html":{},"coverage.html":{}}}],["src/infra/guards/req.ts",{"_index":1471,"title":{},"body":{"guards/RequestGuard.html":{},"coverage.html":{}}}],["src/infra/guards/req.ts:21",{"_index":1475,"title":{},"body":{"guards/RequestGuard.html":{}}}],["src/infra/guards/req.ts:8",{"_index":1478,"title":{},"body":{"guards/RequestGuard.html":{}}}],["src/infra/guards/res.ts",{"_index":1495,"title":{},"body":{"guards/ResponseGuard.html":{},"coverage.html":{}}}],["src/infra/guards/res.ts:21",{"_index":1498,"title":{},"body":{"guards/ResponseGuard.html":{}}}],["src/infra/guards/res.ts:8",{"_index":1499,"title":{},"body":{"guards/ResponseGuard.html":{}}}],["src/infra/interceptors/null",{"_index":1254,"title":{},"body":{"injectables/ExcludeNullUndefinedInterceptor.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/infra/interceptors/timeout.ts",{"_index":1584,"title":{},"body":{"injectables/TimeoutInterceptor.html":{},"coverage.html":{}}}],["src/infra/interceptors/timeout.ts:17",{"_index":1590,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["src/infra/interceptors/transform.ts",{"_index":1491,"title":{},"body":{"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{},"coverage.html":{}}}],["src/infra/interceptors/transform.ts:17",{"_index":1602,"title":{},"body":{"injectables/TransformInterceptor.html":{}}}],["src/main.ts",{"_index":1726,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/tags/tag.model.ts",{"_index":564,"title":{},"body":{"classes/CreateTagsDto.html":{},"interfaces/ITag.html":{},"classes/Tag.html":{},"classes/UpdateTagsDto.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/tags/tag.model.ts:13",{"_index":1536,"title":{},"body":{"classes/Tag.html":{}}}],["src/tags/tag.model.ts:15",{"_index":1535,"title":{},"body":{"classes/Tag.html":{}}}],["src/tags/tag.model.ts:19",{"_index":1534,"title":{},"body":{"classes/Tag.html":{}}}],["src/tags/tag.model.ts:38",{"_index":567,"title":{},"body":{"classes/CreateTagsDto.html":{}}}],["src/tags/tags.controller.ts",{"_index":1547,"title":{},"body":{"controllers/TagsController.html":{},"coverage.html":{}}}],["src/tags/tags.controller.ts:33",{"_index":1548,"title":{},"body":{"controllers/TagsController.html":{}}}],["src/tags/tags.controller.ts:43",{"_index":1549,"title":{},"body":{"controllers/TagsController.html":{}}}],["src/tags/tags.module.ts",{"_index":1563,"title":{},"body":{"modules/TagsModule.html":{}}}],["src/tags/tags.service.ts",{"_index":1565,"title":{},"body":{"injectables/TagsService.html":{},"coverage.html":{}}}],["src/tags/tags.service.ts:14",{"_index":1567,"title":{},"body":{"injectables/TagsService.html":{}}}],["src/tags/tags.service.ts:9",{"_index":1566,"title":{},"body":{"injectables/TagsService.html":{}}}],["src/users/user.model.ts",{"_index":605,"title":{},"body":{"classes/CreateUserDto.html":{},"interfaces/IUser.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/users/user.model.ts:111",{"_index":618,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["src/users/user.model.ts:116",{"_index":610,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["src/users/user.model.ts:121",{"_index":617,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["src/users/user.model.ts:126",{"_index":612,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["src/users/user.model.ts:131",{"_index":615,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["src/users/user.model.ts:134",{"_index":614,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["src/users/user.model.ts:28",{"_index":1612,"title":{},"body":{"classes/User.html":{}}}],["src/users/user.model.ts:30",{"_index":1613,"title":{},"body":{"classes/User.html":{}}}],["src/users/user.model.ts:32",{"_index":1605,"title":{},"body":{"classes/User.html":{}}}],["src/users/user.model.ts:34",{"_index":1606,"title":{},"body":{"classes/User.html":{}}}],["src/users/user.model.ts:36",{"_index":1609,"title":{},"body":{"classes/User.html":{}}}],["src/users/user.model.ts:38",{"_index":1607,"title":{},"body":{"classes/User.html":{}}}],["src/users/user.model.ts:40",{"_index":1611,"title":{},"body":{"classes/User.html":{}}}],["src/users/user.model.ts:44",{"_index":1608,"title":{},"body":{"classes/User.html":{}}}],["src/users/user.model.ts:64",{"_index":1610,"title":{},"body":{"classes/User.html":{}}}],["src/users/user.model.ts:84",{"_index":1615,"title":{},"body":{"classes/User.html":{}}}],["src/users/user.model.ts:89",{"_index":1614,"title":{},"body":{"classes/User.html":{}}}],["src/users/users.controller.ts",{"_index":1617,"title":{},"body":{"controllers/UsersController.html":{},"coverage.html":{}}}],["src/users/users.controller.ts:34",{"_index":1622,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:43",{"_index":1620,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:57",{"_index":1624,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.module.ts",{"_index":1634,"title":{},"body":{"modules/UsersModule.html":{}}}],["src/users/users.service.ts",{"_index":1636,"title":{},"body":{"injectables/UsersService.html":{},"coverage.html":{}}}],["src/users/users.service.ts:10",{"_index":1637,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:15",{"_index":1643,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:20",{"_index":1641,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:28",{"_index":1642,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:36",{"_index":1639,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:40",{"_index":1644,"title":{},"body":{"injectables/UsersService.html":{}}}],["sse",{"_index":1279,"title":{},"body":{"controllers/HealthController.html":{}}}],["sse('sse",{"_index":1287,"title":{},"body":{"controllers/HealthController.html":{}}}],["stack",{"_index":142,"title":{},"body":{"classes/ApiException.html":{}}}],["start",{"_index":1831,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":1834,"title":{},"body":{"index.html":{}}}],["start:prodtest",{"_index":1835,"title":{},"body":{"index.html":{}}}],["started",{"_index":1816,"title":{"index.html":{}},"body":{}}],["starter",{"_index":1825,"title":{},"body":{"index.html":{}}}],["stat",{"_index":1313,"title":{},"body":{"controllers/HealthController.html":{}}}],["stat.load",{"_index":1321,"title":{},"body":{"controllers/HealthController.html":{}}}],["stat.memory",{"_index":1316,"title":{},"body":{"controllers/HealthController.html":{}}}],["stat.timestamp",{"_index":1319,"title":{},"body":{"controllers/HealthController.html":{}}}],["statements",{"_index":646,"title":{},"body":{"classes/CreateUserDto.html":{},"interfaces/IUser.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"coverage.html":{}}}],["static",{"_index":212,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"classes/BaseModel.html":{},"classes/CreateTagsDto.html":{},"classes/CreateUserDto.html":{},"injectables/CronService.html":{},"classes/CrudConfigService.html":{},"classes/CrudRoutesFactory.html":{},"controllers/EmailSchedulingController.html":{},"controllers/HealthController.html":{},"interfaces/IBaseModel.html":{},"interfaces/ITag.html":{},"interfaces/IUser.html":{},"injectables/LocalStrategy.html":{},"classes/LoginCredsDto.html":{},"classes/R.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{},"classes/Tag.html":{},"controllers/TagsController.html":{},"classes/UpdateTagsDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"dependencies.html":{}}}],["status",{"_index":143,"title":{},"body":{"classes/ApiException.html":{},"classes/CrudController.html":{},"classes/QueryFailedFilter.html":{},"guards/ResponseGuard.html":{},"classes/ValidationFailedFilter.html":{}}}],["statuscode",{"_index":16,"title":{},"body":{"interfaces/APIResponse.html":{},"classes/ApiException.html":{},"interfaces/AppLaunchAction.html":{},"controllers/AuthController.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"classes/CrudController.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/IPaginationResult.html":{},"classes/LoginCredsDto.html":{},"classes/PaginationParams.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"classes/QueryFailedFilter.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/Result.html":{},"controllers/TagsController.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{},"controllers/UsersController.html":{},"classes/ValidationFailedFilter.html":{},"interfaces/User.html":{}}}],["stay",{"_index":1855,"title":{},"body":{"index.html":{}}}],["stop",{"_index":1414,"title":{},"body":{"injectables/PersistedCronService.html":{}}}],["store",{"_index":1618,"title":{},"body":{"controllers/UsersController.html":{}}}],["strategy",{"_index":1365,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["string",{"_index":23,"title":{},"body":{"interfaces/APIResponse.html":{},"classes/ApiException.html":{},"controllers/AppController.html":{},"interfaces/AppLaunchAction.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/BaseModel.html":{},"interfaces/BaseRoute.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"classes/CreateTagsDto.html":{},"classes/CreateUserDto.html":{},"injectables/CronService.html":{},"classes/CrudConfigService.html":{},"interfaces/CrudOptions.html":{},"classes/CrudRoutesFactory.html":{},"classes/CrudService.html":{},"classes/EmailScheduleDto.html":{},"injectables/ExcludeNullUndefinedInterceptor.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetManyDefaultResponse.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"controllers/HealthController.html":{},"interfaces/IBaseModel.html":{},"interfaces/ICrudService.html":{},"interfaces/IPaginationResult.html":{},"interfaces/ITag.html":{},"interfaces/IUser.html":{},"injectables/LocalStrategy.html":{},"classes/LoginCredsDto.html":{},"classes/PaginationParams.html":{},"interfaces/ParamOption.html":{},"interfaces/ParamsOptions.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"classes/R.html":{},"guards/RequestGuard.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"guards/ResponseGuard.html":{},"interfaces/Result.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{},"classes/Tag.html":{},"injectables/TagsService.html":{},"interfaces/TokenPayload.html":{},"classes/UpdateTagsDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"interfaces/User.html":{}}}],["string[]).every((v",{"_index":1902,"title":{},"body":{"miscellaneous/variables.html":{}}}],["subject",{"_index":52,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"classes/EmailScheduleDto.html":{},"injectables/EmailSchedulingService.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/Result.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{},"interfaces/User.html":{}}}],["success",{"_index":1355,"title":{},"body":{"interfaces/ITryRequest.html":{},"guards/ResponseGuard.html":{}}}],["such",{"_index":991,"title":{},"body":{"classes/CrudController.html":{},"classes/CrudService.html":{}}}],["summary",{"_index":1042,"title":{},"body":{"classes/CrudController.html":{},"controllers/UsersController.html":{}}}],["super",{"_index":1370,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["super(model",{"_index":1577,"title":{},"body":{"injectables/TagsService.html":{},"injectables/UsersService.html":{}}}],["super(service",{"_index":1558,"title":{},"body":{"controllers/TagsController.html":{},"controllers/UsersController.html":{}}}],["super.$beforeinsert(querycontext",{"_index":660,"title":{},"body":{"classes/CreateUserDto.html":{},"interfaces/IUser.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{}}}],["super.$beforeupdate(opt",{"_index":483,"title":{},"body":{"classes/BaseModel.html":{},"classes/CreateUserDto.html":{},"interfaces/IBaseModel.html":{},"interfaces/IUser.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{}}}],["super.create(data",{"_index":1582,"title":{},"body":{"injectables/TagsService.html":{}}}],["support",{"_index":1789,"title":{},"body":{"dependencies.html":{},"index.html":{},"modules.html":{}}}],["svg",{"_index":1866,"title":{},"body":{"modules.html":{}}}],["swagger",{"_index":548,"title":{"classes/Swagger.html":{}},"body":{"interfaces/BaseRoute.html":{},"classes/CrudConfigService.html":{},"classes/CrudController.html":{},"interfaces/CrudOptions.html":{},"classes/CrudRoutesFactory.html":{},"interfaces/GetManyDefaultResponse.html":{},"interfaces/ParamOption.html":{},"interfaces/ParamsOptions.html":{},"classes/R.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["swagger.apimodelproperty",{"_index":561,"title":{},"body":{"interfaces/BaseRoute.html":{},"interfaces/CrudOptions.html":{},"interfaces/GetManyDefaultResponse.html":{},"interfaces/ParamOption.html":{},"interfaces/ParamsOptions.html":{}}}],["swagger.apiproperty",{"_index":560,"title":{},"body":{"interfaces/BaseRoute.html":{},"interfaces/CrudOptions.html":{},"interfaces/GetManyDefaultResponse.html":{},"interfaces/ParamOption.html":{},"interfaces/ParamsOptions.html":{}}}],["swagger.createresponsemeta(name",{"_index":982,"title":{},"body":{"classes/CrudConfigService.html":{},"classes/CrudRoutesFactory.html":{},"classes/R.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{}}}],["swagger.getextramodels(swaggermodels.get",{"_index":831,"title":{},"body":{"classes/CrudConfigService.html":{},"classes/CrudRoutesFactory.html":{},"classes/R.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{}}}],["swagger.getresponseok(this.targetproto[name",{"_index":980,"title":{},"body":{"classes/CrudConfigService.html":{},"classes/CrudRoutesFactory.html":{},"classes/R.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{}}}],["swagger.getschemapath",{"_index":860,"title":{},"body":{"classes/CrudConfigService.html":{},"classes/CrudRoutesFactory.html":{},"classes/R.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{}}}],["swagger.getschemapath(dto.name",{"_index":865,"title":{},"body":{"classes/CrudConfigService.html":{},"classes/CrudRoutesFactory.html":{},"classes/R.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{}}}],["swagger.setextramodels(this.swaggermodels",{"_index":969,"title":{},"body":{"classes/CrudConfigService.html":{},"classes/CrudRoutesFactory.html":{},"classes/R.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{}}}],["swagger.setresponseok",{"_index":983,"title":{},"body":{"classes/CrudConfigService.html":{},"classes/CrudRoutesFactory.html":{},"classes/R.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{}}}],["swaggerconst",{"_index":550,"title":{},"body":{"interfaces/BaseRoute.html":{},"classes/CrudConfigService.html":{},"interfaces/CrudOptions.html":{},"classes/CrudRoutesFactory.html":{},"interfaces/GetManyDefaultResponse.html":{},"interfaces/ParamOption.html":{},"interfaces/ParamsOptions.html":{},"classes/R.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["swaggerconst.decorators.api_extra_models",{"_index":841,"title":{},"body":{"classes/CrudConfigService.html":{},"classes/CrudRoutesFactory.html":{},"classes/R.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{}}}],["swaggerenumtype",{"_index":495,"title":{},"body":{"interfaces/BaseRoute.html":{},"interfaces/CrudOptions.html":{},"interfaces/GetManyDefaultResponse.html":{},"interfaces/ParamOption.html":{},"interfaces/ParamsOptions.html":{}}}],["swaggermodels",{"_index":850,"title":{},"body":{"classes/CrudConfigService.html":{},"classes/CrudRoutesFactory.html":{},"classes/R.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{}}}],["swaggermodels.get",{"_index":842,"title":{},"body":{"classes/CrudConfigService.html":{},"classes/CrudRoutesFactory.html":{},"classes/R.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{}}}],["swaggermodels.get.name",{"_index":839,"title":{},"body":{"classes/CrudConfigService.html":{},"classes/CrudRoutesFactory.html":{},"classes/R.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{}}}],["swaggermodels.getmany",{"_index":856,"title":{},"body":{"classes/CrudConfigService.html":{},"classes/CrudRoutesFactory.html":{},"classes/R.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{}}}],["swaggermodels.getmany.name",{"_index":861,"title":{},"body":{"classes/CrudConfigService.html":{},"classes/CrudRoutesFactory.html":{},"classes/R.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{}}}],["swaggermodels[name",{"_index":835,"title":{},"body":{"classes/CrudConfigService.html":{},"classes/CrudRoutesFactory.html":{},"classes/R.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{}}}],["swaggermodels[name.split('onebase')[0",{"_index":864,"title":{},"body":{"classes/CrudConfigService.html":{},"classes/CrudRoutesFactory.html":{},"classes/R.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{}}}],["switch",{"_index":851,"title":{},"body":{"classes/CrudConfigService.html":{},"classes/CrudRoutesFactory.html":{},"classes/R.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{}}}],["symbol",{"_index":556,"title":{},"body":{"interfaces/BaseRoute.html":{},"classes/CrudConfigService.html":{},"interfaces/CrudOptions.html":{},"classes/CrudRoutesFactory.html":{},"interfaces/GetManyDefaultResponse.html":{},"interfaces/ParamOption.html":{},"interfaces/ParamsOptions.html":{},"classes/R.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{}}}],["synchronize",{"_index":286,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["syntax",{"_index":1486,"title":{},"body":{"guards/RequestGuard.html":{}}}],["t",{"_index":21,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/BaseRoute.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"classes/CrudConfigService.html":{},"classes/CrudController.html":{},"interfaces/CrudOptions.html":{},"classes/CrudRoutesFactory.html":{},"classes/CrudService.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetManyDefaultResponse.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/ICrudService.html":{},"interfaces/IPaginationResult.html":{},"classes/PaginationParams.html":{},"interfaces/ParamOption.html":{},"interfaces/ParamsOptions.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"classes/R.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/Response.html":{},"interfaces/Result.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{},"injectables/TagsService.html":{},"injectables/TransformInterceptor.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{},"injectables/UsersService.html":{},"miscellaneous/functions.html":{},"interfaces/User.html":{}}}],["table",{"_index":1410,"title":{},"body":{"injectables/PersistedCronService.html":{},"classes/QueryFailedFilter.html":{},"coverage.html":{}}}],["tablename",{"_index":577,"title":{},"body":{"classes/CreateTagsDto.html":{},"classes/CreateUserDto.html":{},"interfaces/ITag.html":{},"interfaces/IUser.html":{},"classes/Tag.html":{},"classes/UpdateTagsDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1736,"title":{},"body":{"coverage.html":{}}}],["tag",{"_index":576,"title":{"classes/Tag.html":{}},"body":{"classes/CreateTagsDto.html":{},"modules/DatabaseModule.html":{},"interfaces/ITag.html":{},"classes/Tag.html":{},"controllers/TagsController.html":{},"injectables/TagsService.html":{},"classes/UpdateTagsDto.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["tag.model",{"_index":1552,"title":{},"body":{"controllers/TagsController.html":{},"injectables/TagsService.html":{}}}],["tag.name",{"_index":1581,"title":{},"body":{"injectables/TagsService.html":{}}}],["tag.ts",{"_index":1719,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["tags",{"_index":578,"title":{},"body":{"classes/CreateTagsDto.html":{},"interfaces/ITag.html":{},"classes/Tag.html":{},"controllers/TagsController.html":{},"classes/UpdateTagsDto.html":{},"miscellaneous/variables.html":{}}}],["tags.controller",{"_index":1564,"title":{},"body":{"modules/TagsModule.html":{}}}],["tags.service",{"_index":1554,"title":{},"body":{"controllers/TagsController.html":{},"modules/TagsModule.html":{}}}],["tags/tag.model",{"_index":1036,"title":{},"body":{"classes/CrudController.html":{},"classes/CrudService.html":{},"modules/DatabaseModule.html":{}}}],["tags/tags.module",{"_index":260,"title":{},"body":{"modules/AppModule.html":{}}}],["tagscontroller",{"_index":1546,"title":{"controllers/TagsController.html":{}},"body":{"controllers/TagsController.html":{},"modules/TagsModule.html":{},"coverage.html":{}}}],["tagshape",{"_index":598,"title":{},"body":{"classes/CreateTagsDto.html":{},"interfaces/ITag.html":{},"classes/Tag.html":{},"classes/UpdateTagsDto.html":{},"miscellaneous/typealiases.html":{}}}],["tagsmodule",{"_index":230,"title":{"modules/TagsModule.html":{}},"body":{"modules/AppModule.html":{},"modules/TagsModule.html":{},"modules.html":{},"overview.html":{}}}],["tagsservice",{"_index":1553,"title":{"injectables/TagsService.html":{}},"body":{"controllers/TagsController.html":{},"modules/TagsModule.html":{},"injectables/TagsService.html":{},"coverage.html":{},"overview.html":{}}}],["takes",{"_index":1588,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["target",{"_index":554,"title":{},"body":{"interfaces/BaseRoute.html":{},"classes/CrudConfigService.html":{},"interfaces/CrudOptions.html":{},"classes/CrudRoutesFactory.html":{},"interfaces/GetManyDefaultResponse.html":{},"interfaces/ParamOption.html":{},"interfaces/ParamsOptions.html":{},"classes/R.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{},"miscellaneous/variables.html":{}}}],["targetproto",{"_index":901,"title":{},"body":{"classes/CrudConfigService.html":{},"classes/CrudRoutesFactory.html":{},"classes/R.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{}}}],["template",{"_index":322,"title":{},"body":{"modules/AppModule.html":{},"injectables/CronService.html":{},"controllers/HealthController.html":{}}}],["terminate",{"_index":1587,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["termination",{"_index":296,"title":{},"body":{"modules/AppModule.html":{}}}],["terminusmodule",{"_index":250,"title":{},"body":{"modules/AppModule.html":{}}}],["test",{"_index":278,"title":{},"body":{"modules/AppModule.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["test:covsupport",{"_index":1840,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":1839,"title":{},"body":{"index.html":{}}}],["tests",{"_index":1837,"title":{},"body":{"index.html":{}}}],["text",{"_index":1238,"title":{},"body":{"injectables/EmailSchedulingService.html":{}}}],["thanks",{"_index":1846,"title":{},"body":{"index.html":{}}}],["this.$fetchgraph(expression",{"_index":482,"title":{},"body":{"classes/BaseModel.html":{},"interfaces/IBaseModel.html":{}}}],["this.authservice.login(user",{"_index":365,"title":{},"body":{"controllers/AuthController.html":{},"classes/LoginCredsDto.html":{}}}],["this.authservice.validateuser(email",{"_index":1393,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["this.bindrequesthelpers(context.switchtohttp().getrequest",{"_index":1479,"title":{},"body":{"guards/RequestGuard.html":{}}}],["this.bindresponsehelpers(context.switchtohttp().getresponse",{"_index":1500,"title":{},"body":{"guards/ResponseGuard.html":{}}}],["this.collectosmetrics(metrics",{"_index":1305,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.comparepassword(password",{"_index":417,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.config.get('node_env",{"_index":1325,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.configservice.get('node_env",{"_index":1252,"title":{},"body":{"injectables/EmailService.html":{}}}],["this.count",{"_index":1160,"title":{},"body":{"classes/CustomQueryBuilder.html":{}}}],["this.create",{"_index":892,"title":{},"body":{"classes/CrudConfigService.html":{},"classes/CrudRoutesFactory.html":{},"classes/R.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{}}}],["this.createroutes(routesschema",{"_index":912,"title":{},"body":{"classes/CrudConfigService.html":{},"classes/CrudRoutesFactory.html":{},"classes/R.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{}}}],["this.dns.pingcheck('nestjs",{"_index":1308,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.emailschedulingservice.scheduleemail(emailschedule",{"_index":1221,"title":{},"body":{"controllers/EmailSchedulingController.html":{}}}],["this.emailservice.sendmail",{"_index":1236,"title":{},"body":{"injectables/EmailSchedulingService.html":{}}}],["this.enableroutes(routesschema",{"_index":913,"title":{},"body":{"classes/CrudConfigService.html":{},"classes/CrudRoutesFactory.html":{},"classes/R.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{}}}],["this.error",{"_index":175,"title":{},"body":{"classes/ApiException.html":{}}}],["this.errors",{"_index":177,"title":{},"body":{"classes/ApiException.html":{}}}],["this.factorial(n",{"_index":751,"title":{},"body":{"injectables/CronService.html":{}}}],["this.findone",{"_index":1578,"title":{},"body":{"injectables/TagsService.html":{}}}],["this.generatetoken(user",{"_index":422,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.hashpassword(this.password",{"_index":662,"title":{},"body":{"classes/CreateUserDto.html":{},"interfaces/IUser.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{}}}],["this.hashpassword(user.password",{"_index":1648,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.health.check",{"_index":1307,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.jwtservice.signasync(user",{"_index":411,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.logger.debug",{"_index":753,"title":{},"body":{"injectables/CronService.html":{}}}],["this.logger.log(`email",{"_index":1242,"title":{},"body":{"injectables/EmailSchedulingService.html":{}}}],["this.logger.log(`interval",{"_index":778,"title":{},"body":{"injectables/CronService.html":{}}}],["this.logger.log(`job",{"_index":764,"title":{},"body":{"injectables/CronService.html":{}}}],["this.logger.log(`timeout",{"_index":790,"title":{},"body":{"injectables/CronService.html":{}}}],["this.logger.warn",{"_index":780,"title":{},"body":{"injectables/CronService.html":{}}}],["this.logger.warn(`interval",{"_index":787,"title":{},"body":{"injectables/CronService.html":{}}}],["this.logger.warn(`job",{"_index":770,"title":{},"body":{"injectables/CronService.html":{}}}],["this.logger.warn(`time",{"_index":767,"title":{},"body":{"injectables/CronService.html":{}}}],["this.logger.warn(`timeout",{"_index":791,"title":{},"body":{"injectables/CronService.html":{}}}],["this.mergeoptions",{"_index":910,"title":{},"body":{"classes/CrudConfigService.html":{},"classes/CrudRoutesFactory.html":{},"classes/R.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{}}}],["this.message",{"_index":174,"title":{},"body":{"classes/ApiException.html":{}}}],["this.model.query",{"_index":1111,"title":{},"body":{"classes/CrudService.html":{}}}],["this.model.query().findbyid(id).first",{"_index":1117,"title":{},"body":{"classes/CrudService.html":{},"injectables/UsersService.html":{}}}],["this.model.query().findone",{"_index":1118,"title":{},"body":{"classes/CrudService.html":{},"injectables/UsersService.html":{}}}],["this.model.query().findone(filter",{"_index":1116,"title":{},"body":{"classes/CrudService.html":{}}}],["this.model.query().insertandfetch(input",{"_index":1120,"title":{},"body":{"classes/CrudService.html":{}}}],["this.model.query().insertandfetch(user",{"_index":1646,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.model.query().page(page",{"_index":1113,"title":{},"body":{"classes/CrudService.html":{}}}],["this.model.query().patchandfetchbyid(id",{"_index":1122,"title":{},"body":{"classes/CrudService.html":{},"injectables/UsersService.html":{}}}],["this.modelname",{"_index":897,"title":{},"body":{"classes/CrudConfigService.html":{},"classes/CrudRoutesFactory.html":{},"classes/R.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{}}}],["this.modeltype",{"_index":896,"title":{},"body":{"classes/CrudConfigService.html":{},"classes/CrudRoutesFactory.html":{},"classes/R.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{}}}],["this.onlycount",{"_index":1163,"title":{},"body":{"classes/CustomQueryBuilder.html":{}}}],["this.options",{"_index":891,"title":{},"body":{"classes/CrudConfigService.html":{},"classes/CrudRoutesFactory.html":{},"classes/R.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{}}}],["this.options.dto",{"_index":929,"title":{},"body":{"classes/CrudConfigService.html":{},"classes/CrudRoutesFactory.html":{},"classes/R.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{}}}],["this.options.model.type",{"_index":906,"title":{},"body":{"classes/CrudConfigService.html":{},"classes/CrudRoutesFactory.html":{},"classes/R.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{}}}],["this.options.model.type?.name",{"_index":904,"title":{},"body":{"classes/CrudConfigService.html":{},"classes/CrudRoutesFactory.html":{},"classes/R.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{}}}],["this.options.query",{"_index":926,"title":{},"body":{"classes/CrudConfigService.html":{},"classes/CrudRoutesFactory.html":{},"classes/R.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{}}}],["this.options.routes?.deleteonebase?.returndeleted",{"_index":950,"title":{},"body":{"classes/CrudConfigService.html":{},"classes/CrudRoutesFactory.html":{},"classes/R.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{}}}],["this.options.serialize",{"_index":930,"title":{},"body":{"classes/CrudConfigService.html":{},"classes/CrudRoutesFactory.html":{},"classes/R.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{}}}],["this.options.serialize.create",{"_index":939,"title":{},"body":{"classes/CrudConfigService.html":{},"classes/CrudRoutesFactory.html":{},"classes/R.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{}}}],["this.options.serialize.delete",{"_index":948,"title":{},"body":{"classes/CrudConfigService.html":{},"classes/CrudRoutesFactory.html":{},"classes/R.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{}}}],["this.options.serialize.get",{"_index":932,"title":{},"body":{"classes/CrudConfigService.html":{},"classes/CrudRoutesFactory.html":{},"classes/R.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{}}}],["this.options.serialize.getmany",{"_index":935,"title":{},"body":{"classes/CrudConfigService.html":{},"classes/CrudRoutesFactory.html":{},"classes/R.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{}}}],["this.options.serialize.replace",{"_index":945,"title":{},"body":{"classes/CrudConfigService.html":{},"classes/CrudRoutesFactory.html":{},"classes/R.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{}}}],["this.options.serialize.update",{"_index":942,"title":{},"body":{"classes/CrudConfigService.html":{},"classes/CrudRoutesFactory.html":{},"classes/R.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{}}}],["this.options.serialize?.create",{"_index":941,"title":{},"body":{"classes/CrudConfigService.html":{},"classes/CrudRoutesFactory.html":{},"classes/R.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{}}}],["this.options.serialize?.delete",{"_index":951,"title":{},"body":{"classes/CrudConfigService.html":{},"classes/CrudRoutesFactory.html":{},"classes/R.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{}}}],["this.options.serialize?.get",{"_index":934,"title":{},"body":{"classes/CrudConfigService.html":{},"classes/CrudRoutesFactory.html":{},"classes/R.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{}}}],["this.options.serialize?.getmany",{"_index":937,"title":{},"body":{"classes/CrudConfigService.html":{},"classes/CrudRoutesFactory.html":{},"classes/R.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{}}}],["this.options.serialize?.replace",{"_index":947,"title":{},"body":{"classes/CrudConfigService.html":{},"classes/CrudRoutesFactory.html":{},"classes/R.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{}}}],["this.options.serialize?.update",{"_index":944,"title":{},"body":{"classes/CrudConfigService.html":{},"classes/CrudRoutesFactory.html":{},"classes/R.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{}}}],["this.page(page",{"_index":1155,"title":{},"body":{"classes/CustomQueryBuilder.html":{}}}],["this.password",{"_index":661,"title":{},"body":{"classes/CreateUserDto.html":{},"interfaces/IUser.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{}}}],["this.path",{"_index":178,"title":{},"body":{"classes/ApiException.html":{}}}],["this.schedule.addcronjob(job.name",{"_index":1432,"title":{},"body":{"injectables/PersistedCronService.html":{}}}],["this.scheduler.addcronjob(`${date.now",{"_index":1241,"title":{},"body":{"injectables/EmailSchedulingService.html":{}}}],["this.scheduler.addcronjob(name",{"_index":768,"title":{},"body":{"injectables/CronService.html":{}}}],["this.scheduler.addinterval(name",{"_index":784,"title":{},"body":{"injectables/CronService.html":{}}}],["this.scheduler.addtimeout(name",{"_index":793,"title":{},"body":{"injectables/CronService.html":{}}}],["this.scheduler.deletecronjob(name",{"_index":774,"title":{},"body":{"injectables/CronService.html":{}}}],["this.scheduler.deleteinterval(name",{"_index":786,"title":{},"body":{"injectables/CronService.html":{}}}],["this.scheduler.deletetimeout(name",{"_index":795,"title":{},"body":{"injectables/CronService.html":{}}}],["this.scheduler.getcronjob(name",{"_index":773,"title":{},"body":{"injectables/CronService.html":{}}}],["this.scheduler.getinterval(name",{"_index":785,"title":{},"body":{"injectables/CronService.html":{}}}],["this.scheduler.getintervals",{"_index":776,"title":{},"body":{"injectables/CronService.html":{}}}],["this.scheduler.gettimeout(name",{"_index":794,"title":{},"body":{"injectables/CronService.html":{}}}],["this.scheduler.gettimeouts",{"_index":788,"title":{},"body":{"injectables/CronService.html":{}}}],["this.service.create(input",{"_index":1057,"title":{},"body":{"classes/CrudController.html":{},"controllers/TagsController.html":{},"controllers/UsersController.html":{}}}],["this.service.findonebyemail(email",{"_index":1630,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.service.findonebyid(id",{"_index":1049,"title":{},"body":{"classes/CrudController.html":{}}}],["this.service.getone(req",{"_index":917,"title":{},"body":{"classes/CrudConfigService.html":{},"classes/CrudRoutesFactory.html":{},"classes/R.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{}}}],["this.service.getonebase(req",{"_index":920,"title":{},"body":{"classes/CrudConfigService.html":{},"classes/CrudRoutesFactory.html":{},"classes/R.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{}}}],["this.service.paginatedfindall",{"_index":1046,"title":{},"body":{"classes/CrudController.html":{}}}],["this.service.remove(id",{"_index":1054,"title":{},"body":{"classes/CrudController.html":{}}}],["this.service.update(id",{"_index":1061,"title":{},"body":{"classes/CrudController.html":{},"controllers/TagsController.html":{},"controllers/UsersController.html":{}}}],["this.setresponsemodels",{"_index":911,"title":{},"body":{"classes/CrudConfigService.html":{},"classes/CrudRoutesFactory.html":{},"classes/R.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{}}}],["this.setswaggerresponseok(route.name",{"_index":978,"title":{},"body":{"classes/CrudConfigService.html":{},"classes/CrudRoutesFactory.html":{},"classes/R.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{}}}],["this.stack",{"_index":176,"title":{},"body":{"classes/ApiException.html":{}}}],["this.status",{"_index":183,"title":{},"body":{"classes/ApiException.html":{}}}],["this.statuscode",{"_index":182,"title":{},"body":{"classes/ApiException.html":{}}}],["this.swaggermodels",{"_index":898,"title":{},"body":{"classes/CrudConfigService.html":{},"classes/CrudRoutesFactory.html":{},"classes/R.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{}}}],["this.swaggermodels.create",{"_index":961,"title":{},"body":{"classes/CrudConfigService.html":{},"classes/CrudRoutesFactory.html":{},"classes/R.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{}}}],["this.swaggermodels.delete",{"_index":967,"title":{},"body":{"classes/CrudConfigService.html":{},"classes/CrudRoutesFactory.html":{},"classes/R.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{}}}],["this.swaggermodels.get",{"_index":957,"title":{},"body":{"classes/CrudConfigService.html":{},"classes/CrudRoutesFactory.html":{},"classes/R.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{}}}],["this.swaggermodels.getmany",{"_index":959,"title":{},"body":{"classes/CrudConfigService.html":{},"classes/CrudRoutesFactory.html":{},"classes/R.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{}}}],["this.swaggermodels.replace",{"_index":965,"title":{},"body":{"classes/CrudConfigService.html":{},"classes/CrudRoutesFactory.html":{},"classes/R.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{}}}],["this.swaggermodels.update",{"_index":963,"title":{},"body":{"classes/CrudConfigService.html":{},"classes/CrudRoutesFactory.html":{},"classes/R.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{}}}],["this.target",{"_index":953,"title":{},"body":{"classes/CrudConfigService.html":{},"classes/CrudRoutesFactory.html":{},"classes/R.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{}}}],["this.target.prototype",{"_index":902,"title":{},"body":{"classes/CrudConfigService.html":{},"classes/CrudRoutesFactory.html":{},"classes/R.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{}}}],["this.targetproto",{"_index":895,"title":{},"body":{"classes/CrudConfigService.html":{},"classes/CrudRoutesFactory.html":{},"classes/R.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{}}}],["this.targetproto[name",{"_index":915,"title":{},"body":{"classes/CrudConfigService.html":{},"classes/CrudRoutesFactory.html":{},"classes/R.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{}}}],["this.targetproto[route.name",{"_index":975,"title":{},"body":{"classes/CrudConfigService.html":{},"classes/CrudRoutesFactory.html":{},"classes/R.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{}}}],["this.timestamp",{"_index":179,"title":{},"body":{"classes/ApiException.html":{}}}],["this.update(id",{"_index":1119,"title":{},"body":{"classes/CrudService.html":{}}}],["this.updated_at",{"_index":484,"title":{},"body":{"classes/BaseModel.html":{},"interfaces/IBaseModel.html":{}}}],["this.userservice.findonebyemail(email",{"_index":412,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.userservice.findonebyemail(payload.email",{"_index":1376,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["this[expression.tostring",{"_index":481,"title":{},"body":{"classes/BaseModel.html":{},"interfaces/IBaseModel.html":{}}}],["this[route.name](route.name",{"_index":977,"title":{},"body":{"classes/CrudConfigService.html":{},"classes/CrudRoutesFactory.html":{},"classes/R.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{}}}],["those",{"_index":640,"title":{},"body":{"classes/CreateUserDto.html":{},"interfaces/IUser.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{}}}],["throw",{"_index":1050,"title":{},"body":{"classes/CrudController.html":{}}}],["throwerror",{"_index":1592,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["throwerror(e",{"_index":1600,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["throwerror(new",{"_index":1599,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["time",{"_index":782,"title":{},"body":{"injectables/CronService.html":{},"injectables/PersistedCronService.html":{}}}],["timeago",{"_index":95,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/Result.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{},"interfaces/User.html":{}}}],["timeout",{"_index":683,"title":{},"body":{"injectables/CronService.html":{},"injectables/TimeoutInterceptor.html":{}}}],["timeout('handletimeoutfn",{"_index":733,"title":{},"body":{"injectables/CronService.html":{}}}],["timeout(10000",{"_index":1595,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["timeouterror",{"_index":1593,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["timeoutinterceptor",{"_index":1583,"title":{"injectables/TimeoutInterceptor.html":{}},"body":{"injectables/TimeoutInterceptor.html":{},"coverage.html":{}}}],["timeouts",{"_index":740,"title":{},"body":{"injectables/CronService.html":{}}}],["timeouts.foreach((key",{"_index":789,"title":{},"body":{"injectables/CronService.html":{}}}],["times",{"_index":687,"title":{},"body":{"injectables/CronService.html":{}}}],["timestamp",{"_index":144,"title":{},"body":{"classes/ApiException.html":{},"controllers/HealthController.html":{},"classes/QueryFailedFilter.html":{},"classes/ValidationFailedFilter.html":{}}}],["todo",{"_index":1250,"title":{},"body":{"injectables/EmailService.html":{},"injectables/PersistedCronService.html":{}}}],["token_expiration",{"_index":283,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["tokenpayload",{"_index":1360,"title":{"interfaces/TokenPayload.html":{}},"body":{"injectables/JwtStrategy.html":{},"interfaces/TokenPayload.html":{},"coverage.html":{}}}],["tokenpayload.interface",{"_index":1368,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["total",{"_index":17,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/BaseRoute.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"classes/CrudConfigService.html":{},"interfaces/CrudOptions.html":{},"classes/CrudRoutesFactory.html":{},"classes/CrudService.html":{},"classes/CustomQueryBuilder.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetManyDefaultResponse.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/IPaginationResult.html":{},"classes/PaginationParams.html":{},"interfaces/ParamOption.html":{},"interfaces/ParamsOptions.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"classes/R.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/Result.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{},"interfaces/User.html":{}}}],["totalpages",{"_index":1114,"title":{},"body":{"classes/CrudService.html":{},"classes/CustomQueryBuilder.html":{},"interfaces/IPaginationResult.html":{},"classes/PaginationParams.html":{}}}],["touch",{"_index":1856,"title":{},"body":{"index.html":{}}}],["transform",{"_index":1257,"title":{},"body":{"injectables/ExcludeNullUndefinedInterceptor.html":{},"interfaces/IPaginationResult.html":{},"classes/PaginationParams.html":{}}}],["transform((val",{"_index":1345,"title":{},"body":{"interfaces/IPaginationResult.html":{},"classes/PaginationParams.html":{}}}],["transformer",{"_index":805,"title":{},"body":{"classes/CrudConfigService.html":{},"classes/CrudRoutesFactory.html":{},"interfaces/IPaginationResult.html":{},"classes/PaginationParams.html":{},"classes/R.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{},"dependencies.html":{}}}],["transforminterceptor",{"_index":1492,"title":{"injectables/TransformInterceptor.html":{}},"body":{"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{},"coverage.html":{}}}],["true",{"_index":265,"title":{},"body":{"modules/AppModule.html":{},"classes/CreateUserDto.html":{},"injectables/CronService.html":{},"classes/CrudConfigService.html":{},"classes/CrudRoutesFactory.html":{},"classes/CustomQueryBuilder.html":{},"modules/DatabaseModule.html":{},"interfaces/IUser.html":{},"injectables/JwtStrategy.html":{},"classes/R.html":{},"guards/RequestGuard.html":{},"guards/ResponseGuard.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"miscellaneous/variables.html":{}}}],["try",{"_index":536,"title":{},"body":{"interfaces/BaseRoute.html":{},"classes/CreateUserDto.html":{},"injectables/CronService.html":{},"interfaces/CrudOptions.html":{},"classes/CrudService.html":{},"interfaces/GetManyDefaultResponse.html":{},"interfaces/IUser.html":{},"interfaces/ParamOption.html":{},"interfaces/ParamsOptions.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{}}}],["ts",{"_index":479,"title":{},"body":{"classes/BaseModel.html":{},"classes/CrudConfigService.html":{},"classes/CrudRoutesFactory.html":{},"classes/CrudService.html":{},"injectables/ExcludeNullUndefinedInterceptor.html":{},"controllers/HealthController.html":{},"interfaces/IBaseModel.html":{},"classes/QueryFailedFilter.html":{},"classes/R.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{},"classes/ValidationFailedFilter.html":{},"miscellaneous/variables.html":{}}}],["twitter",{"_index":1862,"title":{},"body":{"index.html":{}}}],["type",{"_index":19,"title":{},"body":{"interfaces/APIResponse.html":{},"classes/ApiException.html":{},"interfaces/AppLaunchAction.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/BaseModel.html":{},"interfaces/BaseRoute.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"classes/CreateTagsDto.html":{},"classes/CreateUserDto.html":{},"injectables/CronService.html":{},"classes/CrudConfigService.html":{},"classes/CrudController.html":{},"interfaces/CrudOptions.html":{},"classes/CrudRoutesFactory.html":{},"classes/CrudService.html":{},"classes/CustomQueryBuilder.html":{},"classes/EmailScheduleDto.html":{},"controllers/EmailSchedulingController.html":{},"injectables/EmailSchedulingService.html":{},"injectables/EmailService.html":{},"injectables/ExcludeNullUndefinedInterceptor.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetManyDefaultResponse.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"controllers/HealthController.html":{},"interfaces/IBaseModel.html":{},"interfaces/ICrudService.html":{},"interfaces/IPaginationResult.html":{},"interfaces/ITag.html":{},"interfaces/ITryRequest.html":{},"interfaces/IUser.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/LoginCredsDto.html":{},"classes/PaginationParams.html":{},"interfaces/ParamOption.html":{},"interfaces/ParamsOptions.html":{},"injectables/PersistedCronService.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"classes/QueryFailedFilter.html":{},"classes/R.html":{},"guards/RequestGuard.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/Response.html":{},"guards/ResponseGuard.html":{},"interfaces/Result.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{},"classes/Tag.html":{},"controllers/TagsController.html":{},"injectables/TagsService.html":{},"injectables/TimeoutInterceptor.html":{},"interfaces/TokenPayload.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateTagsDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"classes/ValidationFailedFilter.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"interfaces/User.html":{}}}],["typealiases",{"_index":1874,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typeof",{"_index":477,"title":{},"body":{"classes/BaseModel.html":{},"classes/CustomQueryBuilder.html":{},"injectables/ExcludeNullUndefinedInterceptor.html":{},"interfaces/IBaseModel.html":{},"guards/RequestGuard.html":{},"miscellaneous/variables.html":{}}}],["types",{"_index":476,"title":{},"body":{"classes/BaseModel.html":{},"interfaces/BaseRoute.html":{},"interfaces/CrudOptions.html":{},"classes/CustomQueryBuilder.html":{},"interfaces/GetManyDefaultResponse.html":{},"interfaces/IBaseModel.html":{},"interfaces/ParamOption.html":{},"interfaces/ParamsOptions.html":{},"dependencies.html":{}}}],["types/dotenv",{"_index":1756,"title":{},"body":{"dependencies.html":{}}}],["typescript",{"_index":320,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"classes/BaseModel.html":{},"interfaces/BaseRoute.html":{},"injectables/CronService.html":{},"interfaces/CrudOptions.html":{},"classes/CustomQueryBuilder.html":{},"modules/DatabaseModule.html":{},"controllers/EmailSchedulingController.html":{},"injectables/EmailSchedulingService.html":{},"injectables/ExcludeNullUndefinedInterceptor.html":{},"interfaces/GetManyDefaultResponse.html":{},"controllers/HealthController.html":{},"interfaces/IBaseModel.html":{},"injectables/JwtStrategy.html":{},"classes/LoginCredsDto.html":{},"interfaces/ParamOption.html":{},"interfaces/ParamsOptions.html":{},"classes/QueryFailedFilter.html":{},"interfaces/Response.html":{},"guards/ResponseGuard.html":{},"injectables/TransformInterceptor.html":{},"injectables/UsersService.html":{},"classes/ValidationFailedFilter.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["ui",{"_index":1791,"title":{},"body":{"dependencies.html":{}}}],["unauthorized",{"_index":194,"title":{},"body":{"classes/ApiException.html":{}}}],["unauthorizedexception",{"_index":166,"title":{},"body":{"classes/ApiException.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["unauthorizedexception('credentials",{"_index":1392,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["unauthorizedexception('invalid",{"_index":420,"title":{},"body":{"injectables/AuthService.html":{}}}],["unauthorizedexception('unknown",{"_index":414,"title":{},"body":{"injectables/AuthService.html":{}}}],["undefined",{"_index":1008,"title":{},"body":{"classes/CrudController.html":{},"interfaces/CrudOptions.html":{},"injectables/ExcludeNullUndefinedInterceptor.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["uniqueviolationerror",{"_index":1445,"title":{},"body":{"classes/QueryFailedFilter.html":{}}}],["unit",{"_index":1836,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":147,"title":{},"body":{"classes/ApiException.html":{},"classes/CrudController.html":{},"classes/CrudService.html":{},"classes/CustomQueryBuilder.html":{},"injectables/ExcludeNullUndefinedInterceptor.html":{},"miscellaneous/functions.html":{}}}],["unsafe",{"_index":545,"title":{},"body":{"interfaces/BaseRoute.html":{},"injectables/CronService.html":{},"interfaces/CrudOptions.html":{},"classes/CustomQueryBuilder.html":{},"injectables/EmailSchedulingService.html":{},"injectables/ExcludeNullUndefinedInterceptor.html":{},"interfaces/GetManyDefaultResponse.html":{},"controllers/HealthController.html":{},"injectables/JwtStrategy.html":{},"interfaces/ParamOption.html":{},"interfaces/ParamsOptions.html":{},"classes/QueryFailedFilter.html":{},"interfaces/Response.html":{},"guards/ResponseGuard.html":{},"injectables/TransformInterceptor.html":{},"injectables/UsersService.html":{},"classes/ValidationFailedFilter.html":{}}}],["until",{"_index":312,"title":{},"body":{"modules/AppModule.html":{}}}],["unused",{"_index":362,"title":{},"body":{"controllers/AuthController.html":{},"injectables/ExcludeNullUndefinedInterceptor.html":{},"classes/LoginCredsDto.html":{}}}],["up",{"_index":1710,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["up(knex",{"_index":1812,"title":{},"body":{"miscellaneous/functions.html":{}}}],["update",{"_index":532,"title":{},"body":{"interfaces/BaseRoute.html":{},"classes/CrudController.html":{},"interfaces/CrudOptions.html":{},"classes/CrudService.html":{},"interfaces/GetManyDefaultResponse.html":{},"interfaces/ICrudService.html":{},"interfaces/ParamOption.html":{},"interfaces/ParamsOptions.html":{},"controllers/TagsController.html":{},"injectables/TagsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["update(@param('id",{"_index":1060,"title":{},"body":{"classes/CrudController.html":{}}}],["update(id",{"_index":1027,"title":{},"body":{"classes/CrudController.html":{},"classes/CrudService.html":{},"interfaces/ICrudService.html":{},"controllers/TagsController.html":{},"injectables/TagsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["updated",{"_index":1029,"title":{},"body":{"classes/CrudController.html":{}}}],["updated_at",{"_index":431,"title":{},"body":{"classes/BaseModel.html":{},"interfaces/IBaseModel.html":{},"classes/Tag.html":{},"classes/User.html":{}}}],["updateonebase",{"_index":503,"title":{},"body":{"interfaces/BaseRoute.html":{},"interfaces/CrudOptions.html":{},"interfaces/GetManyDefaultResponse.html":{},"interfaces/ParamOption.html":{},"interfaces/ParamsOptions.html":{},"miscellaneous/typealiases.html":{}}}],["updates",{"_index":1028,"title":{},"body":{"classes/CrudController.html":{},"classes/CrudService.html":{},"injectables/TagsService.html":{},"injectables/UsersService.html":{}}}],["updatetagsdto",{"_index":602,"title":{"classes/UpdateTagsDto.html":{}},"body":{"classes/CreateTagsDto.html":{},"classes/CrudController.html":{},"interfaces/ITag.html":{},"classes/Tag.html":{},"controllers/TagsController.html":{},"classes/UpdateTagsDto.html":{},"coverage.html":{}}}],["updateuserdto",{"_index":666,"title":{"classes/UpdateUserDto.html":{}},"body":{"classes/CreateUserDto.html":{},"classes/CrudController.html":{},"interfaces/IUser.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["use",{"_index":206,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/EmailSchedulingController.html":{},"controllers/HealthController.html":{},"controllers/TagsController.html":{},"controllers/UsersController.html":{}}}],["used",{"_index":584,"title":{},"body":{"classes/CreateTagsDto.html":{},"classes/CreateUserDto.html":{},"interfaces/ITag.html":{},"interfaces/IUser.html":{},"classes/Tag.html":{},"classes/UpdateTagsDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{}}}],["usefactory",{"_index":382,"title":{},"body":{"modules/AuthModule.html":{},"modules/DatabaseModule.html":{},"miscellaneous/variables.html":{}}}],["useguards",{"_index":338,"title":{},"body":{"controllers/AuthController.html":{},"classes/LoginCredsDto.html":{},"controllers/TagsController.html":{}}}],["useguards(authguard('jwt",{"_index":1557,"title":{},"body":{"controllers/TagsController.html":{}}}],["useguards(authguard('local",{"_index":359,"title":{},"body":{"controllers/AuthController.html":{},"classes/LoginCredsDto.html":{}}}],["useguards(undefined)@post('login",{"_index":333,"title":{},"body":{"controllers/AuthController.html":{}}}],["usenullasdefault",{"_index":1184,"title":{},"body":{"modules/DatabaseModule.html":{},"miscellaneous/variables.html":{}}}],["user",{"_index":53,"title":{"classes/User.html":{},"interfaces/User.html":{}},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"classes/CreateUserDto.html":{},"modules/DatabaseModule.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/IUser.html":{},"injectables/JwtStrategy.html":{},"classes/LoginCredsDto.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/Result.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/variables.html":{},"interfaces/User.html":{}}}],["user.model",{"_index":1625,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["user.password",{"_index":418,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UsersService.html":{}}}],["user.tojson",{"_index":421,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.ts",{"_index":1716,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["user?.password",{"_index":1647,"title":{},"body":{"injectables/UsersService.html":{}}}],["useraddress",{"_index":70,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/Result.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{},"interfaces/User.html":{}}}],["usercontacts",{"_index":71,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/Result.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{},"interfaces/User.html":{}}}],["useremail",{"_index":72,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/Result.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{},"interfaces/User.html":{}}}],["userid",{"_index":129,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/Result.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{},"interfaces/User.html":{}}}],["username",{"_index":73,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"classes/CreateUserDto.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/IUser.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/Result.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{},"interfaces/User.html":{}}}],["usernamefield",{"_index":1382,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["userpost",{"_index":85,"title":{"interfaces/UserPost.html":{}},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/Result.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{},"coverage.html":{},"interfaces/User.html":{}}}],["userposts",{"_index":99,"title":{"interfaces/UserPosts.html":{}},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/Result.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{},"coverage.html":{},"interfaces/User.html":{}}}],["users",{"_index":621,"title":{},"body":{"classes/CreateUserDto.html":{},"interfaces/IUser.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"miscellaneous/variables.html":{}}}],["users.controller",{"_index":1635,"title":{},"body":{"modules/UsersModule.html":{}}}],["users.service",{"_index":1626,"title":{},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{}}}],["users/user.model",{"_index":1037,"title":{},"body":{"classes/CrudController.html":{},"classes/CrudService.html":{},"modules/DatabaseModule.html":{}}}],["users/users.module",{"_index":261,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{}}}],["users/users.service",{"_index":346,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"classes/LoginCredsDto.html":{}}}],["userscontroller",{"_index":1616,"title":{"controllers/UsersController.html":{}},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{},"coverage.html":{}}}],["userservice",{"_index":358,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"classes/LoginCredsDto.html":{}}}],["usershape",{"_index":663,"title":{},"body":{"classes/CreateUserDto.html":{},"interfaces/IUser.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"miscellaneous/typealiases.html":{}}}],["usersmodule",{"_index":231,"title":{"modules/UsersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["usersservice",{"_index":345,"title":{"injectables/UsersService.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"classes/LoginCredsDto.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"overview.html":{}}}],["usesid",{"_index":54,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/Result.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{},"interfaces/User.html":{}}}],["usevalue",{"_index":1179,"title":{},"body":{"modules/DatabaseModule.html":{},"miscellaneous/variables.html":{}}}],["using",{"_index":636,"title":{},"body":{"classes/CreateUserDto.html":{},"interfaces/IUser.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{}}}],["utils",{"_index":811,"title":{},"body":{"classes/CrudConfigService.html":{},"classes/CrudRoutesFactory.html":{},"classes/R.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{}}}],["uuid",{"_index":510,"title":{},"body":{"interfaces/BaseRoute.html":{},"interfaces/CrudOptions.html":{},"interfaces/GetManyDefaultResponse.html":{},"interfaces/ParamOption.html":{},"interfaces/ParamsOptions.html":{}}}],["val",{"_index":1892,"title":{},"body":{"miscellaneous/variables.html":{}}}],["val.length",{"_index":1895,"title":{},"body":{"miscellaneous/variables.html":{}}}],["valid('development",{"_index":276,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["validate",{"_index":1357,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["validate(email",{"_index":1385,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["validate(payload",{"_index":1359,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["validateuser",{"_index":394,"title":{},"body":{"injectables/AuthService.html":{}}}],["validateuser(email",{"_index":407,"title":{},"body":{"injectables/AuthService.html":{}}}],["validation",{"_index":520,"title":{},"body":{"interfaces/BaseRoute.html":{},"classes/CreateTagsDto.html":{},"classes/CreateUserDto.html":{},"interfaces/CrudOptions.html":{},"interfaces/GetManyDefaultResponse.html":{},"interfaces/ITag.html":{},"interfaces/IUser.html":{},"interfaces/ParamOption.html":{},"interfaces/ParamsOptions.html":{},"classes/Tag.html":{},"classes/UpdateTagsDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{}}}],["validationerror",{"_index":1651,"title":{},"body":{"classes/ValidationFailedFilter.html":{}}}],["validationerrorcode",{"_index":1654,"title":{},"body":{"classes/ValidationFailedFilter.html":{}}}],["validationerrortype",{"_index":1656,"title":{},"body":{"classes/ValidationFailedFilter.html":{}}}],["validationfailedfilter",{"_index":1649,"title":{"classes/ValidationFailedFilter.html":{}},"body":{"classes/ValidationFailedFilter.html":{},"coverage.html":{}}}],["validationoptions",{"_index":266,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["validationpipeoptions",{"_index":494,"title":{},"body":{"interfaces/BaseRoute.html":{},"interfaces/CrudOptions.html":{},"interfaces/GetManyDefaultResponse.html":{},"interfaces/ParamOption.html":{},"interfaces/ParamsOptions.html":{}}}],["validationschema",{"_index":269,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["validator",{"_index":343,"title":{},"body":{"controllers/AuthController.html":{},"classes/CreateTagsDto.html":{},"classes/CreateUserDto.html":{},"classes/EmailScheduleDto.html":{},"interfaces/IPaginationResult.html":{},"interfaces/ITag.html":{},"interfaces/IUser.html":{},"classes/LoginCredsDto.html":{},"classes/PaginationParams.html":{},"classes/Tag.html":{},"classes/UpdateTagsDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"dependencies.html":{}}}],["value",{"_index":437,"title":{},"body":{"classes/BaseModel.html":{},"injectables/CronService.html":{},"classes/CrudConfigService.html":{},"classes/CrudRoutesFactory.html":{},"classes/CrudService.html":{},"classes/CustomQueryBuilder.html":{},"injectables/EmailSchedulingService.html":{},"injectables/ExcludeNullUndefinedInterceptor.html":{},"injectables/LocalStrategy.html":{},"injectables/PersistedCronService.html":{},"classes/R.html":{},"guards/RequestGuard.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{},"classes/Tag.html":{},"injectables/TagsService.html":{},"injectables/TimeoutInterceptor.html":{},"classes/User.html":{},"injectables/UsersService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["value.length",{"_index":1152,"title":{},"body":{"classes/CustomQueryBuilder.html":{}}}],["value.map(recursivelystripnullvalues",{"_index":1272,"title":{},"body":{"injectables/ExcludeNullUndefinedInterceptor.html":{}}}],["value.nextdates().todate",{"_index":760,"title":{},"body":{"injectables/CronService.html":{}}}],["value.trim",{"_index":1489,"title":{},"body":{"guards/RequestGuard.html":{}}}],["var",{"_index":539,"title":{},"body":{"interfaces/BaseRoute.html":{},"interfaces/CrudOptions.html":{},"interfaces/GetManyDefaultResponse.html":{},"interfaces/ParamOption.html":{},"interfaces/ParamsOptions.html":{}}}],["variable",{"_index":1661,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":1883,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["various",{"_index":628,"title":{},"body":{"classes/CreateUserDto.html":{},"interfaces/IUser.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{}}}],["vars",{"_index":363,"title":{},"body":{"controllers/AuthController.html":{},"injectables/ExcludeNullUndefinedInterceptor.html":{},"classes/LoginCredsDto.html":{}}}],["viewscont",{"_index":121,"title":{},"body":{"interfaces/APIResponse.html":{},"interfaces/AppLaunchAction.html":{},"interfaces/Comment.html":{},"interfaces/Comments.html":{},"interfaces/Follower.html":{},"interfaces/Following.html":{},"interfaces/GetAppLaunchData.html":{},"interfaces/GetComments.html":{},"interfaces/GetFollowers.html":{},"interfaces/GetFollowing.html":{},"interfaces/GetRescueList.html":{},"interfaces/GetUserPosts.html":{},"interfaces/GetUserProfile.html":{},"interfaces/PostType.html":{},"interfaces/PostedByUser.html":{},"interfaces/RescueLists.html":{},"interfaces/Rescues.html":{},"interfaces/Result.html":{},"interfaces/UserPost.html":{},"interfaces/UserPosts.html":{},"interfaces/User.html":{}}}],["visibility",{"_index":462,"title":{},"body":{"classes/BaseModel.html":{},"interfaces/IBaseModel.html":{},"dependencies.html":{}}}],["visibilityplugin",{"_index":461,"title":{},"body":{"classes/BaseModel.html":{},"interfaces/IBaseModel.html":{}}}],["void",{"_index":243,"title":{},"body":{"modules/AppModule.html":{},"injectables/CronService.html":{},"classes/CrudConfigService.html":{},"classes/CrudRoutesFactory.html":{},"injectables/EmailService.html":{},"controllers/HealthController.html":{},"classes/QueryFailedFilter.html":{},"classes/R.html":{},"classes/Swagger.html":{},"classes/ValidationFailedFilter.html":{}}}],["watch",{"_index":1832,"title":{},"body":{"index.html":{}}}],["website",{"_index":1860,"title":{},"body":{"index.html":{}}}],["went",{"_index":1507,"title":{},"body":{"guards/ResponseGuard.html":{}}}],["whenever",{"_index":585,"title":{},"body":{"classes/CreateTagsDto.html":{},"classes/CreateUserDto.html":{},"interfaces/ITag.html":{},"interfaces/IUser.html":{},"classes/Tag.html":{},"classes/UpdateTagsDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{}}}],["whitespace",{"_index":637,"title":{},"body":{"classes/CreateUserDto.html":{},"interfaces/IUser.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{}}}],["withmeta",{"_index":1518,"title":{},"body":{"guards/ResponseGuard.html":{}}}],["withmeta(data",{"_index":1513,"title":{},"body":{"guards/ResponseGuard.html":{}}}],["without",{"_index":597,"title":{},"body":{"classes/CreateTagsDto.html":{},"classes/CreateUserDto.html":{},"interfaces/ITag.html":{},"interfaces/IUser.html":{},"classes/Tag.html":{},"classes/UpdateTagsDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{}}}],["withparams",{"_index":491,"title":{},"body":{"interfaces/BaseRoute.html":{},"classes/CrudConfigService.html":{},"interfaces/CrudOptions.html":{},"classes/CrudRoutesFactory.html":{},"interfaces/GetManyDefaultResponse.html":{},"interfaces/ParamOption.html":{},"interfaces/ParamsOptions.html":{},"classes/R.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{}}}],["world",{"_index":214,"title":{},"body":{"controllers/AppController.html":{}}}],["writable",{"_index":872,"title":{},"body":{"classes/CrudConfigService.html":{},"classes/CrudRoutesFactory.html":{},"classes/R.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{}}}],["wrong",{"_index":1508,"title":{},"body":{"guards/ResponseGuard.html":{}}}],["x",{"_index":829,"title":{},"body":{"classes/CrudConfigService.html":{},"classes/CrudRoutesFactory.html":{},"classes/R.html":{},"classes/SerializeHelper.html":{},"classes/Swagger.html":{}}}],["yes",{"_index":242,"title":{},"body":{"modules/AppModule.html":{},"controllers/HealthController.html":{},"interfaces/ICrudService.html":{},"classes/R.html":{},"miscellaneous/functions.html":{}}}],["you'd",{"_index":1850,"title":{},"body":{"index.html":{}}}],["zoom",{"_index":232,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CronModule.html":{},"modules/EmailModule.html":{},"modules/EmailSchedulingModule.html":{},"modules/TagsModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"interfaces/APIResponse.html":{"url":"interfaces/APIResponse.html","title":"interface - APIResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  APIResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/domain.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        count\n                                \n                                \n                                        data\n                                \n                                \n                                            Optional\n                                        error\n                                \n                                \n                                            Optional\n                                        message\n                                \n                                \n                                            Optional\n                                        page\n                                \n                                \n                                            Optional\n                                        pageCount\n                                \n                                \n                                        statusCode\n                                \n                                \n                                            Optional\n                                        total\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        count\n                                    \n                                \n                                \n                                    \n                                        count:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                    \n                                \n                                \n                                    \n                                        data:     T\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     T\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        error\n                                    \n                                \n                                \n                                    \n                                        error:         APIError\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         APIError\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        message\n                                    \n                                \n                                \n                                    \n                                        message:     string | string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | string[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        page\n                                    \n                                \n                                \n                                    \n                                        page:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pageCount\n                                    \n                                \n                                \n                                    \n                                        pageCount:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        statusCode\n                                    \n                                \n                                \n                                    \n                                        statusCode:     HttpStatus\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     HttpStatus\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        total\n                                    \n                                \n                                \n                                    \n                                        total:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { HttpStatus } from '@nestjs/common'\n\nexport type Results =\n    | GetAppLaunchData\n    | GetUserProfile\n    | GetUserPosts\n    | GetComments\n    | GetRescueList\n    | GetFollowers\n    | GetFollowing\n\nexport type APIError = Error | string | null\n\nexport interface Result {\n    data: T\n    error?: APIError\n    message?: string | string[]\n    statusCode: HttpStatus\n}\n\nexport interface APIResponse {\n    data: T\n    error?: APIError\n    message?: string | string[]\n    statusCode: HttpStatus\n\n    count?: number\n    page?: number\n    pageCount?: number\n    total?: number\n}\n\nexport interface GetAppLaunchData {\n    link: 'api:/'\n    response: APIResponse\n}\n\nexport interface GetUserProfile {\n    link: 'api:v1/user/getUserProfile?userId=25'\n    response: APIResponse\n}\n\nexport interface GetUserPosts {\n    link: 'api:v1/user/getUserPosts?pageNo=0&pageSize=25'\n    response: APIResponse\n}\n\nexport interface GetRescueList {\n    link: 'api:v1/rescue/getRescueList?pageNo=0&pageSize=10&status=pending|inProgress|completed|nearest'\n    response: APIResponse\n}\n\nexport interface GetComments {\n    link: 'api:v1/rescue/getComments?pageNo=0&pageSize=10&postId=1230'\n    response: APIResponse\n}\n\nexport interface GetFollowers {\n    link: 'api:v1/rescue/getUserFollowers?userId=1230'\n    response: APIResponse\n}\n\nexport interface GetFollowing {\n    link: 'api:v1/rescue/getUserFollowing?userId=1230'\n    response: APIResponse\n}\n\nexport interface AppLaunchAction {\n    actionId: number\n    action: string\n    isActive: boolean\n    subject?: string\n}\n\nexport interface User {\n    usesId: number\n\n    coverImage: string\n    following: boolean\n    gender: string\n    isOwnProfile: number\n    isRescuer: boolean\n    latitude: number\n    longitude: number\n    numberOfFollowers: number\n    numberOfFollowing: number\n    numberOfPosts: number\n    numberOfRescuesCompleted: number\n    numberOfRescuesCreated: number\n    numberOfRescuesInProgress: number\n    profileImage: string\n    rescuer: boolean\n    userAddress: string\n    userContacts: string\n    userEmail: string\n    userName: string\n    badge: {\n        badgeId: number\n        badgeName: string\n        badgeDescription: string\n        recuesCompletionNeeded: number\n    }\n    setting: {\n        showMyContacts: boolean\n        getNotifications: boolean\n    }\n}\n\nexport interface PostType {\n    postTypeId: number\n    postType: string\n}\n\nexport interface PostedByUser {\n    usesId: number\n    badgeName: string\n    following: boolean\n    profileImage: string\n    rescuer: boolean\n    userName: string\n}\n\nexport interface UserPost {\n    postId: number\n    commentsCount: number\n    isUserReactedToPost: boolean\n    ownPage: boolean\n    postBy: PostedByUser\n    postImage: string\n    postTime: string\n    postType: PostType\n    postVideo: string\n    reactionsCount: number\n    timeAgo: string\n\n    adCorporateLogoUrl: string | null\n    corporateDescription: string | null\n    corporateName: string | null\n}\n\nexport interface UserPosts {\n    isRecent: boolean\n    feed: UserPost[]\n}\n\nexport interface Rescues {\n    rescueId: number\n    animalImageUrl: string\n    distance: number\n    distanceAway: string\n    emergencyType: string\n    postedBy: string\n    postedMinAgo: string\n    rescueDate: Date\n    rescuedPetName: string\n    rescueLocality: string\n    rescuers: {\n        contact: number\n        name: string\n        profileId: number\n        profileImageUrl: string\n        rescues: boolean\n        showMyNumber: boolean\n    }\n    rescueStatus: string\n    viewsCont: number\n}\n\nexport interface RescueLists {\n    rescues: Rescues[]\n}\n\nexport interface Comment {\n    commentId: number\n    comment: string\n    commentedUseName: string\n    commentedUserId: number\n    timeAgo: string\n}\n\nexport interface Comments {\n    comments: Comment[]\n}\n\nexport interface Follower {\n    userId: number\n    userName: string\n    profileImage: string\n    areYouFollowing: boolean\n    showRemoveOption: boolean\n}\n\nexport interface Following extends Follower {}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ApiException.html":{"url":"classes/ApiException.html","title":"class - ApiException","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ApiException\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/base/swagger-gen/api-errors.decorator.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                error\n                            \n                            \n                                    Optional\n                                errors\n                            \n                            \n                                    Optional\n                                message\n                            \n                            \n                                    Optional\n                                path\n                            \n                            \n                                    Optional\n                                stack\n                            \n                            \n                                    Optional\n                                status\n                            \n                            \n                                    Optional\n                                statusCode\n                            \n                            \n                                    Optional\n                                timestamp\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(message: string, error: string, stack: string, errors: unknown, path: string, statusCode: number)\n                    \n                \n                        \n                            \n                                Defined in src/base/swagger-gen/api-errors.decorator.ts:36\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        message\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        error\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        stack\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        errors\n                                                  \n                                                        \n                                                                    unknown\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        path\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        statusCode\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            error\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiPropertyOptional()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/base/swagger-gen/api-errors.decorator.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            errors\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     unknown\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiPropertyOptional()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/base/swagger-gen/api-errors.decorator.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            message\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiPropertyOptional()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/base/swagger-gen/api-errors.decorator.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            path\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiPropertyOptional()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/base/swagger-gen/api-errors.decorator.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            stack\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiPropertyOptional()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/base/swagger-gen/api-errors.decorator.ts:36\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            status\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiPropertyOptional()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/base/swagger-gen/api-errors.decorator.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            statusCode\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiPropertyOptional()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/base/swagger-gen/api-errors.decorator.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            timestamp\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiPropertyOptional()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/base/swagger-gen/api-errors.decorator.ts:32\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n    applyDecorators,\n    BadRequestException,\n    ConflictException,\n    ForbiddenException,\n    HttpStatus,\n    InternalServerErrorException,\n    NotFoundException,\n    UnauthorizedException,\n} from '@nestjs/common'\nimport {\n    ApiBadRequestResponse,\n    ApiForbiddenResponse,\n    ApiInternalServerErrorResponse,\n    ApiNotFoundResponse,\n    ApiUnauthorizedResponse,\n    ApiConflictResponse,\n    ApiPropertyOptional,\n} from '@nestjs/swagger'\n\nexport class ApiException {\n    @ApiPropertyOptional() statusCode?: number\n\n    @ApiPropertyOptional() message?: string\n\n    @ApiPropertyOptional() status?: string\n\n    @ApiPropertyOptional() error?: string\n\n    @ApiPropertyOptional() errors?: unknown\n\n    @ApiPropertyOptional() timestamp?: string\n\n    @ApiPropertyOptional() path?: string\n\n    @ApiPropertyOptional() stack?: string\n\n    constructor(\n        message: string,\n        error: string,\n        stack: string,\n        errors: unknown,\n        path: string,\n        statusCode: number,\n    ) {\n        this.message = message\n        this.error = error\n        this.stack = stack\n        this.errors = errors\n        this.path = path\n        this.timestamp = new Date().toISOString()\n        this.statusCode = statusCode\n        this.status = HttpStatus[statusCode]\n    }\n}\n\nexport function ApiErrors() {\n    return applyDecorators(\n        ApiBadRequestResponse({\n            type: BadRequestException,\n            description: 'BadRequestException',\n        }),\n        ApiInternalServerErrorResponse({\n            type: InternalServerErrorException,\n        }),\n        ApiUnauthorizedResponse({\n            type: UnauthorizedException,\n        }),\n        ApiForbiddenResponse({\n            type: ForbiddenException,\n        }),\n        ApiConflictResponse({\n            type: ConflictException,\n        }),\n        ApiNotFoundResponse({ type: NotFoundException, description: 'Not found' }),\n    )\n\n    return applyDecorators(\n        ApiNotFoundResponse({ type: ApiException, description: 'Not found' }),\n        ApiBadRequestResponse({ type: ApiException, description: 'Bad Request' }),\n        ApiInternalServerErrorResponse({\n            type: ApiException,\n            description: 'Internal Server Error',\n        }),\n        ApiUnauthorizedResponse({\n            type: ApiException,\n            description: 'Unauthorized',\n        }),\n        ApiForbiddenResponse({ type: ApiException, description: 'Forbidden' }),\n    )\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getHello\n                        \n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/app.controller.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        /* eslint-disable no-use-before-define */\nimport { Controller, Get } from '@nestjs/common'\nimport { ApiTags } from '@nestjs/swagger'\n\n@Controller(AppController.path)\n@ApiTags(AppController.name)\nexport class AppController {\n    static path = '/'\n\n    @Get() getHello() {\n        return 'Hello World!'\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AppLaunchAction.html":{"url":"interfaces/AppLaunchAction.html","title":"interface - AppLaunchAction","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  AppLaunchAction\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/domain.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        action\n                                \n                                \n                                        actionId\n                                \n                                \n                                        isActive\n                                \n                                \n                                            Optional\n                                        subject\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        action\n                                    \n                                \n                                \n                                    \n                                        action:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        actionId\n                                    \n                                \n                                \n                                    \n                                        actionId:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isActive\n                                    \n                                \n                                \n                                    \n                                        isActive:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        subject\n                                    \n                                \n                                \n                                    \n                                        subject:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { HttpStatus } from '@nestjs/common'\n\nexport type Results =\n    | GetAppLaunchData\n    | GetUserProfile\n    | GetUserPosts\n    | GetComments\n    | GetRescueList\n    | GetFollowers\n    | GetFollowing\n\nexport type APIError = Error | string | null\n\nexport interface Result {\n    data: T\n    error?: APIError\n    message?: string | string[]\n    statusCode: HttpStatus\n}\n\nexport interface APIResponse {\n    data: T\n    error?: APIError\n    message?: string | string[]\n    statusCode: HttpStatus\n\n    count?: number\n    page?: number\n    pageCount?: number\n    total?: number\n}\n\nexport interface GetAppLaunchData {\n    link: 'api:/'\n    response: APIResponse\n}\n\nexport interface GetUserProfile {\n    link: 'api:v1/user/getUserProfile?userId=25'\n    response: APIResponse\n}\n\nexport interface GetUserPosts {\n    link: 'api:v1/user/getUserPosts?pageNo=0&pageSize=25'\n    response: APIResponse\n}\n\nexport interface GetRescueList {\n    link: 'api:v1/rescue/getRescueList?pageNo=0&pageSize=10&status=pending|inProgress|completed|nearest'\n    response: APIResponse\n}\n\nexport interface GetComments {\n    link: 'api:v1/rescue/getComments?pageNo=0&pageSize=10&postId=1230'\n    response: APIResponse\n}\n\nexport interface GetFollowers {\n    link: 'api:v1/rescue/getUserFollowers?userId=1230'\n    response: APIResponse\n}\n\nexport interface GetFollowing {\n    link: 'api:v1/rescue/getUserFollowing?userId=1230'\n    response: APIResponse\n}\n\nexport interface AppLaunchAction {\n    actionId: number\n    action: string\n    isActive: boolean\n    subject?: string\n}\n\nexport interface User {\n    usesId: number\n\n    coverImage: string\n    following: boolean\n    gender: string\n    isOwnProfile: number\n    isRescuer: boolean\n    latitude: number\n    longitude: number\n    numberOfFollowers: number\n    numberOfFollowing: number\n    numberOfPosts: number\n    numberOfRescuesCompleted: number\n    numberOfRescuesCreated: number\n    numberOfRescuesInProgress: number\n    profileImage: string\n    rescuer: boolean\n    userAddress: string\n    userContacts: string\n    userEmail: string\n    userName: string\n    badge: {\n        badgeId: number\n        badgeName: string\n        badgeDescription: string\n        recuesCompletionNeeded: number\n    }\n    setting: {\n        showMyContacts: boolean\n        getNotifications: boolean\n    }\n}\n\nexport interface PostType {\n    postTypeId: number\n    postType: string\n}\n\nexport interface PostedByUser {\n    usesId: number\n    badgeName: string\n    following: boolean\n    profileImage: string\n    rescuer: boolean\n    userName: string\n}\n\nexport interface UserPost {\n    postId: number\n    commentsCount: number\n    isUserReactedToPost: boolean\n    ownPage: boolean\n    postBy: PostedByUser\n    postImage: string\n    postTime: string\n    postType: PostType\n    postVideo: string\n    reactionsCount: number\n    timeAgo: string\n\n    adCorporateLogoUrl: string | null\n    corporateDescription: string | null\n    corporateName: string | null\n}\n\nexport interface UserPosts {\n    isRecent: boolean\n    feed: UserPost[]\n}\n\nexport interface Rescues {\n    rescueId: number\n    animalImageUrl: string\n    distance: number\n    distanceAway: string\n    emergencyType: string\n    postedBy: string\n    postedMinAgo: string\n    rescueDate: Date\n    rescuedPetName: string\n    rescueLocality: string\n    rescuers: {\n        contact: number\n        name: string\n        profileId: number\n        profileImageUrl: string\n        rescues: boolean\n        showMyNumber: boolean\n    }\n    rescueStatus: string\n    viewsCont: number\n}\n\nexport interface RescueLists {\n    rescues: Rescues[]\n}\n\nexport interface Comment {\n    commentId: number\n    comment: string\n    commentedUseName: string\n    commentedUserId: number\n    timeAgo: string\n}\n\nexport interface Comments {\n    comments: Comment[]\n}\n\nexport interface Follower {\n    userId: number\n    userName: string\n    profileImage: string\n    areYouFollowing: boolean\n    showRemoveOption: boolean\n}\n\nexport interface Following extends Follower {}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nCronModule\n\nCronModule\n\nAppModule -->\n\nCronModule->AppModule\n\n\n\n\n\nDatabaseModule\n\nDatabaseModule\n\nAppModule -->\n\nDatabaseModule->AppModule\n\n\n\n\n\nEmailSchedulingModule\n\nEmailSchedulingModule\n\nAppModule -->\n\nEmailSchedulingModule->AppModule\n\n\n\n\n\nTagsModule\n\nTagsModule\n\nAppModule -->\n\nTagsModule->AppModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                        \n                            HealthController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                        \n                            CronModule\n                        \n                        \n                            DatabaseModule\n                        \n                        \n                            EmailSchedulingModule\n                        \n                        \n                            TagsModule\n                        \n                        \n                            UsersModule\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onApplicationShutdown\n                        \n                        \n                    \n                \n            \n            \n                \nonApplicationShutdown(signal?: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app.module.ts:70\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    signal\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onModuleInit\n                        \n                        \n                    \n                \n            \n            \n                \nonModuleInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app.module.ts:66\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        import { Module, OnApplicationShutdown, OnModuleInit } from '@nestjs/common'\nimport { ConfigModule } from '@nestjs/config'\nimport { ScheduleModule } from '@nestjs/schedule'\nimport { TerminusModule } from '@nestjs/terminus'\n\nimport * as Joi from '@hapi/joi'\n\nimport { AppController } from './app.controller'\nimport { AuthModule } from './auth/auth.module'\nimport { CronModule } from './cron/cron.module'\nimport { DatabaseModule } from './database/database.module'\nimport { EmailSchedulingModule } from './emailScheduling/emailScheduling.module'\nimport { HealthController } from './health/health.controller'\nimport { TagsModule } from './tags/tags.module'\nimport { UsersModule } from './users/users.module'\n\nconst ConfigModuleOptions = {\n    isGlobal: true,\n    validationOptions: {\n        allowUnknown: true,\n        abortEarly: true,\n    },\n    /* eslint-disable */\n    validationSchema: Joi.object({\n        PORT: Joi.number().default(3000),\n        NODE_ENV: Joi.string()\n            .required()\n            .valid('development', 'production', 'test', 'provision')\n            .default('development'),\n\n        JWTKEY: Joi.string().required(),\n        TOKEN_EXPIRATION: Joi.string().required(),\n\n        database: Joi.string().required(),\n        type: Joi.string().required(),\n        logging: Joi.string().required(),\n        synchronize: Joi.string().required(),\n    }),\n    /* eslint-enable */\n}\n\n@Module({\n    controllers: [AppController, HealthController],\n    imports: [\n        ConfigModule.forRoot(ConfigModuleOptions),\n        DatabaseModule,\n        TerminusModule, // Health module\n        ScheduleModule.forRoot(), // CronModules deps\n        CronModule,\n        EmailSchedulingModule,\n        AuthModule,\n        TagsModule,\n        UsersModule,\n    ],\n    providers: [],\n})\nexport class AppModule implements OnModuleInit, OnApplicationShutdown {\n    /*\n     * When the application receives a termination signal it will call any registered\n     * onModuleDestroy(), beforeApplicationShutdown(), then onApplicationShutdown() methods\n     * (in the sequence described above) with the corresponding signal as the first parameter.\n     * If a registered function awaits an asynchronous call (returns a promise), Nest will not\n     * continue in the sequence until the promise is resolved or rejected.\n     */\n\n    onModuleInit(): void {\n        console.info(`ModuleInit - AppModule has been initialized.`)\n    }\n\n    onApplicationShutdown(signal?: string): void {\n        console.error(\n            // eslint-disable-next-line @typescript-eslint/restrict-template-expressions\n            `ApplicationShutdown - AppModule has been shutdown with ${signal} signal`,\n        )\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AuthController.html":{"url":"controllers/AuthController.html","title":"controller - AuthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AuthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.controller.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                login\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            login\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    login(req: Request, loginCreds: LoginCredsDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(undefined)@Post('login')\n                \n            \n\n            \n                \n                    Defined in src/auth/auth.controller.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                                Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    loginCreds\n                                    \n                                                LoginCredsDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        /* eslint-disable no-use-before-define */\nimport { Body, Controller, HttpStatus, Post, Req, UseGuards } from '@nestjs/common'\nimport { AuthGuard } from '@nestjs/passport'\nimport { ApiProperty, ApiTags } from '@nestjs/swagger'\n\nimport { IsNotEmpty } from 'class-validator'\nimport type { Request } from 'express'\n\nimport { UsersService } from '../users/users.service'\nimport { AuthService } from './auth.service'\n\nexport class LoginCredsDto {\n    @ApiProperty({ example: 'admin@demo.com' })\n    @IsNotEmpty()\n    readonly email!: string\n\n    @ApiProperty({ example: '12345678' })\n    @IsNotEmpty()\n    readonly password!: string\n}\n\n@Controller(AuthController.path)\n@ApiTags(AuthController.name)\nexport class AuthController {\n    static path = 'auth'\n\n    constructor(\n        readonly authService: AuthService,\n        readonly userService: UsersService,\n    ) {}\n\n    @UseGuards(AuthGuard('local'))\n    @Post('login')\n    async login(\n        @Req() req: Request,\n        @Body() loginCreds: LoginCredsDto,\n    ): Promise {\n        const { user } = req\n        const { email, password } = loginCreds // eslint-disable-line @typescript-eslint/no-unused-vars\n\n        const data = await this.authService.login(user)\n\n        return {\n            data,\n            statusCode: HttpStatus.OK,\n        }\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_AuthModule_imports\n\n\n\n\nUsersModule\n\nUsersModule\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nUsersModule->AuthModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\nLocalStrategy\n\nLocalStrategy\n\nAuthModule -->\n\nLocalStrategy->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/auth/auth.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthService\n                        \n                        \n                            JwtStrategy\n                        \n                        \n                            LocalStrategy\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AuthController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            UsersModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common'\nimport { ConfigModule, ConfigService } from '@nestjs/config'\nimport { JwtModule } from '@nestjs/jwt'\nimport { PassportModule } from '@nestjs/passport'\n\nimport { UsersModule } from '../users/users.module'\nimport { AuthController } from './auth.controller'\nimport { AuthService } from './auth.service'\nimport { JwtStrategy } from './jwt.strategy'\nimport { LocalStrategy } from './local.strategy'\n\n@Module({\n    imports: [\n        ConfigModule,\n        UsersModule,\n        PassportModule,\n        JwtModule.registerAsync({\n            imports: [ConfigModule],\n            inject: [ConfigService],\n            useFactory: async (\n                configService: ConfigService,\n                // eslint-disable-next-line @typescript-eslint/require-await\n            ) => ({\n                secret: configService.get('JWTKEY'),\n                signOptions: {\n                    expiresIn: configService.get('TOKEN_EXPIRATION'),\n                },\n            }),\n        }),\n    ],\n    providers: [AuthService, LocalStrategy, JwtStrategy],\n    controllers: [AuthController],\n    exports: [PassportModule, JwtModule],\n})\nexport class AuthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                comparePassword\n                            \n                            \n                                    Async\n                                generateToken\n                            \n                            \n                                    Async\n                                login\n                            \n                            \n                                    Async\n                                validateUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userService: UsersService, jwtService: JwtService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/auth.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            comparePassword\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    comparePassword(enteredPassword: string, dbPassword: string)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    enteredPassword\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    dbPassword\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            generateToken\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    generateToken(user: Record)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                Record\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            login\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    login(user: Record)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                Record\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            validateUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    validateUser(email: string, password: string)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, UnauthorizedException } from '@nestjs/common'\nimport { ConfigService } from '@nestjs/config'\nimport { JwtService } from '@nestjs/jwt'\n\nimport * as bcrypt from 'bcrypt'\n\nimport { UsersService } from '../users/users.service'\n\n@Injectable()\nexport class AuthService {\n    constructor(\n        readonly userService: UsersService,\n        readonly jwtService: JwtService,\n    ) {}\n\n    async comparePassword(enteredPassword: string, dbPassword: string) {\n        return bcrypt.compare(enteredPassword, dbPassword)\n    }\n\n    async generateToken(user: Record) {\n        return this.jwtService.signAsync(user)\n    }\n\n    async validateUser(email: string, password: string) {\n        const user = await this.userService.findOneByEmail(email)\n\n        if (!user)\n            return Promise.reject(\n                new UnauthorizedException('Unknown User Credentials'),\n            )\n\n        const match = await this.comparePassword(password, user.password)\n\n        if (!match)\n            return Promise.reject(new UnauthorizedException('Invalid Credentials'))\n\n        return user.toJSON()\n    }\n\n    async login(user: Record) {\n        return this.generateToken(user)\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BaseModel.html":{"url":"classes/BaseModel.html","title":"class - BaseModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BaseModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/database/models/base.model.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            IBaseModel\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                created_at\n                            \n                            \n                                    Optional\n                                deleted_at\n                            \n                            \n                                    Static\n                                hidden\n                            \n                            \n                                id\n                            \n                            \n                                    Static\n                                QueryBuilder\n                            \n                            \n                                updated_at\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                $beforeUpdate\n                            \n                            \n                                    Async\n                                fetchRelation\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            created_at\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/database/models/base.model.ts:39\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            deleted_at\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     any | null\n\n                        \n                    \n                        \n                            \n                                    Defined in src/database/models/base.model.ts:43\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            hidden\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n        'salt',\n        'password',\n        'created_at',\n        'updated_at',\n        // 'deleted_at'\n    ]\n                        \n                    \n                        \n                            \n                                    Defined in src/database/models/base.model.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/database/models/base.model.ts:37\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            QueryBuilder\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : CustomQueryBuilder\n                        \n                    \n                        \n                            \n                                    Defined in src/database/models/base.model.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updated_at\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/database/models/base.model.ts:41\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            $beforeUpdate\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    $beforeUpdate(opt: ModelOptions, queryContext: QueryContext)\n                \n            \n\n\n            \n                \n                    Defined in src/database/models/base.model.ts:60\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    opt\n                                    \n                                            ModelOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    queryContext\n                                    \n                                            QueryContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            fetchRelation\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    fetchRelation(expression: string | Record, options: Objection.FetchGraphOptions)\n                \n            \n\n\n            \n                \n                    Defined in src/database/models/base.model.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    expression\n                                    \n                                                string | Record\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                            Objection.FetchGraphOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import Objection, {\n    raw,\n    mixin,\n    Model,\n    ModelOptions,\n    QueryContext,\n    RelationExpression,\n} from 'objection'\nimport { DBErrors } from 'objection-db-errors'\nimport visibilityPlugin from 'objection-visibility'\n\nimport { CustomQueryBuilder } from './helpers'\n\nexport interface IBaseModel {\n    id: number\n    created_at: any\n    updated_at: any\n    deleted_at?: any\n}\n\nexport class BaseModel\n    extends mixin(Model, [visibilityPlugin, DBErrors])\n    implements IBaseModel {\n    // hidden fields to filter from query result\n    static hidden = [\n        'salt',\n        'password',\n        'created_at',\n        'updated_at',\n        // 'deleted_at'\n    ]\n\n    // QueryBuilderType!: CustomQueryBuilder // custom query builder for pagination\n\n    static QueryBuilder = CustomQueryBuilder\n\n    id!: number\n\n    created_at: any\n\n    updated_at: any\n\n    deleted_at?: any | null\n\n    // fetch data with relation mapping\n    // eslint-disable-next-line @typescript-eslint/ban-types\n    async fetchRelation(\n        expression: string | Record,\n        options: Objection.FetchGraphOptions,\n    ) {\n        if (typeof expression === 'string' && expression.toString() in this) {\n            // @ts-ignore\n            if (this[expression.toString()]) return this\n        }\n\n        await this.$fetchGraph(expression, options)\n        return this\n    }\n\n    async $beforeUpdate(opt: ModelOptions, queryContext: QueryContext) {\n        await super.$beforeUpdate(opt, queryContext)\n\n        this.updated_at = raw('CURRENT_TIMESTAMP') // new Date().toISOString() // fn.now()\n    }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/BaseRoute.html":{"url":"interfaces/BaseRoute.html","title":"interface - BaseRoute","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  BaseRoute\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/base/swagger-gen/utils/other.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        enable\n                                \n                                \n                                        method\n                                \n                                \n                                        name\n                                \n                                \n                                        override\n                                \n                                \n                                        path\n                                \n                                \n                                        withParams\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        enable\n                                    \n                                \n                                \n                                    \n                                        enable:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        method\n                                    \n                                \n                                \n                                    \n                                        method:         RequestMethod\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         RequestMethod\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         BaseRouteName\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         BaseRouteName\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        override\n                                    \n                                \n                                \n                                    \n                                        override:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        path\n                                    \n                                \n                                \n                                    \n                                        path:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        withParams\n                                    \n                                \n                                \n                                    \n                                        withParams:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { RequestMethod, ValidationPipeOptions } from '@nestjs/common'\nimport { SwaggerEnumType } from '@nestjs/swagger/dist/types/swagger-enum.type'\n\nexport declare type BaseRouteName =\n    | 'getManyBase'\n    | 'getOneBase'\n    | 'createOneBase'\n    | 'createManyBase'\n    | 'updateOneBase'\n    | 'replaceOneBase'\n    | 'deleteOneBase'\n    | 'getOne'\n\nexport interface BaseRoute {\n    name: BaseRouteName\n    path: string\n    method: RequestMethod\n    enable: boolean\n    override: boolean\n    withParams: boolean\n}\n\nexport interface GetManyDefaultResponse {\n    data: T[]\n    count: number\n    total: number\n    page: number\n    pageCount: number\n}\n\nexport interface ParamOption {\n    field?: string\n    type?: 'number' | 'string' | 'uuid'\n    enum?: SwaggerEnumType\n    primary?: boolean\n    disabled?: boolean\n}\n\nexport interface ParamsOptions {\n    [key: string]: ParamOption\n}\n\nexport interface CrudOptions {\n    model: {\n        type: { name: string }\n    }\n    dto?: {}\n    routes?: {\n        deleteOneBase?: { returnDeleted?: boolean }\n    }\n    validation?: ValidationPipeOptions | false\n    params?: ParamsOptions\n    query?: {\n        limit?: number\n        maxLimit?: number\n        cache?: number | false\n        alwaysPaginate?: boolean\n    }\n    serialize?: {\n        getMany?: false | object\n        get?: false | object\n        create?: false | object\n        createMany?: false | object\n        update?: false | object\n        replace?: false | object\n        delete?: false | object\n    }\n}\n\nexport function safeRequire(path: string): T | null {\n    try {\n        // eslint-disable-next-line global-require,@typescript-eslint/no-var-requires,import/no-dynamic-require\n        const pack = require(path)\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-return\n        return pack\n    } catch (_) {\n        return null\n    }\n}\n\nexport const swagger = safeRequire('@nestjs/swagger')\nexport const swaggerConst = safeRequire('@nestjs/swagger/dist/constants')\n\nexport function ApiProperty(options?: any): PropertyDecorator {\n    // eslint-disable-next-line @typescript-eslint/ban-types\n    return (target: object, propertyKey: string | symbol) => {\n        if (swagger) {\n            const ApiPropertyDecorator =\n                // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n                swagger.ApiProperty || swagger.ApiModelProperty\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-call\n            ApiPropertyDecorator(options)(target, propertyKey)\n        }\n    }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Comment.html":{"url":"interfaces/Comment.html","title":"interface - Comment","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Comment\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/domain.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        comment\n                                \n                                \n                                        commentedUseName\n                                \n                                \n                                        commentedUserId\n                                \n                                \n                                        commentId\n                                \n                                \n                                        timeAgo\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        comment\n                                    \n                                \n                                \n                                    \n                                        comment:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        commentedUseName\n                                    \n                                \n                                \n                                    \n                                        commentedUseName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        commentedUserId\n                                    \n                                \n                                \n                                    \n                                        commentedUserId:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        commentId\n                                    \n                                \n                                \n                                    \n                                        commentId:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        timeAgo\n                                    \n                                \n                                \n                                    \n                                        timeAgo:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { HttpStatus } from '@nestjs/common'\n\nexport type Results =\n    | GetAppLaunchData\n    | GetUserProfile\n    | GetUserPosts\n    | GetComments\n    | GetRescueList\n    | GetFollowers\n    | GetFollowing\n\nexport type APIError = Error | string | null\n\nexport interface Result {\n    data: T\n    error?: APIError\n    message?: string | string[]\n    statusCode: HttpStatus\n}\n\nexport interface APIResponse {\n    data: T\n    error?: APIError\n    message?: string | string[]\n    statusCode: HttpStatus\n\n    count?: number\n    page?: number\n    pageCount?: number\n    total?: number\n}\n\nexport interface GetAppLaunchData {\n    link: 'api:/'\n    response: APIResponse\n}\n\nexport interface GetUserProfile {\n    link: 'api:v1/user/getUserProfile?userId=25'\n    response: APIResponse\n}\n\nexport interface GetUserPosts {\n    link: 'api:v1/user/getUserPosts?pageNo=0&pageSize=25'\n    response: APIResponse\n}\n\nexport interface GetRescueList {\n    link: 'api:v1/rescue/getRescueList?pageNo=0&pageSize=10&status=pending|inProgress|completed|nearest'\n    response: APIResponse\n}\n\nexport interface GetComments {\n    link: 'api:v1/rescue/getComments?pageNo=0&pageSize=10&postId=1230'\n    response: APIResponse\n}\n\nexport interface GetFollowers {\n    link: 'api:v1/rescue/getUserFollowers?userId=1230'\n    response: APIResponse\n}\n\nexport interface GetFollowing {\n    link: 'api:v1/rescue/getUserFollowing?userId=1230'\n    response: APIResponse\n}\n\nexport interface AppLaunchAction {\n    actionId: number\n    action: string\n    isActive: boolean\n    subject?: string\n}\n\nexport interface User {\n    usesId: number\n\n    coverImage: string\n    following: boolean\n    gender: string\n    isOwnProfile: number\n    isRescuer: boolean\n    latitude: number\n    longitude: number\n    numberOfFollowers: number\n    numberOfFollowing: number\n    numberOfPosts: number\n    numberOfRescuesCompleted: number\n    numberOfRescuesCreated: number\n    numberOfRescuesInProgress: number\n    profileImage: string\n    rescuer: boolean\n    userAddress: string\n    userContacts: string\n    userEmail: string\n    userName: string\n    badge: {\n        badgeId: number\n        badgeName: string\n        badgeDescription: string\n        recuesCompletionNeeded: number\n    }\n    setting: {\n        showMyContacts: boolean\n        getNotifications: boolean\n    }\n}\n\nexport interface PostType {\n    postTypeId: number\n    postType: string\n}\n\nexport interface PostedByUser {\n    usesId: number\n    badgeName: string\n    following: boolean\n    profileImage: string\n    rescuer: boolean\n    userName: string\n}\n\nexport interface UserPost {\n    postId: number\n    commentsCount: number\n    isUserReactedToPost: boolean\n    ownPage: boolean\n    postBy: PostedByUser\n    postImage: string\n    postTime: string\n    postType: PostType\n    postVideo: string\n    reactionsCount: number\n    timeAgo: string\n\n    adCorporateLogoUrl: string | null\n    corporateDescription: string | null\n    corporateName: string | null\n}\n\nexport interface UserPosts {\n    isRecent: boolean\n    feed: UserPost[]\n}\n\nexport interface Rescues {\n    rescueId: number\n    animalImageUrl: string\n    distance: number\n    distanceAway: string\n    emergencyType: string\n    postedBy: string\n    postedMinAgo: string\n    rescueDate: Date\n    rescuedPetName: string\n    rescueLocality: string\n    rescuers: {\n        contact: number\n        name: string\n        profileId: number\n        profileImageUrl: string\n        rescues: boolean\n        showMyNumber: boolean\n    }\n    rescueStatus: string\n    viewsCont: number\n}\n\nexport interface RescueLists {\n    rescues: Rescues[]\n}\n\nexport interface Comment {\n    commentId: number\n    comment: string\n    commentedUseName: string\n    commentedUserId: number\n    timeAgo: string\n}\n\nexport interface Comments {\n    comments: Comment[]\n}\n\nexport interface Follower {\n    userId: number\n    userName: string\n    profileImage: string\n    areYouFollowing: boolean\n    showRemoveOption: boolean\n}\n\nexport interface Following extends Follower {}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Comments.html":{"url":"interfaces/Comments.html","title":"interface - Comments","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Comments\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/domain.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        comments\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        comments\n                                    \n                                \n                                \n                                    \n                                        comments:         Comment[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Comment[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { HttpStatus } from '@nestjs/common'\n\nexport type Results =\n    | GetAppLaunchData\n    | GetUserProfile\n    | GetUserPosts\n    | GetComments\n    | GetRescueList\n    | GetFollowers\n    | GetFollowing\n\nexport type APIError = Error | string | null\n\nexport interface Result {\n    data: T\n    error?: APIError\n    message?: string | string[]\n    statusCode: HttpStatus\n}\n\nexport interface APIResponse {\n    data: T\n    error?: APIError\n    message?: string | string[]\n    statusCode: HttpStatus\n\n    count?: number\n    page?: number\n    pageCount?: number\n    total?: number\n}\n\nexport interface GetAppLaunchData {\n    link: 'api:/'\n    response: APIResponse\n}\n\nexport interface GetUserProfile {\n    link: 'api:v1/user/getUserProfile?userId=25'\n    response: APIResponse\n}\n\nexport interface GetUserPosts {\n    link: 'api:v1/user/getUserPosts?pageNo=0&pageSize=25'\n    response: APIResponse\n}\n\nexport interface GetRescueList {\n    link: 'api:v1/rescue/getRescueList?pageNo=0&pageSize=10&status=pending|inProgress|completed|nearest'\n    response: APIResponse\n}\n\nexport interface GetComments {\n    link: 'api:v1/rescue/getComments?pageNo=0&pageSize=10&postId=1230'\n    response: APIResponse\n}\n\nexport interface GetFollowers {\n    link: 'api:v1/rescue/getUserFollowers?userId=1230'\n    response: APIResponse\n}\n\nexport interface GetFollowing {\n    link: 'api:v1/rescue/getUserFollowing?userId=1230'\n    response: APIResponse\n}\n\nexport interface AppLaunchAction {\n    actionId: number\n    action: string\n    isActive: boolean\n    subject?: string\n}\n\nexport interface User {\n    usesId: number\n\n    coverImage: string\n    following: boolean\n    gender: string\n    isOwnProfile: number\n    isRescuer: boolean\n    latitude: number\n    longitude: number\n    numberOfFollowers: number\n    numberOfFollowing: number\n    numberOfPosts: number\n    numberOfRescuesCompleted: number\n    numberOfRescuesCreated: number\n    numberOfRescuesInProgress: number\n    profileImage: string\n    rescuer: boolean\n    userAddress: string\n    userContacts: string\n    userEmail: string\n    userName: string\n    badge: {\n        badgeId: number\n        badgeName: string\n        badgeDescription: string\n        recuesCompletionNeeded: number\n    }\n    setting: {\n        showMyContacts: boolean\n        getNotifications: boolean\n    }\n}\n\nexport interface PostType {\n    postTypeId: number\n    postType: string\n}\n\nexport interface PostedByUser {\n    usesId: number\n    badgeName: string\n    following: boolean\n    profileImage: string\n    rescuer: boolean\n    userName: string\n}\n\nexport interface UserPost {\n    postId: number\n    commentsCount: number\n    isUserReactedToPost: boolean\n    ownPage: boolean\n    postBy: PostedByUser\n    postImage: string\n    postTime: string\n    postType: PostType\n    postVideo: string\n    reactionsCount: number\n    timeAgo: string\n\n    adCorporateLogoUrl: string | null\n    corporateDescription: string | null\n    corporateName: string | null\n}\n\nexport interface UserPosts {\n    isRecent: boolean\n    feed: UserPost[]\n}\n\nexport interface Rescues {\n    rescueId: number\n    animalImageUrl: string\n    distance: number\n    distanceAway: string\n    emergencyType: string\n    postedBy: string\n    postedMinAgo: string\n    rescueDate: Date\n    rescuedPetName: string\n    rescueLocality: string\n    rescuers: {\n        contact: number\n        name: string\n        profileId: number\n        profileImageUrl: string\n        rescues: boolean\n        showMyNumber: boolean\n    }\n    rescueStatus: string\n    viewsCont: number\n}\n\nexport interface RescueLists {\n    rescues: Rescues[]\n}\n\nexport interface Comment {\n    commentId: number\n    comment: string\n    commentedUseName: string\n    commentedUserId: number\n    timeAgo: string\n}\n\nexport interface Comments {\n    comments: Comment[]\n}\n\nexport interface Follower {\n    userId: number\n    userName: string\n    profileImage: string\n    areYouFollowing: boolean\n    showRemoveOption: boolean\n}\n\nexport interface Following extends Follower {}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateTagsDto.html":{"url":"classes/CreateTagsDto.html","title":"class - CreateTagsDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateTagsDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/tags/tag.model.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            ITag\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsString()@IsNotEmpty()@MinLength(2)@MaxLength(36)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/tags/tag.model.ts:38\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/swagger'\n\nimport { IsNotEmpty, IsString, MaxLength, MinLength } from 'class-validator'\nimport type { JSONSchema, ModelObject, PartialModelObject } from 'objection'\n\nimport { BaseModel } from '../database/models/base.model'\n\ninterface ITag {\n    name: string\n}\n\nexport class Tag extends BaseModel implements ITag {\n    static tableName = 'tags'\n\n    name!: string\n\n    // JSON schema is not the database schema! Nothing is generated based on this.\n    // This is only used for validation. Whenever a model instance is created it is checked against this schema.\n    static jsonSchema: JSONSchema = {\n        type: 'object',\n        required: ['name'],\n        properties: {\n            id: { type: 'integer' },\n            name: { type: 'string', minLength: 2, maxLength: 255 },\n        },\n    }\n}\n\n// The `ModelObject` generic gives you a clean interface that can be used on the frontend, without any of the objection Model class properties or methods.\nexport type TagShape = ModelObject\nexport type PartialTagShape = PartialModelObject\n\nexport class CreateTagsDto implements ITag {\n    @IsString()\n    @IsNotEmpty()\n    @MinLength(2)\n    @MaxLength(36)\n    name!: string\n}\n\nexport class UpdateTagsDto extends PartialType(CreateTagsDto) {}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUserDto.html":{"url":"classes/CreateUserDto.html","title":"class - CreateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/user.model.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            IUser\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                email\n                            \n                            \n                                    Optional\n                                firstName\n                            \n                            \n                                isActive\n                            \n                            \n                                    Optional\n                                lastName\n                            \n                            \n                                password\n                            \n                            \n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            email\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsEmail()@IsNotEmpty()@MinLength(2)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/user.model.ts:116\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            firstName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsString()@IsNotEmpty()@MinLength(2)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/user.model.ts:126\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isActive\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsBoolean()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/user.model.ts:134\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            lastName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsString()@IsNotEmpty()@MinLength(2)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/user.model.ts:131\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            password\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsString()@IsNotEmpty()@MinLength(8)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/user.model.ts:121\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            username\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsString()@IsNotEmpty()@MinLength(2)@MaxLength(36)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/user.model.ts:111\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/swagger'\n\nimport * as bcrypt from 'bcrypt'\nimport {\n    IsString,\n    MinLength,\n    IsNotEmpty,\n    MaxLength,\n    IsEmail,\n    IsBoolean,\n} from 'class-validator'\nimport type { JSONSchema, Modifiers, PartialModelObject } from 'objection'\nimport { ModelObject, QueryContext } from 'objection'\n\nimport { BaseModel } from '../database/models/base.model'\n\ninterface IUser {\n    username: string\n    email: string\n    firstName?: string\n    lastName?: string\n    isActive: boolean\n    password: string\n}\n\nexport class User extends BaseModel implements IUser {\n    static tableName = 'users'\n\n    username!: string\n\n    email!: string\n\n    firstName?: string\n\n    lastName?: string\n\n    isActive!: boolean\n\n    password!: string\n\n    // JSON schema is not the database schema! Nothing is generated based on this.\n    // This is only used for validation. Whenever a model instance is created it is checked against this schema.\n    static jsonSchema: JSONSchema = {\n        type: 'object',\n        required: ['username', 'email', 'password'],\n        properties: {\n            id: { type: 'integer', readOnly: true },\n            username: { type: 'string', minLength: 3, maxLength: 255 },\n            email: {\n                type: 'string',\n                minLength: 3,\n                maxLength: 255,\n                format: 'email',\n            },\n            password: { type: 'string', minLength: 8, maxLength: 255 },\n            firstName: { type: 'string', minLength: 1, maxLength: 255 },\n            lastName: { type: 'string', minLength: 1, maxLength: 255 },\n            isActive: { type: 'boolean' },\n        },\n    }\n\n    // Modifiers are reusable query snippets that can be used in various places.\n    static modifiers: Modifiers = {\n        // Our example modifier is a a semi-dumb fuzzy name match. We split the name into pieces using whitespace\n        // and then try to partially match each of those pieces to both the `firstName` and the `lastName` fields.\n\n        searchByName(query, name: string) {\n            // This `where` simply creates parentheses so that other `where` statements don't get mixed with the these.\n\n            query.where((q) => {\n                for (const namePart of name.trim().split(/\\s+/)) {\n                    for (const column of ['firstName', 'lastName']) {\n                        q.orWhereRaw('lower(??) like ?', [\n                            column,\n                            `${namePart.toLowerCase()}%`,\n                        ])\n                    }\n                }\n            })\n        },\n    }\n\n    async hashPassword(password: string) {\n        const hash = await bcrypt.hash(password, 12)\n        return hash\n    }\n\n    async $beforeInsert(queryContext: QueryContext) {\n        await super.$beforeInsert(queryContext)\n        this.password = await this.hashPassword(this.password)\n    }\n\n    /*\n    async $beforeUpdate(opt: ModelOptions, queryContext: QueryContext) {\n        await super.$beforeUpdate(opt, queryContext)\n        this.password = await this.hashPassword(this.password)\n    }\n    */\n}\n\n// The `ModelObject` generic gives you a clean interface that can be used on the frontend, without any of the objection Model class properties or methods.\nexport type UserShape = ModelObject\nexport type PartialUserShape = PartialModelObject\n\nexport class CreateUserDto implements IUser {\n    @IsString()\n    @IsNotEmpty()\n    @MinLength(2)\n    @MaxLength(36)\n    username!: string\n\n    @IsEmail()\n    @IsNotEmpty()\n    @MinLength(2)\n    email!: string\n\n    @IsString()\n    @IsNotEmpty()\n    @MinLength(8)\n    password!: string\n\n    @IsString()\n    @IsNotEmpty()\n    @MinLength(2)\n    firstName?: string\n\n    @IsString()\n    @IsNotEmpty()\n    @MinLength(2)\n    lastName?: string\n\n    @IsBoolean()\n    isActive!: boolean\n}\n\nexport class UpdateUserDto extends PartialType(CreateUserDto) {}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CronModule.html":{"url":"modules/CronModule.html","title":"module - CronModule","body":"\n                   \n\n\n\n\n    Modules\n    CronModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_CronModule\n\n\n\ncluster_CronModule_providers\n\n\n\n\nCronService\n\nCronService\n\n\n\nCronModule\n\nCronModule\n\nCronModule -->\n\nCronService->CronModule\n\n\n\n\n\nPersistedCronService\n\nPersistedCronService\n\nCronModule -->\n\nPersistedCronService->CronModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/cron/cron.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            CronService\n                        \n                        \n                            PersistedCronService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common'\n\nimport { CronService } from './cron.service'\nimport { PersistedCronService } from './persisted-cron.service'\n\n@Module({\n    providers: [CronService, PersistedCronService],\n})\nexport class CronModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CronService.html":{"url":"injectables/CronService.html","title":"injectable - CronService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  CronService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/cron/cron.service.ts\n        \n\n            \n                Description\n            \n            \n                @Cron are regular cron jobs\n@Interval To declare that a method should run at a (recurring) specified interval\n@Timeout To declare that a method should run (once) at a specified timeout\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                count\n                            \n                            \n                                fact16\n                            \n                            \n                                logger\n                            \n                            \n                                times\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addCronJob\n                            \n                            \n                                addInterval\n                            \n                            \n                                addTimeout\n                            \n                            \n                                deleteCron\n                            \n                            \n                                deleteInterval\n                            \n                            \n                                deleteTimeout\n                            \n                            \n                                factorial\n                            \n                            \n                                handleCron\n                            \n                            \n                                handleInterval\n                            \n                            \n                                handleTimeout\n                            \n                            \n                                logAllCrons\n                            \n                            \n                                logIntervals\n                            \n                            \n                                logTimeouts\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(scheduler: SchedulerRegistry)\n                    \n                \n                        \n                            \n                                Defined in src/cron/cron.service.ts:27\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        scheduler\n                                                  \n                                                        \n                                                                        SchedulerRegistry\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            addCronJob\n                        \n                        \n                    \n                \n            \n            \n                \naddCronJob(name: string, seconds: string)\n                \n            \n\n\n            \n                \n                    Defined in src/cron/cron.service.ts:97\n                \n            \n\n\n            \n                \n                    Dynamically schedule a name CRON job\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Job Name\n\n                                    \n                                \n                                \n                                    seconds\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Seconds\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            addInterval\n                        \n                        \n                    \n                \n            \n            \n                \naddInterval(name: string, milliseconds: number)\n                \n            \n\n\n            \n                \n                    Defined in src/cron/cron.service.ts:136\n                \n            \n\n\n            \n                \n                    Dynamically schedule a named Interval\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Interval Name\n\n                                    \n                                \n                                \n                                    milliseconds\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Milliseconds\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            addTimeout\n                        \n                        \n                    \n                \n            \n            \n                \naddTimeout(name: string, milliseconds: number)\n                \n            \n\n\n            \n                \n                    Defined in src/cron/cron.service.ts:174\n                \n            \n\n\n            \n                \n                    Dynamically schedule a named Timeout\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Timeout Name\n\n                                    \n                                \n                                \n                                    milliseconds\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Milliseconds\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deleteCron\n                        \n                        \n                    \n                \n            \n            \n                \ndeleteCron(name: string)\n                \n            \n\n\n            \n                \n                    Defined in src/cron/cron.service.ts:112\n                \n            \n\n\n            \n                \n                    Dynamically delete a named scheduled CRON job\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Job Name\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deleteInterval\n                        \n                        \n                    \n                \n            \n            \n                \ndeleteInterval(name: string)\n                \n            \n\n\n            \n                \n                    Defined in src/cron/cron.service.ts:151\n                \n            \n\n\n            \n                \n                    Dynamically delete a named Interval\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Interval Name\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deleteTimeout\n                        \n                        \n                    \n                \n            \n            \n                \ndeleteTimeout(name: string)\n                \n            \n\n\n            \n                \n                    Defined in src/cron/cron.service.ts:187\n                \n            \n\n\n            \n                \n                    Dynamically delete a named Timeout\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Timeout Name\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            factorial\n                        \n                        \n                    \n                \n            \n            \n                \nfactorial(n: number)\n                \n            \n\n\n            \n                \n                    Defined in src/cron/cron.service.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    n\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            handleCron\n                        \n                        \n                    \n                \n            \n            \n                \nhandleCron()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Cron(CronExpression.EVERY_MINUTE, {name: 'handleCronFn'})\n                \n            \n\n            \n                \n                    Defined in src/cron/cron.service.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            handleInterval\n                        \n                        \n                    \n                \n            \n            \n                \nhandleInterval()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Interval('handleIntervalFn', 100000)\n                \n            \n\n            \n                \n                    Defined in src/cron/cron.service.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            handleTimeout\n                        \n                        \n                    \n                \n            \n            \n                \nhandleTimeout()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Timeout('handleTimeoutFn', 50000)\n                \n            \n\n            \n                \n                    Defined in src/cron/cron.service.ts:62\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            logAllCrons\n                        \n                        \n                    \n                \n            \n            \n                \nlogAllCrons()\n                \n            \n\n\n            \n                \n                    Defined in src/cron/cron.service.ts:75\n                \n            \n\n\n            \n                \n                    Get all of the CRON jobs\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            logIntervals\n                        \n                        \n                    \n                \n            \n            \n                \nlogIntervals()\n                \n            \n\n\n            \n                \n                    Defined in src/cron/cron.service.ts:126\n                \n            \n\n\n            \n                \n                    Get all of the Intervals\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            logTimeouts\n                        \n                        \n                    \n                \n            \n            \n                \nlogTimeouts()\n                \n            \n\n\n            \n                \n                    Defined in src/cron/cron.service.ts:164\n                \n            \n\n\n            \n                \n                    Get all of the Timeouts\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            count\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in src/cron/cron.service.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            fact16\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 20922789888000\n                        \n                    \n                        \n                            \n                                    Defined in src/cron/cron.service.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            logger\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Logger(CronService.name)\n                        \n                    \n                        \n                            \n                                    Defined in src/cron/cron.service.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            times\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 50000000\n                        \n                    \n                        \n                            \n                                    Defined in src/cron/cron.service.ts:25\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable, Logger } from '@nestjs/common'\nimport {\n    Cron,\n    CronExpression,\n    Interval,\n    SchedulerRegistry,\n    Timeout,\n} from '@nestjs/schedule'\n\nimport { CronJob } from 'cron'\n\n/**\n * `@Cron` are regular cron jobs\n *\n * `@Interval` To declare that a method should run at a (recurring) specified interval\n *\n * `@Timeout` To declare that a method should run (once) at a specified timeout\n */\n@Injectable()\nexport class CronService {\n    static count = 0\n\n    logger = new Logger(CronService.name)\n\n    times = 50000000\n\n    fact16 = 20922789888000\n\n    constructor(readonly scheduler: SchedulerRegistry) {}\n\n    factorial(n: number): number {\n        if (n === 1) return 1\n        return n * this.factorial(n - 1)\n    }\n\n    @Cron(CronExpression.EVERY_MINUTE, { name: 'handleCronFn' })\n    handleCron() {\n        CronService.count += 1\n        this.logger.debug(\n            `Called when the second is 60, current count is ${CronService.count}`,\n        )\n\n        const ok = true\n        for (let i = 0; i  {\n            let next\n\n            try {\n                // eslint-disable-next-line @typescript-eslint/no-unsafe-call,@typescript-eslint/no-unsafe-member-access\n                next = value.nextDates().toDate()\n            } catch (e) {\n                next = 'error: next fire date is in the past!'\n            }\n            // eslint-disable-next-line @typescript-eslint/restrict-template-expressions\n            this.logger.log(`job: ${key} -> next: ${next}`)\n        })\n    }\n\n    /**\n     * Dynamically schedule a name CRON job\n     * @param {string} name Job Name\n     * @param {Number} seconds Seconds\n     */\n    addCronJob(name: string, seconds: string) {\n        const job = new CronJob(`${seconds} * * * * *`, () => {\n            this.logger.warn(`time (${seconds}) for job ${name} to run!`)\n        })\n\n        this.scheduler.addCronJob(name, job)\n        job.start()\n\n        this.logger.warn(`job ${name} added for each minute at ${seconds} seconds!`)\n    }\n\n    /**\n     * Dynamically delete a named scheduled CRON job\n     * @param {string} name Job Name\n     */\n    deleteCron(name: string) {\n        const job = this.scheduler.getCronJob(name)\n\n        if (job) {\n            this.scheduler.deleteCronJob(name)\n            this.logger.warn(`job ${name} deleted!`)\n        } else {\n            this.logger.warn(`job ${name} not found!`)\n        }\n    }\n\n    /**\n     * Get all of the Intervals\n     */\n    logIntervals() {\n        const intervals = this.scheduler.getIntervals()\n        intervals.forEach((key) => this.logger.log(`Interval: ${key}`))\n    }\n\n    /**\n     * Dynamically schedule a named Interval\n     * @param {string} name Interval Name\n     * @param {Number} milliseconds Milliseconds\n     */\n    addInterval(name: string, milliseconds: number) {\n        const callback = () => {\n            this.logger.warn(\n                `Interval ${name} executing at time (${milliseconds})!`,\n            )\n        }\n\n        const interval = setInterval(callback, milliseconds)\n        this.scheduler.addInterval(name, interval)\n    }\n\n    /**\n     * Dynamically delete a named Interval\n     * @param {string} name Interval Name\n     */\n    deleteInterval(name: string) {\n        const interval = this.scheduler.getInterval(name)\n        if (interval) {\n            this.scheduler.deleteInterval(name)\n            this.logger.warn(`Interval ${name} deleted!`)\n        } else {\n            this.logger.warn(`Interval ${name} not found!`)\n        }\n    }\n\n    /**\n     * Get all of the Timeouts\n     */\n    logTimeouts() {\n        const timeouts = this.scheduler.getTimeouts()\n        timeouts.forEach((key) => this.logger.log(`Timeout: ${key}`))\n    }\n\n    /**\n     * Dynamically schedule a named Timeout\n     * @param {string} name Timeout Name\n     * @param {Number} milliseconds Milliseconds\n     */\n    addTimeout(name: string, milliseconds: number) {\n        const callback = () => {\n            this.logger.warn(`Timeout ${name} executing after (${milliseconds})!`)\n        }\n\n        const timeout = setTimeout(callback, milliseconds)\n        this.scheduler.addTimeout(name, timeout)\n    }\n\n    /**\n     * Dynamically delete a named Timeout\n     * @param {string} name Timeout Name\n     */\n    deleteTimeout(name: string) {\n        const timeout = this.scheduler.getTimeout(name)\n\n        if (timeout) {\n            this.scheduler.deleteTimeout(name)\n            this.logger.warn(`Timeout ${name} deleted!`)\n        } else {\n            this.logger.warn(`Timeout ${name} not found!`)\n        }\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CrudConfigService.html":{"url":"classes/CrudConfigService.html","title":"class - CrudConfigService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CrudConfigService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/base/swagger-gen/crud-routes.factory.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                config\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                load\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            config\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Partial\n\n                        \n                    \n                    \n                        \n                            Default value : {\n        query: {\n            alwaysPaginate: false,\n        },\n    }\n                        \n                    \n                        \n                            \n                                    Defined in src/base/swagger-gen/crud-routes.factory.ts:201\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            load\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    load(config: Record)\n                \n            \n\n\n            \n                \n                    Defined in src/base/swagger-gen/crud-routes.factory.ts:207\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    config\n                                    \n                                                Record\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { HttpStatus, RequestMethod } from '@nestjs/common'\n\nimport { Type } from 'class-transformer'\nimport * as deepmerge from 'deepmerge'\n\nimport {\n    ApiProperty,\n    BaseRoute,\n    isFalse,\n    isFunction,\n    isObjectFull,\n    objKeys,\n    swagger,\n    swaggerConst,\n} from './utils'\nimport type { CrudOptions, GetManyDefaultResponse, BaseRouteName } from './utils'\n\nexport class R {\n    static set(\n        metadataKey: string,\n        metadataValue: any,\n        target: Object,\n        propertyKey?: string | symbol,\n    ) {\n        if (!propertyKey) {\n            Reflect.defineMetadata(metadataKey, metadataValue, target)\n        } else {\n            Reflect.defineMetadata(metadataKey, metadataValue, target, propertyKey)\n        }\n    }\n\n    static get(\n        metadataKey: any,\n        target: Object,\n        propertyKey?: string | symbol,\n    ): T {\n        if (!propertyKey) return Reflect.getMetadata(metadataKey, target)\n\n        return Reflect.getMetadata(metadataKey, target, propertyKey)\n    }\n\n    static setRoute(route: BaseRoute, func: Function) {\n        R.set('path', route.path, func)\n        R.set('method', route.method, func)\n    }\n}\n\nexport class Swagger {\n    /**\n     * Sets extra swagger metadata for GET Calls\n     */\n    static setExtraModels(swaggerModels: {\n        [x: string]: any\n        get: Record\n    }) {\n        if (swaggerConst) {\n            const meta = Swagger.getExtraModels(swaggerModels.get)\n            const models = [\n                ...meta,\n                ...objKeys(swaggerModels)\n                    .map((name) => swaggerModels[name])\n                    .filter((one) => one && one.name !== swaggerModels.get.name),\n            ]\n\n            R.set(\n                swaggerConst.DECORATORS.API_EXTRA_MODELS,\n                models,\n                swaggerModels.get,\n            )\n        }\n    }\n\n    /**\n     * Sets swagger metadata for response of GET Calls\n     */\n    static setResponseOk(metadata: any[], func: Function) {\n        if (swaggerConst) {\n            R.set(swaggerConst.DECORATORS.API_RESPONSE, metadata, func)\n        }\n    }\n\n    static getExtraModels(target: Record): any[] {\n        return swaggerConst\n            ? R.get(swaggerConst.API_EXTRA_MODELS, target) || []\n            : []\n    }\n\n    static getResponseOk(func: Function) {\n        return swaggerConst\n            ? R.get(swaggerConst.DECORATORS.API_RESPONSE, func) || {}\n            : {}\n    }\n\n    static createResponseMeta(\n        name: BaseRouteName,\n        options: CrudOptions,\n        swaggerModels: {\n            [x: string]: any\n            get: { name: any }\n            getMany: { name: any }\n        },\n    ) {\n        if (swagger) {\n            const { query } = options\n\n            switch (name) {\n                case 'getOneBase':\n                    return {\n                        [HttpStatus.OK]: {\n                            description: 'Get one base response',\n                            type: swaggerModels.get,\n                        },\n                    }\n                case 'getOne':\n                    return {\n                        [HttpStatus.OK]: query?.alwaysPaginate\n                            ? {\n                                  description: 'Get paginated response',\n                                  type: swaggerModels.getMany,\n                              }\n                            : {\n                                  description: 'Get many base response',\n                                  schema: {\n                                      oneOf: [\n                                          {\n                                              $ref: swagger.getSchemaPath(\n                                                  swaggerModels.getMany.name,\n                                              ),\n                                          },\n                                          {\n                                              type: 'array',\n                                              items: {\n                                                  $ref: swagger.getSchemaPath(\n                                                      swaggerModels.get.name,\n                                                  ),\n                                              },\n                                          },\n                                      ],\n                                  },\n                              },\n                    }\n                default:\n                    // eslint-disable-next-line no-case-declarations\n                    const dto = swaggerModels[name.split('OneBase')[0]]\n\n                    return {\n                        [HttpStatus.OK]: {\n                            description: 'Response',\n                            schema: { $ref: swagger.getSchemaPath(dto.name) },\n                        },\n                    }\n            }\n        } else {\n            return {}\n        }\n    }\n}\n\nexport class SerializeHelper {\n    static createGetManyDto(dto: any, resourceName: string): any {\n        class GetManyResponseDto implements GetManyDefaultResponse {\n            @ApiProperty({ type: dto, isArray: true })\n            @Type(() => dto)\n            data!: any[]\n\n            @ApiProperty({ type: 'number' })\n            count!: number\n\n            @ApiProperty({ type: 'number' })\n            total!: number\n\n            @ApiProperty({ type: 'number' })\n            page!: number\n\n            @ApiProperty({ type: 'number' })\n            pageCount!: number\n        }\n\n        Object.defineProperty(GetManyResponseDto, 'name', {\n            writable: false,\n            value: `GetMany${resourceName}ResponseDto`,\n        })\n\n        return GetManyResponseDto\n    }\n\n    static createGetOneResponseDto(resourceName: string): any {\n        class GetOneResponseDto {}\n\n        Object.defineProperty(GetOneResponseDto, 'name', {\n            writable: false,\n            value: `${resourceName}ResponseDto`,\n        })\n\n        return GetOneResponseDto\n    }\n}\n\nexport class CrudConfigService {\n    static config: Partial = {\n        query: {\n            alwaysPaginate: false,\n        },\n    }\n\n    static load(config: Record) {\n        const query = isObjectFull(config.query) ? config.query : {}\n        const params = isObjectFull(config.params) ? config.params : {}\n        const serialize = isObjectFull(config.serialize) ? config.serialize : {}\n\n        CrudConfigService.config = deepmerge(\n            CrudConfigService.config,\n            { query, params, serialize },\n            { arrayMerge: (a, b, c) => b },\n        )\n    }\n}\n\nexport class CrudRoutesFactory {\n    protected options\n\n    protected swaggerModels: any = {}\n\n    constructor(private target: Object, options: CrudOptions) {\n        this.options = options\n        this.create()\n\n        console.log(\n            'CrudRoutesFactory::constructor',\n            // { ...options },\n            // this.targetProto,\n            // this.modelType,\n            // this.modelName,\n            // this.swaggerModels,\n        )\n    }\n\n    static create(target: Object, options: CrudOptions): CrudRoutesFactory {\n        return new CrudRoutesFactory(target, options)\n    }\n\n    get targetProto() {\n        // @ts-ignore\n        return this.target.prototype\n    }\n\n    get modelName() {\n        return this.options.model.type?.name\n    }\n\n    get modelType() {\n        return this.options.model.type\n    }\n\n    private create() {\n        const routesSchema = CrudRoutesFactory.getRoutesSchema()\n        this.mergeOptions()\n        this.setResponseModels()\n        this.createRoutes(routesSchema)\n        this.enableRoutes(routesSchema)\n    }\n\n    getOne(name: BaseRouteName) {\n        this.targetProto[name] = function getOne(req: any) {\n            return this.service.getOne(req)\n        }\n    }\n\n    getOneBase(name: BaseRouteName) {\n        this.targetProto[name] = function getOneBase(req: any) {\n            return this.service.getOneBase(req)\n        }\n    }\n\n    static getRoutesSchema(): BaseRoute[] {\n        return [\n            {\n                name: 'getOneBase',\n                path: '/',\n                method: RequestMethod.GET,\n                enable: false,\n                override: false,\n                withParams: true,\n            },\n            {\n                name: 'getOne',\n                path: '/',\n                method: RequestMethod.GET,\n                enable: false,\n                override: false,\n                withParams: false,\n            },\n        ]\n    }\n\n    mergeOptions() {\n        // merge query config\n        const query = isObjectFull(this.options.query) ? this.options.query : {}\n        this.options.query = { ...CrudConfigService.config.query, ...query }\n\n        // set dto\n        if (!isObjectFull(this.options.dto)) {\n            this.options.dto = {}\n        }\n\n        // set serialize\n        this.options.serialize = {\n            ...CrudConfigService.config.serialize,\n            ...this.options.serialize,\n        }\n\n        this.options.serialize.get = isFalse(this.options.serialize?.get)\n            ? false\n            : this.options.serialize?.get || this.modelType\n\n        this.options.serialize.getMany = isFalse(this.options.serialize?.getMany)\n            ? false\n            : this.options.serialize?.getMany\n            ? this.options.serialize?.getMany\n            : isFalse(this.options.serialize?.get)\n            ? false\n            : SerializeHelper.createGetManyDto(\n                  this.options.serialize?.get,\n                  this.modelName,\n              )\n\n        this.options.serialize.create = isFalse(this.options.serialize?.create)\n            ? false\n            : this.options.serialize?.create || this.modelType\n\n        this.options.serialize.update = isFalse(this.options.serialize?.update)\n            ? false\n            : this.options.serialize?.update || this.modelType\n\n        this.options.serialize.replace = isFalse(this.options.serialize?.replace)\n            ? false\n            : this.options.serialize?.replace || this.modelType\n\n        this.options.serialize.delete =\n            isFalse(this.options.serialize?.delete) ||\n            !this.options.routes?.deleteOneBase?.returnDeleted\n                ? false\n                : this.options.serialize?.delete || this.modelType\n\n        R.set('CRUD_OPTIONS_METADATA', this.options, this.target)\n    }\n\n    setResponseModels() {\n        const modelType = isFunction(this.modelType)\n            ? this.modelType\n            : SerializeHelper.createGetOneResponseDto(this.modelName)\n\n        this.swaggerModels.get = isFunction(this.options.serialize?.get)\n            ? this.options.serialize?.get\n            : modelType\n\n        this.swaggerModels.getMany =\n            this.options.serialize?.getMany ||\n            SerializeHelper.createGetManyDto(this.swaggerModels.get, this.modelName)\n\n        this.swaggerModels.create = isFunction(this.options.serialize?.create)\n            ? this.options.serialize?.create\n            : modelType\n\n        this.swaggerModels.update = isFunction(this.options.serialize?.update)\n            ? this.options.serialize?.update\n            : modelType\n\n        this.swaggerModels.replace = isFunction(this.options.serialize?.replace)\n            ? this.options.serialize?.replace\n            : modelType\n\n        this.swaggerModels.delete = isFunction(this.options.serialize?.delete)\n            ? this.options.serialize?.delete\n            : modelType\n\n        Swagger.setExtraModels(this.swaggerModels)\n    }\n\n    enableRoutes(routesSchema: BaseRoute[]) {\n        routesSchema.forEach((route) => {\n            if (!route.override && route.enable) {\n                R.setRoute(route, this.targetProto[route.name])\n            }\n        })\n    }\n\n    createRoutes(routesSchema: BaseRoute[]) {\n        routesSchema.forEach((route) => {\n            // create base method\n            /* this[route.name](route.name) */\n            route.enable = true\n\n            // set metadata\n            this.setSwaggerResponseOk(route.name)\n        })\n    }\n\n    setSwaggerResponseOk(name: BaseRouteName) {\n        const metadata = Swagger.getResponseOk(this.targetProto[name]) || {}\n        const metadataToAdd =\n            Swagger.createResponseMeta(name, this.options, this.swaggerModels) || {}\n\n        Swagger.setResponseOk(\n            // @ts-ignore\n            { ...metadata, ...metadataToAdd },\n            this.targetProto[name],\n        )\n    }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CrudController.html":{"url":"classes/CrudController.html","title":"class - CrudController","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CrudController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/base/crud/crud.controller.ts\n        \n\n            \n                Description\n            \n            \n                Abstract base controller of BaseModel that other controller can extend to\nprovide base CRUD functionality such as to create, find, update and delete data.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findOneById\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Protected\n                        constructor(service: ICrudService)\n                    \n                \n                        \n                            \n                                Defined in src/base/crud/crud.controller.ts:28\n                            \n                        \n\n                \n                    \n                            The constructor must receive the injected service from the child controller\nin order to provide all the proper base functionality.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        service\n                                                  \n                                                        \n                                                                        ICrudService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nThe injected service.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            create\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    create(input: T)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'Create one record', description: 'Creates one record'})@ApiResponse({status: undefined, description: 'Created one record', type: BaseModel})@Post(':id')\n                \n            \n\n            \n                \n                    Defined in src/base/crud/crud.controller.ts:126\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    input\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findAll\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll(paginationParams: PaginationParams)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'find all', description: 'Get all of the records'})@ApiResponse({status: undefined, description: 'Found all records'})@Get()\n                \n            \n\n            \n                \n                    Defined in src/base/crud/crud.controller.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    paginationParams\n                                    \n                                                PaginationParams\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findOneById\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findOneById(id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'Get one record by id', description: 'Get one record from database with provided by id'})@ApiResponse({status: undefined, description: 'Found one record', type: BaseModel})@Get(':id')\n                \n            \n\n            \n                \n                    Defined in src/base/crud/crud.controller.ts:74\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            remove\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    remove(id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'Soft-delete one record by id', description: 'Soft-delete one record from database with provided by id'})@ApiResponse({status: undefined, description: 'Deleted one record', type: BaseModel})@ApiResponse({status: undefined, description: 'Deleted one record'})@Delete(':id')\n                \n            \n\n            \n                \n                    Defined in src/base/crud/crud.controller.ts:104\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            update\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: number, input: Partial)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'Update one record', description: 'Updates one record'})@ApiResponse({status: undefined, description: 'Updated one record', type: BaseModel})@Put(':id')\n                \n            \n\n            \n                \n                    Defined in src/base/crud/crud.controller.ts:148\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    input\n                                    \n                                            Partial\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n    Get,\n    Delete,\n    Param,\n    ParseIntPipe,\n    HttpStatus,\n    Query,\n    Body,\n    Put,\n    Post,\n    NotFoundException,\n} from '@nestjs/common'\nimport { ApiOperation, ApiResponse } from '@nestjs/swagger'\n\nimport { BaseModel } from '../../database/models/base.model'\nimport { APIResponse, Result } from '../../domain'\nimport { CreateTagsDto, UpdateTagsDto } from '../../tags/tag.model'\nimport { CreateUserDto, UpdateUserDto } from '../../users/user.model'\nimport { ApiErrors } from '../swagger-gen/api-errors.decorator'\nimport { IPaginationResult, PaginationParams } from './pagination'\nimport { ICrudService } from './crud.service.interface'\n\n/**\n * Abstract base controller of BaseModel that other controller can extend to\n * provide base CRUD functionality such as to create, find, update and delete data.\n */\n@ApiErrors()\nexport abstract class CrudController {\n    /**\n     * The constructor must receive the injected service from the child controller\n     * in order to provide all the proper base functionality.\n     *\n     * @param {ICrudService} service - The injected service.\n     */\n    protected constructor(protected readonly service: ICrudService) {}\n\n    @ApiOperation({ summary: 'find all', description: 'Get all of the records' })\n    @ApiResponse({\n        status: HttpStatus.OK,\n        description: 'Found all records',\n        // type: IPagination | BaseModel[]\n    })\n    @Get()\n    /**\n     * findAll\n     */\n    async findAll(\n        @Query() paginationParams: PaginationParams,\n    ): Promise> {\n        const { data, paging } = await this.service.paginatedFindAll(\n            paginationParams,\n        )\n\n        return ({\n            data,\n            paging,\n            statusCode: HttpStatus.OK,\n        } as unknown) as IPaginationResult\n    }\n\n    @ApiOperation({\n        summary: 'Get one record by id',\n        description: 'Get one record from database with provided by id',\n    })\n    @ApiResponse({\n        status: HttpStatus.OK,\n        description: 'Found one record',\n        type: BaseModel, // type: T,\n    })\n    @Get(':id')\n    /**\n     * findOneById\n     */\n    async findOneById(@Param('id', ParseIntPipe) id: number): Promise> {\n        const data = await this.service.findOneById(id)\n\n        if (!data) {\n            throw new NotFoundException()\n        }\n\n        return {\n            data,\n            statusCode: HttpStatus.OK,\n        }\n    }\n\n    @ApiOperation({\n        summary: 'Soft-delete one record by id',\n        description: 'Soft-delete one record from database with provided by id',\n    })\n    @ApiResponse({\n        status: HttpStatus.OK,\n        description: 'Deleted one record',\n        type: BaseModel, // type: T,\n    })\n    @ApiResponse({\n        status: HttpStatus.NO_CONTENT,\n        description: 'Deleted one record',\n    })\n    @Delete(':id')\n    /**\n     * remove\n     */\n    async remove(@Param('id', ParseIntPipe) id: number) {\n        const data = await this.service.remove(id)\n\n        return {\n            data,\n            statusCode: !data ? HttpStatus.NO_CONTENT : HttpStatus.OK,\n        }\n    }\n\n    @ApiOperation({\n        summary: 'Create one record',\n        description: 'Creates one record',\n    })\n    @ApiResponse({\n        status: HttpStatus.OK,\n        description: 'Created one record',\n        type: BaseModel, // type: T,\n    })\n    @Post(':id')\n    /**\n     * create\n     */\n    async create(@Body() input: T) {\n        const data = await this.service.create(input)\n\n        return {\n            data,\n            statusCode: HttpStatus.CREATED,\n        }\n    }\n\n    @ApiOperation({\n        summary: 'Update one record',\n        description: 'Updates one record',\n    })\n    @ApiResponse({\n        status: HttpStatus.OK,\n        description: 'Updated one record',\n        type: BaseModel, // type: T,\n    })\n    @Put(':id')\n    /**\n     *\n     */\n    async update(@Param('id', ParseIntPipe) id: number, @Body() input: Partial) {\n        const data = await this.service.update(id, input)\n\n        return {\n            data,\n            statusCode: !data ? HttpStatus.NO_CONTENT : HttpStatus.OK,\n        }\n    }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CrudOptions.html":{"url":"interfaces/CrudOptions.html","title":"interface - CrudOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  CrudOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/base/swagger-gen/utils/other.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        dto\n                                \n                                \n                                        model\n                                \n                                \n                                            Optional\n                                        params\n                                \n                                \n                                            Optional\n                                        query\n                                \n                                \n                                            Optional\n                                        routes\n                                \n                                \n                                            Optional\n                                        serialize\n                                \n                                \n                                            Optional\n                                        validation\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        dto\n                                    \n                                \n                                \n                                    \n                                        dto:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        model\n                                    \n                                \n                                \n                                    \n                                        model:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        params\n                                    \n                                \n                                \n                                    \n                                        params:         ParamsOptions\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ParamsOptions\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        query\n                                    \n                                \n                                \n                                    \n                                        query:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        routes\n                                    \n                                \n                                \n                                    \n                                        routes:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        serialize\n                                    \n                                \n                                \n                                    \n                                        serialize:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        validation\n                                    \n                                \n                                \n                                    \n                                        validation:     ValidationPipeOptions | \"undefined\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     ValidationPipeOptions | \"undefined\"\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { RequestMethod, ValidationPipeOptions } from '@nestjs/common'\nimport { SwaggerEnumType } from '@nestjs/swagger/dist/types/swagger-enum.type'\n\nexport declare type BaseRouteName =\n    | 'getManyBase'\n    | 'getOneBase'\n    | 'createOneBase'\n    | 'createManyBase'\n    | 'updateOneBase'\n    | 'replaceOneBase'\n    | 'deleteOneBase'\n    | 'getOne'\n\nexport interface BaseRoute {\n    name: BaseRouteName\n    path: string\n    method: RequestMethod\n    enable: boolean\n    override: boolean\n    withParams: boolean\n}\n\nexport interface GetManyDefaultResponse {\n    data: T[]\n    count: number\n    total: number\n    page: number\n    pageCount: number\n}\n\nexport interface ParamOption {\n    field?: string\n    type?: 'number' | 'string' | 'uuid'\n    enum?: SwaggerEnumType\n    primary?: boolean\n    disabled?: boolean\n}\n\nexport interface ParamsOptions {\n    [key: string]: ParamOption\n}\n\nexport interface CrudOptions {\n    model: {\n        type: { name: string }\n    }\n    dto?: {}\n    routes?: {\n        deleteOneBase?: { returnDeleted?: boolean }\n    }\n    validation?: ValidationPipeOptions | false\n    params?: ParamsOptions\n    query?: {\n        limit?: number\n        maxLimit?: number\n        cache?: number | false\n        alwaysPaginate?: boolean\n    }\n    serialize?: {\n        getMany?: false | object\n        get?: false | object\n        create?: false | object\n        createMany?: false | object\n        update?: false | object\n        replace?: false | object\n        delete?: false | object\n    }\n}\n\nexport function safeRequire(path: string): T | null {\n    try {\n        // eslint-disable-next-line global-require,@typescript-eslint/no-var-requires,import/no-dynamic-require\n        const pack = require(path)\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-return\n        return pack\n    } catch (_) {\n        return null\n    }\n}\n\nexport const swagger = safeRequire('@nestjs/swagger')\nexport const swaggerConst = safeRequire('@nestjs/swagger/dist/constants')\n\nexport function ApiProperty(options?: any): PropertyDecorator {\n    // eslint-disable-next-line @typescript-eslint/ban-types\n    return (target: object, propertyKey: string | symbol) => {\n        if (swagger) {\n            const ApiPropertyDecorator =\n                // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n                swagger.ApiProperty || swagger.ApiModelProperty\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-call\n            ApiPropertyDecorator(options)(target, propertyKey)\n        }\n    }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CrudRoutesFactory.html":{"url":"classes/CrudRoutesFactory.html","title":"class - CrudRoutesFactory","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CrudRoutesFactory\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/base/swagger-gen/crud-routes.factory.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                options\n                            \n                            \n                                    Protected\n                                swaggerModels\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                create\n                            \n                            \n                                    Private\n                                create\n                            \n                            \n                                createRoutes\n                            \n                            \n                                enableRoutes\n                            \n                            \n                                getOne\n                            \n                            \n                                getOneBase\n                            \n                            \n                                    Static\n                                getRoutesSchema\n                            \n                            \n                                mergeOptions\n                            \n                            \n                                setResponseModels\n                            \n                            \n                                setSwaggerResponseOk\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    targetProto\n                                \n                                \n                                    modelName\n                                \n                                \n                                    modelType\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(target: Object, options: CrudOptions)\n                    \n                \n                        \n                            \n                                Defined in src/base/swagger-gen/crud-routes.factory.ts:223\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        target\n                                                  \n                                                        \n                                                                        Object\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        options\n                                                  \n                                                        \n                                                                        CrudOptions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            options\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/base/swagger-gen/crud-routes.factory.ts:221\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            swaggerModels\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                        \n                            \n                                    Defined in src/base/swagger-gen/crud-routes.factory.ts:223\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            create\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    create(target: Object, options: CrudOptions)\n                \n            \n\n\n            \n                \n                    Defined in src/base/swagger-gen/crud-routes.factory.ts:239\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    target\n                                    \n                                                Object\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                                CrudOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         CrudRoutesFactory\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            create\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    create()\n                \n            \n\n\n            \n                \n                    Defined in src/base/swagger-gen/crud-routes.factory.ts:256\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createRoutes\n                        \n                        \n                    \n                \n            \n            \n                \ncreateRoutes(routesSchema: BaseRoute[])\n                \n            \n\n\n            \n                \n                    Defined in src/base/swagger-gen/crud-routes.factory.ts:389\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    routesSchema\n                                    \n                                                BaseRoute[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            enableRoutes\n                        \n                        \n                    \n                \n            \n            \n                \nenableRoutes(routesSchema: BaseRoute[])\n                \n            \n\n\n            \n                \n                    Defined in src/base/swagger-gen/crud-routes.factory.ts:381\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    routesSchema\n                                    \n                                                BaseRoute[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getOne\n                        \n                        \n                    \n                \n            \n            \n                \ngetOne(name: BaseRouteName)\n                \n            \n\n\n            \n                \n                    Defined in src/base/swagger-gen/crud-routes.factory.ts:264\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                BaseRouteName\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getOneBase\n                        \n                        \n                    \n                \n            \n            \n                \ngetOneBase(name: BaseRouteName)\n                \n            \n\n\n            \n                \n                    Defined in src/base/swagger-gen/crud-routes.factory.ts:270\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                BaseRouteName\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            getRoutesSchema\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getRoutesSchema()\n                \n            \n\n\n            \n                \n                    Defined in src/base/swagger-gen/crud-routes.factory.ts:276\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         BaseRoute[]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            mergeOptions\n                        \n                        \n                    \n                \n            \n            \n                \nmergeOptions()\n                \n            \n\n\n            \n                \n                    Defined in src/base/swagger-gen/crud-routes.factory.ts:297\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setResponseModels\n                        \n                        \n                    \n                \n            \n            \n                \nsetResponseModels()\n                \n            \n\n\n            \n                \n                    Defined in src/base/swagger-gen/crud-routes.factory.ts:349\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setSwaggerResponseOk\n                        \n                        \n                    \n                \n            \n            \n                \nsetSwaggerResponseOk(name: BaseRouteName)\n                \n            \n\n\n            \n                \n                    Defined in src/base/swagger-gen/crud-routes.factory.ts:400\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                BaseRouteName\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        targetProto\n                    \n                \n\n                \n                    \n                        gettargetProto()\n                    \n                \n                            \n                                \n                                    Defined in src/base/swagger-gen/crud-routes.factory.ts:243\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        modelName\n                    \n                \n\n                \n                    \n                        getmodelName()\n                    \n                \n                            \n                                \n                                    Defined in src/base/swagger-gen/crud-routes.factory.ts:248\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        modelType\n                    \n                \n\n                \n                    \n                        getmodelType()\n                    \n                \n                            \n                                \n                                    Defined in src/base/swagger-gen/crud-routes.factory.ts:252\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { HttpStatus, RequestMethod } from '@nestjs/common'\n\nimport { Type } from 'class-transformer'\nimport * as deepmerge from 'deepmerge'\n\nimport {\n    ApiProperty,\n    BaseRoute,\n    isFalse,\n    isFunction,\n    isObjectFull,\n    objKeys,\n    swagger,\n    swaggerConst,\n} from './utils'\nimport type { CrudOptions, GetManyDefaultResponse, BaseRouteName } from './utils'\n\nexport class R {\n    static set(\n        metadataKey: string,\n        metadataValue: any,\n        target: Object,\n        propertyKey?: string | symbol,\n    ) {\n        if (!propertyKey) {\n            Reflect.defineMetadata(metadataKey, metadataValue, target)\n        } else {\n            Reflect.defineMetadata(metadataKey, metadataValue, target, propertyKey)\n        }\n    }\n\n    static get(\n        metadataKey: any,\n        target: Object,\n        propertyKey?: string | symbol,\n    ): T {\n        if (!propertyKey) return Reflect.getMetadata(metadataKey, target)\n\n        return Reflect.getMetadata(metadataKey, target, propertyKey)\n    }\n\n    static setRoute(route: BaseRoute, func: Function) {\n        R.set('path', route.path, func)\n        R.set('method', route.method, func)\n    }\n}\n\nexport class Swagger {\n    /**\n     * Sets extra swagger metadata for GET Calls\n     */\n    static setExtraModels(swaggerModels: {\n        [x: string]: any\n        get: Record\n    }) {\n        if (swaggerConst) {\n            const meta = Swagger.getExtraModels(swaggerModels.get)\n            const models = [\n                ...meta,\n                ...objKeys(swaggerModels)\n                    .map((name) => swaggerModels[name])\n                    .filter((one) => one && one.name !== swaggerModels.get.name),\n            ]\n\n            R.set(\n                swaggerConst.DECORATORS.API_EXTRA_MODELS,\n                models,\n                swaggerModels.get,\n            )\n        }\n    }\n\n    /**\n     * Sets swagger metadata for response of GET Calls\n     */\n    static setResponseOk(metadata: any[], func: Function) {\n        if (swaggerConst) {\n            R.set(swaggerConst.DECORATORS.API_RESPONSE, metadata, func)\n        }\n    }\n\n    static getExtraModels(target: Record): any[] {\n        return swaggerConst\n            ? R.get(swaggerConst.API_EXTRA_MODELS, target) || []\n            : []\n    }\n\n    static getResponseOk(func: Function) {\n        return swaggerConst\n            ? R.get(swaggerConst.DECORATORS.API_RESPONSE, func) || {}\n            : {}\n    }\n\n    static createResponseMeta(\n        name: BaseRouteName,\n        options: CrudOptions,\n        swaggerModels: {\n            [x: string]: any\n            get: { name: any }\n            getMany: { name: any }\n        },\n    ) {\n        if (swagger) {\n            const { query } = options\n\n            switch (name) {\n                case 'getOneBase':\n                    return {\n                        [HttpStatus.OK]: {\n                            description: 'Get one base response',\n                            type: swaggerModels.get,\n                        },\n                    }\n                case 'getOne':\n                    return {\n                        [HttpStatus.OK]: query?.alwaysPaginate\n                            ? {\n                                  description: 'Get paginated response',\n                                  type: swaggerModels.getMany,\n                              }\n                            : {\n                                  description: 'Get many base response',\n                                  schema: {\n                                      oneOf: [\n                                          {\n                                              $ref: swagger.getSchemaPath(\n                                                  swaggerModels.getMany.name,\n                                              ),\n                                          },\n                                          {\n                                              type: 'array',\n                                              items: {\n                                                  $ref: swagger.getSchemaPath(\n                                                      swaggerModels.get.name,\n                                                  ),\n                                              },\n                                          },\n                                      ],\n                                  },\n                              },\n                    }\n                default:\n                    // eslint-disable-next-line no-case-declarations\n                    const dto = swaggerModels[name.split('OneBase')[0]]\n\n                    return {\n                        [HttpStatus.OK]: {\n                            description: 'Response',\n                            schema: { $ref: swagger.getSchemaPath(dto.name) },\n                        },\n                    }\n            }\n        } else {\n            return {}\n        }\n    }\n}\n\nexport class SerializeHelper {\n    static createGetManyDto(dto: any, resourceName: string): any {\n        class GetManyResponseDto implements GetManyDefaultResponse {\n            @ApiProperty({ type: dto, isArray: true })\n            @Type(() => dto)\n            data!: any[]\n\n            @ApiProperty({ type: 'number' })\n            count!: number\n\n            @ApiProperty({ type: 'number' })\n            total!: number\n\n            @ApiProperty({ type: 'number' })\n            page!: number\n\n            @ApiProperty({ type: 'number' })\n            pageCount!: number\n        }\n\n        Object.defineProperty(GetManyResponseDto, 'name', {\n            writable: false,\n            value: `GetMany${resourceName}ResponseDto`,\n        })\n\n        return GetManyResponseDto\n    }\n\n    static createGetOneResponseDto(resourceName: string): any {\n        class GetOneResponseDto {}\n\n        Object.defineProperty(GetOneResponseDto, 'name', {\n            writable: false,\n            value: `${resourceName}ResponseDto`,\n        })\n\n        return GetOneResponseDto\n    }\n}\n\nexport class CrudConfigService {\n    static config: Partial = {\n        query: {\n            alwaysPaginate: false,\n        },\n    }\n\n    static load(config: Record) {\n        const query = isObjectFull(config.query) ? config.query : {}\n        const params = isObjectFull(config.params) ? config.params : {}\n        const serialize = isObjectFull(config.serialize) ? config.serialize : {}\n\n        CrudConfigService.config = deepmerge(\n            CrudConfigService.config,\n            { query, params, serialize },\n            { arrayMerge: (a, b, c) => b },\n        )\n    }\n}\n\nexport class CrudRoutesFactory {\n    protected options\n\n    protected swaggerModels: any = {}\n\n    constructor(private target: Object, options: CrudOptions) {\n        this.options = options\n        this.create()\n\n        console.log(\n            'CrudRoutesFactory::constructor',\n            // { ...options },\n            // this.targetProto,\n            // this.modelType,\n            // this.modelName,\n            // this.swaggerModels,\n        )\n    }\n\n    static create(target: Object, options: CrudOptions): CrudRoutesFactory {\n        return new CrudRoutesFactory(target, options)\n    }\n\n    get targetProto() {\n        // @ts-ignore\n        return this.target.prototype\n    }\n\n    get modelName() {\n        return this.options.model.type?.name\n    }\n\n    get modelType() {\n        return this.options.model.type\n    }\n\n    private create() {\n        const routesSchema = CrudRoutesFactory.getRoutesSchema()\n        this.mergeOptions()\n        this.setResponseModels()\n        this.createRoutes(routesSchema)\n        this.enableRoutes(routesSchema)\n    }\n\n    getOne(name: BaseRouteName) {\n        this.targetProto[name] = function getOne(req: any) {\n            return this.service.getOne(req)\n        }\n    }\n\n    getOneBase(name: BaseRouteName) {\n        this.targetProto[name] = function getOneBase(req: any) {\n            return this.service.getOneBase(req)\n        }\n    }\n\n    static getRoutesSchema(): BaseRoute[] {\n        return [\n            {\n                name: 'getOneBase',\n                path: '/',\n                method: RequestMethod.GET,\n                enable: false,\n                override: false,\n                withParams: true,\n            },\n            {\n                name: 'getOne',\n                path: '/',\n                method: RequestMethod.GET,\n                enable: false,\n                override: false,\n                withParams: false,\n            },\n        ]\n    }\n\n    mergeOptions() {\n        // merge query config\n        const query = isObjectFull(this.options.query) ? this.options.query : {}\n        this.options.query = { ...CrudConfigService.config.query, ...query }\n\n        // set dto\n        if (!isObjectFull(this.options.dto)) {\n            this.options.dto = {}\n        }\n\n        // set serialize\n        this.options.serialize = {\n            ...CrudConfigService.config.serialize,\n            ...this.options.serialize,\n        }\n\n        this.options.serialize.get = isFalse(this.options.serialize?.get)\n            ? false\n            : this.options.serialize?.get || this.modelType\n\n        this.options.serialize.getMany = isFalse(this.options.serialize?.getMany)\n            ? false\n            : this.options.serialize?.getMany\n            ? this.options.serialize?.getMany\n            : isFalse(this.options.serialize?.get)\n            ? false\n            : SerializeHelper.createGetManyDto(\n                  this.options.serialize?.get,\n                  this.modelName,\n              )\n\n        this.options.serialize.create = isFalse(this.options.serialize?.create)\n            ? false\n            : this.options.serialize?.create || this.modelType\n\n        this.options.serialize.update = isFalse(this.options.serialize?.update)\n            ? false\n            : this.options.serialize?.update || this.modelType\n\n        this.options.serialize.replace = isFalse(this.options.serialize?.replace)\n            ? false\n            : this.options.serialize?.replace || this.modelType\n\n        this.options.serialize.delete =\n            isFalse(this.options.serialize?.delete) ||\n            !this.options.routes?.deleteOneBase?.returnDeleted\n                ? false\n                : this.options.serialize?.delete || this.modelType\n\n        R.set('CRUD_OPTIONS_METADATA', this.options, this.target)\n    }\n\n    setResponseModels() {\n        const modelType = isFunction(this.modelType)\n            ? this.modelType\n            : SerializeHelper.createGetOneResponseDto(this.modelName)\n\n        this.swaggerModels.get = isFunction(this.options.serialize?.get)\n            ? this.options.serialize?.get\n            : modelType\n\n        this.swaggerModels.getMany =\n            this.options.serialize?.getMany ||\n            SerializeHelper.createGetManyDto(this.swaggerModels.get, this.modelName)\n\n        this.swaggerModels.create = isFunction(this.options.serialize?.create)\n            ? this.options.serialize?.create\n            : modelType\n\n        this.swaggerModels.update = isFunction(this.options.serialize?.update)\n            ? this.options.serialize?.update\n            : modelType\n\n        this.swaggerModels.replace = isFunction(this.options.serialize?.replace)\n            ? this.options.serialize?.replace\n            : modelType\n\n        this.swaggerModels.delete = isFunction(this.options.serialize?.delete)\n            ? this.options.serialize?.delete\n            : modelType\n\n        Swagger.setExtraModels(this.swaggerModels)\n    }\n\n    enableRoutes(routesSchema: BaseRoute[]) {\n        routesSchema.forEach((route) => {\n            if (!route.override && route.enable) {\n                R.setRoute(route, this.targetProto[route.name])\n            }\n        })\n    }\n\n    createRoutes(routesSchema: BaseRoute[]) {\n        routesSchema.forEach((route) => {\n            // create base method\n            /* this[route.name](route.name) */\n            route.enable = true\n\n            // set metadata\n            this.setSwaggerResponseOk(route.name)\n        })\n    }\n\n    setSwaggerResponseOk(name: BaseRouteName) {\n        const metadata = Swagger.getResponseOk(this.targetProto[name]) || {}\n        const metadataToAdd =\n            Swagger.createResponseMeta(name, this.options, this.swaggerModels) || {}\n\n        Swagger.setResponseOk(\n            // @ts-ignore\n            { ...metadata, ...metadataToAdd },\n            this.targetProto[name],\n        )\n    }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CrudService.html":{"url":"classes/CrudService.html","title":"class - CrudService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CrudService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/base/crud/crud.service.ts\n        \n\n            \n                Description\n            \n            \n                Abstract base service that other services can extend to provide base CRUD\nfunctionality such as to create, find, update and delete data.\n\n            \n\n\n            \n                Implements\n            \n            \n                            ICrudService\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                findOneByEmail\n                            \n                            \n                                    Async\n                                findOneById\n                            \n                            \n                                    Async\n                                paginatedFindAll\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Protected\n                        constructor(model: ModelClass)\n                    \n                \n                        \n                            \n                                Defined in src/base/crud/crud.service.ts:15\n                            \n                        \n\n                \n                    \n                            The constructor must receive the injected model from the child service in\norder to provide all the proper base functionality.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        model\n                                                  \n                                                        \n                                                                    ModelClass\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nThe injected model.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            create\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    create(input: CreateUserDto | CreateTagsDto | T)\n                \n            \n\n\n            \n                \n                    Defined in src/base/crud/crud.service.ts:99\n                \n            \n\n\n            \n                \n                    Created a entry and return it\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    input\n                                    \n                                                CreateUserDto | CreateTagsDto | T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findAll\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll()\n                \n            \n\n\n            \n                \n                    Defined in src/base/crud/crud.service.ts:27\n                \n            \n\n\n            \n                \n                    Finds all entries and return the result\n\n\n                    \n                        Returns :     {}\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findOne\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(filter: object)\n                \n            \n\n\n            \n                \n                    Defined in src/base/crud/crud.service.ts:56\n                \n            \n\n\n            \n                \n                    Finds one entry with where filter and return the result\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                                object\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findOneByEmail\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findOneByEmail(email: string)\n                \n            \n\n\n            \n                \n                    Defined in src/base/crud/crud.service.ts:78\n                \n            \n\n\n            \n                \n                    Finds onw entry by email and return the result\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findOneById\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findOneById(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/base/crud/crud.service.ts:67\n                \n            \n\n\n            \n                \n                    Finds paginated entries and return the result\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            paginatedFindAll\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    paginatedFindAll(paginationParams: PaginationParams)\n                \n            \n\n\n            \n                \n                    Defined in src/base/crud/crud.service.ts:38\n                \n            \n\n\n            \n                \n                    Finds paginated entries and return the result\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    paginationParams\n                                    \n                                                PaginationParams\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            remove\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    remove(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/base/crud/crud.service.ts:89\n                \n            \n\n\n            \n                \n                    Soft-deletes a entry and return it\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            update\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: number, input: Partial)\n                \n            \n\n\n            \n                \n                    Defined in src/base/crud/crud.service.ts:112\n                \n            \n\n\n            \n                \n                    Updates a entry and return it\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    input\n                                    \n                                            Partial\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { NotFoundException } from '@nestjs/common'\n\nimport { ModelClass, raw } from 'objection'\n\nimport { BaseModel } from '../../database/models/base.model'\nimport { CreateTagsDto } from '../../tags/tag.model'\nimport { CreateUserDto } from '../../users/user.model'\nimport { ICrudService } from './crud.service.interface'\nimport { IPaginationResult, PaginationParams } from './pagination'\n\n/**\n * Abstract base service that other services can extend to provide base CRUD\n * functionality such as to create, find, update and delete data.\n */\nexport abstract class CrudService implements ICrudService {\n    /**\n     * The constructor must receive the injected model from the child service in\n     * order to provide all the proper base functionality.\n     *\n     * @param {Model} model - The injected model.\n     */\n    protected constructor(protected readonly model: ModelClass) {}\n\n    /**\n     * Finds all entries and return the result\n     */\n    async findAll() {\n        const data = await this.model.query()\n\n        if (data) return (data as unknown) as Promise\n\n        return Promise.reject(new NotFoundException())\n    }\n\n    /**\n     * Finds paginated entries and return the result\n     */\n    async paginatedFindAll(paginationParams: PaginationParams) {\n        const { page = 0, pageSize = 3, order } = paginationParams\n        const { results, total } = await this.model.query().page(page, pageSize)\n\n        return ({\n            data: results,\n            paging: {\n                pageSize,\n                page,\n                total,\n                totalPages: Math.ceil(total / pageSize),\n            },\n        } as unknown) as Promise>\n    }\n\n    /**\n     * Finds one entry with where filter and return the result\n     */\n    async findOne(filter = {}) {\n        const data = await this.model.query().findOne(filter)\n\n        if (data) return (data as unknown) as Promise\n\n        return Promise.reject(new NotFoundException())\n    }\n\n    /**\n     * Finds paginated entries and return the result\n     */\n    async findOneById(id: number) {\n        const data = await this.model.query().findById(id).first()\n\n        if (data) return (data as unknown) as Promise\n\n        return Promise.reject(new NotFoundException())\n    }\n\n    /**\n     * Finds onw entry by email and return the result\n     */\n    async findOneByEmail(email: string) {\n        const data = await this.model.query().findOne({ email })\n\n        if (data) return (data as unknown) as Promise\n\n        return Promise.reject(new NotFoundException())\n    }\n\n    /**\n     * Soft-deletes a entry and return it\n     */\n    async remove(id: number) {\n        // @ts-ignore\n        return this.update(id, {\n            deleted_at: raw('CURRENT_TIMESTAMP'),\n        })\n    }\n\n    /**\n     * Created a entry and return it\n     */\n    async create(input: CreateUserDto | CreateTagsDto | T) {\n        try {\n            const data = await this.model.query().insertAndFetch(input as T)\n\n            return (data as unknown) as Promise\n        } catch (e) {\n            return Promise.reject(e)\n        }\n    }\n\n    /**\n     * Updates a entry and return it\n     */\n    async update(id: number, input: Partial) {\n        try {\n            const data = await this.model.query().patchAndFetchById(id, input)\n\n            return (data as unknown) as Promise\n        } catch (e) {\n            return Promise.reject(e)\n        }\n    }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CustomQueryBuilder.html":{"url":"classes/CustomQueryBuilder.html","title":"class - CustomQueryBuilder","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CustomQueryBuilder\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/database/models/helpers.ts\n        \n\n\n            \n                Extends\n            \n            \n                    QueryBuilder\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                ArrayQueryBuilderType\n                            \n                            \n                                NumberQueryBuilderType\n                            \n                            \n                                PageQueryBuilderType\n                            \n                            \n                                SingleQueryBuilderType\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                chunk\n                            \n                            \n                                    Async\n                                exists\n                            \n                            \n                                    Async\n                                onlyCount\n                            \n                            \n                                    Async\n                                paginate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ArrayQueryBuilderType\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         CustomQueryBuilder\n\n                        \n                    \n                        \n                            \n                                    Defined in src/database/models/helpers.ts:37\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            NumberQueryBuilderType\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         CustomQueryBuilder\n\n                        \n                    \n                        \n                            \n                                    Defined in src/database/models/helpers.ts:41\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            PageQueryBuilderType\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         CustomQueryBuilder>\n\n                        \n                    \n                        \n                            \n                                    Defined in src/database/models/helpers.ts:43\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            SingleQueryBuilderType\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         CustomQueryBuilder\n\n                        \n                    \n                        \n                            \n                                    Defined in src/database/models/helpers.ts:39\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            chunk\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    chunk(cb: Function, size: number)\n                \n            \n\n\n            \n                \n                    Defined in src/database/models/helpers.ts:75\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    cb\n                                    \n                                                Function\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    size\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            exists\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    exists()\n                \n            \n\n\n            \n                \n                    Defined in src/database/models/helpers.ts:70\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     {}\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            onlyCount\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    onlyCount()\n                \n            \n\n\n            \n                \n                    Defined in src/database/models/helpers.ts:61\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     {}\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            paginate\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    paginate(page: number, perPage: number)\n                \n            \n\n\n            \n                \n                    Defined in src/database/models/helpers.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    page\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    perPage\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { cloneDeep } from 'lodash'\nimport { Model, Page, QueryBuilder } from 'objection'\n\n/**\n * Check if value is of type object.\n *\n * @param value\n */\nexport function isObject(value: any): boolean {\n    return typeof value === 'object' && value !== null\n}\n\n/**\n * Check if value is empty\n *\n * @param value\n */\nexport function isEmpty(value: any): boolean {\n    if (Array.isArray(value) && value.length  extends QueryBuilder {\n    ArrayQueryBuilderType!: CustomQueryBuilder\n\n    SingleQueryBuilderType!: CustomQueryBuilder\n\n    NumberQueryBuilderType!: CustomQueryBuilder\n\n    PageQueryBuilderType!: CustomQueryBuilder>\n\n    async paginate(page: number, perPage: number) {\n        page = +page ? +page : 1 // eslint-disable-line no-param-reassign\n        perPage = +perPage ? +perPage : 15 // eslint-disable-line no-param-reassign\n\n        const result = await this.page(page - 1, perPage)\n        return {\n            pagination: {\n                currentPage: page,\n                totalPages: Math.ceil(result.total / perPage),\n                perPage,\n                total: result.total,\n            },\n            data: result.results,\n        }\n    }\n\n    async onlyCount() {\n        const result: { c: unknown }[] = ((await this.count({\n            c: '*',\n        })) as unknown) as {\n            c: unknown\n        }[]\n        return result[0].c // eslint-disable-line @typescript-eslint/no-unsafe-member-access,@typescript-eslint/no-unsafe-return\n    }\n\n    async exists() {\n        return !!(await this.onlyCount())\n    }\n\n    // eslint-disable-next-line @typescript-eslint/ban-types\n    async chunk(cb: Function, size: number): Promise {\n        let offset = 0\n        let hasMore = true\n\n        while (!offset || hasMore) {\n            const query = cloneDeep(this) // eslint-disable-line @typescript-eslint/no-unsafe-call,@typescript-eslint/no-unsafe-assignment\n            const records = await query.offset(offset).limit(size) // eslint-disable-line @typescript-eslint/no-unsafe-call,no-await-in-loop,@typescript-eslint/no-unsafe-member-access,@typescript-eslint/no-unsafe-assignment\n\n            hasMore = isNotEmpty(records)\n\n            if (!hasMore) return\n\n            await cb(records) // eslint-disable-line no-await-in-loop\n\n            offset += size\n        }\n    }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/DatabaseModule.html":{"url":"modules/DatabaseModule.html","title":"module - DatabaseModule","body":"\n                   \n\n\n\n\n    Modules\n    DatabaseModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/database/database.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { Global, Module } from '@nestjs/common'\n\nimport * as Knex from 'knex'\nimport { Model } from 'objection'\n\nimport { Tag } from '../tags/tag.model'\nimport { User } from '../users/user.model'\n\nconst models = [Tag, User]\n\nexport const modelProviders = models.map((model) => {\n    return {\n        provide: model.name,\n        useValue: model,\n    }\n})\n\nexport const databaseProviders = [\n    ...modelProviders,\n    {\n        provide: 'KnexConnection',\n        // eslint-disable-next-line @typescript-eslint/require-await\n        useFactory: async () => {\n            const knex = Knex({\n                client: 'sqlite3',\n                useNullAsDefault: true,\n                connection: {\n                    filename: './knex.sqlite',\n                },\n                debug: true,\n            })\n\n            Model.knex(knex)\n            return knex\n        },\n    },\n]\n\n@Global()\n@Module({\n    providers: [...databaseProviders],\n    exports: [...databaseProviders],\n})\nexport class DatabaseModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/EmailModule.html":{"url":"modules/EmailModule.html","title":"module - EmailModule","body":"\n                   \n\n\n\n\n    Modules\n    EmailModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_EmailModule\n\n\n\ncluster_EmailModule_providers\n\n\n\ncluster_EmailModule_exports\n\n\n\n\nEmailService \n\nEmailService \n\n\n\nEmailModule\n\nEmailModule\n\nEmailService  -->\n\nEmailModule->EmailService \n\n\n\n\n\nEmailService\n\nEmailService\n\nEmailModule -->\n\nEmailService->EmailModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/email/email.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            EmailService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            EmailService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common'\nimport { ConfigModule } from '@nestjs/config'\n\nimport EmailService from './email.service'\n\n@Module({\n    imports: [ConfigModule],\n    controllers: [],\n    providers: [EmailService],\n    exports: [EmailService],\n})\nexport class EmailModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/EmailScheduleDto.html":{"url":"classes/EmailScheduleDto.html","title":"class - EmailScheduleDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  EmailScheduleDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/emailScheduling/emailSchedule.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                content\n                            \n                            \n                                date\n                            \n                            \n                                recipient\n                            \n                            \n                                subject\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            content\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsString()@IsNotEmpty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/emailScheduling/emailSchedule.dto.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            date\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsDateString()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/emailScheduling/emailSchedule.dto.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            recipient\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsEmail()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/emailScheduling/emailSchedule.dto.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            subject\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsString()@IsNotEmpty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/emailScheduling/emailSchedule.dto.ts:9\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsString, IsNotEmpty, IsDateString, IsEmail } from 'class-validator'\n\nexport class EmailScheduleDto {\n    @IsEmail()\n    recipient!: string\n\n    @IsString()\n    @IsNotEmpty()\n    subject!: string\n\n    @IsString()\n    @IsNotEmpty()\n    content!: string\n\n    @IsDateString()\n    date!: string\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/EmailSchedulingController.html":{"url":"controllers/EmailSchedulingController.html","title":"controller - EmailSchedulingController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  EmailSchedulingController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/emailScheduling/emailScheduling.controller.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                scheduleEmail\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            scheduleEmail\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    scheduleEmail(emailSchedule: EmailScheduleDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('schedule')\n                \n            \n\n            \n                \n                    Defined in src/emailScheduling/emailScheduling.controller.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    emailSchedule\n                                    \n                                                EmailScheduleDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        /* eslint-disable no-use-before-define */\nimport { Body, Controller, Post } from '@nestjs/common'\nimport { ApiTags } from '@nestjs/swagger'\n\nimport { EmailScheduleDto } from './emailSchedule.dto'\nimport EmailSchedulingService from './emailScheduling.service'\n\n@ApiTags(EmailSchedulingController.name)\n@Controller(EmailSchedulingController.path)\nexport default class EmailSchedulingController {\n    static path = 'email-scheduling'\n\n    constructor(readonly emailSchedulingService: EmailSchedulingService) {}\n\n    // eslint-disable-next-line @typescript-eslint/require-await\n    @Post('schedule')\n    async scheduleEmail(@Body() emailSchedule: EmailScheduleDto) {\n        await this.emailSchedulingService.scheduleEmail(emailSchedule)\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/EmailSchedulingModule.html":{"url":"modules/EmailSchedulingModule.html","title":"module - EmailSchedulingModule","body":"\n                   \n\n\n\n\n    Modules\n    EmailSchedulingModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_EmailSchedulingModule\n\n\n\ncluster_EmailSchedulingModule_imports\n\n\n\ncluster_EmailSchedulingModule_providers\n\n\n\n\nEmailModule\n\nEmailModule\n\n\n\nEmailSchedulingModule\n\nEmailSchedulingModule\n\nEmailSchedulingModule -->\n\nEmailModule->EmailSchedulingModule\n\n\n\n\n\nEmailSchedulingService\n\nEmailSchedulingService\n\nEmailSchedulingModule -->\n\nEmailSchedulingService->EmailSchedulingModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/emailScheduling/emailScheduling.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            EmailSchedulingService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            EmailSchedulingController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            EmailModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common'\n\nimport { EmailModule } from '../email/email.module'\nimport EmailSchedulingController from './emailScheduling.controller'\nimport EmailSchedulingService from './emailScheduling.service'\n\n@Module({\n    imports: [EmailModule],\n    controllers: [EmailSchedulingController],\n    providers: [EmailSchedulingService],\n})\nexport class EmailSchedulingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/EmailSchedulingService.html":{"url":"injectables/EmailSchedulingService.html","title":"injectable - EmailSchedulingService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  EmailSchedulingService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/emailScheduling/emailScheduling.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                scheduleEmail\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(emailService: EmailService, scheduler: SchedulerRegistry)\n                    \n                \n                        \n                            \n                                Defined in src/emailScheduling/emailScheduling.service.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        emailService\n                                                  \n                                                        \n                                                                        EmailService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        scheduler\n                                                  \n                                                        \n                                                                        SchedulerRegistry\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            scheduleEmail\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    scheduleEmail(emailSchedule: EmailScheduleDto)\n                \n            \n\n\n            \n                \n                    Defined in src/emailScheduling/emailScheduling.service.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    emailSchedule\n                                    \n                                                EmailScheduleDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            logger\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Logger(EmailSchedulingService.name)\n                        \n                    \n                        \n                            \n                                    Defined in src/emailScheduling/emailScheduling.service.ts:11\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable, Logger } from '@nestjs/common'\nimport { SchedulerRegistry } from '@nestjs/schedule'\n\nimport { CronJob } from 'cron'\n\nimport EmailService from '../email/email.service'\nimport { EmailScheduleDto } from './emailSchedule.dto'\n\n@Injectable()\nexport default class EmailSchedulingService {\n    logger = new Logger(EmailSchedulingService.name)\n\n    constructor(\n        readonly emailService: EmailService,\n        readonly scheduler: SchedulerRegistry,\n    ) {}\n\n    // eslint-disable-next-line @typescript-eslint/require-await\n    async scheduleEmail(emailSchedule: EmailScheduleDto) {\n        const date = new Date(emailSchedule.date)\n\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-call\n        const job = new CronJob(date, () => {\n            this.emailService.sendMail({\n                subject: emailSchedule.subject,\n                text: emailSchedule.content,\n                to: emailSchedule.recipient,\n            })\n        })\n\n        this.scheduler.addCronJob(`${Date.now()}-${emailSchedule.subject}`, job)\n\n        job.start() // eslint-disable-line @typescript-eslint/no-unsafe-call,@typescript-eslint/no-unsafe-member-access\n        this.logger.log(`email job added at ${date.toLocaleDateString()}!`)\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/EmailService.html":{"url":"injectables/EmailService.html","title":"injectable - EmailService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  EmailService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/email/email.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                sendMail\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(configService: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in src/email/email.service.ts:5\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            sendMail\n                        \n                        \n                    \n                \n            \n            \n                \nsendMail(options)\n                \n            \n\n\n            \n                \n                    Defined in src/email/email.service.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common'\nimport { ConfigService } from '@nestjs/config'\n\n@Injectable()\nexport default class EmailService {\n    constructor(\n        private readonly configService: ConfigService,\n    ) {}\n\n    // TODO: Implement this\n    sendMail(options) {\n        console.log({ options, config: this.configService.get('NODE_ENV') })\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ExcludeNullUndefinedInterceptor.html":{"url":"injectables/ExcludeNullUndefinedInterceptor.html","title":"injectable - ExcludeNullUndefinedInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ExcludeNullUndefinedInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/infra/interceptors/null-undefined-override.ts\n        \n\n            \n                Description\n            \n            \n                Interceptors to transform each occurrence of a null value to an empty string ''\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            intercept\n                        \n                        \n                    \n                \n            \n            \n                \nintercept(context: ExecutionContext, next: CallHandler)\n                \n            \n\n\n            \n                \n                    Defined in src/infra/interceptors/null-undefined-override.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                            CallHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n    Injectable,\n    NestInterceptor,\n    ExecutionContext,\n    CallHandler,\n} from '@nestjs/common'\n\nimport { Observable } from 'rxjs'\nimport { map } from 'rxjs/operators'\n\n// eslint-disable-next-line consistent-return\nfunction recursivelyStripNullValues(value: unknown): unknown {\n    if (Array.isArray(value)) {\n        return value.map(recursivelyStripNullValues)\n    }\n\n    if (value !== null && typeof value === 'object') {\n        // @ts-ignore\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-call\n        return Object.fromEntries(\n            // @ts-ignore\n            // eslint-disable-next-line @typescript-eslint/no-shadow\n            Object.entries(value).map(([key, value]) => [\n                key,\n                // eslint-disable-next-line @typescript-eslint/no-unused-vars\n                recursivelyStripNullValues(value),\n            ]),\n        )\n    }\n\n    if (value !== null) {\n        return value\n    }\n\n    return ''\n}\n\n/**\n * Interceptors to transform each occurrence of a null value to an empty string ''\n */\n@Injectable()\nexport class ExcludeNullUndefinedInterceptor implements NestInterceptor {\n    intercept(context: ExecutionContext, next: CallHandler): Observable {\n        return next.handle().pipe(\n            map(\n                // eslint-disable-next-line @typescript-eslint/no-unsafe-return\n                (value) => value ?? '', // recursivelyStripNullValues(value),\n            ),\n        )\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Follower.html":{"url":"interfaces/Follower.html","title":"interface - Follower","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Follower\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/domain.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        areYouFollowing\n                                \n                                \n                                        profileImage\n                                \n                                \n                                        showRemoveOption\n                                \n                                \n                                        userId\n                                \n                                \n                                        userName\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        areYouFollowing\n                                    \n                                \n                                \n                                    \n                                        areYouFollowing:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        profileImage\n                                    \n                                \n                                \n                                    \n                                        profileImage:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        showRemoveOption\n                                    \n                                \n                                \n                                    \n                                        showRemoveOption:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        userId\n                                    \n                                \n                                \n                                    \n                                        userId:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        userName\n                                    \n                                \n                                \n                                    \n                                        userName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { HttpStatus } from '@nestjs/common'\n\nexport type Results =\n    | GetAppLaunchData\n    | GetUserProfile\n    | GetUserPosts\n    | GetComments\n    | GetRescueList\n    | GetFollowers\n    | GetFollowing\n\nexport type APIError = Error | string | null\n\nexport interface Result {\n    data: T\n    error?: APIError\n    message?: string | string[]\n    statusCode: HttpStatus\n}\n\nexport interface APIResponse {\n    data: T\n    error?: APIError\n    message?: string | string[]\n    statusCode: HttpStatus\n\n    count?: number\n    page?: number\n    pageCount?: number\n    total?: number\n}\n\nexport interface GetAppLaunchData {\n    link: 'api:/'\n    response: APIResponse\n}\n\nexport interface GetUserProfile {\n    link: 'api:v1/user/getUserProfile?userId=25'\n    response: APIResponse\n}\n\nexport interface GetUserPosts {\n    link: 'api:v1/user/getUserPosts?pageNo=0&pageSize=25'\n    response: APIResponse\n}\n\nexport interface GetRescueList {\n    link: 'api:v1/rescue/getRescueList?pageNo=0&pageSize=10&status=pending|inProgress|completed|nearest'\n    response: APIResponse\n}\n\nexport interface GetComments {\n    link: 'api:v1/rescue/getComments?pageNo=0&pageSize=10&postId=1230'\n    response: APIResponse\n}\n\nexport interface GetFollowers {\n    link: 'api:v1/rescue/getUserFollowers?userId=1230'\n    response: APIResponse\n}\n\nexport interface GetFollowing {\n    link: 'api:v1/rescue/getUserFollowing?userId=1230'\n    response: APIResponse\n}\n\nexport interface AppLaunchAction {\n    actionId: number\n    action: string\n    isActive: boolean\n    subject?: string\n}\n\nexport interface User {\n    usesId: number\n\n    coverImage: string\n    following: boolean\n    gender: string\n    isOwnProfile: number\n    isRescuer: boolean\n    latitude: number\n    longitude: number\n    numberOfFollowers: number\n    numberOfFollowing: number\n    numberOfPosts: number\n    numberOfRescuesCompleted: number\n    numberOfRescuesCreated: number\n    numberOfRescuesInProgress: number\n    profileImage: string\n    rescuer: boolean\n    userAddress: string\n    userContacts: string\n    userEmail: string\n    userName: string\n    badge: {\n        badgeId: number\n        badgeName: string\n        badgeDescription: string\n        recuesCompletionNeeded: number\n    }\n    setting: {\n        showMyContacts: boolean\n        getNotifications: boolean\n    }\n}\n\nexport interface PostType {\n    postTypeId: number\n    postType: string\n}\n\nexport interface PostedByUser {\n    usesId: number\n    badgeName: string\n    following: boolean\n    profileImage: string\n    rescuer: boolean\n    userName: string\n}\n\nexport interface UserPost {\n    postId: number\n    commentsCount: number\n    isUserReactedToPost: boolean\n    ownPage: boolean\n    postBy: PostedByUser\n    postImage: string\n    postTime: string\n    postType: PostType\n    postVideo: string\n    reactionsCount: number\n    timeAgo: string\n\n    adCorporateLogoUrl: string | null\n    corporateDescription: string | null\n    corporateName: string | null\n}\n\nexport interface UserPosts {\n    isRecent: boolean\n    feed: UserPost[]\n}\n\nexport interface Rescues {\n    rescueId: number\n    animalImageUrl: string\n    distance: number\n    distanceAway: string\n    emergencyType: string\n    postedBy: string\n    postedMinAgo: string\n    rescueDate: Date\n    rescuedPetName: string\n    rescueLocality: string\n    rescuers: {\n        contact: number\n        name: string\n        profileId: number\n        profileImageUrl: string\n        rescues: boolean\n        showMyNumber: boolean\n    }\n    rescueStatus: string\n    viewsCont: number\n}\n\nexport interface RescueLists {\n    rescues: Rescues[]\n}\n\nexport interface Comment {\n    commentId: number\n    comment: string\n    commentedUseName: string\n    commentedUserId: number\n    timeAgo: string\n}\n\nexport interface Comments {\n    comments: Comment[]\n}\n\nexport interface Follower {\n    userId: number\n    userName: string\n    profileImage: string\n    areYouFollowing: boolean\n    showRemoveOption: boolean\n}\n\nexport interface Following extends Follower {}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Following.html":{"url":"interfaces/Following.html","title":"interface - Following","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Following\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/domain.ts\n        \n\n\n            \n                Extends\n            \n            \n                        Follower\n            \n\n\n\n\n    \n\n\n    \n        import { HttpStatus } from '@nestjs/common'\n\nexport type Results =\n    | GetAppLaunchData\n    | GetUserProfile\n    | GetUserPosts\n    | GetComments\n    | GetRescueList\n    | GetFollowers\n    | GetFollowing\n\nexport type APIError = Error | string | null\n\nexport interface Result {\n    data: T\n    error?: APIError\n    message?: string | string[]\n    statusCode: HttpStatus\n}\n\nexport interface APIResponse {\n    data: T\n    error?: APIError\n    message?: string | string[]\n    statusCode: HttpStatus\n\n    count?: number\n    page?: number\n    pageCount?: number\n    total?: number\n}\n\nexport interface GetAppLaunchData {\n    link: 'api:/'\n    response: APIResponse\n}\n\nexport interface GetUserProfile {\n    link: 'api:v1/user/getUserProfile?userId=25'\n    response: APIResponse\n}\n\nexport interface GetUserPosts {\n    link: 'api:v1/user/getUserPosts?pageNo=0&pageSize=25'\n    response: APIResponse\n}\n\nexport interface GetRescueList {\n    link: 'api:v1/rescue/getRescueList?pageNo=0&pageSize=10&status=pending|inProgress|completed|nearest'\n    response: APIResponse\n}\n\nexport interface GetComments {\n    link: 'api:v1/rescue/getComments?pageNo=0&pageSize=10&postId=1230'\n    response: APIResponse\n}\n\nexport interface GetFollowers {\n    link: 'api:v1/rescue/getUserFollowers?userId=1230'\n    response: APIResponse\n}\n\nexport interface GetFollowing {\n    link: 'api:v1/rescue/getUserFollowing?userId=1230'\n    response: APIResponse\n}\n\nexport interface AppLaunchAction {\n    actionId: number\n    action: string\n    isActive: boolean\n    subject?: string\n}\n\nexport interface User {\n    usesId: number\n\n    coverImage: string\n    following: boolean\n    gender: string\n    isOwnProfile: number\n    isRescuer: boolean\n    latitude: number\n    longitude: number\n    numberOfFollowers: number\n    numberOfFollowing: number\n    numberOfPosts: number\n    numberOfRescuesCompleted: number\n    numberOfRescuesCreated: number\n    numberOfRescuesInProgress: number\n    profileImage: string\n    rescuer: boolean\n    userAddress: string\n    userContacts: string\n    userEmail: string\n    userName: string\n    badge: {\n        badgeId: number\n        badgeName: string\n        badgeDescription: string\n        recuesCompletionNeeded: number\n    }\n    setting: {\n        showMyContacts: boolean\n        getNotifications: boolean\n    }\n}\n\nexport interface PostType {\n    postTypeId: number\n    postType: string\n}\n\nexport interface PostedByUser {\n    usesId: number\n    badgeName: string\n    following: boolean\n    profileImage: string\n    rescuer: boolean\n    userName: string\n}\n\nexport interface UserPost {\n    postId: number\n    commentsCount: number\n    isUserReactedToPost: boolean\n    ownPage: boolean\n    postBy: PostedByUser\n    postImage: string\n    postTime: string\n    postType: PostType\n    postVideo: string\n    reactionsCount: number\n    timeAgo: string\n\n    adCorporateLogoUrl: string | null\n    corporateDescription: string | null\n    corporateName: string | null\n}\n\nexport interface UserPosts {\n    isRecent: boolean\n    feed: UserPost[]\n}\n\nexport interface Rescues {\n    rescueId: number\n    animalImageUrl: string\n    distance: number\n    distanceAway: string\n    emergencyType: string\n    postedBy: string\n    postedMinAgo: string\n    rescueDate: Date\n    rescuedPetName: string\n    rescueLocality: string\n    rescuers: {\n        contact: number\n        name: string\n        profileId: number\n        profileImageUrl: string\n        rescues: boolean\n        showMyNumber: boolean\n    }\n    rescueStatus: string\n    viewsCont: number\n}\n\nexport interface RescueLists {\n    rescues: Rescues[]\n}\n\nexport interface Comment {\n    commentId: number\n    comment: string\n    commentedUseName: string\n    commentedUserId: number\n    timeAgo: string\n}\n\nexport interface Comments {\n    comments: Comment[]\n}\n\nexport interface Follower {\n    userId: number\n    userName: string\n    profileImage: string\n    areYouFollowing: boolean\n    showRemoveOption: boolean\n}\n\nexport interface Following extends Follower {}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/GetAppLaunchData.html":{"url":"interfaces/GetAppLaunchData.html","title":"interface - GetAppLaunchData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  GetAppLaunchData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/domain.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        link\n                                \n                                \n                                        response\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        link\n                                    \n                                \n                                \n                                    \n                                        link:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        response\n                                    \n                                \n                                \n                                    \n                                        response:         APIResponse\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         APIResponse\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { HttpStatus } from '@nestjs/common'\n\nexport type Results =\n    | GetAppLaunchData\n    | GetUserProfile\n    | GetUserPosts\n    | GetComments\n    | GetRescueList\n    | GetFollowers\n    | GetFollowing\n\nexport type APIError = Error | string | null\n\nexport interface Result {\n    data: T\n    error?: APIError\n    message?: string | string[]\n    statusCode: HttpStatus\n}\n\nexport interface APIResponse {\n    data: T\n    error?: APIError\n    message?: string | string[]\n    statusCode: HttpStatus\n\n    count?: number\n    page?: number\n    pageCount?: number\n    total?: number\n}\n\nexport interface GetAppLaunchData {\n    link: 'api:/'\n    response: APIResponse\n}\n\nexport interface GetUserProfile {\n    link: 'api:v1/user/getUserProfile?userId=25'\n    response: APIResponse\n}\n\nexport interface GetUserPosts {\n    link: 'api:v1/user/getUserPosts?pageNo=0&pageSize=25'\n    response: APIResponse\n}\n\nexport interface GetRescueList {\n    link: 'api:v1/rescue/getRescueList?pageNo=0&pageSize=10&status=pending|inProgress|completed|nearest'\n    response: APIResponse\n}\n\nexport interface GetComments {\n    link: 'api:v1/rescue/getComments?pageNo=0&pageSize=10&postId=1230'\n    response: APIResponse\n}\n\nexport interface GetFollowers {\n    link: 'api:v1/rescue/getUserFollowers?userId=1230'\n    response: APIResponse\n}\n\nexport interface GetFollowing {\n    link: 'api:v1/rescue/getUserFollowing?userId=1230'\n    response: APIResponse\n}\n\nexport interface AppLaunchAction {\n    actionId: number\n    action: string\n    isActive: boolean\n    subject?: string\n}\n\nexport interface User {\n    usesId: number\n\n    coverImage: string\n    following: boolean\n    gender: string\n    isOwnProfile: number\n    isRescuer: boolean\n    latitude: number\n    longitude: number\n    numberOfFollowers: number\n    numberOfFollowing: number\n    numberOfPosts: number\n    numberOfRescuesCompleted: number\n    numberOfRescuesCreated: number\n    numberOfRescuesInProgress: number\n    profileImage: string\n    rescuer: boolean\n    userAddress: string\n    userContacts: string\n    userEmail: string\n    userName: string\n    badge: {\n        badgeId: number\n        badgeName: string\n        badgeDescription: string\n        recuesCompletionNeeded: number\n    }\n    setting: {\n        showMyContacts: boolean\n        getNotifications: boolean\n    }\n}\n\nexport interface PostType {\n    postTypeId: number\n    postType: string\n}\n\nexport interface PostedByUser {\n    usesId: number\n    badgeName: string\n    following: boolean\n    profileImage: string\n    rescuer: boolean\n    userName: string\n}\n\nexport interface UserPost {\n    postId: number\n    commentsCount: number\n    isUserReactedToPost: boolean\n    ownPage: boolean\n    postBy: PostedByUser\n    postImage: string\n    postTime: string\n    postType: PostType\n    postVideo: string\n    reactionsCount: number\n    timeAgo: string\n\n    adCorporateLogoUrl: string | null\n    corporateDescription: string | null\n    corporateName: string | null\n}\n\nexport interface UserPosts {\n    isRecent: boolean\n    feed: UserPost[]\n}\n\nexport interface Rescues {\n    rescueId: number\n    animalImageUrl: string\n    distance: number\n    distanceAway: string\n    emergencyType: string\n    postedBy: string\n    postedMinAgo: string\n    rescueDate: Date\n    rescuedPetName: string\n    rescueLocality: string\n    rescuers: {\n        contact: number\n        name: string\n        profileId: number\n        profileImageUrl: string\n        rescues: boolean\n        showMyNumber: boolean\n    }\n    rescueStatus: string\n    viewsCont: number\n}\n\nexport interface RescueLists {\n    rescues: Rescues[]\n}\n\nexport interface Comment {\n    commentId: number\n    comment: string\n    commentedUseName: string\n    commentedUserId: number\n    timeAgo: string\n}\n\nexport interface Comments {\n    comments: Comment[]\n}\n\nexport interface Follower {\n    userId: number\n    userName: string\n    profileImage: string\n    areYouFollowing: boolean\n    showRemoveOption: boolean\n}\n\nexport interface Following extends Follower {}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/GetComments.html":{"url":"interfaces/GetComments.html","title":"interface - GetComments","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  GetComments\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/domain.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        link\n                                \n                                \n                                        response\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        link\n                                    \n                                \n                                \n                                    \n                                        link:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        response\n                                    \n                                \n                                \n                                    \n                                        response:         APIResponse\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         APIResponse\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { HttpStatus } from '@nestjs/common'\n\nexport type Results =\n    | GetAppLaunchData\n    | GetUserProfile\n    | GetUserPosts\n    | GetComments\n    | GetRescueList\n    | GetFollowers\n    | GetFollowing\n\nexport type APIError = Error | string | null\n\nexport interface Result {\n    data: T\n    error?: APIError\n    message?: string | string[]\n    statusCode: HttpStatus\n}\n\nexport interface APIResponse {\n    data: T\n    error?: APIError\n    message?: string | string[]\n    statusCode: HttpStatus\n\n    count?: number\n    page?: number\n    pageCount?: number\n    total?: number\n}\n\nexport interface GetAppLaunchData {\n    link: 'api:/'\n    response: APIResponse\n}\n\nexport interface GetUserProfile {\n    link: 'api:v1/user/getUserProfile?userId=25'\n    response: APIResponse\n}\n\nexport interface GetUserPosts {\n    link: 'api:v1/user/getUserPosts?pageNo=0&pageSize=25'\n    response: APIResponse\n}\n\nexport interface GetRescueList {\n    link: 'api:v1/rescue/getRescueList?pageNo=0&pageSize=10&status=pending|inProgress|completed|nearest'\n    response: APIResponse\n}\n\nexport interface GetComments {\n    link: 'api:v1/rescue/getComments?pageNo=0&pageSize=10&postId=1230'\n    response: APIResponse\n}\n\nexport interface GetFollowers {\n    link: 'api:v1/rescue/getUserFollowers?userId=1230'\n    response: APIResponse\n}\n\nexport interface GetFollowing {\n    link: 'api:v1/rescue/getUserFollowing?userId=1230'\n    response: APIResponse\n}\n\nexport interface AppLaunchAction {\n    actionId: number\n    action: string\n    isActive: boolean\n    subject?: string\n}\n\nexport interface User {\n    usesId: number\n\n    coverImage: string\n    following: boolean\n    gender: string\n    isOwnProfile: number\n    isRescuer: boolean\n    latitude: number\n    longitude: number\n    numberOfFollowers: number\n    numberOfFollowing: number\n    numberOfPosts: number\n    numberOfRescuesCompleted: number\n    numberOfRescuesCreated: number\n    numberOfRescuesInProgress: number\n    profileImage: string\n    rescuer: boolean\n    userAddress: string\n    userContacts: string\n    userEmail: string\n    userName: string\n    badge: {\n        badgeId: number\n        badgeName: string\n        badgeDescription: string\n        recuesCompletionNeeded: number\n    }\n    setting: {\n        showMyContacts: boolean\n        getNotifications: boolean\n    }\n}\n\nexport interface PostType {\n    postTypeId: number\n    postType: string\n}\n\nexport interface PostedByUser {\n    usesId: number\n    badgeName: string\n    following: boolean\n    profileImage: string\n    rescuer: boolean\n    userName: string\n}\n\nexport interface UserPost {\n    postId: number\n    commentsCount: number\n    isUserReactedToPost: boolean\n    ownPage: boolean\n    postBy: PostedByUser\n    postImage: string\n    postTime: string\n    postType: PostType\n    postVideo: string\n    reactionsCount: number\n    timeAgo: string\n\n    adCorporateLogoUrl: string | null\n    corporateDescription: string | null\n    corporateName: string | null\n}\n\nexport interface UserPosts {\n    isRecent: boolean\n    feed: UserPost[]\n}\n\nexport interface Rescues {\n    rescueId: number\n    animalImageUrl: string\n    distance: number\n    distanceAway: string\n    emergencyType: string\n    postedBy: string\n    postedMinAgo: string\n    rescueDate: Date\n    rescuedPetName: string\n    rescueLocality: string\n    rescuers: {\n        contact: number\n        name: string\n        profileId: number\n        profileImageUrl: string\n        rescues: boolean\n        showMyNumber: boolean\n    }\n    rescueStatus: string\n    viewsCont: number\n}\n\nexport interface RescueLists {\n    rescues: Rescues[]\n}\n\nexport interface Comment {\n    commentId: number\n    comment: string\n    commentedUseName: string\n    commentedUserId: number\n    timeAgo: string\n}\n\nexport interface Comments {\n    comments: Comment[]\n}\n\nexport interface Follower {\n    userId: number\n    userName: string\n    profileImage: string\n    areYouFollowing: boolean\n    showRemoveOption: boolean\n}\n\nexport interface Following extends Follower {}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/GetFollowers.html":{"url":"interfaces/GetFollowers.html","title":"interface - GetFollowers","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  GetFollowers\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/domain.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        link\n                                \n                                \n                                        response\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        link\n                                    \n                                \n                                \n                                    \n                                        link:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        response\n                                    \n                                \n                                \n                                    \n                                        response:         APIResponse\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         APIResponse\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { HttpStatus } from '@nestjs/common'\n\nexport type Results =\n    | GetAppLaunchData\n    | GetUserProfile\n    | GetUserPosts\n    | GetComments\n    | GetRescueList\n    | GetFollowers\n    | GetFollowing\n\nexport type APIError = Error | string | null\n\nexport interface Result {\n    data: T\n    error?: APIError\n    message?: string | string[]\n    statusCode: HttpStatus\n}\n\nexport interface APIResponse {\n    data: T\n    error?: APIError\n    message?: string | string[]\n    statusCode: HttpStatus\n\n    count?: number\n    page?: number\n    pageCount?: number\n    total?: number\n}\n\nexport interface GetAppLaunchData {\n    link: 'api:/'\n    response: APIResponse\n}\n\nexport interface GetUserProfile {\n    link: 'api:v1/user/getUserProfile?userId=25'\n    response: APIResponse\n}\n\nexport interface GetUserPosts {\n    link: 'api:v1/user/getUserPosts?pageNo=0&pageSize=25'\n    response: APIResponse\n}\n\nexport interface GetRescueList {\n    link: 'api:v1/rescue/getRescueList?pageNo=0&pageSize=10&status=pending|inProgress|completed|nearest'\n    response: APIResponse\n}\n\nexport interface GetComments {\n    link: 'api:v1/rescue/getComments?pageNo=0&pageSize=10&postId=1230'\n    response: APIResponse\n}\n\nexport interface GetFollowers {\n    link: 'api:v1/rescue/getUserFollowers?userId=1230'\n    response: APIResponse\n}\n\nexport interface GetFollowing {\n    link: 'api:v1/rescue/getUserFollowing?userId=1230'\n    response: APIResponse\n}\n\nexport interface AppLaunchAction {\n    actionId: number\n    action: string\n    isActive: boolean\n    subject?: string\n}\n\nexport interface User {\n    usesId: number\n\n    coverImage: string\n    following: boolean\n    gender: string\n    isOwnProfile: number\n    isRescuer: boolean\n    latitude: number\n    longitude: number\n    numberOfFollowers: number\n    numberOfFollowing: number\n    numberOfPosts: number\n    numberOfRescuesCompleted: number\n    numberOfRescuesCreated: number\n    numberOfRescuesInProgress: number\n    profileImage: string\n    rescuer: boolean\n    userAddress: string\n    userContacts: string\n    userEmail: string\n    userName: string\n    badge: {\n        badgeId: number\n        badgeName: string\n        badgeDescription: string\n        recuesCompletionNeeded: number\n    }\n    setting: {\n        showMyContacts: boolean\n        getNotifications: boolean\n    }\n}\n\nexport interface PostType {\n    postTypeId: number\n    postType: string\n}\n\nexport interface PostedByUser {\n    usesId: number\n    badgeName: string\n    following: boolean\n    profileImage: string\n    rescuer: boolean\n    userName: string\n}\n\nexport interface UserPost {\n    postId: number\n    commentsCount: number\n    isUserReactedToPost: boolean\n    ownPage: boolean\n    postBy: PostedByUser\n    postImage: string\n    postTime: string\n    postType: PostType\n    postVideo: string\n    reactionsCount: number\n    timeAgo: string\n\n    adCorporateLogoUrl: string | null\n    corporateDescription: string | null\n    corporateName: string | null\n}\n\nexport interface UserPosts {\n    isRecent: boolean\n    feed: UserPost[]\n}\n\nexport interface Rescues {\n    rescueId: number\n    animalImageUrl: string\n    distance: number\n    distanceAway: string\n    emergencyType: string\n    postedBy: string\n    postedMinAgo: string\n    rescueDate: Date\n    rescuedPetName: string\n    rescueLocality: string\n    rescuers: {\n        contact: number\n        name: string\n        profileId: number\n        profileImageUrl: string\n        rescues: boolean\n        showMyNumber: boolean\n    }\n    rescueStatus: string\n    viewsCont: number\n}\n\nexport interface RescueLists {\n    rescues: Rescues[]\n}\n\nexport interface Comment {\n    commentId: number\n    comment: string\n    commentedUseName: string\n    commentedUserId: number\n    timeAgo: string\n}\n\nexport interface Comments {\n    comments: Comment[]\n}\n\nexport interface Follower {\n    userId: number\n    userName: string\n    profileImage: string\n    areYouFollowing: boolean\n    showRemoveOption: boolean\n}\n\nexport interface Following extends Follower {}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/GetFollowing.html":{"url":"interfaces/GetFollowing.html","title":"interface - GetFollowing","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  GetFollowing\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/domain.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        link\n                                \n                                \n                                        response\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        link\n                                    \n                                \n                                \n                                    \n                                        link:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        response\n                                    \n                                \n                                \n                                    \n                                        response:         APIResponse\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         APIResponse\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { HttpStatus } from '@nestjs/common'\n\nexport type Results =\n    | GetAppLaunchData\n    | GetUserProfile\n    | GetUserPosts\n    | GetComments\n    | GetRescueList\n    | GetFollowers\n    | GetFollowing\n\nexport type APIError = Error | string | null\n\nexport interface Result {\n    data: T\n    error?: APIError\n    message?: string | string[]\n    statusCode: HttpStatus\n}\n\nexport interface APIResponse {\n    data: T\n    error?: APIError\n    message?: string | string[]\n    statusCode: HttpStatus\n\n    count?: number\n    page?: number\n    pageCount?: number\n    total?: number\n}\n\nexport interface GetAppLaunchData {\n    link: 'api:/'\n    response: APIResponse\n}\n\nexport interface GetUserProfile {\n    link: 'api:v1/user/getUserProfile?userId=25'\n    response: APIResponse\n}\n\nexport interface GetUserPosts {\n    link: 'api:v1/user/getUserPosts?pageNo=0&pageSize=25'\n    response: APIResponse\n}\n\nexport interface GetRescueList {\n    link: 'api:v1/rescue/getRescueList?pageNo=0&pageSize=10&status=pending|inProgress|completed|nearest'\n    response: APIResponse\n}\n\nexport interface GetComments {\n    link: 'api:v1/rescue/getComments?pageNo=0&pageSize=10&postId=1230'\n    response: APIResponse\n}\n\nexport interface GetFollowers {\n    link: 'api:v1/rescue/getUserFollowers?userId=1230'\n    response: APIResponse\n}\n\nexport interface GetFollowing {\n    link: 'api:v1/rescue/getUserFollowing?userId=1230'\n    response: APIResponse\n}\n\nexport interface AppLaunchAction {\n    actionId: number\n    action: string\n    isActive: boolean\n    subject?: string\n}\n\nexport interface User {\n    usesId: number\n\n    coverImage: string\n    following: boolean\n    gender: string\n    isOwnProfile: number\n    isRescuer: boolean\n    latitude: number\n    longitude: number\n    numberOfFollowers: number\n    numberOfFollowing: number\n    numberOfPosts: number\n    numberOfRescuesCompleted: number\n    numberOfRescuesCreated: number\n    numberOfRescuesInProgress: number\n    profileImage: string\n    rescuer: boolean\n    userAddress: string\n    userContacts: string\n    userEmail: string\n    userName: string\n    badge: {\n        badgeId: number\n        badgeName: string\n        badgeDescription: string\n        recuesCompletionNeeded: number\n    }\n    setting: {\n        showMyContacts: boolean\n        getNotifications: boolean\n    }\n}\n\nexport interface PostType {\n    postTypeId: number\n    postType: string\n}\n\nexport interface PostedByUser {\n    usesId: number\n    badgeName: string\n    following: boolean\n    profileImage: string\n    rescuer: boolean\n    userName: string\n}\n\nexport interface UserPost {\n    postId: number\n    commentsCount: number\n    isUserReactedToPost: boolean\n    ownPage: boolean\n    postBy: PostedByUser\n    postImage: string\n    postTime: string\n    postType: PostType\n    postVideo: string\n    reactionsCount: number\n    timeAgo: string\n\n    adCorporateLogoUrl: string | null\n    corporateDescription: string | null\n    corporateName: string | null\n}\n\nexport interface UserPosts {\n    isRecent: boolean\n    feed: UserPost[]\n}\n\nexport interface Rescues {\n    rescueId: number\n    animalImageUrl: string\n    distance: number\n    distanceAway: string\n    emergencyType: string\n    postedBy: string\n    postedMinAgo: string\n    rescueDate: Date\n    rescuedPetName: string\n    rescueLocality: string\n    rescuers: {\n        contact: number\n        name: string\n        profileId: number\n        profileImageUrl: string\n        rescues: boolean\n        showMyNumber: boolean\n    }\n    rescueStatus: string\n    viewsCont: number\n}\n\nexport interface RescueLists {\n    rescues: Rescues[]\n}\n\nexport interface Comment {\n    commentId: number\n    comment: string\n    commentedUseName: string\n    commentedUserId: number\n    timeAgo: string\n}\n\nexport interface Comments {\n    comments: Comment[]\n}\n\nexport interface Follower {\n    userId: number\n    userName: string\n    profileImage: string\n    areYouFollowing: boolean\n    showRemoveOption: boolean\n}\n\nexport interface Following extends Follower {}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/GetManyDefaultResponse.html":{"url":"interfaces/GetManyDefaultResponse.html","title":"interface - GetManyDefaultResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  GetManyDefaultResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/base/swagger-gen/utils/other.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        count\n                                \n                                \n                                        data\n                                \n                                \n                                        page\n                                \n                                \n                                        pageCount\n                                \n                                \n                                        total\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        count\n                                    \n                                \n                                \n                                    \n                                        count:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                    \n                                \n                                \n                                    \n                                        data:     T[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     T[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        page\n                                    \n                                \n                                \n                                    \n                                        page:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pageCount\n                                    \n                                \n                                \n                                    \n                                        pageCount:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        total\n                                    \n                                \n                                \n                                    \n                                        total:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { RequestMethod, ValidationPipeOptions } from '@nestjs/common'\nimport { SwaggerEnumType } from '@nestjs/swagger/dist/types/swagger-enum.type'\n\nexport declare type BaseRouteName =\n    | 'getManyBase'\n    | 'getOneBase'\n    | 'createOneBase'\n    | 'createManyBase'\n    | 'updateOneBase'\n    | 'replaceOneBase'\n    | 'deleteOneBase'\n    | 'getOne'\n\nexport interface BaseRoute {\n    name: BaseRouteName\n    path: string\n    method: RequestMethod\n    enable: boolean\n    override: boolean\n    withParams: boolean\n}\n\nexport interface GetManyDefaultResponse {\n    data: T[]\n    count: number\n    total: number\n    page: number\n    pageCount: number\n}\n\nexport interface ParamOption {\n    field?: string\n    type?: 'number' | 'string' | 'uuid'\n    enum?: SwaggerEnumType\n    primary?: boolean\n    disabled?: boolean\n}\n\nexport interface ParamsOptions {\n    [key: string]: ParamOption\n}\n\nexport interface CrudOptions {\n    model: {\n        type: { name: string }\n    }\n    dto?: {}\n    routes?: {\n        deleteOneBase?: { returnDeleted?: boolean }\n    }\n    validation?: ValidationPipeOptions | false\n    params?: ParamsOptions\n    query?: {\n        limit?: number\n        maxLimit?: number\n        cache?: number | false\n        alwaysPaginate?: boolean\n    }\n    serialize?: {\n        getMany?: false | object\n        get?: false | object\n        create?: false | object\n        createMany?: false | object\n        update?: false | object\n        replace?: false | object\n        delete?: false | object\n    }\n}\n\nexport function safeRequire(path: string): T | null {\n    try {\n        // eslint-disable-next-line global-require,@typescript-eslint/no-var-requires,import/no-dynamic-require\n        const pack = require(path)\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-return\n        return pack\n    } catch (_) {\n        return null\n    }\n}\n\nexport const swagger = safeRequire('@nestjs/swagger')\nexport const swaggerConst = safeRequire('@nestjs/swagger/dist/constants')\n\nexport function ApiProperty(options?: any): PropertyDecorator {\n    // eslint-disable-next-line @typescript-eslint/ban-types\n    return (target: object, propertyKey: string | symbol) => {\n        if (swagger) {\n            const ApiPropertyDecorator =\n                // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n                swagger.ApiProperty || swagger.ApiModelProperty\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-call\n            ApiPropertyDecorator(options)(target, propertyKey)\n        }\n    }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/GetRescueList.html":{"url":"interfaces/GetRescueList.html","title":"interface - GetRescueList","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  GetRescueList\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/domain.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        link\n                                \n                                \n                                        response\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        link\n                                    \n                                \n                                \n                                    \n                                        link:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        response\n                                    \n                                \n                                \n                                    \n                                        response:         APIResponse\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         APIResponse\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { HttpStatus } from '@nestjs/common'\n\nexport type Results =\n    | GetAppLaunchData\n    | GetUserProfile\n    | GetUserPosts\n    | GetComments\n    | GetRescueList\n    | GetFollowers\n    | GetFollowing\n\nexport type APIError = Error | string | null\n\nexport interface Result {\n    data: T\n    error?: APIError\n    message?: string | string[]\n    statusCode: HttpStatus\n}\n\nexport interface APIResponse {\n    data: T\n    error?: APIError\n    message?: string | string[]\n    statusCode: HttpStatus\n\n    count?: number\n    page?: number\n    pageCount?: number\n    total?: number\n}\n\nexport interface GetAppLaunchData {\n    link: 'api:/'\n    response: APIResponse\n}\n\nexport interface GetUserProfile {\n    link: 'api:v1/user/getUserProfile?userId=25'\n    response: APIResponse\n}\n\nexport interface GetUserPosts {\n    link: 'api:v1/user/getUserPosts?pageNo=0&pageSize=25'\n    response: APIResponse\n}\n\nexport interface GetRescueList {\n    link: 'api:v1/rescue/getRescueList?pageNo=0&pageSize=10&status=pending|inProgress|completed|nearest'\n    response: APIResponse\n}\n\nexport interface GetComments {\n    link: 'api:v1/rescue/getComments?pageNo=0&pageSize=10&postId=1230'\n    response: APIResponse\n}\n\nexport interface GetFollowers {\n    link: 'api:v1/rescue/getUserFollowers?userId=1230'\n    response: APIResponse\n}\n\nexport interface GetFollowing {\n    link: 'api:v1/rescue/getUserFollowing?userId=1230'\n    response: APIResponse\n}\n\nexport interface AppLaunchAction {\n    actionId: number\n    action: string\n    isActive: boolean\n    subject?: string\n}\n\nexport interface User {\n    usesId: number\n\n    coverImage: string\n    following: boolean\n    gender: string\n    isOwnProfile: number\n    isRescuer: boolean\n    latitude: number\n    longitude: number\n    numberOfFollowers: number\n    numberOfFollowing: number\n    numberOfPosts: number\n    numberOfRescuesCompleted: number\n    numberOfRescuesCreated: number\n    numberOfRescuesInProgress: number\n    profileImage: string\n    rescuer: boolean\n    userAddress: string\n    userContacts: string\n    userEmail: string\n    userName: string\n    badge: {\n        badgeId: number\n        badgeName: string\n        badgeDescription: string\n        recuesCompletionNeeded: number\n    }\n    setting: {\n        showMyContacts: boolean\n        getNotifications: boolean\n    }\n}\n\nexport interface PostType {\n    postTypeId: number\n    postType: string\n}\n\nexport interface PostedByUser {\n    usesId: number\n    badgeName: string\n    following: boolean\n    profileImage: string\n    rescuer: boolean\n    userName: string\n}\n\nexport interface UserPost {\n    postId: number\n    commentsCount: number\n    isUserReactedToPost: boolean\n    ownPage: boolean\n    postBy: PostedByUser\n    postImage: string\n    postTime: string\n    postType: PostType\n    postVideo: string\n    reactionsCount: number\n    timeAgo: string\n\n    adCorporateLogoUrl: string | null\n    corporateDescription: string | null\n    corporateName: string | null\n}\n\nexport interface UserPosts {\n    isRecent: boolean\n    feed: UserPost[]\n}\n\nexport interface Rescues {\n    rescueId: number\n    animalImageUrl: string\n    distance: number\n    distanceAway: string\n    emergencyType: string\n    postedBy: string\n    postedMinAgo: string\n    rescueDate: Date\n    rescuedPetName: string\n    rescueLocality: string\n    rescuers: {\n        contact: number\n        name: string\n        profileId: number\n        profileImageUrl: string\n        rescues: boolean\n        showMyNumber: boolean\n    }\n    rescueStatus: string\n    viewsCont: number\n}\n\nexport interface RescueLists {\n    rescues: Rescues[]\n}\n\nexport interface Comment {\n    commentId: number\n    comment: string\n    commentedUseName: string\n    commentedUserId: number\n    timeAgo: string\n}\n\nexport interface Comments {\n    comments: Comment[]\n}\n\nexport interface Follower {\n    userId: number\n    userName: string\n    profileImage: string\n    areYouFollowing: boolean\n    showRemoveOption: boolean\n}\n\nexport interface Following extends Follower {}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/GetUserPosts.html":{"url":"interfaces/GetUserPosts.html","title":"interface - GetUserPosts","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  GetUserPosts\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/domain.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        link\n                                \n                                \n                                        response\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        link\n                                    \n                                \n                                \n                                    \n                                        link:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        response\n                                    \n                                \n                                \n                                    \n                                        response:     APIResponse\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     APIResponse\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { HttpStatus } from '@nestjs/common'\n\nexport type Results =\n    | GetAppLaunchData\n    | GetUserProfile\n    | GetUserPosts\n    | GetComments\n    | GetRescueList\n    | GetFollowers\n    | GetFollowing\n\nexport type APIError = Error | string | null\n\nexport interface Result {\n    data: T\n    error?: APIError\n    message?: string | string[]\n    statusCode: HttpStatus\n}\n\nexport interface APIResponse {\n    data: T\n    error?: APIError\n    message?: string | string[]\n    statusCode: HttpStatus\n\n    count?: number\n    page?: number\n    pageCount?: number\n    total?: number\n}\n\nexport interface GetAppLaunchData {\n    link: 'api:/'\n    response: APIResponse\n}\n\nexport interface GetUserProfile {\n    link: 'api:v1/user/getUserProfile?userId=25'\n    response: APIResponse\n}\n\nexport interface GetUserPosts {\n    link: 'api:v1/user/getUserPosts?pageNo=0&pageSize=25'\n    response: APIResponse\n}\n\nexport interface GetRescueList {\n    link: 'api:v1/rescue/getRescueList?pageNo=0&pageSize=10&status=pending|inProgress|completed|nearest'\n    response: APIResponse\n}\n\nexport interface GetComments {\n    link: 'api:v1/rescue/getComments?pageNo=0&pageSize=10&postId=1230'\n    response: APIResponse\n}\n\nexport interface GetFollowers {\n    link: 'api:v1/rescue/getUserFollowers?userId=1230'\n    response: APIResponse\n}\n\nexport interface GetFollowing {\n    link: 'api:v1/rescue/getUserFollowing?userId=1230'\n    response: APIResponse\n}\n\nexport interface AppLaunchAction {\n    actionId: number\n    action: string\n    isActive: boolean\n    subject?: string\n}\n\nexport interface User {\n    usesId: number\n\n    coverImage: string\n    following: boolean\n    gender: string\n    isOwnProfile: number\n    isRescuer: boolean\n    latitude: number\n    longitude: number\n    numberOfFollowers: number\n    numberOfFollowing: number\n    numberOfPosts: number\n    numberOfRescuesCompleted: number\n    numberOfRescuesCreated: number\n    numberOfRescuesInProgress: number\n    profileImage: string\n    rescuer: boolean\n    userAddress: string\n    userContacts: string\n    userEmail: string\n    userName: string\n    badge: {\n        badgeId: number\n        badgeName: string\n        badgeDescription: string\n        recuesCompletionNeeded: number\n    }\n    setting: {\n        showMyContacts: boolean\n        getNotifications: boolean\n    }\n}\n\nexport interface PostType {\n    postTypeId: number\n    postType: string\n}\n\nexport interface PostedByUser {\n    usesId: number\n    badgeName: string\n    following: boolean\n    profileImage: string\n    rescuer: boolean\n    userName: string\n}\n\nexport interface UserPost {\n    postId: number\n    commentsCount: number\n    isUserReactedToPost: boolean\n    ownPage: boolean\n    postBy: PostedByUser\n    postImage: string\n    postTime: string\n    postType: PostType\n    postVideo: string\n    reactionsCount: number\n    timeAgo: string\n\n    adCorporateLogoUrl: string | null\n    corporateDescription: string | null\n    corporateName: string | null\n}\n\nexport interface UserPosts {\n    isRecent: boolean\n    feed: UserPost[]\n}\n\nexport interface Rescues {\n    rescueId: number\n    animalImageUrl: string\n    distance: number\n    distanceAway: string\n    emergencyType: string\n    postedBy: string\n    postedMinAgo: string\n    rescueDate: Date\n    rescuedPetName: string\n    rescueLocality: string\n    rescuers: {\n        contact: number\n        name: string\n        profileId: number\n        profileImageUrl: string\n        rescues: boolean\n        showMyNumber: boolean\n    }\n    rescueStatus: string\n    viewsCont: number\n}\n\nexport interface RescueLists {\n    rescues: Rescues[]\n}\n\nexport interface Comment {\n    commentId: number\n    comment: string\n    commentedUseName: string\n    commentedUserId: number\n    timeAgo: string\n}\n\nexport interface Comments {\n    comments: Comment[]\n}\n\nexport interface Follower {\n    userId: number\n    userName: string\n    profileImage: string\n    areYouFollowing: boolean\n    showRemoveOption: boolean\n}\n\nexport interface Following extends Follower {}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/GetUserProfile.html":{"url":"interfaces/GetUserProfile.html","title":"interface - GetUserProfile","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  GetUserProfile\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/domain.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        link\n                                \n                                \n                                        response\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        link\n                                    \n                                \n                                \n                                    \n                                        link:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        response\n                                    \n                                \n                                \n                                    \n                                        response:     APIResponse\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     APIResponse\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { HttpStatus } from '@nestjs/common'\n\nexport type Results =\n    | GetAppLaunchData\n    | GetUserProfile\n    | GetUserPosts\n    | GetComments\n    | GetRescueList\n    | GetFollowers\n    | GetFollowing\n\nexport type APIError = Error | string | null\n\nexport interface Result {\n    data: T\n    error?: APIError\n    message?: string | string[]\n    statusCode: HttpStatus\n}\n\nexport interface APIResponse {\n    data: T\n    error?: APIError\n    message?: string | string[]\n    statusCode: HttpStatus\n\n    count?: number\n    page?: number\n    pageCount?: number\n    total?: number\n}\n\nexport interface GetAppLaunchData {\n    link: 'api:/'\n    response: APIResponse\n}\n\nexport interface GetUserProfile {\n    link: 'api:v1/user/getUserProfile?userId=25'\n    response: APIResponse\n}\n\nexport interface GetUserPosts {\n    link: 'api:v1/user/getUserPosts?pageNo=0&pageSize=25'\n    response: APIResponse\n}\n\nexport interface GetRescueList {\n    link: 'api:v1/rescue/getRescueList?pageNo=0&pageSize=10&status=pending|inProgress|completed|nearest'\n    response: APIResponse\n}\n\nexport interface GetComments {\n    link: 'api:v1/rescue/getComments?pageNo=0&pageSize=10&postId=1230'\n    response: APIResponse\n}\n\nexport interface GetFollowers {\n    link: 'api:v1/rescue/getUserFollowers?userId=1230'\n    response: APIResponse\n}\n\nexport interface GetFollowing {\n    link: 'api:v1/rescue/getUserFollowing?userId=1230'\n    response: APIResponse\n}\n\nexport interface AppLaunchAction {\n    actionId: number\n    action: string\n    isActive: boolean\n    subject?: string\n}\n\nexport interface User {\n    usesId: number\n\n    coverImage: string\n    following: boolean\n    gender: string\n    isOwnProfile: number\n    isRescuer: boolean\n    latitude: number\n    longitude: number\n    numberOfFollowers: number\n    numberOfFollowing: number\n    numberOfPosts: number\n    numberOfRescuesCompleted: number\n    numberOfRescuesCreated: number\n    numberOfRescuesInProgress: number\n    profileImage: string\n    rescuer: boolean\n    userAddress: string\n    userContacts: string\n    userEmail: string\n    userName: string\n    badge: {\n        badgeId: number\n        badgeName: string\n        badgeDescription: string\n        recuesCompletionNeeded: number\n    }\n    setting: {\n        showMyContacts: boolean\n        getNotifications: boolean\n    }\n}\n\nexport interface PostType {\n    postTypeId: number\n    postType: string\n}\n\nexport interface PostedByUser {\n    usesId: number\n    badgeName: string\n    following: boolean\n    profileImage: string\n    rescuer: boolean\n    userName: string\n}\n\nexport interface UserPost {\n    postId: number\n    commentsCount: number\n    isUserReactedToPost: boolean\n    ownPage: boolean\n    postBy: PostedByUser\n    postImage: string\n    postTime: string\n    postType: PostType\n    postVideo: string\n    reactionsCount: number\n    timeAgo: string\n\n    adCorporateLogoUrl: string | null\n    corporateDescription: string | null\n    corporateName: string | null\n}\n\nexport interface UserPosts {\n    isRecent: boolean\n    feed: UserPost[]\n}\n\nexport interface Rescues {\n    rescueId: number\n    animalImageUrl: string\n    distance: number\n    distanceAway: string\n    emergencyType: string\n    postedBy: string\n    postedMinAgo: string\n    rescueDate: Date\n    rescuedPetName: string\n    rescueLocality: string\n    rescuers: {\n        contact: number\n        name: string\n        profileId: number\n        profileImageUrl: string\n        rescues: boolean\n        showMyNumber: boolean\n    }\n    rescueStatus: string\n    viewsCont: number\n}\n\nexport interface RescueLists {\n    rescues: Rescues[]\n}\n\nexport interface Comment {\n    commentId: number\n    comment: string\n    commentedUseName: string\n    commentedUserId: number\n    timeAgo: string\n}\n\nexport interface Comments {\n    comments: Comment[]\n}\n\nexport interface Follower {\n    userId: number\n    userName: string\n    profileImage: string\n    areYouFollowing: boolean\n    showRemoveOption: boolean\n}\n\nexport interface Following extends Follower {}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/HealthController.html":{"url":"controllers/HealthController.html","title":"controller - HealthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  HealthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/health/health.controller.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                check\n                            \n                            \n                                collectOsMetrics\n                            \n                            \n                                onApplicationShutdown\n                            \n                            \n                                onModuleInit\n                            \n                            \n                                sse\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            check\n                        \n                        \n                    \n                \n            \n            \n                \ncheck()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@HttpCode(200)@HealthCheck()\n                \n            \n\n            \n                \n                    Defined in src/health/health.controller.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            collectOsMetrics\n                        \n                        \n                    \n                \n            \n            \n                \ncollectOsMetrics(metrics: literal type)\n                \n            \n\n\n            \n                \n                    Defined in src/health/health.controller.ts:62\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    metrics\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onApplicationShutdown\n                        \n                        \n                    \n                \n            \n            \n                \nonApplicationShutdown(signal?: string)\n                \n            \n\n\n            \n                \n                    Defined in src/health/health.controller.ts:88\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    signal\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onModuleInit\n                        \n                        \n                    \n                \n            \n            \n                \nonModuleInit()\n                \n            \n\n\n            \n                \n                    Defined in src/health/health.controller.ts:82\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            sse\n                        \n                        \n                    \n                \n            \n            \n                \nsse()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Sse('sse')\n                \n            \n\n            \n                \n                    Defined in src/health/health.controller.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        /* eslint-disable no-use-before-define */\nimport {\n    Controller,\n    Get,\n    HttpCode,\n    OnApplicationShutdown,\n    OnModuleInit,\n    MessageEvent,\n    Sse,\n} from '@nestjs/common'\nimport { ConfigService } from '@nestjs/config'\nimport { ApiTags } from '@nestjs/swagger'\nimport {\n    DNSHealthIndicator,\n    HealthCheck,\n    HealthCheckService,\n} from '@nestjs/terminus'\n\nimport * as os from 'os'\n// @ts-ignore\nimport * as pidusage from 'pidusage'\nimport { interval, Observable } from 'rxjs'\nimport { map } from 'rxjs/operators'\n\n@ApiTags(HealthController.name)\n@Controller(HealthController.path)\nexport class HealthController implements OnModuleInit, OnApplicationShutdown {\n    static path = 'health'\n\n    constructor(\n        readonly health: HealthCheckService,\n        readonly dns: DNSHealthIndicator,\n        readonly config: ConfigService,\n    ) {}\n\n    @Sse('sse')\n    sse(): Observable {\n        const metrics = {\n            os: {},\n            interval: 1, // Every 1 second\n            retention: 60, // Keep 60 datapoints in memory\n        }\n\n        return interval(5000).pipe(\n            map((_) => {\n                this.collectOsMetrics(metrics)\n\n                return { data: metrics }\n            }),\n        )\n    }\n\n    @Get()\n    @HttpCode(200)\n    @HealthCheck()\n    check() {\n        return this.health.check([\n            () => this.dns.pingCheck('nestjs-docs', 'https://docs.nestjs.com'),\n        ])\n    }\n\n    collectOsMetrics(metrics: { os: any; interval?: number; retention?: number }) {\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-call\n        pidusage(\n            process.pid,\n            (\n                err: any,\n                stat: { memory: number; timestamp: number; load: number[] },\n            ) => {\n                if (err) return\n\n                // Convert from B to MB\n                stat.memory = stat.memory / 1024 / 1024 // eslint-disable-line @typescript-eslint/no-unsafe-member-access,no-param-reassign\n                stat.timestamp = Date.now() // eslint-disable-line @typescript-eslint/no-unsafe-member-access,no-param-reassign\n                stat.load = os.loadavg() // eslint-disable-line @typescript-eslint/no-unsafe-member-access,no-param-reassign\n\n                metrics.os = stat // eslint-disable-line @typescript-eslint/no-unsafe-member-access,no-param-reassign\n            },\n        )\n    }\n\n    onModuleInit() {\n        console.log(`ModuleInit - HealthController has been initialized.`, {\n            config: this.config.get('NODE_ENV'),\n        })\n    }\n\n    onApplicationShutdown(signal?: string) {\n        console.log(\n            // eslint-disable-next-line @typescript-eslint/restrict-template-expressions\n            `ApplicationShutdown - HealthController has been shutdown with ${signal} signal`,\n        )\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IBaseModel.html":{"url":"interfaces/IBaseModel.html","title":"interface - IBaseModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IBaseModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/database/models/base.model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        created_at\n                                \n                                \n                                            Optional\n                                        deleted_at\n                                \n                                \n                                        id\n                                \n                                \n                                        updated_at\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        created_at\n                                    \n                                \n                                \n                                    \n                                        created_at:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        deleted_at\n                                    \n                                \n                                \n                                    \n                                        deleted_at:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        updated_at\n                                    \n                                \n                                \n                                    \n                                        updated_at:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import Objection, {\n    raw,\n    mixin,\n    Model,\n    ModelOptions,\n    QueryContext,\n    RelationExpression,\n} from 'objection'\nimport { DBErrors } from 'objection-db-errors'\nimport visibilityPlugin from 'objection-visibility'\n\nimport { CustomQueryBuilder } from './helpers'\n\nexport interface IBaseModel {\n    id: number\n    created_at: any\n    updated_at: any\n    deleted_at?: any\n}\n\nexport class BaseModel\n    extends mixin(Model, [visibilityPlugin, DBErrors])\n    implements IBaseModel {\n    // hidden fields to filter from query result\n    static hidden = [\n        'salt',\n        'password',\n        'created_at',\n        'updated_at',\n        // 'deleted_at'\n    ]\n\n    // QueryBuilderType!: CustomQueryBuilder // custom query builder for pagination\n\n    static QueryBuilder = CustomQueryBuilder\n\n    id!: number\n\n    created_at: any\n\n    updated_at: any\n\n    deleted_at?: any | null\n\n    // fetch data with relation mapping\n    // eslint-disable-next-line @typescript-eslint/ban-types\n    async fetchRelation(\n        expression: string | Record,\n        options: Objection.FetchGraphOptions,\n    ) {\n        if (typeof expression === 'string' && expression.toString() in this) {\n            // @ts-ignore\n            if (this[expression.toString()]) return this\n        }\n\n        await this.$fetchGraph(expression, options)\n        return this\n    }\n\n    async $beforeUpdate(opt: ModelOptions, queryContext: QueryContext) {\n        await super.$beforeUpdate(opt, queryContext)\n\n        this.updated_at = raw('CURRENT_TIMESTAMP') // new Date().toISOString() // fn.now()\n    }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ICrudService.html":{"url":"interfaces/ICrudService.html","title":"interface - ICrudService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ICrudService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/base/crud/crud.service.interface.ts\n        \n\n            \n                Description\n            \n            \n                Interface to enforce on the CRUD services\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    create\n                                \n                                \n                                    findAll\n                                \n                                \n                                    findOneByEmail\n                                \n                                \n                                    findOneById\n                                \n                                \n                                    paginatedFindAll\n                                \n                                \n                                    remove\n                                \n                                \n                                    update\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            create\n                        \n                        \n                    \n                \n            \n            \n                \ncreate(data: T)\n                \n            \n\n\n            \n                \n                    Defined in src/base/crud/crud.service.interface.ts:37\n                \n            \n\n\n            \n                \n                    create\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            findAll\n                        \n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n\n            \n                \n                    Defined in src/base/crud/crud.service.interface.ts:10\n                \n            \n\n\n            \n                \n                    findAll\n\n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            findOneByEmail\n                        \n                        \n                    \n                \n            \n            \n                \nfindOneByEmail(email: string)\n                \n            \n\n\n            \n                \n                    Defined in src/base/crud/crud.service.interface.ts:20\n                \n            \n\n\n            \n                \n                    findOneByEmail\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            findOneById\n                        \n                        \n                    \n                \n            \n            \n                \nfindOneById(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/base/crud/crud.service.interface.ts:15\n                \n            \n\n\n            \n                \n                    findOneById\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            paginatedFindAll\n                        \n                        \n                    \n                \n            \n            \n                \npaginatedFindAll(paginationParams?: PaginationParams)\n                \n            \n\n\n            \n                \n                    Defined in src/base/crud/crud.service.interface.ts:25\n                \n            \n\n\n            \n                \n                    paginatedFindAll\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    paginationParams\n                                    \n                                                PaginationParams\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            remove\n                        \n                        \n                    \n                \n            \n            \n                \nremove(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/base/crud/crud.service.interface.ts:32\n                \n            \n\n\n            \n                \n                    remove\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            update\n                        \n                        \n                    \n                \n            \n            \n                \nupdate(id: number, data: Partial)\n                \n            \n\n\n            \n                \n                    Defined in src/base/crud/crud.service.interface.ts:42\n                \n            \n\n\n            \n                \n                    update\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    data\n                                    \n                                            Partial\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { IPaginationResult, PaginationParams } from './pagination'\n\n/**\n * Interface to enforce on the CRUD services\n */\nexport interface ICrudService {\n    /**\n     * findAll\n     */\n    findAll(): Promise\n\n    /**\n     * findOneById\n     */\n    findOneById(id: number): Promise\n\n    /**\n     * findOneByEmail\n     */\n    findOneByEmail(email: string): Promise\n\n    /**\n     * paginatedFindAll\n     */\n    paginatedFindAll(\n        paginationParams?: PaginationParams,\n    ): Promise>\n\n    /**\n     * remove\n     */\n    remove(id: number): Promise\n\n    /**\n     * create\n     */\n    create(data: T): Promise\n\n    /**\n     * update\n     */\n    update(id: number, data: Partial): Promise\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IPaginationResult.html":{"url":"interfaces/IPaginationResult.html","title":"interface - IPaginationResult","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IPaginationResult\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/base/crud/pagination.ts\n        \n\n            \n                Description\n            \n            \n                Generic pagination response interface\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        data\n                                \n                                \n                                            Optional\n                                        error\n                                \n                                \n                                            Optional\n                                        message\n                                \n                                \n                                        paging\n                                \n                                \n                                        statusCode\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                    \n                                \n                                \n                                    \n                                        data:     T[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     T[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        error\n                                    \n                                \n                                \n                                    \n                                        error:         APIError\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         APIError\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        message\n                                    \n                                \n                                \n                                    \n                                        message:     string | string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | string[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        paging\n                                    \n                                \n                                \n                                    \n                                        paging:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        statusCode\n                                    \n                                \n                                \n                                    \n                                        statusCode:     HttpStatus\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     HttpStatus\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { HttpStatus } from '@nestjs/common'\nimport { ApiPropertyOptional } from '@nestjs/swagger'\n\nimport { Transform } from 'class-transformer'\nimport { IsOptional, Min } from 'class-validator'\n\nimport { APIError } from '../../domain'\n\nexport enum OrderType {\n    DESC = 'DESC',\n    ASC = 'ASC',\n}\n\n/**\n * Describes generic pagination params\n */\nexport abstract class PaginationParams {\n    @ApiPropertyOptional({ type: Number, minimum: 0 })\n    @IsOptional()\n    @Min(0)\n    @Transform((val: string) => parseInt(val, 10))\n    readonly page?: number // = 0\n\n    @ApiPropertyOptional({ type: Number, minimum: 0 })\n    @IsOptional()\n    @Min(0)\n    @Transform((val: string) => parseInt(val, 10))\n    readonly pageSize?: number // = 10\n\n    @ApiPropertyOptional()\n    @IsOptional()\n    abstract readonly order?: { [P in keyof T]?: OrderType }\n}\n\n/**\n * Generic pagination response interface\n */\nexport interface IPaginationResult {\n    // Items included in the current listing\n    readonly data: T[]\n\n    // Paging metadata\n    readonly paging: {\n        pageSize: number\n        page: number\n        total: number\n        totalPages: number\n    }\n\n    error?: APIError\n    message?: string | string[]\n    statusCode: HttpStatus\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ITag.html":{"url":"interfaces/ITag.html","title":"interface - ITag","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ITag\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/tags/tag.model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        name\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { PartialType } from '@nestjs/swagger'\n\nimport { IsNotEmpty, IsString, MaxLength, MinLength } from 'class-validator'\nimport type { JSONSchema, ModelObject, PartialModelObject } from 'objection'\n\nimport { BaseModel } from '../database/models/base.model'\n\ninterface ITag {\n    name: string\n}\n\nexport class Tag extends BaseModel implements ITag {\n    static tableName = 'tags'\n\n    name!: string\n\n    // JSON schema is not the database schema! Nothing is generated based on this.\n    // This is only used for validation. Whenever a model instance is created it is checked against this schema.\n    static jsonSchema: JSONSchema = {\n        type: 'object',\n        required: ['name'],\n        properties: {\n            id: { type: 'integer' },\n            name: { type: 'string', minLength: 2, maxLength: 255 },\n        },\n    }\n}\n\n// The `ModelObject` generic gives you a clean interface that can be used on the frontend, without any of the objection Model class properties or methods.\nexport type TagShape = ModelObject\nexport type PartialTagShape = PartialModelObject\n\nexport class CreateTagsDto implements ITag {\n    @IsString()\n    @IsNotEmpty()\n    @MinLength(2)\n    @MaxLength(36)\n    name!: string\n}\n\nexport class UpdateTagsDto extends PartialType(CreateTagsDto) {}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ITryRequest.html":{"url":"interfaces/ITryRequest.html","title":"interface - ITryRequest","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ITryRequest\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/base/crud/try-request.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        error\n                                \n                                \n                                            Optional\n                                        record\n                                \n                                \n                                        success\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        error\n                                    \n                                \n                                \n                                    \n                                        error:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        record\n                                    \n                                \n                                \n                                    \n                                        record:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        success\n                                    \n                                \n                                \n                                    \n                                        success:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface ITryRequest {\n    success: boolean\n    record?: any\n    error?: any\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IUser.html":{"url":"interfaces/IUser.html","title":"interface - IUser","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IUser\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/user.model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        email\n                                \n                                \n                                            Optional\n                                        firstName\n                                \n                                \n                                        isActive\n                                \n                                \n                                            Optional\n                                        lastName\n                                \n                                \n                                        password\n                                \n                                \n                                        username\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        firstName\n                                    \n                                \n                                \n                                    \n                                        firstName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isActive\n                                    \n                                \n                                \n                                    \n                                        isActive:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lastName\n                                    \n                                \n                                \n                                    \n                                        lastName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                    \n                                \n                                \n                                    \n                                        password:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        username\n                                    \n                                \n                                \n                                    \n                                        username:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { PartialType } from '@nestjs/swagger'\n\nimport * as bcrypt from 'bcrypt'\nimport {\n    IsString,\n    MinLength,\n    IsNotEmpty,\n    MaxLength,\n    IsEmail,\n    IsBoolean,\n} from 'class-validator'\nimport type { JSONSchema, Modifiers, PartialModelObject } from 'objection'\nimport { ModelObject, QueryContext } from 'objection'\n\nimport { BaseModel } from '../database/models/base.model'\n\ninterface IUser {\n    username: string\n    email: string\n    firstName?: string\n    lastName?: string\n    isActive: boolean\n    password: string\n}\n\nexport class User extends BaseModel implements IUser {\n    static tableName = 'users'\n\n    username!: string\n\n    email!: string\n\n    firstName?: string\n\n    lastName?: string\n\n    isActive!: boolean\n\n    password!: string\n\n    // JSON schema is not the database schema! Nothing is generated based on this.\n    // This is only used for validation. Whenever a model instance is created it is checked against this schema.\n    static jsonSchema: JSONSchema = {\n        type: 'object',\n        required: ['username', 'email', 'password'],\n        properties: {\n            id: { type: 'integer', readOnly: true },\n            username: { type: 'string', minLength: 3, maxLength: 255 },\n            email: {\n                type: 'string',\n                minLength: 3,\n                maxLength: 255,\n                format: 'email',\n            },\n            password: { type: 'string', minLength: 8, maxLength: 255 },\n            firstName: { type: 'string', minLength: 1, maxLength: 255 },\n            lastName: { type: 'string', minLength: 1, maxLength: 255 },\n            isActive: { type: 'boolean' },\n        },\n    }\n\n    // Modifiers are reusable query snippets that can be used in various places.\n    static modifiers: Modifiers = {\n        // Our example modifier is a a semi-dumb fuzzy name match. We split the name into pieces using whitespace\n        // and then try to partially match each of those pieces to both the `firstName` and the `lastName` fields.\n\n        searchByName(query, name: string) {\n            // This `where` simply creates parentheses so that other `where` statements don't get mixed with the these.\n\n            query.where((q) => {\n                for (const namePart of name.trim().split(/\\s+/)) {\n                    for (const column of ['firstName', 'lastName']) {\n                        q.orWhereRaw('lower(??) like ?', [\n                            column,\n                            `${namePart.toLowerCase()}%`,\n                        ])\n                    }\n                }\n            })\n        },\n    }\n\n    async hashPassword(password: string) {\n        const hash = await bcrypt.hash(password, 12)\n        return hash\n    }\n\n    async $beforeInsert(queryContext: QueryContext) {\n        await super.$beforeInsert(queryContext)\n        this.password = await this.hashPassword(this.password)\n    }\n\n    /*\n    async $beforeUpdate(opt: ModelOptions, queryContext: QueryContext) {\n        await super.$beforeUpdate(opt, queryContext)\n        this.password = await this.hashPassword(this.password)\n    }\n    */\n}\n\n// The `ModelObject` generic gives you a clean interface that can be used on the frontend, without any of the objection Model class properties or methods.\nexport type UserShape = ModelObject\nexport type PartialUserShape = PartialModelObject\n\nexport class CreateUserDto implements IUser {\n    @IsString()\n    @IsNotEmpty()\n    @MinLength(2)\n    @MaxLength(36)\n    username!: string\n\n    @IsEmail()\n    @IsNotEmpty()\n    @MinLength(2)\n    email!: string\n\n    @IsString()\n    @IsNotEmpty()\n    @MinLength(8)\n    password!: string\n\n    @IsString()\n    @IsNotEmpty()\n    @MinLength(2)\n    firstName?: string\n\n    @IsString()\n    @IsNotEmpty()\n    @MinLength(2)\n    lastName?: string\n\n    @IsBoolean()\n    isActive!: boolean\n}\n\nexport class UpdateUserDto extends PartialType(CreateUserDto) {}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtStrategy.html":{"url":"injectables/JwtStrategy.html","title":"injectable - JwtStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  JwtStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/jwt.strategy.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(configService: ConfigService, userService: UsersService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/jwt.strategy.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            validate\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    validate(payload: TokenPayload)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/jwt.strategy.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                                TokenPayload\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, UnauthorizedException } from '@nestjs/common'\nimport { ConfigService } from '@nestjs/config'\nimport { PassportStrategy } from '@nestjs/passport'\n\nimport { ExtractJwt, Strategy } from 'passport-jwt'\n\nimport { UsersService } from '../users/users.service'\nimport TokenPayload from './tokenPayload.interface'\n\n@Injectable()\nexport class JwtStrategy extends PassportStrategy(Strategy) {\n    constructor(\n        readonly configService: ConfigService,\n        readonly userService: UsersService,\n    ) {\n        super({\n            ignoreExpiration: true,\n            secretOrKey: configService.get('JWTKEY'),\n            jwtFromRequest: ExtractJwt.fromAuthHeaderAsBearerToken(),\n        })\n    }\n\n    async validate(payload: TokenPayload) {\n        if (!payload.email) return Promise.reject(new UnauthorizedException())\n\n        const user = await this.userService.findOneByEmail(payload.email) // eslint-disable-line @typescript-eslint/no-unsafe-member-access\n\n        if (!user)\n            return Promise.reject(\n                new UnauthorizedException(\n                    'You are not authorized to perform the operation',\n                ),\n            )\n\n        return payload // eslint-disable-line @typescript-eslint/no-unsafe-return\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LocalStrategy.html":{"url":"injectables/LocalStrategy.html","title":"injectable - LocalStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  LocalStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/local.strategy.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                passwordField\n                            \n                            \n                                    Static\n                                usernameField\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/local.strategy.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            validate\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    validate(email: string, password: string)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/local.strategy.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            passwordField\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'password'\n                        \n                    \n                        \n                            \n                                    Defined in src/auth/local.strategy.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            usernameField\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'email'\n                        \n                    \n                        \n                            \n                                    Defined in src/auth/local.strategy.ts:10\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable, UnauthorizedException } from '@nestjs/common'\nimport { PassportStrategy } from '@nestjs/passport'\n\nimport { Strategy } from 'passport-local'\n\nimport { AuthService } from './auth.service'\n\n@Injectable()\nexport class LocalStrategy extends PassportStrategy(Strategy) {\n    static usernameField = 'email'\n\n    static passwordField = 'password'\n\n    constructor(readonly authService: AuthService) {\n        super({\n            usernameField: LocalStrategy.usernameField,\n            passwordField: LocalStrategy.passwordField,\n            session: false,\n        })\n    }\n\n    async validate(email: string, password: string) {\n        if (!email || !password)\n            return Promise.reject(\n                new UnauthorizedException('Credentials cannot be empty'),\n            )\n\n        return this.authService.validateUser(email, password)\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoginCredsDto.html":{"url":"classes/LoginCredsDto.html","title":"class - LoginCredsDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoginCredsDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.controller.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                email\n                            \n                            \n                                    Readonly\n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            email\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({example: 'admin@demo.com'})@IsNotEmpty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/auth/auth.controller.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            password\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({example: '12345678'})@IsNotEmpty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/auth/auth.controller.ts:19\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Body, Controller, HttpStatus, Post, Req, UseGuards } from '@nestjs/common'\nimport { AuthGuard } from '@nestjs/passport'\nimport { ApiProperty, ApiTags } from '@nestjs/swagger'\n\nimport { IsNotEmpty } from 'class-validator'\nimport type { Request } from 'express'\n\nimport { UsersService } from '../users/users.service'\nimport { AuthService } from './auth.service'\n\nexport class LoginCredsDto {\n    @ApiProperty({ example: 'admin@demo.com' })\n    @IsNotEmpty()\n    readonly email!: string\n\n    @ApiProperty({ example: '12345678' })\n    @IsNotEmpty()\n    readonly password!: string\n}\n\n@Controller(AuthController.path)\n@ApiTags(AuthController.name)\nexport class AuthController {\n    static path = 'auth'\n\n    constructor(\n        readonly authService: AuthService,\n        readonly userService: UsersService,\n    ) {}\n\n    @UseGuards(AuthGuard('local'))\n    @Post('login')\n    async login(\n        @Req() req: Request,\n        @Body() loginCreds: LoginCredsDto,\n    ): Promise {\n        const { user } = req\n        const { email, password } = loginCreds // eslint-disable-line @typescript-eslint/no-unused-vars\n\n        const data = await this.authService.login(user)\n\n        return {\n            data,\n            statusCode: HttpStatus.OK,\n        }\n    }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PaginationParams.html":{"url":"classes/PaginationParams.html","title":"class - PaginationParams","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PaginationParams\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/base/crud/pagination.ts\n        \n\n            \n                Description\n            \n            \n                Describes generic pagination params\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Abstract\n                                    Readonly\n                                    Optional\n                                order\n                            \n                            \n                                    Readonly\n                                    Optional\n                                page\n                            \n                            \n                                    Readonly\n                                    Optional\n                                pageSize\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Abstract\n                                Readonly\n                                Optional\n                            order\n                            \n                        \n                    \n                \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiPropertyOptional()@IsOptional()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/base/crud/pagination.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                                Optional\n                            page\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiPropertyOptional({type: Number, minimum: 0})@IsOptional()@Min(0)@Transform(undefined)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/base/crud/pagination.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                                Optional\n                            pageSize\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiPropertyOptional({type: Number, minimum: 0})@IsOptional()@Min(0)@Transform(undefined)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/base/crud/pagination.ts:28\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { HttpStatus } from '@nestjs/common'\nimport { ApiPropertyOptional } from '@nestjs/swagger'\n\nimport { Transform } from 'class-transformer'\nimport { IsOptional, Min } from 'class-validator'\n\nimport { APIError } from '../../domain'\n\nexport enum OrderType {\n    DESC = 'DESC',\n    ASC = 'ASC',\n}\n\n/**\n * Describes generic pagination params\n */\nexport abstract class PaginationParams {\n    @ApiPropertyOptional({ type: Number, minimum: 0 })\n    @IsOptional()\n    @Min(0)\n    @Transform((val: string) => parseInt(val, 10))\n    readonly page?: number // = 0\n\n    @ApiPropertyOptional({ type: Number, minimum: 0 })\n    @IsOptional()\n    @Min(0)\n    @Transform((val: string) => parseInt(val, 10))\n    readonly pageSize?: number // = 10\n\n    @ApiPropertyOptional()\n    @IsOptional()\n    abstract readonly order?: { [P in keyof T]?: OrderType }\n}\n\n/**\n * Generic pagination response interface\n */\nexport interface IPaginationResult {\n    // Items included in the current listing\n    readonly data: T[]\n\n    // Paging metadata\n    readonly paging: {\n        pageSize: number\n        page: number\n        total: number\n        totalPages: number\n    }\n\n    error?: APIError\n    message?: string | string[]\n    statusCode: HttpStatus\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ParamOption.html":{"url":"interfaces/ParamOption.html","title":"interface - ParamOption","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ParamOption\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/base/swagger-gen/utils/other.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        disabled\n                                \n                                \n                                            Optional\n                                        enum\n                                \n                                \n                                            Optional\n                                        field\n                                \n                                \n                                            Optional\n                                        primary\n                                \n                                \n                                            Optional\n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        disabled\n                                    \n                                \n                                \n                                    \n                                        disabled:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        enum\n                                    \n                                \n                                \n                                    \n                                        enum:         SwaggerEnumType\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         SwaggerEnumType\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        field\n                                    \n                                \n                                \n                                    \n                                        field:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        primary\n                                    \n                                \n                                \n                                    \n                                        primary:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:     \"number\" | \"string\" | \"uuid\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"number\" | \"string\" | \"uuid\"\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { RequestMethod, ValidationPipeOptions } from '@nestjs/common'\nimport { SwaggerEnumType } from '@nestjs/swagger/dist/types/swagger-enum.type'\n\nexport declare type BaseRouteName =\n    | 'getManyBase'\n    | 'getOneBase'\n    | 'createOneBase'\n    | 'createManyBase'\n    | 'updateOneBase'\n    | 'replaceOneBase'\n    | 'deleteOneBase'\n    | 'getOne'\n\nexport interface BaseRoute {\n    name: BaseRouteName\n    path: string\n    method: RequestMethod\n    enable: boolean\n    override: boolean\n    withParams: boolean\n}\n\nexport interface GetManyDefaultResponse {\n    data: T[]\n    count: number\n    total: number\n    page: number\n    pageCount: number\n}\n\nexport interface ParamOption {\n    field?: string\n    type?: 'number' | 'string' | 'uuid'\n    enum?: SwaggerEnumType\n    primary?: boolean\n    disabled?: boolean\n}\n\nexport interface ParamsOptions {\n    [key: string]: ParamOption\n}\n\nexport interface CrudOptions {\n    model: {\n        type: { name: string }\n    }\n    dto?: {}\n    routes?: {\n        deleteOneBase?: { returnDeleted?: boolean }\n    }\n    validation?: ValidationPipeOptions | false\n    params?: ParamsOptions\n    query?: {\n        limit?: number\n        maxLimit?: number\n        cache?: number | false\n        alwaysPaginate?: boolean\n    }\n    serialize?: {\n        getMany?: false | object\n        get?: false | object\n        create?: false | object\n        createMany?: false | object\n        update?: false | object\n        replace?: false | object\n        delete?: false | object\n    }\n}\n\nexport function safeRequire(path: string): T | null {\n    try {\n        // eslint-disable-next-line global-require,@typescript-eslint/no-var-requires,import/no-dynamic-require\n        const pack = require(path)\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-return\n        return pack\n    } catch (_) {\n        return null\n    }\n}\n\nexport const swagger = safeRequire('@nestjs/swagger')\nexport const swaggerConst = safeRequire('@nestjs/swagger/dist/constants')\n\nexport function ApiProperty(options?: any): PropertyDecorator {\n    // eslint-disable-next-line @typescript-eslint/ban-types\n    return (target: object, propertyKey: string | symbol) => {\n        if (swagger) {\n            const ApiPropertyDecorator =\n                // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n                swagger.ApiProperty || swagger.ApiModelProperty\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-call\n            ApiPropertyDecorator(options)(target, propertyKey)\n        }\n    }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ParamsOptions.html":{"url":"interfaces/ParamsOptions.html","title":"interface - ParamsOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ParamsOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/base/swagger-gen/utils/other.ts\n        \n\n\n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: string]:        ParamOption\n\n                    \n                \n                        \n                            \n                                Defined in src/base/swagger-gen/utils/other.ts:40\n                            \n                        \n            \n        \n\n\n    \n\n\n    \n        import { RequestMethod, ValidationPipeOptions } from '@nestjs/common'\nimport { SwaggerEnumType } from '@nestjs/swagger/dist/types/swagger-enum.type'\n\nexport declare type BaseRouteName =\n    | 'getManyBase'\n    | 'getOneBase'\n    | 'createOneBase'\n    | 'createManyBase'\n    | 'updateOneBase'\n    | 'replaceOneBase'\n    | 'deleteOneBase'\n    | 'getOne'\n\nexport interface BaseRoute {\n    name: BaseRouteName\n    path: string\n    method: RequestMethod\n    enable: boolean\n    override: boolean\n    withParams: boolean\n}\n\nexport interface GetManyDefaultResponse {\n    data: T[]\n    count: number\n    total: number\n    page: number\n    pageCount: number\n}\n\nexport interface ParamOption {\n    field?: string\n    type?: 'number' | 'string' | 'uuid'\n    enum?: SwaggerEnumType\n    primary?: boolean\n    disabled?: boolean\n}\n\nexport interface ParamsOptions {\n    [key: string]: ParamOption\n}\n\nexport interface CrudOptions {\n    model: {\n        type: { name: string }\n    }\n    dto?: {}\n    routes?: {\n        deleteOneBase?: { returnDeleted?: boolean }\n    }\n    validation?: ValidationPipeOptions | false\n    params?: ParamsOptions\n    query?: {\n        limit?: number\n        maxLimit?: number\n        cache?: number | false\n        alwaysPaginate?: boolean\n    }\n    serialize?: {\n        getMany?: false | object\n        get?: false | object\n        create?: false | object\n        createMany?: false | object\n        update?: false | object\n        replace?: false | object\n        delete?: false | object\n    }\n}\n\nexport function safeRequire(path: string): T | null {\n    try {\n        // eslint-disable-next-line global-require,@typescript-eslint/no-var-requires,import/no-dynamic-require\n        const pack = require(path)\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-return\n        return pack\n    } catch (_) {\n        return null\n    }\n}\n\nexport const swagger = safeRequire('@nestjs/swagger')\nexport const swaggerConst = safeRequire('@nestjs/swagger/dist/constants')\n\nexport function ApiProperty(options?: any): PropertyDecorator {\n    // eslint-disable-next-line @typescript-eslint/ban-types\n    return (target: object, propertyKey: string | symbol) => {\n        if (swagger) {\n            const ApiPropertyDecorator =\n                // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n                swagger.ApiProperty || swagger.ApiModelProperty\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-call\n            ApiPropertyDecorator(options)(target, propertyKey)\n        }\n    }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PersistedCronService.html":{"url":"injectables/PersistedCronService.html","title":"injectable - PersistedCronService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  PersistedCronService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/cron/persisted-cron.service.ts\n        \n\n            \n                Description\n            \n            \n                Each time the server restarts, this service finds the jobs from the table and restored them\nTODO: make a service to gracefully stop cron jobs on ApplicationShutdown\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                onApplicationBootstrap\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(schedule: SchedulerRegistry)\n                    \n                \n                        \n                            \n                                Defined in src/cron/persisted-cron.service.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        schedule\n                                                  \n                                                        \n                                                                        SchedulerRegistry\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            onApplicationBootstrap\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    onApplicationBootstrap()\n                \n            \n\n\n            \n                \n                    Defined in src/cron/persisted-cron.service.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     {}\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            logger\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Logger(PersistedCronService.name)\n                        \n                    \n                        \n                            \n                                    Defined in src/cron/persisted-cron.service.ts:11\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable, Logger, OnApplicationBootstrap } from '@nestjs/common'\nimport { SchedulerRegistry } from '@nestjs/schedule'\n\n/**\n * Each time the server restarts, this service finds the jobs from the table and restored them\n *\n * TODO: make a service to gracefully stop cron jobs on ApplicationShutdown\n */\n@Injectable()\nexport class PersistedCronService implements OnApplicationBootstrap {\n    logger = new Logger(PersistedCronService.name)\n\n    constructor(readonly schedule: SchedulerRegistry) {}\n\n    // NestJs hook invoked when the app bootstrapped\n    async onApplicationBootstrap() {\n        // TODO: Implement commented out flow\n\n        /*\n        const jobs = await Job.find() // the jobs are all saved in `Job` table.\n\n        jobs.forEach((job) => {\n            const cron = new CronJob(job.time, () => {}) // You can define the handler for each job type\n            this.schedule.addCronJob(job.name, cron)\n            cron.start()\n        })\n        */\n\n        return Promise.resolve()\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PostType.html":{"url":"interfaces/PostType.html","title":"interface - PostType","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  PostType\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/domain.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        postType\n                                \n                                \n                                        postTypeId\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        postType\n                                    \n                                \n                                \n                                    \n                                        postType:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        postTypeId\n                                    \n                                \n                                \n                                    \n                                        postTypeId:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { HttpStatus } from '@nestjs/common'\n\nexport type Results =\n    | GetAppLaunchData\n    | GetUserProfile\n    | GetUserPosts\n    | GetComments\n    | GetRescueList\n    | GetFollowers\n    | GetFollowing\n\nexport type APIError = Error | string | null\n\nexport interface Result {\n    data: T\n    error?: APIError\n    message?: string | string[]\n    statusCode: HttpStatus\n}\n\nexport interface APIResponse {\n    data: T\n    error?: APIError\n    message?: string | string[]\n    statusCode: HttpStatus\n\n    count?: number\n    page?: number\n    pageCount?: number\n    total?: number\n}\n\nexport interface GetAppLaunchData {\n    link: 'api:/'\n    response: APIResponse\n}\n\nexport interface GetUserProfile {\n    link: 'api:v1/user/getUserProfile?userId=25'\n    response: APIResponse\n}\n\nexport interface GetUserPosts {\n    link: 'api:v1/user/getUserPosts?pageNo=0&pageSize=25'\n    response: APIResponse\n}\n\nexport interface GetRescueList {\n    link: 'api:v1/rescue/getRescueList?pageNo=0&pageSize=10&status=pending|inProgress|completed|nearest'\n    response: APIResponse\n}\n\nexport interface GetComments {\n    link: 'api:v1/rescue/getComments?pageNo=0&pageSize=10&postId=1230'\n    response: APIResponse\n}\n\nexport interface GetFollowers {\n    link: 'api:v1/rescue/getUserFollowers?userId=1230'\n    response: APIResponse\n}\n\nexport interface GetFollowing {\n    link: 'api:v1/rescue/getUserFollowing?userId=1230'\n    response: APIResponse\n}\n\nexport interface AppLaunchAction {\n    actionId: number\n    action: string\n    isActive: boolean\n    subject?: string\n}\n\nexport interface User {\n    usesId: number\n\n    coverImage: string\n    following: boolean\n    gender: string\n    isOwnProfile: number\n    isRescuer: boolean\n    latitude: number\n    longitude: number\n    numberOfFollowers: number\n    numberOfFollowing: number\n    numberOfPosts: number\n    numberOfRescuesCompleted: number\n    numberOfRescuesCreated: number\n    numberOfRescuesInProgress: number\n    profileImage: string\n    rescuer: boolean\n    userAddress: string\n    userContacts: string\n    userEmail: string\n    userName: string\n    badge: {\n        badgeId: number\n        badgeName: string\n        badgeDescription: string\n        recuesCompletionNeeded: number\n    }\n    setting: {\n        showMyContacts: boolean\n        getNotifications: boolean\n    }\n}\n\nexport interface PostType {\n    postTypeId: number\n    postType: string\n}\n\nexport interface PostedByUser {\n    usesId: number\n    badgeName: string\n    following: boolean\n    profileImage: string\n    rescuer: boolean\n    userName: string\n}\n\nexport interface UserPost {\n    postId: number\n    commentsCount: number\n    isUserReactedToPost: boolean\n    ownPage: boolean\n    postBy: PostedByUser\n    postImage: string\n    postTime: string\n    postType: PostType\n    postVideo: string\n    reactionsCount: number\n    timeAgo: string\n\n    adCorporateLogoUrl: string | null\n    corporateDescription: string | null\n    corporateName: string | null\n}\n\nexport interface UserPosts {\n    isRecent: boolean\n    feed: UserPost[]\n}\n\nexport interface Rescues {\n    rescueId: number\n    animalImageUrl: string\n    distance: number\n    distanceAway: string\n    emergencyType: string\n    postedBy: string\n    postedMinAgo: string\n    rescueDate: Date\n    rescuedPetName: string\n    rescueLocality: string\n    rescuers: {\n        contact: number\n        name: string\n        profileId: number\n        profileImageUrl: string\n        rescues: boolean\n        showMyNumber: boolean\n    }\n    rescueStatus: string\n    viewsCont: number\n}\n\nexport interface RescueLists {\n    rescues: Rescues[]\n}\n\nexport interface Comment {\n    commentId: number\n    comment: string\n    commentedUseName: string\n    commentedUserId: number\n    timeAgo: string\n}\n\nexport interface Comments {\n    comments: Comment[]\n}\n\nexport interface Follower {\n    userId: number\n    userName: string\n    profileImage: string\n    areYouFollowing: boolean\n    showRemoveOption: boolean\n}\n\nexport interface Following extends Follower {}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PostedByUser.html":{"url":"interfaces/PostedByUser.html","title":"interface - PostedByUser","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  PostedByUser\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/domain.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        badgeName\n                                \n                                \n                                        following\n                                \n                                \n                                        profileImage\n                                \n                                \n                                        rescuer\n                                \n                                \n                                        userName\n                                \n                                \n                                        usesId\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        badgeName\n                                    \n                                \n                                \n                                    \n                                        badgeName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        following\n                                    \n                                \n                                \n                                    \n                                        following:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        profileImage\n                                    \n                                \n                                \n                                    \n                                        profileImage:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        rescuer\n                                    \n                                \n                                \n                                    \n                                        rescuer:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        userName\n                                    \n                                \n                                \n                                    \n                                        userName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        usesId\n                                    \n                                \n                                \n                                    \n                                        usesId:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { HttpStatus } from '@nestjs/common'\n\nexport type Results =\n    | GetAppLaunchData\n    | GetUserProfile\n    | GetUserPosts\n    | GetComments\n    | GetRescueList\n    | GetFollowers\n    | GetFollowing\n\nexport type APIError = Error | string | null\n\nexport interface Result {\n    data: T\n    error?: APIError\n    message?: string | string[]\n    statusCode: HttpStatus\n}\n\nexport interface APIResponse {\n    data: T\n    error?: APIError\n    message?: string | string[]\n    statusCode: HttpStatus\n\n    count?: number\n    page?: number\n    pageCount?: number\n    total?: number\n}\n\nexport interface GetAppLaunchData {\n    link: 'api:/'\n    response: APIResponse\n}\n\nexport interface GetUserProfile {\n    link: 'api:v1/user/getUserProfile?userId=25'\n    response: APIResponse\n}\n\nexport interface GetUserPosts {\n    link: 'api:v1/user/getUserPosts?pageNo=0&pageSize=25'\n    response: APIResponse\n}\n\nexport interface GetRescueList {\n    link: 'api:v1/rescue/getRescueList?pageNo=0&pageSize=10&status=pending|inProgress|completed|nearest'\n    response: APIResponse\n}\n\nexport interface GetComments {\n    link: 'api:v1/rescue/getComments?pageNo=0&pageSize=10&postId=1230'\n    response: APIResponse\n}\n\nexport interface GetFollowers {\n    link: 'api:v1/rescue/getUserFollowers?userId=1230'\n    response: APIResponse\n}\n\nexport interface GetFollowing {\n    link: 'api:v1/rescue/getUserFollowing?userId=1230'\n    response: APIResponse\n}\n\nexport interface AppLaunchAction {\n    actionId: number\n    action: string\n    isActive: boolean\n    subject?: string\n}\n\nexport interface User {\n    usesId: number\n\n    coverImage: string\n    following: boolean\n    gender: string\n    isOwnProfile: number\n    isRescuer: boolean\n    latitude: number\n    longitude: number\n    numberOfFollowers: number\n    numberOfFollowing: number\n    numberOfPosts: number\n    numberOfRescuesCompleted: number\n    numberOfRescuesCreated: number\n    numberOfRescuesInProgress: number\n    profileImage: string\n    rescuer: boolean\n    userAddress: string\n    userContacts: string\n    userEmail: string\n    userName: string\n    badge: {\n        badgeId: number\n        badgeName: string\n        badgeDescription: string\n        recuesCompletionNeeded: number\n    }\n    setting: {\n        showMyContacts: boolean\n        getNotifications: boolean\n    }\n}\n\nexport interface PostType {\n    postTypeId: number\n    postType: string\n}\n\nexport interface PostedByUser {\n    usesId: number\n    badgeName: string\n    following: boolean\n    profileImage: string\n    rescuer: boolean\n    userName: string\n}\n\nexport interface UserPost {\n    postId: number\n    commentsCount: number\n    isUserReactedToPost: boolean\n    ownPage: boolean\n    postBy: PostedByUser\n    postImage: string\n    postTime: string\n    postType: PostType\n    postVideo: string\n    reactionsCount: number\n    timeAgo: string\n\n    adCorporateLogoUrl: string | null\n    corporateDescription: string | null\n    corporateName: string | null\n}\n\nexport interface UserPosts {\n    isRecent: boolean\n    feed: UserPost[]\n}\n\nexport interface Rescues {\n    rescueId: number\n    animalImageUrl: string\n    distance: number\n    distanceAway: string\n    emergencyType: string\n    postedBy: string\n    postedMinAgo: string\n    rescueDate: Date\n    rescuedPetName: string\n    rescueLocality: string\n    rescuers: {\n        contact: number\n        name: string\n        profileId: number\n        profileImageUrl: string\n        rescues: boolean\n        showMyNumber: boolean\n    }\n    rescueStatus: string\n    viewsCont: number\n}\n\nexport interface RescueLists {\n    rescues: Rescues[]\n}\n\nexport interface Comment {\n    commentId: number\n    comment: string\n    commentedUseName: string\n    commentedUserId: number\n    timeAgo: string\n}\n\nexport interface Comments {\n    comments: Comment[]\n}\n\nexport interface Follower {\n    userId: number\n    userName: string\n    profileImage: string\n    areYouFollowing: boolean\n    showRemoveOption: boolean\n}\n\nexport interface Following extends Follower {}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/QueryFailedFilter.html":{"url":"classes/QueryFailedFilter.html","title":"class - QueryFailedFilter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  QueryFailedFilter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/infra/filters/query-failed.filter.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        ExceptionFilter\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                catch\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            catch\n                        \n                        \n                    \n                \n            \n            \n                \ncatch(exception: CheckViolationError | ConstraintViolationError | DataError | ForeignKeyViolationError | NotNullViolationError | UniqueViolationError | NotFoundError, host: ArgumentsHost)\n                \n            \n\n\n            \n                \n                    Defined in src/infra/filters/query-failed.filter.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    exception\n                                    \n                                            CheckViolationError | ConstraintViolationError | DataError | ForeignKeyViolationError | NotNullViolationError | UniqueViolationError | NotFoundError\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    host\n                                    \n                                            ArgumentsHost\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ArgumentsHost, Catch, ExceptionFilter, HttpStatus } from '@nestjs/common'\n\nimport { NotFoundError } from 'objection'\nimport {\n    UniqueViolationError,\n    NotNullViolationError,\n    ForeignKeyViolationError,\n    ConstraintViolationError,\n    CheckViolationError,\n    DataError,\n} from 'objection-db-errors'\n\n@Catch(\n    CheckViolationError,\n    ConstraintViolationError,\n    DataError,\n    ForeignKeyViolationError,\n    NotNullViolationError,\n    UniqueViolationError,\n    NotFoundError,\n)\nexport class QueryFailedFilter implements ExceptionFilter {\n    catch(\n        exception:\n            | CheckViolationError\n            | ConstraintViolationError\n            | DataError\n            | ForeignKeyViolationError\n            | NotNullViolationError\n            | UniqueViolationError\n            | NotFoundError,\n        host: ArgumentsHost,\n    ) {\n        const ctx = host.switchToHttp()\n        const response = ctx.getResponse()\n        const request = ctx.getRequest()\n        const status = HttpStatus.PRECONDITION_FAILED\n\n        const {\n            name, // @ts-ignore\n            data, // @ts-ignore\n            type, // @ts-ignore\n            table, // @ts-ignore\n            column, // @ts-ignore\n            schema, // @ts-ignore\n            message, // @ts-ignore\n            columns, // @ts-ignore\n            database, // @ts-ignore\n            constraint, // @ts-ignore\n            nativeError, // @ts-ignore\n        } = exception\n\n        // @ts-ignore\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-call,@typescript-eslint/no-unsafe-member-access\n        response.status(status).json({\n            statusCode: status,\n            message,\n\n            name,\n            table,\n            schema,\n            database,\n            constraint,\n            nativeError,\n            columns: column ? [column] : columns,\n\n            data,\n            type,\n\n            path: request.url,\n            timestamp: new Date().toISOString(),\n        })\n    }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/R.html":{"url":"classes/R.html","title":"class - R","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  R\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/base/swagger-gen/crud-routes.factory.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                get\n                            \n                            \n                                    Static\n                                set\n                            \n                            \n                                    Static\n                                setRoute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            get\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    get(metadataKey: any, target: Object, propertyKey?: string | symbol)\n                \n            \n\n\n            \n                \n                    Defined in src/base/swagger-gen/crud-routes.factory.ts:33\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    metadataKey\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    target\n                                    \n                                                Object\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    propertyKey\n                                    \n                                            string | symbol\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     T\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            set\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    set(metadataKey: string, metadataValue: any, target: Object, propertyKey?: string | symbol)\n                \n            \n\n\n            \n                \n                    Defined in src/base/swagger-gen/crud-routes.factory.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    metadataKey\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    metadataValue\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    target\n                                    \n                                                Object\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    propertyKey\n                                    \n                                            string | symbol\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            setRoute\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setRoute(route: BaseRoute, func: Function)\n                \n            \n\n\n            \n                \n                    Defined in src/base/swagger-gen/crud-routes.factory.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    route\n                                    \n                                                BaseRoute\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    func\n                                    \n                                                Function\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { HttpStatus, RequestMethod } from '@nestjs/common'\n\nimport { Type } from 'class-transformer'\nimport * as deepmerge from 'deepmerge'\n\nimport {\n    ApiProperty,\n    BaseRoute,\n    isFalse,\n    isFunction,\n    isObjectFull,\n    objKeys,\n    swagger,\n    swaggerConst,\n} from './utils'\nimport type { CrudOptions, GetManyDefaultResponse, BaseRouteName } from './utils'\n\nexport class R {\n    static set(\n        metadataKey: string,\n        metadataValue: any,\n        target: Object,\n        propertyKey?: string | symbol,\n    ) {\n        if (!propertyKey) {\n            Reflect.defineMetadata(metadataKey, metadataValue, target)\n        } else {\n            Reflect.defineMetadata(metadataKey, metadataValue, target, propertyKey)\n        }\n    }\n\n    static get(\n        metadataKey: any,\n        target: Object,\n        propertyKey?: string | symbol,\n    ): T {\n        if (!propertyKey) return Reflect.getMetadata(metadataKey, target)\n\n        return Reflect.getMetadata(metadataKey, target, propertyKey)\n    }\n\n    static setRoute(route: BaseRoute, func: Function) {\n        R.set('path', route.path, func)\n        R.set('method', route.method, func)\n    }\n}\n\nexport class Swagger {\n    /**\n     * Sets extra swagger metadata for GET Calls\n     */\n    static setExtraModels(swaggerModels: {\n        [x: string]: any\n        get: Record\n    }) {\n        if (swaggerConst) {\n            const meta = Swagger.getExtraModels(swaggerModels.get)\n            const models = [\n                ...meta,\n                ...objKeys(swaggerModels)\n                    .map((name) => swaggerModels[name])\n                    .filter((one) => one && one.name !== swaggerModels.get.name),\n            ]\n\n            R.set(\n                swaggerConst.DECORATORS.API_EXTRA_MODELS,\n                models,\n                swaggerModels.get,\n            )\n        }\n    }\n\n    /**\n     * Sets swagger metadata for response of GET Calls\n     */\n    static setResponseOk(metadata: any[], func: Function) {\n        if (swaggerConst) {\n            R.set(swaggerConst.DECORATORS.API_RESPONSE, metadata, func)\n        }\n    }\n\n    static getExtraModels(target: Record): any[] {\n        return swaggerConst\n            ? R.get(swaggerConst.API_EXTRA_MODELS, target) || []\n            : []\n    }\n\n    static getResponseOk(func: Function) {\n        return swaggerConst\n            ? R.get(swaggerConst.DECORATORS.API_RESPONSE, func) || {}\n            : {}\n    }\n\n    static createResponseMeta(\n        name: BaseRouteName,\n        options: CrudOptions,\n        swaggerModels: {\n            [x: string]: any\n            get: { name: any }\n            getMany: { name: any }\n        },\n    ) {\n        if (swagger) {\n            const { query } = options\n\n            switch (name) {\n                case 'getOneBase':\n                    return {\n                        [HttpStatus.OK]: {\n                            description: 'Get one base response',\n                            type: swaggerModels.get,\n                        },\n                    }\n                case 'getOne':\n                    return {\n                        [HttpStatus.OK]: query?.alwaysPaginate\n                            ? {\n                                  description: 'Get paginated response',\n                                  type: swaggerModels.getMany,\n                              }\n                            : {\n                                  description: 'Get many base response',\n                                  schema: {\n                                      oneOf: [\n                                          {\n                                              $ref: swagger.getSchemaPath(\n                                                  swaggerModels.getMany.name,\n                                              ),\n                                          },\n                                          {\n                                              type: 'array',\n                                              items: {\n                                                  $ref: swagger.getSchemaPath(\n                                                      swaggerModels.get.name,\n                                                  ),\n                                              },\n                                          },\n                                      ],\n                                  },\n                              },\n                    }\n                default:\n                    // eslint-disable-next-line no-case-declarations\n                    const dto = swaggerModels[name.split('OneBase')[0]]\n\n                    return {\n                        [HttpStatus.OK]: {\n                            description: 'Response',\n                            schema: { $ref: swagger.getSchemaPath(dto.name) },\n                        },\n                    }\n            }\n        } else {\n            return {}\n        }\n    }\n}\n\nexport class SerializeHelper {\n    static createGetManyDto(dto: any, resourceName: string): any {\n        class GetManyResponseDto implements GetManyDefaultResponse {\n            @ApiProperty({ type: dto, isArray: true })\n            @Type(() => dto)\n            data!: any[]\n\n            @ApiProperty({ type: 'number' })\n            count!: number\n\n            @ApiProperty({ type: 'number' })\n            total!: number\n\n            @ApiProperty({ type: 'number' })\n            page!: number\n\n            @ApiProperty({ type: 'number' })\n            pageCount!: number\n        }\n\n        Object.defineProperty(GetManyResponseDto, 'name', {\n            writable: false,\n            value: `GetMany${resourceName}ResponseDto`,\n        })\n\n        return GetManyResponseDto\n    }\n\n    static createGetOneResponseDto(resourceName: string): any {\n        class GetOneResponseDto {}\n\n        Object.defineProperty(GetOneResponseDto, 'name', {\n            writable: false,\n            value: `${resourceName}ResponseDto`,\n        })\n\n        return GetOneResponseDto\n    }\n}\n\nexport class CrudConfigService {\n    static config: Partial = {\n        query: {\n            alwaysPaginate: false,\n        },\n    }\n\n    static load(config: Record) {\n        const query = isObjectFull(config.query) ? config.query : {}\n        const params = isObjectFull(config.params) ? config.params : {}\n        const serialize = isObjectFull(config.serialize) ? config.serialize : {}\n\n        CrudConfigService.config = deepmerge(\n            CrudConfigService.config,\n            { query, params, serialize },\n            { arrayMerge: (a, b, c) => b },\n        )\n    }\n}\n\nexport class CrudRoutesFactory {\n    protected options\n\n    protected swaggerModels: any = {}\n\n    constructor(private target: Object, options: CrudOptions) {\n        this.options = options\n        this.create()\n\n        console.log(\n            'CrudRoutesFactory::constructor',\n            // { ...options },\n            // this.targetProto,\n            // this.modelType,\n            // this.modelName,\n            // this.swaggerModels,\n        )\n    }\n\n    static create(target: Object, options: CrudOptions): CrudRoutesFactory {\n        return new CrudRoutesFactory(target, options)\n    }\n\n    get targetProto() {\n        // @ts-ignore\n        return this.target.prototype\n    }\n\n    get modelName() {\n        return this.options.model.type?.name\n    }\n\n    get modelType() {\n        return this.options.model.type\n    }\n\n    private create() {\n        const routesSchema = CrudRoutesFactory.getRoutesSchema()\n        this.mergeOptions()\n        this.setResponseModels()\n        this.createRoutes(routesSchema)\n        this.enableRoutes(routesSchema)\n    }\n\n    getOne(name: BaseRouteName) {\n        this.targetProto[name] = function getOne(req: any) {\n            return this.service.getOne(req)\n        }\n    }\n\n    getOneBase(name: BaseRouteName) {\n        this.targetProto[name] = function getOneBase(req: any) {\n            return this.service.getOneBase(req)\n        }\n    }\n\n    static getRoutesSchema(): BaseRoute[] {\n        return [\n            {\n                name: 'getOneBase',\n                path: '/',\n                method: RequestMethod.GET,\n                enable: false,\n                override: false,\n                withParams: true,\n            },\n            {\n                name: 'getOne',\n                path: '/',\n                method: RequestMethod.GET,\n                enable: false,\n                override: false,\n                withParams: false,\n            },\n        ]\n    }\n\n    mergeOptions() {\n        // merge query config\n        const query = isObjectFull(this.options.query) ? this.options.query : {}\n        this.options.query = { ...CrudConfigService.config.query, ...query }\n\n        // set dto\n        if (!isObjectFull(this.options.dto)) {\n            this.options.dto = {}\n        }\n\n        // set serialize\n        this.options.serialize = {\n            ...CrudConfigService.config.serialize,\n            ...this.options.serialize,\n        }\n\n        this.options.serialize.get = isFalse(this.options.serialize?.get)\n            ? false\n            : this.options.serialize?.get || this.modelType\n\n        this.options.serialize.getMany = isFalse(this.options.serialize?.getMany)\n            ? false\n            : this.options.serialize?.getMany\n            ? this.options.serialize?.getMany\n            : isFalse(this.options.serialize?.get)\n            ? false\n            : SerializeHelper.createGetManyDto(\n                  this.options.serialize?.get,\n                  this.modelName,\n              )\n\n        this.options.serialize.create = isFalse(this.options.serialize?.create)\n            ? false\n            : this.options.serialize?.create || this.modelType\n\n        this.options.serialize.update = isFalse(this.options.serialize?.update)\n            ? false\n            : this.options.serialize?.update || this.modelType\n\n        this.options.serialize.replace = isFalse(this.options.serialize?.replace)\n            ? false\n            : this.options.serialize?.replace || this.modelType\n\n        this.options.serialize.delete =\n            isFalse(this.options.serialize?.delete) ||\n            !this.options.routes?.deleteOneBase?.returnDeleted\n                ? false\n                : this.options.serialize?.delete || this.modelType\n\n        R.set('CRUD_OPTIONS_METADATA', this.options, this.target)\n    }\n\n    setResponseModels() {\n        const modelType = isFunction(this.modelType)\n            ? this.modelType\n            : SerializeHelper.createGetOneResponseDto(this.modelName)\n\n        this.swaggerModels.get = isFunction(this.options.serialize?.get)\n            ? this.options.serialize?.get\n            : modelType\n\n        this.swaggerModels.getMany =\n            this.options.serialize?.getMany ||\n            SerializeHelper.createGetManyDto(this.swaggerModels.get, this.modelName)\n\n        this.swaggerModels.create = isFunction(this.options.serialize?.create)\n            ? this.options.serialize?.create\n            : modelType\n\n        this.swaggerModels.update = isFunction(this.options.serialize?.update)\n            ? this.options.serialize?.update\n            : modelType\n\n        this.swaggerModels.replace = isFunction(this.options.serialize?.replace)\n            ? this.options.serialize?.replace\n            : modelType\n\n        this.swaggerModels.delete = isFunction(this.options.serialize?.delete)\n            ? this.options.serialize?.delete\n            : modelType\n\n        Swagger.setExtraModels(this.swaggerModels)\n    }\n\n    enableRoutes(routesSchema: BaseRoute[]) {\n        routesSchema.forEach((route) => {\n            if (!route.override && route.enable) {\n                R.setRoute(route, this.targetProto[route.name])\n            }\n        })\n    }\n\n    createRoutes(routesSchema: BaseRoute[]) {\n        routesSchema.forEach((route) => {\n            // create base method\n            /* this[route.name](route.name) */\n            route.enable = true\n\n            // set metadata\n            this.setSwaggerResponseOk(route.name)\n        })\n    }\n\n    setSwaggerResponseOk(name: BaseRouteName) {\n        const metadata = Swagger.getResponseOk(this.targetProto[name]) || {}\n        const metadataToAdd =\n            Swagger.createResponseMeta(name, this.options, this.swaggerModels) || {}\n\n        Swagger.setResponseOk(\n            // @ts-ignore\n            { ...metadata, ...metadataToAdd },\n            this.targetProto[name],\n        )\n    }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/RequestGuard.html":{"url":"guards/RequestGuard.html","title":"guard - RequestGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    RequestGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/infra/guards/req.ts\n            \n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                bindRequestHelpers\n                            \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            bindRequestHelpers\n                        \n                        \n                    \n                \n            \n            \n                \nbindRequestHelpers(request: any)\n                \n            \n\n\n            \n                \n                    Defined in src/infra/guards/req.ts:21\n                \n            \n\n\n            \n                \n                    Bind Request Helpers\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            canActivate\n                        \n                        \n                    \n                \n            \n            \n                \ncanActivate(context: ExecutionContext)\n                \n            \n\n\n            \n                \n                    Defined in src/infra/guards/req.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     boolean | Promise | Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable, CanActivate, ExecutionContext } from '@nestjs/common'\n\nimport { Observable } from 'rxjs'\n\n@Injectable()\nexport class RequestGuard implements CanActivate {\n    canActivate(\n        context: ExecutionContext,\n    ): boolean | Promise | Observable {\n        this.bindRequestHelpers(context.switchToHttp().getRequest())\n\n        return true\n    }\n\n    /**\n     * Bind Request Helpers\n     *\n     * @param request\n     */\n    bindRequestHelpers(request: any): any {\n        function all(): Record {\n            const inputs = { ...request.query, ...request.body, ...request.params }\n\n            // eslint-disable-next-line guard-for-in,no-restricted-syntax\n            for (const key in inputs) {\n                const value = inputs[key]\n\n                if (typeof value === 'string' || value instanceof String) {\n                    inputs[key] = value.trim()\n                }\n            }\n\n            return inputs\n        }\n\n        request.all = all\n\n        return request\n    }\n}\n\n        \n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/RescueLists.html":{"url":"interfaces/RescueLists.html","title":"interface - RescueLists","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  RescueLists\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/domain.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        rescues\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        rescues\n                                    \n                                \n                                \n                                    \n                                        rescues:         Rescues[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Rescues[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { HttpStatus } from '@nestjs/common'\n\nexport type Results =\n    | GetAppLaunchData\n    | GetUserProfile\n    | GetUserPosts\n    | GetComments\n    | GetRescueList\n    | GetFollowers\n    | GetFollowing\n\nexport type APIError = Error | string | null\n\nexport interface Result {\n    data: T\n    error?: APIError\n    message?: string | string[]\n    statusCode: HttpStatus\n}\n\nexport interface APIResponse {\n    data: T\n    error?: APIError\n    message?: string | string[]\n    statusCode: HttpStatus\n\n    count?: number\n    page?: number\n    pageCount?: number\n    total?: number\n}\n\nexport interface GetAppLaunchData {\n    link: 'api:/'\n    response: APIResponse\n}\n\nexport interface GetUserProfile {\n    link: 'api:v1/user/getUserProfile?userId=25'\n    response: APIResponse\n}\n\nexport interface GetUserPosts {\n    link: 'api:v1/user/getUserPosts?pageNo=0&pageSize=25'\n    response: APIResponse\n}\n\nexport interface GetRescueList {\n    link: 'api:v1/rescue/getRescueList?pageNo=0&pageSize=10&status=pending|inProgress|completed|nearest'\n    response: APIResponse\n}\n\nexport interface GetComments {\n    link: 'api:v1/rescue/getComments?pageNo=0&pageSize=10&postId=1230'\n    response: APIResponse\n}\n\nexport interface GetFollowers {\n    link: 'api:v1/rescue/getUserFollowers?userId=1230'\n    response: APIResponse\n}\n\nexport interface GetFollowing {\n    link: 'api:v1/rescue/getUserFollowing?userId=1230'\n    response: APIResponse\n}\n\nexport interface AppLaunchAction {\n    actionId: number\n    action: string\n    isActive: boolean\n    subject?: string\n}\n\nexport interface User {\n    usesId: number\n\n    coverImage: string\n    following: boolean\n    gender: string\n    isOwnProfile: number\n    isRescuer: boolean\n    latitude: number\n    longitude: number\n    numberOfFollowers: number\n    numberOfFollowing: number\n    numberOfPosts: number\n    numberOfRescuesCompleted: number\n    numberOfRescuesCreated: number\n    numberOfRescuesInProgress: number\n    profileImage: string\n    rescuer: boolean\n    userAddress: string\n    userContacts: string\n    userEmail: string\n    userName: string\n    badge: {\n        badgeId: number\n        badgeName: string\n        badgeDescription: string\n        recuesCompletionNeeded: number\n    }\n    setting: {\n        showMyContacts: boolean\n        getNotifications: boolean\n    }\n}\n\nexport interface PostType {\n    postTypeId: number\n    postType: string\n}\n\nexport interface PostedByUser {\n    usesId: number\n    badgeName: string\n    following: boolean\n    profileImage: string\n    rescuer: boolean\n    userName: string\n}\n\nexport interface UserPost {\n    postId: number\n    commentsCount: number\n    isUserReactedToPost: boolean\n    ownPage: boolean\n    postBy: PostedByUser\n    postImage: string\n    postTime: string\n    postType: PostType\n    postVideo: string\n    reactionsCount: number\n    timeAgo: string\n\n    adCorporateLogoUrl: string | null\n    corporateDescription: string | null\n    corporateName: string | null\n}\n\nexport interface UserPosts {\n    isRecent: boolean\n    feed: UserPost[]\n}\n\nexport interface Rescues {\n    rescueId: number\n    animalImageUrl: string\n    distance: number\n    distanceAway: string\n    emergencyType: string\n    postedBy: string\n    postedMinAgo: string\n    rescueDate: Date\n    rescuedPetName: string\n    rescueLocality: string\n    rescuers: {\n        contact: number\n        name: string\n        profileId: number\n        profileImageUrl: string\n        rescues: boolean\n        showMyNumber: boolean\n    }\n    rescueStatus: string\n    viewsCont: number\n}\n\nexport interface RescueLists {\n    rescues: Rescues[]\n}\n\nexport interface Comment {\n    commentId: number\n    comment: string\n    commentedUseName: string\n    commentedUserId: number\n    timeAgo: string\n}\n\nexport interface Comments {\n    comments: Comment[]\n}\n\nexport interface Follower {\n    userId: number\n    userName: string\n    profileImage: string\n    areYouFollowing: boolean\n    showRemoveOption: boolean\n}\n\nexport interface Following extends Follower {}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Rescues.html":{"url":"interfaces/Rescues.html","title":"interface - Rescues","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Rescues\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/domain.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        animalImageUrl\n                                \n                                \n                                        distance\n                                \n                                \n                                        distanceAway\n                                \n                                \n                                        emergencyType\n                                \n                                \n                                        postedBy\n                                \n                                \n                                        postedMinAgo\n                                \n                                \n                                        rescueDate\n                                \n                                \n                                        rescuedPetName\n                                \n                                \n                                        rescueId\n                                \n                                \n                                        rescueLocality\n                                \n                                \n                                        rescuers\n                                \n                                \n                                        rescueStatus\n                                \n                                \n                                        viewsCont\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        animalImageUrl\n                                    \n                                \n                                \n                                    \n                                        animalImageUrl:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        distance\n                                    \n                                \n                                \n                                    \n                                        distance:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        distanceAway\n                                    \n                                \n                                \n                                    \n                                        distanceAway:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        emergencyType\n                                    \n                                \n                                \n                                    \n                                        emergencyType:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        postedBy\n                                    \n                                \n                                \n                                    \n                                        postedBy:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        postedMinAgo\n                                    \n                                \n                                \n                                    \n                                        postedMinAgo:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        rescueDate\n                                    \n                                \n                                \n                                    \n                                        rescueDate:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        rescuedPetName\n                                    \n                                \n                                \n                                    \n                                        rescuedPetName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        rescueId\n                                    \n                                \n                                \n                                    \n                                        rescueId:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        rescueLocality\n                                    \n                                \n                                \n                                    \n                                        rescueLocality:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        rescuers\n                                    \n                                \n                                \n                                    \n                                        rescuers:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        rescueStatus\n                                    \n                                \n                                \n                                    \n                                        rescueStatus:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        viewsCont\n                                    \n                                \n                                \n                                    \n                                        viewsCont:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { HttpStatus } from '@nestjs/common'\n\nexport type Results =\n    | GetAppLaunchData\n    | GetUserProfile\n    | GetUserPosts\n    | GetComments\n    | GetRescueList\n    | GetFollowers\n    | GetFollowing\n\nexport type APIError = Error | string | null\n\nexport interface Result {\n    data: T\n    error?: APIError\n    message?: string | string[]\n    statusCode: HttpStatus\n}\n\nexport interface APIResponse {\n    data: T\n    error?: APIError\n    message?: string | string[]\n    statusCode: HttpStatus\n\n    count?: number\n    page?: number\n    pageCount?: number\n    total?: number\n}\n\nexport interface GetAppLaunchData {\n    link: 'api:/'\n    response: APIResponse\n}\n\nexport interface GetUserProfile {\n    link: 'api:v1/user/getUserProfile?userId=25'\n    response: APIResponse\n}\n\nexport interface GetUserPosts {\n    link: 'api:v1/user/getUserPosts?pageNo=0&pageSize=25'\n    response: APIResponse\n}\n\nexport interface GetRescueList {\n    link: 'api:v1/rescue/getRescueList?pageNo=0&pageSize=10&status=pending|inProgress|completed|nearest'\n    response: APIResponse\n}\n\nexport interface GetComments {\n    link: 'api:v1/rescue/getComments?pageNo=0&pageSize=10&postId=1230'\n    response: APIResponse\n}\n\nexport interface GetFollowers {\n    link: 'api:v1/rescue/getUserFollowers?userId=1230'\n    response: APIResponse\n}\n\nexport interface GetFollowing {\n    link: 'api:v1/rescue/getUserFollowing?userId=1230'\n    response: APIResponse\n}\n\nexport interface AppLaunchAction {\n    actionId: number\n    action: string\n    isActive: boolean\n    subject?: string\n}\n\nexport interface User {\n    usesId: number\n\n    coverImage: string\n    following: boolean\n    gender: string\n    isOwnProfile: number\n    isRescuer: boolean\n    latitude: number\n    longitude: number\n    numberOfFollowers: number\n    numberOfFollowing: number\n    numberOfPosts: number\n    numberOfRescuesCompleted: number\n    numberOfRescuesCreated: number\n    numberOfRescuesInProgress: number\n    profileImage: string\n    rescuer: boolean\n    userAddress: string\n    userContacts: string\n    userEmail: string\n    userName: string\n    badge: {\n        badgeId: number\n        badgeName: string\n        badgeDescription: string\n        recuesCompletionNeeded: number\n    }\n    setting: {\n        showMyContacts: boolean\n        getNotifications: boolean\n    }\n}\n\nexport interface PostType {\n    postTypeId: number\n    postType: string\n}\n\nexport interface PostedByUser {\n    usesId: number\n    badgeName: string\n    following: boolean\n    profileImage: string\n    rescuer: boolean\n    userName: string\n}\n\nexport interface UserPost {\n    postId: number\n    commentsCount: number\n    isUserReactedToPost: boolean\n    ownPage: boolean\n    postBy: PostedByUser\n    postImage: string\n    postTime: string\n    postType: PostType\n    postVideo: string\n    reactionsCount: number\n    timeAgo: string\n\n    adCorporateLogoUrl: string | null\n    corporateDescription: string | null\n    corporateName: string | null\n}\n\nexport interface UserPosts {\n    isRecent: boolean\n    feed: UserPost[]\n}\n\nexport interface Rescues {\n    rescueId: number\n    animalImageUrl: string\n    distance: number\n    distanceAway: string\n    emergencyType: string\n    postedBy: string\n    postedMinAgo: string\n    rescueDate: Date\n    rescuedPetName: string\n    rescueLocality: string\n    rescuers: {\n        contact: number\n        name: string\n        profileId: number\n        profileImageUrl: string\n        rescues: boolean\n        showMyNumber: boolean\n    }\n    rescueStatus: string\n    viewsCont: number\n}\n\nexport interface RescueLists {\n    rescues: Rescues[]\n}\n\nexport interface Comment {\n    commentId: number\n    comment: string\n    commentedUseName: string\n    commentedUserId: number\n    timeAgo: string\n}\n\nexport interface Comments {\n    comments: Comment[]\n}\n\nexport interface Follower {\n    userId: number\n    userName: string\n    profileImage: string\n    areYouFollowing: boolean\n    showRemoveOption: boolean\n}\n\nexport interface Following extends Follower {}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Response.html":{"url":"interfaces/Response.html","title":"interface - Response","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Response\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/infra/interceptors/transform.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        data\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                    \n                                \n                                \n                                    \n                                        data:     T\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     T\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {\n    Injectable,\n    NestInterceptor,\n    ExecutionContext,\n    CallHandler,\n} from '@nestjs/common'\n\nimport { Observable } from 'rxjs'\nimport { map } from 'rxjs/operators'\n\nexport interface Response {\n    data: T\n}\n\n@Injectable()\nexport class TransformInterceptor implements NestInterceptor> {\n    intercept(\n        context: ExecutionContext,\n        next: CallHandler,\n    ): Observable> {\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n        return next.handle().pipe(map((data) => ({ data })))\n    }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/ResponseGuard.html":{"url":"guards/ResponseGuard.html","title":"guard - ResponseGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    ResponseGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/infra/guards/res.ts\n            \n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                bindResponseHelpers\n                            \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            bindResponseHelpers\n                        \n                        \n                    \n                \n            \n            \n                \nbindResponseHelpers(response: any)\n                \n            \n\n\n            \n                \n                    Defined in src/infra/guards/res.ts:21\n                \n            \n\n\n            \n                \n                    Bind Response Helpers\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    response\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            canActivate\n                        \n                        \n                    \n                \n            \n            \n                \ncanActivate(context: ExecutionContext)\n                \n            \n\n\n            \n                \n                    Defined in src/infra/guards/res.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     boolean | Promise | Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable, CanActivate, ExecutionContext } from '@nestjs/common'\n\nimport { Observable } from 'rxjs'\n\n@Injectable()\nexport class ResponseGuard implements CanActivate {\n    canActivate(\n        context: ExecutionContext,\n    ): boolean | Promise | Observable {\n        this.bindResponseHelpers(context.switchToHttp().getResponse())\n\n        return true\n    }\n\n    /**\n     * Bind Response Helpers\n     *\n     * @param response\n     */\n    bindResponseHelpers(response: any): any {\n        function success(\n            data: Record | Array | string,\n            status = 200,\n        ) {\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-return,@typescript-eslint/no-unsafe-call,@typescript-eslint/no-unsafe-member-access\n            return response.status(status).json({\n                success: true,\n                code: status,\n                data,\n            })\n        }\n\n        // eslint-disable-next-line @typescript-eslint/no-shadow\n        function error(error: Record | string, status = 401) {\n            let message = 'Something went wrong!'\n            let errors = null\n            if (error instanceof Object) {\n                message = error.message\n                errors = error.errors\n            } else {\n                message = error\n            }\n\n            return response.status(status).json({\n                success: false,\n                code: status,\n                message,\n                errors,\n            })\n        }\n\n        function noContent() {\n            return response.status(204).end()\n        }\n\n        function withMeta(data: Record, status = 200) {\n            const { data: dataObj, ...meta } = data\n\n            return response.status(status).json({\n                success: true,\n                code: status,\n                data: dataObj,\n                meta,\n            })\n        }\n\n        response.error = error\n        response.success = success\n        response.withMeta = withMeta\n        response.noContent = noContent\n\n        return response\n    }\n}\n\n        \n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Result.html":{"url":"interfaces/Result.html","title":"interface - Result","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Result\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/domain.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        data\n                                \n                                \n                                            Optional\n                                        error\n                                \n                                \n                                            Optional\n                                        message\n                                \n                                \n                                        statusCode\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                    \n                                \n                                \n                                    \n                                        data:     T\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     T\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        error\n                                    \n                                \n                                \n                                    \n                                        error:         APIError\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         APIError\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        message\n                                    \n                                \n                                \n                                    \n                                        message:     string | string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | string[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        statusCode\n                                    \n                                \n                                \n                                    \n                                        statusCode:     HttpStatus\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     HttpStatus\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { HttpStatus } from '@nestjs/common'\n\nexport type Results =\n    | GetAppLaunchData\n    | GetUserProfile\n    | GetUserPosts\n    | GetComments\n    | GetRescueList\n    | GetFollowers\n    | GetFollowing\n\nexport type APIError = Error | string | null\n\nexport interface Result {\n    data: T\n    error?: APIError\n    message?: string | string[]\n    statusCode: HttpStatus\n}\n\nexport interface APIResponse {\n    data: T\n    error?: APIError\n    message?: string | string[]\n    statusCode: HttpStatus\n\n    count?: number\n    page?: number\n    pageCount?: number\n    total?: number\n}\n\nexport interface GetAppLaunchData {\n    link: 'api:/'\n    response: APIResponse\n}\n\nexport interface GetUserProfile {\n    link: 'api:v1/user/getUserProfile?userId=25'\n    response: APIResponse\n}\n\nexport interface GetUserPosts {\n    link: 'api:v1/user/getUserPosts?pageNo=0&pageSize=25'\n    response: APIResponse\n}\n\nexport interface GetRescueList {\n    link: 'api:v1/rescue/getRescueList?pageNo=0&pageSize=10&status=pending|inProgress|completed|nearest'\n    response: APIResponse\n}\n\nexport interface GetComments {\n    link: 'api:v1/rescue/getComments?pageNo=0&pageSize=10&postId=1230'\n    response: APIResponse\n}\n\nexport interface GetFollowers {\n    link: 'api:v1/rescue/getUserFollowers?userId=1230'\n    response: APIResponse\n}\n\nexport interface GetFollowing {\n    link: 'api:v1/rescue/getUserFollowing?userId=1230'\n    response: APIResponse\n}\n\nexport interface AppLaunchAction {\n    actionId: number\n    action: string\n    isActive: boolean\n    subject?: string\n}\n\nexport interface User {\n    usesId: number\n\n    coverImage: string\n    following: boolean\n    gender: string\n    isOwnProfile: number\n    isRescuer: boolean\n    latitude: number\n    longitude: number\n    numberOfFollowers: number\n    numberOfFollowing: number\n    numberOfPosts: number\n    numberOfRescuesCompleted: number\n    numberOfRescuesCreated: number\n    numberOfRescuesInProgress: number\n    profileImage: string\n    rescuer: boolean\n    userAddress: string\n    userContacts: string\n    userEmail: string\n    userName: string\n    badge: {\n        badgeId: number\n        badgeName: string\n        badgeDescription: string\n        recuesCompletionNeeded: number\n    }\n    setting: {\n        showMyContacts: boolean\n        getNotifications: boolean\n    }\n}\n\nexport interface PostType {\n    postTypeId: number\n    postType: string\n}\n\nexport interface PostedByUser {\n    usesId: number\n    badgeName: string\n    following: boolean\n    profileImage: string\n    rescuer: boolean\n    userName: string\n}\n\nexport interface UserPost {\n    postId: number\n    commentsCount: number\n    isUserReactedToPost: boolean\n    ownPage: boolean\n    postBy: PostedByUser\n    postImage: string\n    postTime: string\n    postType: PostType\n    postVideo: string\n    reactionsCount: number\n    timeAgo: string\n\n    adCorporateLogoUrl: string | null\n    corporateDescription: string | null\n    corporateName: string | null\n}\n\nexport interface UserPosts {\n    isRecent: boolean\n    feed: UserPost[]\n}\n\nexport interface Rescues {\n    rescueId: number\n    animalImageUrl: string\n    distance: number\n    distanceAway: string\n    emergencyType: string\n    postedBy: string\n    postedMinAgo: string\n    rescueDate: Date\n    rescuedPetName: string\n    rescueLocality: string\n    rescuers: {\n        contact: number\n        name: string\n        profileId: number\n        profileImageUrl: string\n        rescues: boolean\n        showMyNumber: boolean\n    }\n    rescueStatus: string\n    viewsCont: number\n}\n\nexport interface RescueLists {\n    rescues: Rescues[]\n}\n\nexport interface Comment {\n    commentId: number\n    comment: string\n    commentedUseName: string\n    commentedUserId: number\n    timeAgo: string\n}\n\nexport interface Comments {\n    comments: Comment[]\n}\n\nexport interface Follower {\n    userId: number\n    userName: string\n    profileImage: string\n    areYouFollowing: boolean\n    showRemoveOption: boolean\n}\n\nexport interface Following extends Follower {}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SerializeHelper.html":{"url":"classes/SerializeHelper.html","title":"class - SerializeHelper","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SerializeHelper\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/base/swagger-gen/crud-routes.factory.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                createGetManyDto\n                            \n                            \n                                    Static\n                                createGetOneResponseDto\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            createGetManyDto\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createGetManyDto(dto: any, resourceName: string)\n                \n            \n\n\n            \n                \n                    Defined in src/base/swagger-gen/crud-routes.factory.ts:161\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dto\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    resourceName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            createGetOneResponseDto\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createGetOneResponseDto(resourceName: string)\n                \n            \n\n\n            \n                \n                    Defined in src/base/swagger-gen/crud-routes.factory.ts:188\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    resourceName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { HttpStatus, RequestMethod } from '@nestjs/common'\n\nimport { Type } from 'class-transformer'\nimport * as deepmerge from 'deepmerge'\n\nimport {\n    ApiProperty,\n    BaseRoute,\n    isFalse,\n    isFunction,\n    isObjectFull,\n    objKeys,\n    swagger,\n    swaggerConst,\n} from './utils'\nimport type { CrudOptions, GetManyDefaultResponse, BaseRouteName } from './utils'\n\nexport class R {\n    static set(\n        metadataKey: string,\n        metadataValue: any,\n        target: Object,\n        propertyKey?: string | symbol,\n    ) {\n        if (!propertyKey) {\n            Reflect.defineMetadata(metadataKey, metadataValue, target)\n        } else {\n            Reflect.defineMetadata(metadataKey, metadataValue, target, propertyKey)\n        }\n    }\n\n    static get(\n        metadataKey: any,\n        target: Object,\n        propertyKey?: string | symbol,\n    ): T {\n        if (!propertyKey) return Reflect.getMetadata(metadataKey, target)\n\n        return Reflect.getMetadata(metadataKey, target, propertyKey)\n    }\n\n    static setRoute(route: BaseRoute, func: Function) {\n        R.set('path', route.path, func)\n        R.set('method', route.method, func)\n    }\n}\n\nexport class Swagger {\n    /**\n     * Sets extra swagger metadata for GET Calls\n     */\n    static setExtraModels(swaggerModels: {\n        [x: string]: any\n        get: Record\n    }) {\n        if (swaggerConst) {\n            const meta = Swagger.getExtraModels(swaggerModels.get)\n            const models = [\n                ...meta,\n                ...objKeys(swaggerModels)\n                    .map((name) => swaggerModels[name])\n                    .filter((one) => one && one.name !== swaggerModels.get.name),\n            ]\n\n            R.set(\n                swaggerConst.DECORATORS.API_EXTRA_MODELS,\n                models,\n                swaggerModels.get,\n            )\n        }\n    }\n\n    /**\n     * Sets swagger metadata for response of GET Calls\n     */\n    static setResponseOk(metadata: any[], func: Function) {\n        if (swaggerConst) {\n            R.set(swaggerConst.DECORATORS.API_RESPONSE, metadata, func)\n        }\n    }\n\n    static getExtraModels(target: Record): any[] {\n        return swaggerConst\n            ? R.get(swaggerConst.API_EXTRA_MODELS, target) || []\n            : []\n    }\n\n    static getResponseOk(func: Function) {\n        return swaggerConst\n            ? R.get(swaggerConst.DECORATORS.API_RESPONSE, func) || {}\n            : {}\n    }\n\n    static createResponseMeta(\n        name: BaseRouteName,\n        options: CrudOptions,\n        swaggerModels: {\n            [x: string]: any\n            get: { name: any }\n            getMany: { name: any }\n        },\n    ) {\n        if (swagger) {\n            const { query } = options\n\n            switch (name) {\n                case 'getOneBase':\n                    return {\n                        [HttpStatus.OK]: {\n                            description: 'Get one base response',\n                            type: swaggerModels.get,\n                        },\n                    }\n                case 'getOne':\n                    return {\n                        [HttpStatus.OK]: query?.alwaysPaginate\n                            ? {\n                                  description: 'Get paginated response',\n                                  type: swaggerModels.getMany,\n                              }\n                            : {\n                                  description: 'Get many base response',\n                                  schema: {\n                                      oneOf: [\n                                          {\n                                              $ref: swagger.getSchemaPath(\n                                                  swaggerModels.getMany.name,\n                                              ),\n                                          },\n                                          {\n                                              type: 'array',\n                                              items: {\n                                                  $ref: swagger.getSchemaPath(\n                                                      swaggerModels.get.name,\n                                                  ),\n                                              },\n                                          },\n                                      ],\n                                  },\n                              },\n                    }\n                default:\n                    // eslint-disable-next-line no-case-declarations\n                    const dto = swaggerModels[name.split('OneBase')[0]]\n\n                    return {\n                        [HttpStatus.OK]: {\n                            description: 'Response',\n                            schema: { $ref: swagger.getSchemaPath(dto.name) },\n                        },\n                    }\n            }\n        } else {\n            return {}\n        }\n    }\n}\n\nexport class SerializeHelper {\n    static createGetManyDto(dto: any, resourceName: string): any {\n        class GetManyResponseDto implements GetManyDefaultResponse {\n            @ApiProperty({ type: dto, isArray: true })\n            @Type(() => dto)\n            data!: any[]\n\n            @ApiProperty({ type: 'number' })\n            count!: number\n\n            @ApiProperty({ type: 'number' })\n            total!: number\n\n            @ApiProperty({ type: 'number' })\n            page!: number\n\n            @ApiProperty({ type: 'number' })\n            pageCount!: number\n        }\n\n        Object.defineProperty(GetManyResponseDto, 'name', {\n            writable: false,\n            value: `GetMany${resourceName}ResponseDto`,\n        })\n\n        return GetManyResponseDto\n    }\n\n    static createGetOneResponseDto(resourceName: string): any {\n        class GetOneResponseDto {}\n\n        Object.defineProperty(GetOneResponseDto, 'name', {\n            writable: false,\n            value: `${resourceName}ResponseDto`,\n        })\n\n        return GetOneResponseDto\n    }\n}\n\nexport class CrudConfigService {\n    static config: Partial = {\n        query: {\n            alwaysPaginate: false,\n        },\n    }\n\n    static load(config: Record) {\n        const query = isObjectFull(config.query) ? config.query : {}\n        const params = isObjectFull(config.params) ? config.params : {}\n        const serialize = isObjectFull(config.serialize) ? config.serialize : {}\n\n        CrudConfigService.config = deepmerge(\n            CrudConfigService.config,\n            { query, params, serialize },\n            { arrayMerge: (a, b, c) => b },\n        )\n    }\n}\n\nexport class CrudRoutesFactory {\n    protected options\n\n    protected swaggerModels: any = {}\n\n    constructor(private target: Object, options: CrudOptions) {\n        this.options = options\n        this.create()\n\n        console.log(\n            'CrudRoutesFactory::constructor',\n            // { ...options },\n            // this.targetProto,\n            // this.modelType,\n            // this.modelName,\n            // this.swaggerModels,\n        )\n    }\n\n    static create(target: Object, options: CrudOptions): CrudRoutesFactory {\n        return new CrudRoutesFactory(target, options)\n    }\n\n    get targetProto() {\n        // @ts-ignore\n        return this.target.prototype\n    }\n\n    get modelName() {\n        return this.options.model.type?.name\n    }\n\n    get modelType() {\n        return this.options.model.type\n    }\n\n    private create() {\n        const routesSchema = CrudRoutesFactory.getRoutesSchema()\n        this.mergeOptions()\n        this.setResponseModels()\n        this.createRoutes(routesSchema)\n        this.enableRoutes(routesSchema)\n    }\n\n    getOne(name: BaseRouteName) {\n        this.targetProto[name] = function getOne(req: any) {\n            return this.service.getOne(req)\n        }\n    }\n\n    getOneBase(name: BaseRouteName) {\n        this.targetProto[name] = function getOneBase(req: any) {\n            return this.service.getOneBase(req)\n        }\n    }\n\n    static getRoutesSchema(): BaseRoute[] {\n        return [\n            {\n                name: 'getOneBase',\n                path: '/',\n                method: RequestMethod.GET,\n                enable: false,\n                override: false,\n                withParams: true,\n            },\n            {\n                name: 'getOne',\n                path: '/',\n                method: RequestMethod.GET,\n                enable: false,\n                override: false,\n                withParams: false,\n            },\n        ]\n    }\n\n    mergeOptions() {\n        // merge query config\n        const query = isObjectFull(this.options.query) ? this.options.query : {}\n        this.options.query = { ...CrudConfigService.config.query, ...query }\n\n        // set dto\n        if (!isObjectFull(this.options.dto)) {\n            this.options.dto = {}\n        }\n\n        // set serialize\n        this.options.serialize = {\n            ...CrudConfigService.config.serialize,\n            ...this.options.serialize,\n        }\n\n        this.options.serialize.get = isFalse(this.options.serialize?.get)\n            ? false\n            : this.options.serialize?.get || this.modelType\n\n        this.options.serialize.getMany = isFalse(this.options.serialize?.getMany)\n            ? false\n            : this.options.serialize?.getMany\n            ? this.options.serialize?.getMany\n            : isFalse(this.options.serialize?.get)\n            ? false\n            : SerializeHelper.createGetManyDto(\n                  this.options.serialize?.get,\n                  this.modelName,\n              )\n\n        this.options.serialize.create = isFalse(this.options.serialize?.create)\n            ? false\n            : this.options.serialize?.create || this.modelType\n\n        this.options.serialize.update = isFalse(this.options.serialize?.update)\n            ? false\n            : this.options.serialize?.update || this.modelType\n\n        this.options.serialize.replace = isFalse(this.options.serialize?.replace)\n            ? false\n            : this.options.serialize?.replace || this.modelType\n\n        this.options.serialize.delete =\n            isFalse(this.options.serialize?.delete) ||\n            !this.options.routes?.deleteOneBase?.returnDeleted\n                ? false\n                : this.options.serialize?.delete || this.modelType\n\n        R.set('CRUD_OPTIONS_METADATA', this.options, this.target)\n    }\n\n    setResponseModels() {\n        const modelType = isFunction(this.modelType)\n            ? this.modelType\n            : SerializeHelper.createGetOneResponseDto(this.modelName)\n\n        this.swaggerModels.get = isFunction(this.options.serialize?.get)\n            ? this.options.serialize?.get\n            : modelType\n\n        this.swaggerModels.getMany =\n            this.options.serialize?.getMany ||\n            SerializeHelper.createGetManyDto(this.swaggerModels.get, this.modelName)\n\n        this.swaggerModels.create = isFunction(this.options.serialize?.create)\n            ? this.options.serialize?.create\n            : modelType\n\n        this.swaggerModels.update = isFunction(this.options.serialize?.update)\n            ? this.options.serialize?.update\n            : modelType\n\n        this.swaggerModels.replace = isFunction(this.options.serialize?.replace)\n            ? this.options.serialize?.replace\n            : modelType\n\n        this.swaggerModels.delete = isFunction(this.options.serialize?.delete)\n            ? this.options.serialize?.delete\n            : modelType\n\n        Swagger.setExtraModels(this.swaggerModels)\n    }\n\n    enableRoutes(routesSchema: BaseRoute[]) {\n        routesSchema.forEach((route) => {\n            if (!route.override && route.enable) {\n                R.setRoute(route, this.targetProto[route.name])\n            }\n        })\n    }\n\n    createRoutes(routesSchema: BaseRoute[]) {\n        routesSchema.forEach((route) => {\n            // create base method\n            /* this[route.name](route.name) */\n            route.enable = true\n\n            // set metadata\n            this.setSwaggerResponseOk(route.name)\n        })\n    }\n\n    setSwaggerResponseOk(name: BaseRouteName) {\n        const metadata = Swagger.getResponseOk(this.targetProto[name]) || {}\n        const metadataToAdd =\n            Swagger.createResponseMeta(name, this.options, this.swaggerModels) || {}\n\n        Swagger.setResponseOk(\n            // @ts-ignore\n            { ...metadata, ...metadataToAdd },\n            this.targetProto[name],\n        )\n    }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Swagger.html":{"url":"classes/Swagger.html","title":"class - Swagger","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Swagger\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/base/swagger-gen/crud-routes.factory.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                createResponseMeta\n                            \n                            \n                                    Static\n                                getExtraModels\n                            \n                            \n                                    Static\n                                getResponseOk\n                            \n                            \n                                    Static\n                                setExtraModels\n                            \n                            \n                                    Static\n                                setResponseOk\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            createResponseMeta\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createResponseMeta(name: BaseRouteName, options: CrudOptions, swaggerModels: literal type)\n                \n            \n\n\n            \n                \n                    Defined in src/base/swagger-gen/crud-routes.factory.ts:95\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                BaseRouteName\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                                CrudOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    swaggerModels\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     { [x: number]: any; }\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            getExtraModels\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getExtraModels(target: Record)\n                \n            \n\n\n            \n                \n                    Defined in src/base/swagger-gen/crud-routes.factory.ts:83\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    target\n                                    \n                                                Record\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     any[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            getResponseOk\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getResponseOk(func: Function)\n                \n            \n\n\n            \n                \n                    Defined in src/base/swagger-gen/crud-routes.factory.ts:89\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    func\n                                    \n                                                Function\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            setExtraModels\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setExtraModels(swaggerModels: literal type)\n                \n            \n\n\n            \n                \n                    Defined in src/base/swagger-gen/crud-routes.factory.ts:53\n                \n            \n\n\n            \n                \n                    Sets extra swagger metadata for GET Calls\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    swaggerModels\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            setResponseOk\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setResponseOk(metadata: any[], func: Function)\n                \n            \n\n\n            \n                \n                    Defined in src/base/swagger-gen/crud-routes.factory.ts:77\n                \n            \n\n\n            \n                \n                    Sets swagger metadata for response of GET Calls\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    metadata\n                                    \n                                            any[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    func\n                                    \n                                                Function\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { HttpStatus, RequestMethod } from '@nestjs/common'\n\nimport { Type } from 'class-transformer'\nimport * as deepmerge from 'deepmerge'\n\nimport {\n    ApiProperty,\n    BaseRoute,\n    isFalse,\n    isFunction,\n    isObjectFull,\n    objKeys,\n    swagger,\n    swaggerConst,\n} from './utils'\nimport type { CrudOptions, GetManyDefaultResponse, BaseRouteName } from './utils'\n\nexport class R {\n    static set(\n        metadataKey: string,\n        metadataValue: any,\n        target: Object,\n        propertyKey?: string | symbol,\n    ) {\n        if (!propertyKey) {\n            Reflect.defineMetadata(metadataKey, metadataValue, target)\n        } else {\n            Reflect.defineMetadata(metadataKey, metadataValue, target, propertyKey)\n        }\n    }\n\n    static get(\n        metadataKey: any,\n        target: Object,\n        propertyKey?: string | symbol,\n    ): T {\n        if (!propertyKey) return Reflect.getMetadata(metadataKey, target)\n\n        return Reflect.getMetadata(metadataKey, target, propertyKey)\n    }\n\n    static setRoute(route: BaseRoute, func: Function) {\n        R.set('path', route.path, func)\n        R.set('method', route.method, func)\n    }\n}\n\nexport class Swagger {\n    /**\n     * Sets extra swagger metadata for GET Calls\n     */\n    static setExtraModels(swaggerModels: {\n        [x: string]: any\n        get: Record\n    }) {\n        if (swaggerConst) {\n            const meta = Swagger.getExtraModels(swaggerModels.get)\n            const models = [\n                ...meta,\n                ...objKeys(swaggerModels)\n                    .map((name) => swaggerModels[name])\n                    .filter((one) => one && one.name !== swaggerModels.get.name),\n            ]\n\n            R.set(\n                swaggerConst.DECORATORS.API_EXTRA_MODELS,\n                models,\n                swaggerModels.get,\n            )\n        }\n    }\n\n    /**\n     * Sets swagger metadata for response of GET Calls\n     */\n    static setResponseOk(metadata: any[], func: Function) {\n        if (swaggerConst) {\n            R.set(swaggerConst.DECORATORS.API_RESPONSE, metadata, func)\n        }\n    }\n\n    static getExtraModels(target: Record): any[] {\n        return swaggerConst\n            ? R.get(swaggerConst.API_EXTRA_MODELS, target) || []\n            : []\n    }\n\n    static getResponseOk(func: Function) {\n        return swaggerConst\n            ? R.get(swaggerConst.DECORATORS.API_RESPONSE, func) || {}\n            : {}\n    }\n\n    static createResponseMeta(\n        name: BaseRouteName,\n        options: CrudOptions,\n        swaggerModels: {\n            [x: string]: any\n            get: { name: any }\n            getMany: { name: any }\n        },\n    ) {\n        if (swagger) {\n            const { query } = options\n\n            switch (name) {\n                case 'getOneBase':\n                    return {\n                        [HttpStatus.OK]: {\n                            description: 'Get one base response',\n                            type: swaggerModels.get,\n                        },\n                    }\n                case 'getOne':\n                    return {\n                        [HttpStatus.OK]: query?.alwaysPaginate\n                            ? {\n                                  description: 'Get paginated response',\n                                  type: swaggerModels.getMany,\n                              }\n                            : {\n                                  description: 'Get many base response',\n                                  schema: {\n                                      oneOf: [\n                                          {\n                                              $ref: swagger.getSchemaPath(\n                                                  swaggerModels.getMany.name,\n                                              ),\n                                          },\n                                          {\n                                              type: 'array',\n                                              items: {\n                                                  $ref: swagger.getSchemaPath(\n                                                      swaggerModels.get.name,\n                                                  ),\n                                              },\n                                          },\n                                      ],\n                                  },\n                              },\n                    }\n                default:\n                    // eslint-disable-next-line no-case-declarations\n                    const dto = swaggerModels[name.split('OneBase')[0]]\n\n                    return {\n                        [HttpStatus.OK]: {\n                            description: 'Response',\n                            schema: { $ref: swagger.getSchemaPath(dto.name) },\n                        },\n                    }\n            }\n        } else {\n            return {}\n        }\n    }\n}\n\nexport class SerializeHelper {\n    static createGetManyDto(dto: any, resourceName: string): any {\n        class GetManyResponseDto implements GetManyDefaultResponse {\n            @ApiProperty({ type: dto, isArray: true })\n            @Type(() => dto)\n            data!: any[]\n\n            @ApiProperty({ type: 'number' })\n            count!: number\n\n            @ApiProperty({ type: 'number' })\n            total!: number\n\n            @ApiProperty({ type: 'number' })\n            page!: number\n\n            @ApiProperty({ type: 'number' })\n            pageCount!: number\n        }\n\n        Object.defineProperty(GetManyResponseDto, 'name', {\n            writable: false,\n            value: `GetMany${resourceName}ResponseDto`,\n        })\n\n        return GetManyResponseDto\n    }\n\n    static createGetOneResponseDto(resourceName: string): any {\n        class GetOneResponseDto {}\n\n        Object.defineProperty(GetOneResponseDto, 'name', {\n            writable: false,\n            value: `${resourceName}ResponseDto`,\n        })\n\n        return GetOneResponseDto\n    }\n}\n\nexport class CrudConfigService {\n    static config: Partial = {\n        query: {\n            alwaysPaginate: false,\n        },\n    }\n\n    static load(config: Record) {\n        const query = isObjectFull(config.query) ? config.query : {}\n        const params = isObjectFull(config.params) ? config.params : {}\n        const serialize = isObjectFull(config.serialize) ? config.serialize : {}\n\n        CrudConfigService.config = deepmerge(\n            CrudConfigService.config,\n            { query, params, serialize },\n            { arrayMerge: (a, b, c) => b },\n        )\n    }\n}\n\nexport class CrudRoutesFactory {\n    protected options\n\n    protected swaggerModels: any = {}\n\n    constructor(private target: Object, options: CrudOptions) {\n        this.options = options\n        this.create()\n\n        console.log(\n            'CrudRoutesFactory::constructor',\n            // { ...options },\n            // this.targetProto,\n            // this.modelType,\n            // this.modelName,\n            // this.swaggerModels,\n        )\n    }\n\n    static create(target: Object, options: CrudOptions): CrudRoutesFactory {\n        return new CrudRoutesFactory(target, options)\n    }\n\n    get targetProto() {\n        // @ts-ignore\n        return this.target.prototype\n    }\n\n    get modelName() {\n        return this.options.model.type?.name\n    }\n\n    get modelType() {\n        return this.options.model.type\n    }\n\n    private create() {\n        const routesSchema = CrudRoutesFactory.getRoutesSchema()\n        this.mergeOptions()\n        this.setResponseModels()\n        this.createRoutes(routesSchema)\n        this.enableRoutes(routesSchema)\n    }\n\n    getOne(name: BaseRouteName) {\n        this.targetProto[name] = function getOne(req: any) {\n            return this.service.getOne(req)\n        }\n    }\n\n    getOneBase(name: BaseRouteName) {\n        this.targetProto[name] = function getOneBase(req: any) {\n            return this.service.getOneBase(req)\n        }\n    }\n\n    static getRoutesSchema(): BaseRoute[] {\n        return [\n            {\n                name: 'getOneBase',\n                path: '/',\n                method: RequestMethod.GET,\n                enable: false,\n                override: false,\n                withParams: true,\n            },\n            {\n                name: 'getOne',\n                path: '/',\n                method: RequestMethod.GET,\n                enable: false,\n                override: false,\n                withParams: false,\n            },\n        ]\n    }\n\n    mergeOptions() {\n        // merge query config\n        const query = isObjectFull(this.options.query) ? this.options.query : {}\n        this.options.query = { ...CrudConfigService.config.query, ...query }\n\n        // set dto\n        if (!isObjectFull(this.options.dto)) {\n            this.options.dto = {}\n        }\n\n        // set serialize\n        this.options.serialize = {\n            ...CrudConfigService.config.serialize,\n            ...this.options.serialize,\n        }\n\n        this.options.serialize.get = isFalse(this.options.serialize?.get)\n            ? false\n            : this.options.serialize?.get || this.modelType\n\n        this.options.serialize.getMany = isFalse(this.options.serialize?.getMany)\n            ? false\n            : this.options.serialize?.getMany\n            ? this.options.serialize?.getMany\n            : isFalse(this.options.serialize?.get)\n            ? false\n            : SerializeHelper.createGetManyDto(\n                  this.options.serialize?.get,\n                  this.modelName,\n              )\n\n        this.options.serialize.create = isFalse(this.options.serialize?.create)\n            ? false\n            : this.options.serialize?.create || this.modelType\n\n        this.options.serialize.update = isFalse(this.options.serialize?.update)\n            ? false\n            : this.options.serialize?.update || this.modelType\n\n        this.options.serialize.replace = isFalse(this.options.serialize?.replace)\n            ? false\n            : this.options.serialize?.replace || this.modelType\n\n        this.options.serialize.delete =\n            isFalse(this.options.serialize?.delete) ||\n            !this.options.routes?.deleteOneBase?.returnDeleted\n                ? false\n                : this.options.serialize?.delete || this.modelType\n\n        R.set('CRUD_OPTIONS_METADATA', this.options, this.target)\n    }\n\n    setResponseModels() {\n        const modelType = isFunction(this.modelType)\n            ? this.modelType\n            : SerializeHelper.createGetOneResponseDto(this.modelName)\n\n        this.swaggerModels.get = isFunction(this.options.serialize?.get)\n            ? this.options.serialize?.get\n            : modelType\n\n        this.swaggerModels.getMany =\n            this.options.serialize?.getMany ||\n            SerializeHelper.createGetManyDto(this.swaggerModels.get, this.modelName)\n\n        this.swaggerModels.create = isFunction(this.options.serialize?.create)\n            ? this.options.serialize?.create\n            : modelType\n\n        this.swaggerModels.update = isFunction(this.options.serialize?.update)\n            ? this.options.serialize?.update\n            : modelType\n\n        this.swaggerModels.replace = isFunction(this.options.serialize?.replace)\n            ? this.options.serialize?.replace\n            : modelType\n\n        this.swaggerModels.delete = isFunction(this.options.serialize?.delete)\n            ? this.options.serialize?.delete\n            : modelType\n\n        Swagger.setExtraModels(this.swaggerModels)\n    }\n\n    enableRoutes(routesSchema: BaseRoute[]) {\n        routesSchema.forEach((route) => {\n            if (!route.override && route.enable) {\n                R.setRoute(route, this.targetProto[route.name])\n            }\n        })\n    }\n\n    createRoutes(routesSchema: BaseRoute[]) {\n        routesSchema.forEach((route) => {\n            // create base method\n            /* this[route.name](route.name) */\n            route.enable = true\n\n            // set metadata\n            this.setSwaggerResponseOk(route.name)\n        })\n    }\n\n    setSwaggerResponseOk(name: BaseRouteName) {\n        const metadata = Swagger.getResponseOk(this.targetProto[name]) || {}\n        const metadataToAdd =\n            Swagger.createResponseMeta(name, this.options, this.swaggerModels) || {}\n\n        Swagger.setResponseOk(\n            // @ts-ignore\n            { ...metadata, ...metadataToAdd },\n            this.targetProto[name],\n        )\n    }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Tag.html":{"url":"classes/Tag.html","title":"class - Tag","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Tag\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/tags/tag.model.ts\n        \n\n\n            \n                Extends\n            \n            \n                        BaseModel\n            \n\n            \n                Implements\n            \n            \n                            ITag\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                jsonSchema\n                            \n                            \n                                name\n                            \n                            \n                                    Static\n                                tableName\n                            \n                            \n                                created_at\n                            \n                            \n                                    Optional\n                                deleted_at\n                            \n                            \n                                    Static\n                                hidden\n                            \n                            \n                                id\n                            \n                            \n                                    Static\n                                QueryBuilder\n                            \n                            \n                                updated_at\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                $beforeUpdate\n                            \n                            \n                                    Async\n                                fetchRelation\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            jsonSchema\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     JSONSchema\n\n                        \n                    \n                    \n                        \n                            Default value : {\n        type: 'object',\n        required: ['name'],\n        properties: {\n            id: { type: 'integer' },\n            name: { type: 'string', minLength: 2, maxLength: 255 },\n        },\n    }\n                        \n                    \n                        \n                            \n                                    Defined in src/tags/tag.model.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/tags/tag.model.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            tableName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'tags'\n                        \n                    \n                        \n                            \n                                    Defined in src/tags/tag.model.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            created_at\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseModel:39\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            deleted_at\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     any | null\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseModel:43\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            hidden\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n        'salt',\n        'password',\n        'created_at',\n        'updated_at',\n        // 'deleted_at'\n    ]\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseModel:25\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseModel:37\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            QueryBuilder\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : CustomQueryBuilder\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseModel:35\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updated_at\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseModel:41\n\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            $beforeUpdate\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    $beforeUpdate(opt: ModelOptions, queryContext: QueryContext)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseModel\n\n                \n            \n            \n                \n                        Defined in         BaseModel:60\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    opt\n                                    \n                                            ModelOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    queryContext\n                                    \n                                            QueryContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            fetchRelation\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    fetchRelation(expression: string | Record, options: Objection.FetchGraphOptions)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseModel\n\n                \n            \n            \n                \n                        Defined in         BaseModel:47\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    expression\n                                    \n                                                string | Record\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                            Objection.FetchGraphOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/swagger'\n\nimport { IsNotEmpty, IsString, MaxLength, MinLength } from 'class-validator'\nimport type { JSONSchema, ModelObject, PartialModelObject } from 'objection'\n\nimport { BaseModel } from '../database/models/base.model'\n\ninterface ITag {\n    name: string\n}\n\nexport class Tag extends BaseModel implements ITag {\n    static tableName = 'tags'\n\n    name!: string\n\n    // JSON schema is not the database schema! Nothing is generated based on this.\n    // This is only used for validation. Whenever a model instance is created it is checked against this schema.\n    static jsonSchema: JSONSchema = {\n        type: 'object',\n        required: ['name'],\n        properties: {\n            id: { type: 'integer' },\n            name: { type: 'string', minLength: 2, maxLength: 255 },\n        },\n    }\n}\n\n// The `ModelObject` generic gives you a clean interface that can be used on the frontend, without any of the objection Model class properties or methods.\nexport type TagShape = ModelObject\nexport type PartialTagShape = PartialModelObject\n\nexport class CreateTagsDto implements ITag {\n    @IsString()\n    @IsNotEmpty()\n    @MinLength(2)\n    @MaxLength(36)\n    name!: string\n}\n\nexport class UpdateTagsDto extends PartialType(CreateTagsDto) {}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/TagsController.html":{"url":"controllers/TagsController.html","title":"controller - TagsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  TagsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/tags/tags.controller.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            create\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    create(input: CreateTagsDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n            \n                \n                    Defined in src/tags/tags.controller.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    input\n                                    \n                                                CreateTagsDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            update\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: number, input: UpdateTagsDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Put(':id')\n                \n            \n\n            \n                \n                    Defined in src/tags/tags.controller.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    input\n                                    \n                                                UpdateTagsDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        /* eslint-disable no-use-before-define */\nimport {\n    Body,\n    Controller,\n    Delete,\n    Get,\n    HttpStatus,\n    Param,\n    ParseIntPipe,\n    Post,\n    Put,\n    UseGuards,\n} from '@nestjs/common'\nimport { AuthGuard } from '@nestjs/passport'\nimport { ApiBearerAuth, ApiTags } from '@nestjs/swagger'\n\nimport { CrudController } from '../base/crud'\nimport { CreateTagsDto, Tag, UpdateTagsDto } from './tag.model'\nimport { TagsService } from './tags.service'\n\n@Controller(TagsController.path)\n@ApiTags(TagsController.name)\n@ApiBearerAuth()\n@UseGuards(AuthGuard('jwt'))\nexport class TagsController extends CrudController {\n    static path = 'tags'\n\n    constructor(readonly service: TagsService) {\n        super(service)\n    }\n\n    @Post()\n    async create(@Body() input: CreateTagsDto) {\n        const data = await this.service.create(input)\n\n        return {\n            data,\n            statusCode: HttpStatus.CREATED,\n        }\n    }\n\n    @Put(':id')\n    async update(\n        @Param('id', ParseIntPipe) id: number,\n        @Body() input: UpdateTagsDto,\n    ) {\n        const data = await this.service.update(id, input)\n\n        return {\n            data,\n            statusCode: !data ? HttpStatus.NO_CONTENT : HttpStatus.OK,\n        }\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TagsModule.html":{"url":"modules/TagsModule.html","title":"module - TagsModule","body":"\n                   \n\n\n\n\n    Modules\n    TagsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TagsModule\n\n\n\ncluster_TagsModule_providers\n\n\n\ncluster_TagsModule_exports\n\n\n\n\nTagsService \n\nTagsService \n\n\n\nTagsModule\n\nTagsModule\n\nTagsService  -->\n\nTagsModule->TagsService \n\n\n\n\n\nTagsService\n\nTagsService\n\nTagsModule -->\n\nTagsService->TagsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/tags/tags.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            TagsService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            TagsController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            TagsService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common'\n\nimport { TagsController } from './tags.controller'\nimport { TagsService } from './tags.service'\n\n@Module({\n    controllers: [TagsController],\n    providers: [TagsService],\n    exports: [TagsService],\n})\nexport class TagsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TagsService.html":{"url":"injectables/TagsService.html","title":"injectable - TagsService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  TagsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/tags/tags.service.ts\n        \n\n\n            \n                Extends\n            \n            \n                        CrudService\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                findOneByEmail\n                            \n                            \n                                    Async\n                                findOneById\n                            \n                            \n                                    Async\n                                paginatedFindAll\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(model: ModelClass)\n                    \n                \n                        \n                            \n                                Defined in src/tags/tags.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        model\n                                                  \n                                                        \n                                                                        ModelClass\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            create\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    create(data: CreateTagsDto)\n                \n            \n\n\n            \n                \n                    Defined in src/tags/tags.service.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                CreateTagsDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            create\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    create(input: CreateUserDto | CreateTagsDto | T)\n                \n            \n\n\n            \n                \n                    Inherited from         CrudService\n\n                \n            \n            \n                \n                        Defined in         CrudService:99\n\n                \n            \n\n\n            \n                \n                    Created a entry and return it\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    input\n                                    \n                                                CreateUserDto | CreateTagsDto | T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findAll\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll()\n                \n            \n\n\n            \n                \n                    Inherited from         CrudService\n\n                \n            \n            \n                \n                        Defined in         CrudService:27\n\n                \n            \n\n\n            \n                \n                    Finds all entries and return the result\n\n\n                    \n                        Returns :     {}\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findOne\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(filter: object)\n                \n            \n\n\n            \n                \n                    Inherited from         CrudService\n\n                \n            \n            \n                \n                        Defined in         CrudService:56\n\n                \n            \n\n\n            \n                \n                    Finds one entry with where filter and return the result\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                                object\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findOneByEmail\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findOneByEmail(email: string)\n                \n            \n\n\n            \n                \n                    Inherited from         CrudService\n\n                \n            \n            \n                \n                        Defined in         CrudService:78\n\n                \n            \n\n\n            \n                \n                    Finds onw entry by email and return the result\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findOneById\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findOneById(id: number)\n                \n            \n\n\n            \n                \n                    Inherited from         CrudService\n\n                \n            \n            \n                \n                        Defined in         CrudService:67\n\n                \n            \n\n\n            \n                \n                    Finds paginated entries and return the result\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            paginatedFindAll\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    paginatedFindAll(paginationParams: PaginationParams)\n                \n            \n\n\n            \n                \n                    Inherited from         CrudService\n\n                \n            \n            \n                \n                        Defined in         CrudService:38\n\n                \n            \n\n\n            \n                \n                    Finds paginated entries and return the result\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    paginationParams\n                                    \n                                                PaginationParams\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            remove\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    remove(id: number)\n                \n            \n\n\n            \n                \n                    Inherited from         CrudService\n\n                \n            \n            \n                \n                        Defined in         CrudService:89\n\n                \n            \n\n\n            \n                \n                    Soft-deletes a entry and return it\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            update\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: number, input: Partial)\n                \n            \n\n\n            \n                \n                    Inherited from         CrudService\n\n                \n            \n            \n                \n                        Defined in         CrudService:112\n\n                \n            \n\n\n            \n                \n                    Updates a entry and return it\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    input\n                                    \n                                            Partial\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { BadRequestException, Inject, Injectable } from '@nestjs/common'\n\nimport { ModelClass } from 'objection'\n\nimport { CrudService } from '../base/crud'\nimport { CreateTagsDto, Tag } from './tag.model'\n\n@Injectable()\nexport class TagsService extends CrudService {\n    constructor(@Inject(Tag.name) readonly model: ModelClass) {\n        super(model)\n    }\n\n    async create(data: CreateTagsDto) {\n        const tag = await this.findOne({ name: data.name })\n\n        if (tag)\n            return Promise.reject(\n                new BadRequestException([`Duplicate tag name: ${tag.name}`]),\n            )\n\n        return super.create(data)\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TimeoutInterceptor.html":{"url":"injectables/TimeoutInterceptor.html","title":"injectable - TimeoutInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  TimeoutInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/infra/interceptors/timeout.ts\n        \n\n            \n                Description\n            \n            \n                Timeout interceptor is Observer which terminate request if it takes more than timeout value\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            intercept\n                        \n                        \n                    \n                \n            \n            \n                \nintercept(context: ExecutionContext, next: CallHandler)\n                \n            \n\n\n            \n                \n                    Defined in src/infra/interceptors/timeout.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                            CallHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n    Injectable,\n    NestInterceptor,\n    ExecutionContext,\n    CallHandler,\n    RequestTimeoutException,\n} from '@nestjs/common'\n\nimport { Observable, throwError, TimeoutError } from 'rxjs'\nimport { catchError, timeout } from 'rxjs/operators'\n\n/**\n * Timeout interceptor is Observer which terminate request if it takes more than timeout value\n */\n@Injectable()\nexport class TimeoutInterceptor implements NestInterceptor {\n    intercept(context: ExecutionContext, next: CallHandler): Observable {\n        return next.handle().pipe(\n            timeout(10000), // end request after 10_000 milliseconds\n\n            catchError((e) => {\n                if (e instanceof TimeoutError) {\n                    return throwError(new RequestTimeoutException())\n                }\n\n                return throwError(e)\n            }),\n        )\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TokenPayload.html":{"url":"interfaces/TokenPayload.html","title":"interface - TokenPayload","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  TokenPayload\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/tokenPayload.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        email\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        interface TokenPayload {\n    email: string\n}\n\nexport default TokenPayload\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TransformInterceptor.html":{"url":"injectables/TransformInterceptor.html","title":"injectable - TransformInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  TransformInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/infra/interceptors/transform.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            intercept\n                        \n                        \n                    \n                \n            \n            \n                \nintercept(context: ExecutionContext, next: CallHandler)\n                \n            \n\n\n            \n                \n                    Defined in src/infra/interceptors/transform.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                            CallHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n    Injectable,\n    NestInterceptor,\n    ExecutionContext,\n    CallHandler,\n} from '@nestjs/common'\n\nimport { Observable } from 'rxjs'\nimport { map } from 'rxjs/operators'\n\nexport interface Response {\n    data: T\n}\n\n@Injectable()\nexport class TransformInterceptor implements NestInterceptor> {\n    intercept(\n        context: ExecutionContext,\n        next: CallHandler,\n    ): Observable> {\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n        return next.handle().pipe(map((data) => ({ data })))\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateTagsDto.html":{"url":"classes/UpdateTagsDto.html","title":"class - UpdateTagsDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateTagsDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/tags/tag.model.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/swagger'\n\nimport { IsNotEmpty, IsString, MaxLength, MinLength } from 'class-validator'\nimport type { JSONSchema, ModelObject, PartialModelObject } from 'objection'\n\nimport { BaseModel } from '../database/models/base.model'\n\ninterface ITag {\n    name: string\n}\n\nexport class Tag extends BaseModel implements ITag {\n    static tableName = 'tags'\n\n    name!: string\n\n    // JSON schema is not the database schema! Nothing is generated based on this.\n    // This is only used for validation. Whenever a model instance is created it is checked against this schema.\n    static jsonSchema: JSONSchema = {\n        type: 'object',\n        required: ['name'],\n        properties: {\n            id: { type: 'integer' },\n            name: { type: 'string', minLength: 2, maxLength: 255 },\n        },\n    }\n}\n\n// The `ModelObject` generic gives you a clean interface that can be used on the frontend, without any of the objection Model class properties or methods.\nexport type TagShape = ModelObject\nexport type PartialTagShape = PartialModelObject\n\nexport class CreateTagsDto implements ITag {\n    @IsString()\n    @IsNotEmpty()\n    @MinLength(2)\n    @MaxLength(36)\n    name!: string\n}\n\nexport class UpdateTagsDto extends PartialType(CreateTagsDto) {}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateUserDto.html":{"url":"classes/UpdateUserDto.html","title":"class - UpdateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/user.model.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/swagger'\n\nimport * as bcrypt from 'bcrypt'\nimport {\n    IsString,\n    MinLength,\n    IsNotEmpty,\n    MaxLength,\n    IsEmail,\n    IsBoolean,\n} from 'class-validator'\nimport type { JSONSchema, Modifiers, PartialModelObject } from 'objection'\nimport { ModelObject, QueryContext } from 'objection'\n\nimport { BaseModel } from '../database/models/base.model'\n\ninterface IUser {\n    username: string\n    email: string\n    firstName?: string\n    lastName?: string\n    isActive: boolean\n    password: string\n}\n\nexport class User extends BaseModel implements IUser {\n    static tableName = 'users'\n\n    username!: string\n\n    email!: string\n\n    firstName?: string\n\n    lastName?: string\n\n    isActive!: boolean\n\n    password!: string\n\n    // JSON schema is not the database schema! Nothing is generated based on this.\n    // This is only used for validation. Whenever a model instance is created it is checked against this schema.\n    static jsonSchema: JSONSchema = {\n        type: 'object',\n        required: ['username', 'email', 'password'],\n        properties: {\n            id: { type: 'integer', readOnly: true },\n            username: { type: 'string', minLength: 3, maxLength: 255 },\n            email: {\n                type: 'string',\n                minLength: 3,\n                maxLength: 255,\n                format: 'email',\n            },\n            password: { type: 'string', minLength: 8, maxLength: 255 },\n            firstName: { type: 'string', minLength: 1, maxLength: 255 },\n            lastName: { type: 'string', minLength: 1, maxLength: 255 },\n            isActive: { type: 'boolean' },\n        },\n    }\n\n    // Modifiers are reusable query snippets that can be used in various places.\n    static modifiers: Modifiers = {\n        // Our example modifier is a a semi-dumb fuzzy name match. We split the name into pieces using whitespace\n        // and then try to partially match each of those pieces to both the `firstName` and the `lastName` fields.\n\n        searchByName(query, name: string) {\n            // This `where` simply creates parentheses so that other `where` statements don't get mixed with the these.\n\n            query.where((q) => {\n                for (const namePart of name.trim().split(/\\s+/)) {\n                    for (const column of ['firstName', 'lastName']) {\n                        q.orWhereRaw('lower(??) like ?', [\n                            column,\n                            `${namePart.toLowerCase()}%`,\n                        ])\n                    }\n                }\n            })\n        },\n    }\n\n    async hashPassword(password: string) {\n        const hash = await bcrypt.hash(password, 12)\n        return hash\n    }\n\n    async $beforeInsert(queryContext: QueryContext) {\n        await super.$beforeInsert(queryContext)\n        this.password = await this.hashPassword(this.password)\n    }\n\n    /*\n    async $beforeUpdate(opt: ModelOptions, queryContext: QueryContext) {\n        await super.$beforeUpdate(opt, queryContext)\n        this.password = await this.hashPassword(this.password)\n    }\n    */\n}\n\n// The `ModelObject` generic gives you a clean interface that can be used on the frontend, without any of the objection Model class properties or methods.\nexport type UserShape = ModelObject\nexport type PartialUserShape = PartialModelObject\n\nexport class CreateUserDto implements IUser {\n    @IsString()\n    @IsNotEmpty()\n    @MinLength(2)\n    @MaxLength(36)\n    username!: string\n\n    @IsEmail()\n    @IsNotEmpty()\n    @MinLength(2)\n    email!: string\n\n    @IsString()\n    @IsNotEmpty()\n    @MinLength(8)\n    password!: string\n\n    @IsString()\n    @IsNotEmpty()\n    @MinLength(2)\n    firstName?: string\n\n    @IsString()\n    @IsNotEmpty()\n    @MinLength(2)\n    lastName?: string\n\n    @IsBoolean()\n    isActive!: boolean\n}\n\nexport class UpdateUserDto extends PartialType(CreateUserDto) {}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/User.html":{"url":"classes/User.html","title":"class - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/user.model.ts\n        \n\n\n            \n                Extends\n            \n            \n                        BaseModel\n            \n\n            \n                Implements\n            \n            \n                            IUser\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                email\n                            \n                            \n                                    Optional\n                                firstName\n                            \n                            \n                                isActive\n                            \n                            \n                                    Static\n                                jsonSchema\n                            \n                            \n                                    Optional\n                                lastName\n                            \n                            \n                                    Static\n                                modifiers\n                            \n                            \n                                password\n                            \n                            \n                                    Static\n                                tableName\n                            \n                            \n                                username\n                            \n                            \n                                created_at\n                            \n                            \n                                    Optional\n                                deleted_at\n                            \n                            \n                                    Static\n                                hidden\n                            \n                            \n                                id\n                            \n                            \n                                    Static\n                                QueryBuilder\n                            \n                            \n                                updated_at\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                $beforeInsert\n                            \n                            \n                                    Async\n                                hashPassword\n                            \n                            \n                                    Async\n                                $beforeUpdate\n                            \n                            \n                                    Async\n                                fetchRelation\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            email\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/users/user.model.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            firstName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/users/user.model.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isActive\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/users/user.model.ts:38\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            jsonSchema\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     JSONSchema\n\n                        \n                    \n                    \n                        \n                            Default value : {\n        type: 'object',\n        required: ['username', 'email', 'password'],\n        properties: {\n            id: { type: 'integer', readOnly: true },\n            username: { type: 'string', minLength: 3, maxLength: 255 },\n            email: {\n                type: 'string',\n                minLength: 3,\n                maxLength: 255,\n                format: 'email',\n            },\n            password: { type: 'string', minLength: 8, maxLength: 255 },\n            firstName: { type: 'string', minLength: 1, maxLength: 255 },\n            lastName: { type: 'string', minLength: 1, maxLength: 255 },\n            isActive: { type: 'boolean' },\n        },\n    }\n                        \n                    \n                        \n                            \n                                    Defined in src/users/user.model.ts:44\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            lastName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/users/user.model.ts:36\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            modifiers\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Modifiers\n\n                        \n                    \n                    \n                        \n                            Default value : {\n        // Our example modifier is a a semi-dumb fuzzy name match. We split the name into pieces using whitespace\n        // and then try to partially match each of those pieces to both the `firstName` and the `lastName` fields.\n\n        searchByName(query, name: string) {\n            // This `where` simply creates parentheses so that other `where` statements don't get mixed with the these.\n\n            query.where((q) => {\n                for (const namePart of name.trim().split(/\\s+/)) {\n                    for (const column of ['firstName', 'lastName']) {\n                        q.orWhereRaw('lower(??) like ?', [\n                            column,\n                            `${namePart.toLowerCase()}%`,\n                        ])\n                    }\n                }\n            })\n        },\n    }\n                        \n                    \n                        \n                            \n                                    Defined in src/users/user.model.ts:64\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            password\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/users/user.model.ts:40\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            tableName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'users'\n                        \n                    \n                        \n                            \n                                    Defined in src/users/user.model.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            username\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/users/user.model.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            created_at\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseModel:39\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            deleted_at\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     any | null\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseModel:43\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            hidden\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n        'salt',\n        'password',\n        'created_at',\n        'updated_at',\n        // 'deleted_at'\n    ]\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseModel:25\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseModel:37\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            QueryBuilder\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : CustomQueryBuilder\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseModel:35\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updated_at\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseModel:41\n\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            $beforeInsert\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    $beforeInsert(queryContext: QueryContext)\n                \n            \n\n\n            \n                \n                    Defined in src/users/user.model.ts:89\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    queryContext\n                                    \n                                            QueryContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            hashPassword\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    hashPassword(password: string)\n                \n            \n\n\n            \n                \n                    Defined in src/users/user.model.ts:84\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            $beforeUpdate\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    $beforeUpdate(opt: ModelOptions, queryContext: QueryContext)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseModel\n\n                \n            \n            \n                \n                        Defined in         BaseModel:60\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    opt\n                                    \n                                            ModelOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    queryContext\n                                    \n                                            QueryContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            fetchRelation\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    fetchRelation(expression: string | Record, options: Objection.FetchGraphOptions)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseModel\n\n                \n            \n            \n                \n                        Defined in         BaseModel:47\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    expression\n                                    \n                                                string | Record\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                            Objection.FetchGraphOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/swagger'\n\nimport * as bcrypt from 'bcrypt'\nimport {\n    IsString,\n    MinLength,\n    IsNotEmpty,\n    MaxLength,\n    IsEmail,\n    IsBoolean,\n} from 'class-validator'\nimport type { JSONSchema, Modifiers, PartialModelObject } from 'objection'\nimport { ModelObject, QueryContext } from 'objection'\n\nimport { BaseModel } from '../database/models/base.model'\n\ninterface IUser {\n    username: string\n    email: string\n    firstName?: string\n    lastName?: string\n    isActive: boolean\n    password: string\n}\n\nexport class User extends BaseModel implements IUser {\n    static tableName = 'users'\n\n    username!: string\n\n    email!: string\n\n    firstName?: string\n\n    lastName?: string\n\n    isActive!: boolean\n\n    password!: string\n\n    // JSON schema is not the database schema! Nothing is generated based on this.\n    // This is only used for validation. Whenever a model instance is created it is checked against this schema.\n    static jsonSchema: JSONSchema = {\n        type: 'object',\n        required: ['username', 'email', 'password'],\n        properties: {\n            id: { type: 'integer', readOnly: true },\n            username: { type: 'string', minLength: 3, maxLength: 255 },\n            email: {\n                type: 'string',\n                minLength: 3,\n                maxLength: 255,\n                format: 'email',\n            },\n            password: { type: 'string', minLength: 8, maxLength: 255 },\n            firstName: { type: 'string', minLength: 1, maxLength: 255 },\n            lastName: { type: 'string', minLength: 1, maxLength: 255 },\n            isActive: { type: 'boolean' },\n        },\n    }\n\n    // Modifiers are reusable query snippets that can be used in various places.\n    static modifiers: Modifiers = {\n        // Our example modifier is a a semi-dumb fuzzy name match. We split the name into pieces using whitespace\n        // and then try to partially match each of those pieces to both the `firstName` and the `lastName` fields.\n\n        searchByName(query, name: string) {\n            // This `where` simply creates parentheses so that other `where` statements don't get mixed with the these.\n\n            query.where((q) => {\n                for (const namePart of name.trim().split(/\\s+/)) {\n                    for (const column of ['firstName', 'lastName']) {\n                        q.orWhereRaw('lower(??) like ?', [\n                            column,\n                            `${namePart.toLowerCase()}%`,\n                        ])\n                    }\n                }\n            })\n        },\n    }\n\n    async hashPassword(password: string) {\n        const hash = await bcrypt.hash(password, 12)\n        return hash\n    }\n\n    async $beforeInsert(queryContext: QueryContext) {\n        await super.$beforeInsert(queryContext)\n        this.password = await this.hashPassword(this.password)\n    }\n\n    /*\n    async $beforeUpdate(opt: ModelOptions, queryContext: QueryContext) {\n        await super.$beforeUpdate(opt, queryContext)\n        this.password = await this.hashPassword(this.password)\n    }\n    */\n}\n\n// The `ModelObject` generic gives you a clean interface that can be used on the frontend, without any of the objection Model class properties or methods.\nexport type UserShape = ModelObject\nexport type PartialUserShape = PartialModelObject\n\nexport class CreateUserDto implements IUser {\n    @IsString()\n    @IsNotEmpty()\n    @MinLength(2)\n    @MaxLength(36)\n    username!: string\n\n    @IsEmail()\n    @IsNotEmpty()\n    @MinLength(2)\n    email!: string\n\n    @IsString()\n    @IsNotEmpty()\n    @MinLength(8)\n    password!: string\n\n    @IsString()\n    @IsNotEmpty()\n    @MinLength(2)\n    firstName?: string\n\n    @IsString()\n    @IsNotEmpty()\n    @MinLength(2)\n    lastName?: string\n\n    @IsBoolean()\n    isActive!: boolean\n}\n\nexport class UpdateUserDto extends PartialType(CreateUserDto) {}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UserPost.html":{"url":"interfaces/UserPost.html","title":"interface - UserPost","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  UserPost\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/domain.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        adCorporateLogoUrl\n                                \n                                \n                                        commentsCount\n                                \n                                \n                                        corporateDescription\n                                \n                                \n                                        corporateName\n                                \n                                \n                                        isUserReactedToPost\n                                \n                                \n                                        ownPage\n                                \n                                \n                                        postBy\n                                \n                                \n                                        postId\n                                \n                                \n                                        postImage\n                                \n                                \n                                        postTime\n                                \n                                \n                                        postType\n                                \n                                \n                                        postVideo\n                                \n                                \n                                        reactionsCount\n                                \n                                \n                                        timeAgo\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        adCorporateLogoUrl\n                                    \n                                \n                                \n                                    \n                                        adCorporateLogoUrl:     string | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        commentsCount\n                                    \n                                \n                                \n                                    \n                                        commentsCount:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        corporateDescription\n                                    \n                                \n                                \n                                    \n                                        corporateDescription:     string | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        corporateName\n                                    \n                                \n                                \n                                    \n                                        corporateName:     string | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isUserReactedToPost\n                                    \n                                \n                                \n                                    \n                                        isUserReactedToPost:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ownPage\n                                    \n                                \n                                \n                                    \n                                        ownPage:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        postBy\n                                    \n                                \n                                \n                                    \n                                        postBy:         PostedByUser\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         PostedByUser\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        postId\n                                    \n                                \n                                \n                                    \n                                        postId:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        postImage\n                                    \n                                \n                                \n                                    \n                                        postImage:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        postTime\n                                    \n                                \n                                \n                                    \n                                        postTime:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        postType\n                                    \n                                \n                                \n                                    \n                                        postType:         PostType\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         PostType\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        postVideo\n                                    \n                                \n                                \n                                    \n                                        postVideo:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        reactionsCount\n                                    \n                                \n                                \n                                    \n                                        reactionsCount:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        timeAgo\n                                    \n                                \n                                \n                                    \n                                        timeAgo:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { HttpStatus } from '@nestjs/common'\n\nexport type Results =\n    | GetAppLaunchData\n    | GetUserProfile\n    | GetUserPosts\n    | GetComments\n    | GetRescueList\n    | GetFollowers\n    | GetFollowing\n\nexport type APIError = Error | string | null\n\nexport interface Result {\n    data: T\n    error?: APIError\n    message?: string | string[]\n    statusCode: HttpStatus\n}\n\nexport interface APIResponse {\n    data: T\n    error?: APIError\n    message?: string | string[]\n    statusCode: HttpStatus\n\n    count?: number\n    page?: number\n    pageCount?: number\n    total?: number\n}\n\nexport interface GetAppLaunchData {\n    link: 'api:/'\n    response: APIResponse\n}\n\nexport interface GetUserProfile {\n    link: 'api:v1/user/getUserProfile?userId=25'\n    response: APIResponse\n}\n\nexport interface GetUserPosts {\n    link: 'api:v1/user/getUserPosts?pageNo=0&pageSize=25'\n    response: APIResponse\n}\n\nexport interface GetRescueList {\n    link: 'api:v1/rescue/getRescueList?pageNo=0&pageSize=10&status=pending|inProgress|completed|nearest'\n    response: APIResponse\n}\n\nexport interface GetComments {\n    link: 'api:v1/rescue/getComments?pageNo=0&pageSize=10&postId=1230'\n    response: APIResponse\n}\n\nexport interface GetFollowers {\n    link: 'api:v1/rescue/getUserFollowers?userId=1230'\n    response: APIResponse\n}\n\nexport interface GetFollowing {\n    link: 'api:v1/rescue/getUserFollowing?userId=1230'\n    response: APIResponse\n}\n\nexport interface AppLaunchAction {\n    actionId: number\n    action: string\n    isActive: boolean\n    subject?: string\n}\n\nexport interface User {\n    usesId: number\n\n    coverImage: string\n    following: boolean\n    gender: string\n    isOwnProfile: number\n    isRescuer: boolean\n    latitude: number\n    longitude: number\n    numberOfFollowers: number\n    numberOfFollowing: number\n    numberOfPosts: number\n    numberOfRescuesCompleted: number\n    numberOfRescuesCreated: number\n    numberOfRescuesInProgress: number\n    profileImage: string\n    rescuer: boolean\n    userAddress: string\n    userContacts: string\n    userEmail: string\n    userName: string\n    badge: {\n        badgeId: number\n        badgeName: string\n        badgeDescription: string\n        recuesCompletionNeeded: number\n    }\n    setting: {\n        showMyContacts: boolean\n        getNotifications: boolean\n    }\n}\n\nexport interface PostType {\n    postTypeId: number\n    postType: string\n}\n\nexport interface PostedByUser {\n    usesId: number\n    badgeName: string\n    following: boolean\n    profileImage: string\n    rescuer: boolean\n    userName: string\n}\n\nexport interface UserPost {\n    postId: number\n    commentsCount: number\n    isUserReactedToPost: boolean\n    ownPage: boolean\n    postBy: PostedByUser\n    postImage: string\n    postTime: string\n    postType: PostType\n    postVideo: string\n    reactionsCount: number\n    timeAgo: string\n\n    adCorporateLogoUrl: string | null\n    corporateDescription: string | null\n    corporateName: string | null\n}\n\nexport interface UserPosts {\n    isRecent: boolean\n    feed: UserPost[]\n}\n\nexport interface Rescues {\n    rescueId: number\n    animalImageUrl: string\n    distance: number\n    distanceAway: string\n    emergencyType: string\n    postedBy: string\n    postedMinAgo: string\n    rescueDate: Date\n    rescuedPetName: string\n    rescueLocality: string\n    rescuers: {\n        contact: number\n        name: string\n        profileId: number\n        profileImageUrl: string\n        rescues: boolean\n        showMyNumber: boolean\n    }\n    rescueStatus: string\n    viewsCont: number\n}\n\nexport interface RescueLists {\n    rescues: Rescues[]\n}\n\nexport interface Comment {\n    commentId: number\n    comment: string\n    commentedUseName: string\n    commentedUserId: number\n    timeAgo: string\n}\n\nexport interface Comments {\n    comments: Comment[]\n}\n\nexport interface Follower {\n    userId: number\n    userName: string\n    profileImage: string\n    areYouFollowing: boolean\n    showRemoveOption: boolean\n}\n\nexport interface Following extends Follower {}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UserPosts.html":{"url":"interfaces/UserPosts.html","title":"interface - UserPosts","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  UserPosts\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/domain.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        feed\n                                \n                                \n                                        isRecent\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        feed\n                                    \n                                \n                                \n                                    \n                                        feed:         UserPost[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         UserPost[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isRecent\n                                    \n                                \n                                \n                                    \n                                        isRecent:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { HttpStatus } from '@nestjs/common'\n\nexport type Results =\n    | GetAppLaunchData\n    | GetUserProfile\n    | GetUserPosts\n    | GetComments\n    | GetRescueList\n    | GetFollowers\n    | GetFollowing\n\nexport type APIError = Error | string | null\n\nexport interface Result {\n    data: T\n    error?: APIError\n    message?: string | string[]\n    statusCode: HttpStatus\n}\n\nexport interface APIResponse {\n    data: T\n    error?: APIError\n    message?: string | string[]\n    statusCode: HttpStatus\n\n    count?: number\n    page?: number\n    pageCount?: number\n    total?: number\n}\n\nexport interface GetAppLaunchData {\n    link: 'api:/'\n    response: APIResponse\n}\n\nexport interface GetUserProfile {\n    link: 'api:v1/user/getUserProfile?userId=25'\n    response: APIResponse\n}\n\nexport interface GetUserPosts {\n    link: 'api:v1/user/getUserPosts?pageNo=0&pageSize=25'\n    response: APIResponse\n}\n\nexport interface GetRescueList {\n    link: 'api:v1/rescue/getRescueList?pageNo=0&pageSize=10&status=pending|inProgress|completed|nearest'\n    response: APIResponse\n}\n\nexport interface GetComments {\n    link: 'api:v1/rescue/getComments?pageNo=0&pageSize=10&postId=1230'\n    response: APIResponse\n}\n\nexport interface GetFollowers {\n    link: 'api:v1/rescue/getUserFollowers?userId=1230'\n    response: APIResponse\n}\n\nexport interface GetFollowing {\n    link: 'api:v1/rescue/getUserFollowing?userId=1230'\n    response: APIResponse\n}\n\nexport interface AppLaunchAction {\n    actionId: number\n    action: string\n    isActive: boolean\n    subject?: string\n}\n\nexport interface User {\n    usesId: number\n\n    coverImage: string\n    following: boolean\n    gender: string\n    isOwnProfile: number\n    isRescuer: boolean\n    latitude: number\n    longitude: number\n    numberOfFollowers: number\n    numberOfFollowing: number\n    numberOfPosts: number\n    numberOfRescuesCompleted: number\n    numberOfRescuesCreated: number\n    numberOfRescuesInProgress: number\n    profileImage: string\n    rescuer: boolean\n    userAddress: string\n    userContacts: string\n    userEmail: string\n    userName: string\n    badge: {\n        badgeId: number\n        badgeName: string\n        badgeDescription: string\n        recuesCompletionNeeded: number\n    }\n    setting: {\n        showMyContacts: boolean\n        getNotifications: boolean\n    }\n}\n\nexport interface PostType {\n    postTypeId: number\n    postType: string\n}\n\nexport interface PostedByUser {\n    usesId: number\n    badgeName: string\n    following: boolean\n    profileImage: string\n    rescuer: boolean\n    userName: string\n}\n\nexport interface UserPost {\n    postId: number\n    commentsCount: number\n    isUserReactedToPost: boolean\n    ownPage: boolean\n    postBy: PostedByUser\n    postImage: string\n    postTime: string\n    postType: PostType\n    postVideo: string\n    reactionsCount: number\n    timeAgo: string\n\n    adCorporateLogoUrl: string | null\n    corporateDescription: string | null\n    corporateName: string | null\n}\n\nexport interface UserPosts {\n    isRecent: boolean\n    feed: UserPost[]\n}\n\nexport interface Rescues {\n    rescueId: number\n    animalImageUrl: string\n    distance: number\n    distanceAway: string\n    emergencyType: string\n    postedBy: string\n    postedMinAgo: string\n    rescueDate: Date\n    rescuedPetName: string\n    rescueLocality: string\n    rescuers: {\n        contact: number\n        name: string\n        profileId: number\n        profileImageUrl: string\n        rescues: boolean\n        showMyNumber: boolean\n    }\n    rescueStatus: string\n    viewsCont: number\n}\n\nexport interface RescueLists {\n    rescues: Rescues[]\n}\n\nexport interface Comment {\n    commentId: number\n    comment: string\n    commentedUseName: string\n    commentedUserId: number\n    timeAgo: string\n}\n\nexport interface Comments {\n    comments: Comment[]\n}\n\nexport interface Follower {\n    userId: number\n    userName: string\n    profileImage: string\n    areYouFollowing: boolean\n    showRemoveOption: boolean\n}\n\nexport interface Following extends Follower {}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UsersController.html":{"url":"controllers/UsersController.html","title":"controller - UsersController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UsersController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/users.controller.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findOneByEmail\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            create\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    create(input: CreateUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'Create a User', description: 'Create a new User and store it in database'})@Post()\n                \n            \n\n            \n                \n                    Defined in src/users/users.controller.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    input\n                                    \n                                                CreateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findOneByEmail\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findOneByEmail(email: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'Get one record by email', description: 'Get one record from database with provided by email'})@Get()\n                \n            \n\n            \n                \n                    Defined in src/users/users.controller.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            update\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: number, input: UpdateUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'Update one users by id', description: 'Update one users by id'})@Put(':id')\n                \n            \n\n            \n                \n                    Defined in src/users/users.controller.ts:57\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    input\n                                    \n                                                UpdateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        /* eslint-disable no-use-before-define */\nimport {\n    Controller,\n    Get,\n    Post,\n    Body,\n    Put,\n    Param,\n    Delete,\n    ParseIntPipe,\n    Query,\n    HttpStatus,\n} from '@nestjs/common'\nimport { ApiOperation, ApiTags } from '@nestjs/swagger'\n\nimport { CrudController } from '../base/crud'\nimport { CreateUserDto, UpdateUserDto, User } from './user.model'\nimport { UsersService } from './users.service'\n\n@Controller(UsersController.path)\n@ApiTags(UsersController.name)\nexport class UsersController extends CrudController {\n    static path = 'users'\n\n    constructor(readonly service: UsersService) {\n        super(service)\n    }\n\n    @ApiOperation({\n        summary: 'Get one record by email',\n        description: 'Get one record from database with provided by email',\n    })\n    @Get()\n    async findOneByEmail(@Query() email: string) {\n        return this.service.findOneByEmail(email)\n    }\n\n    @ApiOperation({\n        summary: 'Create a User',\n        description: 'Create a new User and store it in database',\n    })\n    @Post()\n    async create(@Body() input: CreateUserDto) {\n        const data = await this.service.create(input)\n\n        return {\n            data,\n            statusCode: HttpStatus.CREATED,\n        }\n    }\n\n    @ApiOperation({\n        summary: 'Update one users by id',\n        description: 'Update one users by id',\n    })\n    @Put(':id')\n    async update(\n        @Param('id', ParseIntPipe) id: number,\n        @Body() input: UpdateUserDto,\n    ) {\n        const data = await this.service.update(id, input)\n\n        return {\n            data,\n            statusCode: !data ? HttpStatus.NO_CONTENT : HttpStatus.OK,\n        }\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UsersModule.html":{"url":"modules/UsersModule.html","title":"module - UsersModule","body":"\n                   \n\n\n\n\n    Modules\n    UsersModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_exports\n\n\n\ncluster_UsersModule_providers\n\n\n\n\nUsersService \n\nUsersService \n\n\n\nUsersModule\n\nUsersModule\n\nUsersService  -->\n\nUsersModule->UsersService \n\n\n\n\n\nUsersService\n\nUsersService\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/users/users.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            UsersService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            UsersController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            UsersService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common'\n\nimport { UsersController } from './users.controller'\nimport { UsersService } from './users.service'\n\n@Module({\n    controllers: [UsersController],\n    providers: [UsersService],\n    exports: [UsersService],\n})\nexport class UsersModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UsersService.html":{"url":"injectables/UsersService.html","title":"injectable - UsersService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  UsersService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/users.service.ts\n        \n\n\n            \n                Extends\n            \n            \n                        CrudService\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                findOneByEmail\n                            \n                            \n                                    Async\n                                hashPassword\n                            \n                            \n                                    Async\n                                update\n                            \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                findOneByEmail\n                            \n                            \n                                    Async\n                                findOneById\n                            \n                            \n                                    Async\n                                paginatedFindAll\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(model: ModelClass)\n                    \n                \n                        \n                            \n                                Defined in src/users/users.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        model\n                                                  \n                                                        \n                                                                        ModelClass\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            create\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    create(user: CreateUserDto)\n                \n            \n\n\n            \n                \n                    Defined in src/users/users.service.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                CreateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findOne\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(id: string | number)\n                \n            \n\n\n            \n                \n                    Defined in src/users/users.service.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                            string | number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findOneByEmail\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findOneByEmail(email: string)\n                \n            \n\n\n            \n                \n                    Defined in src/users/users.service.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            hashPassword\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    hashPassword(password: string)\n                \n            \n\n\n            \n                \n                    Defined in src/users/users.service.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            update\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: number, user: UpdateUserDto)\n                \n            \n\n\n            \n                \n                    Defined in src/users/users.service.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                UpdateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            create\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    create(input: CreateUserDto | CreateTagsDto | T)\n                \n            \n\n\n            \n                \n                    Inherited from         CrudService\n\n                \n            \n            \n                \n                        Defined in         CrudService:99\n\n                \n            \n\n\n            \n                \n                    Created a entry and return it\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    input\n                                    \n                                                CreateUserDto | CreateTagsDto | T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findAll\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll()\n                \n            \n\n\n            \n                \n                    Inherited from         CrudService\n\n                \n            \n            \n                \n                        Defined in         CrudService:27\n\n                \n            \n\n\n            \n                \n                    Finds all entries and return the result\n\n\n                    \n                        Returns :     {}\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findOne\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(filter: object)\n                \n            \n\n\n            \n                \n                    Inherited from         CrudService\n\n                \n            \n            \n                \n                        Defined in         CrudService:56\n\n                \n            \n\n\n            \n                \n                    Finds one entry with where filter and return the result\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                                object\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findOneByEmail\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findOneByEmail(email: string)\n                \n            \n\n\n            \n                \n                    Inherited from         CrudService\n\n                \n            \n            \n                \n                        Defined in         CrudService:78\n\n                \n            \n\n\n            \n                \n                    Finds onw entry by email and return the result\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findOneById\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findOneById(id: number)\n                \n            \n\n\n            \n                \n                    Inherited from         CrudService\n\n                \n            \n            \n                \n                        Defined in         CrudService:67\n\n                \n            \n\n\n            \n                \n                    Finds paginated entries and return the result\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            paginatedFindAll\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    paginatedFindAll(paginationParams: PaginationParams)\n                \n            \n\n\n            \n                \n                    Inherited from         CrudService\n\n                \n            \n            \n                \n                        Defined in         CrudService:38\n\n                \n            \n\n\n            \n                \n                    Finds paginated entries and return the result\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    paginationParams\n                                    \n                                                PaginationParams\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            remove\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    remove(id: number)\n                \n            \n\n\n            \n                \n                    Inherited from         CrudService\n\n                \n            \n            \n                \n                        Defined in         CrudService:89\n\n                \n            \n\n\n            \n                \n                    Soft-deletes a entry and return it\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            update\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: number, input: Partial)\n                \n            \n\n\n            \n                \n                    Inherited from         CrudService\n\n                \n            \n            \n                \n                        Defined in         CrudService:112\n\n                \n            \n\n\n            \n                \n                    Updates a entry and return it\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    input\n                                    \n                                            Partial\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Inject, Injectable, NotFoundException } from '@nestjs/common'\n\nimport * as bcrypt from 'bcrypt'\nimport { ModelClass, raw } from 'objection'\n\nimport { CrudService } from '../base/crud'\nimport { CreateUserDto, UpdateUserDto, User } from './user.model'\n\n@Injectable()\nexport class UsersService extends CrudService {\n    constructor(@Inject(User.name) readonly model: ModelClass) {\n        super(model)\n    }\n\n    async hashPassword(password: string) {\n        const hash = await bcrypt.hash(password, 12) // eslint-disable-line @typescript-eslint/no-unsafe-member-access,@typescript-eslint/no-unsafe-call\n        return hash // eslint-disable-line @typescript-eslint/no-unsafe-return\n    }\n\n    async findOne(id: string | number) {\n        const data = await this.model.query().findById(id).first()\n\n        if (data) return data\n\n        return Promise.reject(new NotFoundException())\n    }\n\n    async findOneByEmail(email: string) {\n        const data = await this.model.query().findOne({ email })\n\n        if (data) return data\n\n        return Promise.reject(new NotFoundException())\n    }\n\n    async create(user: CreateUserDto) {\n        return this.model.query().insertAndFetch(user)\n    }\n\n    async update(id: number, user: UpdateUserDto) {\n        if (user?.password) user.password = await this.hashPassword(user.password) // eslint-disable-line @typescript-eslint/no-unsafe-member-access,no-param-reassign\n\n        return this.model.query().patchAndFetchById(id, user)\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ValidationFailedFilter.html":{"url":"classes/ValidationFailedFilter.html","title":"class - ValidationFailedFilter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ValidationFailedFilter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/infra/filters/validation-failed.filter.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        ExceptionFilter\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                catch\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            catch\n                        \n                        \n                    \n                \n            \n            \n                \ncatch(exception: ValidationError, host: ArgumentsHost)\n                \n            \n\n\n            \n                \n                    Defined in src/infra/filters/validation-failed.filter.ts:7\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    exception\n                                    \n                                            ValidationError\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    host\n                                    \n                                            ArgumentsHost\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ArgumentsHost, Catch, ExceptionFilter, HttpStatus } from '@nestjs/common'\n\nimport { ValidationError } from 'objection'\n\n@Catch(ValidationError)\nexport class ValidationFailedFilter implements ExceptionFilter {\n    catch(exception: ValidationError, host: ArgumentsHost) {\n        const ctx = host.switchToHttp()\n        const response = ctx.getResponse()\n        const request = ctx.getRequest()\n        const status = HttpStatus.PRECONDITION_FAILED\n\n        const {\n            statusCode: validationErrorCode,\n            message,\n            data, // ErrorHash?\n            type, // ValidationErrorType\n        } = exception\n\n        // @ts-ignore\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-call,@typescript-eslint/no-unsafe-member-access\n        response.status(status).json({\n            data,\n            type,\n            message,\n            validationErrorCode,\n\n            statusCode: status,\n\n            path: request.url,\n            timestamp: new Date().toISOString(),\n        })\n    }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app.controller.ts\n            \n            controller\n            AppController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app.module.ts\n            \n            variable\n            ConfigModuleOptions\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/auth.controller.ts\n            \n            controller\n            AuthController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/auth/auth.controller.ts\n            \n            class\n            LoginCredsDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/auth/jwt.strategy.ts\n            \n            injectable\n            JwtStrategy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/local.strategy.ts\n            \n            injectable\n            LocalStrategy\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/auth/tokenPayload.interface.ts\n            \n            interface\n            TokenPayload\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/base/crud/crud.controller.ts\n            \n            class\n            CrudController\n            \n                28 %\n                (2/7)\n            \n        \n        \n            \n                \n                src/base/crud/crud.service.interface.ts\n            \n            interface\n            ICrudService\n            \n                100 %\n                (8/8)\n            \n        \n        \n            \n                \n                src/base/crud/crud.service.ts\n            \n            class\n            CrudService\n            \n                100 %\n                (10/10)\n            \n        \n        \n            \n                \n                src/base/crud/pagination.ts\n            \n            class\n            PaginationParams\n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                src/base/crud/pagination.ts\n            \n            interface\n            IPaginationResult\n            \n                16 %\n                (1/6)\n            \n        \n        \n            \n                \n                src/base/crud/try-request.ts\n            \n            interface\n            ITryRequest\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/base/moment-extend.ts\n            \n            variable\n            moment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/base/swagger-gen/api-errors.decorator.ts\n            \n            class\n            ApiException\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/base/swagger-gen/api-errors.decorator.ts\n            \n            function\n            ApiErrors\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/base/swagger-gen/crud-routes.factory.ts\n            \n            class\n            CrudConfigService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/base/swagger-gen/crud-routes.factory.ts\n            \n            class\n            CrudRoutesFactory\n            \n                0 %\n                (0/14)\n            \n        \n        \n            \n                \n                src/base/swagger-gen/crud-routes.factory.ts\n            \n            class\n            R\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/base/swagger-gen/crud-routes.factory.ts\n            \n            class\n            SerializeHelper\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/base/swagger-gen/crud-routes.factory.ts\n            \n            class\n            Swagger\n            \n                33 %\n                (2/6)\n            \n        \n        \n            \n                \n                src/base/swagger-gen/crud.decorator.ts\n            \n            variable\n            Crud\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/base/swagger-gen/utils/checks.util.ts\n            \n            variable\n            hasLength\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/base/swagger-gen/utils/checks.util.ts\n            \n            variable\n            hasValue\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/base/swagger-gen/utils/checks.util.ts\n            \n            variable\n            isArrayFull\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/base/swagger-gen/utils/checks.util.ts\n            \n            variable\n            isArrayStrings\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/base/swagger-gen/utils/checks.util.ts\n            \n            variable\n            isBoolean\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/base/swagger-gen/utils/checks.util.ts\n            \n            variable\n            isDate\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/base/swagger-gen/utils/checks.util.ts\n            \n            variable\n            isDateString\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/base/swagger-gen/utils/checks.util.ts\n            \n            variable\n            isEqual\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/base/swagger-gen/utils/checks.util.ts\n            \n            variable\n            isFalse\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/base/swagger-gen/utils/checks.util.ts\n            \n            variable\n            isFunction\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/base/swagger-gen/utils/checks.util.ts\n            \n            variable\n            isIn\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/base/swagger-gen/utils/checks.util.ts\n            \n            variable\n            isNil\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/base/swagger-gen/utils/checks.util.ts\n            \n            variable\n            isNull\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/base/swagger-gen/utils/checks.util.ts\n            \n            variable\n            isNumber\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/base/swagger-gen/utils/checks.util.ts\n            \n            variable\n            isNumeric\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/base/swagger-gen/utils/checks.util.ts\n            \n            variable\n            isObject\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/base/swagger-gen/utils/checks.util.ts\n            \n            variable\n            isObjectFull\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/base/swagger-gen/utils/checks.util.ts\n            \n            variable\n            isString\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/base/swagger-gen/utils/checks.util.ts\n            \n            variable\n            isStringFull\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/base/swagger-gen/utils/checks.util.ts\n            \n            variable\n            isTrue\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/base/swagger-gen/utils/checks.util.ts\n            \n            variable\n            isUndefined\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/base/swagger-gen/utils/checks.util.ts\n            \n            variable\n            isValue\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/base/swagger-gen/utils/obj.util.ts\n            \n            variable\n            getOwnPropNames\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/base/swagger-gen/utils/obj.util.ts\n            \n            variable\n            objKeys\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/base/swagger-gen/utils/other.ts\n            \n            interface\n            BaseRoute\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/base/swagger-gen/utils/other.ts\n            \n            interface\n            CrudOptions\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/base/swagger-gen/utils/other.ts\n            \n            interface\n            GetManyDefaultResponse\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/base/swagger-gen/utils/other.ts\n            \n            interface\n            ParamOption\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/base/swagger-gen/utils/other.ts\n            \n            interface\n            ParamsOptions\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/base/swagger-gen/utils/other.ts\n            \n            function\n            ApiProperty\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/base/swagger-gen/utils/other.ts\n            \n            function\n            safeRequire\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/base/swagger-gen/utils/other.ts\n            \n            variable\n            swagger\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/base/swagger-gen/utils/other.ts\n            \n            variable\n            swaggerConst\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/cron/cron.service.ts\n            \n            injectable\n            CronService\n            \n                52 %\n                (10/19)\n            \n        \n        \n            \n                \n                src/cron/persisted-cron.service.ts\n            \n            injectable\n            PersistedCronService\n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                src/database/database.module.ts\n            \n            variable\n            databaseProviders\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/database/database.module.ts\n            \n            variable\n            modelProviders\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/database/database.module.ts\n            \n            variable\n            models\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/database/migrations/20190609143930_CreateTag.ts\n            \n            function\n            down\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/database/migrations/20190609143930_CreateTag.ts\n            \n            function\n            up\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/database/migrations/20190609143930_CreateTag.ts\n            \n            variable\n            tableName\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/database/migrations/20190609143930_CreateUser.ts\n            \n            function\n            down\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/database/migrations/20190609143930_CreateUser.ts\n            \n            function\n            up\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/database/migrations/20190609143930_CreateUser.ts\n            \n            variable\n            tableName\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/database/models/base.model.ts\n            \n            class\n            BaseModel\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/database/models/base.model.ts\n            \n            interface\n            IBaseModel\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/database/models/helpers.ts\n            \n            class\n            CustomQueryBuilder\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/database/models/helpers.ts\n            \n            function\n            isEmpty\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/database/models/helpers.ts\n            \n            function\n            isNotEmpty\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/database/models/helpers.ts\n            \n            function\n            isObject\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/database/seeds/01-User.ts\n            \n            function\n            seed\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/database/seeds/02-Tag.ts\n            \n            function\n            seed\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/domain.ts\n            \n            interface\n            APIResponse\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/domain.ts\n            \n            interface\n            AppLaunchAction\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/domain.ts\n            \n            interface\n            Comment\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/domain.ts\n            \n            interface\n            Comments\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/domain.ts\n            \n            interface\n            Follower\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/domain.ts\n            \n            interface\n            Following\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/domain.ts\n            \n            interface\n            GetAppLaunchData\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/domain.ts\n            \n            interface\n            GetComments\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/domain.ts\n            \n            interface\n            GetFollowers\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/domain.ts\n            \n            interface\n            GetFollowing\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/domain.ts\n            \n            interface\n            GetRescueList\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/domain.ts\n            \n            interface\n            GetUserPosts\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/domain.ts\n            \n            interface\n            GetUserProfile\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/domain.ts\n            \n            interface\n            PostedByUser\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/domain.ts\n            \n            interface\n            PostType\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/domain.ts\n            \n            interface\n            RescueLists\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/domain.ts\n            \n            interface\n            Rescues\n            \n                0 %\n                (0/14)\n            \n        \n        \n            \n                \n                src/domain.ts\n            \n            interface\n            Result\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/domain.ts\n            \n            interface\n            User\n            \n                0 %\n                (0/23)\n            \n        \n        \n            \n                \n                src/domain.ts\n            \n            interface\n            UserPost\n            \n                0 %\n                (0/15)\n            \n        \n        \n            \n                \n                src/domain.ts\n            \n            interface\n            UserPosts\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/email/email.service.ts\n            \n            injectable\n            EmailService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/emailScheduling/emailSchedule.dto.ts\n            \n            class\n            EmailScheduleDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/emailScheduling/emailScheduling.controller.ts\n            \n            controller\n            EmailSchedulingController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/emailScheduling/emailScheduling.service.ts\n            \n            injectable\n            EmailSchedulingService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/health/health.controller.ts\n            \n            controller\n            HealthController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/infra/filters/query-failed.filter.ts\n            \n            class\n            QueryFailedFilter\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/infra/filters/validation-failed.filter.ts\n            \n            class\n            ValidationFailedFilter\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/infra/guards/req.ts\n            \n            guard\n            RequestGuard\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/infra/guards/res.ts\n            \n            guard\n            ResponseGuard\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/infra/interceptors/null-undefined-override.ts\n            \n            injectable\n            ExcludeNullUndefinedInterceptor\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                src/infra/interceptors/null-undefined-override.ts\n            \n            function\n            recursivelyStripNullValues\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/infra/interceptors/timeout.ts\n            \n            injectable\n            TimeoutInterceptor\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                src/infra/interceptors/transform.ts\n            \n            injectable\n            TransformInterceptor\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/infra/interceptors/transform.ts\n            \n            interface\n            Response\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            run\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            setupInfra\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            setupMiddlewares\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            setupSwaggerDocs\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/tags/tag.model.ts\n            \n            class\n            CreateTagsDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/tags/tag.model.ts\n            \n            class\n            Tag\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/tags/tag.model.ts\n            \n            class\n            UpdateTagsDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/tags/tag.model.ts\n            \n            interface\n            ITag\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/tags/tags.controller.ts\n            \n            controller\n            TagsController\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/tags/tags.service.ts\n            \n            injectable\n            TagsService\n            \n                72 %\n                (8/11)\n            \n        \n        \n            \n                \n                src/users/user.model.ts\n            \n            class\n            CreateUserDto\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/users/user.model.ts\n            \n            class\n            UpdateUserDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/users/user.model.ts\n            \n            class\n            User\n            \n                0 %\n                (0/20)\n            \n        \n        \n            \n                \n                src/users/user.model.ts\n            \n            interface\n            IUser\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/users/users.controller.ts\n            \n            controller\n            UsersController\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/users/users.service.ts\n            \n            injectable\n            UsersService\n            \n                53 %\n                (8/15)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @hapi/joi : ^17.1.1\n        \n            @nestjs/bull : ^0.3.1\n        \n            @nestjs/common : ^7.5.1\n        \n            @nestjs/config : ^0.6.1\n        \n            @nestjs/core : ^7.5.1\n        \n            @nestjs/jwt : ^7.2.0\n        \n            @nestjs/mapped-types : ^0.1.1\n        \n            @nestjs/passport : ^7.1.5\n        \n            @nestjs/platform-express : ^7.5.1\n        \n            @nestjs/platform-socket.io : ^7.6.5\n        \n            @nestjs/schedule : ^0.4.1\n        \n            @nestjs/serve-static : ^2.1.4\n        \n            @nestjs/swagger : ^4.7.5\n        \n            @nestjs/terminus : ^7.0.1\n        \n            @types/dotenv : ^8.2.0\n        \n            bcrypt : ^5.0.0\n        \n            blocked-at : ^1.2.0\n        \n            bull : ^3.20.0\n        \n            class-transformer : ^0.3.1\n        \n            class-validator : ^0.12.2\n        \n            cron : ^1.8.2\n        \n            deepmerge : ^4.2.2\n        \n            dotenv : ^8.2.0\n        \n            express : ^4.17.1\n        \n            express-rate-limit : ^5.2.3\n        \n            helmet : ^4.2.0\n        \n            knex : ^0.21.15\n        \n            lodash : ^4.17.20\n        \n            moment : ^2.29.1\n        \n            moment-range : ^4.0.2\n        \n            objection : ^2.2.6\n        \n            objection-db-errors : ^1.1.2\n        \n            objection-find : ^3.0.1\n        \n            objection-visibility : ^1.1.0\n        \n            passport : ^0.4.1\n        \n            passport-jwt : ^4.0.0\n        \n            passport-local : ^1.0.0\n        \n            pidusage : ^2.0.21\n        \n            reflect-metadata : ^0.1.13\n        \n            rimraf : ^3.0.2\n        \n            rxjs : ^6.6.3\n        \n            source-map-support : ^0.5.19\n        \n            sqlite3 : ^5.0.0\n        \n            swagger-ui-express : ^4.1.5\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            OrderType   (src/.../pagination.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/base/crud/pagination.ts\n    \n        \n            \n                \n                    \n                        \n                        OrderType\n                    \n                \n                        \n                            \n                                 DESC\n                            \n                        \n                        \n                            \n                                Value : DESC\n                            \n                        \n                        \n                            \n                                 ASC\n                            \n                        \n                        \n                            \n                                Value : ASC\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ApiErrors   (src/.../api-errors.decorator.ts)\n                        \n                        \n                            ApiProperty   (src/.../other.ts)\n                        \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                        \n                            down   (src/.../20190609143930_CreateTag.ts)\n                        \n                        \n                            down   (src/.../20190609143930_CreateUser.ts)\n                        \n                        \n                            isEmpty   (src/.../helpers.ts)\n                        \n                        \n                            isNotEmpty   (src/.../helpers.ts)\n                        \n                        \n                            isObject   (src/.../helpers.ts)\n                        \n                        \n                            recursivelyStripNullValues   (src/.../null-undefined-override.ts)\n                        \n                        \n                            run   (src/.../main.ts)\n                        \n                        \n                            safeRequire   (src/.../other.ts)\n                        \n                        \n                            seed   (src/.../01-User.ts)\n                        \n                        \n                            seed   (src/.../02-Tag.ts)\n                        \n                        \n                            setupInfra   (src/.../main.ts)\n                        \n                        \n                            setupMiddlewares   (src/.../main.ts)\n                        \n                        \n                            setupSwaggerDocs   (src/.../main.ts)\n                        \n                        \n                            up   (src/.../20190609143930_CreateTag.ts)\n                        \n                        \n                            up   (src/.../20190609143930_CreateUser.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/base/swagger-gen/api-errors.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            ApiErrors\n                        \n                        \n                    \n                \n            \n            \n                \nApiErrors()\n                \n            \n\n\n\n\n        \n    \n    src/base/swagger-gen/utils/other.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            ApiProperty\n                        \n                        \n                    \n                \n            \n            \n                \nApiProperty(options?: any)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                any\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     PropertyDecorator\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            safeRequire\n                        \n                        \n                    \n                \n            \n            \n                \nsafeRequire(path)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    path\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     T | null\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            bootstrap\n                        \n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            run\n                        \n                        \n                    \n                \n            \n            \n                \nrun(boot, options: object)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    boot\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                                object\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setupInfra\n                        \n                        \n                    \n                \n            \n            \n                \nsetupInfra(app)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    app\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setupMiddlewares\n                        \n                        \n                    \n                \n            \n            \n                \nsetupMiddlewares(app)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    app\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setupSwaggerDocs\n                        \n                        \n                    \n                \n            \n            \n                \nsetupSwaggerDocs(app)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    app\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    src/database/migrations/20190609143930_CreateTag.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            down\n                        \n                        \n                    \n                \n            \n            \n                \ndown(knex)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    knex\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            up\n                        \n                        \n                    \n                \n            \n            \n                \nup(knex)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    knex\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    src/database/migrations/20190609143930_CreateUser.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            down\n                        \n                        \n                    \n                \n            \n            \n                \ndown(knex)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    knex\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            up\n                        \n                        \n                    \n                \n            \n            \n                \nup(knex)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    knex\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    src/database/models/helpers.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            isEmpty\n                        \n                        \n                    \n                \n            \n            \n                \nisEmpty(value: any)\n                \n            \n\n\n\n\n            \n                \n                    Check if value is empty\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isNotEmpty\n                        \n                        \n                    \n                \n            \n            \n                \nisNotEmpty(value: any)\n                \n            \n\n\n\n\n            \n                \n                    Check if value is not empty\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isObject\n                        \n                        \n                    \n                \n            \n            \n                \nisObject(value: any)\n                \n            \n\n\n\n\n            \n                \n                    Check if value is of type object.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    src/infra/interceptors/null-undefined-override.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            recursivelyStripNullValues\n                        \n                        \n                    \n                \n            \n            \n                \nrecursivelyStripNullValues(value)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    src/database/seeds/01-User.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            seed\n                        \n                        \n                    \n                \n            \n            \n                \nseed(knex)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    knex\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    src/database/seeds/02-Tag.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            seed\n                        \n                        \n                    \n                \n            \n            \n                \nseed(knex)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    knex\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n  A progressive Node.js framework for building efficient and scalable server-side applications.\n    \n\n\n\n\n\n\n\n\n  \n    \n  \n\n  \n\nDescription\nNest framework TypeScript starter repository.\nInstallation\n$ npm installRunning the app\n# development\n$ npm run start\n\n# watch mode\n$ npm run start:dev\n\n# production mode\n$ npm run start:prodTest\n# unit tests\n$ npm run test\n\n# e2e tests\n$ npm run test:e2e\n\n# test coverage\n$ npm run test:covSupport\nNest is an MIT-licensed open source project. It can grow thanks to the sponsors and support by the amazing backers. If you'd like to join them, please read more here.\nStay in touch\n\nAuthor - Kamil Myśliwiec\nWebsite - https://nestjs.com\nTwitter - @nestframework\n\nLicense\nNest is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CronModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        DatabaseModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        EmailModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        EmailSchedulingModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TagsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UsersModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_CronModule\n\n\n\ncluster_CronModule_providers\n\n\n\ncluster_EmailModule\n\n\n\ncluster_EmailModule_exports\n\n\n\ncluster_EmailModule_providers\n\n\n\ncluster_EmailSchedulingModule\n\n\n\ncluster_EmailSchedulingModule_providers\n\n\n\ncluster_TagsModule\n\n\n\ncluster_TagsModule_exports\n\n\n\ncluster_TagsModule_providers\n\n\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_exports\n\n\n\ncluster_UsersModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nCronModule\n\nCronModule\n\nAppModule -->\n\nCronModule->AppModule\n\n\n\n\n\nDatabaseModule\n\nDatabaseModule\n\nAppModule -->\n\nDatabaseModule->AppModule\n\n\n\n\n\nEmailSchedulingModule\n\nEmailSchedulingModule\n\nAppModule -->\n\nEmailSchedulingModule->AppModule\n\n\n\n\n\nTagsModule\n\nTagsModule\n\nAppModule -->\n\nTagsModule->AppModule\n\n\n\n\n\nTagsService \n\nTagsService \n\nTagsService  -->\n\nTagsModule->TagsService \n\n\n\n\n\nUsersModule\n\nUsersModule\n\nAuthModule -->\n\nUsersModule->AuthModule\n\n\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\nUsersService \n\nUsersService \n\nUsersService  -->\n\nUsersModule->UsersService \n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\nLocalStrategy\n\nLocalStrategy\n\nAuthModule -->\n\nLocalStrategy->AuthModule\n\n\n\n\n\nCronService\n\nCronService\n\nCronModule -->\n\nCronService->CronModule\n\n\n\n\n\nPersistedCronService\n\nPersistedCronService\n\nCronModule -->\n\nPersistedCronService->CronModule\n\n\n\n\n\nEmailService \n\nEmailService \n\n\n\nEmailModule\n\nEmailModule\n\nEmailSchedulingModule -->\n\nEmailModule->EmailSchedulingModule\n\n\n\nEmailService  -->\n\nEmailModule->EmailService \n\n\n\n\n\nEmailService\n\nEmailService\n\nEmailModule -->\n\nEmailService->EmailModule\n\n\n\n\n\nEmailSchedulingService\n\nEmailSchedulingService\n\nEmailSchedulingModule -->\n\nEmailSchedulingService->EmailSchedulingModule\n\n\n\n\n\nTagsService\n\nTagsService\n\nTagsModule -->\n\nTagsService->TagsModule\n\n\n\n\n\nUsersService\n\nUsersService\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        8 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    6 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    12 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    21 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    2 Guards\n                \n            \n        \n        \n            \n                \n                    \n                    34 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            APIError   (src/.../domain.ts)\n                        \n                        \n                            BaseRouteName   (src/.../other.ts)\n                        \n                        \n                            ObjectLiteral   (src/.../object-literal.type.ts)\n                        \n                        \n                            PartialTagShape   (src/.../tag.model.ts)\n                        \n                        \n                            PartialUserShape   (src/.../user.model.ts)\n                        \n                        \n                            Results   (src/.../domain.ts)\n                        \n                        \n                            TagShape   (src/.../tag.model.ts)\n                        \n                        \n                            UserShape   (src/.../user.model.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/domain.ts\n    \n    \n        \n            \n                \n                    \n                    APIError\n                \n            \n            \n                \n                        Error | string | null\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Results\n                \n            \n            \n                \n                        GetAppLaunchData | GetUserProfile | GetUserPosts | GetComments | GetRescueList | GetFollowers | GetFollowing\n\n                \n            \n        \n    \n    src/base/swagger-gen/utils/other.ts\n    \n    \n        \n            \n                \n                    \n                    BaseRouteName\n                \n            \n            \n                \n                        \"getManyBase\" | \"getOneBase\" | \"createOneBase\" | \"createManyBase\" | \"updateOneBase\" | \"replaceOneBase\" | \"deleteOneBase\" | \"getOne\"\n\n                \n            \n        \n    \n    src/base/swagger-gen/utils/types/object-literal.type.ts\n    \n    \n        \n            \n                \n                    \n                    ObjectLiteral\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    src/tags/tag.model.ts\n    \n    \n        \n            \n                \n                    \n                    PartialTagShape\n                \n            \n            \n                \n                            PartialModelObject\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    TagShape\n                \n            \n            \n                \n                            ModelObject\n\n                \n            \n        \n    \n    src/users/user.model.ts\n    \n    \n        \n            \n                \n                    \n                    PartialUserShape\n                \n            \n            \n                \n                            PartialModelObject\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    UserShape\n                \n            \n            \n                \n                            ModelObject\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ConfigModuleOptions   (src/.../app.module.ts)\n                        \n                        \n                            Crud   (src/.../crud.decorator.ts)\n                        \n                        \n                            databaseProviders   (src/.../database.module.ts)\n                        \n                        \n                            getOwnPropNames   (src/.../obj.util.ts)\n                        \n                        \n                            hasLength   (src/.../checks.util.ts)\n                        \n                        \n                            hasValue   (src/.../checks.util.ts)\n                        \n                        \n                            isArrayFull   (src/.../checks.util.ts)\n                        \n                        \n                            isArrayStrings   (src/.../checks.util.ts)\n                        \n                        \n                            isBoolean   (src/.../checks.util.ts)\n                        \n                        \n                            isDate   (src/.../checks.util.ts)\n                        \n                        \n                            isDateString   (src/.../checks.util.ts)\n                        \n                        \n                            isEqual   (src/.../checks.util.ts)\n                        \n                        \n                            isFalse   (src/.../checks.util.ts)\n                        \n                        \n                            isFunction   (src/.../checks.util.ts)\n                        \n                        \n                            isIn   (src/.../checks.util.ts)\n                        \n                        \n                            isNil   (src/.../checks.util.ts)\n                        \n                        \n                            isNull   (src/.../checks.util.ts)\n                        \n                        \n                            isNumber   (src/.../checks.util.ts)\n                        \n                        \n                            isNumeric   (src/.../checks.util.ts)\n                        \n                        \n                            isObject   (src/.../checks.util.ts)\n                        \n                        \n                            isObjectFull   (src/.../checks.util.ts)\n                        \n                        \n                            isString   (src/.../checks.util.ts)\n                        \n                        \n                            isStringFull   (src/.../checks.util.ts)\n                        \n                        \n                            isTrue   (src/.../checks.util.ts)\n                        \n                        \n                            isUndefined   (src/.../checks.util.ts)\n                        \n                        \n                            isValue   (src/.../checks.util.ts)\n                        \n                        \n                            modelProviders   (src/.../database.module.ts)\n                        \n                        \n                            models   (src/.../database.module.ts)\n                        \n                        \n                            moment   (src/.../moment-extend.ts)\n                        \n                        \n                            objKeys   (src/.../obj.util.ts)\n                        \n                        \n                            swagger   (src/.../other.ts)\n                        \n                        \n                            swaggerConst   (src/.../other.ts)\n                        \n                        \n                            tableName   (src/.../20190609143930_CreateTag.ts)\n                        \n                        \n                            tableName   (src/.../20190609143930_CreateUser.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app.module.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            ConfigModuleOptions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    isGlobal: true,\n    validationOptions: {\n        allowUnknown: true,\n        abortEarly: true,\n    },\n    /* eslint-disable */\n    validationSchema: Joi.object({\n        PORT: Joi.number().default(3000),\n        NODE_ENV: Joi.string()\n            .required()\n            .valid('development', 'production', 'test', 'provision')\n            .default('development'),\n\n        JWTKEY: Joi.string().required(),\n        TOKEN_EXPIRATION: Joi.string().required(),\n\n        database: Joi.string().required(),\n        type: Joi.string().required(),\n        logging: Joi.string().required(),\n        synchronize: Joi.string().required(),\n    }),\n    /* eslint-enable */\n}\n                        \n                    \n\n\n            \n        \n\n    src/base/swagger-gen/crud.decorator.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            Crud\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (options: any) => (target: Object) => {\n    let factory = CrudRoutesFactory.create(target, options)\n    // @ts-ignore\n    factory = undefined\n}\n                        \n                    \n\n\n            \n        \n\n    src/database/database.module.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            databaseProviders\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n    ...modelProviders,\n    {\n        provide: 'KnexConnection',\n        // eslint-disable-next-line @typescript-eslint/require-await\n        useFactory: async () => {\n            const knex = Knex({\n                client: 'sqlite3',\n                useNullAsDefault: true,\n                connection: {\n                    filename: './knex.sqlite',\n                },\n                debug: true,\n            })\n\n            Model.knex(knex)\n            return knex\n        },\n    },\n]\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            modelProviders\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : models.map((model) => {\n    return {\n        provide: model.name,\n        useValue: model,\n    }\n})\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            models\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [Tag, User]\n                        \n                    \n\n\n            \n        \n\n    src/base/swagger-gen/utils/obj.util.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            getOwnPropNames\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (val: any): string[] =>\n    Object.getOwnPropertyNames(val)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            objKeys\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (val: any): string[] => Object.keys(val)\n                        \n                    \n\n\n            \n        \n\n    src/base/swagger-gen/utils/checks.util.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            hasLength\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (val: any): boolean => val.length > 0\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            hasValue\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (val: any): boolean =>\n    isArrayFull(val) ? (val as any[]).every((o) => isValue(o)) : isValue(val)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isArrayFull\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (val: any): boolean =>\n    Array.isArray(val) && hasLength(val)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isArrayStrings\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (val: any): boolean =>\n    isArrayFull(val) && (val as string[]).every((v) => isStringFull(v))\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isBoolean\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (val: any): boolean => typeof val === 'boolean'\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isDate\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (val: any): val is Date => val instanceof Date\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isDateString\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (val: any): boolean =>\n    isStringFull(val) &&\n    /^\\d{4}-[01]\\d-[0-3]\\d(?:T[0-2]\\d:[0-5]\\d:[0-5]\\d(?:\\.\\d+)?(?:Z|[-+][0-2]\\d(?::?[0-5]\\d)?)?)?$/g.test(\n        val,\n    )\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isEqual\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (val: any, eq: any): boolean => val === eq\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isFalse\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (val: any): boolean => val === false\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isFunction\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (val: any): boolean => typeof val === 'function'\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isIn\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (val: any, arr: any[] = []): boolean =>\n    arr.some((o) => isEqual(val, o))\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isNil\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (val: any): boolean => isUndefined(val) || isNull(val)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isNull\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (val: any): boolean => val === null\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isNumber\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (val: any): boolean =>\n    typeof val === 'number' && !Number.isNaN(val) && Number.isFinite(val)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isNumeric\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (val: any): boolean =>\n    /^[+-]?([0-9]*[.])?[0-9]+$/.test(val)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isObject\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (val: any): boolean =>\n    typeof val === 'object' && !isNull(val)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isObjectFull\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (val: any) => isObject(val) && hasLength(objKeys(val))\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isString\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (val: any): boolean => typeof val === 'string'\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isStringFull\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (val: any): boolean => isString(val) && hasLength(val)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isTrue\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (val: any): boolean => val === true\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isUndefined\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (val: any): boolean => typeof val === 'undefined'\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isValue\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (val: any): boolean =>\n    isStringFull(val) || isNumber(val) || isBoolean(val) || isDate(val)\n                        \n                    \n\n\n            \n        \n\n    src/base/moment-extend.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            moment\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : extendMoment(momentDefault)\n                        \n                    \n\n\n            \n        \n\n    src/base/swagger-gen/utils/other.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            swagger\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : safeRequire('@nestjs/swagger')\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            swaggerConst\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : safeRequire('@nestjs/swagger/dist/constants')\n                        \n                    \n\n\n            \n        \n\n    src/database/migrations/20190609143930_CreateTag.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            tableName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'tags'\n                        \n                    \n\n\n            \n        \n\n    src/database/migrations/20190609143930_CreateUser.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            tableName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'users'\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/User.html":{"url":"interfaces/User.html","title":"interface - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/domain.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        badge\n                                \n                                \n                                        coverImage\n                                \n                                \n                                        following\n                                \n                                \n                                        gender\n                                \n                                \n                                        isOwnProfile\n                                \n                                \n                                        isRescuer\n                                \n                                \n                                        latitude\n                                \n                                \n                                        longitude\n                                \n                                \n                                        numberOfFollowers\n                                \n                                \n                                        numberOfFollowing\n                                \n                                \n                                        numberOfPosts\n                                \n                                \n                                        numberOfRescuesCompleted\n                                \n                                \n                                        numberOfRescuesCreated\n                                \n                                \n                                        numberOfRescuesInProgress\n                                \n                                \n                                        profileImage\n                                \n                                \n                                        rescuer\n                                \n                                \n                                        setting\n                                \n                                \n                                        userAddress\n                                \n                                \n                                        userContacts\n                                \n                                \n                                        userEmail\n                                \n                                \n                                        userName\n                                \n                                \n                                        usesId\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        badge\n                                    \n                                \n                                \n                                    \n                                        badge:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        coverImage\n                                    \n                                \n                                \n                                    \n                                        coverImage:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        following\n                                    \n                                \n                                \n                                    \n                                        following:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        gender\n                                    \n                                \n                                \n                                    \n                                        gender:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isOwnProfile\n                                    \n                                \n                                \n                                    \n                                        isOwnProfile:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isRescuer\n                                    \n                                \n                                \n                                    \n                                        isRescuer:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        latitude\n                                    \n                                \n                                \n                                    \n                                        latitude:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        longitude\n                                    \n                                \n                                \n                                    \n                                        longitude:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        numberOfFollowers\n                                    \n                                \n                                \n                                    \n                                        numberOfFollowers:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        numberOfFollowing\n                                    \n                                \n                                \n                                    \n                                        numberOfFollowing:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        numberOfPosts\n                                    \n                                \n                                \n                                    \n                                        numberOfPosts:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        numberOfRescuesCompleted\n                                    \n                                \n                                \n                                    \n                                        numberOfRescuesCompleted:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        numberOfRescuesCreated\n                                    \n                                \n                                \n                                    \n                                        numberOfRescuesCreated:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        numberOfRescuesInProgress\n                                    \n                                \n                                \n                                    \n                                        numberOfRescuesInProgress:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        profileImage\n                                    \n                                \n                                \n                                    \n                                        profileImage:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        rescuer\n                                    \n                                \n                                \n                                    \n                                        rescuer:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        setting\n                                    \n                                \n                                \n                                    \n                                        setting:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        userAddress\n                                    \n                                \n                                \n                                    \n                                        userAddress:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        userContacts\n                                    \n                                \n                                \n                                    \n                                        userContacts:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        userEmail\n                                    \n                                \n                                \n                                    \n                                        userEmail:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        userName\n                                    \n                                \n                                \n                                    \n                                        userName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        usesId\n                                    \n                                \n                                \n                                    \n                                        usesId:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { HttpStatus } from '@nestjs/common'\n\nexport type Results =\n    | GetAppLaunchData\n    | GetUserProfile\n    | GetUserPosts\n    | GetComments\n    | GetRescueList\n    | GetFollowers\n    | GetFollowing\n\nexport type APIError = Error | string | null\n\nexport interface Result {\n    data: T\n    error?: APIError\n    message?: string | string[]\n    statusCode: HttpStatus\n}\n\nexport interface APIResponse {\n    data: T\n    error?: APIError\n    message?: string | string[]\n    statusCode: HttpStatus\n\n    count?: number\n    page?: number\n    pageCount?: number\n    total?: number\n}\n\nexport interface GetAppLaunchData {\n    link: 'api:/'\n    response: APIResponse\n}\n\nexport interface GetUserProfile {\n    link: 'api:v1/user/getUserProfile?userId=25'\n    response: APIResponse\n}\n\nexport interface GetUserPosts {\n    link: 'api:v1/user/getUserPosts?pageNo=0&pageSize=25'\n    response: APIResponse\n}\n\nexport interface GetRescueList {\n    link: 'api:v1/rescue/getRescueList?pageNo=0&pageSize=10&status=pending|inProgress|completed|nearest'\n    response: APIResponse\n}\n\nexport interface GetComments {\n    link: 'api:v1/rescue/getComments?pageNo=0&pageSize=10&postId=1230'\n    response: APIResponse\n}\n\nexport interface GetFollowers {\n    link: 'api:v1/rescue/getUserFollowers?userId=1230'\n    response: APIResponse\n}\n\nexport interface GetFollowing {\n    link: 'api:v1/rescue/getUserFollowing?userId=1230'\n    response: APIResponse\n}\n\nexport interface AppLaunchAction {\n    actionId: number\n    action: string\n    isActive: boolean\n    subject?: string\n}\n\nexport interface User {\n    usesId: number\n\n    coverImage: string\n    following: boolean\n    gender: string\n    isOwnProfile: number\n    isRescuer: boolean\n    latitude: number\n    longitude: number\n    numberOfFollowers: number\n    numberOfFollowing: number\n    numberOfPosts: number\n    numberOfRescuesCompleted: number\n    numberOfRescuesCreated: number\n    numberOfRescuesInProgress: number\n    profileImage: string\n    rescuer: boolean\n    userAddress: string\n    userContacts: string\n    userEmail: string\n    userName: string\n    badge: {\n        badgeId: number\n        badgeName: string\n        badgeDescription: string\n        recuesCompletionNeeded: number\n    }\n    setting: {\n        showMyContacts: boolean\n        getNotifications: boolean\n    }\n}\n\nexport interface PostType {\n    postTypeId: number\n    postType: string\n}\n\nexport interface PostedByUser {\n    usesId: number\n    badgeName: string\n    following: boolean\n    profileImage: string\n    rescuer: boolean\n    userName: string\n}\n\nexport interface UserPost {\n    postId: number\n    commentsCount: number\n    isUserReactedToPost: boolean\n    ownPage: boolean\n    postBy: PostedByUser\n    postImage: string\n    postTime: string\n    postType: PostType\n    postVideo: string\n    reactionsCount: number\n    timeAgo: string\n\n    adCorporateLogoUrl: string | null\n    corporateDescription: string | null\n    corporateName: string | null\n}\n\nexport interface UserPosts {\n    isRecent: boolean\n    feed: UserPost[]\n}\n\nexport interface Rescues {\n    rescueId: number\n    animalImageUrl: string\n    distance: number\n    distanceAway: string\n    emergencyType: string\n    postedBy: string\n    postedMinAgo: string\n    rescueDate: Date\n    rescuedPetName: string\n    rescueLocality: string\n    rescuers: {\n        contact: number\n        name: string\n        profileId: number\n        profileImageUrl: string\n        rescues: boolean\n        showMyNumber: boolean\n    }\n    rescueStatus: string\n    viewsCont: number\n}\n\nexport interface RescueLists {\n    rescues: Rescues[]\n}\n\nexport interface Comment {\n    commentId: number\n    comment: string\n    commentedUseName: string\n    commentedUserId: number\n    timeAgo: string\n}\n\nexport interface Comments {\n    comments: Comment[]\n}\n\nexport interface Follower {\n    userId: number\n    userName: string\n    profileImage: string\n    areYouFollowing: boolean\n    showRemoveOption: boolean\n}\n\nexport interface Following extends Follower {}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
