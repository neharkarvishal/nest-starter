var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/controllers/AppController.html",[0,0.969,1,1.502]],["body/controllers/AppController.html",[0,1.393,1,2.159,2,1.219,3,0.571,4,0.476,5,0.476,6,2.305,7,0.476,8,1.608,9,3.616,10,1.219,11,0.056,12,2.885,13,1.922,14,0.788,15,2.885,16,1.219,17,1.206,18,1.409,19,1.409,20,1.922,21,2.159,22,1.922,23,2.885,24,2.535,25,2.159,26,2.305,27,2.305,28,0.994,29,2.305,30,1.637,31,0.914,32,3.04,33,1.922,34,1.219,35,1.799,36,2.305,37,2.885,38,0.571,39,0.231,40,1.922,41,0.914,42,2.305,43,2.305,44,1.409,45,2.885,46,0.03,47,0.04,48,0.03]],["title/modules/AppModule.html",[49,1.293,50,1.502]],["body/modules/AppModule.html",[1,1.747,2,1.063,3,0.321,4,0.268,5,0.268,8,0.686,11,0.056,14,0.687,16,1.063,17,0.976,18,0.793,19,0.793,21,1.747,22,2.052,25,0.921,28,1.068,30,2.129,31,0.514,35,1.678,36,1.297,38,0.321,39,0.13,40,1.082,41,0.514,46,0.017,47,0.026,48,0.017,49,1.694,50,2.547,51,0.793,52,0.793,53,1.082,54,1.082,55,0.793,56,2.052,57,1.082,58,1.297,59,1.297,60,1.297,61,1.939,62,1.676,63,1.082,64,1.082,65,1.082,66,1.747,67,2.01,68,2.46,69,2.01,70,1.624,71,0.793,72,0.588,73,0.588,74,0.793,75,2.46,76,1.297,77,2.771,78,1.624,79,1.624,80,1.624,81,1.624,82,1.624,83,1.624,84,1.624,85,1.082,86,2.516,87,1.082,88,1.297,89,0.921,90,2.516,91,1.624,92,1.297,93,1.297,94,1.297,95,1.297,96,1.624,97,0.443,98,0.921,99,1.624,100,1.624,101,2.311,102,1.082,103,1.297,104,2.76,105,1.297,106,1.297,107,1.297,108,1.297,109,1.297,110,1.297,111,1.297,112,1.297,113,1.297,114,1.297,115,1.082,116,1.082,117,1.297,118,1.297,119,1.082,120,1.297,121,1.297,122,1.297,123,1.297,124,1.082,125,1.297,126,1.297,127,2.01,128,1.297,129,1.297,130,1.297,131,1.297,132,1.297,133,2.01,134,1.297,135,1.297,136,1.297,137,1.297,138,1.297,139,1.297,140,1.297,141,1.082,142,1.082,143,1.297,144,1.297,145,1.297,146,1.297,147,1.297,148,1.297,149,1.624,150,1.624,151,1.297,152,1.624,153,0.921,154,1.624,155,1.624,156,1.624,157,1.297,158,1.624,159,1.297,160,1.297]],["title/injectables/AppService.html",[35,1.118,161,1.293]],["body/injectables/AppService.html",[3,0.679,4,0.567,5,0.567,7,0.567,8,1.797,9,3.858,11,0.055,14,0.938,16,1.452,17,1.348,28,0.803,30,1.949,31,1.089,35,1.797,38,0.679,39,0.276,44,1.678,46,0.036,47,0.045,48,0.036,161,2.077,162,2.289,163,2.745,164,3.436,165,3.436,166,3.436]],["title/classes/Cat.html",[39,0.212,97,0.723]],["body/classes/Cat.html",[3,0.495,4,0.413,5,0.413,7,0.413,10,1.805,11,0.055,13,1.668,14,1.224,17,1.353,28,0.585,38,0.495,39,0.201,41,1.255,46,0.026,47,0.036,48,0.026,72,1.11,73,1.047,97,0.944,167,1.421,168,2,169,1.962,170,2.247,171,2.247,172,1.934,173,3.961,174,3.961,175,1.894,176,3.961,177,3.458,178,2.504,179,3.458,180,2.504,181,3.961,182,2.504,183,3.458,184,3.458,185,2.504,186,2,187,2,188,3.458,189,2.504,190,4.272,191,2.762,192,1.668,193,1.668,194,1.668,195,2.504]],["title/classes/CatDto.html",[39,0.212,196,1.293]],["body/classes/CatDto.html",[3,0.392,4,0.327,5,0.327,7,0.327,10,1.622,11,0.055,14,1.048,17,1.358,28,0.812,34,0.837,38,0.578,39,0.279,41,1.578,46,0.021,47,0.031,48,0.021,72,1.036,73,0.897,97,1.308,153,1.972,167,1.124,169,1.659,170,2.515,171,2.515,172,2,175,1.73,194,2.316,196,1.428,197,1.32,198,1.874,199,3.067,200,3.828,201,1.582,202,1.981,203,2.777,204,1.582,205,1.981,206,2.336,207,2.336,208,1.981,209,1.582,210,1.981,211,3.635,212,2.777,213,3.271,214,1.32,215,1.582,216,0.837,217,2.515,218,2.336,219,1.949,220,2.336]],["title/controllers/CatsController.html",[0,0.969,221,1.502]],["body/controllers/CatsController.html",[0,0.67,2,0.773,3,0.362,4,0.302,5,0.302,7,0.302,8,1.165,10,1.401,11,0.056,13,2.46,14,0.905,16,1.401,18,0.893,19,0.893,28,0.925,29,1.462,31,0.58,32,3.163,33,1.219,34,0.773,38,0.362,39,0.147,40,1.219,41,0.58,42,3.45,43,2.202,44,1.619,46,0.019,47,0.029,48,0.019,71,1.346,72,0.644,73,0.972,74,1.346,97,1.008,98,1.038,104,1.837,124,1.837,142,1.837,172,1.619,175,1.401,191,2.202,193,2.962,196,1.934,216,1.758,217,2.247,221,1.564,222,1.462,223,1.462,224,3.325,225,2.949,226,2.949,227,2.202,228,1.83,229,1.83,230,1.83,231,2.757,232,1.83,233,2.757,234,1.83,235,1.83,236,1.83,237,2.757,238,3.691,239,1.83,240,2.46,241,1.462,242,1.83,243,1.83,244,1.83,245,1.83,246,1.83,247,2.757,248,3.691,249,1.401,250,1.462,251,1.83,252,1.83,253,1.83,254,1.83,255,3.317,256,1.83,257,1.83,258,1.83,259,1.83,260,1.83,261,1.83,262,1.83,263,1.83,264,1.83,265,1.83]],["title/modules/CatsModule.html",[49,1.293,61,1.293]],["body/modules/CatsModule.html",[2,1.642,3,0.589,4,0.492,5,0.492,11,0.055,28,1.111,31,0.944,38,0.589,39,0.239,46,0.031,47,0.041,48,0.031,49,2.112,51,1.455,52,1.455,53,1.986,54,1.986,55,1.455,56,2.882,57,1.986,61,2.381,62,2.59,63,1.986,64,1.986,67,2.381,88,2.381,89,1.691,97,0.814,98,1.691,221,2.454,249,2.06,250,2.381,266,2.381,267,2.381,268,2.981,269,2.981,270,2.981]],["title/injectables/CatsService.html",[161,1.293,249,1.118]],["body/injectables/CatsService.html",[3,0.423,4,0.353,5,0.353,7,0.353,8,1.535,11,0.056,14,1.087,16,1.535,18,1.511,19,1.511,20,1.426,21,1.214,22,1.426,24,1.426,28,0.987,31,0.678,38,0.423,39,0.248,41,0.678,44,2.063,46,0.022,47,0.032,48,0.022,71,1.775,72,0.849,73,0.849,74,1.775,89,1.214,97,0.992,98,1.214,101,1.426,161,1.511,162,1.426,172,1.045,175,1.535,192,1.426,193,1.426,216,1.682,224,3.785,225,2.472,226,3.181,227,2.472,240,2.653,241,2.472,249,1.307,271,1.709,272,1.709,273,2.14,274,3.181,275,2.14,276,3.094,277,3.094,278,2.14,279,2.14,280,2.14,281,2.14,282,2.14,283,2.14,284,1.709,285,2.14,286,1.709,287,2.14,288,2.14,289,2.14,290,2.14,291,2.14,292,2.14,293,2.14,294,2.14,295,3.094,296,3.094,297,2.14,298,2.14,299,2.14,300,2.14]],["title/classes/CreateCatDto.html",[39,0.212,216,1.118]],["body/classes/CreateCatDto.html",[3,0.413,4,0.345,5,0.345,7,0.345,10,1.515,11,0.055,14,0.979,17,1.384,28,0.838,34,0.883,38,0.602,39,0.288,41,1.568,46,0.022,47,0.032,48,0.022,72,1.053,73,0.838,97,1.306,153,2.034,167,1.186,169,1.726,170,2.558,171,2.558,172,1.485,175,1.664,194,1.393,196,1.02,197,1.393,198,1.923,199,2.865,200,3.823,201,1.669,203,2.865,204,1.669,206,1.669,207,1.669,209,1.669,211,3.69,212,2.865,213,3.343,214,1.393,215,1.669,216,1.285,217,2.558,218,2.43,219,2.027,220,2.43,301,2.09,302,2.09,303,2.09]],["title/controllers/HealthController.html",[0,0.969,66,1.502]],["body/controllers/HealthController.html",[0,0.754,2,0.87,3,0.407,4,0.34,5,0.34,7,0.34,8,1.503,10,0.87,11,0.056,14,0.971,16,1.653,17,1.127,18,1.006,19,1.006,21,1.169,24,2.006,25,1.708,26,1.646,27,1.646,28,0.914,30,2.466,31,0.653,33,1.373,34,0.87,38,0.407,39,0.165,44,1.006,46,0.022,47,0.032,48,0.022,66,2.219,68,3.324,69,2.404,71,1.006,72,0.481,73,0.481,74,1.006,75,3.324,76,1.646,77,3.125,85,1.373,87,1.373,151,2.404,153,1.169,157,1.646,159,1.646,160,1.646,223,1.646,240,2.006,272,1.646,284,2.841,304,1.646,305,3.912,306,2.06,307,2.06,308,2.06,309,2.06,310,3.01,311,3.01,312,3.01,313,3.01,314,2.06,315,2.06,316,2.06,317,3.01,318,2.06,319,2.06,320,2.06,321,2.06,322,2.06,323,2.06,324,2.06,325,3.01,326,3.01,327,2.06,328,2.06,329,3.01,330,2.06,331,2.06,332,2.06,333,2.06,334,2.06,335,1.646,336,2.06,337,2.06,338,1.646,339,2.06,340,2.06,341,2.06,342,2.06,343,2.06,344,2.06,345,2.06]],["title/interfaces/ICat.html",[198,1.293,346,1.502]],["body/interfaces/ICat.html",[3,0.654,4,0.546,5,0.546,7,0.546,11,0.053,17,1.588,38,0.654,41,1.44,46,0.035,47,0.044,48,0.035,72,1.113,73,1.061,169,2.358,170,2.704,171,2.704,175,1.92,198,2.029,346,1.878,347,3.31,348,2.644]],["title/coverage.html",[349,2.393]],["body/coverage.html",[0,1.508,1,1.532,5,0.445,6,2.158,11,0.055,35,1.141,39,0.33,46,0.028,47,0.038,48,0.028,55,1.319,65,2.745,66,1.532,73,0.631,97,0.737,102,1.8,119,1.8,141,1.8,161,1.778,163,2.158,168,2.158,196,1.319,197,2.426,198,1.319,216,1.141,221,1.532,222,2.158,249,1.141,271,2.158,286,2.158,304,2.158,335,2.909,346,1.532,348,2.158,349,1.8,350,2.701,351,2.701,352,2.701,353,5.19,354,3.642,355,4.12,356,4.603,357,4.409,358,3.642,359,2.701,360,2.909,361,2.158,362,2.701,363,2.701]],["title/dependencies.html",[52,1.552,364,2.221]],["body/dependencies.html",[11,0.057,31,0.862,34,1.15,39,0.294,46,0.029,47,0.038,48,0.029,52,1.329,85,1.813,87,1.813,89,1.544,92,2.174,93,2.924,94,2.174,95,2.174,192,1.813,214,1.813,365,2.722,366,4.135,367,2.722,368,2.722,369,2.722,370,2.722,371,2.722,372,4.135,373,2.722,374,2.722,375,2.722,376,2.722,377,2.722,378,2.722,379,3.66,380,2.722,381,2.722,382,2.722,383,2.722,384,2.722,385,2.722,386,2.722,387,2.722,388,2.722,389,2.722,390,3.66,391,2.722,392,2.722,393,2.722,394,2.722,395,2.722,396,2.722,397,2.722,398,2.722,399,2.722,400,2.722,401,2.722,402,2.722,403,2.722,404,2.722,405,2.722,406,2.722,407,2.722,408,2.722]],["title/miscellaneous/functions.html",[409,1.26,410,2.539]],["body/miscellaneous/functions.html",[7,0.623,11,0.051,46,0.04,47,0.047,48,0.04,55,2.352,71,1.845,72,0.883,74,1.845,360,3.018,361,3.601,409,2.143,410,3.018,411,4.508,412,3.778,413,3.018]],["title/index.html",[7,0.366,414,2.221,415,2.221]],["body/index.html",[4,0.447,11,0.055,20,1.807,46,0.028,47,0.038,48,0.028,115,1.807,116,2.432,217,1.538,274,2.166,338,3.297,349,1.807,413,2.166,416,2.712,417,2.712,418,3.651,419,2.712,420,2.712,421,2.712,422,2.712,423,2.712,424,2.712,425,2.712,426,2.712,427,4.851,428,2.712,429,2.712,430,4.747,431,2.712,432,2.712,433,3.651,434,2.712,435,2.712,436,2.712,437,3.651,438,2.712,439,2.712,440,2.712,441,3.651,442,3.651,443,2.712,444,2.712,445,2.712,446,2.712,447,2.712,448,2.166,449,2.712,450,2.712,451,2.712,452,2.712,453,2.712,454,2.712,455,2.712,456,2.712,457,2.712,458,2.712,459,2.712,460,2.712,461,2.712,462,2.712,463,2.712,464,2.712,465,2.712,466,2.712]],["title/modules.html",[51,1.754]],["body/modules.html",[11,0.048,46,0.041,47,0.048,48,0.041,50,2.213,51,1.905,61,1.905,448,3.67,467,4.594,468,4.594,469,4.594]],["title/overview.html",[470,2.869]],["body/overview.html",[2,1.379,11,0.051,35,1.908,46,0.034,47,0.043,48,0.034,49,1.594,50,2.833,51,1.594,52,1.594,53,2.175,54,2.175,55,1.594,56,2.175,57,2.175,58,2.608,59,2.608,60,2.608,61,2.388,62,2.746,63,2.175,64,2.175,162,2.175,167,1.852,219,2.175,249,1.908,266,2.608,267,2.608,346,1.852,470,2.608,471,4.121,472,4.121]],["title/miscellaneous/variables.html",[409,1.26,473,2.539]],["body/miscellaneous/variables.html",[7,0.431,11,0.056,25,1.482,46,0.027,47,0.037,48,0.027,65,1.741,72,0.61,73,1.016,101,1.741,102,2.372,103,2.087,104,3.201,105,2.087,106,2.087,107,2.087,108,2.087,109,2.087,110,2.087,111,2.087,112,2.087,113,2.087,114,2.087,115,1.741,116,1.741,117,2.087,118,2.087,119,2.372,120,2.087,121,2.087,122,2.087,123,2.087,124,1.741,125,2.087,126,2.087,127,2.844,128,2.087,129,2.087,130,2.087,131,2.087,132,2.087,133,2.844,134,2.087,135,2.087,136,2.087,137,2.087,138,2.087,139,2.087,140,2.087,141,2.372,142,1.741,143,2.087,144,2.087,145,2.087,146,2.087,147,2.087,148,2.087,186,3.235,187,3.235,409,1.482,473,2.087,474,4.05,475,4.05]]],"invertedIndex":[["",{"_index":11,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Cat.html":{},"classes/CatDto.html":{},"controllers/CatsController.html":{},"modules/CatsModule.html":{},"injectables/CatsService.html":{},"classes/CreateCatDto.html":{},"controllers/HealthController.html":{},"interfaces/ICat.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":353,"title":{},"body":{"coverage.html":{}}}],["0.1.13",{"_index":398,"title":{},"body":{"dependencies.html":{}}}],["0.12.2",{"_index":378,"title":{},"body":{"dependencies.html":{}}}],["0.2.29",{"_index":408,"title":{},"body":{"dependencies.html":{}}}],["0.3.1",{"_index":377,"title":{},"body":{"dependencies.html":{}}}],["0.4.1",{"_index":391,"title":{},"body":{"dependencies.html":{}}}],["0.6.1",{"_index":367,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":356,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":354,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":357,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":358,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":359,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":219,"title":{},"body":{"classes/CatDto.html":{},"classes/CreateCatDto.html":{},"overview.html":{}}}],["1.0.0",{"_index":393,"title":{},"body":{"dependencies.html":{}}}],["1.3.0",{"_index":389,"title":{},"body":{"dependencies.html":{}}}],["17.1.1",{"_index":365,"title":{},"body":{"dependencies.html":{}}}],["17.3.0",{"_index":388,"title":{},"body":{"dependencies.html":{}}}],["1})@isint",{"_index":201,"title":{},"body":{"classes/CatDto.html":{},"classes/CreateCatDto.html":{}}}],["2",{"_index":471,"title":{},"body":{"overview.html":{}}}],["3",{"_index":472,"title":{},"body":{"overview.html":{}}}],["3.0.2",{"_index":400,"title":{},"body":{"dependencies.html":{}}}],["36",{"_index":188,"title":{},"body":{"classes/Cat.html":{}}}],["36635263",{"_index":207,"title":{},"body":{"classes/CatDto.html":{},"classes/CreateCatDto.html":{}}}],["4.1.5",{"_index":407,"title":{},"body":{"dependencies.html":{}}}],["4.2.0",{"_index":387,"title":{},"body":{"dependencies.html":{}}}],["4.3.0",{"_index":395,"title":{},"body":{"dependencies.html":{}}}],["4.7.5",{"_index":373,"title":{},"body":{"dependencies.html":{}}}],["5.0.0",{"_index":404,"title":{},"body":{"dependencies.html":{}}}],["5.1.0",{"_index":382,"title":{},"body":{"dependencies.html":{}}}],["5.2.3",{"_index":385,"title":{},"body":{"dependencies.html":{}}}],["6.6.3",{"_index":402,"title":{},"body":{"dependencies.html":{}}}],["7.0.1",{"_index":374,"title":{},"body":{"dependencies.html":{}}}],["7.1.3",{"_index":370,"title":{},"body":{"dependencies.html":{}}}],["7.1.5",{"_index":375,"title":{},"body":{"dependencies.html":{}}}],["7.5.1",{"_index":366,"title":{},"body":{"dependencies.html":{}}}],["8.2.0",{"_index":380,"title":{},"body":{"dependencies.html":{}}}],["__dirname}/../**/*.entity.{ts,js",{"_index":143,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["abortearly",{"_index":107,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["above",{"_index":331,"title":{},"body":{"controllers/HealthController.html":{}}}],["access",{"_index":83,"title":{},"body":{"modules/AppModule.html":{}}}],["age",{"_index":170,"title":{},"body":{"classes/Cat.html":{},"classes/CatDto.html":{},"classes/CreateCatDto.html":{},"interfaces/ICat.html":{}}}],["allowunknown",{"_index":106,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["amazing",{"_index":449,"title":{},"body":{"index.html":{}}}],["apioperation",{"_index":248,"title":{},"body":{"controllers/CatsController.html":{}}}],["apiproperty",{"_index":211,"title":{},"body":{"classes/CatDto.html":{},"classes/CreateCatDto.html":{}}}],["apiproperty({description",{"_index":199,"title":{},"body":{"classes/CatDto.html":{},"classes/CreateCatDto.html":{}}}],["apiresponse",{"_index":32,"title":{},"body":{"controllers/AppController.html":{},"controllers/CatsController.html":{}}}],["apitags",{"_index":33,"title":{},"body":{"controllers/AppController.html":{},"controllers/CatsController.html":{},"controllers/HealthController.html":{}}}],["apitags(appcontroller.name",{"_index":37,"title":{},"body":{"controllers/AppController.html":{}}}],["apitags(catscontroller.name",{"_index":253,"title":{},"body":{"controllers/CatsController.html":{}}}],["apitags(healthcontroller.name",{"_index":314,"title":{},"body":{"controllers/HealthController.html":{}}}],["app",{"_index":413,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["app.controller",{"_index":100,"title":{},"body":{"modules/AppModule.html":{}}}],["app.service",{"_index":36,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["appcontroller",{"_index":1,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["application",{"_index":322,"title":{},"body":{"controllers/HealthController.html":{}}}],["applications",{"_index":424,"title":{},"body":{"index.html":{}}}],["applicationshutdown",{"_index":159,"title":{},"body":{"modules/AppModule.html":{},"controllers/HealthController.html":{}}}],["appmodule",{"_index":50,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appservice",{"_index":35,"title":{"injectables/AppService.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"coverage.html":{},"overview.html":{}}}],["array",{"_index":237,"title":{},"body":{"controllers/CatsController.html":{}}}],["assignment,@typescript",{"_index":80,"title":{},"body":{"modules/AppModule.html":{}}}],["assignment,no",{"_index":23,"title":{},"body":{"controllers/AppController.html":{}}}],["async",{"_index":224,"title":{},"body":{"controllers/CatsController.html":{},"injectables/CatsService.html":{}}}],["asynchronous",{"_index":337,"title":{},"body":{"controllers/HealthController.html":{}}}],["author",{"_index":459,"title":{},"body":{"index.html":{}}}],["await",{"_index":260,"title":{},"body":{"controllers/CatsController.html":{}}}],["awaits",{"_index":336,"title":{},"body":{"controllers/HealthController.html":{}}}],["backers",{"_index":450,"title":{},"body":{"index.html":{}}}],["before",{"_index":25,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/HealthController.html":{},"miscellaneous/variables.html":{}}}],["beforeapplicationshutdown",{"_index":328,"title":{},"body":{"controllers/HealthController.html":{}}}],["body",{"_index":245,"title":{},"body":{"controllers/CatsController.html":{}}}],["bootstrap",{"_index":55,"title":{},"body":{"modules/AppModule.html":{},"modules/CatsModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["breed",{"_index":171,"title":{},"body":{"classes/Cat.html":{},"classes/CatDto.html":{},"classes/CreateCatDto.html":{},"interfaces/ICat.html":{}}}],["browse",{"_index":469,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":467,"title":{},"body":{"modules.html":{}}}],["building",{"_index":419,"title":{},"body":{"index.html":{}}}],["call",{"_index":325,"title":{},"body":{"controllers/HealthController.html":{}}}],["call,@typescript",{"_index":81,"title":{},"body":{"modules/AppModule.html":{}}}],["cat",{"_index":97,"title":{"classes/Cat.html":{}},"body":{"modules/AppModule.html":{},"classes/Cat.html":{},"classes/CatDto.html":{},"controllers/CatsController.html":{},"modules/CatsModule.html":{},"injectables/CatsService.html":{},"classes/CreateCatDto.html":{},"coverage.html":{}}}],["cat'})@apiresponse({status",{"_index":230,"title":{},"body":{"controllers/CatsController.html":{}}}],["cat.age",{"_index":290,"title":{},"body":{"injectables/CatsService.html":{}}}],["cat.breed",{"_index":292,"title":{},"body":{"injectables/CatsService.html":{}}}],["cat.name",{"_index":288,"title":{},"body":{"injectables/CatsService.html":{}}}],["cat.name_length",{"_index":195,"title":{},"body":{"classes/Cat.html":{}}}],["cat_age",{"_index":177,"title":{},"body":{"classes/Cat.html":{}}}],["cat_breed",{"_index":179,"title":{},"body":{"classes/Cat.html":{}}}],["cat_name",{"_index":183,"title":{},"body":{"classes/Cat.html":{}}}],["catdto",{"_index":196,"title":{"classes/CatDto.html":{}},"body":{"classes/CatDto.html":{},"controllers/CatsController.html":{},"classes/CreateCatDto.html":{},"coverage.html":{}}}],["catentity",{"_index":252,"title":{},"body":{"controllers/CatsController.html":{}}}],["catrepo",{"_index":276,"title":{},"body":{"injectables/CatsService.html":{}}}],["cats",{"_index":193,"title":{},"body":{"classes/Cat.html":{},"controllers/CatsController.html":{},"injectables/CatsService.html":{}}}],["cats'})@apiresponse({description",{"_index":236,"title":{},"body":{"controllers/CatsController.html":{}}}],["catscontroller",{"_index":221,"title":{"controllers/CatsController.html":{}},"body":{"controllers/CatsController.html":{},"modules/CatsModule.html":{},"coverage.html":{}}}],["catsmodule",{"_index":61,"title":{"modules/CatsModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CatsModule.html":{},"modules.html":{},"overview.html":{}}}],["catsservice",{"_index":249,"title":{"injectables/CatsService.html":{}},"body":{"controllers/CatsController.html":{},"modules/CatsModule.html":{},"injectables/CatsService.html":{},"coverage.html":{},"overview.html":{}}}],["check",{"_index":305,"title":{},"body":{"controllers/HealthController.html":{}}}],["class",{"_index":39,"title":{"classes/Cat.html":{},"classes/CatDto.html":{},"classes/CreateCatDto.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Cat.html":{},"classes/CatDto.html":{},"controllers/CatsController.html":{},"modules/CatsModule.html":{},"injectables/CatsService.html":{},"classes/CreateCatDto.html":{},"controllers/HealthController.html":{},"coverage.html":{},"dependencies.html":{}}}],["classes",{"_index":167,"title":{},"body":{"classes/Cat.html":{},"classes/CatDto.html":{},"classes/CreateCatDto.html":{},"overview.html":{}}}],["cluster_appmodule",{"_index":58,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":60,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":59,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_catsmodule",{"_index":266,"title":{},"body":{"modules/CatsModule.html":{},"overview.html":{}}}],["cluster_catsmodule_providers",{"_index":267,"title":{},"body":{"modules/CatsModule.html":{},"overview.html":{}}}],["colorize",{"_index":122,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["column",{"_index":190,"title":{},"body":{"classes/Cat.html":{}}}],["column({name",{"_index":176,"title":{},"body":{"classes/Cat.html":{}}}],["config",{"_index":317,"title":{},"body":{"controllers/HealthController.html":{}}}],["configmodule",{"_index":84,"title":{},"body":{"modules/AppModule.html":{}}}],["configmodule.forroot(configmoduleoptions",{"_index":149,"title":{},"body":{"modules/AppModule.html":{}}}],["configmoduleoptions",{"_index":102,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["configservice",{"_index":310,"title":{},"body":{"controllers/HealthController.html":{}}}],["console,@typescript",{"_index":79,"title":{},"body":{"modules/AppModule.html":{}}}],["console.log",{"_index":345,"title":{},"body":{"controllers/HealthController.html":{}}}],["console.log(`moduleinit",{"_index":343,"title":{},"body":{"controllers/HealthController.html":{}}}],["const",{"_index":101,"title":{},"body":{"modules/AppModule.html":{},"injectables/CatsService.html":{},"miscellaneous/variables.html":{}}}],["constructor",{"_index":272,"title":{},"body":{"injectables/CatsService.html":{},"controllers/HealthController.html":{}}}],["constructor(@injectrepository(cat",{"_index":283,"title":{},"body":{"injectables/CatsService.html":{}}}],["constructor(catrepo",{"_index":273,"title":{},"body":{"injectables/CatsService.html":{}}}],["constructor(private",{"_index":40,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/CatsController.html":{}}}],["continue",{"_index":339,"title":{},"body":{"controllers/HealthController.html":{}}}],["controller",{"_index":0,"title":{"controllers/AppController.html":{},"controllers/CatsController.html":{},"controllers/HealthController.html":{}},"body":{"controllers/AppController.html":{},"controllers/CatsController.html":{},"controllers/HealthController.html":{},"coverage.html":{}}}],["controller('cats",{"_index":254,"title":{},"body":{"controllers/CatsController.html":{}}}],["controller('health",{"_index":315,"title":{},"body":{"controllers/HealthController.html":{}}}],["controllers",{"_index":2,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/CatsController.html":{},"modules/CatsModule.html":{},"controllers/HealthController.html":{},"overview.html":{}}}],["coon",{"_index":220,"title":{},"body":{"classes/CatDto.html":{},"classes/CreateCatDto.html":{}}}],["coon'})@isstring",{"_index":204,"title":{},"body":{"classes/CatDto.html":{},"classes/CreateCatDto.html":{}}}],["corresponding",{"_index":332,"title":{},"body":{"controllers/HealthController.html":{}}}],["coverage",{"_index":349,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["create",{"_index":225,"title":{},"body":{"controllers/CatsController.html":{},"injectables/CatsService.html":{}}}],["create(@body",{"_index":259,"title":{},"body":{"controllers/CatsController.html":{}}}],["create(cat",{"_index":277,"title":{},"body":{"injectables/CatsService.html":{}}}],["create(createcatdto",{"_index":228,"title":{},"body":{"controllers/CatsController.html":{}}}],["createcatdto",{"_index":216,"title":{"classes/CreateCatDto.html":{}},"body":{"classes/CatDto.html":{},"controllers/CatsController.html":{},"injectables/CatsService.html":{},"classes/CreateCatDto.html":{},"coverage.html":{}}}],["created",{"_index":231,"title":{},"body":{"controllers/CatsController.html":{}}}],["createswagger",{"_index":361,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["createswagger(app",{"_index":412,"title":{},"body":{"miscellaneous/functions.html":{}}}],["database",{"_index":145,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["database.sqlite",{"_index":146,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["date",{"_index":129,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["declarations",{"_index":54,"title":{},"body":{"modules/AppModule.html":{},"modules/CatsModule.html":{},"overview.html":{}}}],["decorators",{"_index":10,"title":{},"body":{"controllers/AppController.html":{},"classes/Cat.html":{},"classes/CatDto.html":{},"controllers/CatsController.html":{},"classes/CreateCatDto.html":{},"controllers/HealthController.html":{}}}],["default",{"_index":186,"title":{},"body":{"classes/Cat.html":{},"miscellaneous/variables.html":{}}}],["default('development",{"_index":118,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["define",{"_index":27,"title":{},"body":{"controllers/AppController.html":{},"controllers/HealthController.html":{}}}],["define,@typescript",{"_index":26,"title":{},"body":{"controllers/AppController.html":{},"controllers/HealthController.html":{}}}],["defined",{"_index":14,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Cat.html":{},"classes/CatDto.html":{},"controllers/CatsController.html":{},"injectables/CatsService.html":{},"classes/CreateCatDto.html":{},"controllers/HealthController.html":{}}}],["dependencies",{"_index":52,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/CatsModule.html":{},"dependencies.html":{},"overview.html":{}}}],["described",{"_index":330,"title":{},"body":{"controllers/HealthController.html":{}}}],["description",{"_index":217,"title":{},"body":{"classes/CatDto.html":{},"controllers/CatsController.html":{},"classes/CreateCatDto.html":{},"index.html":{}}}],["development",{"_index":429,"title":{},"body":{"index.html":{}}}],["disable",{"_index":19,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/CatsController.html":{},"injectables/CatsService.html":{},"controllers/HealthController.html":{}}}],["display",{"_index":125,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["dns",{"_index":316,"title":{},"body":{"controllers/HealthController.html":{}}}],["dnshealthindicator",{"_index":311,"title":{},"body":{"controllers/HealthController.html":{}}}],["docs",{"_index":320,"title":{},"body":{"controllers/HealthController.html":{}}}],["documentation",{"_index":350,"title":{},"body":{"coverage.html":{}}}],["dotenv",{"_index":379,"title":{},"body":{"dependencies.html":{}}}],["dto/cat.dto",{"_index":282,"title":{},"body":{"injectables/CatsService.html":{}}}],["e2e",{"_index":438,"title":{},"body":{"index.html":{}}}],["efficient",{"_index":420,"title":{},"body":{"index.html":{}}}],["entities",{"_index":142,"title":{},"body":{"modules/AppModule.html":{},"controllers/CatsController.html":{},"miscellaneous/variables.html":{}}}],["entity",{"_index":191,"title":{},"body":{"classes/Cat.html":{},"controllers/CatsController.html":{}}}],["err",{"_index":138,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["error",{"_index":139,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["error('no",{"_index":300,"title":{},"body":{"injectables/CatsService.html":{}}}],["errorlikeobjectkeys",{"_index":137,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["errors",{"_index":140,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["eslint",{"_index":18,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/CatsController.html":{},"injectables/CatsService.html":{},"controllers/HealthController.html":{}}}],["eslint/no",{"_index":21,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/CatsService.html":{},"controllers/HealthController.html":{}}}],["example",{"_index":200,"title":{},"body":{"classes/CatDto.html":{},"classes/CreateCatDto.html":{}}}],["expand",{"_index":381,"title":{},"body":{"dependencies.html":{}}}],["export",{"_index":38,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Cat.html":{},"classes/CatDto.html":{},"controllers/CatsController.html":{},"modules/CatsModule.html":{},"injectables/CatsService.html":{},"classes/CreateCatDto.html":{},"controllers/HealthController.html":{},"interfaces/ICat.html":{}}}],["exports",{"_index":57,"title":{},"body":{"modules/AppModule.html":{},"modules/CatsModule.html":{},"overview.html":{}}}],["express",{"_index":372,"title":{},"body":{"dependencies.html":{}}}],["false",{"_index":124,"title":{},"body":{"modules/AppModule.html":{},"controllers/CatsController.html":{},"miscellaneous/variables.html":{}}}],["file",{"_index":5,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Cat.html":{},"classes/CatDto.html":{},"controllers/CatsController.html":{},"modules/CatsModule.html":{},"injectables/CatsService.html":{},"classes/CreateCatDto.html":{},"controllers/HealthController.html":{},"interfaces/ICat.html":{},"coverage.html":{}}}],["findall",{"_index":226,"title":{},"body":{"controllers/CatsController.html":{},"injectables/CatsService.html":{}}}],["findone",{"_index":227,"title":{},"body":{"controllers/CatsController.html":{},"injectables/CatsService.html":{}}}],["findone(@param('id",{"_index":264,"title":{},"body":{"controllers/CatsController.html":{}}}],["findone(id",{"_index":241,"title":{},"body":{"controllers/CatsController.html":{},"injectables/CatsService.html":{}}}],["first",{"_index":333,"title":{},"body":{"controllers/HealthController.html":{}}}],["forbidden",{"_index":233,"title":{},"body":{"controllers/CatsController.html":{}}}],["framework",{"_index":418,"title":{},"body":{"index.html":{}}}],["function",{"_index":335,"title":{},"body":{"controllers/HealthController.html":{},"coverage.html":{}}}],["functions",{"_index":410,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["get(':id",{"_index":263,"title":{},"body":{"controllers/CatsController.html":{}}}],["get(':id')@apioperation({summary",{"_index":242,"title":{},"body":{"controllers/CatsController.html":{}}}],["get()@apioperation({summary",{"_index":235,"title":{},"body":{"controllers/CatsController.html":{}}}],["get()@apiresponse({status",{"_index":12,"title":{},"body":{"controllers/AppController.html":{}}}],["get()@healthcheck",{"_index":306,"title":{},"body":{"controllers/HealthController.html":{}}}],["gethello",{"_index":9,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["getting",{"_index":414,"title":{"index.html":{}},"body":{}}],["grow",{"_index":445,"title":{},"body":{"index.html":{}}}],["hapi/joi",{"_index":95,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["health",{"_index":151,"title":{},"body":{"modules/AppModule.html":{},"controllers/HealthController.html":{}}}],["health/health.controller",{"_index":99,"title":{},"body":{"modules/AppModule.html":{}}}],["healthcheck",{"_index":312,"title":{},"body":{"controllers/HealthController.html":{}}}],["healthcheckservice",{"_index":313,"title":{},"body":{"controllers/HealthController.html":{}}}],["healthcontroller",{"_index":66,"title":{"controllers/HealthController.html":{}},"body":{"modules/AppModule.html":{},"controllers/HealthController.html":{},"coverage.html":{}}}],["hello",{"_index":165,"title":{},"body":{"injectables/AppService.html":{}}}],["helmet",{"_index":386,"title":{},"body":{"dependencies.html":{}}}],["here",{"_index":456,"title":{},"body":{"index.html":{}}}],["https://docs.nestjs.com",{"_index":321,"title":{},"body":{"controllers/HealthController.html":{}}}],["https://nestjs.com",{"_index":463,"title":{},"body":{"index.html":{}}}],["httpstatus",{"_index":29,"title":{},"body":{"controllers/AppController.html":{},"controllers/CatsController.html":{}}}],["httpstatus.created",{"_index":256,"title":{},"body":{"controllers/CatsController.html":{}}}],["httpstatus.forbidden",{"_index":258,"title":{},"body":{"controllers/CatsController.html":{}}}],["httpstatus.ok",{"_index":43,"title":{},"body":{"controllers/AppController.html":{},"controllers/CatsController.html":{}}}],["icat",{"_index":198,"title":{"interfaces/ICat.html":{}},"body":{"classes/CatDto.html":{},"classes/CreateCatDto.html":{},"interfaces/ICat.html":{},"coverage.html":{}}}],["id",{"_index":172,"title":{},"body":{"classes/Cat.html":{},"classes/CatDto.html":{},"controllers/CatsController.html":{},"injectables/CatsService.html":{},"classes/CreateCatDto.html":{}}}],["id'})@apiresponse({description",{"_index":243,"title":{},"body":{"controllers/CatsController.html":{}}}],["identifier",{"_index":351,"title":{},"body":{"coverage.html":{}}}],["ignore",{"_index":135,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["implements",{"_index":153,"title":{},"body":{"modules/AppModule.html":{},"classes/CatDto.html":{},"classes/CreateCatDto.html":{},"controllers/HealthController.html":{}}}],["import",{"_index":28,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Cat.html":{},"classes/CatDto.html":{},"controllers/CatsController.html":{},"modules/CatsModule.html":{},"injectables/CatsService.html":{},"classes/CreateCatDto.html":{},"controllers/HealthController.html":{}}}],["imports",{"_index":67,"title":{},"body":{"modules/AppModule.html":{},"modules/CatsModule.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/Cat.html":{},"classes/CatDto.html":{},"controllers/CatsController.html":{},"injectables/CatsService.html":{},"classes/CreateCatDto.html":{},"controllers/HealthController.html":{},"interfaces/ICat.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Cat.html":{},"classes/CatDto.html":{},"controllers/CatsController.html":{},"modules/CatsModule.html":{},"injectables/CatsService.html":{},"classes/CreateCatDto.html":{},"controllers/HealthController.html":{},"interfaces/ICat.html":{}}}],["initialized",{"_index":157,"title":{},"body":{"modules/AppModule.html":{},"controllers/HealthController.html":{}}}],["injectable",{"_index":161,"title":{"injectables/AppService.html":{},"injectables/CatsService.html":{}},"body":{"injectables/AppService.html":{},"injectables/CatsService.html":{},"coverage.html":{}}}],["injectables",{"_index":162,"title":{},"body":{"injectables/AppService.html":{},"injectables/CatsService.html":{},"overview.html":{}}}],["injectrepository",{"_index":281,"title":{},"body":{"injectables/CatsService.html":{}}}],["installation",{"_index":426,"title":{},"body":{"index.html":{}}}],["installrunning",{"_index":428,"title":{},"body":{"index.html":{}}}],["interface",{"_index":346,"title":{"interfaces/ICat.html":{}},"body":{"interfaces/ICat.html":{},"coverage.html":{},"overview.html":{}}}],["interfaces",{"_index":347,"title":{},"body":{"interfaces/ICat.html":{}}}],["isarray",{"_index":238,"title":{},"body":{"controllers/CatsController.html":{}}}],["isglobal",{"_index":103,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["isint",{"_index":212,"title":{},"body":{"classes/CatDto.html":{},"classes/CreateCatDto.html":{}}}],["isstring",{"_index":213,"title":{},"body":{"classes/CatDto.html":{},"classes/CreateCatDto.html":{}}}],["joi",{"_index":94,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["joi.number().default(3000",{"_index":111,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["joi.object",{"_index":109,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["joi.string",{"_index":113,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["join",{"_index":452,"title":{},"body":{"index.html":{}}}],["kamil",{"_index":460,"title":{},"body":{"index.html":{}}}],["kitty",{"_index":218,"title":{},"body":{"classes/CatDto.html":{},"classes/CreateCatDto.html":{}}}],["kitty'})@isstring",{"_index":209,"title":{},"body":{"classes/CatDto.html":{},"classes/CreateCatDto.html":{}}}],["legend",{"_index":53,"title":{},"body":{"modules/AppModule.html":{},"modules/CatsModule.html":{},"overview.html":{}}}],["length",{"_index":184,"title":{},"body":{"classes/Cat.html":{}}}],["level",{"_index":127,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["levelfirst",{"_index":123,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["license",{"_index":466,"title":{},"body":{"index.html":{}}}],["licensed",{"_index":442,"title":{},"body":{"index.html":{}}}],["limit",{"_index":384,"title":{},"body":{"dependencies.html":{}}}],["line",{"_index":296,"title":{},"body":{"injectables/CatsService.html":{}}}],["local",{"_index":392,"title":{},"body":{"dependencies.html":{}}}],["log",{"_index":126,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["logged",{"_index":128,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["logger",{"_index":154,"title":{},"body":{"modules/AppModule.html":{}}}],["logger.setcontext(appmodule.name",{"_index":155,"title":{},"body":{"modules/AppModule.html":{}}}],["loggermodule",{"_index":91,"title":{},"body":{"modules/AppModule.html":{}}}],["loggermodule.forroot(loggermoduleoptions",{"_index":150,"title":{},"body":{"modules/AppModule.html":{}}}],["loggermoduleoptions",{"_index":119,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["logging",{"_index":148,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["maine",{"_index":203,"title":{},"body":{"classes/CatDto.html":{},"classes/CreateCatDto.html":{}}}],["matching",{"_index":47,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Cat.html":{},"classes/CatDto.html":{},"controllers/CatsController.html":{},"modules/CatsModule.html":{},"injectables/CatsService.html":{},"classes/CreateCatDto.html":{},"controllers/HealthController.html":{},"interfaces/ICat.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["member",{"_index":82,"title":{},"body":{"modules/AppModule.html":{}}}],["messageformat",{"_index":132,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["metadata",{"_index":397,"title":{},"body":{"dependencies.html":{}}}],["methods",{"_index":8,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/CatsController.html":{},"injectables/CatsService.html":{},"controllers/HealthController.html":{}}}],["miscellaneous",{"_index":409,"title":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":441,"title":{},"body":{"index.html":{}}}],["mode",{"_index":433,"title":{},"body":{"index.html":{}}}],["module",{"_index":49,"title":{"modules/AppModule.html":{},"modules/CatsModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CatsModule.html":{},"overview.html":{}}}],["modules",{"_index":51,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/CatsModule.html":{},"modules.html":{},"overview.html":{}}}],["more",{"_index":455,"title":{},"body":{"index.html":{}}}],["msg",{"_index":133,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["myśliwiec",{"_index":461,"title":{},"body":{"index.html":{}}}],["name",{"_index":72,"title":{},"body":{"modules/AppModule.html":{},"classes/Cat.html":{},"classes/CatDto.html":{},"controllers/CatsController.html":{},"injectables/CatsService.html":{},"classes/CreateCatDto.html":{},"controllers/HealthController.html":{},"interfaces/ICat.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["name_length",{"_index":174,"title":{},"body":{"classes/Cat.html":{}}}],["nest",{"_index":338,"title":{},"body":{"controllers/HealthController.html":{},"index.html":{}}}],["nestframework",{"_index":465,"title":{},"body":{"index.html":{}}}],["nestjs",{"_index":92,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["nestjs/common",{"_index":31,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/CatsController.html":{},"modules/CatsModule.html":{},"injectables/CatsService.html":{},"controllers/HealthController.html":{},"dependencies.html":{}}}],["nestjs/config",{"_index":85,"title":{},"body":{"modules/AppModule.html":{},"controllers/HealthController.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":368,"title":{},"body":{"dependencies.html":{}}}],["nestjs/passport",{"_index":369,"title":{},"body":{"dependencies.html":{}}}],["nestjs/platform",{"_index":371,"title":{},"body":{"dependencies.html":{}}}],["nestjs/swagger",{"_index":34,"title":{},"body":{"controllers/AppController.html":{},"classes/CatDto.html":{},"controllers/CatsController.html":{},"classes/CreateCatDto.html":{},"controllers/HealthController.html":{},"dependencies.html":{}}}],["nestjs/terminus",{"_index":87,"title":{},"body":{"modules/AppModule.html":{},"controllers/HealthController.html":{},"dependencies.html":{}}}],["nestjs/typeorm",{"_index":89,"title":{},"body":{"modules/AppModule.html":{},"modules/CatsModule.html":{},"injectables/CatsService.html":{},"dependencies.html":{}}}],["new",{"_index":286,"title":{},"body":{"injectables/CatsService.html":{},"coverage.html":{}}}],["newcat",{"_index":285,"title":{},"body":{"injectables/CatsService.html":{}}}],["newcat.age",{"_index":289,"title":{},"body":{"injectables/CatsService.html":{}}}],["newcat.breed",{"_index":291,"title":{},"body":{"injectables/CatsService.html":{}}}],["newcat.name",{"_index":287,"title":{},"body":{"injectables/CatsService.html":{}}}],["next",{"_index":295,"title":{},"body":{"injectables/CatsService.html":{}}}],["node.js",{"_index":417,"title":{},"body":{"index.html":{}}}],["node_env",{"_index":112,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["npm",{"_index":427,"title":{},"body":{"index.html":{}}}],["number",{"_index":175,"title":{},"body":{"classes/Cat.html":{},"classes/CatDto.html":{},"controllers/CatsController.html":{},"injectables/CatsService.html":{},"classes/CreateCatDto.html":{},"interfaces/ICat.html":{}}}],["object",{"_index":475,"title":{},"body":{"miscellaneous/variables.html":{}}}],["onapplicationshutdown",{"_index":68,"title":{},"body":{"modules/AppModule.html":{},"controllers/HealthController.html":{}}}],["onapplicationshutdown(signal",{"_index":69,"title":{},"body":{"modules/AppModule.html":{},"controllers/HealthController.html":{}}}],["onmoduledestroy",{"_index":327,"title":{},"body":{"controllers/HealthController.html":{}}}],["onmoduleinit",{"_index":30,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/HealthController.html":{}}}],["open",{"_index":443,"title":{},"body":{"index.html":{}}}],["optional",{"_index":74,"title":{},"body":{"modules/AppModule.html":{},"controllers/CatsController.html":{},"injectables/CatsService.html":{},"controllers/HealthController.html":{},"miscellaneous/functions.html":{}}}],["out",{"_index":64,"title":{},"body":{"modules/AppModule.html":{},"modules/CatsModule.html":{},"overview.html":{}}}],["overview",{"_index":470,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":364,"title":{"dependencies.html":{}},"body":{}}],["param",{"_index":246,"title":{},"body":{"controllers/CatsController.html":{}}}],["parameter",{"_index":334,"title":{},"body":{"controllers/HealthController.html":{}}}],["parameters",{"_index":71,"title":{},"body":{"modules/AppModule.html":{},"controllers/CatsController.html":{},"injectables/CatsService.html":{},"controllers/HealthController.html":{},"miscellaneous/functions.html":{}}}],["passport",{"_index":390,"title":{},"body":{"dependencies.html":{}}}],["pid",{"_index":134,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["pid,hostname",{"_index":136,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["pino",{"_index":93,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["pinohttp",{"_index":120,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["pinologger",{"_index":90,"title":{},"body":{"modules/AppModule.html":{}}}],["please",{"_index":453,"title":{},"body":{"index.html":{}}}],["port",{"_index":110,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["post",{"_index":247,"title":{},"body":{"controllers/CatsController.html":{}}}],["post()@apioperation({summary",{"_index":229,"title":{},"body":{"controllers/CatsController.html":{}}}],["prefix",{"_index":223,"title":{},"body":{"controllers/CatsController.html":{},"controllers/HealthController.html":{}}}],["pretty",{"_index":394,"title":{},"body":{"dependencies.html":{}}}],["prettyprint",{"_index":121,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["primarygeneratedcolumn",{"_index":181,"title":{},"body":{"classes/Cat.html":{}}}],["private",{"_index":284,"title":{},"body":{"injectables/CatsService.html":{},"controllers/HealthController.html":{}}}],["production",{"_index":115,"title":{},"body":{"modules/AppModule.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["progressive",{"_index":416,"title":{},"body":{"index.html":{}}}],["project",{"_index":444,"title":{},"body":{"index.html":{}}}],["promise",{"_index":240,"title":{},"body":{"controllers/CatsController.html":{},"injectables/CatsService.html":{},"controllers/HealthController.html":{}}}],["promise.reject(new",{"_index":299,"title":{},"body":{"injectables/CatsService.html":{}}}],["properties",{"_index":169,"title":{},"body":{"classes/Cat.html":{},"classes/CatDto.html":{},"classes/CreateCatDto.html":{},"interfaces/ICat.html":{}}}],["providers",{"_index":56,"title":{},"body":{"modules/AppModule.html":{},"modules/CatsModule.html":{},"overview.html":{}}}],["provision",{"_index":117,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["public",{"_index":194,"title":{},"body":{"classes/Cat.html":{},"classes/CatDto.html":{},"classes/CreateCatDto.html":{}}}],["rate",{"_index":383,"title":{},"body":{"dependencies.html":{}}}],["read",{"_index":454,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":41,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"classes/Cat.html":{},"classes/CatDto.html":{},"controllers/CatsController.html":{},"injectables/CatsService.html":{},"classes/CreateCatDto.html":{},"interfaces/ICat.html":{}}}],["receives",{"_index":323,"title":{},"body":{"controllers/HealthController.html":{}}}],["reflect",{"_index":396,"title":{},"body":{"dependencies.html":{}}}],["registered",{"_index":326,"title":{},"body":{"controllers/HealthController.html":{}}}],["rejected",{"_index":342,"title":{},"body":{"controllers/HealthController.html":{}}}],["repository",{"_index":274,"title":{},"body":{"injectables/CatsService.html":{},"index.html":{}}}],["reset",{"_index":63,"title":{},"body":{"modules/AppModule.html":{},"modules/CatsModule.html":{},"overview.html":{}}}],["resolved",{"_index":341,"title":{},"body":{"controllers/HealthController.html":{}}}],["result",{"_index":46,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Cat.html":{},"classes/CatDto.html":{},"controllers/CatsController.html":{},"modules/CatsModule.html":{},"injectables/CatsService.html":{},"classes/CreateCatDto.html":{},"controllers/HealthController.html":{},"interfaces/ICat.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["results",{"_index":48,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Cat.html":{},"classes/CatDto.html":{},"controllers/CatsController.html":{},"modules/CatsModule.html":{},"injectables/CatsService.html":{},"classes/CreateCatDto.html":{},"controllers/HealthController.html":{},"interfaces/ICat.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":44,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/CatsController.html":{},"injectables/CatsService.html":{},"controllers/HealthController.html":{}}}],["returns",{"_index":16,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/CatsController.html":{},"injectables/CatsService.html":{},"controllers/HealthController.html":{}}}],["rimraf",{"_index":399,"title":{},"body":{"dependencies.html":{}}}],["run",{"_index":430,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":401,"title":{},"body":{"dependencies.html":{}}}],["scalable",{"_index":421,"title":{},"body":{"index.html":{}}}],["sequence",{"_index":329,"title":{},"body":{"controllers/HealthController.html":{}}}],["server",{"_index":422,"title":{},"body":{"index.html":{}}}],["shutdown",{"_index":160,"title":{},"body":{"modules/AppModule.html":{},"controllers/HealthController.html":{}}}],["side",{"_index":423,"title":{},"body":{"index.html":{}}}],["signal",{"_index":75,"title":{},"body":{"modules/AppModule.html":{},"controllers/HealthController.html":{}}}],["source",{"_index":4,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Cat.html":{},"classes/CatDto.html":{},"controllers/CatsController.html":{},"modules/CatsModule.html":{},"injectables/CatsService.html":{},"classes/CreateCatDto.html":{},"controllers/HealthController.html":{},"interfaces/ICat.html":{},"index.html":{}}}],["sponsors",{"_index":447,"title":{},"body":{"index.html":{}}}],["sqlite",{"_index":144,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["sqlite3",{"_index":403,"title":{},"body":{"dependencies.html":{}}}],["src/.../app.module.ts",{"_index":474,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../main.ts",{"_index":411,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/app/app.controller.ts",{"_index":6,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app/app.controller.ts:14",{"_index":15,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app/app.module.ts",{"_index":65,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/app.module.ts:68",{"_index":78,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/app.module.ts:72",{"_index":70,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/app.service.ts",{"_index":163,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["src/app/app.service.ts:5",{"_index":164,"title":{},"body":{"injectables/AppService.html":{}}}],["src/cats/cats.controller",{"_index":269,"title":{},"body":{"modules/CatsModule.html":{}}}],["src/cats/cats.controller.ts",{"_index":222,"title":{},"body":{"controllers/CatsController.html":{},"coverage.html":{}}}],["src/cats/cats.controller.ts:24",{"_index":234,"title":{},"body":{"controllers/CatsController.html":{}}}],["src/cats/cats.controller.ts:36",{"_index":239,"title":{},"body":{"controllers/CatsController.html":{}}}],["src/cats/cats.controller.ts:48",{"_index":244,"title":{},"body":{"controllers/CatsController.html":{}}}],["src/cats/cats.module",{"_index":96,"title":{},"body":{"modules/AppModule.html":{}}}],["src/cats/cats.module.ts",{"_index":268,"title":{},"body":{"modules/CatsModule.html":{}}}],["src/cats/cats.service",{"_index":250,"title":{},"body":{"controllers/CatsController.html":{},"modules/CatsModule.html":{}}}],["src/cats/cats.service.ts",{"_index":271,"title":{},"body":{"injectables/CatsService.html":{},"coverage.html":{}}}],["src/cats/cats.service.ts:10",{"_index":275,"title":{},"body":{"injectables/CatsService.html":{}}}],["src/cats/cats.service.ts:13",{"_index":278,"title":{},"body":{"injectables/CatsService.html":{}}}],["src/cats/cats.service.ts:23",{"_index":279,"title":{},"body":{"injectables/CatsService.html":{}}}],["src/cats/cats.service.ts:28",{"_index":280,"title":{},"body":{"injectables/CatsService.html":{}}}],["src/cats/dto/cat.dto",{"_index":251,"title":{},"body":{"controllers/CatsController.html":{}}}],["src/cats/dto/cat.dto.ts",{"_index":197,"title":{},"body":{"classes/CatDto.html":{},"classes/CreateCatDto.html":{},"coverage.html":{}}}],["src/cats/dto/cat.dto.ts:13",{"_index":301,"title":{},"body":{"classes/CreateCatDto.html":{}}}],["src/cats/dto/cat.dto.ts:17",{"_index":302,"title":{},"body":{"classes/CreateCatDto.html":{}}}],["src/cats/dto/cat.dto.ts:22",{"_index":208,"title":{},"body":{"classes/CatDto.html":{}}}],["src/cats/dto/cat.dto.ts:26",{"_index":210,"title":{},"body":{"classes/CatDto.html":{}}}],["src/cats/dto/cat.dto.ts:30",{"_index":202,"title":{},"body":{"classes/CatDto.html":{}}}],["src/cats/dto/cat.dto.ts:34",{"_index":205,"title":{},"body":{"classes/CatDto.html":{}}}],["src/cats/dto/cat.dto.ts:9",{"_index":303,"title":{},"body":{"classes/CreateCatDto.html":{}}}],["src/cats/entities/cat.entity",{"_index":98,"title":{},"body":{"modules/AppModule.html":{},"controllers/CatsController.html":{},"modules/CatsModule.html":{},"injectables/CatsService.html":{}}}],["src/cats/entities/cat.entity.ts",{"_index":168,"title":{},"body":{"classes/Cat.html":{},"coverage.html":{}}}],["src/cats/entities/cat.entity.ts:11",{"_index":185,"title":{},"body":{"classes/Cat.html":{}}}],["src/cats/entities/cat.entity.ts:14",{"_index":178,"title":{},"body":{"classes/Cat.html":{}}}],["src/cats/entities/cat.entity.ts:17",{"_index":180,"title":{},"body":{"classes/Cat.html":{}}}],["src/cats/entities/cat.entity.ts:5",{"_index":189,"title":{},"body":{"classes/Cat.html":{}}}],["src/cats/entities/cat.entity.ts:8",{"_index":182,"title":{},"body":{"classes/Cat.html":{}}}],["src/cats/interfaces/cat.interface",{"_index":215,"title":{},"body":{"classes/CatDto.html":{},"classes/CreateCatDto.html":{}}}],["src/cats/interfaces/cat.interface.ts",{"_index":348,"title":{},"body":{"interfaces/ICat.html":{},"coverage.html":{}}}],["src/health/health.controller.ts",{"_index":304,"title":{},"body":{"controllers/HealthController.html":{},"coverage.html":{}}}],["src/health/health.controller.ts:18",{"_index":307,"title":{},"body":{"controllers/HealthController.html":{}}}],["src/health/health.controller.ts:32",{"_index":309,"title":{},"body":{"controllers/HealthController.html":{}}}],["src/health/health.controller.ts:38",{"_index":308,"title":{},"body":{"controllers/HealthController.html":{}}}],["src/main.ts",{"_index":360,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["start",{"_index":431,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":434,"title":{},"body":{"index.html":{}}}],["start:prodtest",{"_index":435,"title":{},"body":{"index.html":{}}}],["started",{"_index":415,"title":{"index.html":{}},"body":{}}],["starter",{"_index":425,"title":{},"body":{"index.html":{}}}],["statements",{"_index":352,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":173,"title":{},"body":{"classes/Cat.html":{}}}],["status",{"_index":42,"title":{},"body":{"controllers/AppController.html":{},"controllers/CatsController.html":{}}}],["stay",{"_index":457,"title":{},"body":{"index.html":{}}}],["string",{"_index":17,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Cat.html":{},"classes/CatDto.html":{},"classes/CreateCatDto.html":{},"controllers/HealthController.html":{},"interfaces/ICat.html":{}}}],["successfully",{"_index":257,"title":{},"body":{"controllers/CatsController.html":{}}}],["successfully'})@apiresponse({description",{"_index":232,"title":{},"body":{"controllers/CatsController.html":{}}}],["summary",{"_index":255,"title":{},"body":{"controllers/CatsController.html":{}}}],["support",{"_index":448,"title":{},"body":{"index.html":{},"modules.html":{}}}],["svg",{"_index":468,"title":{},"body":{"modules.html":{}}}],["swagger",{"_index":405,"title":{},"body":{"dependencies.html":{}}}],["synchronize",{"_index":147,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["table",{"_index":363,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":362,"title":{},"body":{"coverage.html":{}}}],["termination",{"_index":324,"title":{},"body":{"controllers/HealthController.html":{}}}],["terminusmodule",{"_index":86,"title":{},"body":{"modules/AppModule.html":{}}}],["test",{"_index":116,"title":{},"body":{"modules/AppModule.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["test:covsupport",{"_index":440,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":439,"title":{},"body":{"index.html":{}}}],["tests",{"_index":437,"title":{},"body":{"index.html":{}}}],["thanks",{"_index":446,"title":{},"body":{"index.html":{}}}],["this.appservice.gethello",{"_index":45,"title":{},"body":{"controllers/AppController.html":{}}}],["this.catrepo.find",{"_index":294,"title":{},"body":{"injectables/CatsService.html":{}}}],["this.catrepo.save(newcat",{"_index":293,"title":{},"body":{"injectables/CatsService.html":{}}}],["this.cats[id",{"_index":298,"title":{},"body":{"injectables/CatsService.html":{}}}],["this.catsservice.create(createcatdto",{"_index":261,"title":{},"body":{"controllers/CatsController.html":{}}}],["this.catsservice.findall",{"_index":262,"title":{},"body":{"controllers/CatsController.html":{}}}],["this.catsservice.findone(id",{"_index":265,"title":{},"body":{"controllers/CatsController.html":{}}}],["this.config.get('node_env",{"_index":344,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.dns.pingcheck('nestjs",{"_index":319,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.health.check",{"_index":318,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.logger.fatal",{"_index":158,"title":{},"body":{"modules/AppModule.html":{}}}],["this.logger.info(`moduleinit",{"_index":156,"title":{},"body":{"modules/AppModule.html":{}}}],["this?.cats[id",{"_index":297,"title":{},"body":{"injectables/CatsService.html":{}}}],["time",{"_index":130,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["touch",{"_index":458,"title":{},"body":{"index.html":{}}}],["transformer",{"_index":376,"title":{},"body":{"dependencies.html":{}}}],["translatetime",{"_index":131,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["true",{"_index":104,"title":{},"body":{"modules/AppModule.html":{},"controllers/CatsController.html":{},"miscellaneous/variables.html":{}}}],["twitter",{"_index":464,"title":{},"body":{"index.html":{}}}],["type",{"_index":73,"title":{},"body":{"modules/AppModule.html":{},"classes/Cat.html":{},"classes/CatDto.html":{},"controllers/CatsController.html":{},"injectables/CatsService.html":{},"classes/CreateCatDto.html":{},"controllers/HealthController.html":{},"interfaces/ICat.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["typeorm",{"_index":192,"title":{},"body":{"classes/Cat.html":{},"injectables/CatsService.html":{},"dependencies.html":{}}}],["typeormmodule",{"_index":88,"title":{},"body":{"modules/AppModule.html":{},"modules/CatsModule.html":{}}}],["typeormmodule.forfeature([cat",{"_index":270,"title":{},"body":{"modules/CatsModule.html":{}}}],["typeormmodule.forroot(typeormmoduleoptions",{"_index":152,"title":{},"body":{"modules/AppModule.html":{}}}],["typeormmoduleoptions",{"_index":141,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["typescript",{"_index":20,"title":{},"body":{"controllers/AppController.html":{},"injectables/CatsService.html":{},"index.html":{}}}],["ui",{"_index":406,"title":{},"body":{"dependencies.html":{}}}],["undefined",{"_index":13,"title":{},"body":{"controllers/AppController.html":{},"classes/Cat.html":{},"controllers/CatsController.html":{}}}],["unique",{"_index":206,"title":{},"body":{"classes/CatDto.html":{},"classes/CreateCatDto.html":{}}}],["unit",{"_index":436,"title":{},"body":{"index.html":{}}}],["unsafe",{"_index":22,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/CatsService.html":{}}}],["until",{"_index":340,"title":{},"body":{"controllers/HealthController.html":{}}}],["use",{"_index":24,"title":{},"body":{"controllers/AppController.html":{},"injectables/CatsService.html":{},"controllers/HealthController.html":{}}}],["valid('development",{"_index":114,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["validationoptions",{"_index":105,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["validationschema",{"_index":108,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["validator",{"_index":214,"title":{},"body":{"classes/CatDto.html":{},"classes/CreateCatDto.html":{},"dependencies.html":{}}}],["value",{"_index":187,"title":{},"body":{"classes/Cat.html":{},"miscellaneous/variables.html":{}}}],["variable",{"_index":355,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":473,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["void",{"_index":77,"title":{},"body":{"modules/AppModule.html":{},"controllers/HealthController.html":{}}}],["watch",{"_index":432,"title":{},"body":{"index.html":{}}}],["website",{"_index":462,"title":{},"body":{"index.html":{}}}],["world",{"_index":166,"title":{},"body":{"injectables/AppService.html":{}}}],["yes",{"_index":76,"title":{},"body":{"modules/AppModule.html":{},"controllers/HealthController.html":{}}}],["you'd",{"_index":451,"title":{},"body":{"index.html":{}}}],["zoom",{"_index":62,"title":{},"body":{"modules/AppModule.html":{},"modules/CatsModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/app.controller.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getHello\n                        \n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@ApiResponse({status: undefined})\n                \n            \n\n            \n                \n                    Defined in src/app/app.controller.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        /* eslint-disable @typescript-eslint/no-unsafe-assignment,no-use-before-define,@typescript-eslint/no-use-before-define */\nimport { Controller, Get, HttpStatus, OnModuleInit } from '@nestjs/common'\nimport { ApiResponse, ApiTags } from '@nestjs/swagger'\n\nimport { AppService } from './app.service'\n\n@ApiTags(AppController.name)\n@Controller()\nexport class AppController {\n    constructor(private readonly appService: AppService) {}\n\n    @Get()\n    @ApiResponse({ status: HttpStatus.OK })\n    getHello(): string {\n        return this.appService.getHello()\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AppModule_imports\n\n\n\n\nCatsModule\n\nCatsModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nCatsModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                        \n                            HealthController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            CatsModule\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onApplicationShutdown\n                        \n                        \n                    \n                \n            \n            \n                \nonApplicationShutdown(signal?: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.module.ts:72\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    signal\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onModuleInit\n                        \n                        \n                    \n                \n            \n            \n                \nonModuleInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.module.ts:68\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        /* eslint-disable no-console,@typescript-eslint/no-unsafe-assignment,@typescript-eslint/no-unsafe-call,@typescript-eslint/no-unsafe-member-access */\nimport { Module, OnModuleInit, OnApplicationShutdown } from '@nestjs/common'\nimport { ConfigModule } from '@nestjs/config'\nimport { TerminusModule } from '@nestjs/terminus'\nimport { TypeOrmModule } from '@nestjs/typeorm'\n\nimport { PinoLogger, LoggerModule } from 'nestjs-pino'\n\nimport * as Joi from '@hapi/joi'\nimport { CatsModule } from 'src/cats/cats.module'\nimport { Cat } from 'src/cats/entities/cat.entity'\n\nimport { HealthController } from '../health/health.controller'\nimport { AppController } from './app.controller'\nimport { AppService } from './app.service'\n\nconst ConfigModuleOptions = {\n    isGlobal: true,\n    validationOptions: {\n        allowUnknown: true,\n        abortEarly: true,\n    },\n    validationSchema: Joi.object({\n        PORT: Joi.number().default(3000),\n        NODE_ENV: Joi.string()\n            .valid('development', 'production', 'test', 'provision')\n            .default('development'),\n    }),\n}\n\nconst LoggerModuleOptions = {\n    pinoHttp: {\n        prettyPrint: {\n            colorize: true,\n            levelFirst: false, // Display the log level name before the logged date and time\n            translateTime: true,\n            messageFormat: '{msg}', // 'pid', 'msg', 'level'\n            ignore: 'pid,hostname',\n            errorLikeObjectKeys: ['err', 'error', 'errors'],\n        },\n    },\n}\n\nconst TypeOrmModuleOptions = {\n    entities: [`${__dirname}/../**/*.entity.{ts,js}`],\n    type: 'sqlite' as const,\n    database: 'database.sqlite',\n    synchronize: true,\n    logging: true,\n}\n\n@Module({\n    controllers: [AppController, HealthController],\n    imports: [\n        ConfigModule.forRoot(ConfigModuleOptions),\n        LoggerModule.forRoot(LoggerModuleOptions),\n        TerminusModule, // Health module\n        TypeOrmModule.forRoot(TypeOrmModuleOptions),\n        CatsModule,\n    ],\n    providers: [AppService],\n})\nexport class AppModule implements OnModuleInit, OnApplicationShutdown {\n    constructor(private readonly logger: PinoLogger) {\n        logger.setContext(AppModule.name)\n    }\n\n    onModuleInit(): void {\n        this.logger.info(`ModuleInit - AppModule has been initialized.`)\n    }\n\n    onApplicationShutdown(signal?: string): void {\n        this.logger.fatal(\n            `ApplicationShutdown - AppModule has been shutdown with ${signal} signal`,\n        )\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/app.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getHello\n                        \n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.service.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, OnModuleInit } from '@nestjs/common'\n\n@Injectable()\nexport class AppService {\n    getHello(): string {\n        return 'Hello World!'\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Cat.html":{"url":"classes/Cat.html","title":"class - Cat","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Cat\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/cats/entities/cat.entity.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                age\n                            \n                            \n                                breed\n                            \n                            \n                                id\n                            \n                            \n                                name\n                            \n                            \n                                    Static\n                                    Readonly\n                                NAME_LENGTH\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            age\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({name: 'cat_age'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/cats/entities/cat.entity.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            breed\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({name: 'cat_breed'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/cats/entities/cat.entity.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryGeneratedColumn()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/cats/entities/cat.entity.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({name: 'cat_name', length: undefined})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/cats/entities/cat.entity.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                                Readonly\n                            NAME_LENGTH\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 36\n                        \n                    \n                        \n                            \n                                    Defined in src/cats/entities/cat.entity.ts:5\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Column, Entity, PrimaryGeneratedColumn } from 'typeorm'\n\n@Entity({ name: 'cats' })\nexport class Cat {\n    public static readonly NAME_LENGTH = 36\n\n    @PrimaryGeneratedColumn()\n    id: number\n\n    @Column({ name: 'cat_name', length: Cat.NAME_LENGTH })\n    name: string\n\n    @Column({ name: 'cat_age' })\n    age: number\n\n    @Column({ name: 'cat_breed' })\n    breed: string\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CatDto.html":{"url":"classes/CatDto.html","title":"class - CatDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CatDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/cats/dto/cat.dto.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            ICat\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                age\n                            \n                            \n                                    Readonly\n                                breed\n                            \n                            \n                                    Public\n                                    Readonly\n                                id\n                            \n                            \n                                    Readonly\n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            age\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'The age of the Cat', example: 1})@IsInt()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/cats/dto/cat.dto.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            breed\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'The breed of the Cat', example: 'Maine Coon'})@IsString()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/cats/dto/cat.dto.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'Cat unique ID', example: '36635263'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/cats/dto/cat.dto.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'The name of the Cat', example: 'Kitty'})@IsString()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/cats/dto/cat.dto.ts:26\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger'\n\nimport { IsInt, IsString } from 'class-validator'\nimport { ICat } from 'src/cats/interfaces/cat.interface'\n\nexport class CreateCatDto implements ICat {\n    @ApiProperty({ description: 'The name of the Cat', example: 'Kitty' })\n    @IsString()\n    readonly name: string\n\n    @ApiProperty({ description: 'The age of the Cat', example: 1 })\n    @IsInt()\n    readonly age: number\n\n    @ApiProperty({ description: 'The breed of the Cat', example: 'Maine Coon' })\n    @IsString()\n    readonly breed: string\n}\n\nexport class CatDto implements ICat {\n    @ApiProperty({ description: 'Cat unique ID', example: '36635263' })\n    public readonly id: number\n\n    @ApiProperty({ description: 'The name of the Cat', example: 'Kitty' })\n    @IsString()\n    readonly name: string\n\n    @ApiProperty({ description: 'The age of the Cat', example: 1 })\n    @IsInt()\n    readonly age: number\n\n    @ApiProperty({ description: 'The breed of the Cat', example: 'Maine Coon' })\n    @IsString()\n    readonly breed: string\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/CatsController.html":{"url":"controllers/CatsController.html","title":"controller - CatsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  CatsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/cats/cats.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                cats\n            \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                findOne\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            create\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    create(createCatDto: CreateCatDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@ApiOperation({summary: 'Create cat'})@ApiResponse({status: undefined, description: 'Created Cat Successfully'})@ApiResponse({description: 'Forbidden', status: undefined})\n                \n            \n\n            \n                \n                    Defined in src/cats/cats.controller.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createCatDto\n                                    \n                                                CreateCatDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findAll\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@ApiOperation({summary: 'Get all Cats'})@ApiResponse({description: 'Array of all Cats Entities', isArray: true, status: undefined, type: CatDto})\n                \n            \n\n            \n                \n                    Defined in src/cats/cats.controller.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            findOne\n                        \n                        \n                    \n                \n            \n            \n                \nfindOne(id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')@ApiOperation({summary: 'Get a Cats by id'})@ApiResponse({description: 'Entity of a Cats', isArray: false, status: undefined, type: CatDto})\n                \n            \n\n            \n                \n                    Defined in src/cats/cats.controller.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        /* eslint-disable */\nimport { Body, Controller, Get, Param, Post, HttpStatus } from '@nestjs/common'\nimport { ApiOperation, ApiResponse, ApiTags } from '@nestjs/swagger'\n\nimport { CatsService } from 'src/cats/cats.service'\nimport { CreateCatDto, CatDto } from 'src/cats/dto/cat.dto'\nimport { Cat as CatEntity } from 'src/cats/entities/cat.entity'\n\n@ApiTags(CatsController.name)\n@Controller('cats')\nexport class CatsController {\n    constructor(private readonly catsService: CatsService) {}\n\n    @Post()\n    @ApiOperation({ summary: 'Create cat' })\n    @ApiResponse({\n        status: HttpStatus.CREATED,\n        description: 'Created Cat Successfully',\n    })\n    @ApiResponse({\n        description: 'Forbidden',\n        status: HttpStatus.FORBIDDEN,\n    })\n    async create(@Body() createCatDto: CreateCatDto) {\n        return await this.catsService.create(createCatDto)\n    }\n\n    @Get()\n    @ApiOperation({ summary: 'Get all Cats' })\n    @ApiResponse({\n        description: 'Array of all Cats Entities',\n        isArray: true,\n        status: HttpStatus.OK,\n        type: CatDto,\n    })\n    async findAll(): Promise {\n        return this.catsService.findAll()\n    }\n\n    @Get(':id')\n    @ApiOperation({ summary: 'Get a Cats by id' })\n    @ApiResponse({\n        description: 'Entity of a Cats',\n        isArray: false,\n        status: HttpStatus.OK,\n        type: CatDto,\n    })\n    findOne(@Param('id') id: number): Promise {\n        return this.catsService.findOne(id)\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CatsModule.html":{"url":"modules/CatsModule.html","title":"module - CatsModule","body":"\n                   \n\n\n\n\n    Modules\n    CatsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_CatsModule\n\n\n\ncluster_CatsModule_providers\n\n\n\n\nCatsService\n\nCatsService\n\n\n\nCatsModule\n\nCatsModule\n\nCatsModule -->\n\nCatsService->CatsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/cats/cats.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            CatsService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            CatsController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common'\nimport { TypeOrmModule } from '@nestjs/typeorm'\n\nimport { CatsController } from 'src/cats/cats.controller'\nimport { CatsService } from 'src/cats/cats.service'\nimport { Cat } from 'src/cats/entities/cat.entity'\n\n@Module({\n    controllers: [CatsController],\n    imports: [TypeOrmModule.forFeature([Cat])],\n    providers: [CatsService],\n})\nexport class CatsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CatsService.html":{"url":"injectables/CatsService.html","title":"injectable - CatsService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  CatsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/cats/cats.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findOne\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(catRepo: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/cats/cats.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        catRepo\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            create\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    create(cat: CreateCatDto)\n                \n            \n\n\n            \n                \n                    Defined in src/cats/cats.service.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    cat\n                                    \n                                                CreateCatDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findAll\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll()\n                \n            \n\n\n            \n                \n                    Defined in src/cats/cats.service.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findOne\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/cats/cats.service.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common'\nimport { InjectRepository } from '@nestjs/typeorm'\n\nimport { Cat } from 'src/cats/entities/cat.entity'\nimport { Repository } from 'typeorm'\n\nimport { CreateCatDto } from './dto/cat.dto'\n\n@Injectable()\nexport class CatsService {\n    constructor(@InjectRepository(Cat) private readonly catRepo: Repository) {}\n\n    async create(cat: CreateCatDto) {\n        const newCat = new Cat()\n\n        newCat.name = cat.name\n        newCat.age = cat.age\n        newCat.breed = cat.breed\n\n        return this.catRepo.save(newCat)\n    }\n\n    async findAll(): Promise {\n        return this.catRepo.find()\n    }\n\n    // eslint-disable-next-line class-methods-use-this\n    async findOne(id: number): Promise {\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-return\n        // if (this?.cats[id]) return this.cats[id]\n\n        return Promise.reject(new Error('No Cats'))\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateCatDto.html":{"url":"classes/CreateCatDto.html","title":"class - CreateCatDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateCatDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/cats/dto/cat.dto.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            ICat\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                age\n                            \n                            \n                                    Readonly\n                                breed\n                            \n                            \n                                    Readonly\n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            age\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'The age of the Cat', example: 1})@IsInt()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/cats/dto/cat.dto.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            breed\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'The breed of the Cat', example: 'Maine Coon'})@IsString()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/cats/dto/cat.dto.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'The name of the Cat', example: 'Kitty'})@IsString()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/cats/dto/cat.dto.ts:9\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger'\n\nimport { IsInt, IsString } from 'class-validator'\nimport { ICat } from 'src/cats/interfaces/cat.interface'\n\nexport class CreateCatDto implements ICat {\n    @ApiProperty({ description: 'The name of the Cat', example: 'Kitty' })\n    @IsString()\n    readonly name: string\n\n    @ApiProperty({ description: 'The age of the Cat', example: 1 })\n    @IsInt()\n    readonly age: number\n\n    @ApiProperty({ description: 'The breed of the Cat', example: 'Maine Coon' })\n    @IsString()\n    readonly breed: string\n}\n\nexport class CatDto implements ICat {\n    @ApiProperty({ description: 'Cat unique ID', example: '36635263' })\n    public readonly id: number\n\n    @ApiProperty({ description: 'The name of the Cat', example: 'Kitty' })\n    @IsString()\n    readonly name: string\n\n    @ApiProperty({ description: 'The age of the Cat', example: 1 })\n    @IsInt()\n    readonly age: number\n\n    @ApiProperty({ description: 'The breed of the Cat', example: 'Maine Coon' })\n    @IsString()\n    readonly breed: string\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/HealthController.html":{"url":"controllers/HealthController.html","title":"controller - HealthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  HealthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/health/health.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                health\n            \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                check\n                            \n                            \n                                onApplicationShutdown\n                            \n                            \n                                onModuleInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            check\n                        \n                        \n                    \n                \n            \n            \n                \ncheck()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@HealthCheck()\n                \n            \n\n            \n                \n                    Defined in src/health/health.controller.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onApplicationShutdown\n                        \n                        \n                    \n                \n            \n            \n                \nonApplicationShutdown(signal?: string)\n                \n            \n\n\n            \n                \n                    Defined in src/health/health.controller.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    signal\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onModuleInit\n                        \n                        \n                    \n                \n            \n            \n                \nonModuleInit()\n                \n            \n\n\n            \n                \n                    Defined in src/health/health.controller.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        /* eslint-disable no-use-before-define,@typescript-eslint/no-use-before-define */\nimport { Controller, Get, OnApplicationShutdown, OnModuleInit } from '@nestjs/common'\nimport { ConfigService } from '@nestjs/config'\nimport { ApiTags } from '@nestjs/swagger'\nimport { DNSHealthIndicator, HealthCheck, HealthCheckService } from '@nestjs/terminus'\n\n@ApiTags(HealthController.name)\n@Controller('health')\nexport class HealthController implements OnModuleInit, OnApplicationShutdown {\n    constructor(\n        private health: HealthCheckService,\n        private dns: DNSHealthIndicator,\n        private config: ConfigService,\n    ) {}\n\n    @Get()\n    @HealthCheck()\n    check() {\n        return this.health.check([\n            () => this.dns.pingCheck('nestjs-docs', 'https://docs.nestjs.com'),\n        ])\n    }\n\n    /*\n     * When the application receives a termination signal it will call any registered\n     * onModuleDestroy(), beforeApplicationShutdown(), then onApplicationShutdown() methods\n     * (in the sequence described above) with the corresponding signal as the first parameter.\n     * If a registered function awaits an asynchronous call (returns a promise), Nest will not\n     * continue in the sequence until the promise is resolved or rejected.\n     */\n\n    onModuleInit(): void {\n        console.log(`ModuleInit - HealthController has been initialized.`, {\n            config: this.config.get('NODE_ENV'),\n        })\n    }\n\n    onApplicationShutdown(signal?: string): void {\n        console.log(\n            `ApplicationShutdown - HealthController has been shutdown with ${signal} signal`,\n        )\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ICat.html":{"url":"interfaces/ICat.html","title":"interface - ICat","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ICat\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/cats/interfaces/cat.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        age\n                                \n                                \n                                        breed\n                                \n                                \n                                        name\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        age\n                                    \n                                \n                                \n                                    \n                                        age:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        breed\n                                    \n                                \n                                \n                                    \n                                        breed:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface ICat {\n    readonly name: string\n    readonly age: number\n    readonly breed: string\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/app.controller.ts\n            \n            controller\n            AppController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/app.module.ts\n            \n            variable\n            ConfigModuleOptions\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/app.module.ts\n            \n            variable\n            LoggerModuleOptions\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/app.module.ts\n            \n            variable\n            TypeOrmModuleOptions\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/app.service.ts\n            \n            injectable\n            AppService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/cats/cats.controller.ts\n            \n            controller\n            CatsController\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/cats/cats.service.ts\n            \n            injectable\n            CatsService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/cats/dto/cat.dto.ts\n            \n            class\n            CatDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/cats/dto/cat.dto.ts\n            \n            class\n            CreateCatDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/cats/entities/cat.entity.ts\n            \n            class\n            Cat\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/cats/interfaces/cat.interface.ts\n            \n            interface\n            ICat\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/health/health.controller.ts\n            \n            controller\n            HealthController\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            createSwagger\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @hapi/joi : ^17.1.1\n        \n            @nestjs/common : ^7.5.1\n        \n            @nestjs/config : ^0.6.1\n        \n            @nestjs/core : ^7.5.1\n        \n            @nestjs/passport : ^7.1.3\n        \n            @nestjs/platform-express : ^7.5.1\n        \n            @nestjs/swagger : ^4.7.5\n        \n            @nestjs/terminus : ^7.0.1\n        \n            @nestjs/typeorm : ^7.1.5\n        \n            class-transformer : ^0.3.1\n        \n            class-validator : ^0.12.2\n        \n            dotenv : ^8.2.0\n        \n            dotenv-expand : ^5.1.0\n        \n            express-rate-limit : ^5.2.3\n        \n            helmet : ^4.2.0\n        \n            joi : ^17.3.0\n        \n            nestjs-pino : ^1.3.0\n        \n            passport : ^0.4.1\n        \n            passport-local : ^1.0.0\n        \n            pino-pretty : ^4.3.0\n        \n            reflect-metadata : ^0.1.13\n        \n            rimraf : ^3.0.2\n        \n            rxjs : ^6.6.3\n        \n            sqlite3 : ^5.0.0\n        \n            swagger-ui-express : ^4.1.5\n        \n            typeorm : ^0.2.29\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                        \n                            createSwagger   (src/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            bootstrap\n                        \n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createSwagger\n                        \n                        \n                    \n                \n            \n            \n                \ncreateSwagger(app)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    app\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n  A progressive Node.js framework for building efficient and scalable server-side applications.\n    \n\n\n\n\n\n\n\n\n  \n    \n  \n\n  \n\nDescription\nNest framework TypeScript starter repository.\nInstallation\n$ npm installRunning the app\n# development\n$ npm run start\n\n# watch mode\n$ npm run start:dev\n\n# production mode\n$ npm run start:prodTest\n# unit tests\n$ npm run test\n\n# e2e tests\n$ npm run test:e2e\n\n# test coverage\n$ npm run test:covSupport\nNest is an MIT-licensed open source project. It can grow thanks to the sponsors and support by the amazing backers. If you'd like to join them, please read more here.\nStay in touch\n\nAuthor - Kamil Myśliwiec\nWebsite - https://nestjs.com\nTwitter - @nestframework\n\nLicense\nNest is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CatsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_CatsModule\n\n\n\ncluster_CatsModule_providers\n\n\n\n\nCatsModule\n\nCatsModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nCatsModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nCatsService\n\nCatsService\n\nCatsModule -->\n\nCatsService->CatsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        2 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    3 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    2 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    3 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    1 Interface\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ConfigModuleOptions   (src/.../app.module.ts)\n                        \n                        \n                            LoggerModuleOptions   (src/.../app.module.ts)\n                        \n                        \n                            TypeOrmModuleOptions   (src/.../app.module.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/app.module.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            ConfigModuleOptions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    isGlobal: true,\n    validationOptions: {\n        allowUnknown: true,\n        abortEarly: true,\n    },\n    validationSchema: Joi.object({\n        PORT: Joi.number().default(3000),\n        NODE_ENV: Joi.string()\n            .valid('development', 'production', 'test', 'provision')\n            .default('development'),\n    }),\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            LoggerModuleOptions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    pinoHttp: {\n        prettyPrint: {\n            colorize: true,\n            levelFirst: false, // Display the log level name before the logged date and time\n            translateTime: true,\n            messageFormat: '{msg}', // 'pid', 'msg', 'level'\n            ignore: 'pid,hostname',\n            errorLikeObjectKeys: ['err', 'error', 'errors'],\n        },\n    },\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            TypeOrmModuleOptions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    entities: [`${__dirname}/../**/*.entity.{ts,js}`],\n    type: 'sqlite' as const,\n    database: 'database.sqlite',\n    synchronize: true,\n    logging: true,\n}\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
