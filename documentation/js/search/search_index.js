var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/controllers/AppController.html",[0,1.181,1,1.949]],["body/controllers/AppController.html",[0,1.444,1,3.033,2,1.584,3,0.361,4,0.307,5,0.307,6,3.121,7,0.418,8,1.533,9,4.602,10,0.829,11,0.036,12,0.541,13,3.762,14,1.204,15,1.4,16,1.444,17,1.444,18,2.13,19,2.13,20,2.13,21,0.506,22,1.003,23,2.382,24,1.003,25,2.69,26,3.121,27,3.762,28,3.762,29,0.361,30,0.154,31,1.921,32,2.698,33,3.762,34,1.318,35,1.444,36,3.762,37,0.021,38,0.027,39,0.021]],["title/modules/AppModule.html",[40,1.181,41,1.949]],["body/modules/AppModule.html",[1,2.474,2,1.366,3,0.207,4,0.175,5,0.175,8,0.689,11,0.036,12,0.467,14,1.039,15,1.142,16,0.826,17,0.826,18,1.219,19,1.219,20,1.219,21,0.552,22,0.574,25,2.504,26,1.786,29,0.207,30,0.088,37,0.012,38,0.018,39,0.012,40,1.669,41,3.638,42,0.996,43,0.996,44,1.219,45,1.219,46,0.996,47,2.212,48,1.219,49,1.786,50,1.786,51,1.786,52,2.778,53,2.778,54,2.778,55,1.838,56,1.219,57,1.219,58,1.544,59,2.474,60,2.328,61,3.24,62,2.692,63,2.153,64,1.219,65,0.574,66,0.584,67,0.996,68,3.24,69,1.786,70,3.119,71,3.871,72,2.153,73,1.363,74,2.802,75,2.802,76,2.153,77,2.153,78,2.153,79,2.153,80,2.153,81,1.544,82,2.153,83,1.544,84,3.245,85,1.544,86,1.544,87,1.099,88,2.153,89,2.153,90,2.153,91,1.786,92,2.153,93,2.153,94,0.715,95,1.363,96,2.153,97,0.788,98,1.363,99,3.24,100,1.544,101,1.786,102,2.382,103,1.786,104,1.786,105,1.786,106,1.786,107,1.786,108,1.786,109,1.786,110,1.786,111,1.786,112,1.786,113,1.786,114,1.544,115,1.544,116,1.786,117,1.786,118,1.544,119,1.786,120,1.786,121,1.786,122,1.099,123,1.786,124,1.786,125,1.786,126,2.153,127,2.153,128,1.786,129,2.153,130,1.363,131,2.153,132,1.786,133,2.153,134,1.786,135,1.786]],["title/injectables/AppService.html",[25,1.571,136,1.181]],["body/injectables/AppService.html",[3,0.404,4,0.343,5,0.343,7,0.467,8,1.643,9,4.787,11,0.035,12,0.604,14,1.345,15,1.5,21,0.404,22,1.12,25,2.62,29,0.404,30,0.172,35,1.613,37,0.024,38,0.029,39,0.024,136,1.97,137,2.38,138,3.485,139,4.202,140,4.202,141,4.202]],["title/classes/Cat.html",[30,0.126,94,0.678]],["body/classes/Cat.html",[3,0.183,4,0.155,5,0.155,7,0.402,10,1.14,11,0.035,12,0.774,15,1.191,16,0.73,17,0.73,21,0.391,24,0.507,29,0.183,30,0.121,31,2.384,34,1.267,37,0.011,38,0.017,39,0.011,65,1.379,66,0.984,94,1.165,97,1.222,98,1.204,102,0.97,142,0.608,143,1.577,144,0.944,145,2.795,146,2.795,147,1.858,148,1.858,149,1.267,150,2.051,151,3,152,1.858,153,2.29,154,1.87,155,1.858,156,2.225,157,1.901,158,2.951,159,1.901,160,1.869,161,1.901,162,2.951,163,1.901,164,3,165,1.901,166,3,167,1.901,168,1.869,169,2.29,170,1.901,171,2.447,172,1.577,173,1.901,174,1.901,175,2.951,176,2.447,177,2.447,178,1.901,179,2.447,180,1.901,181,3,182,1.901,183,1.901,184,3.381,185,2.594,186,3,187,1.577,188,1.901,189,3,190,1.869,191,1.901,192,1.901,193,1.966,194,0.73,195,3.874,196,3,197,2.447,198,1.901,199,1.901,200,0.88,201,1.076,202,1.577,203,1.577,204,1.076,205,1.671,206,1.694,207,1.577,208,1.671,209,0.88,210,1.901,211,1.204,212,1.901,213,1.901,214,1.901,215,1.577,216,2.447,217,1.363,218,1.577,219,1.671,220,1.577,221,1.577]],["title/classes/CatRepository.html",[30,0.126,222,1.571]],["body/classes/CatRepository.html",[3,0.345,4,0.292,5,0.292,7,0.399,8,1.487,11,0.035,12,0.516,14,1.148,16,1.377,17,1.377,21,0.446,29,0.345,30,0.147,35,1.377,37,0.02,38,0.026,39,0.02,73,2.272,74,2.573,75,2.573,94,1.136,122,2.372,142,1.148,200,1.66,201,2.032,204,2.032,222,2.372,223,2.976,224,2.942,225,3.696,226,2.631,227,4.521,228,3.588,229,2.942,230,2.942,231,2.942,232,2.976,233,2.573,234,3.588,235,3.588,236,4.274,237,2.976,238,2.976,239,2.976]],["title/controllers/CatsController.html",[0,1.181,240,1.949]],["body/controllers/CatsController.html",[0,1.118,2,1.226,3,0.28,4,0.237,5,0.237,7,0.324,8,1.293,10,0.642,11,0.036,12,0.419,14,0.932,16,1.118,17,1.118,18,1.65,19,1.65,20,1.65,21,0.536,22,0.776,23,1.845,24,0.776,29,0.28,30,0.119,31,1.487,32,2.089,35,1.118,37,0.016,38,0.023,39,0.016,66,0.524,94,0.891,97,0.981,98,1.845,102,2.063,130,1.845,149,1.021,204,2.288,219,1.65,226,2.368,240,2.559,241,2.416,242,3.172,243,2.416,244,3.848,245,2.913,246,2.913,247,2.416,248,3.351,249,3.351,250,3.351,251,1.65,252,2.063,253,2.416,254,2.368,255,2.063,256,2.686,257,2.913,258,2.416,259,2.913,260,2.913,261,2.416,262,2.416,263,3.351,264,2.416,265,3.351,266,2.416,267,2.416,268,2.416,269,2.416,270,2.913,271,2.416,272,2.416,273,2.416,274,2.416,275,2.416]],["title/modules/CatsModule.html",[40,1.181,52,1.742]],["body/modules/CatsModule.html",[2,1.899,3,0.329,4,0.28,5,0.28,11,0.035,21,0.559,22,0.914,29,0.329,30,0.14,37,0.019,38,0.025,39,0.019,40,1.935,42,1.587,43,1.587,44,1.942,45,1.942,46,1.587,47,2.855,48,2.855,52,3.298,55,2.554,56,1.942,57,1.942,60,2.459,86,2.459,87,1.751,97,0.832,98,2.171,222,1.751,240,3.192,252,3.125,253,2.844,276,2.844,277,2.844,278,2.844,279,3.429,280,1.751,281,3.429,282,3.429,283,2.844,284,3.429]],["title/injectables/CatsService.html",[136,1.181,252,1.571]],["body/injectables/CatsService.html",[3,0.305,4,0.259,5,0.259,7,0.354,8,1.373,10,0.701,11,0.036,12,0.698,14,1.018,21,0.537,22,0.848,29,0.305,30,0.13,35,1.221,37,0.018,38,0.024,39,0.018,64,1.801,65,0.848,66,0.772,67,1.471,87,1.623,94,1.07,122,2.19,136,1.647,137,1.801,144,1.373,200,1.985,205,2.749,222,2.77,224,2.717,226,2.478,229,2.717,230,2.717,231,2.717,233,2.28,242,3.291,251,1.801,252,2.19,258,2.638,283,2.638,285,2.638,286,4.027,287,4.311,288,2.28,289,2.638,290,3.18,291,3.18,292,3.18,293,3.18,294,2.638,295,3.18,296,2.638,297,2.638]],["title/classes/CreateCatDto.html",[30,0.126,254,1.571]],["body/classes/CreateCatDto.html",[3,0.209,4,0.178,5,0.178,7,0.243,10,0.965,11,0.035,12,0.629,15,1.573,21,0.378,24,0.581,29,0.378,30,0.192,34,2.035,37,0.012,38,0.018,39,0.012,65,1.434,66,0.844,94,1.243,142,0.698,144,1.049,145,3.408,146,3.408,147,0.918,148,0.918,149,1.534,150,1.843,152,0.918,153,2.772,154,2.019,155,1.843,156,2.445,160,2.772,190,2.493,193,2.401,194,0.837,206,2.137,208,2.657,209,1.822,211,2.493,254,1.673,255,1.113,256,1.113,298,1.381,299,2.181,300,2.181,301,2.181,302,2.181,303,2.181,304,2.181,305,2.181,306,2.181,307,2.235,308,3.139,309,2.396,310,1.113,311,2.686,312,2.823,313,2.235,314,1.009,315,1.673]],["title/classes/CreateUserDto.html",[30,0.126,316,1.571]],["body/classes/CreateUserDto.html",[3,0.305,4,0.259,5,0.259,7,0.354,10,0.701,11,0.035,12,0.457,15,1.586,21,0.466,24,0.848,29,0.466,30,0.222,34,1.821,37,0.018,38,0.024,39,0.018,65,1.601,66,0.772,97,1.261,142,1.018,144,1.373,147,1.339,148,1.339,149,1.821,150,1.339,152,1.339,154,1.221,155,1.339,156,2.188,193,2.284,194,1.221,206,1.863,209,1.471,307,2.653,309,2.478,310,1.623,311,2.478,313,2.19,314,1.471,315,2.19,316,2.19,317,2.014,318,3.18,319,3.18,320,1.623,321,1.623]],["title/modules/CronModule.html",[40,1.181,53,1.742]],["body/modules/CronModule.html",[3,0.384,4,0.326,5,0.326,11,0.034,21,0.478,22,1.067,29,0.384,30,0.164,37,0.022,38,0.028,39,0.022,40,2.081,42,1.852,43,1.852,44,2.266,45,2.266,46,1.852,47,3.07,48,2.266,53,3.369,55,2.82,56,2.266,57,2.266,322,3.319,323,3.319,324,3.369,325,4.001,326,4.001]],["title/injectables/CronService.html",[136,1.181,324,1.742]],["body/injectables/CronService.html",[3,0.281,4,0.238,5,0.238,7,0.325,8,1.296,10,1.024,11,0.036,12,0.757,14,1.487,21,0.389,22,0.779,29,0.281,30,0.12,31,2.372,34,1.628,37,0.016,38,0.023,39,0.016,66,0.526,70,3.332,83,2.095,136,1.554,137,1.654,144,1.296,154,1.121,168,2.564,169,2.564,205,1.654,208,1.654,324,2.293,327,2.423,328,5.016,329,3.853,330,5.016,331,5.016,332,5.016,333,5.016,334,4.048,335,2.921,336,4.048,337,2.921,338,4.048,339,2.921,340,3.358,341,2.921,342,3.358,343,4.048,344,2.921,345,2.921,346,2.921,347,2.921,348,4.048,349,2.921,350,2.921,351,2.921,352,2.921,353,2.921,354,4.048,355,2.921,356,4.048,357,2.921,358,2.423]],["title/classes/GetCatResponseDto.html",[30,0.126,256,1.571]],["body/classes/GetCatResponseDto.html",[3,0.197,4,0.167,5,0.167,7,0.228,10,1.137,11,0.035,12,0.742,15,1.576,21,0.364,24,0.546,29,0.364,30,0.187,34,1.754,37,0.011,38,0.018,39,0.011,65,1.409,66,0.951,94,1.226,142,0.655,144,1,145,3.348,146,3.348,147,1.595,148,1.595,149,1.486,150,2.026,152,1.595,153,2.685,154,2.03,155,1.785,156,2.417,160,2.685,190,2.399,193,2.37,194,0.786,206,2.105,208,2.834,209,1.962,211,2.685,254,1.045,255,1.045,256,1.595,298,1.297,307,2.164,308,3.04,309,2.331,310,1.045,311,2.634,312,2.717,313,2.164,314,0.948,315,1.595,359,2.048,360,2.048,361,3.143,362,2.048,363,2.048,364,1.699,365,2.048,366,2.048,367,2.048,368,2.048]],["title/classes/GetUserResponseDto.html",[30,0.126,321,1.571]],["body/classes/GetUserResponseDto.html",[3,0.274,4,0.233,5,0.233,7,0.318,10,1.151,11,0.035,12,0.751,15,1.581,21,0.441,24,0.761,29,0.441,30,0.214,34,1.396,37,0.016,38,0.022,39,0.016,65,1.584,66,0.974,97,1.205,142,0.914,144,1.275,147,1.932,148,1.932,149,1.74,150,1.932,152,1.932,154,1.529,155,1.202,156,2.091,193,2.199,194,1.096,206,1.762,209,1.321,307,2.535,309,2.343,310,1.458,311,2.343,313,2.034,314,1.321,315,2.034,316,1.458,317,1.808,320,1.458,321,2.034,361,3.807,364,2.368,369,2.855,370,2.855,371,2.855,372,2.855,373,2.855]],["title/controllers/HealthController.html",[0,1.181,59,1.949]],["body/controllers/HealthController.html",[0,1.023,2,1.122,3,0.256,4,0.217,5,0.217,7,0.296,8,1.415,10,0.588,11,0.036,12,0.636,14,1.542,15,1.292,16,1.023,17,1.023,18,1.51,19,1.51,20,1.51,21,0.463,22,0.711,23,1.688,24,0.711,29,0.256,30,0.109,35,1.023,37,0.015,38,0.021,39,0.015,59,3.051,61,4.223,62,3.149,64,1.51,65,0.711,66,0.48,67,1.234,68,4.223,69,2.211,70,3.455,71,4.39,81,1.912,85,1.912,128,3.149,130,1.688,132,2.211,134,2.211,135,2.211,201,1.51,217,2.723,288,1.912,329,3.667,374,2.211,375,2.666,376,4.818,377,2.666,378,2.666,379,2.666,380,2.666,381,3.796,382,3.796,383,3.796,384,3.796,385,2.666,386,2.666,387,2.666,388,2.666,389,3.796,390,2.666,391,2.666,392,2.666,393,2.666,394,2.666,395,2.666,396,2.666,397,3.796,398,3.796,399,2.666,400,2.666,401,3.796,402,2.666,403,2.666,404,2.666,405,2.666,406,2.666,407,2.211,408,2.666,409,2.666,410,2.211,411,2.666,412,2.666,413,2.666,414,2.666,415,2.666,416,2.666,417,2.666]],["title/classes/UpdateCatDto.html",[30,0.126,255,1.571]],["body/classes/UpdateCatDto.html",[3,0.214,4,0.182,5,0.182,7,0.248,10,0.879,11,0.035,12,0.574,15,1.582,21,0.383,24,0.594,29,0.383,30,0.194,34,2.007,37,0.013,38,0.019,39,0.013,65,1.443,66,0.796,67,2.3,94,1.249,142,0.713,144,1.066,145,3.428,146,3.428,147,0.938,148,0.938,149,1.551,150,1.679,152,0.938,153,2.11,154,1.977,155,1.679,156,2.434,160,2.803,190,2.11,193,2.412,194,0.856,206,2.148,208,2.682,209,1.846,211,2.526,254,1.138,255,1.701,256,1.138,298,1.412,307,2.259,308,3.174,309,2.418,310,1.138,311,2.703,312,2.861,313,2.259,314,1.032,315,1.701,418,2.229,419,2.229,420,2.229,421,2.229,422,1.849,423,2.229]],["title/classes/UpdateUserDto.html",[30,0.126,320,1.571]],["body/classes/UpdateUserDto.html",[3,0.303,4,0.258,5,0.258,7,0.351,10,0.697,11,0.035,12,0.454,15,1.582,21,0.465,24,0.842,29,0.465,30,0.222,34,1.817,37,0.018,38,0.024,39,0.018,65,1.599,66,0.769,67,1.977,97,1.258,142,1.011,144,1.367,147,1.33,148,1.33,149,1.817,150,1.33,152,1.33,154,1.213,155,1.33,156,2.182,193,2.279,194,1.213,206,1.858,209,1.462,307,2.646,309,2.471,310,1.613,311,2.471,313,2.181,314,1.462,315,2.181,316,1.613,317,2.001,320,2.181,321,1.613,422,2.621,424,3.16]],["title/classes/User.html",[30,0.126,97,0.747]],["body/classes/User.html",[3,0.217,4,0.185,5,0.185,7,0.252,10,1.102,11,0.036,12,0.765,15,0.985,16,0.869,17,0.869,21,0.428,24,0.604,29,0.217,30,0.138,31,2.552,34,1.411,37,0.013,38,0.019,39,0.013,65,1.418,66,0.978,94,1.051,95,1.434,97,1.213,102,1.156,142,0.725,144,1.079,147,2.007,148,2.007,149,1.411,150,2.007,151,3.34,152,2.007,154,1.545,155,1.419,156,1.878,164,3.34,166,3.34,168,2.134,169,2.55,171,2.796,172,1.878,176,2.796,177,2.796,179,2.796,181,3.34,184,3.7,185,2.887,186,3.34,187,1.878,189,3.34,193,1.695,194,0.869,195,3.34,196,3.34,197,2.796,200,1.048,201,1.282,202,1.878,203,1.878,204,2.28,205,1.909,206,1.294,207,1.878,215,1.878,216,2.796,217,1.624,218,1.878,219,1.909,220,1.878,221,1.878,425,1.878,426,2.264,427,2.264,428,2.264,429,2.264,430,2.264,431,2.264,432,2.264,433,3.37,434,2.264,435,2.264,436,2.264,437,2.264,438,1.624,439,2.264,440,2.264,441,2.264,442,2.264]],["title/classes/UserRepository.html",[30,0.126,280,1.571]],["body/classes/UserRepository.html",[3,0.345,4,0.292,5,0.292,7,0.399,8,1.487,11,0.035,12,0.516,14,1.148,16,1.377,17,1.377,21,0.446,29,0.345,30,0.147,35,1.377,37,0.02,38,0.026,39,0.02,73,2.272,74,2.573,75,2.573,97,1.251,122,2.372,142,1.148,200,1.66,201,2.032,224,2.942,225,3.696,226,2.631,227,4.521,229,2.942,230,2.942,231,2.942,232,2.976,233,2.573,236,4.274,237,2.976,238,2.976,239,2.976,280,2.372,438,2.573,443,2.976,444,3.588,445,3.588,446,3.588]],["title/controllers/UsersController.html",[0,1.181,447,1.949]],["body/controllers/UsersController.html",[0,1.118,2,1.226,3,0.28,4,0.237,5,0.237,7,0.324,8,1.293,10,0.642,11,0.036,12,0.419,14,0.932,16,1.118,17,1.118,18,1.65,19,1.65,20,1.65,21,0.536,22,0.776,23,1.845,24,0.776,29,0.28,30,0.119,31,1.487,32,2.089,35,1.118,37,0.016,38,0.023,39,0.016,66,0.524,94,0.642,95,1.845,97,1.126,102,1.487,130,1.845,149,1.021,185,2.089,204,1.65,219,1.65,226,2.368,242,3.172,243,2.416,244,3.848,247,2.416,248,3.351,249,3.351,250,3.351,251,1.65,261,2.416,262,2.416,263,3.351,264,2.416,265,3.351,266,2.416,267,2.416,268,2.416,269,2.416,271,2.416,272,2.416,273,2.416,274,2.416,275,2.416,316,2.368,320,2.063,321,2.686,438,2.089,447,2.559,448,2.416,449,2.913,450,2.913,451,2.913,452,2.416,453,2.063,454,2.416,455,2.913,456,2.913,457,2.913]],["title/modules/UsersModule.html",[40,1.181,54,1.742]],["body/modules/UsersModule.html",[2,1.899,3,0.329,4,0.28,5,0.28,11,0.035,21,0.559,22,0.914,29,0.329,30,0.14,37,0.019,38,0.025,39,0.019,40,1.935,42,1.587,43,1.587,44,1.942,45,1.942,46,1.587,47,2.855,48,2.855,54,3.298,55,2.554,56,1.942,57,1.942,60,2.459,86,2.459,87,1.751,94,0.756,95,2.171,222,1.751,280,1.751,447,3.192,453,3.125,454,2.844,458,2.844,459,2.844,460,2.844,461,3.429,462,3.429,463,2.844,464,3.429,465,3.429]],["title/injectables/UsersService.html",[136,1.181,453,1.571]],["body/injectables/UsersService.html",[3,0.31,4,0.263,5,0.263,7,0.359,8,1.388,10,0.712,11,0.036,12,0.704,14,1.034,21,0.524,22,0.861,29,0.31,30,0.132,35,1.24,37,0.018,38,0.024,39,0.018,64,1.83,65,0.861,66,0.78,67,1.495,87,1.649,94,0.956,97,0.784,122,2.214,136,1.664,137,1.83,144,1.388,200,1.495,205,2.771,224,2.746,226,2.499,229,2.746,230,2.746,231,2.746,242,3.312,251,1.83,280,2.785,286,4.06,287,4.339,288,2.317,289,2.68,294,2.68,296,2.68,297,2.68,452,2.68,453,2.214,463,2.68,466,2.68,467,3.231,468,3.231,469,3.231,470,3.231,471,3.231]],["title/coverage.html",[472,3.009]],["body/coverage.html",[0,1.909,1,1.813,5,0.233,6,2.375,11,0.035,25,1.462,30,0.239,37,0.016,38,0.022,39,0.016,46,1.325,58,2.863,59,1.813,66,0.515,94,0.631,97,0.695,100,2.053,118,2.053,136,1.909,138,2.375,143,2.375,222,1.462,223,2.375,240,1.813,241,2.375,252,1.462,254,1.462,255,1.462,256,1.462,280,1.462,285,2.375,298,2.911,316,1.462,317,2.911,320,1.462,321,1.462,324,1.621,327,2.375,340,5.078,342,2.375,358,3.311,374,2.375,407,3.812,425,2.375,443,2.375,447,1.813,448,2.375,453,1.462,466,2.375,472,2.053,473,2.863,474,2.863,475,2.863,476,5.416,477,3.992,478,5.229,479,3.992,480,3.992,481,2.863,482,2.863,483,3.992,484,2.863,485,2.863,486,3.992,487,3.992,488,3.812,489,2.375,490,2.375,491,2.863,492,2.863,493,2.863,494,2.863]],["title/dependencies.html",[43,1.712,495,2.572]],["body/dependencies.html",[11,0.036,22,0.908,24,0.908,30,0.184,37,0.019,38,0.025,39,0.019,43,1.576,81,2.442,83,2.442,85,2.442,87,1.739,91,2.825,194,1.307,200,2.078,251,2.845,314,1.576,496,3.406,497,5.024,498,3.406,499,3.406,500,3.406,501,3.406,502,3.406,503,3.406,504,3.406,505,3.406,506,5.024,507,4.491,508,3.406,509,3.406,510,3.406,511,5.024,512,3.406,513,3.406,514,3.406,515,3.406,516,3.406,517,3.406,518,3.406,519,3.406,520,4.491,521,3.406,522,3.406,523,3.406,524,3.406,525,3.406,526,3.406,527,3.406,528,3.406,529,3.406,530,3.406,531,3.406,532,3.406,533,3.406,534,3.406,535,3.406]],["title/miscellaneous/functions.html",[536,1.628,537,3.069]],["body/miscellaneous/functions.html",[7,0.481,11,0.033,37,0.024,38,0.029,39,0.024,46,2.597,64,2.959,65,1.393,67,2.418,488,3.59,489,4.334,490,4.334,536,2.741,537,3.59,538,5.613,539,4.328,540,4.334,541,4.328,542,5.225]],["title/index.html",[7,0.286,543,2.572,544,2.572]],["body/index.html",[4,0.277,11,0.035,37,0.019,38,0.025,39,0.019,73,2.149,114,2.434,115,3.213,206,1.303,219,1.922,225,2.434,410,4.161,472,2.434,540,2.815,545,3.394,546,3.394,547,4.481,548,3.394,549,3.394,550,3.394,551,3.394,552,3.394,553,3.394,554,3.394,555,3.394,556,5.809,557,3.394,558,3.394,559,5.697,560,3.394,561,3.394,562,4.481,563,3.394,564,3.394,565,3.394,566,4.481,567,3.394,568,3.394,569,3.394,570,4.481,571,4.481,572,3.394,573,3.394,574,3.394,575,3.394,576,3.394,577,2.815,578,3.394,579,3.394,580,3.394,581,3.394,582,3.394,583,3.394,584,3.394,585,3.394,586,3.394,587,3.394,588,3.394,589,3.394,590,3.394,591,3.394,592,3.394,593,3.394,594,3.394]],["title/modules.html",[42,1.941]],["body/modules.html",[11,0.03,37,0.025,38,0.03,39,0.025,41,2.826,42,2.065,52,2.527,53,2.527,54,2.527,577,4.885,595,5.889,596,5.889,597,5.889]],["title/overview.html",[598,3.48]],["body/overview.html",[2,1.453,11,0.034,25,2.582,37,0.019,38,0.025,39,0.019,40,1.325,41,3.826,42,1.598,43,1.598,44,1.955,45,1.955,46,1.598,47,1.955,48,1.955,49,2.864,50,2.864,51,2.864,52,3.241,53,3.158,54,3.241,55,2.566,56,1.955,57,1.955,137,1.955,142,1.105,252,2.978,276,2.864,277,2.864,278,2.864,322,2.864,323,2.864,324,2.864,453,2.978,458,2.864,459,2.864,460,2.864,598,2.864,599,5.058,600,3.452]],["title/miscellaneous/variables.html",[536,1.628,601,3.069]],["body/miscellaneous/variables.html",[7,0.417,11,0.035,37,0.021,38,0.027,39,0.021,58,2.688,66,0.947,94,0.826,97,0.91,99,3.109,100,3.427,101,3.109,102,2.922,103,3.109,104,3.109,105,3.109,106,3.109,107,3.109,108,3.109,109,3.109,110,3.109,111,3.109,112,3.109,113,3.109,114,2.688,115,2.688,116,3.109,117,3.109,118,3.427,119,3.109,120,3.109,121,3.109,122,1.914,123,3.109,124,3.109,125,3.109,168,3.026,169,3.026,536,2.374,601,3.109,602,4.779,603,4.779]]],"invertedIndex":[["",{"_index":11,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Cat.html":{},"classes/CatRepository.html":{},"controllers/CatsController.html":{},"modules/CatsModule.html":{},"injectables/CatsService.html":{},"classes/CreateCatDto.html":{},"classes/CreateUserDto.html":{},"modules/CronModule.html":{},"injectables/CronService.html":{},"classes/GetCatResponseDto.html":{},"classes/GetUserResponseDto.html":{},"controllers/HealthController.html":{},"classes/UpdateCatDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"classes/UserRepository.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":340,"title":{},"body":{"injectables/CronService.html":{},"coverage.html":{}}}],["0.1.1",{"_index":502,"title":{},"body":{"dependencies.html":{}}}],["0.1.13",{"_index":525,"title":{},"body":{"dependencies.html":{}}}],["0.12.2",{"_index":514,"title":{},"body":{"dependencies.html":{}}}],["0.2.29",{"_index":535,"title":{},"body":{"dependencies.html":{}}}],["0.3.1",{"_index":513,"title":{},"body":{"dependencies.html":{}}}],["0.4.1",{"_index":507,"title":{},"body":{"dependencies.html":{}}}],["0.6.1",{"_index":498,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":478,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":476,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":483,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":481,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":487,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":482,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":208,"title":{},"body":{"classes/Cat.html":{},"classes/CreateCatDto.html":{},"injectables/CronService.html":{},"classes/GetCatResponseDto.html":{},"classes/UpdateCatDto.html":{}}}],["1.0.0",{"_index":522,"title":{},"body":{"dependencies.html":{}}}],["1/12",{"_index":485,"title":{},"body":{"coverage.html":{}}}],["1/2",{"_index":486,"title":{},"body":{"coverage.html":{}}}],["1/4",{"_index":480,"title":{},"body":{"coverage.html":{}}}],["1/9",{"_index":492,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":600,"title":{},"body":{"overview.html":{}}}],["100",{"_index":355,"title":{},"body":{"injectables/CronService.html":{}}}],["11",{"_index":491,"title":{},"body":{"coverage.html":{}}}],["17.1.1",{"_index":496,"title":{},"body":{"dependencies.html":{}}}],["1})@column()@index",{"_index":191,"title":{},"body":{"classes/Cat.html":{}}}],["1})@column({name",{"_index":157,"title":{},"body":{"classes/Cat.html":{}}}],["1})@isint()@isnotempty",{"_index":305,"title":{},"body":{"classes/CreateCatDto.html":{}}}],["1})@isint()@ispositive()@isnotempty",{"_index":299,"title":{},"body":{"classes/CreateCatDto.html":{}}}],["1})@isint()@ispositive()@isnotempty()@isoptional",{"_index":418,"title":{},"body":{"classes/UpdateCatDto.html":{}}}],["25",{"_index":479,"title":{},"body":{"coverage.html":{}}}],["3.0.2",{"_index":527,"title":{},"body":{"dependencies.html":{}}}],["36",{"_index":179,"title":{},"body":{"classes/Cat.html":{},"classes/User.html":{}}}],["36635263",{"_index":207,"title":{},"body":{"classes/Cat.html":{},"classes/User.html":{}}}],["36635263'})@primarygeneratedcolumn",{"_index":172,"title":{},"body":{"classes/Cat.html":{},"classes/User.html":{}}}],["4",{"_index":599,"title":{},"body":{"overview.html":{}}}],["4.1.5",{"_index":534,"title":{},"body":{"dependencies.html":{}}}],["4.2.0",{"_index":519,"title":{},"body":{"dependencies.html":{}}}],["4.6.2",{"_index":511,"title":{},"body":{"dependencies.html":{}}}],["4.7.5",{"_index":508,"title":{},"body":{"dependencies.html":{}}}],["5.0.0",{"_index":531,"title":{},"body":{"dependencies.html":{}}}],["5.2.3",{"_index":517,"title":{},"body":{"dependencies.html":{}}}],["50",{"_index":358,"title":{},"body":{"injectables/CronService.html":{},"coverage.html":{}}}],["6.6.3",{"_index":529,"title":{},"body":{"dependencies.html":{}}}],["60",{"_index":352,"title":{},"body":{"injectables/CronService.html":{}}}],["7.0.1",{"_index":509,"title":{},"body":{"dependencies.html":{}}}],["7.1.3",{"_index":504,"title":{},"body":{"dependencies.html":{}}}],["7.1.5",{"_index":510,"title":{},"body":{"dependencies.html":{}}}],["7.5.1",{"_index":497,"title":{},"body":{"dependencies.html":{}}}],["8",{"_index":484,"title":{},"body":{"coverage.html":{}}}],["__dirname}/**/*.entity.{ts,js",{"_index":120,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["abortearly",{"_index":105,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["above",{"_index":403,"title":{},"body":{"controllers/HealthController.html":{}}}],["access,no",{"_index":79,"title":{},"body":{"modules/AppModule.html":{}}}],["age",{"_index":145,"title":{},"body":{"classes/Cat.html":{},"classes/CreateCatDto.html":{},"classes/GetCatResponseDto.html":{},"classes/UpdateCatDto.html":{}}}],["allowunknown",{"_index":104,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["alwayspaginate",{"_index":268,"title":{},"body":{"controllers/CatsController.html":{},"controllers/UsersController.html":{}}}],["amazing",{"_index":578,"title":{},"body":{"index.html":{}}}],["api_default_port",{"_index":542,"title":{},"body":{"miscellaneous/functions.html":{}}}],["apihideproperty",{"_index":307,"title":{},"body":{"classes/CreateCatDto.html":{},"classes/CreateUserDto.html":{},"classes/GetCatResponseDto.html":{},"classes/GetUserResponseDto.html":{},"classes/UpdateCatDto.html":{},"classes/UpdateUserDto.html":{}}}],["apihideproperty()@exclude",{"_index":361,"title":{},"body":{"classes/GetCatResponseDto.html":{},"classes/GetUserResponseDto.html":{}}}],["apioperation",{"_index":248,"title":{},"body":{"controllers/CatsController.html":{},"controllers/UsersController.html":{}}}],["apioperation({summary",{"_index":243,"title":{},"body":{"controllers/CatsController.html":{},"controllers/UsersController.html":{}}}],["apiproperty",{"_index":193,"title":{},"body":{"classes/Cat.html":{},"classes/CreateCatDto.html":{},"classes/CreateUserDto.html":{},"classes/GetCatResponseDto.html":{},"classes/GetUserResponseDto.html":{},"classes/UpdateCatDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{}}}],["apiproperty({description",{"_index":155,"title":{},"body":{"classes/Cat.html":{},"classes/CreateCatDto.html":{},"classes/CreateUserDto.html":{},"classes/GetCatResponseDto.html":{},"classes/GetUserResponseDto.html":{},"classes/UpdateCatDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{}}}],["apiproperty({type",{"_index":364,"title":{},"body":{"classes/GetCatResponseDto.html":{},"classes/GetUserResponseDto.html":{}}}],["apitags",{"_index":23,"title":{},"body":{"controllers/AppController.html":{},"controllers/CatsController.html":{},"controllers/HealthController.html":{},"controllers/UsersController.html":{}}}],["apitags(appcontroller.name",{"_index":28,"title":{},"body":{"controllers/AppController.html":{}}}],["apitags(catscontroller.name",{"_index":260,"title":{},"body":{"controllers/CatsController.html":{}}}],["apitags(healthcontroller.name",{"_index":386,"title":{},"body":{"controllers/HealthController.html":{}}}],["apitags(userscontroller.name",{"_index":456,"title":{},"body":{"controllers/UsersController.html":{}}}],["app",{"_index":540,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["app.controller",{"_index":92,"title":{},"body":{"modules/AppModule.html":{}}}],["app.service",{"_index":26,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["appcontroller",{"_index":1,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["application",{"_index":394,"title":{},"body":{"controllers/HealthController.html":{}}}],["applications",{"_index":553,"title":{},"body":{"index.html":{}}}],["applicationshutdown",{"_index":134,"title":{},"body":{"modules/AppModule.html":{},"controllers/HealthController.html":{}}}],["appmodule",{"_index":41,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appservice",{"_index":25,"title":{"injectables/AppService.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"coverage.html":{},"overview.html":{}}}],["assignment",{"_index":239,"title":{},"body":{"classes/CatRepository.html":{},"classes/UserRepository.html":{}}}],["assignment,@typescript",{"_index":76,"title":{},"body":{"modules/AppModule.html":{}}}],["async",{"_index":226,"title":{},"body":{"classes/CatRepository.html":{},"controllers/CatsController.html":{},"injectables/CatsService.html":{},"classes/UserRepository.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["asynchronous",{"_index":409,"title":{},"body":{"controllers/HealthController.html":{}}}],["author",{"_index":587,"title":{},"body":{"index.html":{}}}],["await",{"_index":237,"title":{},"body":{"classes/CatRepository.html":{},"classes/UserRepository.html":{}}}],["awaits",{"_index":408,"title":{},"body":{"controllers/HealthController.html":{}}}],["backers",{"_index":579,"title":{},"body":{"index.html":{}}}],["before",{"_index":19,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/CatsController.html":{},"controllers/HealthController.html":{},"controllers/UsersController.html":{}}}],["beforeapplicationshutdown",{"_index":400,"title":{},"body":{"controllers/HealthController.html":{}}}],["bootstrap",{"_index":46,"title":{},"body":{"modules/AppModule.html":{},"modules/CatsModule.html":{},"modules/CronModule.html":{},"modules/UsersModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["breed",{"_index":146,"title":{},"body":{"classes/Cat.html":{},"classes/CreateCatDto.html":{},"classes/GetCatResponseDto.html":{},"classes/UpdateCatDto.html":{}}}],["browse",{"_index":597,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":595,"title":{},"body":{"modules.html":{}}}],["building",{"_index":548,"title":{},"body":{"index.html":{}}}],["c",{"_index":441,"title":{},"body":{"classes/User.html":{}}}],["c.user",{"_index":442,"title":{},"body":{"classes/User.html":{}}}],["call",{"_index":397,"title":{},"body":{"controllers/HealthController.html":{}}}],["call,@typescript",{"_index":77,"title":{},"body":{"modules/AppModule.html":{}}}],["called",{"_index":350,"title":{},"body":{"injectables/CronService.html":{}}}],["cat",{"_index":94,"title":{"classes/Cat.html":{}},"body":{"modules/AppModule.html":{},"classes/Cat.html":{},"classes/CatRepository.html":{},"controllers/CatsController.html":{},"injectables/CatsService.html":{},"classes/CreateCatDto.html":{},"classes/GetCatResponseDto.html":{},"classes/UpdateCatDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["cat.entity",{"_index":234,"title":{},"body":{"classes/CatRepository.html":{}}}],["cat.exclude",{"_index":457,"title":{},"body":{"controllers/UsersController.html":{}}}],["cat.name_length",{"_index":210,"title":{},"body":{"classes/Cat.html":{}}}],["cat_age",{"_index":158,"title":{},"body":{"classes/Cat.html":{}}}],["cat_breed",{"_index":162,"title":{},"body":{"classes/Cat.html":{}}}],["cat_name",{"_index":175,"title":{},"body":{"classes/Cat.html":{}}}],["catrepository",{"_index":222,"title":{"classes/CatRepository.html":{}},"body":{"classes/CatRepository.html":{},"modules/CatsModule.html":{},"injectables/CatsService.html":{},"modules/UsersModule.html":{},"coverage.html":{}}}],["cats",{"_index":204,"title":{},"body":{"classes/Cat.html":{},"classes/CatRepository.html":{},"controllers/CatsController.html":{},"classes/User.html":{},"controllers/UsersController.html":{}}}],["cats'})@post('/clear",{"_index":245,"title":{},"body":{"controllers/CatsController.html":{}}}],["cats.controller",{"_index":282,"title":{},"body":{"modules/CatsModule.html":{}}}],["cats.service",{"_index":253,"title":{},"body":{"controllers/CatsController.html":{},"modules/CatsModule.html":{}}}],["cats/cats.module",{"_index":93,"title":{},"body":{"modules/AppModule.html":{}}}],["cats/datum/cat.entity",{"_index":95,"title":{},"body":{"modules/AppModule.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{}}}],["cats/datum/cat.repository",{"_index":462,"title":{},"body":{"modules/UsersModule.html":{}}}],["catscontroller",{"_index":240,"title":{"controllers/CatsController.html":{}},"body":{"controllers/CatsController.html":{},"modules/CatsModule.html":{},"coverage.html":{}}}],["catsmodule",{"_index":52,"title":{"modules/CatsModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CatsModule.html":{},"modules.html":{},"overview.html":{}}}],["catsservice",{"_index":252,"title":{"injectables/CatsService.html":{}},"body":{"controllers/CatsController.html":{},"modules/CatsModule.html":{},"injectables/CatsService.html":{},"coverage.html":{},"overview.html":{}}}],["check",{"_index":376,"title":{},"body":{"controllers/HealthController.html":{}}}],["class",{"_index":30,"title":{"classes/Cat.html":{},"classes/CatRepository.html":{},"classes/CreateCatDto.html":{},"classes/CreateUserDto.html":{},"classes/GetCatResponseDto.html":{},"classes/GetUserResponseDto.html":{},"classes/UpdateCatDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"classes/UserRepository.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Cat.html":{},"classes/CatRepository.html":{},"controllers/CatsController.html":{},"modules/CatsModule.html":{},"injectables/CatsService.html":{},"classes/CreateCatDto.html":{},"classes/CreateUserDto.html":{},"modules/CronModule.html":{},"injectables/CronService.html":{},"classes/GetCatResponseDto.html":{},"classes/GetUserResponseDto.html":{},"controllers/HealthController.html":{},"classes/UpdateCatDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"classes/UserRepository.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{}}}],["classes",{"_index":142,"title":{},"body":{"classes/Cat.html":{},"classes/CatRepository.html":{},"classes/CreateCatDto.html":{},"classes/CreateUserDto.html":{},"classes/GetCatResponseDto.html":{},"classes/GetUserResponseDto.html":{},"classes/UpdateCatDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"classes/UserRepository.html":{},"overview.html":{}}}],["clear",{"_index":242,"title":{},"body":{"controllers/CatsController.html":{},"injectables/CatsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["clearall",{"_index":227,"title":{},"body":{"classes/CatRepository.html":{},"classes/UserRepository.html":{}}}],["cleared",{"_index":236,"title":{},"body":{"classes/CatRepository.html":{},"classes/UserRepository.html":{}}}],["cluster_appmodule",{"_index":49,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":51,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":50,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_catsmodule",{"_index":276,"title":{},"body":{"modules/CatsModule.html":{},"overview.html":{}}}],["cluster_catsmodule_exports",{"_index":278,"title":{},"body":{"modules/CatsModule.html":{},"overview.html":{}}}],["cluster_catsmodule_providers",{"_index":277,"title":{},"body":{"modules/CatsModule.html":{},"overview.html":{}}}],["cluster_cronmodule",{"_index":322,"title":{},"body":{"modules/CronModule.html":{},"overview.html":{}}}],["cluster_cronmodule_providers",{"_index":323,"title":{},"body":{"modules/CronModule.html":{},"overview.html":{}}}],["cluster_usersmodule",{"_index":458,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["cluster_usersmodule_exports",{"_index":459,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["cluster_usersmodule_providers",{"_index":460,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["column",{"_index":195,"title":{},"body":{"classes/Cat.html":{},"classes/User.html":{}}}],["config",{"_index":389,"title":{},"body":{"controllers/HealthController.html":{}}}],["configmodule",{"_index":80,"title":{},"body":{"modules/AppModule.html":{}}}],["configmodule.forroot(configmoduleoptions",{"_index":126,"title":{},"body":{"modules/AppModule.html":{}}}],["configmoduleoptions",{"_index":100,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["configservice",{"_index":381,"title":{},"body":{"controllers/HealthController.html":{}}}],["console.error",{"_index":133,"title":{},"body":{"modules/AppModule.html":{}}}],["console.info(`moduleinit",{"_index":131,"title":{},"body":{"modules/AppModule.html":{}}}],["console.log",{"_index":417,"title":{},"body":{"controllers/HealthController.html":{}}}],["console.log(`moduleinit",{"_index":415,"title":{},"body":{"controllers/HealthController.html":{}}}],["const",{"_index":99,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["constructor",{"_index":288,"title":{},"body":{"injectables/CatsService.html":{},"controllers/HealthController.html":{},"injectables/UsersService.html":{}}}],["constructor(@injectrepository(catrepository",{"_index":295,"title":{},"body":{"injectables/CatsService.html":{}}}],["constructor(@injectrepository(userrepository",{"_index":471,"title":{},"body":{"injectables/UsersService.html":{}}}],["constructor(private",{"_index":33,"title":{},"body":{"controllers/AppController.html":{}}}],["constructor(public",{"_index":271,"title":{},"body":{"controllers/CatsController.html":{},"controllers/UsersController.html":{}}}],["constructor(repo",{"_index":289,"title":{},"body":{"injectables/CatsService.html":{},"injectables/UsersService.html":{}}}],["continue",{"_index":411,"title":{},"body":{"controllers/HealthController.html":{}}}],["controller",{"_index":0,"title":{"controllers/AppController.html":{},"controllers/CatsController.html":{},"controllers/HealthController.html":{},"controllers/UsersController.html":{}},"body":{"controllers/AppController.html":{},"controllers/CatsController.html":{},"controllers/HealthController.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["controller('health",{"_index":387,"title":{},"body":{"controllers/HealthController.html":{}}}],["controller(appcontroller.path",{"_index":27,"title":{},"body":{"controllers/AppController.html":{}}}],["controller(catscontroller.path",{"_index":259,"title":{},"body":{"controllers/CatsController.html":{}}}],["controller(userscontroller.path",{"_index":455,"title":{},"body":{"controllers/UsersController.html":{}}}],["controllers",{"_index":2,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/CatsController.html":{},"modules/CatsModule.html":{},"controllers/HealthController.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["coon",{"_index":211,"title":{},"body":{"classes/Cat.html":{},"classes/CreateCatDto.html":{},"classes/GetCatResponseDto.html":{},"classes/UpdateCatDto.html":{}}}],["coon'})@column({name",{"_index":161,"title":{},"body":{"classes/Cat.html":{}}}],["coon'})@isstring()@isnotempty",{"_index":301,"title":{},"body":{"classes/CreateCatDto.html":{}}}],["coon'})@isstring()@isnotempty()@isoptional",{"_index":420,"title":{},"body":{"classes/UpdateCatDto.html":{}}}],["corresponding",{"_index":404,"title":{},"body":{"controllers/HealthController.html":{}}}],["count",{"_index":328,"title":{},"body":{"injectables/CronService.html":{}}}],["coverage",{"_index":472,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["create",{"_index":263,"title":{},"body":{"controllers/CatsController.html":{},"controllers/UsersController.html":{}}}],["createcatdto",{"_index":254,"title":{"classes/CreateCatDto.html":{}},"body":{"controllers/CatsController.html":{},"classes/CreateCatDto.html":{},"classes/GetCatResponseDto.html":{},"classes/UpdateCatDto.html":{},"coverage.html":{}}}],["createdat",{"_index":147,"title":{},"body":{"classes/Cat.html":{},"classes/CreateCatDto.html":{},"classes/CreateUserDto.html":{},"classes/GetCatResponseDto.html":{},"classes/GetUserResponseDto.html":{},"classes/UpdateCatDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{}}}],["createdatecolumn",{"_index":164,"title":{},"body":{"classes/Cat.html":{},"classes/User.html":{}}}],["createswagger",{"_index":489,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["createswagger(app",{"_index":539,"title":{},"body":{"miscellaneous/functions.html":{}}}],["createuserdto",{"_index":316,"title":{"classes/CreateUserDto.html":{}},"body":{"classes/CreateUserDto.html":{},"classes/GetUserResponseDto.html":{},"classes/UpdateUserDto.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["cron",{"_index":345,"title":{},"body":{"injectables/CronService.html":{}}}],["cron('60",{"_index":334,"title":{},"body":{"injectables/CronService.html":{}}}],["cronmodule",{"_index":53,"title":{"modules/CronModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CronModule.html":{},"modules.html":{},"overview.html":{}}}],["cronservice",{"_index":324,"title":{"injectables/CronService.html":{}},"body":{"modules/CronModule.html":{},"injectables/CronService.html":{},"coverage.html":{},"overview.html":{}}}],["cronservice.count",{"_index":348,"title":{},"body":{"injectables/CronService.html":{}}}],["crud",{"_index":249,"title":{},"body":{"controllers/CatsController.html":{},"controllers/UsersController.html":{}}}],["crudcontroller",{"_index":250,"title":{},"body":{"controllers/CatsController.html":{},"controllers/UsersController.html":{}}}],["current",{"_index":353,"title":{},"body":{"injectables/CronService.html":{}}}],["cycle",{"_index":203,"title":{},"body":{"classes/Cat.html":{},"classes/User.html":{}}}],["database",{"_index":122,"title":{},"body":{"modules/AppModule.html":{},"classes/CatRepository.html":{},"injectables/CatsService.html":{},"classes/UserRepository.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["database.sqlite",{"_index":123,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["datum/cat.dto",{"_index":257,"title":{},"body":{"controllers/CatsController.html":{}}}],["datum/cat.entity",{"_index":258,"title":{},"body":{"controllers/CatsController.html":{},"injectables/CatsService.html":{}}}],["datum/cat.repository",{"_index":283,"title":{},"body":{"modules/CatsModule.html":{},"injectables/CatsService.html":{}}}],["datum/user.dto",{"_index":451,"title":{},"body":{"controllers/UsersController.html":{}}}],["datum/user.entity",{"_index":452,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["datum/user.repository",{"_index":463,"title":{},"body":{"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["declarations",{"_index":45,"title":{},"body":{"modules/AppModule.html":{},"modules/CatsModule.html":{},"modules/CronModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["decorators",{"_index":10,"title":{},"body":{"controllers/AppController.html":{},"classes/Cat.html":{},"controllers/CatsController.html":{},"injectables/CatsService.html":{},"classes/CreateCatDto.html":{},"classes/CreateUserDto.html":{},"injectables/CronService.html":{},"classes/GetCatResponseDto.html":{},"classes/GetUserResponseDto.html":{},"controllers/HealthController.html":{},"classes/UpdateCatDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["default",{"_index":168,"title":{},"body":{"classes/Cat.html":{},"injectables/CronService.html":{},"classes/User.html":{},"miscellaneous/variables.html":{}}}],["default('development",{"_index":117,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["define",{"_index":20,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/CatsController.html":{},"controllers/HealthController.html":{},"controllers/UsersController.html":{}}}],["defined",{"_index":12,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Cat.html":{},"classes/CatRepository.html":{},"controllers/CatsController.html":{},"injectables/CatsService.html":{},"classes/CreateCatDto.html":{},"classes/CreateUserDto.html":{},"injectables/CronService.html":{},"classes/GetCatResponseDto.html":{},"classes/GetUserResponseDto.html":{},"controllers/HealthController.html":{},"classes/UpdateCatDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"classes/UserRepository.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["delete",{"_index":244,"title":{},"body":{"controllers/CatsController.html":{},"controllers/UsersController.html":{}}}],["deletedat",{"_index":148,"title":{},"body":{"classes/Cat.html":{},"classes/CreateCatDto.html":{},"classes/CreateUserDto.html":{},"classes/GetCatResponseDto.html":{},"classes/GetUserResponseDto.html":{},"classes/UpdateCatDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{}}}],["deletedatecolumn",{"_index":166,"title":{},"body":{"classes/Cat.html":{},"classes/User.html":{}}}],["deletes",{"_index":229,"title":{},"body":{"classes/CatRepository.html":{},"injectables/CatsService.html":{},"classes/UserRepository.html":{},"injectables/UsersService.html":{}}}],["dependencies",{"_index":43,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/CatsModule.html":{},"modules/CronModule.html":{},"modules/UsersModule.html":{},"dependencies.html":{},"overview.html":{}}}],["described",{"_index":402,"title":{},"body":{"controllers/HealthController.html":{}}}],["description",{"_index":206,"title":{},"body":{"classes/Cat.html":{},"classes/CreateCatDto.html":{},"classes/CreateUserDto.html":{},"classes/GetCatResponseDto.html":{},"classes/GetUserResponseDto.html":{},"classes/UpdateCatDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"index.html":{}}}],["development",{"_index":558,"title":{},"body":{"index.html":{}}}],["disable",{"_index":17,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"classes/Cat.html":{},"classes/CatRepository.html":{},"controllers/CatsController.html":{},"controllers/HealthController.html":{},"classes/User.html":{},"classes/UserRepository.html":{},"controllers/UsersController.html":{}}}],["dns",{"_index":388,"title":{},"body":{"controllers/HealthController.html":{}}}],["dnshealthindicator",{"_index":382,"title":{},"body":{"controllers/HealthController.html":{}}}],["docs",{"_index":392,"title":{},"body":{"controllers/HealthController.html":{}}}],["documentation",{"_index":473,"title":{},"body":{"coverage.html":{}}}],["dto",{"_index":262,"title":{},"body":{"controllers/CatsController.html":{},"controllers/UsersController.html":{}}}],["e2e",{"_index":567,"title":{},"body":{"index.html":{}}}],["eager",{"_index":269,"title":{},"body":{"controllers/CatsController.html":{},"controllers/UsersController.html":{}}}],["efficient",{"_index":549,"title":{},"body":{"index.html":{}}}],["entities",{"_index":119,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["entity",{"_index":196,"title":{},"body":{"classes/Cat.html":{},"classes/User.html":{}}}],["entityrepository",{"_index":232,"title":{},"body":{"classes/CatRepository.html":{},"classes/UserRepository.html":{}}}],["entityrepository(cat",{"_index":235,"title":{},"body":{"classes/CatRepository.html":{}}}],["entityrepository(user",{"_index":446,"title":{},"body":{"classes/UserRepository.html":{}}}],["eslint",{"_index":16,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"classes/Cat.html":{},"classes/CatRepository.html":{},"controllers/CatsController.html":{},"controllers/HealthController.html":{},"classes/User.html":{},"classes/UserRepository.html":{},"controllers/UsersController.html":{}}}],["eslint/no",{"_index":74,"title":{},"body":{"modules/AppModule.html":{},"classes/CatRepository.html":{},"classes/UserRepository.html":{}}}],["example",{"_index":156,"title":{},"body":{"classes/Cat.html":{},"classes/CreateCatDto.html":{},"classes/CreateUserDto.html":{},"classes/GetCatResponseDto.html":{},"classes/GetUserResponseDto.html":{},"classes/UpdateCatDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{}}}],["exclude",{"_index":149,"title":{},"body":{"classes/Cat.html":{},"controllers/CatsController.html":{},"classes/CreateCatDto.html":{},"classes/CreateUserDto.html":{},"classes/GetCatResponseDto.html":{},"classes/GetUserResponseDto.html":{},"classes/UpdateCatDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{}}}],["export",{"_index":29,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Cat.html":{},"classes/CatRepository.html":{},"controllers/CatsController.html":{},"modules/CatsModule.html":{},"injectables/CatsService.html":{},"classes/CreateCatDto.html":{},"classes/CreateUserDto.html":{},"modules/CronModule.html":{},"injectables/CronService.html":{},"classes/GetCatResponseDto.html":{},"classes/GetUserResponseDto.html":{},"controllers/HealthController.html":{},"classes/UpdateCatDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"classes/UserRepository.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["exports",{"_index":48,"title":{},"body":{"modules/AppModule.html":{},"modules/CatsModule.html":{},"modules/CronModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["express",{"_index":506,"title":{},"body":{"dependencies.html":{}}}],["extends",{"_index":224,"title":{},"body":{"classes/CatRepository.html":{},"injectables/CatsService.html":{},"classes/UserRepository.html":{},"injectables/UsersService.html":{}}}],["false",{"_index":185,"title":{},"body":{"classes/Cat.html":{},"classes/User.html":{},"controllers/UsersController.html":{}}}],["false})@type(undefined",{"_index":187,"title":{},"body":{"classes/Cat.html":{},"classes/User.html":{}}}],["file",{"_index":5,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Cat.html":{},"classes/CatRepository.html":{},"controllers/CatsController.html":{},"modules/CatsModule.html":{},"injectables/CatsService.html":{},"classes/CreateCatDto.html":{},"classes/CreateUserDto.html":{},"modules/CronModule.html":{},"injectables/CronService.html":{},"classes/GetCatResponseDto.html":{},"classes/GetUserResponseDto.html":{},"controllers/HealthController.html":{},"classes/UpdateCatDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"classes/UserRepository.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["first",{"_index":405,"title":{},"body":{"controllers/HealthController.html":{}}}],["form",{"_index":231,"title":{},"body":{"classes/CatRepository.html":{},"injectables/CatsService.html":{},"classes/UserRepository.html":{},"injectables/UsersService.html":{}}}],["framework",{"_index":547,"title":{},"body":{"index.html":{}}}],["function",{"_index":407,"title":{},"body":{"controllers/HealthController.html":{},"coverage.html":{}}}],["functions",{"_index":537,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["get()@healthcheck",{"_index":377,"title":{},"body":{"controllers/HealthController.html":{}}}],["getcatresponsedto",{"_index":256,"title":{"classes/GetCatResponseDto.html":{}},"body":{"controllers/CatsController.html":{},"classes/CreateCatDto.html":{},"classes/GetCatResponseDto.html":{},"classes/UpdateCatDto.html":{},"coverage.html":{}}}],["gethello",{"_index":9,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["getmanager",{"_index":233,"title":{},"body":{"classes/CatRepository.html":{},"injectables/CatsService.html":{},"classes/UserRepository.html":{}}}],["getmanager().query('delete",{"_index":238,"title":{},"body":{"classes/CatRepository.html":{},"classes/UserRepository.html":{}}}],["getting",{"_index":543,"title":{"index.html":{}},"body":{}}],["getuserresponsedto",{"_index":321,"title":{"classes/GetUserResponseDto.html":{}},"body":{"classes/CreateUserDto.html":{},"classes/GetUserResponseDto.html":{},"classes/UpdateUserDto.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["grow",{"_index":574,"title":{},"body":{"index.html":{}}}],["handlecron",{"_index":331,"title":{},"body":{"injectables/CronService.html":{}}}],["handleinterval",{"_index":332,"title":{},"body":{"injectables/CronService.html":{}}}],["handletimeout",{"_index":333,"title":{},"body":{"injectables/CronService.html":{}}}],["hapi/joi",{"_index":91,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["health",{"_index":128,"title":{},"body":{"modules/AppModule.html":{},"controllers/HealthController.html":{}}}],["healthcheck",{"_index":383,"title":{},"body":{"controllers/HealthController.html":{}}}],["healthcheckservice",{"_index":384,"title":{},"body":{"controllers/HealthController.html":{}}}],["healthcontroller",{"_index":59,"title":{"controllers/HealthController.html":{}},"body":{"modules/AppModule.html":{},"controllers/HealthController.html":{},"coverage.html":{}}}],["hello",{"_index":140,"title":{},"body":{"injectables/AppService.html":{}}}],["helmet",{"_index":518,"title":{},"body":{"dependencies.html":{}}}],["here",{"_index":584,"title":{},"body":{"index.html":{}}}],["https://docs.nestjs.com",{"_index":393,"title":{},"body":{"controllers/HealthController.html":{}}}],["https://nestjs.com",{"_index":591,"title":{},"body":{"index.html":{}}}],["id",{"_index":150,"title":{},"body":{"classes/Cat.html":{},"classes/CreateCatDto.html":{},"classes/CreateUserDto.html":{},"classes/GetCatResponseDto.html":{},"classes/GetUserResponseDto.html":{},"classes/UpdateCatDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{}}}],["identifier",{"_index":474,"title":{},"body":{"coverage.html":{}}}],["implements",{"_index":130,"title":{},"body":{"modules/AppModule.html":{},"controllers/CatsController.html":{},"controllers/HealthController.html":{},"controllers/UsersController.html":{}}}],["import",{"_index":21,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Cat.html":{},"classes/CatRepository.html":{},"controllers/CatsController.html":{},"modules/CatsModule.html":{},"injectables/CatsService.html":{},"classes/CreateCatDto.html":{},"classes/CreateUserDto.html":{},"modules/CronModule.html":{},"injectables/CronService.html":{},"classes/GetCatResponseDto.html":{},"classes/GetUserResponseDto.html":{},"controllers/HealthController.html":{},"classes/UpdateCatDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"classes/UserRepository.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["import/no",{"_index":202,"title":{},"body":{"classes/Cat.html":{},"classes/User.html":{}}}],["imports",{"_index":60,"title":{},"body":{"modules/AppModule.html":{},"modules/CatsModule.html":{},"modules/UsersModule.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/Cat.html":{},"classes/CatRepository.html":{},"controllers/CatsController.html":{},"injectables/CatsService.html":{},"classes/CreateCatDto.html":{},"classes/CreateUserDto.html":{},"injectables/CronService.html":{},"classes/GetCatResponseDto.html":{},"classes/GetUserResponseDto.html":{},"controllers/HealthController.html":{},"classes/UpdateCatDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"classes/UserRepository.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Cat.html":{},"classes/CatRepository.html":{},"controllers/CatsController.html":{},"modules/CatsModule.html":{},"injectables/CatsService.html":{},"classes/CreateCatDto.html":{},"classes/CreateUserDto.html":{},"modules/CronModule.html":{},"injectables/CronService.html":{},"classes/GetCatResponseDto.html":{},"classes/GetUserResponseDto.html":{},"controllers/HealthController.html":{},"classes/UpdateCatDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"classes/UserRepository.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["initialized",{"_index":132,"title":{},"body":{"modules/AppModule.html":{},"controllers/HealthController.html":{}}}],["injectable",{"_index":136,"title":{"injectables/AppService.html":{},"injectables/CatsService.html":{},"injectables/CronService.html":{},"injectables/UsersService.html":{}},"body":{"injectables/AppService.html":{},"injectables/CatsService.html":{},"injectables/CronService.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["injectables",{"_index":137,"title":{},"body":{"injectables/AppService.html":{},"injectables/CatsService.html":{},"injectables/CronService.html":{},"injectables/UsersService.html":{},"overview.html":{}}}],["injectrepository",{"_index":294,"title":{},"body":{"injectables/CatsService.html":{},"injectables/UsersService.html":{}}}],["injectrepository(catrepository",{"_index":292,"title":{},"body":{"injectables/CatsService.html":{}}}],["injectrepository(userrepository",{"_index":469,"title":{},"body":{"injectables/UsersService.html":{}}}],["inner",{"_index":220,"title":{},"body":{"classes/Cat.html":{},"classes/User.html":{}}}],["installation",{"_index":555,"title":{},"body":{"index.html":{}}}],["installrunning",{"_index":557,"title":{},"body":{"index.html":{}}}],["interval",{"_index":346,"title":{},"body":{"injectables/CronService.html":{}}}],["interval(100000",{"_index":336,"title":{},"body":{"injectables/CronService.html":{}}}],["isglobal",{"_index":101,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["isint",{"_index":308,"title":{},"body":{"classes/CreateCatDto.html":{},"classes/GetCatResponseDto.html":{},"classes/UpdateCatDto.html":{}}}],["isnotempty",{"_index":311,"title":{},"body":{"classes/CreateCatDto.html":{},"classes/CreateUserDto.html":{},"classes/GetCatResponseDto.html":{},"classes/GetUserResponseDto.html":{},"classes/UpdateCatDto.html":{},"classes/UpdateUserDto.html":{}}}],["isoptional",{"_index":313,"title":{},"body":{"classes/CreateCatDto.html":{},"classes/CreateUserDto.html":{},"classes/GetCatResponseDto.html":{},"classes/GetUserResponseDto.html":{},"classes/UpdateCatDto.html":{},"classes/UpdateUserDto.html":{}}}],["ispositive",{"_index":312,"title":{},"body":{"classes/CreateCatDto.html":{},"classes/GetCatResponseDto.html":{},"classes/UpdateCatDto.html":{}}}],["isstring",{"_index":309,"title":{},"body":{"classes/CreateCatDto.html":{},"classes/CreateUserDto.html":{},"classes/GetCatResponseDto.html":{},"classes/GetUserResponseDto.html":{},"classes/UpdateCatDto.html":{},"classes/UpdateUserDto.html":{}}}],["joi",{"_index":90,"title":{},"body":{"modules/AppModule.html":{}}}],["joi.number().default(3000",{"_index":109,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["joi.object",{"_index":107,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["joi.string",{"_index":111,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["join",{"_index":219,"title":{},"body":{"classes/Cat.html":{},"controllers/CatsController.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"index.html":{}}}],["kamil",{"_index":588,"title":{},"body":{"index.html":{}}}],["kitty",{"_index":209,"title":{},"body":{"classes/Cat.html":{},"classes/CreateCatDto.html":{},"classes/CreateUserDto.html":{},"classes/GetCatResponseDto.html":{},"classes/GetUserResponseDto.html":{},"classes/UpdateCatDto.html":{},"classes/UpdateUserDto.html":{}}}],["kitty'})@column({name",{"_index":174,"title":{},"body":{"classes/Cat.html":{}}}],["kitty'})@isstring()@isnotempty()@minlength(2",{"_index":303,"title":{},"body":{"classes/CreateCatDto.html":{}}}],["kitty'})@isstring()@isnotempty()@minlength(2)@isoptional",{"_index":422,"title":{},"body":{"classes/UpdateCatDto.html":{},"classes/UpdateUserDto.html":{}}}],["lazy",{"_index":184,"title":{},"body":{"classes/Cat.html":{},"classes/User.html":{}}}],["left",{"_index":218,"title":{},"body":{"classes/Cat.html":{},"classes/User.html":{}}}],["legend",{"_index":44,"title":{},"body":{"modules/AppModule.html":{},"modules/CatsModule.html":{},"modules/CronModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["length",{"_index":176,"title":{},"body":{"classes/Cat.html":{},"classes/User.html":{}}}],["license",{"_index":594,"title":{},"body":{"index.html":{}}}],["licensed",{"_index":571,"title":{},"body":{"index.html":{}}}],["limit",{"_index":516,"title":{},"body":{"dependencies.html":{}}}],["line",{"_index":201,"title":{},"body":{"classes/Cat.html":{},"classes/CatRepository.html":{},"controllers/HealthController.html":{},"classes/User.html":{},"classes/UserRepository.html":{}}}],["local",{"_index":521,"title":{},"body":{"dependencies.html":{}}}],["logger",{"_index":330,"title":{},"body":{"injectables/CronService.html":{}}}],["logger(cronservice.name",{"_index":343,"title":{},"body":{"injectables/CronService.html":{}}}],["logging",{"_index":125,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["maine",{"_index":160,"title":{},"body":{"classes/Cat.html":{},"classes/CreateCatDto.html":{},"classes/GetCatResponseDto.html":{},"classes/UpdateCatDto.html":{}}}],["manytoone",{"_index":198,"title":{},"body":{"classes/Cat.html":{}}}],["manytoone((type",{"_index":212,"title":{},"body":{"classes/Cat.html":{}}}],["manytoone(undefined",{"_index":183,"title":{},"body":{"classes/Cat.html":{}}}],["matching",{"_index":38,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Cat.html":{},"classes/CatRepository.html":{},"controllers/CatsController.html":{},"modules/CatsModule.html":{},"injectables/CatsService.html":{},"classes/CreateCatDto.html":{},"classes/CreateUserDto.html":{},"modules/CronModule.html":{},"injectables/CronService.html":{},"classes/GetCatResponseDto.html":{},"classes/GetUserResponseDto.html":{},"controllers/HealthController.html":{},"classes/UpdateCatDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"classes/UserRepository.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["member",{"_index":78,"title":{},"body":{"modules/AppModule.html":{}}}],["metadata",{"_index":524,"title":{},"body":{"dependencies.html":{}}}],["methods",{"_index":8,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/CatRepository.html":{},"controllers/CatsController.html":{},"injectables/CatsService.html":{},"injectables/CronService.html":{},"controllers/HealthController.html":{},"classes/UserRepository.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["minlength",{"_index":310,"title":{},"body":{"classes/CreateCatDto.html":{},"classes/CreateUserDto.html":{},"classes/GetCatResponseDto.html":{},"classes/GetUserResponseDto.html":{},"classes/UpdateCatDto.html":{},"classes/UpdateUserDto.html":{}}}],["minlength(2",{"_index":315,"title":{},"body":{"classes/CreateCatDto.html":{},"classes/CreateUserDto.html":{},"classes/GetCatResponseDto.html":{},"classes/GetUserResponseDto.html":{},"classes/UpdateCatDto.html":{},"classes/UpdateUserDto.html":{}}}],["miscellaneous",{"_index":536,"title":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":570,"title":{},"body":{"index.html":{}}}],["mode",{"_index":562,"title":{},"body":{"index.html":{}}}],["model",{"_index":261,"title":{},"body":{"controllers/CatsController.html":{},"controllers/UsersController.html":{}}}],["module",{"_index":40,"title":{"modules/AppModule.html":{},"modules/CatsModule.html":{},"modules/CronModule.html":{},"modules/UsersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CatsModule.html":{},"modules/CronModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["modules",{"_index":42,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/CatsModule.html":{},"modules/CronModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["more",{"_index":583,"title":{},"body":{"index.html":{}}}],["myśliwiec",{"_index":589,"title":{},"body":{"index.html":{}}}],["name",{"_index":65,"title":{},"body":{"modules/AppModule.html":{},"classes/Cat.html":{},"injectables/CatsService.html":{},"classes/CreateCatDto.html":{},"classes/CreateUserDto.html":{},"classes/GetCatResponseDto.html":{},"classes/GetUserResponseDto.html":{},"controllers/HealthController.html":{},"classes/UpdateCatDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"injectables/UsersService.html":{},"miscellaneous/functions.html":{}}}],["name'})@column({name",{"_index":432,"title":{},"body":{"classes/User.html":{}}}],["name'})@isstring()@isnotempty()@minlength(2",{"_index":318,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["name_length",{"_index":151,"title":{},"body":{"classes/Cat.html":{},"classes/User.html":{}}}],["nest",{"_index":410,"title":{},"body":{"controllers/HealthController.html":{},"index.html":{}}}],["nestframework",{"_index":593,"title":{},"body":{"index.html":{}}}],["nestjs/common",{"_index":22,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/CatsController.html":{},"modules/CatsModule.html":{},"injectables/CatsService.html":{},"modules/CronModule.html":{},"injectables/CronService.html":{},"controllers/HealthController.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["nestjs/config",{"_index":81,"title":{},"body":{"modules/AppModule.html":{},"controllers/HealthController.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":499,"title":{},"body":{"dependencies.html":{}}}],["nestjs/mapped",{"_index":500,"title":{},"body":{"dependencies.html":{}}}],["nestjs/passport",{"_index":503,"title":{},"body":{"dependencies.html":{}}}],["nestjs/platform",{"_index":505,"title":{},"body":{"dependencies.html":{}}}],["nestjs/schedule",{"_index":83,"title":{},"body":{"modules/AppModule.html":{},"injectables/CronService.html":{},"dependencies.html":{}}}],["nestjs/swagger",{"_index":24,"title":{},"body":{"controllers/AppController.html":{},"classes/Cat.html":{},"controllers/CatsController.html":{},"classes/CreateCatDto.html":{},"classes/CreateUserDto.html":{},"classes/GetCatResponseDto.html":{},"classes/GetUserResponseDto.html":{},"controllers/HealthController.html":{},"classes/UpdateCatDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"dependencies.html":{}}}],["nestjs/terminus",{"_index":85,"title":{},"body":{"modules/AppModule.html":{},"controllers/HealthController.html":{},"dependencies.html":{}}}],["nestjs/typeorm",{"_index":87,"title":{},"body":{"modules/AppModule.html":{},"modules/CatsModule.html":{},"injectables/CatsService.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["nestjsx/crud",{"_index":251,"title":{},"body":{"controllers/CatsController.html":{},"injectables/CatsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["new",{"_index":342,"title":{},"body":{"injectables/CronService.html":{},"coverage.html":{}}}],["next",{"_index":385,"title":{},"body":{"controllers/HealthController.html":{}}}],["node.js",{"_index":546,"title":{},"body":{"index.html":{}}}],["node_env",{"_index":110,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["npm",{"_index":556,"title":{},"body":{"index.html":{}}}],["nullable",{"_index":186,"title":{},"body":{"classes/Cat.html":{},"classes/User.html":{}}}],["number",{"_index":154,"title":{},"body":{"classes/Cat.html":{},"classes/CreateCatDto.html":{},"classes/CreateUserDto.html":{},"injectables/CronService.html":{},"classes/GetCatResponseDto.html":{},"classes/GetUserResponseDto.html":{},"classes/UpdateCatDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{}}}],["object",{"_index":603,"title":{},"body":{"miscellaneous/variables.html":{}}}],["onapplicationshutdown",{"_index":61,"title":{},"body":{"modules/AppModule.html":{},"controllers/HealthController.html":{}}}],["onapplicationshutdown(signal",{"_index":62,"title":{},"body":{"modules/AppModule.html":{},"controllers/HealthController.html":{}}}],["once",{"_index":357,"title":{},"body":{"injectables/CronService.html":{}}}],["onetomany",{"_index":437,"title":{},"body":{"classes/User.html":{}}}],["onetomany((type",{"_index":440,"title":{},"body":{"classes/User.html":{}}}],["onetomany(undefined",{"_index":426,"title":{},"body":{"classes/User.html":{}}}],["onmoduledestroy",{"_index":399,"title":{},"body":{"controllers/HealthController.html":{}}}],["onmoduleinit",{"_index":71,"title":{},"body":{"modules/AppModule.html":{},"controllers/HealthController.html":{}}}],["open",{"_index":572,"title":{},"body":{"index.html":{}}}],["optional",{"_index":67,"title":{},"body":{"modules/AppModule.html":{},"injectables/CatsService.html":{},"controllers/HealthController.html":{},"classes/UpdateCatDto.html":{},"classes/UpdateUserDto.html":{},"injectables/UsersService.html":{},"miscellaneous/functions.html":{}}}],["out",{"_index":57,"title":{},"body":{"modules/AppModule.html":{},"modules/CatsModule.html":{},"modules/CronModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["overview",{"_index":598,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["owner",{"_index":190,"title":{},"body":{"classes/Cat.html":{},"classes/CreateCatDto.html":{},"classes/GetCatResponseDto.html":{},"classes/UpdateCatDto.html":{}}}],["package",{"_index":495,"title":{"dependencies.html":{}},"body":{}}],["parameter",{"_index":406,"title":{},"body":{"controllers/HealthController.html":{}}}],["parameters",{"_index":64,"title":{},"body":{"modules/AppModule.html":{},"injectables/CatsService.html":{},"controllers/HealthController.html":{},"injectables/UsersService.html":{},"miscellaneous/functions.html":{}}}],["passport",{"_index":520,"title":{},"body":{"dependencies.html":{}}}],["path",{"_index":32,"title":{},"body":{"controllers/AppController.html":{},"controllers/CatsController.html":{},"controllers/UsersController.html":{}}}],["please",{"_index":581,"title":{},"body":{"index.html":{}}}],["port",{"_index":108,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["post",{"_index":247,"title":{},"body":{"controllers/CatsController.html":{},"controllers/UsersController.html":{}}}],["post('/clear",{"_index":274,"title":{},"body":{"controllers/CatsController.html":{},"controllers/UsersController.html":{}}}],["prefix",{"_index":375,"title":{},"body":{"controllers/HealthController.html":{}}}],["primarycolumn",{"_index":199,"title":{},"body":{"classes/Cat.html":{}}}],["primarygeneratedcolumn",{"_index":197,"title":{},"body":{"classes/Cat.html":{},"classes/User.html":{}}}],["private",{"_index":329,"title":{},"body":{"injectables/CronService.html":{},"controllers/HealthController.html":{}}}],["production",{"_index":114,"title":{},"body":{"modules/AppModule.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["progressive",{"_index":545,"title":{},"body":{"index.html":{}}}],["project",{"_index":573,"title":{},"body":{"index.html":{}}}],["promise",{"_index":217,"title":{},"body":{"classes/Cat.html":{},"controllers/HealthController.html":{},"classes/User.html":{}}}],["properties",{"_index":144,"title":{},"body":{"classes/Cat.html":{},"injectables/CatsService.html":{},"classes/CreateCatDto.html":{},"classes/CreateUserDto.html":{},"injectables/CronService.html":{},"classes/GetCatResponseDto.html":{},"classes/GetUserResponseDto.html":{},"classes/UpdateCatDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"injectables/UsersService.html":{}}}],["providers",{"_index":47,"title":{},"body":{"modules/AppModule.html":{},"modules/CatsModule.html":{},"modules/CronModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["provision",{"_index":116,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["public",{"_index":205,"title":{},"body":{"classes/Cat.html":{},"injectables/CatsService.html":{},"injectables/CronService.html":{},"classes/User.html":{},"injectables/UsersService.html":{}}}],["query",{"_index":267,"title":{},"body":{"controllers/CatsController.html":{},"controllers/UsersController.html":{}}}],["rate",{"_index":515,"title":{},"body":{"dependencies.html":{}}}],["read",{"_index":582,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":34,"title":{},"body":{"controllers/AppController.html":{},"classes/Cat.html":{},"classes/CreateCatDto.html":{},"classes/CreateUserDto.html":{},"injectables/CronService.html":{},"classes/GetCatResponseDto.html":{},"classes/GetUserResponseDto.html":{},"classes/UpdateCatDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{}}}],["receives",{"_index":395,"title":{},"body":{"controllers/HealthController.html":{}}}],["records",{"_index":230,"title":{},"body":{"classes/CatRepository.html":{},"injectables/CatsService.html":{},"classes/UserRepository.html":{},"injectables/UsersService.html":{}}}],["reflect",{"_index":523,"title":{},"body":{"dependencies.html":{}}}],["registered",{"_index":398,"title":{},"body":{"controllers/HealthController.html":{}}}],["rejected",{"_index":414,"title":{},"body":{"controllers/HealthController.html":{}}}],["relation",{"_index":216,"title":{},"body":{"classes/Cat.html":{},"classes/User.html":{}}}],["relations",{"_index":189,"title":{},"body":{"classes/Cat.html":{},"classes/User.html":{}}}],["replace",{"_index":264,"title":{},"body":{"controllers/CatsController.html":{},"controllers/UsersController.html":{}}}],["repo",{"_index":287,"title":{},"body":{"injectables/CatsService.html":{},"injectables/UsersService.html":{}}}],["repository",{"_index":225,"title":{},"body":{"classes/CatRepository.html":{},"classes/UserRepository.html":{},"index.html":{}}}],["request",{"_index":512,"title":{},"body":{"dependencies.html":{}}}],["required",{"_index":112,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["reset",{"_index":56,"title":{},"body":{"modules/AppModule.html":{},"modules/CatsModule.html":{},"modules/CronModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["resolved",{"_index":413,"title":{},"body":{"controllers/HealthController.html":{}}}],["result",{"_index":37,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Cat.html":{},"classes/CatRepository.html":{},"controllers/CatsController.html":{},"modules/CatsModule.html":{},"injectables/CatsService.html":{},"classes/CreateCatDto.html":{},"classes/CreateUserDto.html":{},"modules/CronModule.html":{},"injectables/CronService.html":{},"classes/GetCatResponseDto.html":{},"classes/GetUserResponseDto.html":{},"controllers/HealthController.html":{},"classes/UpdateCatDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"classes/UserRepository.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["results",{"_index":39,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Cat.html":{},"classes/CatRepository.html":{},"controllers/CatsController.html":{},"modules/CatsModule.html":{},"injectables/CatsService.html":{},"classes/CreateCatDto.html":{},"classes/CreateUserDto.html":{},"modules/CronModule.html":{},"injectables/CronService.html":{},"classes/GetCatResponseDto.html":{},"classes/GetUserResponseDto.html":{},"controllers/HealthController.html":{},"classes/UpdateCatDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"classes/UserRepository.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":35,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/CatRepository.html":{},"controllers/CatsController.html":{},"injectables/CatsService.html":{},"controllers/HealthController.html":{},"classes/UserRepository.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["returns",{"_index":14,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/CatRepository.html":{},"controllers/CatsController.html":{},"injectables/CatsService.html":{},"injectables/CronService.html":{},"controllers/HealthController.html":{},"classes/UserRepository.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["rimraf",{"_index":526,"title":{},"body":{"dependencies.html":{}}}],["run",{"_index":559,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":528,"title":{},"body":{"dependencies.html":{}}}],["scalable",{"_index":550,"title":{},"body":{"index.html":{}}}],["schedulemodule",{"_index":82,"title":{},"body":{"modules/AppModule.html":{}}}],["schedulemodule.forroot",{"_index":127,"title":{},"body":{"modules/AppModule.html":{}}}],["second",{"_index":351,"title":{},"body":{"injectables/CronService.html":{}}}],["seconds",{"_index":356,"title":{},"body":{"injectables/CronService.html":{}}}],["sequence",{"_index":401,"title":{},"body":{"controllers/HealthController.html":{}}}],["serialize",{"_index":266,"title":{},"body":{"controllers/CatsController.html":{},"controllers/UsersController.html":{}}}],["server",{"_index":551,"title":{},"body":{"index.html":{}}}],["service",{"_index":272,"title":{},"body":{"controllers/CatsController.html":{},"controllers/UsersController.html":{}}}],["sets",{"_index":215,"title":{},"body":{"classes/Cat.html":{},"classes/User.html":{}}}],["setupapp",{"_index":490,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["setupapp(app",{"_index":541,"title":{},"body":{"miscellaneous/functions.html":{}}}],["shutdown",{"_index":135,"title":{},"body":{"modules/AppModule.html":{},"controllers/HealthController.html":{}}}],["side",{"_index":552,"title":{},"body":{"index.html":{}}}],["signal",{"_index":68,"title":{},"body":{"modules/AppModule.html":{},"controllers/HealthController.html":{}}}],["source",{"_index":4,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Cat.html":{},"classes/CatRepository.html":{},"controllers/CatsController.html":{},"modules/CatsModule.html":{},"injectables/CatsService.html":{},"classes/CreateCatDto.html":{},"classes/CreateUserDto.html":{},"modules/CronModule.html":{},"injectables/CronService.html":{},"classes/GetCatResponseDto.html":{},"classes/GetUserResponseDto.html":{},"controllers/HealthController.html":{},"classes/UpdateCatDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"classes/UserRepository.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"index.html":{}}}],["sponsors",{"_index":576,"title":{},"body":{"index.html":{}}}],["sqlite",{"_index":121,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["sqlite3",{"_index":530,"title":{},"body":{"dependencies.html":{}}}],["src/.../app.module.ts",{"_index":602,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../main.ts",{"_index":538,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/app.controller.ts",{"_index":6,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app.controller.ts:15",{"_index":13,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.module.ts",{"_index":58,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app.module.ts:61",{"_index":72,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.module.ts:65",{"_index":63,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.service.ts",{"_index":138,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["src/app.service.ts:5",{"_index":139,"title":{},"body":{"injectables/AppService.html":{}}}],["src/cats/cats.controller.ts",{"_index":241,"title":{},"body":{"controllers/CatsController.html":{},"coverage.html":{}}}],["src/cats/cats.controller.ts:45",{"_index":246,"title":{},"body":{"controllers/CatsController.html":{}}}],["src/cats/cats.module.ts",{"_index":279,"title":{},"body":{"modules/CatsModule.html":{}}}],["src/cats/cats.service.ts",{"_index":285,"title":{},"body":{"injectables/CatsService.html":{},"coverage.html":{}}}],["src/cats/cats.service.ts:11",{"_index":290,"title":{},"body":{"injectables/CatsService.html":{}}}],["src/cats/cats.service.ts:12",{"_index":293,"title":{},"body":{"injectables/CatsService.html":{}}}],["src/cats/cats.service.ts:19",{"_index":291,"title":{},"body":{"injectables/CatsService.html":{}}}],["src/cats/datum/cat.dto.ts",{"_index":298,"title":{},"body":{"classes/CreateCatDto.html":{},"classes/GetCatResponseDto.html":{},"classes/UpdateCatDto.html":{},"coverage.html":{}}}],["src/cats/datum/cat.dto.ts:19",{"_index":304,"title":{},"body":{"classes/CreateCatDto.html":{}}}],["src/cats/datum/cat.dto.ts:24",{"_index":306,"title":{},"body":{"classes/CreateCatDto.html":{}}}],["src/cats/datum/cat.dto.ts:30",{"_index":300,"title":{},"body":{"classes/CreateCatDto.html":{}}}],["src/cats/datum/cat.dto.ts:35",{"_index":302,"title":{},"body":{"classes/CreateCatDto.html":{}}}],["src/cats/datum/cat.dto.ts:44",{"_index":423,"title":{},"body":{"classes/UpdateCatDto.html":{}}}],["src/cats/datum/cat.dto.ts:51",{"_index":419,"title":{},"body":{"classes/UpdateCatDto.html":{}}}],["src/cats/datum/cat.dto.ts:57",{"_index":421,"title":{},"body":{"classes/UpdateCatDto.html":{}}}],["src/cats/datum/cat.dto.ts:62",{"_index":365,"title":{},"body":{"classes/GetCatResponseDto.html":{}}}],["src/cats/datum/cat.dto.ts:65",{"_index":368,"title":{},"body":{"classes/GetCatResponseDto.html":{}}}],["src/cats/datum/cat.dto.ts:68",{"_index":366,"title":{},"body":{"classes/GetCatResponseDto.html":{}}}],["src/cats/datum/cat.dto.ts:71",{"_index":359,"title":{},"body":{"classes/GetCatResponseDto.html":{}}}],["src/cats/datum/cat.dto.ts:74",{"_index":360,"title":{},"body":{"classes/GetCatResponseDto.html":{}}}],["src/cats/datum/cat.dto.ts:78",{"_index":362,"title":{},"body":{"classes/GetCatResponseDto.html":{}}}],["src/cats/datum/cat.dto.ts:82",{"_index":367,"title":{},"body":{"classes/GetCatResponseDto.html":{}}}],["src/cats/datum/cat.dto.ts:86",{"_index":363,"title":{},"body":{"classes/GetCatResponseDto.html":{}}}],["src/cats/datum/cat.entity.ts",{"_index":143,"title":{},"body":{"classes/Cat.html":{},"coverage.html":{}}}],["src/cats/datum/cat.entity.ts:20",{"_index":180,"title":{},"body":{"classes/Cat.html":{}}}],["src/cats/datum/cat.entity.ts:22",{"_index":170,"title":{},"body":{"classes/Cat.html":{}}}],["src/cats/datum/cat.entity.ts:26",{"_index":173,"title":{},"body":{"classes/Cat.html":{}}}],["src/cats/datum/cat.entity.ts:31",{"_index":192,"title":{},"body":{"classes/Cat.html":{}}}],["src/cats/datum/cat.entity.ts:35",{"_index":178,"title":{},"body":{"classes/Cat.html":{}}}],["src/cats/datum/cat.entity.ts:39",{"_index":159,"title":{},"body":{"classes/Cat.html":{}}}],["src/cats/datum/cat.entity.ts:43",{"_index":163,"title":{},"body":{"classes/Cat.html":{}}}],["src/cats/datum/cat.entity.ts:46",{"_index":165,"title":{},"body":{"classes/Cat.html":{}}}],["src/cats/datum/cat.entity.ts:49",{"_index":182,"title":{},"body":{"classes/Cat.html":{}}}],["src/cats/datum/cat.entity.ts:52",{"_index":167,"title":{},"body":{"classes/Cat.html":{}}}],["src/cats/datum/cat.entity.ts:63",{"_index":188,"title":{},"body":{"classes/Cat.html":{}}}],["src/cats/datum/cat.repository.ts",{"_index":223,"title":{},"body":{"classes/CatRepository.html":{},"coverage.html":{}}}],["src/cats/datum/cat.repository.ts:10",{"_index":228,"title":{},"body":{"classes/CatRepository.html":{}}}],["src/cron/cron.module",{"_index":88,"title":{},"body":{"modules/AppModule.html":{}}}],["src/cron/cron.module.ts",{"_index":325,"title":{},"body":{"modules/CronModule.html":{}}}],["src/cron/cron.service",{"_index":326,"title":{},"body":{"modules/CronModule.html":{}}}],["src/cron/cron.service.ts",{"_index":327,"title":{},"body":{"injectables/CronService.html":{},"coverage.html":{}}}],["src/cron/cron.service.ts:11",{"_index":335,"title":{},"body":{"injectables/CronService.html":{}}}],["src/cron/cron.service.ts:19",{"_index":337,"title":{},"body":{"injectables/CronService.html":{}}}],["src/cron/cron.service.ts:24",{"_index":339,"title":{},"body":{"injectables/CronService.html":{}}}],["src/cron/cron.service.ts:6",{"_index":341,"title":{},"body":{"injectables/CronService.html":{}}}],["src/cron/cron.service.ts:8",{"_index":344,"title":{},"body":{"injectables/CronService.html":{}}}],["src/health/health.controller",{"_index":89,"title":{},"body":{"modules/AppModule.html":{}}}],["src/health/health.controller.ts",{"_index":374,"title":{},"body":{"controllers/HealthController.html":{},"coverage.html":{}}}],["src/health/health.controller.ts:27",{"_index":378,"title":{},"body":{"controllers/HealthController.html":{}}}],["src/health/health.controller.ts:41",{"_index":380,"title":{},"body":{"controllers/HealthController.html":{}}}],["src/health/health.controller.ts:47",{"_index":379,"title":{},"body":{"controllers/HealthController.html":{}}}],["src/main.ts",{"_index":488,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/users/datum/user.dto.ts",{"_index":317,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/GetUserResponseDto.html":{},"classes/UpdateUserDto.html":{},"coverage.html":{}}}],["src/users/datum/user.dto.ts:17",{"_index":319,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["src/users/datum/user.dto.ts:26",{"_index":424,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["src/users/datum/user.dto.ts:31",{"_index":371,"title":{},"body":{"classes/GetUserResponseDto.html":{}}}],["src/users/datum/user.dto.ts:34",{"_index":372,"title":{},"body":{"classes/GetUserResponseDto.html":{}}}],["src/users/datum/user.dto.ts:38",{"_index":369,"title":{},"body":{"classes/GetUserResponseDto.html":{}}}],["src/users/datum/user.dto.ts:42",{"_index":373,"title":{},"body":{"classes/GetUserResponseDto.html":{}}}],["src/users/datum/user.dto.ts:46",{"_index":370,"title":{},"body":{"classes/GetUserResponseDto.html":{}}}],["src/users/datum/user.entity.ts",{"_index":425,"title":{},"body":{"classes/User.html":{},"coverage.html":{}}}],["src/users/datum/user.entity.ts:18",{"_index":435,"title":{},"body":{"classes/User.html":{}}}],["src/users/datum/user.entity.ts:20",{"_index":430,"title":{},"body":{"classes/User.html":{}}}],["src/users/datum/user.entity.ts:24",{"_index":431,"title":{},"body":{"classes/User.html":{}}}],["src/users/datum/user.entity.ts:28",{"_index":434,"title":{},"body":{"classes/User.html":{}}}],["src/users/datum/user.entity.ts:31",{"_index":428,"title":{},"body":{"classes/User.html":{}}}],["src/users/datum/user.entity.ts:34",{"_index":436,"title":{},"body":{"classes/User.html":{}}}],["src/users/datum/user.entity.ts:37",{"_index":429,"title":{},"body":{"classes/User.html":{}}}],["src/users/datum/user.entity.ts:48",{"_index":427,"title":{},"body":{"classes/User.html":{}}}],["src/users/datum/user.repository.ts",{"_index":443,"title":{},"body":{"classes/UserRepository.html":{},"coverage.html":{}}}],["src/users/datum/user.repository.ts:10",{"_index":444,"title":{},"body":{"classes/UserRepository.html":{}}}],["src/users/users.controller.ts",{"_index":448,"title":{},"body":{"controllers/UsersController.html":{},"coverage.html":{}}}],["src/users/users.controller.ts:45",{"_index":450,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.module.ts",{"_index":461,"title":{},"body":{"modules/UsersModule.html":{}}}],["src/users/users.service.ts",{"_index":466,"title":{},"body":{"injectables/UsersService.html":{},"coverage.html":{}}}],["src/users/users.service.ts:10",{"_index":470,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:17",{"_index":468,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:9",{"_index":467,"title":{},"body":{"injectables/UsersService.html":{}}}],["start",{"_index":560,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":563,"title":{},"body":{"index.html":{}}}],["start:prodtest",{"_index":564,"title":{},"body":{"index.html":{}}}],["started",{"_index":544,"title":{"index.html":{}},"body":{}}],["starter",{"_index":554,"title":{},"body":{"index.html":{}}}],["statements",{"_index":475,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":31,"title":{},"body":{"controllers/AppController.html":{},"classes/Cat.html":{},"controllers/CatsController.html":{},"injectables/CronService.html":{},"classes/User.html":{},"controllers/UsersController.html":{}}}],["stay",{"_index":585,"title":{},"body":{"index.html":{}}}],["string",{"_index":15,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Cat.html":{},"classes/CreateCatDto.html":{},"classes/CreateUserDto.html":{},"classes/GetCatResponseDto.html":{},"classes/GetUserResponseDto.html":{},"controllers/HealthController.html":{},"classes/UpdateCatDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{}}}],["summary",{"_index":273,"title":{},"body":{"controllers/CatsController.html":{},"controllers/UsersController.html":{}}}],["super(repo",{"_index":296,"title":{},"body":{"injectables/CatsService.html":{},"injectables/UsersService.html":{}}}],["support",{"_index":577,"title":{},"body":{"index.html":{},"modules.html":{}}}],["svg",{"_index":596,"title":{},"body":{"modules.html":{}}}],["swagger",{"_index":532,"title":{},"body":{"dependencies.html":{}}}],["synchronize",{"_index":124,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["table",{"_index":494,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":493,"title":{},"body":{"coverage.html":{}}}],["termination",{"_index":396,"title":{},"body":{"controllers/HealthController.html":{}}}],["terminusmodule",{"_index":84,"title":{},"body":{"modules/AppModule.html":{}}}],["test",{"_index":115,"title":{},"body":{"modules/AppModule.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["test:covsupport",{"_index":569,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":568,"title":{},"body":{"index.html":{}}}],["tests",{"_index":566,"title":{},"body":{"index.html":{}}}],["thanks",{"_index":575,"title":{},"body":{"index.html":{}}}],["this.appservice.gethello",{"_index":36,"title":{},"body":{"controllers/AppController.html":{}}}],["this.config.get('node_env",{"_index":416,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.dns.pingcheck('nestjs",{"_index":391,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.health.check",{"_index":390,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.logger.debug",{"_index":349,"title":{},"body":{"injectables/CronService.html":{}}}],["this.logger.debug('called",{"_index":354,"title":{},"body":{"injectables/CronService.html":{}}}],["this.repo.clearall",{"_index":297,"title":{},"body":{"injectables/CatsService.html":{},"injectables/UsersService.html":{}}}],["this.service.clear",{"_index":275,"title":{},"body":{"controllers/CatsController.html":{},"controllers/UsersController.html":{}}}],["timeout",{"_index":347,"title":{},"body":{"injectables/CronService.html":{}}}],["timeout(50000",{"_index":338,"title":{},"body":{"injectables/CronService.html":{}}}],["touch",{"_index":586,"title":{},"body":{"index.html":{}}}],["transformer",{"_index":194,"title":{},"body":{"classes/Cat.html":{},"classes/CreateCatDto.html":{},"classes/CreateUserDto.html":{},"classes/GetCatResponseDto.html":{},"classes/GetUserResponseDto.html":{},"classes/UpdateCatDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"dependencies.html":{}}}],["true",{"_index":102,"title":{},"body":{"modules/AppModule.html":{},"classes/Cat.html":{},"controllers/CatsController.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"miscellaneous/variables.html":{}}}],["twitter",{"_index":592,"title":{},"body":{"index.html":{}}}],["type",{"_index":66,"title":{},"body":{"modules/AppModule.html":{},"classes/Cat.html":{},"controllers/CatsController.html":{},"injectables/CatsService.html":{},"classes/CreateCatDto.html":{},"classes/CreateUserDto.html":{},"injectables/CronService.html":{},"classes/GetCatResponseDto.html":{},"classes/GetUserResponseDto.html":{},"controllers/HealthController.html":{},"classes/UpdateCatDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["type((t",{"_index":221,"title":{},"body":{"classes/Cat.html":{},"classes/User.html":{}}}],["typeorm",{"_index":200,"title":{},"body":{"classes/Cat.html":{},"classes/CatRepository.html":{},"injectables/CatsService.html":{},"classes/User.html":{},"classes/UserRepository.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["typeormcrudservice",{"_index":286,"title":{},"body":{"injectables/CatsService.html":{},"injectables/UsersService.html":{}}}],["typeormmodule",{"_index":86,"title":{},"body":{"modules/AppModule.html":{},"modules/CatsModule.html":{},"modules/UsersModule.html":{}}}],["typeormmodule.forfeature([catrepository",{"_index":284,"title":{},"body":{"modules/CatsModule.html":{}}}],["typeormmodule.forfeature([userrepository",{"_index":465,"title":{},"body":{"modules/UsersModule.html":{}}}],["typeormmodule.forroot(typeormmoduleoptions",{"_index":129,"title":{},"body":{"modules/AppModule.html":{}}}],["typeormmoduleoptions",{"_index":118,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["types",{"_index":501,"title":{},"body":{"dependencies.html":{}}}],["typescript",{"_index":73,"title":{},"body":{"modules/AppModule.html":{},"classes/CatRepository.html":{},"classes/UserRepository.html":{},"index.html":{}}}],["u",{"_index":213,"title":{},"body":{"classes/Cat.html":{}}}],["u.cats",{"_index":214,"title":{},"body":{"classes/Cat.html":{}}}],["ui",{"_index":533,"title":{},"body":{"dependencies.html":{}}}],["undefined",{"_index":177,"title":{},"body":{"classes/Cat.html":{},"classes/User.html":{}}}],["unique",{"_index":171,"title":{},"body":{"classes/Cat.html":{},"classes/User.html":{}}}],["unit",{"_index":565,"title":{},"body":{"index.html":{}}}],["unsafe",{"_index":75,"title":{},"body":{"modules/AppModule.html":{},"classes/CatRepository.html":{},"classes/UserRepository.html":{}}}],["until",{"_index":412,"title":{},"body":{"controllers/HealthController.html":{}}}],["update",{"_index":265,"title":{},"body":{"controllers/CatsController.html":{},"controllers/UsersController.html":{}}}],["updatecatdto",{"_index":255,"title":{"classes/UpdateCatDto.html":{}},"body":{"controllers/CatsController.html":{},"classes/CreateCatDto.html":{},"classes/GetCatResponseDto.html":{},"classes/UpdateCatDto.html":{},"coverage.html":{}}}],["updatedat",{"_index":152,"title":{},"body":{"classes/Cat.html":{},"classes/CreateCatDto.html":{},"classes/CreateUserDto.html":{},"classes/GetCatResponseDto.html":{},"classes/GetUserResponseDto.html":{},"classes/UpdateCatDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{}}}],["updatedatecolumn",{"_index":181,"title":{},"body":{"classes/Cat.html":{},"classes/User.html":{}}}],["updateuserdto",{"_index":320,"title":{"classes/UpdateUserDto.html":{}},"body":{"classes/CreateUserDto.html":{},"classes/GetUserResponseDto.html":{},"classes/UpdateUserDto.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["use",{"_index":18,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/CatsController.html":{},"controllers/HealthController.html":{},"controllers/UsersController.html":{}}}],["user",{"_index":97,"title":{"classes/User.html":{}},"body":{"modules/AppModule.html":{},"classes/Cat.html":{},"controllers/CatsController.html":{},"modules/CatsModule.html":{},"classes/CreateUserDto.html":{},"classes/GetUserResponseDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"classes/UserRepository.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["user'})@post('/clear",{"_index":449,"title":{},"body":{"controllers/UsersController.html":{}}}],["user.entity",{"_index":445,"title":{},"body":{"classes/UserRepository.html":{}}}],["user.exclude",{"_index":270,"title":{},"body":{"controllers/CatsController.html":{}}}],["user.name_length",{"_index":439,"title":{},"body":{"classes/User.html":{}}}],["user_name",{"_index":433,"title":{},"body":{"classes/User.html":{}}}],["userid",{"_index":153,"title":{},"body":{"classes/Cat.html":{},"classes/CreateCatDto.html":{},"classes/GetCatResponseDto.html":{},"classes/UpdateCatDto.html":{}}}],["userrepository",{"_index":280,"title":{"classes/UserRepository.html":{}},"body":{"modules/CatsModule.html":{},"classes/UserRepository.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["users",{"_index":438,"title":{},"body":{"classes/User.html":{},"classes/UserRepository.html":{},"controllers/UsersController.html":{}}}],["users.controller",{"_index":464,"title":{},"body":{"modules/UsersModule.html":{}}}],["users.service",{"_index":454,"title":{},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{}}}],["users/datum/user.entity",{"_index":98,"title":{},"body":{"modules/AppModule.html":{},"classes/Cat.html":{},"controllers/CatsController.html":{},"modules/CatsModule.html":{}}}],["users/datum/user.repository",{"_index":281,"title":{},"body":{"modules/CatsModule.html":{}}}],["users/users.module",{"_index":96,"title":{},"body":{"modules/AppModule.html":{}}}],["userscontroller",{"_index":447,"title":{"controllers/UsersController.html":{}},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{},"coverage.html":{}}}],["usersmodule",{"_index":54,"title":{"modules/UsersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["usersservice",{"_index":453,"title":{"injectables/UsersService.html":{}},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"overview.html":{}}}],["valid('development",{"_index":113,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["validationoptions",{"_index":103,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["validationschema",{"_index":106,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["validator",{"_index":314,"title":{},"body":{"classes/CreateCatDto.html":{},"classes/CreateUserDto.html":{},"classes/GetCatResponseDto.html":{},"classes/GetUserResponseDto.html":{},"classes/UpdateCatDto.html":{},"classes/UpdateUserDto.html":{},"dependencies.html":{}}}],["value",{"_index":169,"title":{},"body":{"classes/Cat.html":{},"injectables/CronService.html":{},"classes/User.html":{},"miscellaneous/variables.html":{}}}],["variable",{"_index":477,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":601,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["void",{"_index":70,"title":{},"body":{"modules/AppModule.html":{},"injectables/CronService.html":{},"controllers/HealthController.html":{}}}],["watch",{"_index":561,"title":{},"body":{"index.html":{}}}],["website",{"_index":590,"title":{},"body":{"index.html":{}}}],["world",{"_index":141,"title":{},"body":{"injectables/AppService.html":{}}}],["yes",{"_index":69,"title":{},"body":{"modules/AppModule.html":{},"controllers/HealthController.html":{}}}],["you'd",{"_index":580,"title":{},"body":{"index.html":{}}}],["zoom",{"_index":55,"title":{},"body":{"modules/AppModule.html":{},"modules/CatsModule.html":{},"modules/CronModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getHello\n                        \n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/app.controller.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        /* eslint-disable no-use-before-define */\nimport { Controller, Get } from '@nestjs/common'\nimport { ApiTags } from '@nestjs/swagger'\n\nimport { AppService } from './app.service'\n\n@Controller(AppController.path)\n@ApiTags(AppController.name)\nexport class AppController {\n    static path = '/'\n\n    constructor(private readonly appService: AppService) {}\n\n    @Get()\n    getHello(): string {\n        return this.appService.getHello()\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AppModule_imports\n\n\n\n\nCatsModule\n\nCatsModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nCatsModule->AppModule\n\n\n\n\n\nCronModule\n\nCronModule\n\nAppModule -->\n\nCronModule->AppModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                        \n                            HealthController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            CatsModule\n                        \n                        \n                            CronModule\n                        \n                        \n                            UsersModule\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onApplicationShutdown\n                        \n                        \n                    \n                \n            \n            \n                \nonApplicationShutdown(signal?: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app.module.ts:65\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    signal\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onModuleInit\n                        \n                        \n                    \n                \n            \n            \n                \nonModuleInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app.module.ts:61\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        /* eslint-disable @typescript-eslint/no-unsafe-assignment,@typescript-eslint/no-unsafe-call,@typescript-eslint/no-unsafe-member-access,no-use-before-define */\nimport { Module, OnApplicationShutdown, OnModuleInit } from '@nestjs/common'\nimport { ConfigModule } from '@nestjs/config'\nimport { ScheduleModule } from '@nestjs/schedule'\nimport { TerminusModule } from '@nestjs/terminus'\nimport { TypeOrmModule } from '@nestjs/typeorm'\n\nimport { CronModule } from 'src/cron/cron.module'\nimport { HealthController } from 'src/health/health.controller'\n\nimport * as Joi from '@hapi/joi'\n\nimport { AppController } from './app.controller'\nimport { AppService } from './app.service'\nimport { CatsModule } from './cats/cats.module'\nimport { Cat } from './cats/datum/cat.entity'\nimport { UsersModule } from './users/users.module'\nimport { User } from './users/datum/user.entity'\n\nconst ConfigModuleOptions = {\n    isGlobal: true,\n    validationOptions: {\n        allowUnknown: true,\n        abortEarly: true,\n    },\n    validationSchema: Joi.object({\n        PORT: Joi.number().default(3000),\n        NODE_ENV: Joi.string()\n            .required()\n            .valid('development', 'production', 'test', 'provision')\n            .default('development'),\n    }),\n}\n\nconst TypeOrmModuleOptions = {\n    entities: [\n        Cat,\n        User,\n        // `${__dirname}/**/*.entity.{ts,js}`,\n    ],\n    type: 'sqlite' as const,\n    database: 'database.sqlite',\n    synchronize: true,\n    logging: true,\n}\n\n@Module({\n    controllers: [AppController, HealthController],\n    imports: [\n        ConfigModule.forRoot(ConfigModuleOptions),\n        ScheduleModule.forRoot(),\n        CronModule,\n        TerminusModule, // Health module\n        TypeOrmModule.forRoot(TypeOrmModuleOptions),\n        CatsModule,\n        UsersModule,\n    ],\n    providers: [AppService],\n})\nexport class AppModule implements OnModuleInit, OnApplicationShutdown {\n    onModuleInit(): void {\n        console.info(`ModuleInit - AppModule has been initialized.`)\n    }\n\n    onApplicationShutdown(signal?: string): void {\n        console.error(\n            `ApplicationShutdown - AppModule has been shutdown with ${signal} signal`,\n        )\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getHello\n                        \n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n            \n                \n                    Defined in src/app.service.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common'\n\n@Injectable()\nexport class AppService {\n    getHello(): string {\n        return 'Hello World!'\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Cat.html":{"url":"classes/Cat.html","title":"class - Cat","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Cat\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/cats/datum/cat.entity.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                age\n                            \n                            \n                                breed\n                            \n                            \n                                createdAt\n                            \n                            \n                                deletedAt\n                            \n                            \n                                    Static\n                                exclude\n                            \n                            \n                                id\n                            \n                            \n                                name\n                            \n                            \n                                    Static\n                                    Readonly\n                                NAME_LENGTH\n                            \n                            \n                                updatedAt\n                            \n                            \n                                user\n                            \n                            \n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            age\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'The age of the Cat', example: 1})@Column({name: 'cat_age'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/cats/datum/cat.entity.ts:39\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            breed\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'The breed of the Cat', example: 'Maine Coon'})@Column({name: 'cat_breed'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/cats/datum/cat.entity.ts:43\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @CreateDateColumn()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/cats/datum/cat.entity.ts:46\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            deletedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @DeleteDateColumn()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/cats/datum/cat.entity.ts:52\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            exclude\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : ['createdAt', 'updatedAt', 'deletedAt']\n                        \n                    \n                        \n                            \n                                    Defined in src/cats/datum/cat.entity.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'Cat unique ID', example: '36635263'})@PrimaryGeneratedColumn()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/cats/datum/cat.entity.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'The name of the Cat', example: 'Kitty'})@Column({name: 'cat_name', length: undefined})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/cats/datum/cat.entity.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                                Readonly\n                            NAME_LENGTH\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 36\n                        \n                    \n                        \n                            \n                                    Defined in src/cats/datum/cat.entity.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @UpdateDateColumn()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/cats/datum/cat.entity.ts:49\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            user\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         User\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ManyToOne(undefined, undefined, {lazy: false, nullable: false})@Type(undefined)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/cats/datum/cat.entity.ts:63\n                            \n                        \n\n                \n                    \n                        Relations\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            userId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'ID of the Owner', example: 1})@Column()@Index()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/cats/datum/cat.entity.ts:31\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger'\n\nimport { Type } from 'class-transformer'\nimport {\n    Column,\n    CreateDateColumn,\n    Entity,\n    PrimaryGeneratedColumn,\n    UpdateDateColumn,\n    DeleteDateColumn,\n    ManyToOne,\n    PrimaryColumn,\n    Index,\n} from 'typeorm'\n\nimport { User } from '../../users/datum/user.entity' // eslint-disable-line import/no-cycle\n\n@Entity({ name: 'cats' })\nexport class Cat {\n    public static readonly NAME_LENGTH = 36\n\n    public static exclude = ['createdAt', 'updatedAt', 'deletedAt']\n\n    @ApiProperty({ description: 'Cat unique ID', example: '36635263' })\n    @PrimaryGeneratedColumn()\n    id: number\n\n    @ApiProperty({ description: 'ID of the Owner', example: 1 })\n    @Column()\n    @Index()\n    userId: number\n\n    @ApiProperty({ description: 'The name of the Cat', example: 'Kitty' })\n    @Column({ name: 'cat_name', length: Cat.NAME_LENGTH })\n    name: string\n\n    @ApiProperty({ description: 'The age of the Cat', example: 1 })\n    @Column({ name: 'cat_age' })\n    age: number\n\n    @ApiProperty({ description: 'The breed of the Cat', example: 'Maine Coon' })\n    @Column({ name: 'cat_breed' })\n    breed: string\n\n    @CreateDateColumn()\n    createdAt: any\n\n    @UpdateDateColumn()\n    updatedAt: any\n\n    @DeleteDateColumn()\n    deletedAt: any\n\n    /**\n     * Relations\n     */\n\n    @ManyToOne((type) => User, (u) => u.cats, {\n        lazy: false, // true sets relation to be lazy, lazy relations are promise of that entity\n        nullable: false, // if relation column value can be nullable or not, {LEFT JOIN  INNER JOIN}?\n    })\n    @Type((t) => User)\n    user: User\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CatRepository.html":{"url":"classes/CatRepository.html","title":"class - CatRepository","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CatRepository\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/cats/datum/cat.repository.ts\n        \n\n\n            \n                Extends\n            \n            \n                    Repository\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                clearAll\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            clearAll\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    clearAll()\n                \n            \n\n\n            \n                \n                    Defined in src/cats/datum/cat.repository.ts:10\n                \n            \n\n\n            \n                \n                    Deletes all of the Cat records form database\n\n\n                    \n                        Returns :     {}\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { EntityRepository, getManager, Repository } from 'typeorm'\n\nimport { Cat } from './cat.entity'\n\n@EntityRepository(Cat)\nexport class CatRepository extends Repository {\n    /**\n     * Deletes all of the Cat records form database\n     */\n    async clearAll() {\n        let cleared = {}\n        cleared = await getManager().query('DELETE FROM cats') // eslint-disable-line @typescript-eslint/no-unsafe-assignment\n        return cleared\n    }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/CatsController.html":{"url":"controllers/CatsController.html","title":"controller - CatsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  CatsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/cats/cats.controller.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                clear\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            clear\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    clear()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'Delete all Cats'})@Post('/clear')\n                \n            \n\n            \n                \n                    Defined in src/cats/cats.controller.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     {}\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        /* eslint-disable no-use-before-define */\nimport { Controller, Post } from '@nestjs/common'\nimport { ApiOperation, ApiTags } from '@nestjs/swagger'\nimport { Crud, CrudController } from '@nestjsx/crud'\n\nimport { CatsService } from './cats.service'\nimport { CreateCatDto, UpdateCatDto, GetCatResponseDto } from './datum/cat.dto'\nimport { Cat } from './datum/cat.entity'\nimport { User } from '../users/datum/user.entity'\n\n@Controller(CatsController.path)\n@ApiTags(CatsController.name)\n@Crud({\n    model: {\n        type: Cat,\n    },\n    dto: {\n        create: CreateCatDto,\n        replace: CreateCatDto,\n        update: UpdateCatDto,\n    },\n    serialize: {\n        create: GetCatResponseDto,\n        delete: GetCatResponseDto,\n        get: GetCatResponseDto,\n        update: GetCatResponseDto,\n    },\n    query: {\n        alwaysPaginate: true,\n        join: {\n            user: {\n                eager: true,\n                exclude: User.exclude,\n            },\n        },\n    },\n})\nexport class CatsController implements CrudController {\n    static path = 'cats'\n\n    constructor(public service: CatsService) {}\n\n    @ApiOperation({ summary: 'Delete all Cats' })\n    @Post('/clear')\n    async clear() {\n        return this.service.clear()\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CatsModule.html":{"url":"modules/CatsModule.html","title":"module - CatsModule","body":"\n                   \n\n\n\n\n    Modules\n    CatsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_CatsModule\n\n\n\ncluster_CatsModule_providers\n\n\n\ncluster_CatsModule_exports\n\n\n\n\nCatsService \n\nCatsService \n\n\n\nCatsModule\n\nCatsModule\n\nCatsService  -->\n\nCatsModule->CatsService \n\n\n\n\n\nCatsService\n\nCatsService\n\nCatsModule -->\n\nCatsService->CatsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/cats/cats.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            CatsService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            CatsController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            CatsService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common'\nimport { TypeOrmModule } from '@nestjs/typeorm'\n\nimport { User } from '../users/datum/user.entity'\nimport { UserRepository } from '../users/datum/user.repository'\nimport { CatsController } from './cats.controller'\nimport { CatsService } from './cats.service'\nimport { CatRepository } from './datum/cat.repository'\n\n@Module({\n    controllers: [CatsController],\n    exports: [CatsService],\n    imports: [TypeOrmModule.forFeature([CatRepository])],\n    providers: [CatsService],\n})\nexport class CatsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CatsService.html":{"url":"injectables/CatsService.html","title":"injectable - CatsService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  CatsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/cats/cats.service.ts\n        \n\n\n            \n                Extends\n            \n            \n                    TypeOrmCrudService\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                repo\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                clear\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(repo: CatRepository)\n                    \n                \n                        \n                            \n                                Defined in src/cats/cats.service.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        repo\n                                                  \n                                                        \n                                                                        CatRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            clear\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    clear()\n                \n            \n\n\n            \n                \n                    Defined in src/cats/cats.service.ts:19\n                \n            \n\n\n            \n                \n                    Deletes all of the Cat records form database\n\n\n                    \n                        Returns :     {}\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            repo\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         CatRepository\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @InjectRepository(CatRepository)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/cats/cats.service.ts:12\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common'\nimport { InjectRepository } from '@nestjs/typeorm'\nimport { TypeOrmCrudService } from '@nestjsx/crud-typeorm'\n\nimport { getManager } from 'typeorm'\n\nimport { Cat } from './datum/cat.entity'\nimport { CatRepository } from './datum/cat.repository'\n\n@Injectable()\nexport class CatsService extends TypeOrmCrudService {\n    constructor(@InjectRepository(CatRepository) public repo: CatRepository) {\n        super(repo)\n    }\n\n    /**\n     * Deletes all of the Cat records form database\n     */\n    async clear() {\n        return this.repo.clearAll()\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateCatDto.html":{"url":"classes/CreateCatDto.html","title":"class - CreateCatDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateCatDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/cats/datum/cat.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                age\n                            \n                            \n                                    Readonly\n                                breed\n                            \n                            \n                                    Readonly\n                                name\n                            \n                            \n                                    Readonly\n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            age\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'The age of the Cat', example: 1})@IsInt()@IsPositive()@IsNotEmpty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/cats/datum/cat.dto.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            breed\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'The breed of the Cat', example: 'Maine Coon'})@IsString()@IsNotEmpty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/cats/datum/cat.dto.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'The name of the Cat', example: 'Kitty'})@IsString()@IsNotEmpty()@MinLength(2)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/cats/datum/cat.dto.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            userId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'ID of the Owner', example: 1})@IsInt()@IsNotEmpty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/cats/datum/cat.dto.ts:24\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiHideProperty, ApiProperty } from '@nestjs/swagger'\n\nimport { Exclude } from 'class-transformer'\nimport {\n    IsInt,\n    IsString,\n    MinLength,\n    IsNotEmpty,\n    IsPositive,\n    IsOptional,\n} from 'class-validator'\n\nexport class CreateCatDto {\n    @ApiProperty({ description: 'The name of the Cat', example: 'Kitty' })\n    @IsString()\n    @IsNotEmpty()\n    @MinLength(2)\n    readonly name: string\n\n    @ApiProperty({ description: 'ID of the Owner', example: 1 })\n    @IsInt()\n    @IsNotEmpty()\n    readonly userId: number\n\n    @ApiProperty({ description: 'The age of the Cat', example: 1 })\n    @IsInt()\n    @IsPositive()\n    @IsNotEmpty()\n    readonly age: number\n\n    @ApiProperty({ description: 'The breed of the Cat', example: 'Maine Coon' })\n    @IsString()\n    @IsNotEmpty()\n    readonly breed: string\n}\n\nexport class UpdateCatDto {\n    @ApiProperty({ description: 'The name of the Cat', example: 'Kitty' })\n    @IsString()\n    @IsNotEmpty()\n    @MinLength(2)\n    @IsOptional()\n    readonly name?: string\n\n    @ApiProperty({ description: 'The age of the Cat', example: 1 })\n    @IsInt()\n    @IsPositive()\n    @IsNotEmpty()\n    @IsOptional()\n    readonly age?: number\n\n    @ApiProperty({ description: 'The breed of the Cat', example: 'Maine Coon' })\n    @IsString()\n    @IsNotEmpty()\n    @IsOptional()\n    readonly breed?: string\n}\n\nexport class GetCatResponseDto {\n    @ApiProperty({ type: 'number' })\n    id: string\n\n    @ApiProperty({ description: 'ID of the Owner', example: 1 })\n    userId: number\n\n    @ApiProperty({ description: 'The name of the Cat', example: 'Kitty' })\n    name: string\n\n    @ApiProperty({ description: 'The age of the Cat', example: 1 })\n    age: number\n\n    @ApiProperty({ description: 'The breed of the Cat', example: 'Maine Coon' })\n    breed: string\n\n    @ApiHideProperty()\n    @Exclude()\n    createdAt: any\n\n    @ApiHideProperty()\n    @Exclude()\n    updatedAt: any\n\n    @ApiHideProperty()\n    @Exclude()\n    deletedAt: any\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUserDto.html":{"url":"classes/CreateUserDto.html","title":"class - CreateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/datum/user.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'The name of the User', example: 'Name'})@IsString()@IsNotEmpty()@MinLength(2)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/datum/user.dto.ts:17\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiHideProperty, ApiProperty } from '@nestjs/swagger'\n\nimport { Exclude } from 'class-transformer'\nimport {\n    IsString,\n    MinLength,\n    IsNotEmpty,\n    IsOptional,\n} from 'class-validator'\n\nexport class CreateUserDto {\n    @ApiProperty({ description: 'The name of the User', example: 'Name' })\n    @IsString()\n    @IsNotEmpty()\n    @MinLength(2)\n    readonly name: string\n}\n\nexport class UpdateUserDto {\n    @ApiProperty({ description: 'The name of the User', example: 'Kitty' })\n    @IsString()\n    @IsNotEmpty()\n    @MinLength(2)\n    @IsOptional()\n    readonly name?: string\n}\n\nexport class GetUserResponseDto {\n    @ApiProperty({ type: 'number' })\n    id: string\n\n    @ApiProperty({ description: 'The name of the User', example: 'Name' })\n    name: string\n\n    @ApiHideProperty()\n    @Exclude()\n    createdAt: any\n\n    @ApiHideProperty()\n    @Exclude()\n    updatedAt: any\n\n    @ApiHideProperty()\n    @Exclude()\n    deletedAt: any\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CronModule.html":{"url":"modules/CronModule.html","title":"module - CronModule","body":"\n                   \n\n\n\n\n    Modules\n    CronModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_CronModule\n\n\n\ncluster_CronModule_providers\n\n\n\n\nCronService\n\nCronService\n\n\n\nCronModule\n\nCronModule\n\nCronModule -->\n\nCronService->CronModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/cron/cron.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            CronService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common'\n\nimport { CronService } from 'src/cron/cron.service'\n\n@Module({\n    providers: [CronService],\n})\nexport class CronModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CronService.html":{"url":"injectables/CronService.html","title":"injectable - CronService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  CronService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/cron/cron.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                count\n                            \n                            \n                                    Private\n                                    Readonly\n                                logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                handleCron\n                            \n                            \n                                handleInterval\n                            \n                            \n                                handleTimeout\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            handleCron\n                        \n                        \n                    \n                \n            \n            \n                \nhandleCron()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Cron('60 * * * * *')\n                \n            \n\n            \n                \n                    Defined in src/cron/cron.service.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            handleInterval\n                        \n                        \n                    \n                \n            \n            \n                \nhandleInterval()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Interval(100000)\n                \n            \n\n            \n                \n                    Defined in src/cron/cron.service.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            handleTimeout\n                        \n                        \n                    \n                \n            \n            \n                \nhandleTimeout()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Timeout(50000)\n                \n            \n\n            \n                \n                    Defined in src/cron/cron.service.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            count\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in src/cron/cron.service.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            logger\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Logger(CronService.name)\n                        \n                    \n                        \n                            \n                                    Defined in src/cron/cron.service.ts:8\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable, Logger } from '@nestjs/common'\nimport { Cron, Interval, Timeout } from '@nestjs/schedule'\n\n@Injectable()\nexport class CronService {\n    public static count = 0\n\n    private readonly logger = new Logger(CronService.name)\n\n    @Cron('60 * * * * *')\n    handleCron() {\n        CronService.count += 1\n        this.logger.debug(\n            `Called when the second is 60, current count is ${CronService.count}`,\n        )\n    }\n\n    @Interval(100000)\n    handleInterval() {\n        this.logger.debug('Called every 100 seconds')\n    }\n\n    @Timeout(50000)\n    handleTimeout() {\n        this.logger.debug('Called once after 50 seconds')\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetCatResponseDto.html":{"url":"classes/GetCatResponseDto.html","title":"class - GetCatResponseDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetCatResponseDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/cats/datum/cat.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                age\n                            \n                            \n                                breed\n                            \n                            \n                                createdAt\n                            \n                            \n                                deletedAt\n                            \n                            \n                                id\n                            \n                            \n                                name\n                            \n                            \n                                updatedAt\n                            \n                            \n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            age\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'The age of the Cat', example: 1})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/cats/datum/cat.dto.ts:71\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            breed\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'The breed of the Cat', example: 'Maine Coon'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/cats/datum/cat.dto.ts:74\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiHideProperty()@Exclude()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/cats/datum/cat.dto.ts:78\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            deletedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiHideProperty()@Exclude()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/cats/datum/cat.dto.ts:86\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({type: 'number'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/cats/datum/cat.dto.ts:62\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'The name of the Cat', example: 'Kitty'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/cats/datum/cat.dto.ts:68\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiHideProperty()@Exclude()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/cats/datum/cat.dto.ts:82\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            userId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'ID of the Owner', example: 1})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/cats/datum/cat.dto.ts:65\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiHideProperty, ApiProperty } from '@nestjs/swagger'\n\nimport { Exclude } from 'class-transformer'\nimport {\n    IsInt,\n    IsString,\n    MinLength,\n    IsNotEmpty,\n    IsPositive,\n    IsOptional,\n} from 'class-validator'\n\nexport class CreateCatDto {\n    @ApiProperty({ description: 'The name of the Cat', example: 'Kitty' })\n    @IsString()\n    @IsNotEmpty()\n    @MinLength(2)\n    readonly name: string\n\n    @ApiProperty({ description: 'ID of the Owner', example: 1 })\n    @IsInt()\n    @IsNotEmpty()\n    readonly userId: number\n\n    @ApiProperty({ description: 'The age of the Cat', example: 1 })\n    @IsInt()\n    @IsPositive()\n    @IsNotEmpty()\n    readonly age: number\n\n    @ApiProperty({ description: 'The breed of the Cat', example: 'Maine Coon' })\n    @IsString()\n    @IsNotEmpty()\n    readonly breed: string\n}\n\nexport class UpdateCatDto {\n    @ApiProperty({ description: 'The name of the Cat', example: 'Kitty' })\n    @IsString()\n    @IsNotEmpty()\n    @MinLength(2)\n    @IsOptional()\n    readonly name?: string\n\n    @ApiProperty({ description: 'The age of the Cat', example: 1 })\n    @IsInt()\n    @IsPositive()\n    @IsNotEmpty()\n    @IsOptional()\n    readonly age?: number\n\n    @ApiProperty({ description: 'The breed of the Cat', example: 'Maine Coon' })\n    @IsString()\n    @IsNotEmpty()\n    @IsOptional()\n    readonly breed?: string\n}\n\nexport class GetCatResponseDto {\n    @ApiProperty({ type: 'number' })\n    id: string\n\n    @ApiProperty({ description: 'ID of the Owner', example: 1 })\n    userId: number\n\n    @ApiProperty({ description: 'The name of the Cat', example: 'Kitty' })\n    name: string\n\n    @ApiProperty({ description: 'The age of the Cat', example: 1 })\n    age: number\n\n    @ApiProperty({ description: 'The breed of the Cat', example: 'Maine Coon' })\n    breed: string\n\n    @ApiHideProperty()\n    @Exclude()\n    createdAt: any\n\n    @ApiHideProperty()\n    @Exclude()\n    updatedAt: any\n\n    @ApiHideProperty()\n    @Exclude()\n    deletedAt: any\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetUserResponseDto.html":{"url":"classes/GetUserResponseDto.html","title":"class - GetUserResponseDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetUserResponseDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/datum/user.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                createdAt\n                            \n                            \n                                deletedAt\n                            \n                            \n                                id\n                            \n                            \n                                name\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiHideProperty()@Exclude()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/datum/user.dto.ts:38\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            deletedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiHideProperty()@Exclude()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/datum/user.dto.ts:46\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({type: 'number'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/datum/user.dto.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'The name of the User', example: 'Name'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/datum/user.dto.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiHideProperty()@Exclude()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/datum/user.dto.ts:42\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiHideProperty, ApiProperty } from '@nestjs/swagger'\n\nimport { Exclude } from 'class-transformer'\nimport {\n    IsString,\n    MinLength,\n    IsNotEmpty,\n    IsOptional,\n} from 'class-validator'\n\nexport class CreateUserDto {\n    @ApiProperty({ description: 'The name of the User', example: 'Name' })\n    @IsString()\n    @IsNotEmpty()\n    @MinLength(2)\n    readonly name: string\n}\n\nexport class UpdateUserDto {\n    @ApiProperty({ description: 'The name of the User', example: 'Kitty' })\n    @IsString()\n    @IsNotEmpty()\n    @MinLength(2)\n    @IsOptional()\n    readonly name?: string\n}\n\nexport class GetUserResponseDto {\n    @ApiProperty({ type: 'number' })\n    id: string\n\n    @ApiProperty({ description: 'The name of the User', example: 'Name' })\n    name: string\n\n    @ApiHideProperty()\n    @Exclude()\n    createdAt: any\n\n    @ApiHideProperty()\n    @Exclude()\n    updatedAt: any\n\n    @ApiHideProperty()\n    @Exclude()\n    deletedAt: any\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/HealthController.html":{"url":"controllers/HealthController.html","title":"controller - HealthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  HealthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/health/health.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                health\n            \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                check\n                            \n                            \n                                onApplicationShutdown\n                            \n                            \n                                onModuleInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            check\n                        \n                        \n                    \n                \n            \n            \n                \ncheck()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@HealthCheck()\n                \n            \n\n            \n                \n                    Defined in src/health/health.controller.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onApplicationShutdown\n                        \n                        \n                    \n                \n            \n            \n                \nonApplicationShutdown(signal?: string)\n                \n            \n\n\n            \n                \n                    Defined in src/health/health.controller.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    signal\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onModuleInit\n                        \n                        \n                    \n                \n            \n            \n                \nonModuleInit()\n                \n            \n\n\n            \n                \n                    Defined in src/health/health.controller.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n    Controller,\n    Get,\n    OnApplicationShutdown,\n    OnModuleInit,\n} from '@nestjs/common'\nimport { ConfigService } from '@nestjs/config'\nimport { ApiTags } from '@nestjs/swagger'\nimport {\n    DNSHealthIndicator,\n    HealthCheck,\n    HealthCheckService,\n} from '@nestjs/terminus'\n\n// eslint-disable-next-line no-use-before-define\n@ApiTags(HealthController.name)\n@Controller('health')\nexport class HealthController implements OnModuleInit, OnApplicationShutdown {\n    constructor(\n        private health: HealthCheckService,\n        private dns: DNSHealthIndicator,\n        private config: ConfigService,\n    ) {}\n\n    @Get()\n    @HealthCheck()\n    check() {\n        return this.health.check([\n            () => this.dns.pingCheck('nestjs-docs', 'https://docs.nestjs.com'),\n        ])\n    }\n\n    /*\n     * When the application receives a termination signal it will call any registered\n     * onModuleDestroy(), beforeApplicationShutdown(), then onApplicationShutdown() methods\n     * (in the sequence described above) with the corresponding signal as the first parameter.\n     * If a registered function awaits an asynchronous call (returns a promise), Nest will not\n     * continue in the sequence until the promise is resolved or rejected.\n     */\n\n    onModuleInit(): void {\n        console.log(`ModuleInit - HealthController has been initialized.`, {\n            config: this.config.get('NODE_ENV'),\n        })\n    }\n\n    onApplicationShutdown(signal?: string): void {\n        console.log(\n            `ApplicationShutdown - HealthController has been shutdown with ${signal} signal`,\n        )\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateCatDto.html":{"url":"classes/UpdateCatDto.html","title":"class - UpdateCatDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateCatDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/cats/datum/cat.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                    Optional\n                                age\n                            \n                            \n                                    Readonly\n                                    Optional\n                                breed\n                            \n                            \n                                    Readonly\n                                    Optional\n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                                Optional\n                            age\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'The age of the Cat', example: 1})@IsInt()@IsPositive()@IsNotEmpty()@IsOptional()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/cats/datum/cat.dto.ts:51\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                                Optional\n                            breed\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'The breed of the Cat', example: 'Maine Coon'})@IsString()@IsNotEmpty()@IsOptional()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/cats/datum/cat.dto.ts:57\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                                Optional\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'The name of the Cat', example: 'Kitty'})@IsString()@IsNotEmpty()@MinLength(2)@IsOptional()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/cats/datum/cat.dto.ts:44\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiHideProperty, ApiProperty } from '@nestjs/swagger'\n\nimport { Exclude } from 'class-transformer'\nimport {\n    IsInt,\n    IsString,\n    MinLength,\n    IsNotEmpty,\n    IsPositive,\n    IsOptional,\n} from 'class-validator'\n\nexport class CreateCatDto {\n    @ApiProperty({ description: 'The name of the Cat', example: 'Kitty' })\n    @IsString()\n    @IsNotEmpty()\n    @MinLength(2)\n    readonly name: string\n\n    @ApiProperty({ description: 'ID of the Owner', example: 1 })\n    @IsInt()\n    @IsNotEmpty()\n    readonly userId: number\n\n    @ApiProperty({ description: 'The age of the Cat', example: 1 })\n    @IsInt()\n    @IsPositive()\n    @IsNotEmpty()\n    readonly age: number\n\n    @ApiProperty({ description: 'The breed of the Cat', example: 'Maine Coon' })\n    @IsString()\n    @IsNotEmpty()\n    readonly breed: string\n}\n\nexport class UpdateCatDto {\n    @ApiProperty({ description: 'The name of the Cat', example: 'Kitty' })\n    @IsString()\n    @IsNotEmpty()\n    @MinLength(2)\n    @IsOptional()\n    readonly name?: string\n\n    @ApiProperty({ description: 'The age of the Cat', example: 1 })\n    @IsInt()\n    @IsPositive()\n    @IsNotEmpty()\n    @IsOptional()\n    readonly age?: number\n\n    @ApiProperty({ description: 'The breed of the Cat', example: 'Maine Coon' })\n    @IsString()\n    @IsNotEmpty()\n    @IsOptional()\n    readonly breed?: string\n}\n\nexport class GetCatResponseDto {\n    @ApiProperty({ type: 'number' })\n    id: string\n\n    @ApiProperty({ description: 'ID of the Owner', example: 1 })\n    userId: number\n\n    @ApiProperty({ description: 'The name of the Cat', example: 'Kitty' })\n    name: string\n\n    @ApiProperty({ description: 'The age of the Cat', example: 1 })\n    age: number\n\n    @ApiProperty({ description: 'The breed of the Cat', example: 'Maine Coon' })\n    breed: string\n\n    @ApiHideProperty()\n    @Exclude()\n    createdAt: any\n\n    @ApiHideProperty()\n    @Exclude()\n    updatedAt: any\n\n    @ApiHideProperty()\n    @Exclude()\n    deletedAt: any\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateUserDto.html":{"url":"classes/UpdateUserDto.html","title":"class - UpdateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/datum/user.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                    Optional\n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                                Optional\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'The name of the User', example: 'Kitty'})@IsString()@IsNotEmpty()@MinLength(2)@IsOptional()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/datum/user.dto.ts:26\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiHideProperty, ApiProperty } from '@nestjs/swagger'\n\nimport { Exclude } from 'class-transformer'\nimport {\n    IsString,\n    MinLength,\n    IsNotEmpty,\n    IsOptional,\n} from 'class-validator'\n\nexport class CreateUserDto {\n    @ApiProperty({ description: 'The name of the User', example: 'Name' })\n    @IsString()\n    @IsNotEmpty()\n    @MinLength(2)\n    readonly name: string\n}\n\nexport class UpdateUserDto {\n    @ApiProperty({ description: 'The name of the User', example: 'Kitty' })\n    @IsString()\n    @IsNotEmpty()\n    @MinLength(2)\n    @IsOptional()\n    readonly name?: string\n}\n\nexport class GetUserResponseDto {\n    @ApiProperty({ type: 'number' })\n    id: string\n\n    @ApiProperty({ description: 'The name of the User', example: 'Name' })\n    name: string\n\n    @ApiHideProperty()\n    @Exclude()\n    createdAt: any\n\n    @ApiHideProperty()\n    @Exclude()\n    updatedAt: any\n\n    @ApiHideProperty()\n    @Exclude()\n    deletedAt: any\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/User.html":{"url":"classes/User.html","title":"class - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/datum/user.entity.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                cats\n                            \n                            \n                                createdAt\n                            \n                            \n                                deletedAt\n                            \n                            \n                                    Static\n                                exclude\n                            \n                            \n                                id\n                            \n                            \n                                name\n                            \n                            \n                                    Static\n                                    Readonly\n                                NAME_LENGTH\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            cats\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Cat[]\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @OneToMany(undefined, undefined, {lazy: false, nullable: false})@Type(undefined)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/datum/user.entity.ts:48\n                            \n                        \n\n                \n                    \n                        Relations\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @CreateDateColumn()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/datum/user.entity.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            deletedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @DeleteDateColumn()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/datum/user.entity.ts:37\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            exclude\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : ['createdAt', 'updatedAt', 'deletedAt']\n                        \n                    \n                        \n                            \n                                    Defined in src/users/datum/user.entity.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'User unique ID', example: '36635263'})@PrimaryGeneratedColumn()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/datum/user.entity.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'The name of the User', example: 'Name'})@Column({name: 'user_name', length: undefined})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/datum/user.entity.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                                Readonly\n                            NAME_LENGTH\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 36\n                        \n                    \n                        \n                            \n                                    Defined in src/users/datum/user.entity.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @UpdateDateColumn()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/datum/user.entity.ts:34\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger'\n\nimport { Type } from 'class-transformer'\nimport {\n    Column,\n    CreateDateColumn,\n    Entity,\n    PrimaryGeneratedColumn,\n    UpdateDateColumn,\n    DeleteDateColumn,\n    OneToMany,\n} from 'typeorm'\n\nimport { Cat } from '../../cats/datum/cat.entity' // eslint-disable-line import/no-cycle\n\n@Entity({ name: 'users' })\nexport class User {\n    public static readonly NAME_LENGTH = 36\n\n    public static exclude = ['createdAt', 'updatedAt', 'deletedAt']\n\n    @ApiProperty({ description: 'User unique ID', example: '36635263' })\n    @PrimaryGeneratedColumn()\n    id: number\n\n    @ApiProperty({ description: 'The name of the User', example: 'Name' })\n    @Column({ name: 'user_name', length: User.NAME_LENGTH })\n    name: string\n\n    @CreateDateColumn()\n    createdAt: any\n\n    @UpdateDateColumn()\n    updatedAt: any\n\n    @DeleteDateColumn()\n    deletedAt: any\n\n    /**\n     * Relations\n     */\n\n    @OneToMany((type) => Cat, (c) => c.user, {\n        lazy: false, // true sets relation to be lazy, lazy relations are promise of that entity\n        nullable: false, // if relation column value can be nullable or not, {LEFT JOIN  INNER JOIN}?}\n    })\n    @Type((t) => Cat)\n    cats: Cat[]\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserRepository.html":{"url":"classes/UserRepository.html","title":"class - UserRepository","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserRepository\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/datum/user.repository.ts\n        \n\n\n            \n                Extends\n            \n            \n                    Repository\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                clearAll\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            clearAll\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    clearAll()\n                \n            \n\n\n            \n                \n                    Defined in src/users/datum/user.repository.ts:10\n                \n            \n\n\n            \n                \n                    Deletes all of the User records form database\n\n\n                    \n                        Returns :     {}\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { EntityRepository, getManager, Repository } from 'typeorm'\n\nimport { User } from './user.entity'\n\n@EntityRepository(User)\nexport class UserRepository extends Repository {\n    /**\n     * Deletes all of the User records form database\n     */\n    async clearAll() {\n        let cleared = {}\n        cleared = await getManager().query('DELETE FROM users') // eslint-disable-line @typescript-eslint/no-unsafe-assignment\n        return cleared\n    }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UsersController.html":{"url":"controllers/UsersController.html","title":"controller - UsersController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UsersController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/users.controller.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                clear\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            clear\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    clear()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'Delete all User'})@Post('/clear')\n                \n            \n\n            \n                \n                    Defined in src/users/users.controller.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     {}\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        /* eslint-disable no-use-before-define */\nimport { Controller, Post } from \"@nestjs/common\";\nimport { ApiOperation, ApiTags } from \"@nestjs/swagger\";\nimport { Crud, CrudController } from '@nestjsx/crud'\n\nimport { Cat } from '../cats/datum/cat.entity'\nimport { CreateUserDto, GetUserResponseDto, UpdateUserDto } from './datum/user.dto'\nimport { User } from './datum/user.entity'\nimport { UsersService } from './users.service'\n\n@Controller(UsersController.path)\n@ApiTags(UsersController.name)\n@Crud({\n    model: {\n        type: User,\n    },\n    dto: {\n        create: CreateUserDto,\n        replace: CreateUserDto,\n        update: UpdateUserDto,\n    },\n    serialize: {\n        create: GetUserResponseDto,\n        delete: GetUserResponseDto,\n        get: GetUserResponseDto,\n        update: GetUserResponseDto,\n    },\n    query: {\n        alwaysPaginate: true,\n        join: {\n            cats: {\n                eager: false,\n                exclude: Cat.exclude,\n            },\n        },\n    },\n})\nexport class UsersController implements CrudController {\n    static path = 'users'\n\n    constructor(public service: UsersService) {}\n\n    @ApiOperation({ summary: 'Delete all User' })\n    @Post('/clear')\n    async clear() {\n        return this.service.clear()\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UsersModule.html":{"url":"modules/UsersModule.html","title":"module - UsersModule","body":"\n                   \n\n\n\n\n    Modules\n    UsersModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_exports\n\n\n\ncluster_UsersModule_providers\n\n\n\n\nUsersService \n\nUsersService \n\n\n\nUsersModule\n\nUsersModule\n\nUsersService  -->\n\nUsersModule->UsersService \n\n\n\n\n\nUsersService\n\nUsersService\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/users/users.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            UsersService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            UsersController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            UsersService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common'\nimport { TypeOrmModule } from '@nestjs/typeorm'\n\nimport { Cat } from '../cats/datum/cat.entity'\nimport { CatRepository } from '../cats/datum/cat.repository'\nimport { UserRepository } from './datum/user.repository'\nimport { UsersController } from './users.controller'\nimport { UsersService } from './users.service'\n\n@Module({\n    controllers: [UsersController],\n    exports: [UsersService],\n    imports: [TypeOrmModule.forFeature([UserRepository])],\n    providers: [UsersService],\n})\nexport class UsersModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UsersService.html":{"url":"injectables/UsersService.html","title":"injectable - UsersService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  UsersService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/users.service.ts\n        \n\n\n            \n                Extends\n            \n            \n                    TypeOrmCrudService\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                repo\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                clear\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(repo: UserRepository)\n                    \n                \n                        \n                            \n                                Defined in src/users/users.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        repo\n                                                  \n                                                        \n                                                                        UserRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            clear\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    clear()\n                \n            \n\n\n            \n                \n                    Defined in src/users/users.service.ts:17\n                \n            \n\n\n            \n                \n                    Deletes all of the Cat records form database\n\n\n                    \n                        Returns :     {}\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            repo\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         UserRepository\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @InjectRepository(UserRepository)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/users.service.ts:10\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common'\nimport { InjectRepository } from '@nestjs/typeorm'\nimport { TypeOrmCrudService } from '@nestjsx/crud-typeorm'\n\nimport { User } from './datum/user.entity'\nimport { UserRepository } from './datum/user.repository'\n\n@Injectable()\nexport class UsersService extends TypeOrmCrudService {\n    constructor(@InjectRepository(UserRepository) public repo: UserRepository) {\n        super(repo)\n    }\n\n    /**\n     * Deletes all of the Cat records form database\n     */\n    async clear() {\n        return this.repo.clearAll()\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app.controller.ts\n            \n            controller\n            AppController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app.module.ts\n            \n            variable\n            ConfigModuleOptions\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app.module.ts\n            \n            variable\n            TypeOrmModuleOptions\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app.service.ts\n            \n            injectable\n            AppService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/cats/cats.controller.ts\n            \n            controller\n            CatsController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/cats/cats.service.ts\n            \n            injectable\n            CatsService\n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                src/cats/datum/cat.dto.ts\n            \n            class\n            CreateCatDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/cats/datum/cat.dto.ts\n            \n            class\n            GetCatResponseDto\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/cats/datum/cat.dto.ts\n            \n            class\n            UpdateCatDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/cats/datum/cat.entity.ts\n            \n            class\n            Cat\n            \n                8 %\n                (1/12)\n            \n        \n        \n            \n                \n                src/cats/datum/cat.repository.ts\n            \n            class\n            CatRepository\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                src/cron/cron.service.ts\n            \n            injectable\n            CronService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/health/health.controller.ts\n            \n            controller\n            HealthController\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            createSwagger\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            setupApp\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/users/datum/user.dto.ts\n            \n            class\n            CreateUserDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/users/datum/user.dto.ts\n            \n            class\n            GetUserResponseDto\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/users/datum/user.dto.ts\n            \n            class\n            UpdateUserDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/users/datum/user.entity.ts\n            \n            class\n            User\n            \n                11 %\n                (1/9)\n            \n        \n        \n            \n                \n                src/users/datum/user.repository.ts\n            \n            class\n            UserRepository\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                src/users/users.controller.ts\n            \n            controller\n            UsersController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/users/users.service.ts\n            \n            injectable\n            UsersService\n            \n                25 %\n                (1/4)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @hapi/joi : ^17.1.1\n        \n            @nestjs/common : ^7.5.1\n        \n            @nestjs/config : ^0.6.1\n        \n            @nestjs/core : ^7.5.1\n        \n            @nestjs/mapped-types : ^0.1.1\n        \n            @nestjs/passport : ^7.1.3\n        \n            @nestjs/platform-express : ^7.5.1\n        \n            @nestjs/schedule : ^0.4.1\n        \n            @nestjs/swagger : ^4.7.5\n        \n            @nestjs/terminus : ^7.0.1\n        \n            @nestjs/typeorm : ^7.1.5\n        \n            @nestjsx/crud : ^4.6.2\n        \n            @nestjsx/crud-request : ^4.6.2\n        \n            @nestjsx/crud-typeorm : ^4.6.2\n        \n            class-transformer : ^0.3.1\n        \n            class-validator : ^0.12.2\n        \n            express-rate-limit : ^5.2.3\n        \n            helmet : ^4.2.0\n        \n            passport : ^0.4.1\n        \n            passport-local : ^1.0.0\n        \n            reflect-metadata : ^0.1.13\n        \n            rimraf : ^3.0.2\n        \n            rxjs : ^6.6.3\n        \n            sqlite3 : ^5.0.0\n        \n            swagger-ui-express : ^4.1.5\n        \n            typeorm : ^0.2.29\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                        \n                            createSwagger   (src/.../main.ts)\n                        \n                        \n                            setupApp   (src/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            bootstrap\n                        \n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createSwagger\n                        \n                        \n                    \n                \n            \n            \n                \ncreateSwagger(app)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    app\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setupApp\n                        \n                        \n                    \n                \n            \n            \n                \nsetupApp(app, API_DEFAULT_PORT)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    app\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    API_DEFAULT_PORT\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n  A progressive Node.js framework for building efficient and scalable server-side applications.\n    \n\n\n\n\n\n\n\n\n  \n    \n  \n\n  \n\nDescription\nNest framework TypeScript starter repository.\nInstallation\n$ npm installRunning the app\n# development\n$ npm run start\n\n# watch mode\n$ npm run start:dev\n\n# production mode\n$ npm run start:prodTest\n# unit tests\n$ npm run test\n\n# e2e tests\n$ npm run test:e2e\n\n# test coverage\n$ npm run test:covSupport\nNest is an MIT-licensed open source project. It can grow thanks to the sponsors and support by the amazing backers. If you'd like to join them, please read more here.\nStay in touch\n\nAuthor - Kamil Myśliwiec\nWebsite - https://nestjs.com\nTwitter - @nestframework\n\nLicense\nNest is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CatsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CronModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UsersModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_CatsModule\n\n\n\ncluster_CatsModule_exports\n\n\n\ncluster_CatsModule_providers\n\n\n\ncluster_CronModule\n\n\n\ncluster_CronModule_providers\n\n\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_exports\n\n\n\ncluster_UsersModule_providers\n\n\n\n\nCatsModule\n\nCatsModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nCatsModule->AppModule\n\n\n\n\n\nCatsService \n\nCatsService \n\nCatsService  -->\n\nCatsModule->CatsService \n\n\n\n\n\nCronModule\n\nCronModule\n\nAppModule -->\n\nCronModule->AppModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\nUsersService \n\nUsersService \n\nUsersService  -->\n\nUsersModule->UsersService \n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nCatsService\n\nCatsService\n\nCatsModule -->\n\nCatsService->CatsModule\n\n\n\n\n\nCronService\n\nCronService\n\nCronModule -->\n\nCronService->CronModule\n\n\n\n\n\nUsersService\n\nUsersService\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        4 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    4 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    4 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    10 Classes\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ConfigModuleOptions   (src/.../app.module.ts)\n                        \n                        \n                            TypeOrmModuleOptions   (src/.../app.module.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app.module.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            ConfigModuleOptions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    isGlobal: true,\n    validationOptions: {\n        allowUnknown: true,\n        abortEarly: true,\n    },\n    validationSchema: Joi.object({\n        PORT: Joi.number().default(3000),\n        NODE_ENV: Joi.string()\n            .required()\n            .valid('development', 'production', 'test', 'provision')\n            .default('development'),\n    }),\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            TypeOrmModuleOptions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    entities: [\n        Cat,\n        User,\n        // `${__dirname}/**/*.entity.{ts,js}`,\n    ],\n    type: 'sqlite' as const,\n    database: 'database.sqlite',\n    synchronize: true,\n    logging: true,\n}\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
