var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/controllers/AppController.html",[0,1.021,1,1.552]],["body/controllers/AppController.html",[0,1.074,1,2.182,2,1.231,3,0.515,4,0.431,5,0.431,6,2.278,7,0.816,8,1.435,9,3.654,10,1.634,11,0.053,12,1.074,13,2.838,14,1.074,15,1.644,16,1.634,17,1.634,18,1.634,19,1.634,20,1.634,21,1.061,22,0.706,23,1.909,24,1.634,25,1.851,26,2.278,27,2.838,28,2.838,29,0.515,30,0.146,31,2.278,32,2.278,33,2.278,34,1.909,35,1.414,36,2.838,37,0.028,38,0.037,39,0.028]],["title/modules/AppModule.html",[40,1.021,41,1.552]],["body/modules/AppModule.html",[1,1.705,2,1.036,3,0.274,4,0.229,5,0.229,8,0.572,11,0.053,12,0.904,14,0.904,15,1.285,16,0.87,17,0.87,18,0.87,19,0.87,20,0.87,21,1.132,22,0.376,25,1.691,26,1.212,29,0.274,30,0.078,37,0.015,38,0.023,39,0.015,40,1.274,41,2.666,42,0.655,43,0.655,44,0.87,45,0.87,46,0.655,47,1.705,48,0.87,49,1.212,50,1.212,51,1.212,52,1.942,53,1.942,54,1.375,55,0.87,56,0.87,57,1.016,58,1.705,59,2.388,60,2.377,61,1.917,62,1.51,63,0.753,64,0.753,65,1.036,66,0.753,67,2.377,68,1.212,69,2.264,70,2.942,71,1.51,72,1.212,73,2.961,74,2.961,75,1.51,76,1.51,77,1.51,78,1.51,79,1.51,80,1.016,81,1.51,82,1.016,83,2.388,84,1.016,85,1.51,86,1.212,87,1.51,88,1.51,89,1.51,90,1.212,91,1.51,92,1.51,93,2.377,94,1.016,95,1.212,96,2.942,97,1.212,98,1.212,99,1.212,100,1.212,101,1.212,102,1.212,103,1.212,104,1.212,105,1.212,106,1.212,107,1.212,108,1.016,109,1.016,110,1.212,111,1.212,112,1.016,113,1.212,114,1.212,115,1.212,116,1.212,117,1.212,118,1.212,119,1.212,120,1.51,121,1.51,122,1.212,123,1.51,124,1.212,125,1.51,126,1.212,127,1.51,128,1.212,129,1.212]],["title/injectables/AppService.html",[25,1.169,130,1.021]],["body/injectables/AppService.html",[3,0.601,4,0.502,5,0.502,7,0.952,8,1.586,9,3.876,11,0.052,12,1.254,14,1.254,15,1.818,21,0.824,22,0.824,25,1.818,29,0.601,30,0.171,35,1.65,37,0.032,38,0.041,39,0.032,130,1.586,131,1.907,132,2.658,133,3.312,134,3.312,135,3.312]],["title/classes/Cat.html",[30,0.139,136,1.552]],["body/classes/Cat.html",[3,0.706,4,0.591,5,0.591,11,0.048,29,0.706,30,0.201,37,0.038,38,0.045,39,0.038,136,2.663,137,2.241,138,3.124]],["title/controllers/CatsController.html",[0,1.021,139,1.552]],["body/controllers/CatsController.html",[0,0.652,2,0.747,3,0.312,4,0.261,5,0.261,7,0.495,8,1.001,10,2.244,11,0.053,12,1.476,14,1.476,15,1.967,16,0.991,17,0.991,18,0.991,19,0.991,20,0.991,21,0.969,22,0.428,23,1.158,24,0.991,29,0.312,30,0.089,31,1.381,32,1.381,33,1.381,34,1.158,35,1.942,37,0.017,38,0.026,39,0.017,63,1.8,64,1.8,65,1.567,66,1.8,139,1.522,140,1.381,141,1.779,142,2.899,143,2.122,144,2.122,145,2.122,146,1.381,147,1.785,148,3.218,149,1.721,150,1.721,151,1.381,152,2.643,153,1.721,154,3.302,155,1.381,156,2.643,157,1.721,158,1.381,159,2.203,160,2.643,161,1.721,162,2.643,163,1.721,164,1.721,165,1.721,166,1.397,167,1.381,168,1.381,169,1.779,170,1.381,171,1.721,172,1.721,173,1.381,174,1.721,175,1.721,176,1.721,177,1.721,178,1.721,179,1.721,180,1.721,181,1.721,182,1.721]],["title/modules/CatsModule.html",[40,1.021,52,1.343]],["body/modules/CatsModule.html",[2,1.684,3,0.534,4,0.447,5,0.447,11,0.051,21,1.08,22,0.732,29,0.534,30,0.152,37,0.029,38,0.038,39,0.029,40,1.645,42,1.277,43,1.277,44,1.695,45,1.695,46,1.277,47,2.501,48,1.695,52,2.457,54,2.235,55,1.695,56,1.695,139,2.501,166,2.139,167,2.363,183,2.363,184,2.363,185,2.943,186,2.943]],["title/injectables/CatsService.html",[130,1.021,166,1.169]],["body/injectables/CatsService.html",[3,0.353,4,0.295,5,0.295,7,0.559,8,1.098,11,0.052,12,1.556,14,1.691,15,1.784,21,0.862,22,0.483,29,0.353,30,0.1,35,2.049,37,0.019,38,0.028,39,0.019,63,1.915,64,1.915,65,1.667,66,1.915,130,1.098,131,1.119,136,2.213,141,1.95,142,3.085,143,2.327,144,2.327,145,2.327,146,2.327,147,1.784,151,2.327,154,3.46,155,2.327,158,2.327,159,2.226,166,1.258,168,1.56,169,1.95,170,1.56,173,1.56,187,1.56,188,1.944,189,1.944,190,4.691,191,1.944,192,1.944,193,1.944,194,4.11,195,1.944,196,1.308,197,1.944,198,1.944]],["title/classes/CreateCatDto.html",[30,0.139,147,1.169]],["body/classes/CreateCatDto.html",[3,0.701,4,0.586,5,0.586,11,0.048,29,0.701,30,0.199,37,0.038,38,0.045,39,0.038,137,2.226,147,1.999,199,3.103,200,2.601]],["title/modules/CronModule.html",[40,1.021,53,1.343]],["body/modules/CronModule.html",[3,0.561,4,0.469,5,0.469,11,0.051,21,0.997,22,0.769,29,0.561,30,0.159,37,0.03,38,0.039,39,0.03,40,1.684,42,1.341,43,1.341,44,1.78,45,1.78,46,1.341,47,2.561,48,1.78,53,2.49,54,2.308,55,1.78,56,1.78,201,2.481,202,2.481,203,2.49,204,3.09,205,3.09]],["title/injectables/CronService.html",[130,1.021,203,1.343]],["body/injectables/CronService.html",[3,0.408,4,0.342,5,0.342,7,0.647,8,1.222,10,2.172,11,0.053,12,1.56,14,1.428,21,0.803,22,0.56,29,0.408,30,0.116,34,2.538,37,0.022,38,0.032,39,0.022,69,2.538,82,1.515,130,1.222,131,1.296,196,2.171,203,1.608,206,1.807,207,3.227,208,3.029,209,4.121,210,4.121,211,4.121,212,4.121,213,3.227,214,2.251,215,3.227,216,2.251,217,3.227,218,2.251,219,1.807,220,1.807,221,3.227,222,2.251,223,2.251,224,2.251,225,2.251,226,3.772,227,2.251,228,2.251,229,2.251,230,3.227,231,2.251,232,2.251]],["title/controllers/HealthController.html",[0,1.021,58,1.552]],["body/controllers/HealthController.html",[0,0.688,2,0.788,3,0.33,4,0.276,5,0.276,7,0.522,8,1.26,10,1.046,11,0.053,12,1.26,14,1.406,15,1.444,16,1.046,17,1.046,18,1.046,19,1.046,20,1.046,21,0.924,22,0.452,23,1.222,24,1.046,29,0.33,30,0.094,35,0.905,37,0.018,38,0.027,39,0.018,58,2.139,60,3.205,61,2.211,63,0.905,64,0.905,65,0.788,66,0.905,67,3.205,68,1.458,69,2.499,70,3.373,80,1.222,84,1.222,122,2.211,124,1.458,126,1.458,128,1.458,129,1.458,208,2.672,233,1.458,234,1.816,235,3.714,236,1.816,237,1.816,238,1.816,239,1.816,240,2.755,241,2.755,242,2.755,243,2.755,244,1.816,245,1.816,246,1.816,247,1.816,248,1.816,249,1.816,250,2.755,251,1.816,252,1.816,253,1.816,254,1.816,255,1.816,256,1.816,257,1.816,258,2.755,259,2.755,260,1.816,261,1.816,262,2.755,263,1.816,264,1.816,265,1.816,266,1.816,267,1.816,268,1.458,269,1.816,270,1.816,271,2.755,272,1.458,273,1.816,274,1.816,275,1.816,276,1.816,277,1.816,278,1.816,279,1.816]],["title/classes/UpdateCatDto.html",[30,0.139,159,1.343]],["body/classes/UpdateCatDto.html",[3,0.639,4,0.534,5,0.534,11,0.051,21,1.083,29,0.639,30,0.182,37,0.034,38,0.043,39,0.034,137,2.028,141,2.37,147,1.528,159,2.17,169,2.37,200,2.37,280,2.827,281,3.522,282,2.827,283,2.827,284,3.522,285,3.522]],["title/coverage.html",[286,2.463]],["body/coverage.html",[0,1.493,1,1.404,5,0.37,6,1.958,11,0.051,25,1.058,30,0.203,37,0.024,38,0.033,39,0.024,46,1.058,57,2.298,58,1.404,65,1.058,94,1.641,112,1.641,130,1.493,132,1.958,136,1.404,138,1.958,139,1.404,140,1.958,147,1.058,159,1.215,166,1.058,187,1.958,196,1.641,199,1.958,200,2.298,203,1.215,206,1.958,233,1.958,268,3.165,280,1.958,286,1.641,287,2.439,288,2.439,289,2.439,290,5.202,291,3.416,292,3.416,293,4.883,294,3.416,295,2.439,296,2.439,297,3.165,298,1.958,299,1.958,300,2.439,301,2.439]],["title/dependencies.html",[43,1.404,302,2.26]],["body/dependencies.html",[11,0.053,22,0.618,24,1.43,30,0.178,37,0.024,38,0.034,39,0.024,43,1.077,80,1.67,82,1.67,84,1.67,86,1.993,90,1.993,282,1.993,283,1.993,303,2.482,304,3.98,305,2.482,306,2.482,307,2.482,308,2.482,309,2.482,310,2.482,311,3.98,312,3.458,313,2.482,314,2.482,315,2.482,316,3.98,317,3.98,318,2.482,319,3.458,320,2.482,321,2.482,322,2.482,323,2.482,324,2.482,325,2.482,326,2.482,327,2.482,328,2.482,329,3.458,330,2.482,331,2.482,332,2.482,333,2.482,334,2.482,335,2.482,336,2.482,337,2.482,338,2.482,339,2.482,340,2.482,341,2.482,342,2.482,343,2.482,344,2.482]],["title/miscellaneous/functions.html",[345,1.302,346,2.598]],["body/miscellaneous/functions.html",[7,0.993,11,0.048,37,0.034,38,0.042,39,0.034,46,2.033,63,2.144,64,2.144,66,2.144,297,2.774,298,3.454,299,3.454,345,1.99,346,2.774,347,4.685,348,3.456,349,3.454,350,3.456,351,4.302]],["title/index.html",[7,0.65,352,2.26,353,2.26]],["body/index.html",[4,0.375,11,0.051,37,0.024,38,0.034,39,0.024,72,1.984,108,1.663,109,2.32,272,3.187,286,1.663,349,1.984,354,2.471,355,2.471,356,3.448,357,2.471,358,2.471,359,2.471,360,2.471,361,2.471,362,2.471,363,2.471,364,2.471,365,2.471,366,2.471,367,4.803,368,2.471,369,2.471,370,4.68,371,2.471,372,2.471,373,3.448,374,2.471,375,2.471,376,2.471,377,3.448,378,2.471,379,2.471,380,2.471,381,3.448,382,3.448,383,2.471,384,2.471,385,2.471,386,2.471,387,2.471,388,1.984,389,2.471,390,2.471,391,2.471,392,2.471,393,2.471,394,2.471,395,2.471,396,2.471,397,2.471,398,2.471,399,2.471,400,2.471,401,2.471,402,2.471,403,2.471,404,2.471,405,2.471,406,2.471]],["title/modules.html",[42,1.588]],["body/modules.html",[11,0.044,37,0.037,38,0.044,39,0.037,41,2.151,42,1.621,52,1.861,53,1.861,388,3.893,407,4.849,408,4.849,409,4.849]],["title/overview.html",[410,2.938]],["body/overview.html",[2,1.257,11,0.049,25,1.87,37,0.028,38,0.038,39,0.028,40,1.097,41,2.928,42,1.257,43,1.257,44,1.668,45,1.668,46,1.257,47,1.668,48,1.668,49,2.326,50,2.326,51,2.326,52,2.38,53,2.38,54,2.212,55,1.668,56,1.668,131,1.668,137,1.668,166,1.87,183,2.326,184,2.326,201,2.326,202,2.326,203,2.148,410,2.326,411,4.589]],["title/miscellaneous/variables.html",[345,1.302,412,2.598]],["body/miscellaneous/variables.html",[7,0.833,11,0.052,37,0.028,38,0.038,39,0.028,57,1.949,65,1.87,93,2.326,94,2.585,95,2.326,96,3.833,97,2.326,98,2.326,99,2.326,100,2.326,101,2.326,102,2.326,103,2.326,104,2.326,105,2.326,106,2.326,107,2.326,108,1.949,109,1.949,110,2.326,111,2.326,112,2.585,113,2.326,114,2.326,115,2.326,116,2.326,117,2.326,118,2.326,119,2.326,219,3.084,220,3.084,345,1.668,412,2.326,413,3.841,414,3.841]]],"invertedIndex":[["",{"_index":11,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Cat.html":{},"controllers/CatsController.html":{},"modules/CatsModule.html":{},"injectables/CatsService.html":{},"classes/CreateCatDto.html":{},"modules/CronModule.html":{},"injectables/CronService.html":{},"controllers/HealthController.html":{},"classes/UpdateCatDto.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":290,"title":{},"body":{"coverage.html":{}}}],["0.1.1",{"_index":307,"title":{},"body":{"dependencies.html":{}}}],["0.1.13",{"_index":334,"title":{},"body":{"dependencies.html":{}}}],["0.12.2",{"_index":323,"title":{},"body":{"dependencies.html":{}}}],["0.2.29",{"_index":344,"title":{},"body":{"dependencies.html":{}}}],["0.3.1",{"_index":321,"title":{},"body":{"dependencies.html":{}}}],["0.4.1",{"_index":312,"title":{},"body":{"dependencies.html":{}}}],["0.6.1",{"_index":305,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":293,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":291,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":296,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":295,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":294,"title":{},"body":{"coverage.html":{}}}],["1.0.0",{"_index":331,"title":{},"body":{"dependencies.html":{}}}],["100",{"_index":229,"title":{},"body":{"injectables/CronService.html":{}}}],["17.1.1",{"_index":303,"title":{},"body":{"dependencies.html":{}}}],["3",{"_index":411,"title":{},"body":{"overview.html":{}}}],["3.0.2",{"_index":336,"title":{},"body":{"dependencies.html":{}}}],["4.1.5",{"_index":343,"title":{},"body":{"dependencies.html":{}}}],["4.2.0",{"_index":328,"title":{},"body":{"dependencies.html":{}}}],["4.6.2",{"_index":317,"title":{},"body":{"dependencies.html":{}}}],["4.7.5",{"_index":313,"title":{},"body":{"dependencies.html":{}}}],["5.0.0",{"_index":340,"title":{},"body":{"dependencies.html":{}}}],["5.2.3",{"_index":326,"title":{},"body":{"dependencies.html":{}}}],["50",{"_index":232,"title":{},"body":{"injectables/CronService.html":{}}}],["6.6.3",{"_index":338,"title":{},"body":{"dependencies.html":{}}}],["60",{"_index":228,"title":{},"body":{"injectables/CronService.html":{}}}],["7.0.1",{"_index":314,"title":{},"body":{"dependencies.html":{}}}],["7.1.3",{"_index":309,"title":{},"body":{"dependencies.html":{}}}],["7.1.5",{"_index":315,"title":{},"body":{"dependencies.html":{}}}],["7.5.1",{"_index":304,"title":{},"body":{"dependencies.html":{}}}],["__dirname}/**/*.entity.{ts,js",{"_index":114,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["abortearly",{"_index":99,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["above",{"_index":264,"title":{},"body":{"controllers/HealthController.html":{}}}],["access,no",{"_index":78,"title":{},"body":{"modules/AppModule.html":{}}}],["action",{"_index":194,"title":{},"body":{"injectables/CatsService.html":{}}}],["adds",{"_index":195,"title":{},"body":{"injectables/CatsService.html":{}}}],["allowunknown",{"_index":98,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["amazing",{"_index":389,"title":{},"body":{"index.html":{}}}],["api_default_port",{"_index":351,"title":{},"body":{"miscellaneous/functions.html":{}}}],["apitags",{"_index":23,"title":{},"body":{"controllers/AppController.html":{},"controllers/CatsController.html":{},"controllers/HealthController.html":{}}}],["apitags(appcontroller.name",{"_index":28,"title":{},"body":{"controllers/AppController.html":{}}}],["apitags(catscontroller.name",{"_index":172,"title":{},"body":{"controllers/CatsController.html":{}}}],["apitags(healthcontroller.name",{"_index":246,"title":{},"body":{"controllers/HealthController.html":{}}}],["app",{"_index":349,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["app.controller",{"_index":91,"title":{},"body":{"modules/AppModule.html":{}}}],["app.service",{"_index":26,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["appcontroller",{"_index":1,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["application",{"_index":255,"title":{},"body":{"controllers/HealthController.html":{}}}],["applications",{"_index":362,"title":{},"body":{"index.html":{}}}],["applicationshutdown",{"_index":128,"title":{},"body":{"modules/AppModule.html":{},"controllers/HealthController.html":{}}}],["appmodule",{"_index":41,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appservice",{"_index":25,"title":{"injectables/AppService.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"coverage.html":{},"overview.html":{}}}],["assignment,@typescript",{"_index":75,"title":{},"body":{"modules/AppModule.html":{}}}],["asynchronous",{"_index":270,"title":{},"body":{"controllers/HealthController.html":{}}}],["author",{"_index":399,"title":{},"body":{"index.html":{}}}],["awaits",{"_index":269,"title":{},"body":{"controllers/HealthController.html":{}}}],["backers",{"_index":390,"title":{},"body":{"index.html":{}}}],["before",{"_index":19,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/CatsController.html":{},"controllers/HealthController.html":{}}}],["beforeapplicationshutdown",{"_index":261,"title":{},"body":{"controllers/HealthController.html":{}}}],["body",{"_index":162,"title":{},"body":{"controllers/CatsController.html":{}}}],["bootstrap",{"_index":46,"title":{},"body":{"modules/AppModule.html":{},"modules/CatsModule.html":{},"modules/CronModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["browse",{"_index":409,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":407,"title":{},"body":{"modules.html":{}}}],["building",{"_index":357,"title":{},"body":{"index.html":{}}}],["call",{"_index":258,"title":{},"body":{"controllers/HealthController.html":{}}}],["call,@typescript",{"_index":76,"title":{},"body":{"modules/AppModule.html":{}}}],["cat",{"_index":136,"title":{"classes/Cat.html":{}},"body":{"classes/Cat.html":{},"injectables/CatsService.html":{},"coverage.html":{}}}],["cat.dto",{"_index":169,"title":{},"body":{"controllers/CatsController.html":{},"injectables/CatsService.html":{},"classes/UpdateCatDto.html":{}}}],["cat.dto.ts",{"_index":200,"title":{},"body":{"classes/CreateCatDto.html":{},"classes/UpdateCatDto.html":{},"coverage.html":{}}}],["cats",{"_index":173,"title":{},"body":{"controllers/CatsController.html":{},"injectables/CatsService.html":{}}}],["cats.controller",{"_index":186,"title":{},"body":{"modules/CatsModule.html":{}}}],["cats.service",{"_index":167,"title":{},"body":{"controllers/CatsController.html":{},"modules/CatsModule.html":{}}}],["cats/cats.module",{"_index":92,"title":{},"body":{"modules/AppModule.html":{}}}],["catscontroller",{"_index":139,"title":{"controllers/CatsController.html":{}},"body":{"controllers/CatsController.html":{},"modules/CatsModule.html":{},"coverage.html":{}}}],["catsmodule",{"_index":52,"title":{"modules/CatsModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CatsModule.html":{},"modules.html":{},"overview.html":{}}}],["catsservice",{"_index":166,"title":{"injectables/CatsService.html":{}},"body":{"controllers/CatsController.html":{},"modules/CatsModule.html":{},"injectables/CatsService.html":{},"coverage.html":{},"overview.html":{}}}],["check",{"_index":235,"title":{},"body":{"controllers/HealthController.html":{}}}],["class",{"_index":30,"title":{"classes/Cat.html":{},"classes/CreateCatDto.html":{},"classes/UpdateCatDto.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Cat.html":{},"controllers/CatsController.html":{},"modules/CatsModule.html":{},"injectables/CatsService.html":{},"classes/CreateCatDto.html":{},"modules/CronModule.html":{},"injectables/CronService.html":{},"controllers/HealthController.html":{},"classes/UpdateCatDto.html":{},"coverage.html":{},"dependencies.html":{}}}],["classes",{"_index":137,"title":{},"body":{"classes/Cat.html":{},"classes/CreateCatDto.html":{},"classes/UpdateCatDto.html":{},"overview.html":{}}}],["cluster_appmodule",{"_index":49,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":51,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":50,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_catsmodule",{"_index":183,"title":{},"body":{"modules/CatsModule.html":{},"overview.html":{}}}],["cluster_catsmodule_providers",{"_index":184,"title":{},"body":{"modules/CatsModule.html":{},"overview.html":{}}}],["cluster_cronmodule",{"_index":201,"title":{},"body":{"modules/CronModule.html":{},"overview.html":{}}}],["cluster_cronmodule_providers",{"_index":202,"title":{},"body":{"modules/CronModule.html":{},"overview.html":{}}}],["config",{"_index":250,"title":{},"body":{"controllers/HealthController.html":{}}}],["configmodule",{"_index":79,"title":{},"body":{"modules/AppModule.html":{}}}],["configmodule.forroot(configmoduleoptions",{"_index":120,"title":{},"body":{"modules/AppModule.html":{}}}],["configmoduleoptions",{"_index":94,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["configservice",{"_index":240,"title":{},"body":{"controllers/HealthController.html":{}}}],["console.error",{"_index":127,"title":{},"body":{"modules/AppModule.html":{}}}],["console.info(`moduleinit",{"_index":125,"title":{},"body":{"modules/AppModule.html":{}}}],["console.log",{"_index":279,"title":{},"body":{"controllers/HealthController.html":{}}}],["console.log(`moduleinit",{"_index":277,"title":{},"body":{"controllers/HealthController.html":{}}}],["const",{"_index":93,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["constructor",{"_index":248,"title":{},"body":{"controllers/HealthController.html":{}}}],["constructor(private",{"_index":33,"title":{},"body":{"controllers/AppController.html":{},"controllers/CatsController.html":{}}}],["continue",{"_index":273,"title":{},"body":{"controllers/HealthController.html":{}}}],["controller",{"_index":0,"title":{"controllers/AppController.html":{},"controllers/CatsController.html":{},"controllers/HealthController.html":{}},"body":{"controllers/AppController.html":{},"controllers/CatsController.html":{},"controllers/HealthController.html":{},"coverage.html":{}}}],["controller('health",{"_index":247,"title":{},"body":{"controllers/HealthController.html":{}}}],["controller(appcontroller.path",{"_index":27,"title":{},"body":{"controllers/AppController.html":{}}}],["controller(catscontroller.path",{"_index":171,"title":{},"body":{"controllers/CatsController.html":{}}}],["controllers",{"_index":2,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/CatsController.html":{},"modules/CatsModule.html":{},"controllers/HealthController.html":{},"overview.html":{}}}],["corresponding",{"_index":265,"title":{},"body":{"controllers/HealthController.html":{}}}],["coverage",{"_index":286,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["create",{"_index":141,"title":{},"body":{"controllers/CatsController.html":{},"injectables/CatsService.html":{},"classes/UpdateCatDto.html":{}}}],["create(@body",{"_index":174,"title":{},"body":{"controllers/CatsController.html":{}}}],["create(createcatdto",{"_index":146,"title":{},"body":{"controllers/CatsController.html":{},"injectables/CatsService.html":{}}}],["createcatdto",{"_index":147,"title":{"classes/CreateCatDto.html":{}},"body":{"controllers/CatsController.html":{},"injectables/CatsService.html":{},"classes/CreateCatDto.html":{},"classes/UpdateCatDto.html":{},"coverage.html":{}}}],["createswagger",{"_index":298,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["createswagger(app",{"_index":348,"title":{},"body":{"miscellaneous/functions.html":{}}}],["cron",{"_index":223,"title":{},"body":{"injectables/CronService.html":{}}}],["cron('60",{"_index":213,"title":{},"body":{"injectables/CronService.html":{}}}],["cronmodule",{"_index":53,"title":{"modules/CronModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CronModule.html":{},"modules.html":{},"overview.html":{}}}],["cronservice",{"_index":203,"title":{"injectables/CronService.html":{}},"body":{"modules/CronModule.html":{},"injectables/CronService.html":{},"coverage.html":{},"overview.html":{}}}],["database",{"_index":116,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["database.sqlite",{"_index":117,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["datum/create",{"_index":168,"title":{},"body":{"controllers/CatsController.html":{},"injectables/CatsService.html":{}}}],["datum/update",{"_index":170,"title":{},"body":{"controllers/CatsController.html":{},"injectables/CatsService.html":{}}}],["declarations",{"_index":45,"title":{},"body":{"modules/AppModule.html":{},"modules/CatsModule.html":{},"modules/CronModule.html":{},"overview.html":{}}}],["decorators",{"_index":10,"title":{},"body":{"controllers/AppController.html":{},"controllers/CatsController.html":{},"injectables/CronService.html":{},"controllers/HealthController.html":{}}}],["default",{"_index":219,"title":{},"body":{"injectables/CronService.html":{},"miscellaneous/variables.html":{}}}],["default('development",{"_index":111,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["define",{"_index":20,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/CatsController.html":{},"controllers/HealthController.html":{}}}],["defined",{"_index":12,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/CatsController.html":{},"injectables/CatsService.html":{},"injectables/CronService.html":{},"controllers/HealthController.html":{}}}],["delete",{"_index":165,"title":{},"body":{"controllers/CatsController.html":{}}}],["delete(':id",{"_index":156,"title":{},"body":{"controllers/CatsController.html":{}}}],["dependencies",{"_index":43,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/CatsModule.html":{},"modules/CronModule.html":{},"dependencies.html":{},"overview.html":{}}}],["described",{"_index":263,"title":{},"body":{"controllers/HealthController.html":{}}}],["description",{"_index":363,"title":{},"body":{"index.html":{}}}],["development",{"_index":369,"title":{},"body":{"index.html":{}}}],["disable",{"_index":17,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/CatsController.html":{},"controllers/HealthController.html":{}}}],["dns",{"_index":249,"title":{},"body":{"controllers/HealthController.html":{}}}],["dnshealthindicator",{"_index":241,"title":{},"body":{"controllers/HealthController.html":{}}}],["docs",{"_index":253,"title":{},"body":{"controllers/HealthController.html":{}}}],["documentation",{"_index":287,"title":{},"body":{"coverage.html":{}}}],["e2e",{"_index":378,"title":{},"body":{"index.html":{}}}],["efficient",{"_index":358,"title":{},"body":{"index.html":{}}}],["entities",{"_index":113,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["eslint",{"_index":16,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/CatsController.html":{},"controllers/HealthController.html":{}}}],["eslint/no",{"_index":73,"title":{},"body":{"modules/AppModule.html":{}}}],["export",{"_index":29,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Cat.html":{},"controllers/CatsController.html":{},"modules/CatsModule.html":{},"injectables/CatsService.html":{},"classes/CreateCatDto.html":{},"modules/CronModule.html":{},"injectables/CronService.html":{},"controllers/HealthController.html":{},"classes/UpdateCatDto.html":{}}}],["exports",{"_index":48,"title":{},"body":{"modules/AppModule.html":{},"modules/CatsModule.html":{},"modules/CronModule.html":{},"overview.html":{}}}],["express",{"_index":311,"title":{},"body":{"dependencies.html":{}}}],["extends",{"_index":284,"title":{},"body":{"classes/UpdateCatDto.html":{}}}],["file",{"_index":5,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Cat.html":{},"controllers/CatsController.html":{},"modules/CatsModule.html":{},"injectables/CatsService.html":{},"classes/CreateCatDto.html":{},"modules/CronModule.html":{},"injectables/CronService.html":{},"controllers/HealthController.html":{},"classes/UpdateCatDto.html":{},"coverage.html":{}}}],["findall",{"_index":142,"title":{},"body":{"controllers/CatsController.html":{},"injectables/CatsService.html":{}}}],["findone",{"_index":143,"title":{},"body":{"controllers/CatsController.html":{},"injectables/CatsService.html":{}}}],["findone(@param('id",{"_index":177,"title":{},"body":{"controllers/CatsController.html":{}}}],["findone(id",{"_index":151,"title":{},"body":{"controllers/CatsController.html":{},"injectables/CatsService.html":{}}}],["first",{"_index":266,"title":{},"body":{"controllers/HealthController.html":{}}}],["framework",{"_index":356,"title":{},"body":{"index.html":{}}}],["function",{"_index":268,"title":{},"body":{"controllers/HealthController.html":{},"coverage.html":{}}}],["functions",{"_index":346,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["get(':id",{"_index":152,"title":{},"body":{"controllers/CatsController.html":{}}}],["get()@healthcheck",{"_index":236,"title":{},"body":{"controllers/HealthController.html":{}}}],["gethello",{"_index":9,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["getting",{"_index":352,"title":{"index.html":{}},"body":{}}],["grow",{"_index":385,"title":{},"body":{"index.html":{}}}],["handlecron",{"_index":210,"title":{},"body":{"injectables/CronService.html":{}}}],["handleinterval",{"_index":211,"title":{},"body":{"injectables/CronService.html":{}}}],["handletimeout",{"_index":212,"title":{},"body":{"injectables/CronService.html":{}}}],["hapi/joi",{"_index":90,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["health",{"_index":122,"title":{},"body":{"modules/AppModule.html":{},"controllers/HealthController.html":{}}}],["healthcheck",{"_index":242,"title":{},"body":{"controllers/HealthController.html":{}}}],["healthcheckservice",{"_index":243,"title":{},"body":{"controllers/HealthController.html":{}}}],["healthcontroller",{"_index":58,"title":{"controllers/HealthController.html":{}},"body":{"modules/AppModule.html":{},"controllers/HealthController.html":{},"coverage.html":{}}}],["hello",{"_index":134,"title":{},"body":{"injectables/AppService.html":{}}}],["helmet",{"_index":327,"title":{},"body":{"dependencies.html":{}}}],["here",{"_index":396,"title":{},"body":{"index.html":{}}}],["https://docs.nestjs.com",{"_index":254,"title":{},"body":{"controllers/HealthController.html":{}}}],["https://nestjs.com",{"_index":403,"title":{},"body":{"index.html":{}}}],["id",{"_index":154,"title":{},"body":{"controllers/CatsController.html":{},"injectables/CatsService.html":{}}}],["identifier",{"_index":288,"title":{},"body":{"coverage.html":{}}}],["implements",{"_index":124,"title":{},"body":{"modules/AppModule.html":{},"controllers/HealthController.html":{}}}],["import",{"_index":21,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/CatsController.html":{},"modules/CatsModule.html":{},"injectables/CatsService.html":{},"modules/CronModule.html":{},"injectables/CronService.html":{},"controllers/HealthController.html":{},"classes/UpdateCatDto.html":{}}}],["imports",{"_index":59,"title":{},"body":{"modules/AppModule.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/CatsController.html":{},"injectables/CatsService.html":{},"injectables/CronService.html":{},"controllers/HealthController.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Cat.html":{},"controllers/CatsController.html":{},"modules/CatsModule.html":{},"injectables/CatsService.html":{},"classes/CreateCatDto.html":{},"modules/CronModule.html":{},"injectables/CronService.html":{},"controllers/HealthController.html":{},"classes/UpdateCatDto.html":{}}}],["initialized",{"_index":126,"title":{},"body":{"modules/AppModule.html":{},"controllers/HealthController.html":{}}}],["injectable",{"_index":130,"title":{"injectables/AppService.html":{},"injectables/CatsService.html":{},"injectables/CronService.html":{}},"body":{"injectables/AppService.html":{},"injectables/CatsService.html":{},"injectables/CronService.html":{},"coverage.html":{}}}],["injectables",{"_index":131,"title":{},"body":{"injectables/AppService.html":{},"injectables/CatsService.html":{},"injectables/CronService.html":{},"overview.html":{}}}],["installation",{"_index":366,"title":{},"body":{"index.html":{}}}],["installrunning",{"_index":368,"title":{},"body":{"index.html":{}}}],["interval",{"_index":224,"title":{},"body":{"injectables/CronService.html":{}}}],["interval(100000",{"_index":215,"title":{},"body":{"injectables/CronService.html":{}}}],["isglobal",{"_index":95,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["joi",{"_index":89,"title":{},"body":{"modules/AppModule.html":{}}}],["joi.number().default(3000",{"_index":103,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["joi.object",{"_index":101,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["joi.string",{"_index":105,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["join",{"_index":392,"title":{},"body":{"index.html":{}}}],["kamil",{"_index":400,"title":{},"body":{"index.html":{}}}],["legend",{"_index":44,"title":{},"body":{"modules/AppModule.html":{},"modules/CatsModule.html":{},"modules/CronModule.html":{},"overview.html":{}}}],["license",{"_index":406,"title":{},"body":{"index.html":{}}}],["licensed",{"_index":382,"title":{},"body":{"index.html":{}}}],["limit",{"_index":325,"title":{},"body":{"dependencies.html":{}}}],["line",{"_index":245,"title":{},"body":{"controllers/HealthController.html":{}}}],["local",{"_index":330,"title":{},"body":{"dependencies.html":{}}}],["logger",{"_index":209,"title":{},"body":{"injectables/CronService.html":{}}}],["logger(cronservice.name",{"_index":221,"title":{},"body":{"injectables/CronService.html":{}}}],["logging",{"_index":119,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["matching",{"_index":38,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Cat.html":{},"controllers/CatsController.html":{},"modules/CatsModule.html":{},"injectables/CatsService.html":{},"classes/CreateCatDto.html":{},"modules/CronModule.html":{},"injectables/CronService.html":{},"controllers/HealthController.html":{},"classes/UpdateCatDto.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["member",{"_index":77,"title":{},"body":{"modules/AppModule.html":{}}}],["metadata",{"_index":333,"title":{},"body":{"dependencies.html":{}}}],["methods",{"_index":8,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/CatsController.html":{},"injectables/CatsService.html":{},"injectables/CronService.html":{},"controllers/HealthController.html":{}}}],["miscellaneous",{"_index":345,"title":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":381,"title":{},"body":{"index.html":{}}}],["mode",{"_index":373,"title":{},"body":{"index.html":{}}}],["module",{"_index":40,"title":{"modules/AppModule.html":{},"modules/CatsModule.html":{},"modules/CronModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CatsModule.html":{},"modules/CronModule.html":{},"overview.html":{}}}],["modules",{"_index":42,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/CatsModule.html":{},"modules/CronModule.html":{},"modules.html":{},"overview.html":{}}}],["more",{"_index":395,"title":{},"body":{"index.html":{}}}],["myśliwiec",{"_index":401,"title":{},"body":{"index.html":{}}}],["name",{"_index":64,"title":{},"body":{"modules/AppModule.html":{},"controllers/CatsController.html":{},"injectables/CatsService.html":{},"controllers/HealthController.html":{},"miscellaneous/functions.html":{}}}],["nest",{"_index":272,"title":{},"body":{"controllers/HealthController.html":{},"index.html":{}}}],["nestframework",{"_index":405,"title":{},"body":{"index.html":{}}}],["nestjs/common",{"_index":22,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/CatsController.html":{},"modules/CatsModule.html":{},"injectables/CatsService.html":{},"modules/CronModule.html":{},"injectables/CronService.html":{},"controllers/HealthController.html":{},"dependencies.html":{}}}],["nestjs/config",{"_index":80,"title":{},"body":{"modules/AppModule.html":{},"controllers/HealthController.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":306,"title":{},"body":{"dependencies.html":{}}}],["nestjs/mapped",{"_index":282,"title":{},"body":{"classes/UpdateCatDto.html":{},"dependencies.html":{}}}],["nestjs/passport",{"_index":308,"title":{},"body":{"dependencies.html":{}}}],["nestjs/platform",{"_index":310,"title":{},"body":{"dependencies.html":{}}}],["nestjs/schedule",{"_index":82,"title":{},"body":{"modules/AppModule.html":{},"injectables/CronService.html":{},"dependencies.html":{}}}],["nestjs/swagger",{"_index":24,"title":{},"body":{"controllers/AppController.html":{},"controllers/CatsController.html":{},"controllers/HealthController.html":{},"dependencies.html":{}}}],["nestjs/terminus",{"_index":84,"title":{},"body":{"modules/AppModule.html":{},"controllers/HealthController.html":{},"dependencies.html":{}}}],["nestjs/typeorm",{"_index":86,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["nestjsx/crud",{"_index":316,"title":{},"body":{"dependencies.html":{}}}],["new",{"_index":196,"title":{},"body":{"injectables/CatsService.html":{},"injectables/CronService.html":{},"coverage.html":{}}}],["next",{"_index":244,"title":{},"body":{"controllers/HealthController.html":{}}}],["node.js",{"_index":355,"title":{},"body":{"index.html":{}}}],["node_env",{"_index":104,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["npm",{"_index":367,"title":{},"body":{"index.html":{}}}],["number",{"_index":190,"title":{},"body":{"injectables/CatsService.html":{}}}],["object",{"_index":414,"title":{},"body":{"miscellaneous/variables.html":{}}}],["onapplicationshutdown",{"_index":60,"title":{},"body":{"modules/AppModule.html":{},"controllers/HealthController.html":{}}}],["onapplicationshutdown(signal",{"_index":61,"title":{},"body":{"modules/AppModule.html":{},"controllers/HealthController.html":{}}}],["once",{"_index":231,"title":{},"body":{"injectables/CronService.html":{}}}],["onmoduledestroy",{"_index":260,"title":{},"body":{"controllers/HealthController.html":{}}}],["onmoduleinit",{"_index":70,"title":{},"body":{"modules/AppModule.html":{},"controllers/HealthController.html":{}}}],["open",{"_index":383,"title":{},"body":{"index.html":{}}}],["optional",{"_index":66,"title":{},"body":{"modules/AppModule.html":{},"controllers/CatsController.html":{},"injectables/CatsService.html":{},"controllers/HealthController.html":{},"miscellaneous/functions.html":{}}}],["out",{"_index":56,"title":{},"body":{"modules/AppModule.html":{},"modules/CatsModule.html":{},"modules/CronModule.html":{},"overview.html":{}}}],["overview",{"_index":410,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":302,"title":{"dependencies.html":{}},"body":{}}],["param",{"_index":164,"title":{},"body":{"controllers/CatsController.html":{}}}],["parameter",{"_index":267,"title":{},"body":{"controllers/HealthController.html":{}}}],["parameters",{"_index":63,"title":{},"body":{"modules/AppModule.html":{},"controllers/CatsController.html":{},"injectables/CatsService.html":{},"controllers/HealthController.html":{},"miscellaneous/functions.html":{}}}],["partialtype",{"_index":281,"title":{},"body":{"classes/UpdateCatDto.html":{}}}],["partialtype(createcatdto",{"_index":285,"title":{},"body":{"classes/UpdateCatDto.html":{}}}],["passport",{"_index":329,"title":{},"body":{"dependencies.html":{}}}],["path",{"_index":32,"title":{},"body":{"controllers/AppController.html":{},"controllers/CatsController.html":{}}}],["please",{"_index":393,"title":{},"body":{"index.html":{}}}],["port",{"_index":102,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["post",{"_index":148,"title":{},"body":{"controllers/CatsController.html":{}}}],["prefix",{"_index":234,"title":{},"body":{"controllers/HealthController.html":{}}}],["private",{"_index":208,"title":{},"body":{"injectables/CronService.html":{},"controllers/HealthController.html":{}}}],["production",{"_index":108,"title":{},"body":{"modules/AppModule.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["progressive",{"_index":354,"title":{},"body":{"index.html":{}}}],["project",{"_index":384,"title":{},"body":{"index.html":{}}}],["promise",{"_index":271,"title":{},"body":{"controllers/HealthController.html":{}}}],["properties",{"_index":207,"title":{},"body":{"injectables/CronService.html":{}}}],["providers",{"_index":47,"title":{},"body":{"modules/AppModule.html":{},"modules/CatsModule.html":{},"modules/CronModule.html":{},"overview.html":{}}}],["provision",{"_index":110,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["put",{"_index":163,"title":{},"body":{"controllers/CatsController.html":{}}}],["put(':id",{"_index":160,"title":{},"body":{"controllers/CatsController.html":{}}}],["rate",{"_index":324,"title":{},"body":{"dependencies.html":{}}}],["read",{"_index":394,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":34,"title":{},"body":{"controllers/AppController.html":{},"controllers/CatsController.html":{},"injectables/CronService.html":{}}}],["receives",{"_index":256,"title":{},"body":{"controllers/HealthController.html":{}}}],["reflect",{"_index":332,"title":{},"body":{"dependencies.html":{}}}],["registered",{"_index":259,"title":{},"body":{"controllers/HealthController.html":{}}}],["rejected",{"_index":276,"title":{},"body":{"controllers/HealthController.html":{}}}],["remove",{"_index":144,"title":{},"body":{"controllers/CatsController.html":{},"injectables/CatsService.html":{}}}],["remove(@param('id",{"_index":181,"title":{},"body":{"controllers/CatsController.html":{}}}],["remove(id",{"_index":155,"title":{},"body":{"controllers/CatsController.html":{},"injectables/CatsService.html":{}}}],["removes",{"_index":198,"title":{},"body":{"injectables/CatsService.html":{}}}],["repository",{"_index":365,"title":{},"body":{"index.html":{}}}],["request",{"_index":318,"title":{},"body":{"dependencies.html":{}}}],["required",{"_index":106,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["reset",{"_index":55,"title":{},"body":{"modules/AppModule.html":{},"modules/CatsModule.html":{},"modules/CronModule.html":{},"overview.html":{}}}],["resolved",{"_index":275,"title":{},"body":{"controllers/HealthController.html":{}}}],["result",{"_index":37,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Cat.html":{},"controllers/CatsController.html":{},"modules/CatsModule.html":{},"injectables/CatsService.html":{},"classes/CreateCatDto.html":{},"modules/CronModule.html":{},"injectables/CronService.html":{},"controllers/HealthController.html":{},"classes/UpdateCatDto.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["results",{"_index":39,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Cat.html":{},"controllers/CatsController.html":{},"modules/CatsModule.html":{},"injectables/CatsService.html":{},"classes/CreateCatDto.html":{},"modules/CronModule.html":{},"injectables/CronService.html":{},"controllers/HealthController.html":{},"classes/UpdateCatDto.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":35,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/CatsController.html":{},"injectables/CatsService.html":{},"controllers/HealthController.html":{}}}],["returns",{"_index":14,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/CatsController.html":{},"injectables/CatsService.html":{},"injectables/CronService.html":{},"controllers/HealthController.html":{}}}],["rimraf",{"_index":335,"title":{},"body":{"dependencies.html":{}}}],["run",{"_index":370,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":337,"title":{},"body":{"dependencies.html":{}}}],["scalable",{"_index":359,"title":{},"body":{"index.html":{}}}],["schedulemodule",{"_index":81,"title":{},"body":{"modules/AppModule.html":{}}}],["schedulemodule.forroot",{"_index":121,"title":{},"body":{"modules/AppModule.html":{}}}],["second",{"_index":227,"title":{},"body":{"injectables/CronService.html":{}}}],["seconds",{"_index":230,"title":{},"body":{"injectables/CronService.html":{}}}],["sequence",{"_index":262,"title":{},"body":{"controllers/HealthController.html":{}}}],["server",{"_index":360,"title":{},"body":{"index.html":{}}}],["setupapp",{"_index":299,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["setupapp(app",{"_index":350,"title":{},"body":{"miscellaneous/functions.html":{}}}],["shutdown",{"_index":129,"title":{},"body":{"modules/AppModule.html":{},"controllers/HealthController.html":{}}}],["side",{"_index":361,"title":{},"body":{"index.html":{}}}],["signal",{"_index":67,"title":{},"body":{"modules/AppModule.html":{},"controllers/HealthController.html":{}}}],["source",{"_index":4,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Cat.html":{},"controllers/CatsController.html":{},"modules/CatsModule.html":{},"injectables/CatsService.html":{},"classes/CreateCatDto.html":{},"modules/CronModule.html":{},"injectables/CronService.html":{},"controllers/HealthController.html":{},"classes/UpdateCatDto.html":{},"index.html":{}}}],["sponsors",{"_index":387,"title":{},"body":{"index.html":{}}}],["sqlite",{"_index":115,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["sqlite3",{"_index":339,"title":{},"body":{"dependencies.html":{}}}],["src/.../app.module.ts",{"_index":413,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../main.ts",{"_index":347,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/app.controller.ts",{"_index":6,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app.controller.ts:15",{"_index":13,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.module.ts",{"_index":57,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app.module.ts:53",{"_index":71,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.module.ts:57",{"_index":62,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.service.ts",{"_index":132,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["src/app.service.ts:5",{"_index":133,"title":{},"body":{"injectables/AppService.html":{}}}],["src/cats/cats.controller.ts",{"_index":140,"title":{},"body":{"controllers/CatsController.html":{},"coverage.html":{}}}],["src/cats/cats.controller.ts:17",{"_index":149,"title":{},"body":{"controllers/CatsController.html":{}}}],["src/cats/cats.controller.ts:22",{"_index":150,"title":{},"body":{"controllers/CatsController.html":{}}}],["src/cats/cats.controller.ts:27",{"_index":153,"title":{},"body":{"controllers/CatsController.html":{}}}],["src/cats/cats.controller.ts:32",{"_index":161,"title":{},"body":{"controllers/CatsController.html":{}}}],["src/cats/cats.controller.ts:37",{"_index":157,"title":{},"body":{"controllers/CatsController.html":{}}}],["src/cats/cats.module.ts",{"_index":185,"title":{},"body":{"modules/CatsModule.html":{}}}],["src/cats/cats.service.ts",{"_index":187,"title":{},"body":{"injectables/CatsService.html":{},"coverage.html":{}}}],["src/cats/cats.service.ts:12",{"_index":189,"title":{},"body":{"injectables/CatsService.html":{}}}],["src/cats/cats.service.ts:16",{"_index":191,"title":{},"body":{"injectables/CatsService.html":{}}}],["src/cats/cats.service.ts:20",{"_index":193,"title":{},"body":{"injectables/CatsService.html":{}}}],["src/cats/cats.service.ts:24",{"_index":192,"title":{},"body":{"injectables/CatsService.html":{}}}],["src/cats/cats.service.ts:8",{"_index":188,"title":{},"body":{"injectables/CatsService.html":{}}}],["src/cats/datum/cat.entity.ts",{"_index":138,"title":{},"body":{"classes/Cat.html":{},"coverage.html":{}}}],["src/cats/datum/create",{"_index":199,"title":{},"body":{"classes/CreateCatDto.html":{},"coverage.html":{}}}],["src/cats/datum/update",{"_index":280,"title":{},"body":{"classes/UpdateCatDto.html":{},"coverage.html":{}}}],["src/cron/cron.module",{"_index":87,"title":{},"body":{"modules/AppModule.html":{}}}],["src/cron/cron.module.ts",{"_index":204,"title":{},"body":{"modules/CronModule.html":{}}}],["src/cron/cron.service",{"_index":205,"title":{},"body":{"modules/CronModule.html":{}}}],["src/cron/cron.service.ts",{"_index":206,"title":{},"body":{"injectables/CronService.html":{},"coverage.html":{}}}],["src/cron/cron.service.ts:14",{"_index":216,"title":{},"body":{"injectables/CronService.html":{}}}],["src/cron/cron.service.ts:19",{"_index":218,"title":{},"body":{"injectables/CronService.html":{}}}],["src/cron/cron.service.ts:6",{"_index":222,"title":{},"body":{"injectables/CronService.html":{}}}],["src/cron/cron.service.ts:9",{"_index":214,"title":{},"body":{"injectables/CronService.html":{}}}],["src/health/health.controller",{"_index":88,"title":{},"body":{"modules/AppModule.html":{}}}],["src/health/health.controller.ts",{"_index":233,"title":{},"body":{"controllers/HealthController.html":{},"coverage.html":{}}}],["src/health/health.controller.ts:27",{"_index":237,"title":{},"body":{"controllers/HealthController.html":{}}}],["src/health/health.controller.ts:41",{"_index":239,"title":{},"body":{"controllers/HealthController.html":{}}}],["src/health/health.controller.ts:47",{"_index":238,"title":{},"body":{"controllers/HealthController.html":{}}}],["src/main.ts",{"_index":297,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["start",{"_index":371,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":374,"title":{},"body":{"index.html":{}}}],["start:prodtest",{"_index":375,"title":{},"body":{"index.html":{}}}],["started",{"_index":353,"title":{"index.html":{}},"body":{}}],["starter",{"_index":364,"title":{},"body":{"index.html":{}}}],["statements",{"_index":289,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":31,"title":{},"body":{"controllers/AppController.html":{},"controllers/CatsController.html":{}}}],["stay",{"_index":397,"title":{},"body":{"index.html":{}}}],["string",{"_index":15,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/CatsController.html":{},"injectables/CatsService.html":{},"controllers/HealthController.html":{}}}],["support",{"_index":388,"title":{},"body":{"index.html":{},"modules.html":{}}}],["svg",{"_index":408,"title":{},"body":{"modules.html":{}}}],["swagger",{"_index":341,"title":{},"body":{"dependencies.html":{}}}],["synchronize",{"_index":118,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["table",{"_index":301,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":300,"title":{},"body":{"coverage.html":{}}}],["termination",{"_index":257,"title":{},"body":{"controllers/HealthController.html":{}}}],["terminusmodule",{"_index":83,"title":{},"body":{"modules/AppModule.html":{}}}],["test",{"_index":109,"title":{},"body":{"modules/AppModule.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["test:covsupport",{"_index":380,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":379,"title":{},"body":{"index.html":{}}}],["tests",{"_index":377,"title":{},"body":{"index.html":{}}}],["thanks",{"_index":386,"title":{},"body":{"index.html":{}}}],["this.appservice.gethello",{"_index":36,"title":{},"body":{"controllers/AppController.html":{}}}],["this.catsservice.create(createcatdto",{"_index":175,"title":{},"body":{"controllers/CatsController.html":{}}}],["this.catsservice.findall",{"_index":176,"title":{},"body":{"controllers/CatsController.html":{}}}],["this.catsservice.findone(+id",{"_index":178,"title":{},"body":{"controllers/CatsController.html":{}}}],["this.catsservice.remove(+id",{"_index":182,"title":{},"body":{"controllers/CatsController.html":{}}}],["this.catsservice.update(+id",{"_index":180,"title":{},"body":{"controllers/CatsController.html":{}}}],["this.config.get('node_env",{"_index":278,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.dns.pingcheck('nestjs",{"_index":252,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.health.check",{"_index":251,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.logger.debug('called",{"_index":226,"title":{},"body":{"injectables/CronService.html":{}}}],["timeout",{"_index":225,"title":{},"body":{"injectables/CronService.html":{}}}],["timeout(50000",{"_index":217,"title":{},"body":{"injectables/CronService.html":{}}}],["touch",{"_index":398,"title":{},"body":{"index.html":{}}}],["transformer",{"_index":320,"title":{},"body":{"dependencies.html":{}}}],["true",{"_index":96,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["twitter",{"_index":404,"title":{},"body":{"index.html":{}}}],["type",{"_index":65,"title":{},"body":{"modules/AppModule.html":{},"controllers/CatsController.html":{},"injectables/CatsService.html":{},"controllers/HealthController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["typeorm",{"_index":319,"title":{},"body":{"dependencies.html":{}}}],["typeormmodule",{"_index":85,"title":{},"body":{"modules/AppModule.html":{}}}],["typeormmodule.forroot(typeormmoduleoptions",{"_index":123,"title":{},"body":{"modules/AppModule.html":{}}}],["typeormmoduleoptions",{"_index":112,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["types",{"_index":283,"title":{},"body":{"classes/UpdateCatDto.html":{},"dependencies.html":{}}}],["typescript",{"_index":72,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["ui",{"_index":342,"title":{},"body":{"dependencies.html":{}}}],["unit",{"_index":376,"title":{},"body":{"index.html":{}}}],["unsafe",{"_index":74,"title":{},"body":{"modules/AppModule.html":{}}}],["until",{"_index":274,"title":{},"body":{"controllers/HealthController.html":{}}}],["update",{"_index":145,"title":{},"body":{"controllers/CatsController.html":{},"injectables/CatsService.html":{}}}],["update(@param('id",{"_index":179,"title":{},"body":{"controllers/CatsController.html":{}}}],["update(id",{"_index":158,"title":{},"body":{"controllers/CatsController.html":{},"injectables/CatsService.html":{}}}],["updatecatdto",{"_index":159,"title":{"classes/UpdateCatDto.html":{}},"body":{"controllers/CatsController.html":{},"injectables/CatsService.html":{},"classes/UpdateCatDto.html":{},"coverage.html":{}}}],["updates",{"_index":197,"title":{},"body":{"injectables/CatsService.html":{}}}],["use",{"_index":18,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/CatsController.html":{},"controllers/HealthController.html":{}}}],["valid('development",{"_index":107,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["validationoptions",{"_index":97,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["validationschema",{"_index":100,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["validator",{"_index":322,"title":{},"body":{"dependencies.html":{}}}],["value",{"_index":220,"title":{},"body":{"injectables/CronService.html":{},"miscellaneous/variables.html":{}}}],["variable",{"_index":292,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":412,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["void",{"_index":69,"title":{},"body":{"modules/AppModule.html":{},"injectables/CronService.html":{},"controllers/HealthController.html":{}}}],["watch",{"_index":372,"title":{},"body":{"index.html":{}}}],["website",{"_index":402,"title":{},"body":{"index.html":{}}}],["world",{"_index":135,"title":{},"body":{"injectables/AppService.html":{}}}],["yes",{"_index":68,"title":{},"body":{"modules/AppModule.html":{},"controllers/HealthController.html":{}}}],["you'd",{"_index":391,"title":{},"body":{"index.html":{}}}],["zoom",{"_index":54,"title":{},"body":{"modules/AppModule.html":{},"modules/CatsModule.html":{},"modules/CronModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getHello\n                        \n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/app.controller.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        /* eslint-disable no-use-before-define */\nimport { Controller, Get } from '@nestjs/common'\nimport { ApiTags } from '@nestjs/swagger'\n\nimport { AppService } from './app.service'\n\n@Controller(AppController.path)\n@ApiTags(AppController.name)\nexport class AppController {\n    static path = '/'\n\n    constructor(private readonly appService: AppService) {}\n\n    @Get()\n    getHello(): string {\n        return this.appService.getHello()\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AppModule_imports\n\n\n\n\nCatsModule\n\nCatsModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nCatsModule->AppModule\n\n\n\n\n\nCronModule\n\nCronModule\n\nAppModule -->\n\nCronModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                        \n                            HealthController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            CatsModule\n                        \n                        \n                            CronModule\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onApplicationShutdown\n                        \n                        \n                    \n                \n            \n            \n                \nonApplicationShutdown(signal?: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app.module.ts:57\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    signal\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onModuleInit\n                        \n                        \n                    \n                \n            \n            \n                \nonModuleInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app.module.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        /* eslint-disable @typescript-eslint/no-unsafe-assignment,@typescript-eslint/no-unsafe-call,@typescript-eslint/no-unsafe-member-access,no-use-before-define */\nimport { Module, OnApplicationShutdown, OnModuleInit } from '@nestjs/common'\nimport { ConfigModule } from '@nestjs/config'\nimport { ScheduleModule } from '@nestjs/schedule'\nimport { TerminusModule } from '@nestjs/terminus'\nimport { TypeOrmModule } from '@nestjs/typeorm'\n\nimport { CronModule } from 'src/cron/cron.module'\nimport { HealthController } from 'src/health/health.controller'\n\nimport * as Joi from '@hapi/joi'\n\nimport { AppController } from './app.controller'\nimport { AppService } from './app.service'\nimport { CatsModule } from './cats/cats.module'\n\nconst ConfigModuleOptions = {\n    isGlobal: true,\n    validationOptions: {\n        allowUnknown: true,\n        abortEarly: true,\n    },\n    validationSchema: Joi.object({\n        PORT: Joi.number().default(3000),\n        NODE_ENV: Joi.string()\n            .required()\n            .valid('development', 'production', 'test', 'provision')\n            .default('development'),\n    }),\n}\n\nconst TypeOrmModuleOptions = {\n    entities: [`${__dirname}/**/*.entity.{ts,js}`],\n    type: 'sqlite' as const,\n    database: 'database.sqlite',\n    synchronize: true,\n    logging: true,\n}\n\n@Module({\n    controllers: [AppController, HealthController],\n    imports: [\n        ConfigModule.forRoot(ConfigModuleOptions),\n        ScheduleModule.forRoot(),\n        CronModule,\n        TerminusModule, // Health module\n        TypeOrmModule.forRoot(TypeOrmModuleOptions),\n        CatsModule,\n    ],\n    providers: [AppService],\n})\nexport class AppModule implements OnModuleInit, OnApplicationShutdown {\n    onModuleInit(): void {\n        console.info(`ModuleInit - AppModule has been initialized.`)\n    }\n\n    onApplicationShutdown(signal?: string): void {\n        console.error(\n            `ApplicationShutdown - AppModule has been shutdown with ${signal} signal`,\n        )\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getHello\n                        \n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n            \n                \n                    Defined in src/app.service.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common'\n\n@Injectable()\nexport class AppService {\n    getHello(): string {\n        return 'Hello World!'\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Cat.html":{"url":"classes/Cat.html","title":"class - Cat","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Cat\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/cats/datum/cat.entity.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Cat {}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/CatsController.html":{"url":"controllers/CatsController.html","title":"controller - CatsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  CatsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/cats/cats.controller.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                remove\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            create\n                        \n                        \n                    \n                \n            \n            \n                \ncreate(createCatDto: CreateCatDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n            \n                \n                    Defined in src/cats/cats.controller.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createCatDto\n                                    \n                                                CreateCatDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            findAll\n                        \n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/cats/cats.controller.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            findOne\n                        \n                        \n                    \n                \n            \n            \n                \nfindOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n            \n                \n                    Defined in src/cats/cats.controller.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            remove\n                        \n                        \n                    \n                \n            \n            \n                \nremove(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n            \n                \n                    Defined in src/cats/cats.controller.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            update\n                        \n                        \n                    \n                \n            \n            \n                \nupdate(id: string, updateCatDto: UpdateCatDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Put(':id')\n                \n            \n\n            \n                \n                    Defined in src/cats/cats.controller.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateCatDto\n                                    \n                                                UpdateCatDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        /* eslint-disable no-use-before-define */\nimport { Controller, Get, Post, Body, Put, Param, Delete } from '@nestjs/common'\nimport { ApiTags } from '@nestjs/swagger'\n\nimport { CatsService } from './cats.service'\nimport { CreateCatDto } from './datum/create-cat.dto'\nimport { UpdateCatDto } from './datum/update-cat.dto'\n\n@Controller(CatsController.path)\n@ApiTags(CatsController.name)\nexport class CatsController {\n    static path = 'cats'\n\n    constructor(private readonly catsService: CatsService) {}\n\n    @Post()\n    create(@Body() createCatDto: CreateCatDto) {\n        return this.catsService.create(createCatDto)\n    }\n\n    @Get()\n    findAll() {\n        return this.catsService.findAll()\n    }\n\n    @Get(':id')\n    findOne(@Param('id') id: string) {\n        return this.catsService.findOne(+id)\n    }\n\n    @Put(':id')\n    update(@Param('id') id: string, @Body() updateCatDto: UpdateCatDto) {\n        return this.catsService.update(+id, updateCatDto)\n    }\n\n    @Delete(':id')\n    remove(@Param('id') id: string) {\n        return this.catsService.remove(+id)\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CatsModule.html":{"url":"modules/CatsModule.html","title":"module - CatsModule","body":"\n                   \n\n\n\n\n    Modules\n    CatsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_CatsModule\n\n\n\ncluster_CatsModule_providers\n\n\n\n\nCatsService\n\nCatsService\n\n\n\nCatsModule\n\nCatsModule\n\nCatsModule -->\n\nCatsService->CatsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/cats/cats.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            CatsService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            CatsController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common'\n\nimport { CatsController } from './cats.controller'\nimport { CatsService } from './cats.service'\n\n@Module({\n    controllers: [CatsController],\n    providers: [CatsService],\n})\nexport class CatsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CatsService.html":{"url":"injectables/CatsService.html","title":"injectable - CatsService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  CatsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/cats/cats.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                remove\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            create\n                        \n                        \n                    \n                \n            \n            \n                \ncreate(createCatDto: CreateCatDto)\n                \n            \n\n\n            \n                \n                    Defined in src/cats/cats.service.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createCatDto\n                                    \n                                                CreateCatDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            findAll\n                        \n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n\n            \n                \n                    Defined in src/cats/cats.service.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            findOne\n                        \n                        \n                    \n                \n            \n            \n                \nfindOne(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/cats/cats.service.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            remove\n                        \n                        \n                    \n                \n            \n            \n                \nremove(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/cats/cats.service.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            update\n                        \n                        \n                    \n                \n            \n            \n                \nupdate(id: number, updateCatDto: UpdateCatDto)\n                \n            \n\n\n            \n                \n                    Defined in src/cats/cats.service.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateCatDto\n                                    \n                                                UpdateCatDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common'\n\nimport { CreateCatDto } from './datum/create-cat.dto'\nimport { UpdateCatDto } from './datum/update-cat.dto'\n\n@Injectable()\nexport class CatsService {\n    create(createCatDto: CreateCatDto) {\n        return 'This action adds a new cat'\n    }\n\n    findAll() {\n        return `This action returns all cats`\n    }\n\n    findOne(id: number) {\n        return `This action returns a #${id} cat`\n    }\n\n    update(id: number, updateCatDto: UpdateCatDto) {\n        return `This action updates a #${id} cat`\n    }\n\n    remove(id: number) {\n        return `This action removes a #${id} cat`\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateCatDto.html":{"url":"classes/CreateCatDto.html","title":"class - CreateCatDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateCatDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/cats/datum/cat.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class CreateCatDto {}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CronModule.html":{"url":"modules/CronModule.html","title":"module - CronModule","body":"\n                   \n\n\n\n\n    Modules\n    CronModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_CronModule\n\n\n\ncluster_CronModule_providers\n\n\n\n\nCronService\n\nCronService\n\n\n\nCronModule\n\nCronModule\n\nCronModule -->\n\nCronService->CronModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/cron/cron.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            CronService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common'\n\nimport { CronService } from 'src/cron/cron.service'\n\n@Module({\n    providers: [CronService],\n})\nexport class CronModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CronService.html":{"url":"injectables/CronService.html","title":"injectable - CronService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  CronService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/cron/cron.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                handleCron\n                            \n                            \n                                handleInterval\n                            \n                            \n                                handleTimeout\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            handleCron\n                        \n                        \n                    \n                \n            \n            \n                \nhandleCron()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Cron('60 * * * * *')\n                \n            \n\n            \n                \n                    Defined in src/cron/cron.service.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            handleInterval\n                        \n                        \n                    \n                \n            \n            \n                \nhandleInterval()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Interval(100000)\n                \n            \n\n            \n                \n                    Defined in src/cron/cron.service.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            handleTimeout\n                        \n                        \n                    \n                \n            \n            \n                \nhandleTimeout()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Timeout(50000)\n                \n            \n\n            \n                \n                    Defined in src/cron/cron.service.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            logger\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Logger(CronService.name)\n                        \n                    \n                        \n                            \n                                    Defined in src/cron/cron.service.ts:6\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable, Logger } from '@nestjs/common'\nimport { Cron, Interval, Timeout } from '@nestjs/schedule'\n\n@Injectable()\nexport class CronService {\n    private readonly logger = new Logger(CronService.name)\n\n    @Cron('60 * * * * *')\n    handleCron() {\n        this.logger.debug('Called when the second is 60')\n    }\n\n    @Interval(100000)\n    handleInterval() {\n        this.logger.debug('Called every 100 seconds')\n    }\n\n    @Timeout(50000)\n    handleTimeout() {\n        this.logger.debug('Called once after 50 seconds')\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/HealthController.html":{"url":"controllers/HealthController.html","title":"controller - HealthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  HealthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/health/health.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                health\n            \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                check\n                            \n                            \n                                onApplicationShutdown\n                            \n                            \n                                onModuleInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            check\n                        \n                        \n                    \n                \n            \n            \n                \ncheck()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@HealthCheck()\n                \n            \n\n            \n                \n                    Defined in src/health/health.controller.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onApplicationShutdown\n                        \n                        \n                    \n                \n            \n            \n                \nonApplicationShutdown(signal?: string)\n                \n            \n\n\n            \n                \n                    Defined in src/health/health.controller.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    signal\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onModuleInit\n                        \n                        \n                    \n                \n            \n            \n                \nonModuleInit()\n                \n            \n\n\n            \n                \n                    Defined in src/health/health.controller.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n    Controller,\n    Get,\n    OnApplicationShutdown,\n    OnModuleInit,\n} from '@nestjs/common'\nimport { ConfigService } from '@nestjs/config'\nimport { ApiTags } from '@nestjs/swagger'\nimport {\n    DNSHealthIndicator,\n    HealthCheck,\n    HealthCheckService,\n} from '@nestjs/terminus'\n\n// eslint-disable-next-line no-use-before-define\n@ApiTags(HealthController.name)\n@Controller('health')\nexport class HealthController implements OnModuleInit, OnApplicationShutdown {\n    constructor(\n        private health: HealthCheckService,\n        private dns: DNSHealthIndicator,\n        private config: ConfigService,\n    ) {}\n\n    @Get()\n    @HealthCheck()\n    check() {\n        return this.health.check([\n            () => this.dns.pingCheck('nestjs-docs', 'https://docs.nestjs.com'),\n        ])\n    }\n\n    /*\n     * When the application receives a termination signal it will call any registered\n     * onModuleDestroy(), beforeApplicationShutdown(), then onApplicationShutdown() methods\n     * (in the sequence described above) with the corresponding signal as the first parameter.\n     * If a registered function awaits an asynchronous call (returns a promise), Nest will not\n     * continue in the sequence until the promise is resolved or rejected.\n     */\n\n    onModuleInit(): void {\n        console.log(`ModuleInit - HealthController has been initialized.`, {\n            config: this.config.get('NODE_ENV'),\n        })\n    }\n\n    onApplicationShutdown(signal?: string): void {\n        console.log(\n            `ApplicationShutdown - HealthController has been shutdown with ${signal} signal`,\n        )\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateCatDto.html":{"url":"classes/UpdateCatDto.html","title":"class - UpdateCatDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateCatDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/cats/datum/update-cat.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/mapped-types'\n\nimport { CreateCatDto } from './create-cat.dto'\n\nexport class UpdateCatDto extends PartialType(CreateCatDto) {}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app.controller.ts\n            \n            controller\n            AppController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app.module.ts\n            \n            variable\n            ConfigModuleOptions\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app.module.ts\n            \n            variable\n            TypeOrmModuleOptions\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app.service.ts\n            \n            injectable\n            AppService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/cats/cats.controller.ts\n            \n            controller\n            CatsController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/cats/cats.service.ts\n            \n            injectable\n            CatsService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/cats/datum/cat.entity.ts\n            \n            class\n            Cat\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/cats/datum/cat.dto.ts\n            \n            class\n            CreateCatDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/cats/datum/update-cat.dto.ts\n            \n            class\n            UpdateCatDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/cron/cron.service.ts\n            \n            injectable\n            CronService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/health/health.controller.ts\n            \n            controller\n            HealthController\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            createSwagger\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            setupApp\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @hapi/joi : ^17.1.1\n        \n            @nestjs/common : ^7.5.1\n        \n            @nestjs/config : ^0.6.1\n        \n            @nestjs/core : ^7.5.1\n        \n            @nestjs/mapped-types : ^0.1.1\n        \n            @nestjs/passport : ^7.1.3\n        \n            @nestjs/platform-express : ^7.5.1\n        \n            @nestjs/schedule : ^0.4.1\n        \n            @nestjs/swagger : ^4.7.5\n        \n            @nestjs/terminus : ^7.0.1\n        \n            @nestjs/typeorm : ^7.1.5\n        \n            @nestjsx/crud : ^4.6.2\n        \n            @nestjsx/crud-request : ^4.6.2\n        \n            @nestjsx/crud-typeorm : ^4.6.2\n        \n            class-transformer : ^0.3.1\n        \n            class-validator : ^0.12.2\n        \n            express-rate-limit : ^5.2.3\n        \n            helmet : ^4.2.0\n        \n            passport : ^0.4.1\n        \n            passport-local : ^1.0.0\n        \n            reflect-metadata : ^0.1.13\n        \n            rimraf : ^3.0.2\n        \n            rxjs : ^6.6.3\n        \n            sqlite3 : ^5.0.0\n        \n            swagger-ui-express : ^4.1.5\n        \n            typeorm : ^0.2.29\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                        \n                            createSwagger   (src/.../main.ts)\n                        \n                        \n                            setupApp   (src/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            bootstrap\n                        \n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createSwagger\n                        \n                        \n                    \n                \n            \n            \n                \ncreateSwagger(app)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    app\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setupApp\n                        \n                        \n                    \n                \n            \n            \n                \nsetupApp(app, API_DEFAULT_PORT)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    app\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    API_DEFAULT_PORT\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n  A progressive Node.js framework for building efficient and scalable server-side applications.\n    \n\n\n\n\n\n\n\n\n  \n    \n  \n\n  \n\nDescription\nNest framework TypeScript starter repository.\nInstallation\n$ npm installRunning the app\n# development\n$ npm run start\n\n# watch mode\n$ npm run start:dev\n\n# production mode\n$ npm run start:prodTest\n# unit tests\n$ npm run test\n\n# e2e tests\n$ npm run test:e2e\n\n# test coverage\n$ npm run test:covSupport\nNest is an MIT-licensed open source project. It can grow thanks to the sponsors and support by the amazing backers. If you'd like to join them, please read more here.\nStay in touch\n\nAuthor - Kamil Myśliwiec\nWebsite - https://nestjs.com\nTwitter - @nestframework\n\nLicense\nNest is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CatsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CronModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_CatsModule\n\n\n\ncluster_CatsModule_providers\n\n\n\ncluster_CronModule\n\n\n\ncluster_CronModule_providers\n\n\n\n\nCatsModule\n\nCatsModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nCatsModule->AppModule\n\n\n\n\n\nCronModule\n\nCronModule\n\nAppModule -->\n\nCronModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nCatsService\n\nCatsService\n\nCatsModule -->\n\nCatsService->CatsModule\n\n\n\n\n\nCronService\n\nCronService\n\nCronModule -->\n\nCronService->CronModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        3 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    3 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    3 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    3 Classes\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ConfigModuleOptions   (src/.../app.module.ts)\n                        \n                        \n                            TypeOrmModuleOptions   (src/.../app.module.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app.module.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            ConfigModuleOptions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    isGlobal: true,\n    validationOptions: {\n        allowUnknown: true,\n        abortEarly: true,\n    },\n    validationSchema: Joi.object({\n        PORT: Joi.number().default(3000),\n        NODE_ENV: Joi.string()\n            .required()\n            .valid('development', 'production', 'test', 'provision')\n            .default('development'),\n    }),\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            TypeOrmModuleOptions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    entities: [`${__dirname}/**/*.entity.{ts,js}`],\n    type: 'sqlite' as const,\n    database: 'database.sqlite',\n    synchronize: true,\n    logging: true,\n}\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
